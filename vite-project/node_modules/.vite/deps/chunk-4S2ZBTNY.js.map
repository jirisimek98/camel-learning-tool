{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/editor/common/services/treeViewsDnd.js", "../../monaco-editor/esm/vs/editor/common/services/treeViewsDndService.js", "../../monaco-editor/esm/vs/platform/files/browser/htmlFileSystemProvider.js", "../../monaco-editor/esm/vs/platform/files/browser/webFileSystemAccess.js", "../../monaco-editor/esm/vs/base/common/dataTransfer.js", "../../monaco-editor/esm/vs/editor/browser/services/webWorker.js", "../../monaco-editor/esm/vs/base/common/search.js", "../../monaco-editor/esm/vs/platform/history/browser/historyWidgetKeybindingHint.js", "../../monaco-editor/esm/vs/platform/dnd/browser/dnd.js"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class TreeViewsDnDService {\n    constructor() {\n        this._dragOperations = new Map();\n    }\n    removeDragOperationTransfer(uuid) {\n        if ((uuid && this._dragOperations.has(uuid))) {\n            const operation = this._dragOperations.get(uuid);\n            this._dragOperations.delete(uuid);\n            return operation;\n        }\n        return undefined;\n    }\n    addDragOperationTransfer(uuid, transferPromise) {\n        this._dragOperations.set(uuid, transferPromise);\n    }\n}\nexport class DraggedTreeItemsIdentifier {\n    constructor(identifier) {\n        this.identifier = identifier;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { TreeViewsDnDService } from './treeViewsDnd.js';\nexport const ITreeViewsDnDService = createDecorator('treeViewsDndService');\nregisterSingleton(ITreeViewsDnDService, TreeViewsDnDService, 1 /* InstantiationType.Delayed */);\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { localize } from '../../../nls.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { VSBuffer } from '../../../base/common/buffer.js';\nimport { Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { basename, extname, normalize } from '../../../base/common/path.js';\nimport { isLinux } from '../../../base/common/platform.js';\nimport { extUri, extUriIgnorePathCase } from '../../../base/common/resources.js';\nimport { newWriteableStream } from '../../../base/common/stream.js';\nimport { createFileSystemProviderError, FileSystemProviderError, FileSystemProviderErrorCode, FileType } from '../common/files.js';\nimport { WebFileSystemAccess } from './webFileSystemAccess.js';\nexport class HTMLFileSystemProvider {\n    get capabilities() {\n        if (!this._capabilities) {\n            this._capabilities =\n                2 /* FileSystemProviderCapabilities.FileReadWrite */ |\n                    16 /* FileSystemProviderCapabilities.FileReadStream */;\n            if (isLinux) {\n                this._capabilities |= 1024 /* FileSystemProviderCapabilities.PathCaseSensitive */;\n            }\n        }\n        return this._capabilities;\n    }\n    //#endregion\n    constructor(indexedDB, store, logService) {\n        this.indexedDB = indexedDB;\n        this.store = store;\n        this.logService = logService;\n        //#region Events (unsupported)\n        this.onDidChangeCapabilities = Event.None;\n        this.onDidChangeFile = Event.None;\n        //#endregion\n        //#region File Capabilities\n        this.extUri = isLinux ? extUri : extUriIgnorePathCase;\n        //#endregion\n        //#region File/Directoy Handle Registry\n        this._files = new Map();\n        this._directories = new Map();\n    }\n    //#region File Metadata Resolving\n    stat(resource) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const handle = yield this.getHandle(resource);\n                if (!handle) {\n                    throw this.createFileSystemProviderError(resource, 'No such file or directory, stat', FileSystemProviderErrorCode.FileNotFound);\n                }\n                if (WebFileSystemAccess.isFileSystemFileHandle(handle)) {\n                    const file = yield handle.getFile();\n                    return {\n                        type: FileType.File,\n                        mtime: file.lastModified,\n                        ctime: 0,\n                        size: file.size\n                    };\n                }\n                return {\n                    type: FileType.Directory,\n                    mtime: 0,\n                    ctime: 0,\n                    size: 0\n                };\n            }\n            catch (error) {\n                throw this.toFileSystemProviderError(error);\n            }\n        });\n    }\n    readdir(resource) {\n        var _a, e_1, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const handle = yield this.getDirectoryHandle(resource);\n                if (!handle) {\n                    throw this.createFileSystemProviderError(resource, 'No such file or directory, readdir', FileSystemProviderErrorCode.FileNotFound);\n                }\n                const result = [];\n                try {\n                    for (var _d = true, handle_1 = __asyncValues(handle), handle_1_1; handle_1_1 = yield handle_1.next(), _a = handle_1_1.done, !_a; _d = true) {\n                        _c = handle_1_1.value;\n                        _d = false;\n                        const [name, child] = _c;\n                        result.push([name, WebFileSystemAccess.isFileSystemFileHandle(child) ? FileType.File : FileType.Directory]);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (!_d && !_a && (_b = handle_1.return)) yield _b.call(handle_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                return result;\n            }\n            catch (error) {\n                throw this.toFileSystemProviderError(error);\n            }\n        });\n    }\n    //#endregion\n    //#region File Reading/Writing\n    readFileStream(resource, opts, token) {\n        const stream = newWriteableStream(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer, {\n            // Set a highWaterMark to prevent the stream\n            // for file upload to produce large buffers\n            // in-memory\n            highWaterMark: 10\n        });\n        (() => __awaiter(this, void 0, void 0, function* () {\n            try {\n                const handle = yield this.getFileHandle(resource);\n                if (!handle) {\n                    throw this.createFileSystemProviderError(resource, 'No such file or directory, readFile', FileSystemProviderErrorCode.FileNotFound);\n                }\n                const file = yield handle.getFile();\n                // Partial file: implemented simply via `readFile`\n                if (typeof opts.length === 'number' || typeof opts.position === 'number') {\n                    let buffer = new Uint8Array(yield file.arrayBuffer());\n                    if (typeof (opts === null || opts === void 0 ? void 0 : opts.position) === 'number') {\n                        buffer = buffer.slice(opts.position);\n                    }\n                    if (typeof (opts === null || opts === void 0 ? void 0 : opts.length) === 'number') {\n                        buffer = buffer.slice(0, opts.length);\n                    }\n                    stream.end(buffer);\n                }\n                // Entire file\n                else {\n                    const reader = file.stream().getReader();\n                    let res = yield reader.read();\n                    while (!res.done) {\n                        if (token.isCancellationRequested) {\n                            break;\n                        }\n                        // Write buffer into stream but make sure to wait\n                        // in case the `highWaterMark` is reached\n                        yield stream.write(res.value);\n                        if (token.isCancellationRequested) {\n                            break;\n                        }\n                        res = yield reader.read();\n                    }\n                    stream.end(undefined);\n                }\n            }\n            catch (error) {\n                stream.error(this.toFileSystemProviderError(error));\n                stream.end();\n            }\n        }))();\n        return stream;\n    }\n    readFile(resource) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const handle = yield this.getFileHandle(resource);\n                if (!handle) {\n                    throw this.createFileSystemProviderError(resource, 'No such file or directory, readFile', FileSystemProviderErrorCode.FileNotFound);\n                }\n                const file = yield handle.getFile();\n                return new Uint8Array(yield file.arrayBuffer());\n            }\n            catch (error) {\n                throw this.toFileSystemProviderError(error);\n            }\n        });\n    }\n    writeFile(resource, content, opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let handle = yield this.getFileHandle(resource);\n                // Validate target unless { create: true, overwrite: true }\n                if (!opts.create || !opts.overwrite) {\n                    if (handle) {\n                        if (!opts.overwrite) {\n                            throw this.createFileSystemProviderError(resource, 'File already exists, writeFile', FileSystemProviderErrorCode.FileExists);\n                        }\n                    }\n                    else {\n                        if (!opts.create) {\n                            throw this.createFileSystemProviderError(resource, 'No such file, writeFile', FileSystemProviderErrorCode.FileNotFound);\n                        }\n                    }\n                }\n                // Create target as needed\n                if (!handle) {\n                    const parent = yield this.getDirectoryHandle(this.extUri.dirname(resource));\n                    if (!parent) {\n                        throw this.createFileSystemProviderError(resource, 'No such parent directory, writeFile', FileSystemProviderErrorCode.FileNotFound);\n                    }\n                    handle = yield parent.getFileHandle(this.extUri.basename(resource), { create: true });\n                    if (!handle) {\n                        throw this.createFileSystemProviderError(resource, 'Unable to create file , writeFile', FileSystemProviderErrorCode.Unknown);\n                    }\n                }\n                // Write to target overwriting any existing contents\n                const writable = yield handle.createWritable();\n                yield writable.write(content);\n                yield writable.close();\n            }\n            catch (error) {\n                throw this.toFileSystemProviderError(error);\n            }\n        });\n    }\n    //#endregion\n    //#region Move/Copy/Delete/Create Folder\n    mkdir(resource) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const parent = yield this.getDirectoryHandle(this.extUri.dirname(resource));\n                if (!parent) {\n                    throw this.createFileSystemProviderError(resource, 'No such parent directory, mkdir', FileSystemProviderErrorCode.FileNotFound);\n                }\n                yield parent.getDirectoryHandle(this.extUri.basename(resource), { create: true });\n            }\n            catch (error) {\n                throw this.toFileSystemProviderError(error);\n            }\n        });\n    }\n    delete(resource, opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const parent = yield this.getDirectoryHandle(this.extUri.dirname(resource));\n                if (!parent) {\n                    throw this.createFileSystemProviderError(resource, 'No such parent directory, delete', FileSystemProviderErrorCode.FileNotFound);\n                }\n                return parent.removeEntry(this.extUri.basename(resource), { recursive: opts.recursive });\n            }\n            catch (error) {\n                throw this.toFileSystemProviderError(error);\n            }\n        });\n    }\n    rename(from, to, opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.extUri.isEqual(from, to)) {\n                    return; // no-op if the paths are the same\n                }\n                // Implement file rename by write + delete\n                const fileHandle = yield this.getFileHandle(from);\n                if (fileHandle) {\n                    const file = yield fileHandle.getFile();\n                    const contents = new Uint8Array(yield file.arrayBuffer());\n                    yield this.writeFile(to, contents, { create: true, overwrite: opts.overwrite, unlock: false, atomic: false });\n                    yield this.delete(from, { recursive: false, useTrash: false, atomic: false });\n                }\n                // File API does not support any real rename otherwise\n                else {\n                    throw this.createFileSystemProviderError(from, localize('fileSystemRenameError', \"Rename is only supported for files.\"), FileSystemProviderErrorCode.Unavailable);\n                }\n            }\n            catch (error) {\n                throw this.toFileSystemProviderError(error);\n            }\n        });\n    }\n    //#endregion\n    //#region File Watching (unsupported)\n    watch(resource, opts) {\n        return Disposable.None;\n    }\n    registerFileHandle(handle) {\n        return this.registerHandle(handle, this._files);\n    }\n    registerDirectoryHandle(handle) {\n        return this.registerHandle(handle, this._directories);\n    }\n    get directories() {\n        return this._directories.values();\n    }\n    registerHandle(handle, map) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            let handleId = `/${handle.name}`;\n            // Compute a valid handle ID in case this exists already\n            if (map.has(handleId) && !(yield ((_a = map.get(handleId)) === null || _a === void 0 ? void 0 : _a.isSameEntry(handle)))) {\n                const fileExt = extname(handle.name);\n                const fileName = basename(handle.name, fileExt);\n                let handleIdCounter = 1;\n                do {\n                    handleId = `/${fileName}-${handleIdCounter++}${fileExt}`;\n                } while (map.has(handleId) && !(yield ((_b = map.get(handleId)) === null || _b === void 0 ? void 0 : _b.isSameEntry(handle))));\n            }\n            map.set(handleId, handle);\n            // Remember in IndexDB for future lookup\n            try {\n                yield ((_c = this.indexedDB) === null || _c === void 0 ? void 0 : _c.runInTransaction(this.store, 'readwrite', objectStore => objectStore.put(handle, handleId)));\n            }\n            catch (error) {\n                this.logService.error(error);\n            }\n            return URI.from({ scheme: Schemas.file, path: handleId });\n        });\n    }\n    getHandle(resource) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // First: try to find a well known handle first\n            let handle = yield this.doGetHandle(resource);\n            // Second: walk up parent directories and resolve handle if possible\n            if (!handle) {\n                const parent = yield this.getDirectoryHandle(this.extUri.dirname(resource));\n                if (parent) {\n                    const name = extUri.basename(resource);\n                    try {\n                        handle = yield parent.getFileHandle(name);\n                    }\n                    catch (error) {\n                        try {\n                            handle = yield parent.getDirectoryHandle(name);\n                        }\n                        catch (error) {\n                            // Ignore\n                        }\n                    }\n                }\n            }\n            return handle;\n        });\n    }\n    getFileHandle(resource) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const handle = yield this.doGetHandle(resource);\n            if (handle instanceof FileSystemFileHandle) {\n                return handle;\n            }\n            const parent = yield this.getDirectoryHandle(this.extUri.dirname(resource));\n            try {\n                return yield (parent === null || parent === void 0 ? void 0 : parent.getFileHandle(extUri.basename(resource)));\n            }\n            catch (error) {\n                return undefined; // guard against possible DOMException\n            }\n        });\n    }\n    getDirectoryHandle(resource) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const handle = yield this.doGetHandle(resource);\n            if (handle instanceof FileSystemDirectoryHandle) {\n                return handle;\n            }\n            const parentUri = this.extUri.dirname(resource);\n            if (this.extUri.isEqual(parentUri, resource)) {\n                return undefined; // return when root is reached to prevent infinite recursion\n            }\n            const parent = yield this.getDirectoryHandle(parentUri);\n            try {\n                return yield (parent === null || parent === void 0 ? void 0 : parent.getDirectoryHandle(extUri.basename(resource)));\n            }\n            catch (error) {\n                return undefined; // guard against possible DOMException\n            }\n        });\n    }\n    doGetHandle(resource) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            // We store file system handles with the `handle.name`\n            // and as such require the resource to be on the root\n            if (this.extUri.dirname(resource).path !== '/') {\n                return undefined;\n            }\n            const handleId = resource.path.replace(/\\/$/, ''); // remove potential slash from the end of the path\n            // First: check if we have a known handle stored in memory\n            const inMemoryHandle = (_a = this._files.get(handleId)) !== null && _a !== void 0 ? _a : this._directories.get(handleId);\n            if (inMemoryHandle) {\n                return inMemoryHandle;\n            }\n            // Second: check if we have a persisted handle in IndexedDB\n            const persistedHandle = yield ((_b = this.indexedDB) === null || _b === void 0 ? void 0 : _b.runInTransaction(this.store, 'readonly', store => store.get(handleId)));\n            if (WebFileSystemAccess.isFileSystemHandle(persistedHandle)) {\n                let hasPermissions = (yield persistedHandle.queryPermission()) === 'granted';\n                try {\n                    if (!hasPermissions) {\n                        hasPermissions = (yield persistedHandle.requestPermission()) === 'granted';\n                    }\n                }\n                catch (error) {\n                    this.logService.error(error); // this can fail with a DOMException\n                }\n                if (hasPermissions) {\n                    if (WebFileSystemAccess.isFileSystemFileHandle(persistedHandle)) {\n                        this._files.set(handleId, persistedHandle);\n                    }\n                    else if (WebFileSystemAccess.isFileSystemDirectoryHandle(persistedHandle)) {\n                        this._directories.set(handleId, persistedHandle);\n                    }\n                    return persistedHandle;\n                }\n            }\n            // Third: fail with an error\n            throw this.createFileSystemProviderError(resource, 'No file system handle registered', FileSystemProviderErrorCode.Unavailable);\n        });\n    }\n    //#endregion\n    toFileSystemProviderError(error) {\n        if (error instanceof FileSystemProviderError) {\n            return error; // avoid double conversion\n        }\n        let code = FileSystemProviderErrorCode.Unknown;\n        if (error.name === 'NotAllowedError') {\n            error = new Error(localize('fileSystemNotAllowedError', \"Insufficient permissions. Please retry and allow the operation.\"));\n            code = FileSystemProviderErrorCode.Unavailable;\n        }\n        return createFileSystemProviderError(error, code);\n    }\n    createFileSystemProviderError(resource, msg, code) {\n        return createFileSystemProviderError(new Error(`${msg} (${normalize(resource.path)})`), code);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Typings for the https://wicg.github.io/file-system-access\n *\n * Use `supported(window)` to find out if the browser supports this kind of API.\n */\nexport var WebFileSystemAccess;\n(function (WebFileSystemAccess) {\n    function supported(obj) {\n        if (typeof (obj === null || obj === void 0 ? void 0 : obj.showDirectoryPicker) === 'function') {\n            return true;\n        }\n        return false;\n    }\n    WebFileSystemAccess.supported = supported;\n    function isFileSystemHandle(handle) {\n        const candidate = handle;\n        if (!candidate) {\n            return false;\n        }\n        return typeof candidate.kind === 'string' && typeof candidate.queryPermission === 'function' && typeof candidate.requestPermission === 'function';\n    }\n    WebFileSystemAccess.isFileSystemHandle = isFileSystemHandle;\n    function isFileSystemFileHandle(handle) {\n        return handle.kind === 'file';\n    }\n    WebFileSystemAccess.isFileSystemFileHandle = isFileSystemFileHandle;\n    function isFileSystemDirectoryHandle(handle) {\n        return handle.kind === 'directory';\n    }\n    WebFileSystemAccess.isFileSystemDirectoryHandle = isFileSystemDirectoryHandle;\n})(WebFileSystemAccess || (WebFileSystemAccess = {}));\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { distinct } from './arrays.js';\nimport { Iterable } from './iterator.js';\nimport { generateUuid } from './uuid.js';\nexport function createStringDataTransferItem(stringOrPromise) {\n    return {\n        asString: () => __awaiter(this, void 0, void 0, function* () { return stringOrPromise; }),\n        asFile: () => undefined,\n        value: typeof stringOrPromise === 'string' ? stringOrPromise : undefined,\n    };\n}\nexport function createFileDataTransferItem(fileName, uri, data) {\n    const file = { id: generateUuid(), name: fileName, uri, data };\n    return {\n        asString: () => __awaiter(this, void 0, void 0, function* () { return ''; }),\n        asFile: () => file,\n        value: undefined,\n    };\n}\nexport class VSDataTransfer {\n    constructor() {\n        this._entries = new Map();\n    }\n    get size() {\n        let size = 0;\n        for (const _ of this._entries) {\n            size++;\n        }\n        return size;\n    }\n    has(mimeType) {\n        return this._entries.has(this.toKey(mimeType));\n    }\n    matches(pattern) {\n        const mimes = [...this._entries.keys()];\n        if (Iterable.some(this, ([_, item]) => item.asFile())) {\n            mimes.push('files');\n        }\n        return matchesMimeType_normalized(normalizeMimeType(pattern), mimes);\n    }\n    get(mimeType) {\n        var _a;\n        return (_a = this._entries.get(this.toKey(mimeType))) === null || _a === void 0 ? void 0 : _a[0];\n    }\n    /**\n     * Add a new entry to this data transfer.\n     *\n     * This does not replace existing entries for `mimeType`.\n     */\n    append(mimeType, value) {\n        const existing = this._entries.get(mimeType);\n        if (existing) {\n            existing.push(value);\n        }\n        else {\n            this._entries.set(this.toKey(mimeType), [value]);\n        }\n    }\n    /**\n     * Set the entry for a given mime type.\n     *\n     * This replaces all existing entries for `mimeType`.\n     */\n    replace(mimeType, value) {\n        this._entries.set(this.toKey(mimeType), [value]);\n    }\n    /**\n     * Remove all entries for `mimeType`.\n     */\n    delete(mimeType) {\n        this._entries.delete(this.toKey(mimeType));\n    }\n    /**\n     * Iterate over all `[mime, item]` pairs in this data transfer.\n     *\n     * There may be multiple entries for each mime type.\n     */\n    *[Symbol.iterator]() {\n        for (const [mine, items] of this._entries) {\n            for (const item of items) {\n                yield [mine, item];\n            }\n        }\n    }\n    toKey(mimeType) {\n        return normalizeMimeType(mimeType);\n    }\n}\nfunction normalizeMimeType(mimeType) {\n    return mimeType.toLowerCase();\n}\nexport function matchesMimeType(pattern, mimeTypes) {\n    return matchesMimeType_normalized(normalizeMimeType(pattern), mimeTypes.map(normalizeMimeType));\n}\nfunction matchesMimeType_normalized(normalizedPattern, normalizedMimeTypes) {\n    // Anything wildcard\n    if (normalizedPattern === '*/*') {\n        return normalizedMimeTypes.length > 0;\n    }\n    // Exact match\n    if (normalizedMimeTypes.includes(normalizedPattern)) {\n        return true;\n    }\n    // Wildcard, such as `image/*`\n    const wildcard = normalizedPattern.match(/^([a-z]+)\\/([a-z]+|\\*)$/i);\n    if (!wildcard) {\n        return false;\n    }\n    const [_, type, subtype] = wildcard;\n    if (subtype === '*') {\n        return normalizedMimeTypes.some(mime => mime.startsWith(type + '/'));\n    }\n    return false;\n}\nexport const UriList = Object.freeze({\n    // http://amundsen.com/hypermedia/urilist/\n    create: (entries) => {\n        return distinct(entries.map(x => x.toString())).join('\\r\\n');\n    },\n    split: (str) => {\n        return str.split('\\r\\n');\n    },\n    parse: (str) => {\n        return UriList.split(str).filter(value => !value.startsWith('#'));\n    }\n});\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getAllMethodNames } from '../../../base/common/objects.js';\nimport { EditorWorkerClient } from './editorWorkerService.js';\n/**\n * Create a new web worker that has model syncing capabilities built in.\n * Specify an AMD module to load that will `create` an object that will be proxied.\n */\nexport function createWebWorker(modelService, languageConfigurationService, opts) {\n    return new MonacoWebWorkerImpl(modelService, languageConfigurationService, opts);\n}\nclass MonacoWebWorkerImpl extends EditorWorkerClient {\n    constructor(modelService, languageConfigurationService, opts) {\n        super(modelService, opts.keepIdleModels || false, opts.label, languageConfigurationService);\n        this._foreignModuleId = opts.moduleId;\n        this._foreignModuleCreateData = opts.createData || null;\n        this._foreignModuleHost = opts.host || null;\n        this._foreignProxy = null;\n    }\n    // foreign host request\n    fhr(method, args) {\n        if (!this._foreignModuleHost || typeof this._foreignModuleHost[method] !== 'function') {\n            return Promise.reject(new Error('Missing method ' + method + ' or missing main thread foreign host.'));\n        }\n        try {\n            return Promise.resolve(this._foreignModuleHost[method].apply(this._foreignModuleHost, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _getForeignProxy() {\n        if (!this._foreignProxy) {\n            this._foreignProxy = this._getProxy().then((proxy) => {\n                const foreignHostMethods = this._foreignModuleHost ? getAllMethodNames(this._foreignModuleHost) : [];\n                return proxy.loadForeignModule(this._foreignModuleId, this._foreignModuleCreateData, foreignHostMethods).then((foreignMethods) => {\n                    this._foreignModuleCreateData = null;\n                    const proxyMethodRequest = (method, args) => {\n                        return proxy.fmr(method, args);\n                    };\n                    const createProxyMethod = (method, proxyMethodRequest) => {\n                        return function () {\n                            const args = Array.prototype.slice.call(arguments, 0);\n                            return proxyMethodRequest(method, args);\n                        };\n                    };\n                    const foreignProxy = {};\n                    for (const foreignMethod of foreignMethods) {\n                        foreignProxy[foreignMethod] = createProxyMethod(foreignMethod, proxyMethodRequest);\n                    }\n                    return foreignProxy;\n                });\n            });\n        }\n        return this._foreignProxy;\n    }\n    getProxy() {\n        return this._getForeignProxy();\n    }\n    withSyncedResources(resources) {\n        return this._withSyncedResources(resources).then(_ => this.getProxy());\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nexport function buildReplaceStringWithCasePreserved(matches, pattern) {\n    if (matches && (matches[0] !== '')) {\n        const containsHyphens = validateSpecificSpecialCharacter(matches, pattern, '-');\n        const containsUnderscores = validateSpecificSpecialCharacter(matches, pattern, '_');\n        if (containsHyphens && !containsUnderscores) {\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '-');\n        }\n        else if (!containsHyphens && containsUnderscores) {\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '_');\n        }\n        if (matches[0].toUpperCase() === matches[0]) {\n            return pattern.toUpperCase();\n        }\n        else if (matches[0].toLowerCase() === matches[0]) {\n            return pattern.toLowerCase();\n        }\n        else if (strings.containsUppercaseCharacter(matches[0][0]) && pattern.length > 0) {\n            return pattern[0].toUpperCase() + pattern.substr(1);\n        }\n        else if (matches[0][0].toUpperCase() !== matches[0][0] && pattern.length > 0) {\n            return pattern[0].toLowerCase() + pattern.substr(1);\n        }\n        else {\n            // we don't understand its pattern yet.\n            return pattern;\n        }\n    }\n    else {\n        return pattern;\n    }\n}\nfunction validateSpecificSpecialCharacter(matches, pattern, specialCharacter) {\n    const doesContainSpecialCharacter = matches[0].indexOf(specialCharacter) !== -1 && pattern.indexOf(specialCharacter) !== -1;\n    return doesContainSpecialCharacter && matches[0].split(specialCharacter).length === pattern.split(specialCharacter).length;\n}\nfunction buildReplaceStringForSpecificSpecialCharacter(matches, pattern, specialCharacter) {\n    const splitPatternAtSpecialCharacter = pattern.split(specialCharacter);\n    const splitMatchAtSpecialCharacter = matches[0].split(specialCharacter);\n    let replaceString = '';\n    splitPatternAtSpecialCharacter.forEach((splitValue, index) => {\n        replaceString += buildReplaceStringWithCasePreserved([splitMatchAtSpecialCharacter[index]], splitValue) + specialCharacter;\n    });\n    return replaceString.slice(0, -1);\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function showHistoryKeybindingHint(keybindingService) {\n    var _a, _b;\n    return ((_a = keybindingService.lookupKeybinding('history.showPrevious')) === null || _a === void 0 ? void 0 : _a.getElectronAccelerator()) === 'Up' && ((_b = keybindingService.lookupKeybinding('history.showNext')) === null || _b === void 0 ? void 0 : _b.getElectronAccelerator()) === 'Down';\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DataTransfers } from '../../../base/browser/dnd.js';\nimport { coalesce } from '../../../base/common/arrays.js';\nimport { DeferredPromise } from '../../../base/common/async.js';\nimport { VSBuffer } from '../../../base/common/buffer.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { parse } from '../../../base/common/marshalling.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { isWeb } from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { IDialogService } from '../../dialogs/common/dialogs.js';\nimport { HTMLFileSystemProvider } from '../../files/browser/htmlFileSystemProvider.js';\nimport { WebFileSystemAccess } from '../../files/browser/webFileSystemAccess.js';\nimport { ByteSize, IFileService } from '../../files/common/files.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { extractSelection } from '../../opener/common/opener.js';\nimport { Registry } from '../../registry/common/platform.js';\n//#region Editor / Resources DND\nexport const CodeDataTransfers = {\n    EDITORS: 'CodeEditors',\n    FILES: 'CodeFiles'\n};\nexport function extractEditorsDropData(e) {\n    var _a;\n    const editors = [];\n    if (e.dataTransfer && e.dataTransfer.types.length > 0) {\n        // Data Transfer: Code Editors\n        const rawEditorsData = e.dataTransfer.getData(CodeDataTransfers.EDITORS);\n        if (rawEditorsData) {\n            try {\n                editors.push(...parse(rawEditorsData));\n            }\n            catch (error) {\n                // Invalid transfer\n            }\n        }\n        // Data Transfer: Resources\n        else {\n            try {\n                const rawResourcesData = e.dataTransfer.getData(DataTransfers.RESOURCES);\n                editors.push(...createDraggedEditorInputFromRawResourcesData(rawResourcesData));\n            }\n            catch (error) {\n                // Invalid transfer\n            }\n        }\n        // Check for native file transfer\n        if ((_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.files) {\n            for (let i = 0; i < e.dataTransfer.files.length; i++) {\n                const file = e.dataTransfer.files[i];\n                if (file && file.path /* Electron only */) {\n                    try {\n                        editors.push({ resource: URI.file(file.path), isExternal: true, allowWorkspaceOpen: true });\n                    }\n                    catch (error) {\n                        // Invalid URI\n                    }\n                }\n            }\n        }\n        // Check for CodeFiles transfer\n        const rawCodeFiles = e.dataTransfer.getData(CodeDataTransfers.FILES);\n        if (rawCodeFiles) {\n            try {\n                const codeFiles = JSON.parse(rawCodeFiles);\n                for (const codeFile of codeFiles) {\n                    editors.push({ resource: URI.file(codeFile), isExternal: true, allowWorkspaceOpen: true });\n                }\n            }\n            catch (error) {\n                // Invalid transfer\n            }\n        }\n        // Workbench contributions\n        const contributions = Registry.as(Extensions.DragAndDropContribution).getAll();\n        for (const contribution of contributions) {\n            const data = e.dataTransfer.getData(contribution.dataFormatKey);\n            if (data) {\n                try {\n                    editors.push(...contribution.getEditorInputs(data));\n                }\n                catch (error) {\n                    // Invalid transfer\n                }\n            }\n        }\n    }\n    // Prevent duplicates: it is possible that we end up with the same\n    // dragged editor multiple times because multiple data transfers\n    // are being used (https://github.com/microsoft/vscode/issues/128925)\n    const coalescedEditors = [];\n    const seen = new ResourceMap();\n    for (const editor of editors) {\n        if (!editor.resource) {\n            coalescedEditors.push(editor);\n        }\n        else if (!seen.has(editor.resource)) {\n            coalescedEditors.push(editor);\n            seen.set(editor.resource, true);\n        }\n    }\n    return coalescedEditors;\n}\nexport function extractEditorsAndFilesDropData(accessor, e) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const editors = extractEditorsDropData(e);\n        // Web: Check for file transfer\n        if (e.dataTransfer && isWeb && containsDragType(e, DataTransfers.FILES)) {\n            const files = e.dataTransfer.items;\n            if (files) {\n                const instantiationService = accessor.get(IInstantiationService);\n                const filesData = yield instantiationService.invokeFunction(accessor => extractFilesDropData(accessor, e));\n                for (const fileData of filesData) {\n                    editors.push({ resource: fileData.resource, contents: (_a = fileData.contents) === null || _a === void 0 ? void 0 : _a.toString(), isExternal: true, allowWorkspaceOpen: fileData.isDirectory });\n                }\n            }\n        }\n        return editors;\n    });\n}\nexport function createDraggedEditorInputFromRawResourcesData(rawResourcesData) {\n    const editors = [];\n    if (rawResourcesData) {\n        const resourcesRaw = JSON.parse(rawResourcesData);\n        for (const resourceRaw of resourcesRaw) {\n            if (resourceRaw.indexOf(':') > 0) { // mitigate https://github.com/microsoft/vscode/issues/124946\n                const { selection, uri } = extractSelection(URI.parse(resourceRaw));\n                editors.push({ resource: uri, options: { selection } });\n            }\n        }\n    }\n    return editors;\n}\nfunction extractFilesDropData(accessor, event) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n        // Try to extract via `FileSystemHandle`\n        if (WebFileSystemAccess.supported(window)) {\n            const items = (_a = event.dataTransfer) === null || _a === void 0 ? void 0 : _a.items;\n            if (items) {\n                return extractFileTransferData(accessor, items);\n            }\n        }\n        // Try to extract via `FileList`\n        const files = (_b = event.dataTransfer) === null || _b === void 0 ? void 0 : _b.files;\n        if (!files) {\n            return [];\n        }\n        return extractFileListData(accessor, files);\n    });\n}\nfunction extractFileTransferData(accessor, items) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const fileSystemProvider = accessor.get(IFileService).getProvider(Schemas.file);\n        if (!(fileSystemProvider instanceof HTMLFileSystemProvider)) {\n            return []; // only supported when running in web\n        }\n        const results = [];\n        for (let i = 0; i < items.length; i++) {\n            const file = items[i];\n            if (file) {\n                const result = new DeferredPromise();\n                results.push(result);\n                (() => __awaiter(this, void 0, void 0, function* () {\n                    try {\n                        const handle = yield file.getAsFileSystemHandle();\n                        if (!handle) {\n                            result.complete(undefined);\n                            return;\n                        }\n                        if (WebFileSystemAccess.isFileSystemFileHandle(handle)) {\n                            result.complete({\n                                resource: yield fileSystemProvider.registerFileHandle(handle),\n                                isDirectory: false\n                            });\n                        }\n                        else if (WebFileSystemAccess.isFileSystemDirectoryHandle(handle)) {\n                            result.complete({\n                                resource: yield fileSystemProvider.registerDirectoryHandle(handle),\n                                isDirectory: true\n                            });\n                        }\n                        else {\n                            result.complete(undefined);\n                        }\n                    }\n                    catch (error) {\n                        result.complete(undefined);\n                    }\n                }))();\n            }\n        }\n        return coalesce(yield Promise.all(results.map(result => result.p)));\n    });\n}\nexport function extractFileListData(accessor, files) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const dialogService = accessor.get(IDialogService);\n        const results = [];\n        for (let i = 0; i < files.length; i++) {\n            const file = files.item(i);\n            if (file) {\n                // Skip for very large files because this operation is unbuffered\n                if (file.size > 100 * ByteSize.MB) {\n                    dialogService.warn(localize('fileTooLarge', \"File is too large to open as untitled editor. Please upload it first into the file explorer and then try again.\"));\n                    continue;\n                }\n                const result = new DeferredPromise();\n                results.push(result);\n                const reader = new FileReader();\n                reader.onerror = () => result.complete(undefined);\n                reader.onabort = () => result.complete(undefined);\n                reader.onload = (event) => __awaiter(this, void 0, void 0, function* () {\n                    var _a, _b;\n                    const name = file.name;\n                    const loadResult = (_b = (_a = event.target) === null || _a === void 0 ? void 0 : _a.result) !== null && _b !== void 0 ? _b : undefined;\n                    if (typeof name !== 'string' || typeof loadResult === 'undefined') {\n                        result.complete(undefined);\n                        return;\n                    }\n                    result.complete({\n                        resource: URI.from({ scheme: Schemas.untitled, path: name }),\n                        contents: typeof loadResult === 'string' ? VSBuffer.fromString(loadResult) : VSBuffer.wrap(new Uint8Array(loadResult))\n                    });\n                });\n                // Start reading\n                reader.readAsArrayBuffer(file);\n            }\n        }\n        return coalesce(yield Promise.all(results.map(result => result.p)));\n    });\n}\n//#endregion\nexport function containsDragType(event, ...dragTypesToFind) {\n    if (!event.dataTransfer) {\n        return false;\n    }\n    const dragTypes = event.dataTransfer.types;\n    const lowercaseDragTypes = [];\n    for (let i = 0; i < dragTypes.length; i++) {\n        lowercaseDragTypes.push(dragTypes[i].toLowerCase()); // somehow the types are lowercase\n    }\n    for (const dragType of dragTypesToFind) {\n        if (lowercaseDragTypes.indexOf(dragType.toLowerCase()) >= 0) {\n            return true;\n        }\n    }\n    return false;\n}\nclass DragAndDropContributionRegistry {\n    constructor() {\n        this._contributions = new Map();\n    }\n    register(contribution) {\n        if (this._contributions.has(contribution.dataFormatKey)) {\n            throw new Error(`A drag and drop contributiont with key '${contribution.dataFormatKey}' was already registered.`);\n        }\n        this._contributions.set(contribution.dataFormatKey, contribution);\n    }\n    getAll() {\n        return this._contributions.values();\n    }\n}\nexport const Extensions = {\n    DragAndDropContribution: 'workbench.contributions.dragAndDrop'\n};\nRegistry.add(Extensions.DragAndDropContribution, new DragAndDropContributionRegistry());\n//#endregion\n//#region DND Utilities\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\n//#endregion\n"],
  "mappings": "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",
  "names": ["WebFileSystemAccess", "v", "data", "error", "__awaiter", "proxyMethodRequest", "init_platform", "__awaiter", "accessor"]
}

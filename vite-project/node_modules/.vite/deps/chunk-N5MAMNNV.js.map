{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/base/common/errors.js", "../../monaco-editor/esm/vs/base/common/functional.js", "../../monaco-editor/esm/vs/base/common/iterator.js", "../../monaco-editor/esm/vs/base/common/lifecycle.js", "../../monaco-editor/esm/vs/base/common/linkedList.js", "../../monaco-editor/esm/vs/base/common/stopwatch.js", "../../monaco-editor/esm/vs/base/common/event.js", "../../monaco-editor/esm/vs/nls.js", "../../monaco-editor/esm/vs/base/common/platform.js", "../../monaco-editor/esm/vs/base/common/process.js", "../../monaco-editor/esm/vs/base/common/path.js", "../../monaco-editor/esm/vs/base/common/uri.js", "../../monaco-editor/esm/vs/base/common/cancellation.js", "../../monaco-editor/esm/vs/platform/instantiation/common/instantiation.js", "../../monaco-editor/esm/vs/base/common/map.js", "../../monaco-editor/esm/vs/base/common/network.js", "../../monaco-editor/esm/vs/base/common/types.js", "../../monaco-editor/esm/vs/base/common/cache.js", "../../monaco-editor/esm/vs/base/common/lazy.js", "../../monaco-editor/esm/vs/base/common/strings.js", "../../monaco-editor/esm/vs/base/common/extpath.js", "../../monaco-editor/esm/vs/base/common/resources.js", "../../monaco-editor/esm/vs/base/common/arrays.js", "../../monaco-editor/esm/vs/base/common/ternarySearchTree.js", "../../monaco-editor/esm/vs/platform/files/common/files.js", "../../monaco-editor/esm/vs/platform/contextkey/common/scanner.js", "../../monaco-editor/esm/vs/platform/contextkey/common/contextkey.js", "../../monaco-editor/esm/vs/base/common/errorMessage.js", "../../monaco-editor/esm/vs/base/common/hash.js", "../../monaco-editor/esm/vs/platform/log/common/log.js", "../../monaco-editor/esm/vs/platform/telemetry/common/telemetry.js", "../../monaco-editor/esm/vs/base/common/stream.js", "../../monaco-editor/esm/vs/base/common/buffer.js", "../../monaco-editor/esm/vs/base/common/objects.js", "../../monaco-editor/esm/vs/editor/common/model.js", "../../monaco-editor/esm/vs/editor/common/core/textModelDefaults.js", "../../monaco-editor/esm/vs/editor/common/core/wordHelper.js", "../../monaco-editor/esm/vs/editor/common/config/editorOptions.js", "../../monaco-editor/esm/vs/editor/common/languages/languageConfiguration.js", "../../monaco-editor/esm/vs/platform/remote/common/remoteHosts.js", "../../monaco-editor/esm/vs/platform/extensions/common/extensions.js", "../../monaco-editor/esm/vs/base/common/codicons.js", "../../monaco-editor/esm/vs/base/common/themables.js", "../../monaco-editor/esm/vs/base/common/uuid.js", "../../monaco-editor/esm/vs/base/common/filters.js", "../../monaco-editor/esm/vs/base/common/iconLabels.js", "../../monaco-editor/esm/vs/base/common/htmlContent.js", "../../monaco-editor/esm/vs/base/common/mime.js"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n    constructor() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(() => {\n                if (e.stack) {\n                    if (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n                        throw new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack);\n                    }\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    addListener(listener) {\n        this.listeners.push(listener);\n        return () => {\n            this._removeListener(listener);\n        };\n    }\n    emit(e) {\n        this.listeners.forEach((listener) => {\n            listener(e);\n        });\n    }\n    _removeListener(listener) {\n        this.listeners.splice(this.listeners.indexOf(listener), 1);\n    }\n    setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n        this.unexpectedErrorHandler = newUnexpectedErrorHandler;\n    }\n    getUnexpectedErrorHandler() {\n        return this.unexpectedErrorHandler;\n    }\n    onUnexpectedError(e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    }\n    // For external errors, we don't want the listeners to be called\n    onUnexpectedExternalError(e) {\n        this.unexpectedErrorHandler(e);\n    }\n}\nexport const errorHandler = new ErrorHandler();\n/** @skipMangle */\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n    errorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n/**\n * Returns if the error is a SIGPIPE error. SIGPIPE errors should generally be\n * logged at most once, to avoid a loop.\n *\n * @see https://github.com/microsoft/vscode-remote-release/issues/6481\n */\nexport function isSigPipeError(e) {\n    var _a;\n    if (!e || typeof e !== 'object') {\n        return false;\n    }\n    const cast = e;\n    return cast.code === 'EPIPE' && ((_a = cast.syscall) === null || _a === void 0 ? void 0 : _a.toUpperCase()) === 'WRITE';\n}\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        const { name, message } = error;\n        const stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name,\n            message,\n            stack,\n            noTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n        };\n    }\n    // return as is\n    return error;\n}\nconst canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isCancellationError(error) {\n    if (error instanceof CancellationError) {\n        return true;\n    }\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n    constructor() {\n        super(canceledName);\n        this.name = this.message;\n    }\n}\n/**\n * @deprecated use {@link CancellationError `new CancellationError()`} instead\n */\nexport function canceled() {\n    const error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(`Illegal argument: ${name}`);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(`Illegal state: ${name}`);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\nexport function readonly(name) {\n    return name\n        ? new Error(`readonly property '${name} cannot be changed'`)\n        : new Error('readonly property cannot be changed');\n}\nexport function disposed(what) {\n    const result = new Error(`${what} has been disposed`);\n    result.name = 'DISPOSED';\n    return result;\n}\nexport function getErrorMessage(err) {\n    if (!err) {\n        return 'Error';\n    }\n    if (err.message) {\n        return err.message;\n    }\n    if (err.stack) {\n        return err.stack.split('\\n')[0];\n    }\n    return String(err);\n}\nexport class NotImplementedError extends Error {\n    constructor(message) {\n        super('NotImplemented');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\nexport class NotSupportedError extends Error {\n    constructor(message) {\n        super('NotSupported');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\nexport class ExpectedError extends Error {\n    constructor() {\n        super(...arguments);\n        this.isExpected = true;\n    }\n}\n/**\n * Error that when thrown won't be logged in telemetry as an unhandled error.\n */\nexport class ErrorNoTelemetry extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = 'CodeExpectedError';\n    }\n    static fromError(err) {\n        if (err instanceof ErrorNoTelemetry) {\n            return err;\n        }\n        const result = new ErrorNoTelemetry();\n        result.message = err.message;\n        result.stack = err.stack;\n        return result;\n    }\n    static isErrorNoTelemetry(err) {\n        return err.name === 'CodeExpectedError';\n    }\n}\n/**\n * This error indicates a bug.\n * Do not throw this for invalid user input.\n * Only catch this error to recover gracefully from bugs.\n */\nexport class BugIndicatingError extends Error {\n    constructor(message) {\n        super(message || 'An unexpected bug occurred.');\n        Object.setPrototypeOf(this, BugIndicatingError.prototype);\n        // Because we know for sure only buggy code throws this,\n        // we definitely want to break here and fix the bug.\n        // eslint-disable-next-line no-debugger\n        // debugger;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function once(fn) {\n    const _this = this;\n    let didCall = false;\n    let result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Iterable;\n(function (Iterable) {\n    function is(thing) {\n        return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n    }\n    Iterable.is = is;\n    const _empty = Object.freeze([]);\n    function empty() {\n        return _empty;\n    }\n    Iterable.empty = empty;\n    function* single(element) {\n        yield element;\n    }\n    Iterable.single = single;\n    function wrap(iterableOrElement) {\n        if (is(iterableOrElement)) {\n            return iterableOrElement;\n        }\n        else {\n            return single(iterableOrElement);\n        }\n    }\n    Iterable.wrap = wrap;\n    function from(iterable) {\n        return iterable || _empty;\n    }\n    Iterable.from = from;\n    function isEmpty(iterable) {\n        return !iterable || iterable[Symbol.iterator]().next().done === true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function first(iterable) {\n        return iterable[Symbol.iterator]().next().value;\n    }\n    Iterable.first = first;\n    function some(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function find(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return undefined;\n    }\n    Iterable.find = find;\n    function* filter(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                yield element;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function* map(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield fn(element, index++);\n        }\n    }\n    Iterable.map = map;\n    function* concat(...iterables) {\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                yield element;\n            }\n        }\n    }\n    Iterable.concat = concat;\n    function reduce(iterable, reducer, initialValue) {\n        let value = initialValue;\n        for (const element of iterable) {\n            value = reducer(value, element);\n        }\n        return value;\n    }\n    Iterable.reduce = reduce;\n    /**\n     * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n     */\n    function* slice(arr, from, to = arr.length) {\n        if (from < 0) {\n            from += arr.length;\n        }\n        if (to < 0) {\n            to += arr.length;\n        }\n        else if (to > arr.length) {\n            to = arr.length;\n        }\n        for (; from < to; from++) {\n            yield arr[from];\n        }\n    }\n    Iterable.slice = slice;\n    /**\n     * Consumes `atMost` elements from iterable and returns the consumed elements,\n     * and an iterable for the rest of the elements.\n     */\n    function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n        const consumed = [];\n        if (atMost === 0) {\n            return [consumed, iterable];\n        }\n        const iterator = iterable[Symbol.iterator]();\n        for (let i = 0; i < atMost; i++) {\n            const next = iterator.next();\n            if (next.done) {\n                return [consumed, Iterable.empty()];\n            }\n            consumed.push(next.value);\n        }\n        return [consumed, { [Symbol.iterator]() { return iterator; } }];\n    }\n    Iterable.consume = consume;\n})(Iterable || (Iterable = {}));\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { once } from './functional.js';\nimport { Iterable } from './iterator.js';\n// #region Disposable Tracking\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker = null;\nexport function setDisposableTracker(tracker) {\n    disposableTracker = tracker;\n}\nif (TRACK_DISPOSABLES) {\n    const __is_disposable_tracked__ = '__is_disposable_tracked__';\n    setDisposableTracker(new class {\n        trackDisposable(x) {\n            const stack = new Error('Potentially leaked disposable').stack;\n            setTimeout(() => {\n                if (!x[__is_disposable_tracked__]) {\n                    console.log(stack);\n                }\n            }, 3000);\n        }\n        setParent(child, parent) {\n            if (child && child !== Disposable.None) {\n                try {\n                    child[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsDisposed(disposable) {\n            if (disposable && disposable !== Disposable.None) {\n                try {\n                    disposable[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsSingleton(disposable) { }\n    });\n}\nfunction trackDisposable(x) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.trackDisposable(x);\n    return x;\n}\nfunction markAsDisposed(disposable) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsDisposed(disposable);\n}\nfunction setParentOfDisposable(child, parent) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.setParent(child, parent);\n}\nfunction setParentOfDisposables(children, parent) {\n    if (!disposableTracker) {\n        return;\n    }\n    for (const child of children) {\n        disposableTracker.setParent(child, parent);\n    }\n}\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton(singleton) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsSingleton(singleton);\n    return singleton;\n}\n/**\n * Check if `thing` is {@link IDisposable disposable}.\n */\nexport function isDisposable(thing) {\n    return typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nexport function dispose(arg) {\n    if (Iterable.is(arg)) {\n        const errors = [];\n        for (const d of arg) {\n            if (d) {\n                try {\n                    d.dispose();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        else if (errors.length > 1) {\n            throw new AggregateError(errors, 'Encountered errors while disposing of store');\n        }\n        return Array.isArray(arg) ? [] : arg;\n    }\n    else if (arg) {\n        arg.dispose();\n        return arg;\n    }\n}\nexport function disposeIfDisposable(disposables) {\n    for (const d of disposables) {\n        if (isDisposable(d)) {\n            d.dispose();\n        }\n    }\n    return [];\n}\n/**\n * Combine multiple disposable values into a single {@link IDisposable}.\n */\nexport function combinedDisposable(...disposables) {\n    const parent = toDisposable(() => dispose(disposables));\n    setParentOfDisposables(disposables, parent);\n    return parent;\n}\n/**\n * Turn a function that implements dispose into an {@link IDisposable}.\n *\n * @param fn Clean up function, guaranteed to be called only **once**.\n */\nexport function toDisposable(fn) {\n    const self = trackDisposable({\n        dispose: once(() => {\n            markAsDisposed(self);\n            fn();\n        })\n    });\n    return self;\n}\n/**\n * Manages a collection of disposable values.\n *\n * This is the preferred way to manage multiple disposables. A `DisposableStore` is safer to work with than an\n * `IDisposable[]` as it considers edge cases, such as registering the same value multiple times or adding an item to a\n * store that has already been disposed of.\n */\nexport class DisposableStore {\n    constructor() {\n        this._toDispose = new Set();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Dispose of all registered disposables and mark this object as disposed.\n     *\n     * Any future disposables added to this object will be disposed of on `add`.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clear();\n    }\n    /**\n     * @return `true` if this object has been disposed of.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Dispose of all registered disposables but do not mark this object as disposed.\n     */\n    clear() {\n        if (this._toDispose.size === 0) {\n            return;\n        }\n        try {\n            dispose(this._toDispose);\n        }\n        finally {\n            this._toDispose.clear();\n        }\n    }\n    /**\n     * Add a new {@link IDisposable disposable} to the collection.\n     */\n    add(o) {\n        if (!o) {\n            return o;\n        }\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        setParentOfDisposable(o, this);\n        if (this._isDisposed) {\n            if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n                console.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n            }\n        }\n        else {\n            this._toDispose.add(o);\n        }\n        return o;\n    }\n}\nDisposableStore.DISABLE_DISPOSED_WARNING = false;\n/**\n * Abstract base class for a {@link IDisposable disposable} object.\n *\n * Subclasses can {@linkcode _register} disposables that will be automatically cleaned up when this object is disposed of.\n */\nexport class Disposable {\n    constructor() {\n        this._store = new DisposableStore();\n        trackDisposable(this);\n        setParentOfDisposable(this._store, this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._store.dispose();\n    }\n    /**\n     * Adds `o` to the collection of disposables managed by this object.\n     */\n    _register(o) {\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        return this._store.add(o);\n    }\n}\n/**\n * A disposable that does nothing when it is disposed of.\n *\n * TODO: This should not be a static property.\n */\nDisposable.None = Object.freeze({ dispose() { } });\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable {\n    constructor() {\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    get value() {\n        return this._isDisposed ? undefined : this._value;\n    }\n    set value(value) {\n        var _a;\n        if (this._isDisposed || value === this._value) {\n            return;\n        }\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        if (value) {\n            setParentOfDisposable(value, this);\n        }\n        this._value = value;\n    }\n    /**\n     * Resets the stored value and disposed of the previously stored value.\n     */\n    clear() {\n        this.value = undefined;\n    }\n    dispose() {\n        var _a;\n        this._isDisposed = true;\n        markAsDisposed(this);\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._value = undefined;\n    }\n    /**\n     * Clears the value, but does not dispose it.\n     * The old value is returned.\n    */\n    clearAndLeak() {\n        const oldValue = this._value;\n        this._value = undefined;\n        if (oldValue) {\n            setParentOfDisposable(oldValue, null);\n        }\n        return oldValue;\n    }\n}\nexport class RefCountedDisposable {\n    constructor(_disposable) {\n        this._disposable = _disposable;\n        this._counter = 1;\n    }\n    acquire() {\n        this._counter++;\n        return this;\n    }\n    release() {\n        if (--this._counter === 0) {\n            this._disposable.dispose();\n        }\n        return this;\n    }\n}\n/**\n * A safe disposable can be `unset` so that a leaked reference (listener)\n * can be cut-off.\n */\nexport class SafeDisposable {\n    constructor() {\n        this.dispose = () => { };\n        this.unset = () => { };\n        this.isset = () => false;\n        trackDisposable(this);\n    }\n    set(fn) {\n        let callback = fn;\n        this.unset = () => callback = undefined;\n        this.isset = () => callback !== undefined;\n        this.dispose = () => {\n            if (callback) {\n                callback();\n                callback = undefined;\n                markAsDisposed(this);\n            }\n        };\n        return this;\n    }\n}\nexport class ReferenceCollection {\n    constructor() {\n        this.references = new Map();\n    }\n    acquire(key, ...args) {\n        let reference = this.references.get(key);\n        if (!reference) {\n            reference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n            this.references.set(key, reference);\n        }\n        const { object } = reference;\n        const dispose = once(() => {\n            if (--reference.counter === 0) {\n                this.destroyReferencedObject(key, reference.object);\n                this.references.delete(key);\n            }\n        });\n        reference.counter++;\n        return { object, dispose };\n    }\n}\n/**\n * Unwraps a reference collection of promised values. Makes sure\n * references are disposed whenever promises get rejected.\n */\nexport class AsyncReferenceCollection {\n    constructor(referenceCollection) {\n        this.referenceCollection = referenceCollection;\n    }\n    acquire(key, ...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const ref = this.referenceCollection.acquire(key, ...args);\n            try {\n                const object = yield ref.object;\n                return {\n                    object,\n                    dispose: () => ref.dispose()\n                };\n            }\n            catch (error) {\n                ref.dispose();\n                throw error;\n            }\n        });\n    }\n}\nexport class ImmortalReference {\n    constructor(object) {\n        this.object = object;\n    }\n    dispose() { }\n}\nexport function disposeOnReturn(fn) {\n    const store = new DisposableStore();\n    try {\n        fn(store);\n    }\n    finally {\n        store.dispose();\n    }\n}\n/**\n * A map the manages the lifecycle of the values that it stores.\n */\nexport class DisposableMap {\n    constructor() {\n        this._store = new Map();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Disposes of all stored values and mark this object as disposed.\n     *\n     * Trying to use this object after it has been disposed of is an error.\n     */\n    dispose() {\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clearAndDisposeAll();\n    }\n    /**\n     * Disposes of all stored values and clear the map, but DO NOT mark this object as disposed.\n     */\n    clearAndDisposeAll() {\n        if (!this._store.size) {\n            return;\n        }\n        try {\n            dispose(this._store.values());\n        }\n        finally {\n            this._store.clear();\n        }\n    }\n    has(key) {\n        return this._store.has(key);\n    }\n    get(key) {\n        return this._store.get(key);\n    }\n    set(key, value, skipDisposeOnOverwrite = false) {\n        var _a;\n        if (this._isDisposed) {\n            console.warn(new Error('Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!').stack);\n        }\n        if (!skipDisposeOnOverwrite) {\n            (_a = this._store.get(key)) === null || _a === void 0 ? void 0 : _a.dispose();\n        }\n        this._store.set(key, value);\n    }\n    /**\n     * Delete the value stored for `key` from this map and also dispose of it.\n     */\n    deleteAndDispose(key) {\n        var _a;\n        (_a = this._store.get(key)) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._store.delete(key);\n    }\n    [Symbol.iterator]() {\n        return this._store[Symbol.iterator]();\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass Node {\n    constructor(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n}\nNode.Undefined = new Node(undefined);\nexport class LinkedList {\n    constructor() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._first === Node.Undefined;\n    }\n    clear() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            const next = node.next;\n            node.prev = Node.Undefined;\n            node.next = Node.Undefined;\n            node = next;\n        }\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    unshift(element) {\n        return this._insert(element, false);\n    }\n    push(element) {\n        return this._insert(element, true);\n    }\n    _insert(element, atTheEnd) {\n        const newNode = new Node(element);\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            const oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            const oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        let didRemove = false;\n        return () => {\n            if (!didRemove) {\n                didRemove = true;\n                this._remove(newNode);\n            }\n        };\n    }\n    shift() {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    }\n    pop() {\n        if (this._last === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    }\n    _remove(node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            // middle\n            const anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            // only node\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            // last\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            // first\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        // done\n        this._size -= 1;\n    }\n    *[Symbol.iterator]() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            yield node.element;\n            node = node.next;\n        }\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst hasPerformanceNow = (globalThis.performance && typeof globalThis.performance.now === 'function');\nexport class StopWatch {\n    static create(highResolution) {\n        return new StopWatch(highResolution);\n    }\n    constructor(highResolution) {\n        this._now = hasPerformanceNow && highResolution === false ? Date.now : globalThis.performance.now.bind(globalThis.performance);\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    reset() {\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { onUnexpectedError } from './errors.js';\nimport { once as onceFn } from './functional.js';\nimport { combinedDisposable, Disposable, DisposableMap, DisposableStore, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { StopWatch } from './stopwatch.js';\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever an emitter with listeners is disposed. That is a sign of code smell.\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableDisposeWithListenerWarning = false;\n// _enableDisposeWithListenerWarning = Boolean(\"TRUE\"); // causes a linter warning so that it cannot be pushed\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever a snapshotted event is used repeatedly without cleanup.\n// See https://github.com/microsoft/vscode/issues/142851\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableSnapshotPotentialLeakWarning = false;\nexport var Event;\n(function (Event) {\n    Event.None = () => Disposable.None;\n    function _addLeakageTraceLogic(options) {\n        if (_enableSnapshotPotentialLeakWarning) {\n            const { onDidAddListener: origListenerDidAdd } = options;\n            const stack = Stacktrace.create();\n            let count = 0;\n            options.onDidAddListener = () => {\n                if (++count === 2) {\n                    console.warn('snapshotted emitter LIKELY used public and SHOULD HAVE BEEN created with DisposableStore. snapshotted here');\n                    stack.print();\n                }\n                origListenerDidAdd === null || origListenerDidAdd === void 0 ? void 0 : origListenerDidAdd();\n            };\n        }\n    }\n    /**\n     * Given an event, returns another event which debounces calls and defers the listeners to a later task via a shared\n     * `setTimeout`. The event is converted into a signal (`Event<void>`) to avoid additional object creation as a\n     * result of merging events and to try prevent race conditions that could arise when using related deferred and\n     * non-deferred events.\n     *\n     * This is useful for deferring non-critical work (eg. general UI updates) to ensure it does not block critical work\n     * (eg. latency of keypress to text rendered).\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function defer(event, disposable) {\n        return debounce(event, () => void 0, 0, undefined, true, undefined, disposable);\n    }\n    Event.defer = defer;\n    /**\n     * Given an event, returns another event which only fires once.\n     *\n     * @param event The event source for the new event.\n     */\n    function once(event) {\n        return (listener, thisArgs = null, disposables) => {\n            // we need this, in case the event fires during the listener call\n            let didFire = false;\n            let result = undefined;\n            result = event(e => {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    /**\n     * Maps an event of one type into an event of another type using a mapping function, similar to how\n     * `Array.prototype.map` works.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param map The mapping function.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function map(event, map, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => listener.call(thisArgs, map(i)), null, disposables), disposable);\n    }\n    Event.map = map;\n    /**\n     * Wraps an event in another event that performs some function on the event object before firing.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param each The function to perform on the event object.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function forEach(event, each, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables), disposable);\n    }\n    Event.forEach = forEach;\n    function filter(event, filter, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables), disposable);\n    }\n    Event.filter = filter;\n    /**\n     * Given an event, returns the same event but typed as `Event<void>`.\n     */\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    function any(...events) {\n        return (listener, thisArgs = null, disposables) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n    }\n    Event.any = any;\n    /**\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function reduce(event, merge, initial, disposable) {\n        let output = initial;\n        return map(event, e => {\n            output = merge(output, e);\n            return output;\n        }, disposable);\n    }\n    Event.reduce = reduce;\n    function snapshot(event, disposable) {\n        let listener;\n        const options = {\n            onWillAddFirstListener() {\n                listener = event(emitter.fire, emitter);\n            },\n            onDidRemoveLastListener() {\n                listener === null || listener === void 0 ? void 0 : listener.dispose();\n            }\n        };\n        if (!disposable) {\n            _addLeakageTraceLogic(options);\n        }\n        const emitter = new Emitter(options);\n        disposable === null || disposable === void 0 ? void 0 : disposable.add(emitter);\n        return emitter.event;\n    }\n    function debounce(event, merge, delay = 100, leading = false, flushOnListenerRemove = false, leakWarningThreshold, disposable) {\n        let subscription;\n        let output = undefined;\n        let handle = undefined;\n        let numDebouncedCalls = 0;\n        let doFire;\n        const options = {\n            leakWarningThreshold,\n            onWillAddFirstListener() {\n                subscription = event(cur => {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                        output = undefined;\n                    }\n                    doFire = () => {\n                        const _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    };\n                    if (typeof delay === 'number') {\n                        clearTimeout(handle);\n                        handle = setTimeout(doFire, delay);\n                    }\n                    else {\n                        if (handle === undefined) {\n                            handle = 0;\n                            queueMicrotask(doFire);\n                        }\n                    }\n                });\n            },\n            onWillRemoveListener() {\n                if (flushOnListenerRemove && numDebouncedCalls > 0) {\n                    doFire === null || doFire === void 0 ? void 0 : doFire();\n                }\n            },\n            onDidRemoveLastListener() {\n                doFire = undefined;\n                subscription.dispose();\n            }\n        };\n        if (!disposable) {\n            _addLeakageTraceLogic(options);\n        }\n        const emitter = new Emitter(options);\n        disposable === null || disposable === void 0 ? void 0 : disposable.add(emitter);\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    /**\n     * Debounces an event, firing after some delay (default=0) with an array of all event original objects.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function accumulate(event, delay = 0, disposable) {\n        return Event.debounce(event, (last, e) => {\n            if (!last) {\n                return [e];\n            }\n            last.push(e);\n            return last;\n        }, delay, undefined, true, undefined, disposable);\n    }\n    Event.accumulate = accumulate;\n    /**\n     * Filters an event such that some condition is _not_ met more than once in a row, effectively ensuring duplicate\n     * event objects from different sources do not fire the same event object.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param equals The equality condition.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     *\n     * @example\n     * ```\n     * // Fire only one time when a single window is opened or focused\n     * Event.latch(Event.any(onDidOpenWindow, onDidFocusWindow))\n     * ```\n     */\n    function latch(event, equals = (a, b) => a === b, disposable) {\n        let firstCall = true;\n        let cache;\n        return filter(event, value => {\n            const shouldEmit = firstCall || !equals(value, cache);\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        }, disposable);\n    }\n    Event.latch = latch;\n    /**\n     * Splits an event whose parameter is a union type into 2 separate events for each type in the union.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @example\n     * ```\n     * const event = new EventEmitter<number | undefined>().event;\n     * const [numberEvent, undefinedEvent] = Event.split(event, isUndefined);\n     * ```\n     *\n     * @param event The event source for the new event.\n     * @param isT A function that determines what event is of the first type.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function split(event, isT, disposable) {\n        return [\n            Event.filter(event, isT, disposable),\n            Event.filter(event, e => !isT(e), disposable),\n        ];\n    }\n    Event.split = split;\n    /**\n     * Buffers an event until it has a listener attached.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param flushAfterTimeout Determines whether to flush the buffer after a timeout immediately or after a\n     * `setTimeout` when the first event listener is added.\n     * @param _buffer Internal: A source event array used for tests.\n     *\n     * @example\n     * ```\n     * // Start accumulating events, when the first listener is attached, flush\n     * // the event after a timeout such that multiple listeners attached before\n     * // the timeout would receive the event\n     * this.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n     * ```\n     */\n    function buffer(event, flushAfterTimeout = false, _buffer = []) {\n        let buffer = _buffer.slice();\n        let listener = event(e => {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        const flush = () => {\n            buffer === null || buffer === void 0 ? void 0 : buffer.forEach(e => emitter.fire(e));\n            buffer = null;\n        };\n        const emitter = new Emitter({\n            onWillAddFirstListener() {\n                if (!listener) {\n                    listener = event(e => emitter.fire(e));\n                }\n            },\n            onDidAddFirstListener() {\n                if (buffer) {\n                    if (flushAfterTimeout) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onDidRemoveLastListener() {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        });\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    class ChainableEvent {\n        constructor(event) {\n            this.event = event;\n            this.disposables = new DisposableStore();\n        }\n        /** @see {@link Event.map} */\n        map(fn) {\n            return new ChainableEvent(map(this.event, fn, this.disposables));\n        }\n        /** @see {@link Event.forEach} */\n        forEach(fn) {\n            return new ChainableEvent(forEach(this.event, fn, this.disposables));\n        }\n        filter(fn) {\n            return new ChainableEvent(filter(this.event, fn, this.disposables));\n        }\n        /** @see {@link Event.reduce} */\n        reduce(merge, initial) {\n            return new ChainableEvent(reduce(this.event, merge, initial, this.disposables));\n        }\n        /** @see {@link Event.reduce} */\n        latch() {\n            return new ChainableEvent(latch(this.event, undefined, this.disposables));\n        }\n        debounce(merge, delay = 100, leading = false, flushOnListenerRemove = false, leakWarningThreshold) {\n            return new ChainableEvent(debounce(this.event, merge, delay, leading, flushOnListenerRemove, leakWarningThreshold, this.disposables));\n        }\n        /**\n         * Attach a listener to the event.\n         */\n        on(listener, thisArgs, disposables) {\n            return this.event(listener, thisArgs, disposables);\n        }\n        /** @see {@link Event.once} */\n        once(listener, thisArgs, disposables) {\n            return once(this.event)(listener, thisArgs, disposables);\n        }\n        dispose() {\n            this.disposables.dispose();\n        }\n    }\n    /**\n     * Wraps the event in an {@link IChainableEvent}, allowing a more functional programming style.\n     *\n     * @example\n     * ```\n     * // Normal\n     * const onEnterPressNormal = Event.filter(\n     *   Event.map(onKeyPress.event, e => new StandardKeyboardEvent(e)),\n     *   e.keyCode === KeyCode.Enter\n     * ).event;\n     *\n     * // Using chain\n     * const onEnterPressChain = Event.chain(onKeyPress.event)\n     *   .map(e => new StandardKeyboardEvent(e))\n     *   .filter(e => e.keyCode === KeyCode.Enter)\n     *   .event;\n     * ```\n     */\n    function chain(event) {\n        return new ChainableEvent(event);\n    }\n    Event.chain = chain;\n    /**\n     * Creates an {@link Event} from a node event emitter.\n     */\n    function fromNodeEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.on(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n        const result = new Emitter({ onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    /**\n     * Creates an {@link Event} from a DOM event emitter.\n     */\n    function fromDOMEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n        const result = new Emitter({ onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromDOMEventEmitter = fromDOMEventEmitter;\n    /**\n     * Creates a promise out of an event, using the {@link Event.once} helper.\n     */\n    function toPromise(event) {\n        return new Promise(resolve => once(event)(resolve));\n    }\n    Event.toPromise = toPromise;\n    /**\n     * Creates an event out of a promise that fires once when the promise is\n     * resolved with the result of the promise or `undefined`.\n     */\n    function fromPromise(promise) {\n        const result = new Emitter();\n        promise.then(res => {\n            result.fire(res);\n        }, () => {\n            result.fire(undefined);\n        }).finally(() => {\n            result.dispose();\n        });\n        return result.event;\n    }\n    Event.fromPromise = fromPromise;\n    /**\n     * Adds a listener to an event and calls the listener immediately with undefined as the event object.\n     *\n     * @example\n     * ```\n     * // Initialize the UI and update it when dataChangeEvent fires\n     * runAndSubscribe(dataChangeEvent, () => this._updateUI());\n     * ```\n     */\n    function runAndSubscribe(event, handler) {\n        handler(undefined);\n        return event(e => handler(e));\n    }\n    Event.runAndSubscribe = runAndSubscribe;\n    /**\n     * Adds a listener to an event and calls the listener immediately with undefined as the event object. A new\n     * {@link DisposableStore} is passed to the listener which is disposed when the returned disposable is disposed.\n     */\n    function runAndSubscribeWithStore(event, handler) {\n        let store = null;\n        function run(e) {\n            store === null || store === void 0 ? void 0 : store.dispose();\n            store = new DisposableStore();\n            handler(e, store);\n        }\n        run(undefined);\n        const disposable = event(e => run(e));\n        return toDisposable(() => {\n            disposable.dispose();\n            store === null || store === void 0 ? void 0 : store.dispose();\n        });\n    }\n    Event.runAndSubscribeWithStore = runAndSubscribeWithStore;\n    class EmitterObserver {\n        constructor(_observable, store) {\n            this._observable = _observable;\n            this._counter = 0;\n            this._hasChanged = false;\n            const options = {\n                onWillAddFirstListener: () => {\n                    _observable.addObserver(this);\n                },\n                onDidRemoveLastListener: () => {\n                    _observable.removeObserver(this);\n                }\n            };\n            if (!store) {\n                _addLeakageTraceLogic(options);\n            }\n            this.emitter = new Emitter(options);\n            if (store) {\n                store.add(this.emitter);\n            }\n        }\n        beginUpdate(_observable) {\n            // assert(_observable === this.obs);\n            this._counter++;\n        }\n        handlePossibleChange(_observable) {\n            // assert(_observable === this.obs);\n        }\n        handleChange(_observable, _change) {\n            // assert(_observable === this.obs);\n            this._hasChanged = true;\n        }\n        endUpdate(_observable) {\n            // assert(_observable === this.obs);\n            this._counter--;\n            if (this._counter === 0) {\n                this._observable.reportChanges();\n                if (this._hasChanged) {\n                    this._hasChanged = false;\n                    this.emitter.fire(this._observable.get());\n                }\n            }\n        }\n    }\n    /**\n     * Creates an event emitter that is fired when the observable changes.\n     * Each listeners subscribes to the emitter.\n     */\n    function fromObservable(obs, store) {\n        const observer = new EmitterObserver(obs, store);\n        return observer.emitter.event;\n    }\n    Event.fromObservable = fromObservable;\n    /**\n     * Each listener is attached to the observable directly.\n     */\n    function fromObservableLight(observable) {\n        return (listener) => {\n            let count = 0;\n            let didChange = false;\n            const observer = {\n                beginUpdate() {\n                    count++;\n                },\n                endUpdate() {\n                    count--;\n                    if (count === 0) {\n                        observable.reportChanges();\n                        if (didChange) {\n                            didChange = false;\n                            listener();\n                        }\n                    }\n                },\n                handlePossibleChange() {\n                    // noop\n                },\n                handleChange() {\n                    didChange = true;\n                }\n            };\n            observable.addObserver(observer);\n            observable.reportChanges();\n            return {\n                dispose() {\n                    observable.removeObserver(observer);\n                }\n            };\n        };\n    }\n    Event.fromObservableLight = fromObservableLight;\n})(Event || (Event = {}));\nexport class EventProfiling {\n    constructor(name) {\n        this.listenerCount = 0;\n        this.invocationCount = 0;\n        this.elapsedOverall = 0;\n        this.durations = [];\n        this.name = `${name}_${EventProfiling._idPool++}`;\n        EventProfiling.all.add(this);\n    }\n    start(listenerCount) {\n        this._stopWatch = new StopWatch();\n        this.listenerCount = listenerCount;\n    }\n    stop() {\n        if (this._stopWatch) {\n            const elapsed = this._stopWatch.elapsed();\n            this.durations.push(elapsed);\n            this.elapsedOverall += elapsed;\n            this.invocationCount += 1;\n            this._stopWatch = undefined;\n        }\n    }\n}\nEventProfiling.all = new Set();\nEventProfiling._idPool = 0;\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n) {\n    const oldValue = _globalLeakWarningThreshold;\n    _globalLeakWarningThreshold = n;\n    return {\n        dispose() {\n            _globalLeakWarningThreshold = oldValue;\n        }\n    };\n}\nclass LeakageMonitor {\n    constructor(threshold, name = Math.random().toString(18).slice(2, 5)) {\n        this.threshold = threshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    dispose() {\n        var _a;\n        (_a = this._stacks) === null || _a === void 0 ? void 0 : _a.clear();\n    }\n    check(stack, listenerCount) {\n        const threshold = this.threshold;\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = new Map();\n        }\n        const count = (this._stacks.get(stack.value) || 0);\n        this._stacks.set(stack.value, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._warnCountdown = threshold * 0.5;\n            // find most frequent listener and print warning\n            let topStack;\n            let topCount = 0;\n            for (const [stack, count] of this._stacks) {\n                if (!topStack || topCount < count) {\n                    topStack = stack;\n                    topCount = count;\n                }\n            }\n            console.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n            console.warn(topStack);\n        }\n        return () => {\n            const count = (this._stacks.get(stack.value) || 0);\n            this._stacks.set(stack.value, count - 1);\n        };\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn(this.value.split('\\n').slice(2).join('\\n'));\n    }\n}\nlet id = 0;\nclass UniqueContainer {\n    constructor(value) {\n        this.value = value;\n        this.id = id++;\n    }\n}\nconst compactionThreshold = 2;\nconst forEachListener = (listeners, fn) => {\n    if (listeners instanceof UniqueContainer) {\n        fn(listeners);\n    }\n    else {\n        for (let i = 0; i < listeners.length; i++) {\n            const l = listeners[i];\n            if (l) {\n                fn(l);\n            }\n        }\n    }\n};\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nexport class Emitter {\n    constructor(options) {\n        var _a, _b, _c, _d, _e;\n        this._size = 0;\n        this._options = options;\n        this._leakageMon = _globalLeakWarningThreshold > 0 || ((_a = this._options) === null || _a === void 0 ? void 0 : _a.leakWarningThreshold) ? new LeakageMonitor((_c = (_b = this._options) === null || _b === void 0 ? void 0 : _b.leakWarningThreshold) !== null && _c !== void 0 ? _c : _globalLeakWarningThreshold) : undefined;\n        this._perfMon = ((_d = this._options) === null || _d === void 0 ? void 0 : _d._profName) ? new EventProfiling(this._options._profName) : undefined;\n        this._deliveryQueue = (_e = this._options) === null || _e === void 0 ? void 0 : _e.deliveryQueue;\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        if (!this._disposed) {\n            this._disposed = true;\n            // It is bad to have listeners at the time of disposing an emitter, it is worst to have listeners keep the emitter\n            // alive via the reference that's embedded in their disposables. Therefore we loop over all remaining listeners and\n            // unset their subscriptions/disposables. Looping and blaming remaining listeners is done on next tick because the\n            // the following programming pattern is very popular:\n            //\n            // const someModel = this._disposables.add(new ModelObject()); // (1) create and register model\n            // this._disposables.add(someModel.onDidChange(() => { ... }); // (2) subscribe and register model-event listener\n            // ...later...\n            // this._disposables.dispose(); disposes (1) then (2): don't warn after (1) but after the \"overall dispose\" is done\n            if (((_a = this._deliveryQueue) === null || _a === void 0 ? void 0 : _a.current) === this) {\n                this._deliveryQueue.reset();\n            }\n            if (this._listeners) {\n                if (_enableDisposeWithListenerWarning) {\n                    const listeners = this._listeners;\n                    queueMicrotask(() => {\n                        forEachListener(listeners, l => { var _a; return (_a = l.stack) === null || _a === void 0 ? void 0 : _a.print(); });\n                    });\n                }\n                this._listeners = undefined;\n                this._size = 0;\n            }\n            (_c = (_b = this._options) === null || _b === void 0 ? void 0 : _b.onDidRemoveLastListener) === null || _c === void 0 ? void 0 : _c.call(_b);\n            (_d = this._leakageMon) === null || _d === void 0 ? void 0 : _d.dispose();\n        }\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        var _a;\n        (_a = this._event) !== null && _a !== void 0 ? _a : (this._event = (callback, thisArgs, disposables) => {\n            var _a, _b, _c, _d, _e;\n            if (this._leakageMon && this._size > this._leakageMon.threshold * 3) {\n                console.warn(`[${this._leakageMon.name}] REFUSES to accept new listeners because it exceeded its threshold by far`);\n                return Disposable.None;\n            }\n            if (this._disposed) {\n                // todo: should we warn if a listener is added to a disposed emitter? This happens often\n                return Disposable.None;\n            }\n            if (thisArgs) {\n                callback = callback.bind(thisArgs);\n            }\n            const contained = new UniqueContainer(callback);\n            let removeMonitor;\n            let stack;\n            if (this._leakageMon && this._size >= Math.ceil(this._leakageMon.threshold * 0.2)) {\n                // check and record this emitter for potential leakage\n                contained.stack = Stacktrace.create();\n                removeMonitor = this._leakageMon.check(contained.stack, this._size + 1);\n            }\n            if (_enableDisposeWithListenerWarning) {\n                contained.stack = stack !== null && stack !== void 0 ? stack : Stacktrace.create();\n            }\n            if (!this._listeners) {\n                (_b = (_a = this._options) === null || _a === void 0 ? void 0 : _a.onWillAddFirstListener) === null || _b === void 0 ? void 0 : _b.call(_a, this);\n                this._listeners = contained;\n                (_d = (_c = this._options) === null || _c === void 0 ? void 0 : _c.onDidAddFirstListener) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n            }\n            else if (this._listeners instanceof UniqueContainer) {\n                (_e = this._deliveryQueue) !== null && _e !== void 0 ? _e : (this._deliveryQueue = new EventDeliveryQueuePrivate());\n                this._listeners = [this._listeners, contained];\n            }\n            else {\n                this._listeners.push(contained);\n            }\n            this._size++;\n            const result = toDisposable(() => { removeMonitor === null || removeMonitor === void 0 ? void 0 : removeMonitor(); this._removeListener(contained); });\n            if (disposables instanceof DisposableStore) {\n                disposables.add(result);\n            }\n            else if (Array.isArray(disposables)) {\n                disposables.push(result);\n            }\n            return result;\n        });\n        return this._event;\n    }\n    _removeListener(listener) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this._options) === null || _a === void 0 ? void 0 : _a.onWillRemoveListener) === null || _b === void 0 ? void 0 : _b.call(_a, this);\n        if (!this._listeners) {\n            return; // expected if a listener gets disposed\n        }\n        if (this._size === 1) {\n            this._listeners = undefined;\n            (_d = (_c = this._options) === null || _c === void 0 ? void 0 : _c.onDidRemoveLastListener) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n            this._size = 0;\n            return;\n        }\n        // size > 1 which requires that listeners be a list:\n        const listeners = this._listeners;\n        const index = listeners.indexOf(listener);\n        if (index === -1) {\n            console.log('disposed?', this._disposed);\n            console.log('size?', this._size);\n            console.log('arr?', JSON.stringify(this._listeners));\n            throw new Error('Attempted to dispose unknown listener');\n        }\n        this._size--;\n        listeners[index] = undefined;\n        const adjustDeliveryQueue = this._deliveryQueue.current === this;\n        if (this._size * compactionThreshold <= listeners.length) {\n            let n = 0;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listeners[i]) {\n                    listeners[n++] = listeners[i];\n                }\n                else if (adjustDeliveryQueue) {\n                    this._deliveryQueue.end--;\n                    if (n < this._deliveryQueue.i) {\n                        this._deliveryQueue.i--;\n                    }\n                }\n            }\n            listeners.length = n;\n        }\n    }\n    _deliver(listener, value) {\n        var _a;\n        if (!listener) {\n            return;\n        }\n        const errorHandler = ((_a = this._options) === null || _a === void 0 ? void 0 : _a.onListenerError) || onUnexpectedError;\n        if (!errorHandler) {\n            listener.value(value);\n            return;\n        }\n        try {\n            listener.value(value);\n        }\n        catch (e) {\n            errorHandler(e);\n        }\n    }\n    /** Delivers items in the queue. Assumes the queue is ready to go. */\n    _deliverQueue(dq) {\n        const listeners = dq.current._listeners;\n        while (dq.i < dq.end) {\n            // important: dq.i is incremented before calling deliver() because it might reenter deliverQueue()\n            this._deliver(listeners[dq.i++], dq.value);\n        }\n        dq.reset();\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        var _a, _b, _c, _d;\n        if ((_a = this._deliveryQueue) === null || _a === void 0 ? void 0 : _a.current) {\n            this._deliverQueue(this._deliveryQueue);\n            (_b = this._perfMon) === null || _b === void 0 ? void 0 : _b.stop(); // last fire() will have starting perfmon, stop it before starting the next dispatch\n        }\n        (_c = this._perfMon) === null || _c === void 0 ? void 0 : _c.start(this._size);\n        if (!this._listeners) {\n            // no-op\n        }\n        else if (this._listeners instanceof UniqueContainer) {\n            this._deliver(this._listeners, event);\n        }\n        else {\n            const dq = this._deliveryQueue;\n            dq.enqueue(this, event, this._listeners.length);\n            this._deliverQueue(dq);\n        }\n        (_d = this._perfMon) === null || _d === void 0 ? void 0 : _d.stop();\n    }\n    hasListeners() {\n        return this._size > 0;\n    }\n}\nexport const createEventDeliveryQueue = () => new EventDeliveryQueuePrivate();\nclass EventDeliveryQueuePrivate {\n    constructor() {\n        /**\n         * Index in current's listener list.\n         */\n        this.i = -1;\n        /**\n         * The last index in the listener's list to deliver.\n         */\n        this.end = 0;\n    }\n    enqueue(emitter, value, end) {\n        this.i = 0;\n        this.end = end;\n        this.current = emitter;\n        this.value = value;\n    }\n    reset() {\n        this.i = this.end; // force any current emission loop to stop, mainly for during dispose\n        this.current = undefined;\n        this.value = undefined;\n    }\n}\nexport class AsyncEmitter extends Emitter {\n    fireAsync(data, token, promiseJoin) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._listeners) {\n                return;\n            }\n            if (!this._asyncDeliveryQueue) {\n                this._asyncDeliveryQueue = new LinkedList();\n            }\n            forEachListener(this._listeners, listener => this._asyncDeliveryQueue.push([listener.value, data]));\n            while (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n                const [listener, data] = this._asyncDeliveryQueue.shift();\n                const thenables = [];\n                const event = Object.assign(Object.assign({}, data), { token, waitUntil: (p) => {\n                        if (Object.isFrozen(thenables)) {\n                            throw new Error('waitUntil can NOT be called asynchronous');\n                        }\n                        if (promiseJoin) {\n                            p = promiseJoin(p, listener);\n                        }\n                        thenables.push(p);\n                    } });\n                try {\n                    listener(event);\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                    continue;\n                }\n                // freeze thenables-collection to enforce sync-calls to\n                // wait until and then wait for all thenables to resolve\n                Object.freeze(thenables);\n                yield Promise.allSettled(thenables).then(values => {\n                    for (const value of values) {\n                        if (value.status === 'rejected') {\n                            onUnexpectedError(value.reason);\n                        }\n                    }\n                });\n            }\n        });\n    }\n}\nexport class PauseableEmitter extends Emitter {\n    get isPaused() {\n        return this._isPaused !== 0;\n    }\n    constructor(options) {\n        super(options);\n        this._isPaused = 0;\n        this._eventQueue = new LinkedList();\n        this._mergeFn = options === null || options === void 0 ? void 0 : options.merge;\n    }\n    pause() {\n        this._isPaused++;\n    }\n    resume() {\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\n            if (this._mergeFn) {\n                // use the merge function to create a single composite\n                // event. make a copy in case firing pauses this emitter\n                if (this._eventQueue.size > 0) {\n                    const events = Array.from(this._eventQueue);\n                    this._eventQueue.clear();\n                    super.fire(this._mergeFn(events));\n                }\n            }\n            else {\n                // no merging, fire each event individually and test\n                // that this emitter isn't paused halfway through\n                while (!this._isPaused && this._eventQueue.size !== 0) {\n                    super.fire(this._eventQueue.shift());\n                }\n            }\n        }\n    }\n    fire(event) {\n        if (this._size) {\n            if (this._isPaused !== 0) {\n                this._eventQueue.push(event);\n            }\n            else {\n                super.fire(event);\n            }\n        }\n    }\n}\nexport class DebounceEmitter extends PauseableEmitter {\n    constructor(options) {\n        var _a;\n        super(options);\n        this._delay = (_a = options.delay) !== null && _a !== void 0 ? _a : 100;\n    }\n    fire(event) {\n        if (!this._handle) {\n            this.pause();\n            this._handle = setTimeout(() => {\n                this._handle = undefined;\n                this.resume();\n            }, this._delay);\n        }\n        super.fire(event);\n    }\n}\n/**\n * An emitter which queue all events and then process them at the\n * end of the event loop.\n */\nexport class MicrotaskEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._queuedEvents = [];\n        this._mergeFn = options === null || options === void 0 ? void 0 : options.merge;\n    }\n    fire(event) {\n        if (!this.hasListeners()) {\n            return;\n        }\n        this._queuedEvents.push(event);\n        if (this._queuedEvents.length === 1) {\n            queueMicrotask(() => {\n                if (this._mergeFn) {\n                    super.fire(this._mergeFn(this._queuedEvents));\n                }\n                else {\n                    this._queuedEvents.forEach(e => super.fire(e));\n                }\n                this._queuedEvents = [];\n            });\n        }\n    }\n}\n/**\n * An event emitter that multiplexes many events into a single event.\n *\n * @example Listen to the `onData` event of all `Thing`s, dynamically adding and removing `Thing`s\n * to the multiplexer as needed.\n *\n * ```typescript\n * const anythingDataMultiplexer = new EventMultiplexer<{ data: string }>();\n *\n * const thingListeners = DisposableMap<Thing, IDisposable>();\n *\n * thingService.onDidAddThing(thing => {\n *   thingListeners.set(thing, anythingDataMultiplexer.add(thing.onData);\n * });\n * thingService.onDidRemoveThing(thing => {\n *   thingListeners.deleteAndDispose(thing);\n * });\n *\n * anythingDataMultiplexer.event(e => {\n *   console.log('Something fired data ' + e.data)\n * });\n * ```\n */\nexport class EventMultiplexer {\n    constructor() {\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = new Emitter({\n            onWillAddFirstListener: () => this.onFirstListenerAdd(),\n            onDidRemoveLastListener: () => this.onLastListenerRemove()\n        });\n    }\n    get event() {\n        return this.emitter.event;\n    }\n    add(event) {\n        const e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        const dispose = () => {\n            if (this.hasListeners) {\n                this.unhook(e);\n            }\n            const idx = this.events.indexOf(e);\n            this.events.splice(idx, 1);\n        };\n        return toDisposable(onceFn(dispose));\n    }\n    onFirstListenerAdd() {\n        this.hasListeners = true;\n        this.events.forEach(e => this.hook(e));\n    }\n    onLastListenerRemove() {\n        this.hasListeners = false;\n        this.events.forEach(e => this.unhook(e));\n    }\n    hook(e) {\n        e.listener = e.event(r => this.emitter.fire(r));\n    }\n    unhook(e) {\n        if (e.listener) {\n            e.listener.dispose();\n        }\n        e.listener = null;\n    }\n    dispose() {\n        this.emitter.dispose();\n    }\n}\nexport class DynamicListEventMultiplexer {\n    constructor(items, onAddItem, onRemoveItem, getEvent) {\n        this._store = new DisposableStore();\n        const multiplexer = this._store.add(new EventMultiplexer());\n        const itemListeners = this._store.add(new DisposableMap());\n        function addItem(instance) {\n            itemListeners.set(instance, multiplexer.add(getEvent(instance)));\n        }\n        // Existing items\n        for (const instance of items) {\n            addItem(instance);\n        }\n        // Added items\n        this._store.add(onAddItem(instance => {\n            addItem(instance);\n        }));\n        // Removed items\n        this._store.add(onRemoveItem(instance => {\n            itemListeners.deleteAndDispose(instance);\n        }));\n        this.event = multiplexer.event;\n    }\n    dispose() {\n        this._store.dispose();\n    }\n}\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n    constructor() {\n        this.buffers = [];\n    }\n    wrapEvent(event) {\n        return (listener, thisArgs, disposables) => {\n            return event(i => {\n                const buffer = this.buffers[this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(() => listener.call(thisArgs, i));\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, undefined, disposables);\n        };\n    }\n    bufferEvents(fn) {\n        const buffer = [];\n        this.buffers.push(buffer);\n        const r = fn();\n        this.buffers.pop();\n        buffer.forEach(flush => flush());\n        return r;\n    }\n}\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay {\n    constructor() {\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = new Emitter({\n            onDidAddFirstListener: () => {\n                this.listening = true;\n                this.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n            },\n            onDidRemoveLastListener: () => {\n                this.listening = false;\n                this.inputEventListener.dispose();\n            }\n        });\n        this.event = this.emitter.event;\n    }\n    set input(event) {\n        this.inputEvent = event;\n        if (this.listening) {\n            this.inputEventListener.dispose();\n            this.inputEventListener = event(this.emitter.fire, this.emitter);\n        }\n    }\n    dispose() {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nlet isPseudo = (typeof document !== 'undefined' && document.location && document.location.hash.indexOf('pseudo=true') >= 0);\nconst DEFAULT_TAG = 'i-default';\nfunction _format(message, args) {\n    let result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, (match, rest) => {\n            const index = rest[0];\n            const arg = args[index];\n            let result = match;\n            if (typeof arg === 'string') {\n                result = arg;\n            }\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n                result = String(arg);\n            }\n            return result;\n        });\n    }\n    if (isPseudo) {\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n        result = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n    }\n    return result;\n}\nfunction findLanguageForModule(config, name) {\n    let result = config[name];\n    if (result) {\n        return result;\n    }\n    result = config['*'];\n    if (result) {\n        return result;\n    }\n    return null;\n}\nfunction endWithSlash(path) {\n    if (path.charAt(path.length - 1) === '/') {\n        return path;\n    }\n    return path + '/';\n}\nfunction getMessagesFromTranslationsService(translationServiceUrl, language, name) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const url = endWithSlash(translationServiceUrl) + endWithSlash(language) + 'vscode/' + endWithSlash(name);\n        const res = yield fetch(url);\n        if (res.ok) {\n            const messages = yield res.json();\n            return messages;\n        }\n        throw new Error(`${res.status} - ${res.statusText}`);\n    });\n}\nfunction createScopedLocalize(scope) {\n    return function (idx, defaultValue) {\n        const restArgs = Array.prototype.slice.call(arguments, 2);\n        return _format(scope[idx], restArgs);\n    };\n}\n/**\n * @skipMangle\n */\nexport function localize(data, message, ...args) {\n    return _format(message, args);\n}\n/**\n * @skipMangle\n */\nexport function getConfiguredDefaultLocale(_) {\n    // This returns undefined because this implementation isn't used and is overwritten by the loader\n    // when loaded.\n    return undefined;\n}\n/**\n * @skipMangle\n */\nexport function setPseudoTranslation(value) {\n    isPseudo = value;\n}\n/**\n * Invoked in a built product at run-time\n * @skipMangle\n */\nexport function create(key, data) {\n    var _a;\n    return {\n        localize: createScopedLocalize(data[key]),\n        getConfiguredDefaultLocale: (_a = data.getConfiguredDefaultLocale) !== null && _a !== void 0 ? _a : ((_) => undefined)\n    };\n}\n/**\n * Invoked by the loader at run-time\n * @skipMangle\n */\nexport function load(name, req, load, config) {\n    var _a;\n    const pluginConfig = (_a = config['vs/nls']) !== null && _a !== void 0 ? _a : {};\n    if (!name || name.length === 0) {\n        // TODO: We need to give back the mangled names here\n        return load({\n            localize: localize,\n            getConfiguredDefaultLocale: () => { var _a; return (_a = pluginConfig.availableLanguages) === null || _a === void 0 ? void 0 : _a['*']; }\n        });\n    }\n    const language = pluginConfig.availableLanguages ? findLanguageForModule(pluginConfig.availableLanguages, name) : null;\n    const useDefaultLanguage = language === null || language === DEFAULT_TAG;\n    let suffix = '.nls';\n    if (!useDefaultLanguage) {\n        suffix = suffix + '.' + language;\n    }\n    const messagesLoaded = (messages) => {\n        if (Array.isArray(messages)) {\n            messages.localize = createScopedLocalize(messages);\n        }\n        else {\n            messages.localize = createScopedLocalize(messages[name]);\n        }\n        messages.getConfiguredDefaultLocale = () => { var _a; return (_a = pluginConfig.availableLanguages) === null || _a === void 0 ? void 0 : _a['*']; };\n        load(messages);\n    };\n    if (typeof pluginConfig.loadBundle === 'function') {\n        pluginConfig.loadBundle(name, language, (err, messages) => {\n            // We have an error. Load the English default strings to not fail\n            if (err) {\n                req([name + '.nls'], messagesLoaded);\n            }\n            else {\n                messagesLoaded(messages);\n            }\n        });\n    }\n    else if (pluginConfig.translationServiceUrl && !useDefaultLanguage) {\n        (() => __awaiter(this, void 0, void 0, function* () {\n            var _b;\n            try {\n                const messages = yield getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, language, name);\n                return messagesLoaded(messages);\n            }\n            catch (err) {\n                // Language is already as generic as it gets, so require default messages\n                if (!language.includes('-')) {\n                    console.error(err);\n                    return req([name + '.nls'], messagesLoaded);\n                }\n                try {\n                    // Since there is a dash, the language configured is a specific sub-language of the same generic language.\n                    // Since we were unable to load the specific language, try to load the generic language. Ex. we failed to find a\n                    // Swiss German (de-CH), so try to load the generic German (de) messages instead.\n                    const genericLanguage = language.split('-')[0];\n                    const messages = yield getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, genericLanguage, name);\n                    // We got some messages, so we configure the configuration to use the generic language for this session.\n                    (_b = pluginConfig.availableLanguages) !== null && _b !== void 0 ? _b : (pluginConfig.availableLanguages = {});\n                    pluginConfig.availableLanguages['*'] = genericLanguage;\n                    return messagesLoaded(messages);\n                }\n                catch (err) {\n                    console.error(err);\n                    return req([name + '.nls'], messagesLoaded);\n                }\n            }\n        }))();\n    }\n    else {\n        req([name + suffix], messagesLoaded, (err) => {\n            if (suffix === '.nls') {\n                console.error('Failed trying to load default language strings', err);\n                return;\n            }\n            console.error(`Failed to load message bundle for language ${language}. Falling back to the default language:`, err);\n            req([name + '.nls'], messagesLoaded);\n        });\n    }\n}\n", "var _a;\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nexport const LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _platformLocale = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\n/**\n * @deprecated use `globalThis` instead\n */\nexport const globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nlet nodeProcess = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    // Native environment (sandboxed)\n    nodeProcess = globals.vscode.process;\n}\nelse if (typeof process !== 'undefined') {\n    // Native environment (non-sandboxed)\n    nodeProcess = process;\n}\nconst isElectronProcess = typeof ((_a = nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.versions) === null || _a === void 0 ? void 0 : _a.electron) === 'string';\nconst isElectronRenderer = isElectronProcess && (nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.type) === 'renderer';\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isMobile = (_userAgent === null || _userAgent === void 0 ? void 0 : _userAgent.indexOf('Mobi')) >= 0;\n    _isWeb = true;\n    const configuredLocale = nls.getConfiguredDefaultLocale(\n    // This call _must_ be done in the file that calls `nls.getConfiguredDefaultLocale`\n    // to ensure that the NLS AMD Loader plugin has been loaded and configured.\n    // This is because the loader plugin decides what the default locale is based on\n    // how it's able to resolve the strings.\n    nls.localize({ key: 'ensureLoaderPluginIsLoaded', comment: ['{Locked}'] }, '_'));\n    _locale = configuredLocale || LANGUAGE_DEFAULT;\n    _language = _locale;\n    _platformLocale = navigator.language;\n}\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n    _isElectron = isElectronProcess;\n    _isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            const resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            _platformLocale = nlsConfig.osLocale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\n// Unknown environment\nelse {\n    console.error('Unable to resolve platform.');\n}\nexport function PlatformToString(platform) {\n    switch (platform) {\n        case 0 /* Platform.Web */: return 'Web';\n        case 1 /* Platform.Mac */: return 'Mac';\n        case 2 /* Platform.Linux */: return 'Linux';\n        case 3 /* Platform.Windows */: return 'Windows';\n    }\n}\nlet _platform = 0 /* Platform.Web */;\nif (_isMacintosh) {\n    _platform = 1 /* Platform.Mac */;\n}\nelse if (_isWindows) {\n    _platform = 3 /* Platform.Windows */;\n}\nelse if (_isLinux) {\n    _platform = 2 /* Platform.Linux */;\n}\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isLinuxSnap = _isLinuxSnap;\nexport const isNative = _isNative;\nexport const isElectron = _isElectron;\nexport const isWeb = _isWeb;\nexport const isWebWorker = (_isWeb && typeof globals.importScripts === 'function');\nexport const isIOS = _isIOS;\nexport const isMobile = _isMobile;\n/**\n * Whether we run inside a CI environment, such as\n * GH actions or Azure Pipelines.\n */\nexport const isCI = _isCI;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\nexport var Language;\n(function (Language) {\n    function value() {\n        return language;\n    }\n    Language.value = value;\n    function isDefaultVariant() {\n        if (language.length === 2) {\n            return language === 'en';\n        }\n        else if (language.length >= 3) {\n            return language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n        }\n        else {\n            return false;\n        }\n    }\n    Language.isDefaultVariant = isDefaultVariant;\n    function isDefault() {\n        return language === 'en';\n    }\n    Language.isDefault = isDefault;\n})(Language || (Language = {}));\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n/**\n * This will always be set to the OS/browser's locale regardless of\n * what was specified by --locale. The format of the string is all\n * lower case (e.g. zh-tw for Traditional Chinese). The UI is not\n * necessarily shown in the provided locale.\n */\nexport const platformLocale = _platformLocale;\n/**\n * The translations that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\nexport const setTimeout0IsFaster = (typeof globals.postMessage === 'function' && !globals.importScripts);\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n    if (setTimeout0IsFaster) {\n        const pending = [];\n        globals.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeScheduleAsyncWork) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeScheduleAsyncWork) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            globals.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n        };\n    }\n    return (callback) => setTimeout(callback);\n})();\nexport const OS = (_isMacintosh || _isIOS ? 2 /* OperatingSystem.Macintosh */ : (_isWindows ? 1 /* OperatingSystem.Windows */ : 3 /* OperatingSystem.Linux */));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = new Uint8Array(2);\n        test[0] = 1;\n        test[1] = 2;\n        const view = new Uint16Array(test.buffer);\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\nexport const isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nexport const isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nexport const isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nexport const isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nexport const isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals, isMacintosh, isWindows } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    const sandboxProcess = globals.vscode.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); }\n    };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n    };\n}\n// Web environment\nelse {\n    safeProcess = {\n        // Supported\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined; /* arch is undefined in web */ },\n        // Unsupported\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n *\n * @skipMangle\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n/**\n * Provides safe access to the `arch` method in node.js, sandboxed or web\n * environments.\n * Note: `arch` is `undefined` in web\n */\nexport const arch = safeProcess.arch;\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v16.14.2/lib/path.js\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nimport * as process from './process.js';\nconst CHAR_UPPERCASE_A = 65; /* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        // determiner: 'must be' or 'must not be'\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateObject(pathObject, name) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw new ErrorInvalidArgType(name, 'Object', pathObject);\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw new ErrorInvalidArgType(name, 'string', value);\n    }\n}\nconst platformIsWin32 = (process.platform === 'win32');\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n        (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) {\n                // NOOP\n            }\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction _format(sep, pathObject) {\n    validateObject(pathObject, 'pathObject');\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${pathObject.ext || ''}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nexport const win32 = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, 'path');\n                // Skip empty entries\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = process.cwd();\n            }\n            else {\n                // Windows has the concept of drive-specific current working\n                // directories. If we've resolved a drive letter but not yet an\n                // absolute path, get cwd for that drive, or the process cwd if\n                // the drive cwd is not available. We're sure the device is not\n                // a UNC path at this points, because UNC paths are always absolute.\n                path = process.env[`=${resolvedDevice}`] || process.cwd();\n                // Verify that a cwd was found and that it actually points\n                // to our drive. If not, default to the drive's root.\n                if (path === undefined ||\n                    (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            // Try to match a root\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    // `path` contains just a path separator\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                // Possible UNC root\n                // If we started with a separator, we know we at least have an\n                // absolute path of some kind (UNC or otherwise)\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    // Matched double path separator at beginning\n                    let j = 2;\n                    let last = j;\n                    // Match 1 or more non-path separators\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        // Matched!\n                        last = j;\n                        // Match 1 or more path separators\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            // Matched!\n                            last = j;\n                            // Match 1 or more non-path separators\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                // We matched a UNC root\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                // Possible device root\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    // Treat separator following drive name as an absolute path\n                    // indicator\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        // This path points to another device so it is not applicable\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        // At this point the path should be resolved to a full absolute path,\n        // but handle relative paths to be safe (might happen when process.cwd()\n        // fails)\n        // Normalize the tail path\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        // Try to match a root\n        if (len === 1) {\n            // `path` contains just a single char, exit early to avoid\n            // unnecessary work\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            // If we started with a separator, we know we at least have an absolute\n            // path of some kind (UNC or otherwise)\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            // Return the normalized version of the UNC root since there\n                            // is nothing left to process\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                // Treat separator following drive name as an absolute path\n                // indicator\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            // Possible device root\n            (len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2)));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        // Make sure that the joined path doesn't start with two slashes, because\n        // normalize() will mistake it for a UNC path then.\n        //\n        // This step is skipped when it is very clear that the user actually\n        // intended to point at a UNC path. This is assumed when the first\n        // non-empty string arguments starts with exactly two slashes followed by\n        // at least one more non-slash character.\n        //\n        // Note that for normalize() to treat a path as a UNC path it needs to\n        // have at least 2 components, so we don't filter for that here.\n        // This means that the user can use join to construct UNC paths from\n        // a server name and a share name; for example:\n        //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        // We matched a UNC path in the first part\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            // Find any more consecutive slashes we need to replace\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            // Replace the slashes if needed\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    // It will solve the relative path from `from` to `to`, for instance:\n    //  from = 'C:\\\\orandea\\\\test\\\\aaa'\n    //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n    // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        // Trim any leading backslashes\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        // Trim any leading backslashes\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        // Compare paths to find the longest common path from root\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        // We found a mismatch before the first common path separator was seen, so\n        // return the original `to`.\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    // We get here if `from` is the device root.\n                    // For example: from='C:\\\\'; to='C:\\\\foo'\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    // We get here if `to` is the device root.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to` and\n        // `from`\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        // Note: this will *probably* throw somewhere.\n        if (typeof path !== 'string' || path.length === 0) {\n            return path;\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            // Possible UNC root\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    // Matched non-long UNC root, convert the path to a long UNC path\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            // Matched device root, convert the path to a long UNC path\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            // `path` contains just a path separator, exit early to avoid\n            // unnecessary work or a dot.\n            return isPathSeparator(code) ? path : '.';\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            return path;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            // Offset by 1 to include the separator after the UNC root to\n                            // treat it as a \"normal root\" on top of a (UNC) root\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n            // Possible device root\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                // `path` contains just a path separator, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            if (len <= 2) {\n                // `path` contains just a drive root, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    // `path` contains just a drive root, exit early to avoid\n                    // unnecessary work\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        // If the directory is the root, use the entire root as the `dir` including\n        // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n        // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nconst posixCwd = (() => {\n    if (platformIsWin32) {\n        // Converts Windows' backslash path separators to POSIX forward slashes\n        // and truncates any drive indicator\n        const regexp = /\\\\/g;\n        return () => {\n            const cwd = process.cwd().replace(regexp, '/');\n            return cwd.slice(cwd.indexOf('/'));\n        };\n    }\n    // We're already on POSIX, no need for any transformations\n    return () => process.cwd();\n})();\nexport const posix = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : posixCwd();\n            validateString(path, 'path');\n            // Skip empty entries\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        // Normalize the path\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        // Normalize the path\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        // Trim leading forward slashes.\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        // Compare paths to find the longest common path from root\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    // We get here if `to` is the root.\n                    // For example: from='/foo/bar'; to='/'\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to`\n        // and `from`.\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts.\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        // Non-op on posix systems\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nexport const normalize = (platformIsWin32 ? win32.normalize : posix.normalize);\nexport const isAbsolute = (platformIsWin32 ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (platformIsWin32 ? win32.join : posix.join);\nexport const resolve = (platformIsWin32 ? win32.resolve : posix.resolve);\nexport const relative = (platformIsWin32 ? win32.relative : posix.relative);\nexport const dirname = (platformIsWin32 ? win32.dirname : posix.dirname);\nexport const basename = (platformIsWin32 ? win32.basename : posix.basename);\nexport const extname = (platformIsWin32 ? win32.extname : posix.extname);\nexport const format = (platformIsWin32 ? win32.format : posix.format);\nexport const parse = (platformIsWin32 ? win32.parse : posix.parse);\nexport const toNamespacedPath = (platformIsWin32 ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (platformIsWin32 ? win32.sep : posix.sep);\nexport const delimiter = (platformIsWin32 ? win32.delimiter : posix.delimiter);\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI {\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    /**\n     * @internal\n     */\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    // ---- filesystem path -----------------------\n    /**\n     * Returns a string representing the corresponding file system path of this URI.\n     * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n     * platform specific path separator.\n     *\n     * * Will *not* validate the path for invalid characters and semantics.\n     * * Will *not* look at the scheme of this URI.\n     * * The result shall *not* be used for display purposes but for accessing a file on disk.\n     *\n     *\n     * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n     * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n     *\n     * ```ts\n        const u = URI.parse('file://server/c$/folder/file.txt')\n        u.authority === 'server'\n        u.path === '/shares/c$/file.txt'\n        u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n    ```\n     *\n     * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n     * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n     * with URIs that represent files on disk (`file` scheme).\n     */\n    get fsPath() {\n        // if (this.scheme !== 'file') {\n        // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n        // }\n        return uriToFsPath(this, false);\n    }\n    // ---- modify to new -------------------------\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new Uri(scheme, authority, path, query, fragment);\n    }\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return new Uri(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new Uri(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    }\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    static file(path) {\n        let authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new Uri('file', authority, path, _empty, _empty);\n    }\n    /**\n     * Creates new URI from uri components.\n     *\n     * Unless `strict` is `true` the scheme is defaults to be `file`. This function performs\n     * validation and should be used for untrusted uri components retrieved from storage,\n     * user input, command arguments etc\n     */\n    static from(components, strict) {\n        const result = new Uri(components.scheme, components.authority, components.path, components.query, components.fragment, strict);\n        return result;\n    }\n    /**\n     * Join a URI path with path fragments and normalizes the resulting path.\n     *\n     * @param uri The input URI.\n     * @param pathFragment The path fragment to add to the URI path.\n     * @returns The resulting URI.\n     */\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw new Error(`[UriError]: cannot call joinPath on URI without path`);\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = paths.posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        var _a, _b;\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = new Uri(data);\n            result._formatted = (_a = data.external) !== null && _a !== void 0 ? _a : null;\n            result._fsPath = data._sep === _pathSepMarker ? (_b = data.fsPath) !== null && _b !== void 0 ? _b : null : null;\n            return result;\n        }\n    }\n}\nexport function isUriComponents(thing) {\n    if (!thing || typeof thing !== 'object') {\n        return false;\n    }\n    return typeof thing.scheme === 'string'\n        && (typeof thing.authority === 'string' || typeof thing.authority === 'undefined')\n        && (typeof thing.path === 'string' || typeof thing.path === 'undefined')\n        && (typeof thing.query === 'string' || typeof thing.query === 'undefined')\n        && (typeof thing.fragment === 'string' || typeof thing.fragment === 'undefined');\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1 /* MarshalledId.Uri */\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        //--- uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        // TODO\n        // this isn't correct and can violate the UriComponents contract but\n        // this is part of the vscode.Uri API and we shouldn't change how that\n        // works anymore\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable = {\n    [58 /* CharCode.Colon */]: '%3A',\n    [47 /* CharCode.Slash */]: '%2F',\n    [63 /* CharCode.QuestionMark */]: '%3F',\n    [35 /* CharCode.Hash */]: '%23',\n    [91 /* CharCode.OpenSquareBracket */]: '%5B',\n    [93 /* CharCode.CloseSquareBracket */]: '%5D',\n    [64 /* CharCode.AtSign */]: '%40',\n    [33 /* CharCode.ExclamationMark */]: '%21',\n    [36 /* CharCode.DollarSign */]: '%24',\n    [38 /* CharCode.Ampersand */]: '%26',\n    [39 /* CharCode.SingleQuote */]: '%27',\n    [40 /* CharCode.OpenParen */]: '%28',\n    [41 /* CharCode.CloseParen */]: '%29',\n    [42 /* CharCode.Asterisk */]: '%2A',\n    [43 /* CharCode.Plus */]: '%2B',\n    [44 /* CharCode.Comma */]: '%2C',\n    [59 /* CharCode.Semicolon */]: '%3B',\n    [61 /* CharCode.Equals */]: '%3D',\n    [32 /* CharCode.Space */]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, isPath, isAuthority) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */)\n            || (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */)\n            || (code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */)\n            || code === 45 /* CharCode.Dash */\n            || code === 46 /* CharCode.Period */\n            || code === 95 /* CharCode.Underline */\n            || code === 126 /* CharCode.Tilde */\n            || (isPath && code === 47 /* CharCode.Slash */)\n            || (isAuthority && code === 91 /* CharCode.OpenSquareBracket */)\n            || (isAuthority && code === 93 /* CharCode.CloseSquareBracket */)\n            || (isAuthority && code === 58 /* CharCode.Colon */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35 /* CharCode.Hash */ || code === 63 /* CharCode.QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* CharCode.Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* CharCode.A */ && uri.path.charCodeAt(1) <= 90 /* CharCode.Z */ || uri.path.charCodeAt(1) >= 97 /* CharCode.a */ && uri.path.charCodeAt(1) <= 122 /* CharCode.z */)\n        && uri.path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.lastIndexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false, false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false, true);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.lastIndexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false, true);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false, true);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* CharCode.Slash */ && path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true, false);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = setTimeout(callback.bind(context), 0);\n    return { dispose() { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    }\n}\nexport class CancellationTokenSource {\n    constructor(parent) {\n        this._token = undefined;\n        this._parentListener = undefined;\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    }\n    dispose(cancel = false) {\n        var _a;\n        if (cancel) {\n            this.cancel();\n        }\n        (_a = this._parentListener) === null || _a === void 0 ? void 0 : _a.dispose();\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// ------ internal util\nexport var _util;\n(function (_util) {\n    _util.serviceIds = new Map();\n    _util.DI_TARGET = '$di$target';\n    _util.DI_DEPENDENCIES = '$di$dependencies';\n    function getServiceDependencies(ctor) {\n        return ctor[_util.DI_DEPENDENCIES] || [];\n    }\n    _util.getServiceDependencies = getServiceDependencies;\n})(_util || (_util = {}));\nexport const IInstantiationService = createDecorator('instantiationService');\nfunction storeServiceDependency(id, target, index) {\n    if (target[_util.DI_TARGET] === target) {\n        target[_util.DI_DEPENDENCIES].push({ id, index });\n    }\n    else {\n        target[_util.DI_DEPENDENCIES] = [{ id, index }];\n        target[_util.DI_TARGET] = target;\n    }\n}\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator(serviceId) {\n    if (_util.serviceIds.has(serviceId)) {\n        return _util.serviceIds.get(serviceId);\n    }\n    const id = function (target, key, index) {\n        if (arguments.length !== 3) {\n            throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n        }\n        storeServiceDependency(id, target, index);\n    };\n    id.toString = () => serviceId;\n    _util.serviceIds.set(serviceId, id);\n    return id;\n}\nexport function refineServiceDecorator(serviceIdentifier) {\n    return serviceIdentifier;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a, _b, _c;\nexport function getOrSet(map, key, value) {\n    let result = map.get(key);\n    if (result === undefined) {\n        result = value;\n        map.set(key, result);\n    }\n    return result;\n}\nexport function mapToString(map) {\n    const entries = [];\n    map.forEach((value, key) => {\n        entries.push(`${key} => ${value}`);\n    });\n    return `Map(${map.size}) {${entries.join(', ')}}`;\n}\nexport function setToString(set) {\n    const entries = [];\n    set.forEach(value => {\n        entries.push(value);\n    });\n    return `Set(${set.size}) {${entries.join(', ')}}`;\n}\nclass ResourceMapEntry {\n    constructor(uri, value) {\n        this.uri = uri;\n        this.value = value;\n    }\n}\nexport class ResourceMap {\n    constructor(mapOrKeyFn, toKey) {\n        this[_a] = 'ResourceMap';\n        if (mapOrKeyFn instanceof ResourceMap) {\n            this.map = new Map(mapOrKeyFn.map);\n            this.toKey = toKey !== null && toKey !== void 0 ? toKey : ResourceMap.defaultToKey;\n        }\n        else {\n            this.map = new Map();\n            this.toKey = mapOrKeyFn !== null && mapOrKeyFn !== void 0 ? mapOrKeyFn : ResourceMap.defaultToKey;\n        }\n    }\n    set(resource, value) {\n        this.map.set(this.toKey(resource), new ResourceMapEntry(resource, value));\n        return this;\n    }\n    get(resource) {\n        var _d;\n        return (_d = this.map.get(this.toKey(resource))) === null || _d === void 0 ? void 0 : _d.value;\n    }\n    has(resource) {\n        return this.map.has(this.toKey(resource));\n    }\n    get size() {\n        return this.map.size;\n    }\n    clear() {\n        this.map.clear();\n    }\n    delete(resource) {\n        return this.map.delete(this.toKey(resource));\n    }\n    forEach(clb, thisArg) {\n        if (typeof thisArg !== 'undefined') {\n            clb = clb.bind(thisArg);\n        }\n        for (const [_, entry] of this.map) {\n            clb(entry.value, entry.uri, this);\n        }\n    }\n    *values() {\n        for (const entry of this.map.values()) {\n            yield entry.value;\n        }\n    }\n    *keys() {\n        for (const entry of this.map.values()) {\n            yield entry.uri;\n        }\n    }\n    *entries() {\n        for (const entry of this.map.values()) {\n            yield [entry.uri, entry.value];\n        }\n    }\n    *[(_a = Symbol.toStringTag, Symbol.iterator)]() {\n        for (const [, entry] of this.map) {\n            yield [entry.uri, entry.value];\n        }\n    }\n}\nResourceMap.defaultToKey = (resource) => resource.toString();\nexport class ResourceSet {\n    constructor(entriesOrKey, toKey) {\n        this[_b] = 'ResourceSet';\n        if (!entriesOrKey || typeof entriesOrKey === 'function') {\n            this._map = new ResourceMap(entriesOrKey);\n        }\n        else {\n            this._map = new ResourceMap(toKey);\n            entriesOrKey.forEach(this.add, this);\n        }\n    }\n    get size() {\n        return this._map.size;\n    }\n    add(value) {\n        this._map.set(value, value);\n        return this;\n    }\n    clear() {\n        this._map.clear();\n    }\n    delete(value) {\n        return this._map.delete(value);\n    }\n    forEach(callbackfn, thisArg) {\n        this._map.forEach((_value, key) => callbackfn.call(thisArg, key, key, this));\n    }\n    has(value) {\n        return this._map.has(value);\n    }\n    entries() {\n        return this._map.entries();\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.keys();\n    }\n    [(_b = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.keys();\n    }\n}\nexport class LinkedMap {\n    constructor() {\n        this[_c] = 'LinkedMap';\n        this._map = new Map();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        var _d;\n        return (_d = this._head) === null || _d === void 0 ? void 0 : _d.value;\n    }\n    get last() {\n        var _d;\n        return (_d = this._tail) === null || _d === void 0 ? void 0 : _d.value;\n    }\n    has(key) {\n        return this._map.has(key);\n    }\n    get(key, touch = 0 /* Touch.None */) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== 0 /* Touch.None */) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = 0 /* Touch.None */) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== 0 /* Touch.None */) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case 0 /* Touch.None */:\n                    this.addItemLast(item);\n                    break;\n                case 1 /* Touch.AsOld */:\n                    this.addItemFirst(item);\n                    break;\n                case 2 /* Touch.AsNew */:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw new Error(`LinkedMap got modified during iteration.`);\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [(_c = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            // This can only happen if size === 1 which is handled\n            // by the case above.\n            if (!item.next) {\n                throw new Error('Invalid list');\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            // This can only happen if size === 1 which is handled\n            // by the case above.\n            if (!item.previous) {\n                throw new Error('Invalid list');\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if ((touch !== 1 /* Touch.AsOld */ && touch !== 2 /* Touch.AsNew */)) {\n            return;\n        }\n        if (touch === 1 /* Touch.AsOld */) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item\n            if (item === this._tail) {\n                // previous must be defined since item was not head but is tail\n                // So there are more than on item in the map\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            // Insert the node at head\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === 2 /* Touch.AsNew */) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item.\n            if (item === this._head) {\n                // next must be defined since item was not tail but is head\n                // So there are more than on item in the map\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nexport class LRUCache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get ratio() {\n        return this._ratio;\n    }\n    set ratio(ratio) {\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n        this.checkTrim();\n    }\n    get(key, touch = 2 /* Touch.AsNew */) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, 0 /* Touch.None */);\n    }\n    set(key, value) {\n        super.set(key, value, 2 /* Touch.AsNew */);\n        this.checkTrim();\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trimOld(Math.round(this._limit * this._ratio));\n        }\n    }\n}\nexport class CounterSet {\n    constructor() {\n        this.map = new Map();\n    }\n    add(value) {\n        this.map.set(value, (this.map.get(value) || 0) + 1);\n        return this;\n    }\n    delete(value) {\n        let counter = this.map.get(value) || 0;\n        if (counter === 0) {\n            return false;\n        }\n        counter--;\n        if (counter === 0) {\n            this.map.delete(value);\n        }\n        else {\n            this.map.set(value, counter);\n        }\n        return true;\n    }\n    has(value) {\n        return this.map.has(value);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as errors from './errors.js';\nimport { toDisposable } from './lifecycle.js';\nimport { ResourceMap } from './map.js';\nimport * as platform from './platform.js';\nimport { URI } from './uri.js';\nexport var Schemas;\n(function (Schemas) {\n    /**\n     * A schema that is used for models that exist in memory\n     * only and that have no correspondence on a server or such.\n     */\n    Schemas.inMemory = 'inmemory';\n    /**\n     * A schema that is used for setting files\n     */\n    Schemas.vscode = 'vscode';\n    /**\n     * A schema that is used for internal private files\n     */\n    Schemas.internal = 'private';\n    /**\n     * A walk-through document.\n     */\n    Schemas.walkThrough = 'walkThrough';\n    /**\n     * An embedded code snippet.\n     */\n    Schemas.walkThroughSnippet = 'walkThroughSnippet';\n    Schemas.http = 'http';\n    Schemas.https = 'https';\n    Schemas.file = 'file';\n    Schemas.mailto = 'mailto';\n    Schemas.untitled = 'untitled';\n    Schemas.data = 'data';\n    Schemas.command = 'command';\n    Schemas.vscodeRemote = 'vscode-remote';\n    Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n    Schemas.vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n    Schemas.vscodeUserData = 'vscode-userdata';\n    Schemas.vscodeCustomEditor = 'vscode-custom-editor';\n    Schemas.vscodeNotebookCell = 'vscode-notebook-cell';\n    Schemas.vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n    Schemas.vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n    Schemas.vscodeInteractiveInput = 'vscode-interactive-input';\n    Schemas.vscodeSettings = 'vscode-settings';\n    Schemas.vscodeWorkspaceTrust = 'vscode-workspace-trust';\n    Schemas.vscodeTerminal = 'vscode-terminal';\n    Schemas.vscodeChatSesssion = 'vscode-chat-editor';\n    /**\n     * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n     */\n    Schemas.webviewPanel = 'webview-panel';\n    /**\n     * Scheme used for loading the wrapper html and script in webviews.\n     */\n    Schemas.vscodeWebview = 'vscode-webview';\n    /**\n     * Scheme used for extension pages\n     */\n    Schemas.extension = 'extension';\n    /**\n     * Scheme used as a replacement of `file` scheme to load\n     * files with our custom protocol handler (desktop only).\n     */\n    Schemas.vscodeFileResource = 'vscode-file';\n    /**\n     * Scheme used for temporary resources\n     */\n    Schemas.tmp = 'tmp';\n    /**\n     * Scheme used vs live share\n     */\n    Schemas.vsls = 'vsls';\n    /**\n     * Scheme used for the Source Control commit input's text document\n     */\n    Schemas.vscodeSourceControl = 'vscode-scm';\n})(Schemas || (Schemas = {}));\nexport const connectionTokenCookieName = 'vscode-tkn';\nexport const connectionTokenQueryName = 'tkn';\nclass RemoteAuthoritiesImpl {\n    constructor() {\n        this._hosts = Object.create(null);\n        this._ports = Object.create(null);\n        this._connectionTokens = Object.create(null);\n        this._preferredWebSchema = 'http';\n        this._delegate = null;\n        this._remoteResourcesPath = `/${Schemas.vscodeRemoteResource}`;\n    }\n    setPreferredWebSchema(schema) {\n        this._preferredWebSchema = schema;\n    }\n    setDelegate(delegate) {\n        this._delegate = delegate;\n    }\n    setServerRootPath(serverRootPath) {\n        this._remoteResourcesPath = `${serverRootPath}/${Schemas.vscodeRemoteResource}`;\n    }\n    set(authority, host, port) {\n        this._hosts[authority] = host;\n        this._ports[authority] = port;\n    }\n    setConnectionToken(authority, connectionToken) {\n        this._connectionTokens[authority] = connectionToken;\n    }\n    getPreferredWebSchema() {\n        return this._preferredWebSchema;\n    }\n    rewrite(uri) {\n        if (this._delegate) {\n            try {\n                return this._delegate(uri);\n            }\n            catch (err) {\n                errors.onUnexpectedError(err);\n                return uri;\n            }\n        }\n        const authority = uri.authority;\n        let host = this._hosts[authority];\n        if (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n            host = `[${host}]`;\n        }\n        const port = this._ports[authority];\n        const connectionToken = this._connectionTokens[authority];\n        let query = `path=${encodeURIComponent(uri.path)}`;\n        if (typeof connectionToken === 'string') {\n            query += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n        }\n        return URI.from({\n            scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n            authority: `${host}:${port}`,\n            path: this._remoteResourcesPath,\n            query\n        });\n    }\n}\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\nexport const builtinExtensionsPath = 'vs/../../extensions';\nexport const nodeModulesPath = 'vs/../../node_modules';\nexport const nodeModulesAsarPath = 'vs/../../node_modules.asar';\nexport const nodeModulesAsarUnpackedPath = 'vs/../../node_modules.asar.unpacked';\nclass FileAccessImpl {\n    constructor() {\n        this.staticBrowserUris = new ResourceMap();\n    }\n    /**\n     * Returns a URI to use in contexts where the browser is responsible\n     * for loading (e.g. fetch()) or when used within the DOM.\n     *\n     * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n     */\n    asBrowserUri(resourcePath) {\n        const uri = this.toUri(resourcePath, globalThis.monacoRequire);\n        return this.uriToBrowserUri(uri);\n    }\n    /**\n     * Returns a URI to use in contexts where the browser is responsible\n     * for loading (e.g. fetch()) or when used within the DOM.\n     *\n     * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n     */\n    uriToBrowserUri(uri) {\n        var _a;\n        // Handle remote URIs via `RemoteAuthorities`\n        if (uri.scheme === Schemas.vscodeRemote) {\n            return RemoteAuthorities.rewrite(uri);\n        }\n        // Convert to `vscode-file` resource..\n        if (\n        // ...only ever for `file` resources\n        uri.scheme === Schemas.file &&\n            (\n            // ...and we run in native environments\n            platform.isNative ||\n                // ...or web worker extensions on desktop\n                (platform.isWebWorker && platform.globals.origin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`))) {\n            return uri.with({\n                scheme: Schemas.vscodeFileResource,\n                // We need to provide an authority here so that it can serve\n                // as origin for network and loading matters in chromium.\n                // If the URI is not coming with an authority already, we\n                // add our own\n                authority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n                query: null,\n                fragment: null\n            });\n        }\n        return (_a = this.staticBrowserUris.get(uri)) !== null && _a !== void 0 ? _a : uri;\n    }\n    /**\n     * Returns the `file` URI to use in contexts where node.js\n     * is responsible for loading.\n     */\n    asFileUri(resourcePath) {\n        const uri = this.toUri(resourcePath, globalThis.monacoRequire);\n        return this.uriToFileUri(uri);\n    }\n    /**\n     * Returns the `file` URI to use in contexts where node.js\n     * is responsible for loading.\n     */\n    uriToFileUri(uri) {\n        // Only convert the URI if it is `vscode-file:` scheme\n        if (uri.scheme === Schemas.vscodeFileResource) {\n            return uri.with({\n                scheme: Schemas.file,\n                // Only preserve the `authority` if it is different from\n                // our fallback authority. This ensures we properly preserve\n                // Windows UNC paths that come with their own authority.\n                authority: uri.authority !== FileAccessImpl.FALLBACK_AUTHORITY ? uri.authority : null,\n                query: null,\n                fragment: null\n            });\n        }\n        return uri;\n    }\n    toUri(uriOrModule, moduleIdToUrl) {\n        if (URI.isUri(uriOrModule)) {\n            return uriOrModule;\n        }\n        return URI.parse(moduleIdToUrl.toUrl(uriOrModule));\n    }\n    registerStaticBrowserUri(uri, browserUri) {\n        this.staticBrowserUris.set(uri, browserUri);\n        return toDisposable(() => {\n            if (this.staticBrowserUris.get(uri) === browserUri) {\n                this.staticBrowserUris.delete(uri);\n            }\n        });\n    }\n    getRegisteredBrowserUris() {\n        return this.staticBrowserUris.keys();\n    }\n}\nFileAccessImpl.FALLBACK_AUTHORITY = 'vscode-app';\nexport const FileAccess = new FileAccessImpl();\nexport var COI;\n(function (COI) {\n    const coiHeaders = new Map([\n        ['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n        ['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n        ['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n    ]);\n    COI.CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n    const coiSearchParamName = 'vscode-coi';\n    /**\n     * Extract desired headers from `vscode-coi` invocation\n     */\n    function getHeadersFromQuery(url) {\n        let params;\n        if (typeof url === 'string') {\n            params = new URL(url).searchParams;\n        }\n        else if (url instanceof URL) {\n            params = url.searchParams;\n        }\n        else if (URI.isUri(url)) {\n            params = new URL(url.toString(true)).searchParams;\n        }\n        const value = params === null || params === void 0 ? void 0 : params.get(coiSearchParamName);\n        if (!value) {\n            return undefined;\n        }\n        return coiHeaders.get(value);\n    }\n    COI.getHeadersFromQuery = getHeadersFromQuery;\n    /**\n     * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n     * isn't enabled the current context\n     */\n    function addSearchParam(urlOrSearch, coop, coep) {\n        if (!globalThis.crossOriginIsolated) {\n            // depends on the current context being COI\n            return;\n        }\n        const value = coop && coep ? '3' : coep ? '2' : '1';\n        if (urlOrSearch instanceof URLSearchParams) {\n            urlOrSearch.set(coiSearchParamName, value);\n        }\n        else {\n            urlOrSearch[coiSearchParamName] = value;\n        }\n    }\n    COI.addSearchParam = addSearchParam;\n})(COI || (COI = {}));\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    return (typeof str === 'string');\n}\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value) {\n    return Array.isArray(value) && value.every(elem => isString(elem));\n}\n/**\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * @returns whether the provided parameter is of type `Buffer` or Uint8Array dervived type\n */\nexport function isTypedArray(obj) {\n    const TypedArray = Object.getPrototypeOf(Uint8Array);\n    return typeof obj === 'object'\n        && obj instanceof TypedArray;\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return (obj === true || obj === false);\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nexport function assertType(condition, type) {\n    if (!condition) {\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n    }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n    return arg;\n}\nexport function assertAllDefined(...args) {\n    const result = [];\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (isUndefinedOrNull(arg)) {\n            throw new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n        }\n        result.push(arg);\n    }\n    return result;\n}\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj) {\n    if (!isObject(obj)) {\n        return false;\n    }\n    for (const key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return (typeof obj === 'function');\n}\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects) {\n    return objects.length > 0 && objects.every(isFunction);\n}\nexport function validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationTokenSource } from './cancellation.js';\nexport class Cache {\n    constructor(task) {\n        this.task = task;\n        this.result = null;\n    }\n    get() {\n        if (this.result) {\n            return this.result;\n        }\n        const cts = new CancellationTokenSource();\n        const promise = this.task(cts.token);\n        this.result = {\n            promise,\n            dispose: () => {\n                this.result = null;\n                cts.cancel();\n                cts.dispose();\n            }\n        };\n        return this.result;\n    }\n}\n/**\n * Uses a LRU cache to make a given parametrized function cached.\n * Caches just the last value.\n * The key must be JSON serializable.\n*/\nexport class LRUCachedFunction {\n    constructor(fn) {\n        this.fn = fn;\n        this.lastCache = undefined;\n        this.lastArgKey = undefined;\n    }\n    get(arg) {\n        const key = JSON.stringify(arg);\n        if (this.lastArgKey !== key) {\n            this.lastArgKey = key;\n            this.lastCache = this.fn(arg);\n        }\n        return this.lastCache;\n    }\n}\n/**\n * Uses an unbounded cache (referential equality) to memoize the results of the given function.\n*/\nexport class CachedFunction {\n    get cachedValues() {\n        return this._map;\n    }\n    constructor(fn) {\n        this.fn = fn;\n        this._map = new Map();\n    }\n    get(arg) {\n        if (this._map.has(arg)) {\n            return this._map.get(arg);\n        }\n        const value = this.fn(arg);\n        this._map.set(arg, value);\n        return value;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Lazy {\n    constructor(executor) {\n        this.executor = executor;\n        this._didRun = false;\n    }\n    /**\n     * True if the lazy value has been resolved.\n     */\n    get hasValue() { return this._didRun; }\n    /**\n     * Get the wrapped value.\n     *\n     * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\n     * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\n     */\n    get value() {\n        if (!this._didRun) {\n            try {\n                this._value = this.executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    /**\n     * Get the wrapped value without forcing evaluation.\n     */\n    get rawValue() { return this._value; }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nimport { LRUCachedFunction } from './cache.js';\nimport { Lazy } from './lazy.js';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\nconst _format2Regexp = /{([^}]+)}/g;\n/**\n * Helper to create a string from a template and a string record.\n * Similar to `format` but with objects instead of positional arguments.\n */\nexport function format2(template, values) {\n    return template.replace(_format2Regexp, (match, group) => { var _b; return ((_b = values[group]) !== null && _b !== void 0 ? _b : match); });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n/**\n * Counts how often `character` occurs inside `value`.\n */\nexport function count(value, character) {\n    let result = 0;\n    const ch = character.charCodeAt(0);\n    for (let i = value.length - 1; i >= 0; i--) {\n        if (value.charCodeAt(i) === ch) {\n            result++;\n        }\n    }\n    return result;\n}\nexport function truncate(value, maxLength, suffix = '…') {\n    if (value.length <= maxLength) {\n        return value;\n    }\n    return `${value.substr(0, maxLength)}${suffix}`;\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nexport function createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Function that works identically to String.prototype.replace, except, the\n * replace function is allowed to be async and return a Promise.\n */\nexport function replaceAsync(str, search, replacer) {\n    const parts = [];\n    let last = 0;\n    for (const match of str.matchAll(search)) {\n        parts.push(str.slice(last, match.index));\n        if (match.index === undefined) {\n            throw new Error('match.index should be defined');\n        }\n        last = match.index + match[0].length;\n        parts.push(replacer(match[0], ...match.slice(1), match.index, str, match.groups));\n    }\n    parts.push(str.slice(last));\n    return Promise.all(parts).then(p => p.join(''));\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        const codeA = a.charCodeAt(aStart);\n        const codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nexport function compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            // not ASCII letters -> fallback to lower-casing strings\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        // mapper lower-case ascii letter onto upper-case varinats\n        // [97-122] (lower ascii) --> [65-90] (upper ascii)\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        // compare both code points\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function isAsciiDigit(code) {\n    return code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */;\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */;\n}\nexport function equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nexport class CodePointIterator {\n    get offset() {\n        return this._offset;\n    }\n    constructor(str, offset = 0) {\n        this._str = str;\n        this._len = str.length;\n        this._offset = offset;\n    }\n    setOffset(offset) {\n        this._offset = offset;\n    }\n    prevCodePoint() {\n        const codePoint = getPrevCodePoint(this._str, this._offset);\n        this._offset -= (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    nextCodePoint() {\n        const codePoint = getNextCodePoint(this._str, this._len, this._offset);\n        this._offset += (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    eol() {\n        return (this._offset >= this._len);\n    }\n}\nexport class GraphemeIterator {\n    get offset() {\n        return this._iterator.offset;\n    }\n    constructor(str, offset = 0) {\n        this._iterator = new CodePointIterator(str, offset);\n    }\n    nextGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n        while (!iterator.eol()) {\n            const offset = iterator.offset;\n            const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n            if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = nextGraphemeBreakType;\n        }\n        return (iterator.offset - initialOffset);\n    }\n    prevGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n        while (iterator.offset > 0) {\n            const offset = iterator.offset;\n            const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n            if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = prevGraphemeBreakType;\n        }\n        return (initialOffset - iterator.offset);\n    }\n    eol() {\n        return this._iterator.eol();\n    }\n}\nexport function nextCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.nextGraphemeLength();\n}\nexport function prevCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.prevGraphemeLength();\n}\nexport function getCharContainingOffset(str, offset) {\n    if (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n        offset--;\n    }\n    const endOffset = offset + nextCharLength(str, offset);\n    const startOffset = endOffset - prevCharLength(str, endOffset);\n    return [startOffset, endOffset];\n}\nexport function charCount(str) {\n    const iterator = new GraphemeIterator(str);\n    let length = 0;\n    while (!iterator.eol()) {\n        length++;\n        iterator.nextGraphemeLength();\n    }\n    return length;\n}\nlet CONTAINS_RTL = undefined;\nfunction makeContainsRtl() {\n    // Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n    return /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    if (!CONTAINS_RTL) {\n        CONTAINS_RTL = makeContainsRtl();\n    }\n    return CONTAINS_RTL.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 - 2EFF   CJK Radicals Supplement\n    //          2F00 - 2FDF   Kangxi Radicals\n    //          2FF0 - 2FFF   Ideographic Description Characters\n    //          3000 - 303F   CJK Symbols and Punctuation\n    //          3040 - 309F   Hiragana\n    //          30A0 - 30FF   Katakana\n    //          3100 - 312F   Bopomofo\n    //          3130 - 318F   Hangul Compatibility Jamo\n    //          3190 - 319F   Kanbun\n    //          31A0 - 31BF   Bopomofo Extended\n    //          31F0 - 31FF   Katakana Phonetic Extensions\n    //          3200 - 32FF   Enclosed CJK Letters and Months\n    //          3300 - 33FF   CJK Compatibility\n    //          3400 - 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 - 4DFF   Yijing Hexagram Symbols\n    //          4E00 - 9FFF   CJK Unified Ideographs\n    //          A000 - A48F   Yi Syllables\n    //          A490 - A4CF   Yi Radicals\n    //          AC00 - D7AF   Hangul Syllables\n    // [IGNORE] D800 - DB7F   High Surrogates\n    // [IGNORE] DB80 - DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 - DFFF   Low Surrogates\n    // [IGNORE] E000 - F8FF   Private Use Area\n    //          F900 - FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 - FE0F   Variation Selectors\n    // [IGNORE] FE20 - FE2F   Combining Half Marks\n    // [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 - FE6F   Small Form Variants\n    // [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n    //          FF00 - FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 - FFFF   Specials\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129782));\n}\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text, n) {\n    if (text.length < n) {\n        return text;\n    }\n    const re = /\\b/g;\n    let i = 0;\n    while (re.test(text)) {\n        if (text.length - re.lastIndex < n) {\n            break;\n        }\n        i = re.lastIndex;\n        re.lastIndex += 1;\n    }\n    return text.substring(i).replace(/^\\s/, '');\n}\n// Escape codes, compiled from https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h3-Functions-using-CSI-_-ordered-by-the-final-character_s_\nconst CSI_SEQUENCE = /(:?\\x1b\\[|\\x9B)[=?>!]?[\\d;:]*[\"$#'* ]?[a-zA-Z@^`{}|~]/g;\n// Plus additional markers for custom `\\x1b]...\\x07` instructions.\nconst CSI_CUSTOM_SEQUENCE = /\\x1b\\].*?\\x07/g;\nexport function removeAnsiEscapeCodes(str) {\n    if (str) {\n        str = str.replace(CSI_SEQUENCE, '').replace(CSI_CUSTOM_SEQUENCE, '');\n    }\n    return str;\n}\n// -- UTF-8 BOM\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* CharCode.UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* CharCode.UTF8_BOM */);\n}\nexport function stripUTF8BOM(str) {\n    return startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target, query) {\n    if (!target || !query) {\n        return false; // return early if target or query are undefined\n    }\n    if (target.length < query.length) {\n        return false; // impossible for query to be contained in target\n    }\n    const queryLen = query.length;\n    const targetLower = target.toLowerCase();\n    let index = 0;\n    let lastIndexOf = -1;\n    while (index < queryLen) {\n        const indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n        if (indexOf < 0) {\n            return false;\n        }\n        lastIndexOf = indexOf;\n        index++;\n    }\n    return true;\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\nexport function uppercaseFirstLetter(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nexport function getNLines(str, n = 1) {\n    if (n === 0) {\n        return '';\n    }\n    let idx = -1;\n    do {\n        idx = str.indexOf('\\n', idx + 1);\n        n--;\n    } while (n > 0 && idx >= 0);\n    if (idx === -1) {\n        return str;\n    }\n    if (str[idx - 1] === '\\r') {\n        idx--;\n    }\n    return str.substr(0, idx);\n}\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n) {\n    const LETTERS_CNT = (90 /* CharCode.Z */ - 65 /* CharCode.A */ + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97 /* CharCode.a */ + n);\n    }\n    return String.fromCharCode(65 /* CharCode.A */ + n - LETTERS_CNT);\n}\n//#region Unicode Grapheme Break\nexport function getGraphemeBreakType(codePoint) {\n    const graphemeBreakTree = GraphemeBreakTree.getInstance();\n    return graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\nfunction breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n    // !!! Let's make the common case a bit faster\n    if (breakTypeA === 0 /* GraphemeBreakType.Other */) {\n        // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n        return (breakTypeB !== 5 /* GraphemeBreakType.Extend */ && breakTypeB !== 7 /* GraphemeBreakType.SpacingMark */);\n    }\n    // Do not break between a CR and LF. Otherwise, break before and after controls.\n    // GB3                                        CR × LF\n    // GB4                       (Control | CR | LF) ÷\n    // GB5                                           ÷ (Control | CR | LF)\n    if (breakTypeA === 2 /* GraphemeBreakType.CR */) {\n        if (breakTypeB === 3 /* GraphemeBreakType.LF */) {\n            return false; // GB3\n        }\n    }\n    if (breakTypeA === 4 /* GraphemeBreakType.Control */ || breakTypeA === 2 /* GraphemeBreakType.CR */ || breakTypeA === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB4\n    }\n    if (breakTypeB === 4 /* GraphemeBreakType.Control */ || breakTypeB === 2 /* GraphemeBreakType.CR */ || breakTypeB === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB5\n    }\n    // Do not break Hangul syllable sequences.\n    // GB6                                         L × (L | V | LV | LVT)\n    // GB7                                  (LV | V) × (V | T)\n    // GB8                                 (LVT | T) × T\n    if (breakTypeA === 8 /* GraphemeBreakType.L */) {\n        if (breakTypeB === 8 /* GraphemeBreakType.L */ || breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 11 /* GraphemeBreakType.LV */ || breakTypeB === 12 /* GraphemeBreakType.LVT */) {\n            return false; // GB6\n        }\n    }\n    if (breakTypeA === 11 /* GraphemeBreakType.LV */ || breakTypeA === 9 /* GraphemeBreakType.V */) {\n        if (breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB7\n        }\n    }\n    if (breakTypeA === 12 /* GraphemeBreakType.LVT */ || breakTypeA === 10 /* GraphemeBreakType.T */) {\n        if (breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB8\n        }\n    }\n    // Do not break before extending characters or ZWJ.\n    // GB9                                           × (Extend | ZWJ)\n    if (breakTypeB === 5 /* GraphemeBreakType.Extend */ || breakTypeB === 13 /* GraphemeBreakType.ZWJ */) {\n        return false; // GB9\n    }\n    // The GB9a and GB9b rules only apply to extended grapheme clusters:\n    // Do not break before SpacingMarks, or after Prepend characters.\n    // GB9a                                          × SpacingMark\n    // GB9b                                  Prepend ×\n    if (breakTypeB === 7 /* GraphemeBreakType.SpacingMark */) {\n        return false; // GB9a\n    }\n    if (breakTypeA === 1 /* GraphemeBreakType.Prepend */) {\n        return false; // GB9b\n    }\n    // Do not break within emoji modifier sequences or emoji zwj sequences.\n    // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n    if (breakTypeA === 13 /* GraphemeBreakType.ZWJ */ && breakTypeB === 14 /* GraphemeBreakType.Extended_Pictographic */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB11\n    }\n    // GB12                          sot (RI RI)* RI × RI\n    // GB13                        [^RI] (RI RI)* RI × RI\n    if (breakTypeA === 6 /* GraphemeBreakType.Regional_Indicator */ && breakTypeB === 6 /* GraphemeBreakType.Regional_Indicator */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB12 & GB13\n    }\n    // GB999                                     Any ÷ Any\n    return true;\n}\nclass GraphemeBreakTree {\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    getGraphemeBreakType(codePoint) {\n        // !!! Let's make 7bit ASCII a bit faster: 0..31\n        if (codePoint < 32) {\n            if (codePoint === 10 /* CharCode.LineFeed */) {\n                return 3 /* GraphemeBreakType.LF */;\n            }\n            if (codePoint === 13 /* CharCode.CarriageReturn */) {\n                return 2 /* GraphemeBreakType.CR */;\n            }\n            return 4 /* GraphemeBreakType.Control */;\n        }\n        // !!! Let's make 7bit ASCII a bit faster: 32..126\n        if (codePoint < 127) {\n            return 0 /* GraphemeBreakType.Other */;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                // go left\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                // go right\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                // hit\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 /* GraphemeBreakType.Other */;\n    }\n}\nGraphemeBreakTree._INSTANCE = null;\nfunction getGraphemeBreakRawData() {\n    // generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n    return JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n//#endregion\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    // Try to delete emoji part.\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    // Otherwise, just skip a single code point.\n    const iterator = new CodePointIterator(str, offset);\n    iterator.prevCodePoint();\n    return iterator.offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(initialOffset, str) {\n    // See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n    // structure of emojis.\n    const iterator = new CodePointIterator(str, initialOffset);\n    let codePoint = iterator.prevCodePoint();\n    // Skip modifiers\n    while ((isEmojiModifier(codePoint) || codePoint === 65039 /* CodePoint.emojiVariantSelector */ || codePoint === 8419 /* CodePoint.enclosingKeyCap */)) {\n        if (iterator.offset === 0) {\n            // Cannot skip modifier, no preceding emoji base.\n            return undefined;\n        }\n        codePoint = iterator.prevCodePoint();\n    }\n    // Expect base emoji\n    if (!isEmojiImprecise(codePoint)) {\n        // Unexpected code point, not a valid emoji.\n        return undefined;\n    }\n    let resultOffset = iterator.offset;\n    if (resultOffset > 0) {\n        // Skip optional ZWJ code points that combine multiple emojis.\n        // In theory, we should check if that ZWJ actually combines multiple emojis\n        // to prevent deleting ZWJs in situations we didn't account for.\n        const optionalZwjCodePoint = iterator.prevCodePoint();\n        if (optionalZwjCodePoint === 8205 /* CodePoint.zwj */) {\n            resultOffset = iterator.offset;\n        }\n    }\n    return resultOffset;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\nexport const noBreakWhitespace = '\\xa0';\nexport class AmbiguousCharacters {\n    static getInstance(locales) {\n        return _a.cache.get(Array.from(locales));\n    }\n    static getLocales() {\n        return _a._locales.value;\n    }\n    constructor(confusableDictionary) {\n        this.confusableDictionary = confusableDictionary;\n    }\n    isAmbiguous(codePoint) {\n        return this.confusableDictionary.has(codePoint);\n    }\n    /**\n     * Returns the non basic ASCII code point that the given code point can be confused,\n     * or undefined if such code point does note exist.\n     */\n    getPrimaryConfusable(codePoint) {\n        return this.confusableDictionary.get(codePoint);\n    }\n    getConfusableCodePoints() {\n        return new Set(this.confusableDictionary.keys());\n    }\n}\n_a = AmbiguousCharacters;\nAmbiguousCharacters.ambiguousCharacterData = new Lazy(() => {\n    // Generated using https://github.com/hediet/vscode-unicode-data\n    // Stored as key1, value1, key2, value2, ...\n    return JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}');\n});\nAmbiguousCharacters.cache = new LRUCachedFunction((locales) => {\n    function arrayToMap(arr) {\n        const result = new Map();\n        for (let i = 0; i < arr.length; i += 2) {\n            result.set(arr[i], arr[i + 1]);\n        }\n        return result;\n    }\n    function mergeMaps(map1, map2) {\n        const result = new Map(map1);\n        for (const [key, value] of map2) {\n            result.set(key, value);\n        }\n        return result;\n    }\n    function intersectMaps(map1, map2) {\n        if (!map1) {\n            return map2;\n        }\n        const result = new Map();\n        for (const [key, value] of map1) {\n            if (map2.has(key)) {\n                result.set(key, value);\n            }\n        }\n        return result;\n    }\n    const data = _a.ambiguousCharacterData.value;\n    let filteredLocales = locales.filter((l) => !l.startsWith('_') && l in data);\n    if (filteredLocales.length === 0) {\n        filteredLocales = ['_default'];\n    }\n    let languageSpecificMap = undefined;\n    for (const locale of filteredLocales) {\n        const map = arrayToMap(data[locale]);\n        languageSpecificMap = intersectMaps(languageSpecificMap, map);\n    }\n    const commonMap = arrayToMap(data['_common']);\n    const map = mergeMaps(commonMap, languageSpecificMap);\n    return new _a(map);\n});\nAmbiguousCharacters._locales = new Lazy(() => Object.keys(_a.ambiguousCharacterData.value).filter((k) => !k.startsWith('_')));\nexport class InvisibleCharacters {\n    static getRawData() {\n        // Generated using https://github.com/hediet/vscode-unicode-data\n        return JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n    }\n    static getData() {\n        if (!this._data) {\n            this._data = new Set(InvisibleCharacters.getRawData());\n        }\n        return this._data;\n    }\n    static isInvisibleCharacter(codePoint) {\n        return InvisibleCharacters.getData().has(codePoint);\n    }\n    static get codePoints() {\n        return InvisibleCharacters.getData();\n    }\n}\nInvisibleCharacters._data = undefined;\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isAbsolute, join, normalize, posix, sep } from './path.js';\nimport { isWindows } from './platform.js';\nimport { equalsIgnoreCase, rtrim, startsWithIgnoreCase } from './strings.js';\nimport { isNumber } from './types.js';\nexport function isPathSeparator(code) {\n    return code === 47 /* CharCode.Slash */ || code === 92 /* CharCode.Backslash */;\n}\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath) {\n    return osPath.replace(/[\\\\/]/g, posix.sep);\n}\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath) {\n    if (osPath.indexOf('/') === -1) {\n        osPath = toSlashes(osPath);\n    }\n    if (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n        osPath = '/' + osPath;\n    }\n    return osPath;\n}\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path, sep = posix.sep) {\n    if (!path) {\n        return '';\n    }\n    const len = path.length;\n    const firstLetter = path.charCodeAt(0);\n    if (isPathSeparator(firstLetter)) {\n        if (isPathSeparator(path.charCodeAt(1))) {\n            // UNC candidate \\\\localhost\\shares\\ddd\n            //               ^^^^^^^^^^^^^^^^^^^\n            if (!isPathSeparator(path.charCodeAt(2))) {\n                let pos = 3;\n                const start = pos;\n                for (; pos < len; pos++) {\n                    if (isPathSeparator(path.charCodeAt(pos))) {\n                        break;\n                    }\n                }\n                if (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n                    pos += 1;\n                    for (; pos < len; pos++) {\n                        if (isPathSeparator(path.charCodeAt(pos))) {\n                            return path.slice(0, pos + 1) // consume this separator\n                                .replace(/[\\\\/]/g, sep);\n                        }\n                    }\n                }\n            }\n        }\n        // /user/far\n        // ^\n        return sep;\n    }\n    else if (isWindowsDriveLetter(firstLetter)) {\n        // check for windows drive letter c:\\ or c:\n        if (path.charCodeAt(1) === 58 /* CharCode.Colon */) {\n            if (isPathSeparator(path.charCodeAt(2))) {\n                // C:\\fff\n                // ^^^\n                return path.slice(0, 2) + sep;\n            }\n            else {\n                // C:\n                // ^^\n                return path.slice(0, 2);\n            }\n        }\n    }\n    // check for URI\n    // scheme://authority/path\n    // ^^^^^^^^^^^^^^^^^^^\n    let pos = path.indexOf('://');\n    if (pos !== -1) {\n        pos += 3; // 3 -> \"://\".length\n        for (; pos < len; pos++) {\n            if (isPathSeparator(path.charCodeAt(pos))) {\n                return path.slice(0, pos + 1); // consume this separator\n            }\n        }\n    }\n    return '';\n}\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path) {\n    if (!isWindows) {\n        // UNC is a windows concept\n        return false;\n    }\n    if (!path || path.length < 5) {\n        // at least \\\\a\\b\n        return false;\n    }\n    let code = path.charCodeAt(0);\n    if (code !== 92 /* CharCode.Backslash */) {\n        return false;\n    }\n    code = path.charCodeAt(1);\n    if (code !== 92 /* CharCode.Backslash */) {\n        return false;\n    }\n    let pos = 2;\n    const start = pos;\n    for (; pos < path.length; pos++) {\n        code = path.charCodeAt(pos);\n        if (code === 92 /* CharCode.Backslash */) {\n            break;\n        }\n    }\n    if (start === pos) {\n        return false;\n    }\n    code = path.charCodeAt(pos + 1);\n    if (isNaN(code) || code === 92 /* CharCode.Backslash */) {\n        return false;\n    }\n    return true;\n}\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name, isWindowsOS = isWindows) {\n    const invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n    if (!name || name.length === 0 || /^\\s+$/.test(name)) {\n        return false; // require a name that is not just whitespace\n    }\n    invalidFileChars.lastIndex = 0; // the holy grail of software development\n    if (invalidFileChars.test(name)) {\n        return false; // check for certain invalid file characters\n    }\n    if (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n        return false; // check for certain invalid file names\n    }\n    if (name === '.' || name === '..') {\n        return false; // check for reserved values\n    }\n    if (isWindowsOS && name[name.length - 1] === '.') {\n        return false; // Windows: file cannot end with a \".\"\n    }\n    if (isWindowsOS && name.length !== name.trim().length) {\n        return false; // Windows: file cannot end with a whitespace\n    }\n    if (name.length > 255) {\n        return false; // most file systems do not allow files > 255 length\n    }\n    return true;\n}\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqual` instead. If you are\n * in a context without services, consider to pass down the `extUri` from the outside\n * or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqual(pathA, pathB, ignoreCase) {\n    const identityEquals = (pathA === pathB);\n    if (!ignoreCase || identityEquals) {\n        return identityEquals;\n    }\n    if (!pathA || !pathB) {\n        return false;\n    }\n    return equalsIgnoreCase(pathA, pathB);\n}\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqualOrParent` instead. If\n * you are in a context without services, consider to pass down the `extUri` from the\n * outside, or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqualOrParent(base, parentCandidate, ignoreCase, separator = sep) {\n    if (base === parentCandidate) {\n        return true;\n    }\n    if (!base || !parentCandidate) {\n        return false;\n    }\n    if (parentCandidate.length > base.length) {\n        return false;\n    }\n    if (ignoreCase) {\n        const beginsWith = startsWithIgnoreCase(base, parentCandidate);\n        if (!beginsWith) {\n            return false;\n        }\n        if (parentCandidate.length === base.length) {\n            return true; // same path, different casing\n        }\n        let sepOffset = parentCandidate.length;\n        if (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n            sepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n        }\n        return base.charAt(sepOffset) === separator;\n    }\n    if (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n        parentCandidate += separator;\n    }\n    return base.indexOf(parentCandidate) === 0;\n}\nexport function isWindowsDriveLetter(char0) {\n    return char0 >= 65 /* CharCode.A */ && char0 <= 90 /* CharCode.Z */ || char0 >= 97 /* CharCode.a */ && char0 <= 122 /* CharCode.z */;\n}\nexport function sanitizeFilePath(candidate, cwd) {\n    // Special case: allow to open a drive letter without trailing backslash\n    if (isWindows && candidate.endsWith(':')) {\n        candidate += sep;\n    }\n    // Ensure absolute\n    if (!isAbsolute(candidate)) {\n        candidate = join(cwd, candidate);\n    }\n    // Ensure normalized\n    candidate = normalize(candidate);\n    // Ensure no trailing slash/backslash\n    if (isWindows) {\n        candidate = rtrim(candidate, sep);\n        // Special case: allow to open drive root ('C:\\')\n        if (candidate.endsWith(':')) {\n            candidate += sep;\n        }\n    }\n    else {\n        candidate = rtrim(candidate, sep);\n        // Special case: allow to open root ('/')\n        if (!candidate) {\n            candidate = sep;\n        }\n    }\n    return candidate;\n}\nexport function isRootOrDriveLetter(path) {\n    const pathNormalized = normalize(path);\n    if (isWindows) {\n        if (path.length > 3) {\n            return false;\n        }\n        return hasDriveLetter(pathNormalized) &&\n            (path.length === 2 || pathNormalized.charCodeAt(2) === 92 /* CharCode.Backslash */);\n    }\n    return pathNormalized === posix.sep;\n}\nexport function hasDriveLetter(path, isWindowsOS = isWindows) {\n    if (isWindowsOS) {\n        return isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === 58 /* CharCode.Colon */;\n    }\n    return false;\n}\nexport function getDriveLetter(path, isWindowsOS = isWindows) {\n    return hasDriveLetter(path, isWindowsOS) ? path[0] : undefined;\n}\nexport function indexOfPath(path, candidate, ignoreCase) {\n    if (candidate.length > path.length) {\n        return -1;\n    }\n    if (path === candidate) {\n        return 0;\n    }\n    if (ignoreCase) {\n        path = path.toLowerCase();\n        candidate = candidate.toLowerCase();\n    }\n    return path.indexOf(candidate);\n}\nexport function parseLineAndColumnAware(rawPath) {\n    const segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n    let path = undefined;\n    let line = undefined;\n    let column = undefined;\n    for (const segment of segments) {\n        const segmentAsNumber = Number(segment);\n        if (!isNumber(segmentAsNumber)) {\n            path = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n        }\n        else if (line === undefined) {\n            line = segmentAsNumber;\n        }\n        else if (column === undefined) {\n            column = segmentAsNumber;\n        }\n    }\n    if (!path) {\n        throw new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n    }\n    return {\n        path,\n        line: line !== undefined ? line : undefined,\n        column: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n    };\n}\nconst pathChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst windowsSafePathFirstChars = 'BDEFGHIJKMOQRSTUVWXYZbdefghijkmoqrstuvwxyz0123456789';\nexport function randomPath(parent, prefix, randomLength = 8) {\n    let suffix = '';\n    for (let i = 0; i < randomLength; i++) {\n        let pathCharsTouse;\n        if (i === 0 && isWindows && !prefix && (randomLength === 3 || randomLength === 4)) {\n            // Windows has certain reserved file names that cannot be used, such\n            // as AUX, CON, PRN, etc. We want to avoid generating a random name\n            // that matches that pattern, so we use a different set of characters\n            // for the first character of the name that does not include any of\n            // the reserved names first characters.\n            pathCharsTouse = windowsSafePathFirstChars;\n        }\n        else {\n            pathCharsTouse = pathChars;\n        }\n        suffix += pathCharsTouse.charAt(Math.floor(Math.random() * pathCharsTouse.length));\n    }\n    let randomFileName;\n    if (prefix) {\n        randomFileName = `${prefix}-${suffix}`;\n    }\n    else {\n        randomFileName = suffix;\n    }\n    if (parent) {\n        return join(parent, randomFileName);\n    }\n    return randomFileName;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as extpath from './extpath.js';\nimport { Schemas } from './network.js';\nimport * as paths from './path.js';\nimport { isLinux, isWindows } from './platform.js';\nimport { compare as strCompare, equalsIgnoreCase } from './strings.js';\nimport { URI, uriToFsPath } from './uri.js';\nexport function originalFSPath(uri) {\n    return uriToFsPath(uri, true);\n}\nexport class ExtUri {\n    constructor(_ignorePathCasing) {\n        this._ignorePathCasing = _ignorePathCasing;\n    }\n    compare(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return 0;\n        }\n        return strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n    }\n    isEqual(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return true;\n        }\n        if (!uri1 || !uri2) {\n            return false;\n        }\n        return this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n    }\n    getComparisonKey(uri, ignoreFragment = false) {\n        return uri.with({\n            path: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n            fragment: ignoreFragment ? null : undefined\n        }).toString();\n    }\n    ignorePathCasing(uri) {\n        return this._ignorePathCasing(uri);\n    }\n    isEqualOrParent(base, parentCandidate, ignoreFragment = false) {\n        if (base.scheme === parentCandidate.scheme) {\n            if (base.scheme === Schemas.file) {\n                return extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n            if (isEqualAuthority(base.authority, parentCandidate.authority)) {\n                return extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n        }\n        return false;\n    }\n    // --- path math\n    joinPath(resource, ...pathFragment) {\n        return URI.joinPath(resource, ...pathFragment);\n    }\n    basenameOrAuthority(resource) {\n        return basename(resource) || resource.authority;\n    }\n    basename(resource) {\n        return paths.posix.basename(resource.path);\n    }\n    extname(resource) {\n        return paths.posix.extname(resource.path);\n    }\n    dirname(resource) {\n        if (resource.path.length === 0) {\n            return resource;\n        }\n        let dirname;\n        if (resource.scheme === Schemas.file) {\n            dirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n        }\n        else {\n            dirname = paths.posix.dirname(resource.path);\n            if (resource.authority && dirname.length && dirname.charCodeAt(0) !== 47 /* CharCode.Slash */) {\n                console.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n                dirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n            }\n        }\n        return resource.with({\n            path: dirname\n        });\n    }\n    normalizePath(resource) {\n        if (!resource.path.length) {\n            return resource;\n        }\n        let normalizedPath;\n        if (resource.scheme === Schemas.file) {\n            normalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n        }\n        else {\n            normalizedPath = paths.posix.normalize(resource.path);\n        }\n        return resource.with({\n            path: normalizedPath\n        });\n    }\n    relativePath(from, to) {\n        if (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n            return undefined;\n        }\n        if (from.scheme === Schemas.file) {\n            const relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n            return isWindows ? extpath.toSlashes(relativePath) : relativePath;\n        }\n        let fromPath = from.path || '/';\n        const toPath = to.path || '/';\n        if (this._ignorePathCasing(from)) {\n            // make casing of fromPath match toPath\n            let i = 0;\n            for (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n                if (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n                    if (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n                        break;\n                    }\n                }\n            }\n            fromPath = toPath.substr(0, i) + fromPath.substr(i);\n        }\n        return paths.posix.relative(fromPath, toPath);\n    }\n    resolvePath(base, path) {\n        if (base.scheme === Schemas.file) {\n            const newURI = URI.file(paths.resolve(originalFSPath(base), path));\n            return base.with({\n                authority: newURI.authority,\n                path: newURI.path\n            });\n        }\n        path = extpath.toPosixPath(path); // we allow path to be a windows path\n        return base.with({\n            path: paths.posix.resolve(base.path, path)\n        });\n    }\n    // --- misc\n    isAbsolutePath(resource) {\n        return !!resource.path && resource.path[0] === '/';\n    }\n    isEqualAuthority(a1, a2) {\n        return a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n    }\n    hasTrailingPathSeparator(resource, sep = paths.sep) {\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            return fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n        }\n        else {\n            const p = resource.path;\n            return (p.length > 1 && p.charCodeAt(p.length - 1) === 47 /* CharCode.Slash */) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n        }\n    }\n    removeTrailingPathSeparator(resource, sep = paths.sep) {\n        // Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n        if (hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n        }\n        return resource;\n    }\n    addTrailingPathSeparator(resource, sep = paths.sep) {\n        let isRootSep = false;\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            isRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n        }\n        else {\n            sep = '/';\n            const p = resource.path;\n            isRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === 47 /* CharCode.Slash */;\n        }\n        if (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path + '/' });\n        }\n        return resource;\n    }\n}\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n    // A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n    // Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n    return uri.scheme === Schemas.file ? !isLinux : true;\n});\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n//#endregion\nexport function distinctParents(items, resourceAccessor) {\n    const distinctParents = [];\n    for (let i = 0; i < items.length; i++) {\n        const candidateResource = resourceAccessor(items[i]);\n        if (items.some((otherItem, index) => {\n            if (index === i) {\n                return false;\n            }\n            return isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n        })) {\n            continue;\n        }\n        distinctParents.push(items[i]);\n    }\n    return distinctParents;\n}\n/**\n * Data URI related helpers.\n */\nexport var DataUri;\n(function (DataUri) {\n    DataUri.META_DATA_LABEL = 'label';\n    DataUri.META_DATA_DESCRIPTION = 'description';\n    DataUri.META_DATA_SIZE = 'size';\n    DataUri.META_DATA_MIME = 'mime';\n    function parseMetaData(dataUri) {\n        const metadata = new Map();\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n        const meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n        meta.split(';').forEach(property => {\n            const [key, value] = property.split(':');\n            if (key && value) {\n                metadata.set(key, value);\n            }\n        });\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the mime is: image/png\n        const mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n        if (mime) {\n            metadata.set(DataUri.META_DATA_MIME, mime);\n        }\n        return metadata;\n    }\n    DataUri.parseMetaData = parseMetaData;\n})(DataUri || (DataUri = {}));\nexport function toLocalResource(resource, authority, localScheme) {\n    if (authority) {\n        let path = resource.path;\n        if (path && path[0] !== paths.posix.sep) {\n            path = paths.posix.sep + path;\n        }\n        return resource.with({ scheme: localScheme, authority, path });\n    }\n    return resource.with({ scheme: localScheme });\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationError } from './errors.js';\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail(array, n = 0) {\n    return array[array.length - (1 + n)];\n}\nexport function tail2(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function equals(one, other, itemEquals = (a, b) => a === b) {\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (let i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Remove the element at `index` by replacing it with the last element. This is faster than `splice`\n * but changes the order of the array\n */\nexport function removeFastWithoutKeepingOrder(array, index) {\n    const last = array.length - 1;\n    if (index < last) {\n        array[index] = array[last];\n    }\n    array.pop();\n}\n/**\n * Performs a binary search algorithm over a sorted array.\n *\n * @param array The array being searched.\n * @param key The value we search for.\n * @param comparator A function that takes two array elements and returns zero\n *   if they are equal, a negative number if the first element precedes the\n *   second one in the sorting order, or a positive number if the second element\n *   precedes the first one.\n * @return See {@link binarySearch2}\n */\nexport function binarySearch(array, key, comparator) {\n    return binarySearch2(array.length, i => comparator(array[i], key));\n}\n/**\n * Performs a binary search algorithm over a sorted collection. Useful for cases\n * when we need to perform a binary search over something that isn't actually an\n * array, and converting data to an array would defeat the use of binary search\n * in the first place.\n *\n * @param length The collection length.\n * @param compareToKey A function that takes an index of an element in the\n *   collection and returns zero if the value at this index is equal to the\n *   search key, a negative number if the value precedes the search key in the\n *   sorting order, or a positive number if the search key precedes the value.\n * @return A non-negative index of an element, if found. If not found, the\n *   result is -(n+1) (or ~n, using bitwise notation), where n is the index\n *   where the key should be inserted to maintain the sorting order.\n */\nexport function binarySearch2(length, compareToKey) {\n    let low = 0, high = length - 1;\n    while (low <= high) {\n        const mid = ((low + high) / 2) | 0;\n        const comp = compareToKey(mid);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted(array, p) {\n    let low = 0, high = array.length;\n    if (high === 0) {\n        return 0; // no children\n    }\n    while (low < high) {\n        const mid = Math.floor((low + high) / 2);\n        if (p(array[mid])) {\n            high = mid;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\nexport function quickSelect(nth, data, compare) {\n    nth = nth | 0;\n    if (nth >= data.length) {\n        throw new TypeError('invalid index');\n    }\n    const pivotValue = data[Math.floor(data.length * Math.random())];\n    const lower = [];\n    const higher = [];\n    const pivots = [];\n    for (const value of data) {\n        const val = compare(value, pivotValue);\n        if (val < 0) {\n            lower.push(value);\n        }\n        else if (val > 0) {\n            higher.push(value);\n        }\n        else {\n            pivots.push(value);\n        }\n    }\n    if (nth < lower.length) {\n        return quickSelect(nth, lower, compare);\n    }\n    else if (nth < lower.length + pivots.length) {\n        return pivots[0];\n    }\n    else {\n        return quickSelect(nth - (lower.length + pivots.length), higher, compare);\n    }\n}\nexport function groupBy(data, compare) {\n    const result = [];\n    let currentGroup = undefined;\n    for (const element of data.slice(0).sort(compare)) {\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff(before, after, compare) {\n    const result = [];\n    function pushSplice(start, deleteCount, toInsert) {\n        if (deleteCount === 0 && toInsert.length === 0) {\n            return;\n        }\n        const latest = result[result.length - 1];\n        if (latest && latest.start + latest.deleteCount === start) {\n            latest.deleteCount += deleteCount;\n            latest.toInsert.push(...toInsert);\n        }\n        else {\n            result.push({ start, deleteCount, toInsert });\n        }\n    }\n    let beforeIdx = 0;\n    let afterIdx = 0;\n    while (true) {\n        if (beforeIdx === before.length) {\n            pushSplice(beforeIdx, 0, after.slice(afterIdx));\n            break;\n        }\n        if (afterIdx === after.length) {\n            pushSplice(beforeIdx, before.length - beforeIdx, []);\n            break;\n        }\n        const beforeElement = before[beforeIdx];\n        const afterElement = after[afterIdx];\n        const n = compare(beforeElement, afterElement);\n        if (n === 0) {\n            // equal\n            beforeIdx += 1;\n            afterIdx += 1;\n        }\n        else if (n < 0) {\n            // beforeElement is smaller -> before element removed\n            pushSplice(beforeIdx, 1, []);\n            beforeIdx += 1;\n        }\n        else if (n > 0) {\n            // beforeElement is greater -> after element added\n            pushSplice(beforeIdx, 0, [afterElement]);\n            afterIdx += 1;\n        }\n    }\n    return result;\n}\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta(before, after, compare) {\n    const splices = sortedDiff(before, after, compare);\n    const removed = [];\n    const added = [];\n    for (const splice of splices) {\n        removed.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n        added.push(...splice.toInsert);\n    }\n    return { removed, added };\n}\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elements from array when sorted with compare.\n */\nexport function top(array, compare, n) {\n    if (n === 0) {\n        return [];\n    }\n    const result = array.slice(0, n).sort(compare);\n    topStep(array, compare, result, n, array.length);\n    return result;\n}\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elements from array when sorted with compare.\n */\nexport function topAsync(array, compare, n, batch, token) {\n    if (n === 0) {\n        return Promise.resolve([]);\n    }\n    return new Promise((resolve, reject) => {\n        (() => __awaiter(this, void 0, void 0, function* () {\n            const o = array.length;\n            const result = array.slice(0, n).sort(compare);\n            for (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n                if (i > n) {\n                    yield new Promise(resolve => setTimeout(resolve)); // any other delay function would starve I/O\n                }\n                if (token && token.isCancellationRequested) {\n                    throw new CancellationError();\n                }\n                topStep(array, compare, result, i, m);\n            }\n            return result;\n        }))()\n            .then(resolve, reject);\n    });\n}\nfunction topStep(array, compare, result, i, m) {\n    for (const n = result.length; i < m; i++) {\n        const element = array[i];\n        if (compare(element, result[n - 1]) < 0) {\n            result.pop();\n            const j = findFirstInSorted(result, e => compare(element, e) < 0);\n            result.splice(j, 0, element);\n        }\n    }\n}\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce(array) {\n    return array.filter(e => !!e);\n}\n/**\n * Remove all falsy values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace(array) {\n    let to = 0;\n    for (let i = 0; i < array.length; i++) {\n        if (!!array[i]) {\n            array[to] = array[i];\n            to += 1;\n        }\n    }\n    array.length = to;\n}\n/**\n * @deprecated Use `Array.copyWithin` instead\n */\nexport function move(array, from, to) {\n    array.splice(to, 0, array.splice(from, 1)[0]);\n}\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\nexport function isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equality by returning an alternate value for each.\n */\nexport function distinct(array, keyFn = value => value) {\n    const seen = new Set();\n    return array.filter(element => {\n        const key = keyFn(element);\n        if (seen.has(key)) {\n            return false;\n        }\n        seen.add(key);\n        return true;\n    });\n}\nexport function uniqueFilter(keyFn) {\n    const seen = new Set();\n    return element => {\n        const key = keyFn(element);\n        if (seen.has(key)) {\n            return false;\n        }\n        seen.add(key);\n        return true;\n    };\n}\nexport function findLast(arr, predicate) {\n    const idx = findLastIndex(arr, predicate);\n    if (idx === -1) {\n        return undefined;\n    }\n    return arr[idx];\n}\nexport function findLastIndex(array, fn) {\n    for (let i = array.length - 1; i >= 0; i--) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function firstOrDefault(array, notFoundValue) {\n    return array.length > 0 ? array[0] : notFoundValue;\n}\nexport function lastOrDefault(array, notFoundValue) {\n    return array.length > 0 ? array[array.length - 1] : notFoundValue;\n}\nexport function commonPrefixLength(one, other, equals = (a, b) => a === b) {\n    let result = 0;\n    for (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n        result++;\n    }\n    return result;\n}\n/**\n * @deprecated Use `[].flat()`\n */\nexport function flatten(arr) {\n    return [].concat(...arr);\n}\nexport function range(arg, to) {\n    let from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    const result = [];\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nexport function index(array, indexer, mapper) {\n    return array.reduce((r, t) => {\n        r[indexer(t)] = mapper ? mapper(t) : t;\n        return r;\n    }, Object.create(null));\n}\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n *\n * @deprecated In almost all cases, use a `Set<T>` instead.\n */\nexport function insert(array, element) {\n    array.push(element);\n    return () => remove(array, element);\n}\n/**\n * Removes an element from an array if it can be found.\n *\n * @deprecated In almost all cases, use a `Set<T>` instead.\n */\nexport function remove(array, element) {\n    const index = array.indexOf(element);\n    if (index > -1) {\n        array.splice(index, 1);\n        return element;\n    }\n    return undefined;\n}\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert(target, insertIndex, insertArr) {\n    const before = target.slice(0, insertIndex);\n    const after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle(array, _seed) {\n    let rand;\n    if (typeof _seed === 'number') {\n        let seed = _seed;\n        // Seeded random number generator in JS. Modified from:\n        // https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n        rand = () => {\n            const x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n            return x - Math.floor(x);\n        };\n    }\n    else {\n        rand = Math.random;\n    }\n    for (let i = array.length - 1; i > 0; i -= 1) {\n        const j = Math.floor(rand() * (i + 1));\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function pushMany(arr, items) {\n    for (const item of items) {\n        arr.push(item);\n    }\n}\nexport function mapArrayOrNot(items, fn) {\n    return Array.isArray(items) ?\n        items.map(fn) :\n        fn(items);\n}\nexport function asArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\nexport function getRandomElement(arr) {\n    return arr[Math.floor(Math.random() * arr.length)];\n}\n/**\n * Returns the first mapped value of the array which is not undefined.\n */\nexport function mapFind(array, mapFn) {\n    for (const value of array) {\n        const mapped = mapFn(value);\n        if (mapped !== undefined) {\n            return mapped;\n        }\n    }\n    return undefined;\n}\n/**\n * Insert the new items in the array.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start inserting elements.\n * @param newItems The items to be inserted\n */\nexport function insertInto(array, start, newItems) {\n    const startIdx = getActualStartIndex(array, start);\n    const originalLength = array.length;\n    const newItemsLength = newItems.length;\n    array.length = originalLength + newItemsLength;\n    // Move the items after the start index, start from the end so that we don't overwrite any value.\n    for (let i = originalLength - 1; i >= startIdx; i--) {\n        array[i + newItemsLength] = array[i];\n    }\n    for (let i = 0; i < newItemsLength; i++) {\n        array[i + startIdx] = newItems[i];\n    }\n}\n/**\n * Removes elements from an array and inserts new elements in their place, returning the deleted elements. Alternative to the native Array.splice method, it\n * can only support limited number of items due to the maximum call stack size limit.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start removing elements.\n * @param deleteCount The number of elements to remove.\n * @returns An array containing the elements that were deleted.\n */\nexport function splice(array, start, deleteCount, newItems) {\n    const index = getActualStartIndex(array, start);\n    const result = array.splice(index, deleteCount);\n    insertInto(array, index, newItems);\n    return result;\n}\n/**\n * Determine the actual start index (same logic as the native splice() or slice())\n * If greater than the length of the array, start will be set to the length of the array. In this case, no element will be deleted but the method will behave as an adding function, adding as many element as item[n*] provided.\n * If negative, it will begin that many elements from the end of the array. (In this case, the origin -1, meaning -n is the index of the nth last element, and is therefore equivalent to the index of array.length - n.) If array.length + start is less than 0, it will begin from index 0.\n * @param array The target array.\n * @param start The operation index.\n */\nfunction getActualStartIndex(array, start) {\n    return start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\nexport var CompareResult;\n(function (CompareResult) {\n    function isLessThan(result) {\n        return result < 0;\n    }\n    CompareResult.isLessThan = isLessThan;\n    function isLessThanOrEqual(result) {\n        return result <= 0;\n    }\n    CompareResult.isLessThanOrEqual = isLessThanOrEqual;\n    function isGreaterThan(result) {\n        return result > 0;\n    }\n    CompareResult.isGreaterThan = isGreaterThan;\n    function isNeitherLessOrGreaterThan(result) {\n        return result === 0;\n    }\n    CompareResult.isNeitherLessOrGreaterThan = isNeitherLessOrGreaterThan;\n    CompareResult.greaterThan = 1;\n    CompareResult.lessThan = -1;\n    CompareResult.neitherLessOrGreaterThan = 0;\n})(CompareResult || (CompareResult = {}));\nexport function compareBy(selector, comparator) {\n    return (a, b) => comparator(selector(a), selector(b));\n}\nexport function tieBreakComparators(...comparators) {\n    return (item1, item2) => {\n        for (const comparator of comparators) {\n            const result = comparator(item1, item2);\n            if (!CompareResult.isNeitherLessOrGreaterThan(result)) {\n                return result;\n            }\n        }\n        return CompareResult.neitherLessOrGreaterThan;\n    };\n}\n/**\n * The natural order on numbers.\n*/\nexport const numberComparator = (a, b) => a - b;\nexport const booleanComparator = (a, b) => numberComparator(a ? 1 : 0, b ? 1 : 0);\nexport function reverseOrder(comparator) {\n    return (a, b) => -comparator(a, b);\n}\n/**\n * Returns the first item that is equal to or greater than every other item.\n*/\nexport function findMaxBy(items, comparator) {\n    if (items.length === 0) {\n        return undefined;\n    }\n    let max = items[0];\n    for (let i = 1; i < items.length; i++) {\n        const item = items[i];\n        if (comparator(item, max) > 0) {\n            max = item;\n        }\n    }\n    return max;\n}\n/**\n * Returns the last item that is equal to or greater than every other item.\n*/\nexport function findLastMaxBy(items, comparator) {\n    if (items.length === 0) {\n        return undefined;\n    }\n    let max = items[0];\n    for (let i = 1; i < items.length; i++) {\n        const item = items[i];\n        if (comparator(item, max) >= 0) {\n            max = item;\n        }\n    }\n    return max;\n}\n/**\n * Returns the first item that is equal to or less than every other item.\n*/\nexport function findMinBy(items, comparator) {\n    return findMaxBy(items, (a, b) => -comparator(a, b));\n}\nexport function findMaxIdxBy(items, comparator) {\n    if (items.length === 0) {\n        return -1;\n    }\n    let maxIdx = 0;\n    for (let i = 1; i < items.length; i++) {\n        const item = items[i];\n        if (comparator(item, items[maxIdx]) > 0) {\n            maxIdx = i;\n        }\n    }\n    return maxIdx;\n}\nexport class ArrayQueue {\n    /**\n     * Constructs a queue that is backed by the given array. Runtime is O(1).\n    */\n    constructor(items) {\n        this.items = items;\n        this.firstIdx = 0;\n        this.lastIdx = this.items.length - 1;\n    }\n    get length() {\n        return this.lastIdx - this.firstIdx + 1;\n    }\n    /**\n     * Consumes elements from the beginning of the queue as long as the predicate returns true.\n     * If no elements were consumed, `null` is returned. Has a runtime of O(result.length).\n    */\n    takeWhile(predicate) {\n        // P(k) := k <= this.lastIdx && predicate(this.items[k])\n        // Find s := min { k | k >= this.firstIdx && !P(k) } and return this.data[this.firstIdx...s)\n        let startIdx = this.firstIdx;\n        while (startIdx < this.items.length && predicate(this.items[startIdx])) {\n            startIdx++;\n        }\n        const result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n        this.firstIdx = startIdx;\n        return result;\n    }\n    /**\n     * Consumes elements from the end of the queue as long as the predicate returns true.\n     * If no elements were consumed, `null` is returned.\n     * The result has the same order as the underlying array!\n    */\n    takeFromEndWhile(predicate) {\n        // P(k) := this.firstIdx >= k && predicate(this.items[k])\n        // Find s := max { k | k <= this.lastIdx && !P(k) } and return this.data(s...this.lastIdx]\n        let endIdx = this.lastIdx;\n        while (endIdx >= 0 && predicate(this.items[endIdx])) {\n            endIdx--;\n        }\n        const result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n        this.lastIdx = endIdx;\n        return result;\n    }\n    peek() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        return this.items[this.firstIdx];\n    }\n    peekLast() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        return this.items[this.lastIdx];\n    }\n    dequeue() {\n        const result = this.items[this.firstIdx];\n        this.firstIdx++;\n        return result;\n    }\n    removeLast() {\n        const result = this.items[this.lastIdx];\n        this.lastIdx--;\n        return result;\n    }\n    takeCount(count) {\n        const result = this.items.slice(this.firstIdx, this.firstIdx + count);\n        this.firstIdx += count;\n        return result;\n    }\n}\n/**\n * This class is faster than an iterator and array for lazy computed data.\n*/\nexport class CallbackIterable {\n    constructor(\n    /**\n     * Calls the callback for every item.\n     * Stops when the callback returns false.\n    */\n    iterate) {\n        this.iterate = iterate;\n    }\n    forEach(handler) {\n        this.iterate(item => { handler(item); return true; });\n    }\n    toArray() {\n        const result = [];\n        this.iterate(item => { result.push(item); return true; });\n        return result;\n    }\n    filter(predicate) {\n        return new CallbackIterable(cb => this.iterate(item => predicate(item) ? cb(item) : true));\n    }\n    map(mapFn) {\n        return new CallbackIterable(cb => this.iterate(item => cb(mapFn(item))));\n    }\n    some(predicate) {\n        let result = false;\n        this.iterate(item => { result = predicate(item); return !result; });\n        return result;\n    }\n    findFirst(predicate) {\n        let result;\n        this.iterate(item => {\n            if (predicate(item)) {\n                result = item;\n                return false;\n            }\n            return true;\n        });\n        return result;\n    }\n    findLast(predicate) {\n        let result;\n        this.iterate(item => {\n            if (predicate(item)) {\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n    findLastMaxBy(comparator) {\n        let result;\n        let first = true;\n        this.iterate(item => {\n            if (first || CompareResult.isGreaterThan(comparator(item, result))) {\n                first = false;\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n}\nCallbackIterable.empty = new CallbackIterable(_callback => { });\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { shuffle } from './arrays.js';\nimport { compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase } from './strings.js';\nexport class StringIterator {\n    constructor() {\n        this._value = '';\n        this._pos = 0;\n    }\n    reset(key) {\n        this._value = key;\n        this._pos = 0;\n        return this;\n    }\n    next() {\n        this._pos += 1;\n        return this;\n    }\n    hasNext() {\n        return this._pos < this._value.length - 1;\n    }\n    cmp(a) {\n        const aCode = a.charCodeAt(0);\n        const thisCode = this._value.charCodeAt(this._pos);\n        return aCode - thisCode;\n    }\n    value() {\n        return this._value[this._pos];\n    }\n}\nexport class ConfigKeysIterator {\n    constructor(_caseSensitive = true) {\n        this._caseSensitive = _caseSensitive;\n    }\n    reset(key) {\n        this._value = key;\n        this._from = 0;\n        this._to = 0;\n        return this.next();\n    }\n    hasNext() {\n        return this._to < this._value.length;\n    }\n    next() {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._value.length; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === 46 /* CharCode.Period */) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n    cmp(a) {\n        return this._caseSensitive\n            ? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n            : compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n    }\n    value() {\n        return this._value.substring(this._from, this._to);\n    }\n}\nexport class PathIterator {\n    constructor(_splitOnBackslash = true, _caseSensitive = true) {\n        this._splitOnBackslash = _splitOnBackslash;\n        this._caseSensitive = _caseSensitive;\n    }\n    reset(key) {\n        this._from = 0;\n        this._to = 0;\n        this._value = key;\n        this._valueLen = key.length;\n        for (let pos = key.length - 1; pos >= 0; pos--, this._valueLen--) {\n            const ch = this._value.charCodeAt(pos);\n            if (!(ch === 47 /* CharCode.Slash */ || this._splitOnBackslash && ch === 92 /* CharCode.Backslash */)) {\n                break;\n            }\n        }\n        return this.next();\n    }\n    hasNext() {\n        return this._to < this._valueLen;\n    }\n    next() {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._valueLen; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === 47 /* CharCode.Slash */ || this._splitOnBackslash && ch === 92 /* CharCode.Backslash */) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n    cmp(a) {\n        return this._caseSensitive\n            ? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n            : compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n    }\n    value() {\n        return this._value.substring(this._from, this._to);\n    }\n}\nexport class UriIterator {\n    constructor(_ignorePathCasing, _ignoreQueryAndFragment) {\n        this._ignorePathCasing = _ignorePathCasing;\n        this._ignoreQueryAndFragment = _ignoreQueryAndFragment;\n        this._states = [];\n        this._stateIdx = 0;\n    }\n    reset(key) {\n        this._value = key;\n        this._states = [];\n        if (this._value.scheme) {\n            this._states.push(1 /* UriIteratorState.Scheme */);\n        }\n        if (this._value.authority) {\n            this._states.push(2 /* UriIteratorState.Authority */);\n        }\n        if (this._value.path) {\n            this._pathIterator = new PathIterator(false, !this._ignorePathCasing(key));\n            this._pathIterator.reset(key.path);\n            if (this._pathIterator.value()) {\n                this._states.push(3 /* UriIteratorState.Path */);\n            }\n        }\n        if (!this._ignoreQueryAndFragment(key)) {\n            if (this._value.query) {\n                this._states.push(4 /* UriIteratorState.Query */);\n            }\n            if (this._value.fragment) {\n                this._states.push(5 /* UriIteratorState.Fragment */);\n            }\n        }\n        this._stateIdx = 0;\n        return this;\n    }\n    next() {\n        if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */ && this._pathIterator.hasNext()) {\n            this._pathIterator.next();\n        }\n        else {\n            this._stateIdx += 1;\n        }\n        return this;\n    }\n    hasNext() {\n        return (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */ && this._pathIterator.hasNext())\n            || this._stateIdx < this._states.length - 1;\n    }\n    cmp(a) {\n        if (this._states[this._stateIdx] === 1 /* UriIteratorState.Scheme */) {\n            return compareIgnoreCase(a, this._value.scheme);\n        }\n        else if (this._states[this._stateIdx] === 2 /* UriIteratorState.Authority */) {\n            return compareIgnoreCase(a, this._value.authority);\n        }\n        else if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */) {\n            return this._pathIterator.cmp(a);\n        }\n        else if (this._states[this._stateIdx] === 4 /* UriIteratorState.Query */) {\n            return compare(a, this._value.query);\n        }\n        else if (this._states[this._stateIdx] === 5 /* UriIteratorState.Fragment */) {\n            return compare(a, this._value.fragment);\n        }\n        throw new Error();\n    }\n    value() {\n        if (this._states[this._stateIdx] === 1 /* UriIteratorState.Scheme */) {\n            return this._value.scheme;\n        }\n        else if (this._states[this._stateIdx] === 2 /* UriIteratorState.Authority */) {\n            return this._value.authority;\n        }\n        else if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */) {\n            return this._pathIterator.value();\n        }\n        else if (this._states[this._stateIdx] === 4 /* UriIteratorState.Query */) {\n            return this._value.query;\n        }\n        else if (this._states[this._stateIdx] === 5 /* UriIteratorState.Fragment */) {\n            return this._value.fragment;\n        }\n        throw new Error();\n    }\n}\nclass TernarySearchTreeNode {\n    constructor() {\n        this.height = 1;\n    }\n    isEmpty() {\n        return !this.left && !this.mid && !this.right && !this.value;\n    }\n    rotateLeft() {\n        const tmp = this.right;\n        this.right = tmp.left;\n        tmp.left = this;\n        this.updateHeight();\n        tmp.updateHeight();\n        return tmp;\n    }\n    rotateRight() {\n        const tmp = this.left;\n        this.left = tmp.right;\n        tmp.right = this;\n        this.updateHeight();\n        tmp.updateHeight();\n        return tmp;\n    }\n    updateHeight() {\n        this.height = 1 + Math.max(this.heightLeft, this.heightRight);\n    }\n    balanceFactor() {\n        return this.heightRight - this.heightLeft;\n    }\n    get heightLeft() {\n        var _a, _b;\n        return (_b = (_a = this.left) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0;\n    }\n    get heightRight() {\n        var _a, _b;\n        return (_b = (_a = this.right) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0;\n    }\n}\nexport class TernarySearchTree {\n    static forUris(ignorePathCasing = () => false, ignoreQueryAndFragment = () => false) {\n        return new TernarySearchTree(new UriIterator(ignorePathCasing, ignoreQueryAndFragment));\n    }\n    static forPaths(ignorePathCasing = false) {\n        return new TernarySearchTree(new PathIterator(undefined, !ignorePathCasing));\n    }\n    static forStrings() {\n        return new TernarySearchTree(new StringIterator());\n    }\n    static forConfigKeys() {\n        return new TernarySearchTree(new ConfigKeysIterator());\n    }\n    constructor(segments) {\n        this._iter = segments;\n    }\n    clear() {\n        this._root = undefined;\n    }\n    fill(values, keys) {\n        if (keys) {\n            const arr = keys.slice(0);\n            shuffle(arr);\n            for (const k of arr) {\n                this.set(k, values);\n            }\n        }\n        else {\n            const arr = values.slice(0);\n            shuffle(arr);\n            for (const entry of arr) {\n                this.set(entry[0], entry[1]);\n            }\n        }\n    }\n    set(key, element) {\n        const iter = this._iter.reset(key);\n        let node;\n        if (!this._root) {\n            this._root = new TernarySearchTreeNode();\n            this._root.segment = iter.value();\n        }\n        const stack = [];\n        // find insert_node\n        node = this._root;\n        while (true) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                if (!node.left) {\n                    node.left = new TernarySearchTreeNode();\n                    node.left.segment = iter.value();\n                }\n                stack.push([-1 /* Dir.Left */, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                if (!node.right) {\n                    node.right = new TernarySearchTreeNode();\n                    node.right.segment = iter.value();\n                }\n                stack.push([1 /* Dir.Right */, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                if (!node.mid) {\n                    node.mid = new TernarySearchTreeNode();\n                    node.mid.segment = iter.value();\n                }\n                stack.push([0 /* Dir.Mid */, node]);\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        // set value\n        const oldElement = node.value;\n        node.value = element;\n        node.key = key;\n        // balance\n        for (let i = stack.length - 1; i >= 0; i--) {\n            const node = stack[i][1];\n            node.updateHeight();\n            const bf = node.balanceFactor();\n            if (bf < -1 || bf > 1) {\n                // needs rotate\n                const d1 = stack[i][0];\n                const d2 = stack[i + 1][0];\n                if (d1 === 1 /* Dir.Right */ && d2 === 1 /* Dir.Right */) {\n                    //right, right -> rotate left\n                    stack[i][1] = node.rotateLeft();\n                }\n                else if (d1 === -1 /* Dir.Left */ && d2 === -1 /* Dir.Left */) {\n                    // left, left -> rotate right\n                    stack[i][1] = node.rotateRight();\n                }\n                else if (d1 === 1 /* Dir.Right */ && d2 === -1 /* Dir.Left */) {\n                    // right, left -> double rotate right, left\n                    node.right = stack[i + 1][1] = stack[i + 1][1].rotateRight();\n                    stack[i][1] = node.rotateLeft();\n                }\n                else if (d1 === -1 /* Dir.Left */ && d2 === 1 /* Dir.Right */) {\n                    // left, right -> double rotate left, right\n                    node.left = stack[i + 1][1] = stack[i + 1][1].rotateLeft();\n                    stack[i][1] = node.rotateRight();\n                }\n                else {\n                    throw new Error();\n                }\n                // patch path to parent\n                if (i > 0) {\n                    switch (stack[i - 1][0]) {\n                        case -1 /* Dir.Left */:\n                            stack[i - 1][1].left = stack[i][1];\n                            break;\n                        case 1 /* Dir.Right */:\n                            stack[i - 1][1].right = stack[i][1];\n                            break;\n                        case 0 /* Dir.Mid */:\n                            stack[i - 1][1].mid = stack[i][1];\n                            break;\n                    }\n                }\n                else {\n                    this._root = stack[0][1];\n                }\n            }\n        }\n        return oldElement;\n    }\n    get(key) {\n        var _a;\n        return (_a = this._getNode(key)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    _getNode(key) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node;\n    }\n    has(key) {\n        const node = this._getNode(key);\n        return !((node === null || node === void 0 ? void 0 : node.value) === undefined && (node === null || node === void 0 ? void 0 : node.mid) === undefined);\n    }\n    delete(key) {\n        return this._delete(key, false);\n    }\n    deleteSuperstr(key) {\n        return this._delete(key, true);\n    }\n    _delete(key, superStr) {\n        var _a;\n        const iter = this._iter.reset(key);\n        const stack = [];\n        let node = this._root;\n        // find node\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                stack.push([-1 /* Dir.Left */, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                stack.push([1 /* Dir.Right */, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                stack.push([0 /* Dir.Mid */, node]);\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        if (!node) {\n            // node not found\n            return;\n        }\n        if (superStr) {\n            // removing children, reset height\n            node.left = undefined;\n            node.mid = undefined;\n            node.right = undefined;\n            node.height = 1;\n        }\n        else {\n            // removing element\n            node.key = undefined;\n            node.value = undefined;\n        }\n        // BST node removal\n        if (!node.mid && !node.value) {\n            if (node.left && node.right) {\n                // full node\n                // replace deleted-node with the min-node of the right branch.\n                // If there is no true min-node leave things as they are\n                const min = this._min(node.right);\n                if (min.key) {\n                    const { key, value, segment } = min;\n                    this._delete(min.key, false);\n                    node.key = key;\n                    node.value = value;\n                    node.segment = segment;\n                }\n            }\n            else {\n                // empty or half empty\n                const newChild = (_a = node.left) !== null && _a !== void 0 ? _a : node.right;\n                if (stack.length > 0) {\n                    const [dir, parent] = stack[stack.length - 1];\n                    switch (dir) {\n                        case -1 /* Dir.Left */:\n                            parent.left = newChild;\n                            break;\n                        case 0 /* Dir.Mid */:\n                            parent.mid = newChild;\n                            break;\n                        case 1 /* Dir.Right */:\n                            parent.right = newChild;\n                            break;\n                    }\n                }\n                else {\n                    this._root = newChild;\n                }\n            }\n        }\n        // AVL balance\n        for (let i = stack.length - 1; i >= 0; i--) {\n            const node = stack[i][1];\n            node.updateHeight();\n            const bf = node.balanceFactor();\n            if (bf > 1) {\n                // right heavy\n                if (node.right.balanceFactor() >= 0) {\n                    // right, right -> rotate left\n                    stack[i][1] = node.rotateLeft();\n                }\n                else {\n                    // right, left -> double rotate\n                    node.right = node.right.rotateRight();\n                    stack[i][1] = node.rotateLeft();\n                }\n            }\n            else if (bf < -1) {\n                // left heavy\n                if (node.left.balanceFactor() <= 0) {\n                    // left, left -> rotate right\n                    stack[i][1] = node.rotateRight();\n                }\n                else {\n                    // left, right -> double rotate\n                    node.left = node.left.rotateLeft();\n                    stack[i][1] = node.rotateRight();\n                }\n            }\n            // patch path to parent\n            if (i > 0) {\n                switch (stack[i - 1][0]) {\n                    case -1 /* Dir.Left */:\n                        stack[i - 1][1].left = stack[i][1];\n                        break;\n                    case 1 /* Dir.Right */:\n                        stack[i - 1][1].right = stack[i][1];\n                        break;\n                    case 0 /* Dir.Mid */:\n                        stack[i - 1][1].mid = stack[i][1];\n                        break;\n                }\n            }\n            else {\n                this._root = stack[0][1];\n            }\n        }\n    }\n    _min(node) {\n        while (node.left) {\n            node = node.left;\n        }\n        return node;\n    }\n    findSubstr(key) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        let candidate = undefined;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                candidate = node.value || candidate;\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node && node.value || candidate;\n    }\n    findSuperstr(key) {\n        return this._findSuperstrOrElement(key, false);\n    }\n    _findSuperstrOrElement(key, allowValue) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                // collect\n                if (!node.mid) {\n                    if (allowValue) {\n                        return node.value;\n                    }\n                    else {\n                        return undefined;\n                    }\n                }\n                else {\n                    return this._entries(node.mid);\n                }\n            }\n        }\n        return undefined;\n    }\n    hasElementOrSubtree(key) {\n        return this._findSuperstrOrElement(key, true) !== undefined;\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key);\n        }\n    }\n    *[Symbol.iterator]() {\n        yield* this._entries(this._root);\n    }\n    _entries(node) {\n        const result = [];\n        this._dfsEntries(node, result);\n        return result[Symbol.iterator]();\n    }\n    _dfsEntries(node, bucket) {\n        // DFS\n        if (!node) {\n            return;\n        }\n        if (node.left) {\n            this._dfsEntries(node.left, bucket);\n        }\n        if (node.value) {\n            bucket.push([node.key, node.value]);\n        }\n        if (node.mid) {\n            this._dfsEntries(node.mid, bucket);\n        }\n        if (node.right) {\n            this._dfsEntries(node.right, bucket);\n        }\n    }\n    // for debug/testing\n    _isBalanced() {\n        const nodeIsBalanced = (node) => {\n            if (!node) {\n                return true;\n            }\n            const bf = node.balanceFactor();\n            if (bf < -1 || bf > 1) {\n                return false;\n            }\n            return nodeIsBalanced(node.left) && nodeIsBalanced(node.right);\n        };\n        return nodeIsBalanced(this._root);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { TernarySearchTree } from '../../../base/common/ternarySearchTree.js';\nimport { sep } from '../../../base/common/path.js';\nimport { startsWithIgnoreCase } from '../../../base/common/strings.js';\nimport { isNumber } from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { isWeb } from '../../../base/common/platform.js';\nimport { Schemas } from '../../../base/common/network.js';\n//#region file service & providers\nexport const IFileService = createDecorator('fileService');\nexport function isFileOpenForWriteOptions(options) {\n    return options.create === true;\n}\nexport var FileType;\n(function (FileType) {\n    /**\n     * File is unknown (neither file, directory nor symbolic link).\n     */\n    FileType[FileType[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * File is a normal file.\n     */\n    FileType[FileType[\"File\"] = 1] = \"File\";\n    /**\n     * File is a directory.\n     */\n    FileType[FileType[\"Directory\"] = 2] = \"Directory\";\n    /**\n     * File is a symbolic link.\n     *\n     * Note: even when the file is a symbolic link, you can test for\n     * `FileType.File` and `FileType.Directory` to know the type of\n     * the target the link points to.\n     */\n    FileType[FileType[\"SymbolicLink\"] = 64] = \"SymbolicLink\";\n})(FileType || (FileType = {}));\nexport var FilePermission;\n(function (FilePermission) {\n    /**\n     * File is readonly. Components like editors should not\n     * offer to edit the contents.\n     */\n    FilePermission[FilePermission[\"Readonly\"] = 1] = \"Readonly\";\n    /**\n     * File is locked. Components like editors should offer\n     * to edit the contents and ask the user upon saving to\n     * remove the lock.\n     */\n    FilePermission[FilePermission[\"Locked\"] = 2] = \"Locked\";\n})(FilePermission || (FilePermission = {}));\nexport function hasReadWriteCapability(provider) {\n    return !!(provider.capabilities & 2 /* FileSystemProviderCapabilities.FileReadWrite */);\n}\nexport function hasFileFolderCopyCapability(provider) {\n    return !!(provider.capabilities & 8 /* FileSystemProviderCapabilities.FileFolderCopy */);\n}\nexport function hasFileCloneCapability(provider) {\n    return !!(provider.capabilities & 131072 /* FileSystemProviderCapabilities.FileClone */);\n}\nexport function hasOpenReadWriteCloseCapability(provider) {\n    return !!(provider.capabilities & 4 /* FileSystemProviderCapabilities.FileOpenReadWriteClose */);\n}\nexport function hasFileReadStreamCapability(provider) {\n    return !!(provider.capabilities & 16 /* FileSystemProviderCapabilities.FileReadStream */);\n}\nexport function hasFileAtomicReadCapability(provider) {\n    if (!hasReadWriteCapability(provider)) {\n        return false; // we require the `FileReadWrite` capability too\n    }\n    return !!(provider.capabilities & 16384 /* FileSystemProviderCapabilities.FileAtomicRead */);\n}\nexport function hasFileAtomicWriteCapability(provider) {\n    if (!hasReadWriteCapability(provider)) {\n        return false; // we require the `FileReadWrite` capability too\n    }\n    return !!(provider.capabilities & 32768 /* FileSystemProviderCapabilities.FileAtomicWrite */);\n}\nexport function hasFileAtomicDeleteCapability(provider) {\n    return !!(provider.capabilities & 65536 /* FileSystemProviderCapabilities.FileAtomicDelete */);\n}\nexport function hasReadonlyCapability(provider) {\n    return !!(provider.capabilities & 2048 /* FileSystemProviderCapabilities.Readonly */);\n}\nexport var FileSystemProviderErrorCode;\n(function (FileSystemProviderErrorCode) {\n    FileSystemProviderErrorCode[\"FileExists\"] = \"EntryExists\";\n    FileSystemProviderErrorCode[\"FileNotFound\"] = \"EntryNotFound\";\n    FileSystemProviderErrorCode[\"FileNotADirectory\"] = \"EntryNotADirectory\";\n    FileSystemProviderErrorCode[\"FileIsADirectory\"] = \"EntryIsADirectory\";\n    FileSystemProviderErrorCode[\"FileExceedsStorageQuota\"] = \"EntryExceedsStorageQuota\";\n    FileSystemProviderErrorCode[\"FileTooLarge\"] = \"EntryTooLarge\";\n    FileSystemProviderErrorCode[\"FileWriteLocked\"] = \"EntryWriteLocked\";\n    FileSystemProviderErrorCode[\"NoPermissions\"] = \"NoPermissions\";\n    FileSystemProviderErrorCode[\"Unavailable\"] = \"Unavailable\";\n    FileSystemProviderErrorCode[\"Unknown\"] = \"Unknown\";\n})(FileSystemProviderErrorCode || (FileSystemProviderErrorCode = {}));\nexport class FileSystemProviderError extends Error {\n    static create(error, code) {\n        const providerError = new FileSystemProviderError(error.toString(), code);\n        markAsFileSystemProviderError(providerError, code);\n        return providerError;\n    }\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\nexport function createFileSystemProviderError(error, code) {\n    return FileSystemProviderError.create(error, code);\n}\nexport function ensureFileSystemProviderError(error) {\n    if (!error) {\n        return createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/microsoft/vscode/issues/72798\n    }\n    return error;\n}\nexport function markAsFileSystemProviderError(error, code) {\n    error.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n    return error;\n}\nexport function toFileSystemProviderErrorCode(error) {\n    // Guard against abuse\n    if (!error) {\n        return FileSystemProviderErrorCode.Unknown;\n    }\n    // FileSystemProviderError comes with the code\n    if (error instanceof FileSystemProviderError) {\n        return error.code;\n    }\n    // Any other error, check for name match by assuming that the error\n    // went through the markAsFileSystemProviderError() method\n    const match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n    if (!match) {\n        return FileSystemProviderErrorCode.Unknown;\n    }\n    switch (match[1]) {\n        case FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n        case FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n        case FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n        case FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n        case FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n        case FileSystemProviderErrorCode.FileWriteLocked: return FileSystemProviderErrorCode.FileWriteLocked;\n        case FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n        case FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n    }\n    return FileSystemProviderErrorCode.Unknown;\n}\nexport function toFileOperationResult(error) {\n    // FileSystemProviderError comes with the result already\n    if (error instanceof FileOperationError) {\n        return error.fileOperationResult;\n    }\n    // Otherwise try to find from code\n    switch (toFileSystemProviderErrorCode(error)) {\n        case FileSystemProviderErrorCode.FileNotFound:\n            return 1 /* FileOperationResult.FILE_NOT_FOUND */;\n        case FileSystemProviderErrorCode.FileIsADirectory:\n            return 0 /* FileOperationResult.FILE_IS_DIRECTORY */;\n        case FileSystemProviderErrorCode.FileNotADirectory:\n            return 9 /* FileOperationResult.FILE_NOT_DIRECTORY */;\n        case FileSystemProviderErrorCode.FileWriteLocked:\n            return 5 /* FileOperationResult.FILE_WRITE_LOCKED */;\n        case FileSystemProviderErrorCode.NoPermissions:\n            return 6 /* FileOperationResult.FILE_PERMISSION_DENIED */;\n        case FileSystemProviderErrorCode.FileExists:\n            return 4 /* FileOperationResult.FILE_MOVE_CONFLICT */;\n        case FileSystemProviderErrorCode.FileTooLarge:\n            return 7 /* FileOperationResult.FILE_TOO_LARGE */;\n        default:\n            return 10 /* FileOperationResult.FILE_OTHER_ERROR */;\n    }\n}\nexport class FileOperationEvent {\n    constructor(resource, operation, target) {\n        this.resource = resource;\n        this.operation = operation;\n        this.target = target;\n    }\n    isOperation(operation) {\n        return this.operation === operation;\n    }\n}\nexport class FileChangesEvent {\n    constructor(changes, ignorePathCasing) {\n        this.added = undefined;\n        this.updated = undefined;\n        this.deleted = undefined;\n        /**\n         * @deprecated use the `contains` or `affects` method to efficiently find\n         * out if the event relates to a given resource. these methods ensure:\n         * - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n         * - correctly handles `FileChangeType.DELETED` events\n         */\n        this.rawAdded = [];\n        /**\n        * @deprecated use the `contains` or `affects` method to efficiently find\n        * out if the event relates to a given resource. these methods ensure:\n        * - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n        * - correctly handles `FileChangeType.DELETED` events\n        */\n        this.rawUpdated = [];\n        /**\n        * @deprecated use the `contains` or `affects` method to efficiently find\n        * out if the event relates to a given resource. these methods ensure:\n        * - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n        * - correctly handles `FileChangeType.DELETED` events\n        */\n        this.rawDeleted = [];\n        const entriesByType = new Map();\n        for (const change of changes) {\n            const array = entriesByType.get(change.type);\n            if (array) {\n                array.push([change.resource, change]);\n            }\n            else {\n                entriesByType.set(change.type, [[change.resource, change]]);\n            }\n            switch (change.type) {\n                case 1 /* FileChangeType.ADDED */:\n                    this.rawAdded.push(change.resource);\n                    break;\n                case 0 /* FileChangeType.UPDATED */:\n                    this.rawUpdated.push(change.resource);\n                    break;\n                case 2 /* FileChangeType.DELETED */:\n                    this.rawDeleted.push(change.resource);\n                    break;\n            }\n        }\n        for (const [key, value] of entriesByType) {\n            switch (key) {\n                case 1 /* FileChangeType.ADDED */:\n                    this.added = TernarySearchTree.forUris(() => ignorePathCasing);\n                    this.added.fill(value);\n                    break;\n                case 0 /* FileChangeType.UPDATED */:\n                    this.updated = TernarySearchTree.forUris(() => ignorePathCasing);\n                    this.updated.fill(value);\n                    break;\n                case 2 /* FileChangeType.DELETED */:\n                    this.deleted = TernarySearchTree.forUris(() => ignorePathCasing);\n                    this.deleted.fill(value);\n                    break;\n            }\n        }\n    }\n    /**\n     * Find out if the file change events match the provided resource.\n     *\n     * Note: when passing `FileChangeType.DELETED`, we consider a match\n     * also when the parent of the resource got deleted.\n     */\n    contains(resource, ...types) {\n        return this.doContains(resource, { includeChildren: false }, ...types);\n    }\n    /**\n     * Find out if the file change events either match the provided\n     * resource, or contain a child of this resource.\n     */\n    affects(resource, ...types) {\n        return this.doContains(resource, { includeChildren: true }, ...types);\n    }\n    doContains(resource, options, ...types) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!resource) {\n            return false;\n        }\n        const hasTypesFilter = types.length > 0;\n        // Added\n        if (!hasTypesFilter || types.includes(1 /* FileChangeType.ADDED */)) {\n            if ((_a = this.added) === null || _a === void 0 ? void 0 : _a.get(resource)) {\n                return true;\n            }\n            if (options.includeChildren && ((_b = this.added) === null || _b === void 0 ? void 0 : _b.findSuperstr(resource))) {\n                return true;\n            }\n        }\n        // Updated\n        if (!hasTypesFilter || types.includes(0 /* FileChangeType.UPDATED */)) {\n            if ((_c = this.updated) === null || _c === void 0 ? void 0 : _c.get(resource)) {\n                return true;\n            }\n            if (options.includeChildren && ((_d = this.updated) === null || _d === void 0 ? void 0 : _d.findSuperstr(resource))) {\n                return true;\n            }\n        }\n        // Deleted\n        if (!hasTypesFilter || types.includes(2 /* FileChangeType.DELETED */)) {\n            if ((_e = this.deleted) === null || _e === void 0 ? void 0 : _e.findSubstr(resource) /* deleted also considers parent folders */) {\n                return true;\n            }\n            if (options.includeChildren && ((_f = this.deleted) === null || _f === void 0 ? void 0 : _f.findSuperstr(resource))) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Returns if this event contains added files.\n     */\n    gotAdded() {\n        return !!this.added;\n    }\n    /**\n     * Returns if this event contains deleted files.\n     */\n    gotDeleted() {\n        return !!this.deleted;\n    }\n    /**\n     * Returns if this event contains updated files.\n     */\n    gotUpdated() {\n        return !!this.updated;\n    }\n}\nexport function isParent(path, candidate, ignoreCase) {\n    if (!path || !candidate || path === candidate) {\n        return false;\n    }\n    if (candidate.length > path.length) {\n        return false;\n    }\n    if (candidate.charAt(candidate.length - 1) !== sep) {\n        candidate += sep;\n    }\n    if (ignoreCase) {\n        return startsWithIgnoreCase(path, candidate);\n    }\n    return path.indexOf(candidate) === 0;\n}\nexport class FileOperationError extends Error {\n    constructor(message, fileOperationResult, options) {\n        super(message);\n        this.fileOperationResult = fileOperationResult;\n        this.options = options;\n    }\n}\nexport class TooLargeFileOperationError extends FileOperationError {\n    constructor(message, fileOperationResult, size, options) {\n        super(message, fileOperationResult, options);\n        this.fileOperationResult = fileOperationResult;\n        this.size = size;\n    }\n}\nexport class NotModifiedSinceFileOperationError extends FileOperationError {\n    constructor(message, stat, options) {\n        super(message, 2 /* FileOperationResult.FILE_NOT_MODIFIED_SINCE */, options);\n        this.stat = stat;\n    }\n}\n//#endregion\n//#region Settings\nexport const AutoSaveConfiguration = {\n    OFF: 'off',\n    AFTER_DELAY: 'afterDelay',\n    ON_FOCUS_CHANGE: 'onFocusChange',\n    ON_WINDOW_CHANGE: 'onWindowChange'\n};\nexport const HotExitConfiguration = {\n    OFF: 'off',\n    ON_EXIT: 'onExit',\n    ON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\nexport const FILES_READONLY_INCLUDE_CONFIG = 'files.readonlyInclude';\nexport const FILES_READONLY_EXCLUDE_CONFIG = 'files.readonlyExclude';\nexport const FILES_READONLY_FROM_PERMISSIONS_CONFIG = 'files.readonlyFromPermissions';\n//#endregion\n//#region Utilities\nexport var FileKind;\n(function (FileKind) {\n    FileKind[FileKind[\"FILE\"] = 0] = \"FILE\";\n    FileKind[FileKind[\"FOLDER\"] = 1] = \"FOLDER\";\n    FileKind[FileKind[\"ROOT_FOLDER\"] = 2] = \"ROOT_FOLDER\";\n})(FileKind || (FileKind = {}));\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\nexport function etag(stat) {\n    if (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n        return undefined;\n    }\n    return stat.mtime.toString(29) + stat.size.toString(31);\n}\nexport function whenProviderRegistered(file, fileService) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (fileService.hasProvider(URI.from({ scheme: file.scheme }))) {\n            return;\n        }\n        return new Promise(resolve => {\n            const disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n                if (e.scheme === file.scheme && e.added) {\n                    disposable.dispose();\n                    resolve();\n                }\n            });\n        });\n    });\n}\n/**\n * Helper to format a raw byte size into a human readable label.\n */\nexport class ByteSize {\n    static formatSize(size) {\n        if (!isNumber(size)) {\n            size = 0;\n        }\n        if (size < ByteSize.KB) {\n            return localize('sizeB', \"{0}B\", size.toFixed(0));\n        }\n        if (size < ByteSize.MB) {\n            return localize('sizeKB', \"{0}KB\", (size / ByteSize.KB).toFixed(2));\n        }\n        if (size < ByteSize.GB) {\n            return localize('sizeMB', \"{0}MB\", (size / ByteSize.MB).toFixed(2));\n        }\n        if (size < ByteSize.TB) {\n            return localize('sizeGB', \"{0}GB\", (size / ByteSize.GB).toFixed(2));\n        }\n        return localize('sizeTB', \"{0}TB\", (size / ByteSize.TB).toFixed(2));\n    }\n}\nByteSize.KB = 1024;\nByteSize.MB = ByteSize.KB * ByteSize.KB;\nByteSize.GB = ByteSize.MB * ByteSize.KB;\nByteSize.TB = ByteSize.GB * ByteSize.KB;\nexport function getLargeFileConfirmationLimit(arg) {\n    const isRemote = typeof arg === 'string' || (arg === null || arg === void 0 ? void 0 : arg.scheme) === Schemas.vscodeRemote;\n    const isLocal = typeof arg !== 'string' && (arg === null || arg === void 0 ? void 0 : arg.scheme) === Schemas.file;\n    if (isLocal) {\n        // Local almost has no limit in file size\n        return 1024 * ByteSize.MB;\n    }\n    if (isRemote) {\n        // With a remote, pick a low limit to avoid\n        // potentially costly file transfers\n        return 10 * ByteSize.MB;\n    }\n    if (isWeb) {\n        // Web: we cannot know for sure if a cost\n        // is associated with the file transfer\n        // so we pick a reasonably small limit\n        return 50 * ByteSize.MB;\n    }\n    // Local desktop: almost no limit in file size\n    return 1024 * ByteSize.MB;\n}\n//#endregion\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalState } from '../../../base/common/errors.js';\nimport { localize } from '../../../nls.js';\nfunction hintDidYouMean(...meant) {\n    switch (meant.length) {\n        case 1:\n            return localize('contextkey.scanner.hint.didYouMean1', \"Did you mean {0}?\", meant[0]);\n        case 2:\n            return localize('contextkey.scanner.hint.didYouMean2', \"Did you mean {0} or {1}?\", meant[0], meant[1]);\n        case 3:\n            return localize('contextkey.scanner.hint.didYouMean3', \"Did you mean {0}, {1} or {2}?\", meant[0], meant[1], meant[2]);\n        default: // we just don't expect that many\n            return undefined;\n    }\n}\nconst hintDidYouForgetToOpenOrCloseQuote = localize('contextkey.scanner.hint.didYouForgetToOpenOrCloseQuote', \"Did you forget to open or close the quote?\");\nconst hintDidYouForgetToEscapeSlash = localize('contextkey.scanner.hint.didYouForgetToEscapeSlash', \"Did you forget to escape the '/' (slash) character? Put two backslashes before it to escape, e.g., '\\\\\\\\/\\'.\");\n/**\n * A simple scanner for context keys.\n *\n * Example:\n *\n * ```ts\n * const scanner = new Scanner().reset('resourceFileName =~ /docker/ && !config.docker.enabled');\n * const tokens = [...scanner];\n * if (scanner.errorTokens.length > 0) {\n *     scanner.errorTokens.forEach(err => console.error(`Unexpected token at ${err.offset}: ${err.lexeme}\\nHint: ${err.additional}`));\n * } else {\n *     // process tokens\n * }\n * ```\n */\nexport class Scanner {\n    constructor() {\n        this._input = '';\n        this._start = 0;\n        this._current = 0;\n        this._tokens = [];\n        this._errors = [];\n        // u - unicode, y - sticky // TODO@ulugbekna: we accept double quotes as part of the string rather than as a delimiter (to preserve old parser's behavior)\n        this.stringRe = /[a-zA-Z0-9_<>\\-\\./\\\\:\\*\\?\\+\\[\\]\\^,#@;\"%\\$\\p{L}-]+/uy;\n    }\n    static getLexeme(token) {\n        switch (token.type) {\n            case 0 /* TokenType.LParen */:\n                return '(';\n            case 1 /* TokenType.RParen */:\n                return ')';\n            case 2 /* TokenType.Neg */:\n                return '!';\n            case 3 /* TokenType.Eq */:\n                return token.isTripleEq ? '===' : '==';\n            case 4 /* TokenType.NotEq */:\n                return token.isTripleEq ? '!==' : '!=';\n            case 5 /* TokenType.Lt */:\n                return '<';\n            case 6 /* TokenType.LtEq */:\n                return '<=';\n            case 7 /* TokenType.Gt */:\n                return '>=';\n            case 8 /* TokenType.GtEq */:\n                return '>=';\n            case 9 /* TokenType.RegexOp */:\n                return '=~';\n            case 10 /* TokenType.RegexStr */:\n                return token.lexeme;\n            case 11 /* TokenType.True */:\n                return 'true';\n            case 12 /* TokenType.False */:\n                return 'false';\n            case 13 /* TokenType.In */:\n                return 'in';\n            case 14 /* TokenType.Not */:\n                return 'not';\n            case 15 /* TokenType.And */:\n                return '&&';\n            case 16 /* TokenType.Or */:\n                return '||';\n            case 17 /* TokenType.Str */:\n                return token.lexeme;\n            case 18 /* TokenType.QuotedStr */:\n                return token.lexeme;\n            case 19 /* TokenType.Error */:\n                return token.lexeme;\n            case 20 /* TokenType.EOF */:\n                return 'EOF';\n            default:\n                throw illegalState(`unhandled token type: ${JSON.stringify(token)}; have you forgotten to add a case?`);\n        }\n    }\n    get errors() {\n        return this._errors;\n    }\n    reset(value) {\n        this._input = value;\n        this._start = 0;\n        this._current = 0;\n        this._tokens = [];\n        this._errors = [];\n        return this;\n    }\n    scan() {\n        while (!this._isAtEnd()) {\n            this._start = this._current;\n            const ch = this._advance();\n            switch (ch) {\n                case 40 /* CharCode.OpenParen */:\n                    this._addToken(0 /* TokenType.LParen */);\n                    break;\n                case 41 /* CharCode.CloseParen */:\n                    this._addToken(1 /* TokenType.RParen */);\n                    break;\n                case 33 /* CharCode.ExclamationMark */:\n                    if (this._match(61 /* CharCode.Equals */)) {\n                        const isTripleEq = this._match(61 /* CharCode.Equals */); // eat last `=` if `!==`\n                        this._tokens.push({ type: 4 /* TokenType.NotEq */, offset: this._start, isTripleEq });\n                    }\n                    else {\n                        this._addToken(2 /* TokenType.Neg */);\n                    }\n                    break;\n                case 39 /* CharCode.SingleQuote */:\n                    this._quotedString();\n                    break;\n                case 47 /* CharCode.Slash */:\n                    this._regex();\n                    break;\n                case 61 /* CharCode.Equals */:\n                    if (this._match(61 /* CharCode.Equals */)) { // support `==`\n                        const isTripleEq = this._match(61 /* CharCode.Equals */); // eat last `=` if `===`\n                        this._tokens.push({ type: 3 /* TokenType.Eq */, offset: this._start, isTripleEq });\n                    }\n                    else if (this._match(126 /* CharCode.Tilde */)) {\n                        this._addToken(9 /* TokenType.RegexOp */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('==', '=~'));\n                    }\n                    break;\n                case 60 /* CharCode.LessThan */:\n                    this._addToken(this._match(61 /* CharCode.Equals */) ? 6 /* TokenType.LtEq */ : 5 /* TokenType.Lt */);\n                    break;\n                case 62 /* CharCode.GreaterThan */:\n                    this._addToken(this._match(61 /* CharCode.Equals */) ? 8 /* TokenType.GtEq */ : 7 /* TokenType.Gt */);\n                    break;\n                case 38 /* CharCode.Ampersand */:\n                    if (this._match(38 /* CharCode.Ampersand */)) {\n                        this._addToken(15 /* TokenType.And */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('&&'));\n                    }\n                    break;\n                case 124 /* CharCode.Pipe */:\n                    if (this._match(124 /* CharCode.Pipe */)) {\n                        this._addToken(16 /* TokenType.Or */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('||'));\n                    }\n                    break;\n                // TODO@ulugbekna: 1) rewrite using a regex 2) reconsider what characters are considered whitespace, including unicode, nbsp, etc.\n                case 32 /* CharCode.Space */:\n                case 13 /* CharCode.CarriageReturn */:\n                case 9 /* CharCode.Tab */:\n                case 10 /* CharCode.LineFeed */:\n                case 160 /* CharCode.NoBreakSpace */: // &nbsp\n                    break;\n                default:\n                    this._string();\n            }\n        }\n        this._start = this._current;\n        this._addToken(20 /* TokenType.EOF */);\n        return Array.from(this._tokens);\n    }\n    _match(expected) {\n        if (this._isAtEnd()) {\n            return false;\n        }\n        if (this._input.charCodeAt(this._current) !== expected) {\n            return false;\n        }\n        this._current++;\n        return true;\n    }\n    _advance() {\n        return this._input.charCodeAt(this._current++);\n    }\n    _peek() {\n        return this._isAtEnd() ? 0 /* CharCode.Null */ : this._input.charCodeAt(this._current);\n    }\n    _addToken(type) {\n        this._tokens.push({ type, offset: this._start });\n    }\n    _error(additional) {\n        const offset = this._start;\n        const lexeme = this._input.substring(this._start, this._current);\n        const errToken = { type: 19 /* TokenType.Error */, offset: this._start, lexeme };\n        this._errors.push({ offset, lexeme, additionalInfo: additional });\n        this._tokens.push(errToken);\n    }\n    _string() {\n        this.stringRe.lastIndex = this._start;\n        const match = this.stringRe.exec(this._input);\n        if (match) {\n            this._current = this._start + match[0].length;\n            const lexeme = this._input.substring(this._start, this._current);\n            const keyword = Scanner._keywords.get(lexeme);\n            if (keyword) {\n                this._addToken(keyword);\n            }\n            else {\n                this._tokens.push({ type: 17 /* TokenType.Str */, lexeme, offset: this._start });\n            }\n        }\n    }\n    // captures the lexeme without the leading and trailing '\n    _quotedString() {\n        while (this._peek() !== 39 /* CharCode.SingleQuote */ && !this._isAtEnd()) { // TODO@ulugbekna: add support for escaping ' ?\n            this._advance();\n        }\n        if (this._isAtEnd()) {\n            this._error(hintDidYouForgetToOpenOrCloseQuote);\n            return;\n        }\n        // consume the closing '\n        this._advance();\n        this._tokens.push({ type: 18 /* TokenType.QuotedStr */, lexeme: this._input.substring(this._start + 1, this._current - 1), offset: this._start + 1 });\n    }\n    /*\n     * Lexing a regex expression: /.../[igsmyu]*\n     * Based on https://github.com/microsoft/TypeScript/blob/9247ef115e617805983740ba795d7a8164babf89/src/compiler/scanner.ts#L2129-L2181\n     *\n     * Note that we want slashes within a regex to be escaped, e.g., /file:\\\\/\\\\/\\\\// should match `file:///`\n     */\n    _regex() {\n        let p = this._current;\n        let inEscape = false;\n        let inCharacterClass = false;\n        while (true) {\n            if (p >= this._input.length) {\n                this._current = p;\n                this._error(hintDidYouForgetToEscapeSlash);\n                return;\n            }\n            const ch = this._input.charCodeAt(p);\n            if (inEscape) { // parsing an escape character\n                inEscape = false;\n            }\n            else if (ch === 47 /* CharCode.Slash */ && !inCharacterClass) { // end of regex\n                p++;\n                break;\n            }\n            else if (ch === 91 /* CharCode.OpenSquareBracket */) {\n                inCharacterClass = true;\n            }\n            else if (ch === 92 /* CharCode.Backslash */) {\n                inEscape = true;\n            }\n            else if (ch === 93 /* CharCode.CloseSquareBracket */) {\n                inCharacterClass = false;\n            }\n            p++;\n        }\n        // Consume flags // TODO@ulugbekna: use regex instead\n        while (p < this._input.length && Scanner._regexFlags.has(this._input.charCodeAt(p))) {\n            p++;\n        }\n        this._current = p;\n        const lexeme = this._input.substring(this._start, this._current);\n        this._tokens.push({ type: 10 /* TokenType.RegexStr */, lexeme, offset: this._start });\n    }\n    _isAtEnd() {\n        return this._current >= this._input.length;\n    }\n}\nScanner._regexFlags = new Set(['i', 'g', 's', 'm', 'y', 'u'].map(ch => ch.charCodeAt(0)));\nScanner._keywords = new Map([\n    ['not', 14 /* TokenType.Not */],\n    ['in', 13 /* TokenType.In */],\n    ['false', 12 /* TokenType.False */],\n    ['true', 11 /* TokenType.True */],\n]);\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isChrome, isEdge, isFirefox, isLinux, isMacintosh, isSafari, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { isFalsyOrWhitespace } from '../../../base/common/strings.js';\nimport { Scanner } from './scanner.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { localize } from '../../../nls.js';\nimport { illegalArgument } from '../../../base/common/errors.js';\nconst CONSTANT_VALUES = new Map();\nCONSTANT_VALUES.set('false', false);\nCONSTANT_VALUES.set('true', true);\nCONSTANT_VALUES.set('isMac', isMacintosh);\nCONSTANT_VALUES.set('isLinux', isLinux);\nCONSTANT_VALUES.set('isWindows', isWindows);\nCONSTANT_VALUES.set('isWeb', isWeb);\nCONSTANT_VALUES.set('isMacNative', isMacintosh && !isWeb);\nCONSTANT_VALUES.set('isEdge', isEdge);\nCONSTANT_VALUES.set('isFirefox', isFirefox);\nCONSTANT_VALUES.set('isChrome', isChrome);\nCONSTANT_VALUES.set('isSafari', isSafari);\n/** allow register constant context keys that are known only after startup; requires running `substituteConstants` on the context key - https://github.com/microsoft/vscode/issues/174218#issuecomment-1437972127 */\nexport function setConstant(key, value) {\n    if (CONSTANT_VALUES.get(key) !== undefined) {\n        throw illegalArgument('contextkey.setConstant(k, v) invoked with already set constant `k`');\n    }\n    CONSTANT_VALUES.set(key, value);\n}\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst defaultConfig = {\n    regexParsingWithErrorRecovery: true\n};\nconst errorEmptyString = localize('contextkey.parser.error.emptyString', \"Empty context key expression\");\nconst hintEmptyString = localize('contextkey.parser.error.emptyString.hint', \"Did you forget to write an expression? You can also put 'false' or 'true' to always evaluate to false or true, respectively.\");\nconst errorNoInAfterNot = localize('contextkey.parser.error.noInAfterNot', \"'in' after 'not'.\");\nconst errorClosingParenthesis = localize('contextkey.parser.error.closingParenthesis', \"closing parenthesis ')'\");\nconst errorUnexpectedToken = localize('contextkey.parser.error.unexpectedToken', \"Unexpected token\");\nconst hintUnexpectedToken = localize('contextkey.parser.error.unexpectedToken.hint', \"Did you forget to put && or || before the token?\");\nconst errorUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF', \"Unexpected end of expression\");\nconst hintUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF.hint', \"Did you forget to put a context key?\");\n/**\n * A parser for context key expressions.\n *\n * Example:\n * ```ts\n * const parser = new Parser();\n * const expr = parser.parse('foo == \"bar\" && baz == true');\n *\n * if (expr === undefined) {\n * \t// there were lexing or parsing errors\n * \t// process lexing errors with `parser.lexingErrors`\n *  // process parsing errors with `parser.parsingErrors`\n * } else {\n * \t// expr is a valid expression\n * }\n * ```\n */\nexport class Parser {\n    get lexingErrors() {\n        return this._scanner.errors;\n    }\n    get parsingErrors() {\n        return this._parsingErrors;\n    }\n    constructor(_config = defaultConfig) {\n        this._config = _config;\n        // lifetime note: `_scanner` lives as long as the parser does, i.e., is not reset between calls to `parse`\n        this._scanner = new Scanner();\n        // lifetime note: `_tokens`, `_current`, and `_parsingErrors` must be reset between calls to `parse`\n        this._tokens = [];\n        this._current = 0; // invariant: 0 <= this._current < this._tokens.length ; any incrementation of this value must first call `_isAtEnd`\n        this._parsingErrors = [];\n        this._flagsGYRe = /g|y/g;\n    }\n    /**\n     * Parse a context key expression.\n     *\n     * @param input the expression to parse\n     * @returns the parsed expression or `undefined` if there's an error - call `lexingErrors` and `parsingErrors` to see the errors\n     */\n    parse(input) {\n        if (input === '') {\n            this._parsingErrors.push({ message: errorEmptyString, offset: 0, lexeme: '', additionalInfo: hintEmptyString });\n            return undefined;\n        }\n        this._tokens = this._scanner.reset(input).scan();\n        // @ulugbekna: we do not stop parsing if there are lexing errors to be able to reconstruct regexes with unescaped slashes; TODO@ulugbekna: make this respect config option for recovery\n        this._current = 0;\n        this._parsingErrors = [];\n        try {\n            const expr = this._expr();\n            if (!this._isAtEnd()) {\n                const peek = this._peek();\n                const additionalInfo = peek.type === 17 /* TokenType.Str */ ? hintUnexpectedToken : undefined;\n                this._parsingErrors.push({ message: errorUnexpectedToken, offset: peek.offset, lexeme: Scanner.getLexeme(peek), additionalInfo });\n                throw Parser._parseError;\n            }\n            return expr;\n        }\n        catch (e) {\n            if (!(e === Parser._parseError)) {\n                throw e;\n            }\n            return undefined;\n        }\n    }\n    _expr() {\n        return this._or();\n    }\n    _or() {\n        const expr = [this._and()];\n        while (this._matchOne(16 /* TokenType.Or */)) {\n            const right = this._and();\n            expr.push(right);\n        }\n        return expr.length === 1 ? expr[0] : ContextKeyExpr.or(...expr);\n    }\n    _and() {\n        const expr = [this._term()];\n        while (this._matchOne(15 /* TokenType.And */)) {\n            const right = this._term();\n            expr.push(right);\n        }\n        return expr.length === 1 ? expr[0] : ContextKeyExpr.and(...expr);\n    }\n    _term() {\n        if (this._matchOne(2 /* TokenType.Neg */)) {\n            const peek = this._peek();\n            switch (peek.type) {\n                case 11 /* TokenType.True */:\n                    this._advance();\n                    return ContextKeyFalseExpr.INSTANCE;\n                case 12 /* TokenType.False */:\n                    this._advance();\n                    return ContextKeyTrueExpr.INSTANCE;\n                case 0 /* TokenType.LParen */: {\n                    this._advance();\n                    const expr = this._expr();\n                    this._consume(1 /* TokenType.RParen */, errorClosingParenthesis);\n                    return expr === null || expr === void 0 ? void 0 : expr.negate();\n                }\n                case 17 /* TokenType.Str */:\n                    this._advance();\n                    return ContextKeyNotExpr.create(peek.lexeme);\n                default:\n                    throw this._errExpectedButGot(`KEY | true | false | '(' expression ')'`, peek);\n            }\n        }\n        return this._primary();\n    }\n    _primary() {\n        const peek = this._peek();\n        switch (peek.type) {\n            case 11 /* TokenType.True */:\n                this._advance();\n                return ContextKeyExpr.true();\n            case 12 /* TokenType.False */:\n                this._advance();\n                return ContextKeyExpr.false();\n            case 0 /* TokenType.LParen */: {\n                this._advance();\n                const expr = this._expr();\n                this._consume(1 /* TokenType.RParen */, errorClosingParenthesis);\n                return expr;\n            }\n            case 17 /* TokenType.Str */: {\n                // KEY\n                const key = peek.lexeme;\n                this._advance();\n                // =~ regex\n                if (this._matchOne(9 /* TokenType.RegexOp */)) {\n                    // @ulugbekna: we need to reconstruct the regex from the tokens because some extensions use unescaped slashes in regexes\n                    const expr = this._peek();\n                    if (!this._config.regexParsingWithErrorRecovery) {\n                        this._advance();\n                        if (expr.type !== 10 /* TokenType.RegexStr */) {\n                            throw this._errExpectedButGot(`REGEX`, expr);\n                        }\n                        const regexLexeme = expr.lexeme;\n                        const closingSlashIndex = regexLexeme.lastIndexOf('/');\n                        const flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n                        let regexp;\n                        try {\n                            regexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n                        }\n                        catch (e) {\n                            throw this._errExpectedButGot(`REGEX`, expr);\n                        }\n                        return ContextKeyRegexExpr.create(key, regexp);\n                    }\n                    switch (expr.type) {\n                        case 10 /* TokenType.RegexStr */:\n                        case 19 /* TokenType.Error */: { // also handle an ErrorToken in case of smth such as /(/file)/\n                            const lexemeReconstruction = [expr.lexeme]; // /REGEX/ or /REGEX/FLAGS\n                            this._advance();\n                            let followingToken = this._peek();\n                            let parenBalance = 0;\n                            for (let i = 0; i < expr.lexeme.length; i++) {\n                                if (expr.lexeme.charCodeAt(i) === 40 /* CharCode.OpenParen */) {\n                                    parenBalance++;\n                                }\n                                else if (expr.lexeme.charCodeAt(i) === 41 /* CharCode.CloseParen */) {\n                                    parenBalance--;\n                                }\n                            }\n                            while (!this._isAtEnd() && followingToken.type !== 15 /* TokenType.And */ && followingToken.type !== 16 /* TokenType.Or */) {\n                                switch (followingToken.type) {\n                                    case 0 /* TokenType.LParen */:\n                                        parenBalance++;\n                                        break;\n                                    case 1 /* TokenType.RParen */:\n                                        parenBalance--;\n                                        break;\n                                    case 10 /* TokenType.RegexStr */:\n                                    case 18 /* TokenType.QuotedStr */:\n                                        for (let i = 0; i < followingToken.lexeme.length; i++) {\n                                            if (followingToken.lexeme.charCodeAt(i) === 40 /* CharCode.OpenParen */) {\n                                                parenBalance++;\n                                            }\n                                            else if (expr.lexeme.charCodeAt(i) === 41 /* CharCode.CloseParen */) {\n                                                parenBalance--;\n                                            }\n                                        }\n                                }\n                                if (parenBalance < 0) {\n                                    break;\n                                }\n                                lexemeReconstruction.push(Scanner.getLexeme(followingToken));\n                                this._advance();\n                                followingToken = this._peek();\n                            }\n                            const regexLexeme = lexemeReconstruction.join('');\n                            const closingSlashIndex = regexLexeme.lastIndexOf('/');\n                            const flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n                            let regexp;\n                            try {\n                                regexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n                            }\n                            catch (e) {\n                                throw this._errExpectedButGot(`REGEX`, expr);\n                            }\n                            return ContextKeyExpr.regex(key, regexp);\n                        }\n                        case 18 /* TokenType.QuotedStr */: {\n                            const serializedValue = expr.lexeme;\n                            this._advance();\n                            // replicate old regex parsing behavior\n                            let regex = null;\n                            if (!isFalsyOrWhitespace(serializedValue)) {\n                                const start = serializedValue.indexOf('/');\n                                const end = serializedValue.lastIndexOf('/');\n                                if (start !== end && start >= 0) {\n                                    const value = serializedValue.slice(start + 1, end);\n                                    const caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n                                    try {\n                                        regex = new RegExp(value, caseIgnoreFlag);\n                                    }\n                                    catch (_e) {\n                                        throw this._errExpectedButGot(`REGEX`, expr);\n                                    }\n                                }\n                            }\n                            if (regex === null) {\n                                throw this._errExpectedButGot('REGEX', expr);\n                            }\n                            return ContextKeyRegexExpr.create(key, regex);\n                        }\n                        default:\n                            throw this._errExpectedButGot('REGEX', this._peek());\n                    }\n                }\n                // [ 'not' 'in' value ]\n                if (this._matchOne(14 /* TokenType.Not */)) {\n                    this._consume(13 /* TokenType.In */, errorNoInAfterNot);\n                    const right = this._value();\n                    return ContextKeyExpr.notIn(key, right);\n                }\n                // [ ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in') value ]\n                const maybeOp = this._peek().type;\n                switch (maybeOp) {\n                    case 3 /* TokenType.Eq */: {\n                        this._advance();\n                        const right = this._value();\n                        if (this._previous().type === 18 /* TokenType.QuotedStr */) { // to preserve old parser behavior: \"foo == 'true'\" is preserved as \"foo == 'true'\", but \"foo == true\" is optimized as \"foo\"\n                            return ContextKeyExpr.equals(key, right);\n                        }\n                        switch (right) {\n                            case 'true':\n                                return ContextKeyExpr.has(key);\n                            case 'false':\n                                return ContextKeyExpr.not(key);\n                            default:\n                                return ContextKeyExpr.equals(key, right);\n                        }\n                    }\n                    case 4 /* TokenType.NotEq */: {\n                        this._advance();\n                        const right = this._value();\n                        if (this._previous().type === 18 /* TokenType.QuotedStr */) { // same as above with \"foo != 'true'\"\n                            return ContextKeyExpr.notEquals(key, right);\n                        }\n                        switch (right) {\n                            case 'true':\n                                return ContextKeyExpr.not(key);\n                            case 'false':\n                                return ContextKeyExpr.has(key);\n                            default:\n                                return ContextKeyExpr.notEquals(key, right);\n                        }\n                    }\n                    // TODO: ContextKeyExpr.smaller(key, right) accepts only `number` as `right` AND during eval of this node, we just eval to `false` if `right` is not a number\n                    // consequently, package.json linter should _warn_ the user if they're passing undesired things to ops\n                    case 5 /* TokenType.Lt */:\n                        this._advance();\n                        return ContextKeySmallerExpr.create(key, this._value());\n                    case 6 /* TokenType.LtEq */:\n                        this._advance();\n                        return ContextKeySmallerEqualsExpr.create(key, this._value());\n                    case 7 /* TokenType.Gt */:\n                        this._advance();\n                        return ContextKeyGreaterExpr.create(key, this._value());\n                    case 8 /* TokenType.GtEq */:\n                        this._advance();\n                        return ContextKeyGreaterEqualsExpr.create(key, this._value());\n                    case 13 /* TokenType.In */:\n                        this._advance();\n                        return ContextKeyExpr.in(key, this._value());\n                    default:\n                        return ContextKeyExpr.has(key);\n                }\n            }\n            case 20 /* TokenType.EOF */:\n                this._parsingErrors.push({ message: errorUnexpectedEOF, offset: peek.offset, lexeme: '', additionalInfo: hintUnexpectedEOF });\n                throw Parser._parseError;\n            default:\n                throw this._errExpectedButGot(`true | false | KEY \\n\\t| KEY '=~' REGEX \\n\\t| KEY ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in' | 'not' 'in') value`, this._peek());\n        }\n    }\n    _value() {\n        const token = this._peek();\n        switch (token.type) {\n            case 17 /* TokenType.Str */:\n            case 18 /* TokenType.QuotedStr */:\n                this._advance();\n                return token.lexeme;\n            case 11 /* TokenType.True */:\n                this._advance();\n                return 'true';\n            case 12 /* TokenType.False */:\n                this._advance();\n                return 'false';\n            case 13 /* TokenType.In */: // we support `in` as a value, e.g., \"when\": \"languageId == in\" - exists in existing extensions\n                this._advance();\n                return 'in';\n            default:\n                // this allows \"when\": \"foo == \" which's used by existing extensions\n                // we do not call `_advance` on purpose - we don't want to eat unintended tokens\n                return '';\n        }\n    }\n    _removeFlagsGY(flags) {\n        return flags.replaceAll(this._flagsGYRe, '');\n    }\n    // careful: this can throw if current token is the initial one (ie index = 0)\n    _previous() {\n        return this._tokens[this._current - 1];\n    }\n    _matchOne(token) {\n        if (this._check(token)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    }\n    _advance() {\n        if (!this._isAtEnd()) {\n            this._current++;\n        }\n        return this._previous();\n    }\n    _consume(type, message) {\n        if (this._check(type)) {\n            return this._advance();\n        }\n        throw this._errExpectedButGot(message, this._peek());\n    }\n    _errExpectedButGot(expected, got, additionalInfo) {\n        const message = localize('contextkey.parser.error.expectedButGot', \"Expected: {0}\\nReceived: '{1}'.\", expected, Scanner.getLexeme(got));\n        const offset = got.offset;\n        const lexeme = Scanner.getLexeme(got);\n        this._parsingErrors.push({ message, offset, lexeme, additionalInfo });\n        return Parser._parseError;\n    }\n    _check(type) {\n        return this._peek().type === type;\n    }\n    _peek() {\n        return this._tokens[this._current];\n    }\n    _isAtEnd() {\n        return this._peek().type === 20 /* TokenType.EOF */;\n    }\n}\n// Note: this doesn't produce an exact syntax tree but a normalized one\n// ContextKeyExpression's that we use as AST nodes do not expose constructors that do not normalize\nParser._parseError = new Error();\nexport class ContextKeyExpr {\n    static false() {\n        return ContextKeyFalseExpr.INSTANCE;\n    }\n    static true() {\n        return ContextKeyTrueExpr.INSTANCE;\n    }\n    static has(key) {\n        return ContextKeyDefinedExpr.create(key);\n    }\n    static equals(key, value) {\n        return ContextKeyEqualsExpr.create(key, value);\n    }\n    static notEquals(key, value) {\n        return ContextKeyNotEqualsExpr.create(key, value);\n    }\n    static regex(key, value) {\n        return ContextKeyRegexExpr.create(key, value);\n    }\n    static in(key, value) {\n        return ContextKeyInExpr.create(key, value);\n    }\n    static notIn(key, value) {\n        return ContextKeyNotInExpr.create(key, value);\n    }\n    static not(key) {\n        return ContextKeyNotExpr.create(key);\n    }\n    static and(...expr) {\n        return ContextKeyAndExpr.create(expr, null, true);\n    }\n    static or(...expr) {\n        return ContextKeyOrExpr.create(expr, null, true);\n    }\n    static greater(key, value) {\n        return ContextKeyGreaterExpr.create(key, value);\n    }\n    static greaterEquals(key, value) {\n        return ContextKeyGreaterEqualsExpr.create(key, value);\n    }\n    static smaller(key, value) {\n        return ContextKeySmallerExpr.create(key, value);\n    }\n    static smallerEquals(key, value) {\n        return ContextKeySmallerEqualsExpr.create(key, value);\n    }\n    static deserialize(serialized) {\n        if (serialized === undefined || serialized === null) { // an empty string needs to be handled by the parser to get a corresponding parsing error reported\n            return undefined;\n        }\n        const expr = this._parser.parse(serialized);\n        return expr;\n    }\n}\nContextKeyExpr._parser = new Parser({ regexParsingWithErrorRecovery: false });\nexport function validateWhenClauses(whenClauses) {\n    const parser = new Parser({ regexParsingWithErrorRecovery: false }); // we run with no recovery to guide users to use correct regexes\n    return whenClauses.map(whenClause => {\n        parser.parse(whenClause);\n        if (parser.lexingErrors.length > 0) {\n            return parser.lexingErrors.map((se) => ({\n                errorMessage: se.additionalInfo ?\n                    localize('contextkey.scanner.errorForLinterWithHint', \"Unexpected token. Hint: {0}\", se.additionalInfo) :\n                    localize('contextkey.scanner.errorForLinter', \"Unexpected token.\"),\n                offset: se.offset,\n                length: se.lexeme.length,\n            }));\n        }\n        else if (parser.parsingErrors.length > 0) {\n            return parser.parsingErrors.map((pe) => ({\n                errorMessage: pe.additionalInfo ? `${pe.message}. ${pe.additionalInfo}` : pe.message,\n                offset: pe.offset,\n                length: pe.lexeme.length,\n            }));\n        }\n        else {\n            return [];\n        }\n    });\n}\nexport function expressionsAreEqualWithConstantSubstitution(a, b) {\n    const aExpr = a ? a.substituteConstants() : undefined;\n    const bExpr = b ? b.substituteConstants() : undefined;\n    if (!aExpr && !bExpr) {\n        return true;\n    }\n    if (!aExpr || !bExpr) {\n        return false;\n    }\n    return aExpr.equals(bExpr);\n}\nfunction cmp(a, b) {\n    return a.cmp(b);\n}\nexport class ContextKeyFalseExpr {\n    constructor() {\n        this.type = 0 /* ContextKeyExprType.False */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return false;\n    }\n    serialize() {\n        return 'false';\n    }\n    keys() {\n        return [];\n    }\n    map(mapFnc) {\n        return this;\n    }\n    negate() {\n        return ContextKeyTrueExpr.INSTANCE;\n    }\n}\nContextKeyFalseExpr.INSTANCE = new ContextKeyFalseExpr();\nexport class ContextKeyTrueExpr {\n    constructor() {\n        this.type = 1 /* ContextKeyExprType.True */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return true;\n    }\n    serialize() {\n        return 'true';\n    }\n    keys() {\n        return [];\n    }\n    map(mapFnc) {\n        return this;\n    }\n    negate() {\n        return ContextKeyFalseExpr.INSTANCE;\n    }\n}\nContextKeyTrueExpr.INSTANCE = new ContextKeyTrueExpr();\nexport class ContextKeyDefinedExpr {\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return new ContextKeyDefinedExpr(key, negated);\n    }\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 2 /* ContextKeyExprType.Defined */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!!context.getValue(this.key));\n    }\n    serialize() {\n        return this.key;\n    }\n    keys() {\n        return [this.key];\n    }\n    map(mapFnc) {\n        return mapFnc.mapDefined(this.key);\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyEqualsExpr {\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            return (value ? ContextKeyDefinedExpr.create(key, negated) : ContextKeyNotExpr.create(key, negated));\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return new ContextKeyEqualsExpr(key, value, negated);\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 4 /* ContextKeyExprType.Equals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (this.value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional ==\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) == this.value);\n    }\n    serialize() {\n        return `${this.key} == '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    map(mapFnc) {\n        return mapFnc.mapEquals(this.key, this.value);\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyInExpr {\n    static create(key, valueKey) {\n        return new ContextKeyInExpr(key, valueKey);\n    }\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 10 /* ContextKeyExprType.In */;\n        this.negated = null;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.valueKey, other.key, other.valueKey);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.valueKey === other.valueKey);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const source = context.getValue(this.valueKey);\n        const item = context.getValue(this.key);\n        if (Array.isArray(source)) {\n            return source.includes(item);\n        }\n        if (typeof item === 'string' && typeof source === 'object' && source !== null) {\n            return hasOwnProperty.call(source, item);\n        }\n        return false;\n    }\n    serialize() {\n        return `${this.key} in '${this.valueKey}'`;\n    }\n    keys() {\n        return [this.key, this.valueKey];\n    }\n    map(mapFnc) {\n        return mapFnc.mapIn(this.key, this.valueKey);\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotInExpr.create(this.key, this.valueKey);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotInExpr {\n    static create(key, valueKey) {\n        return new ContextKeyNotInExpr(key, valueKey);\n    }\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 11 /* ContextKeyExprType.NotIn */;\n        this._negated = ContextKeyInExpr.create(key, valueKey);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._negated.cmp(other._negated);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._negated.equals(other._negated);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._negated.evaluate(context);\n    }\n    serialize() {\n        return `${this.key} not in '${this.valueKey}'`;\n    }\n    keys() {\n        return this._negated.keys();\n    }\n    map(mapFnc) {\n        return mapFnc.mapNotIn(this.key, this.valueKey);\n    }\n    negate() {\n        return this._negated;\n    }\n}\nexport class ContextKeyNotEqualsExpr {\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            if (value) {\n                return ContextKeyNotExpr.create(key, negated);\n            }\n            return ContextKeyDefinedExpr.create(key, negated);\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotEqualsExpr(key, value, negated);\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 5 /* ContextKeyExprType.NotEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (this.value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional !=\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) != this.value);\n    }\n    serialize() {\n        return `${this.key} != '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    map(mapFnc) {\n        return mapFnc.mapNotEquals(this.key, this.value);\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotExpr {\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotExpr(key, negated);\n    }\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 3 /* ContextKeyExprType.Not */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!context.getValue(this.key));\n    }\n    serialize() {\n        return `!${this.key}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    map(mapFnc) {\n        return mapFnc.mapNot(this.key);\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyDefinedExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nfunction withFloatOrStr(value, callback) {\n    if (typeof value === 'string') {\n        const n = parseFloat(value);\n        if (!isNaN(n)) {\n            value = n;\n        }\n    }\n    if (typeof value === 'string' || typeof value === 'number') {\n        return callback(value);\n    }\n    return ContextKeyFalseExpr.INSTANCE;\n}\nexport class ContextKeyGreaterExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 12 /* ContextKeyExprType.Greater */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) > this.value);\n    }\n    serialize() {\n        return `${this.key} > ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    map(mapFnc) {\n        return mapFnc.mapGreater(this.key, this.value);\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyGreaterEqualsExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterEqualsExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 13 /* ContextKeyExprType.GreaterEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) >= this.value);\n    }\n    serialize() {\n        return `${this.key} >= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    map(mapFnc) {\n        return mapFnc.mapGreaterEquals(this.key, this.value);\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 14 /* ContextKeyExprType.Smaller */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) < this.value);\n    }\n    serialize() {\n        return `${this.key} < ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    map(mapFnc) {\n        return mapFnc.mapSmaller(this.key, this.value);\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerEqualsExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerEqualsExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 15 /* ContextKeyExprType.SmallerEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) <= this.value);\n    }\n    serialize() {\n        return `${this.key} <= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    map(mapFnc) {\n        return mapFnc.mapSmallerEquals(this.key, this.value);\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyRegexExpr {\n    static create(key, regexp) {\n        return new ContextKeyRegexExpr(key, regexp);\n    }\n    constructor(key, regexp) {\n        this.key = key;\n        this.regexp = regexp;\n        this.type = 7 /* ContextKeyExprType.Regex */;\n        this.negated = null;\n        //\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.key < other.key) {\n            return -1;\n        }\n        if (this.key > other.key) {\n            return 1;\n        }\n        const thisSource = this.regexp ? this.regexp.source : '';\n        const otherSource = other.regexp ? other.regexp.source : '';\n        if (thisSource < otherSource) {\n            return -1;\n        }\n        if (thisSource > otherSource) {\n            return 1;\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            const thisSource = this.regexp ? this.regexp.source : '';\n            const otherSource = other.regexp ? other.regexp.source : '';\n            return (this.key === other.key && thisSource === otherSource);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const value = context.getValue(this.key);\n        return this.regexp ? this.regexp.test(value) : false;\n    }\n    serialize() {\n        const value = this.regexp\n            ? `/${this.regexp.source}/${this.regexp.flags}`\n            : '/invalid/';\n        return `${this.key} =~ ${value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    map(mapFnc) {\n        return mapFnc.mapRegex(this.key, this.regexp);\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotRegexExpr.create(this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotRegexExpr {\n    static create(actual) {\n        return new ContextKeyNotRegexExpr(actual);\n    }\n    constructor(_actual) {\n        this._actual = _actual;\n        this.type = 8 /* ContextKeyExprType.NotRegex */;\n        //\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._actual.cmp(other._actual);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._actual.equals(other._actual);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._actual.evaluate(context);\n    }\n    serialize() {\n        return `!(${this._actual.serialize()})`;\n    }\n    keys() {\n        return this._actual.keys();\n    }\n    map(mapFnc) {\n        return new ContextKeyNotRegexExpr(this._actual.map(mapFnc));\n    }\n    negate() {\n        return this._actual;\n    }\n}\n/**\n * @returns the same instance if nothing changed.\n */\nfunction eliminateConstantsInArray(arr) {\n    // Allocate array only if there is a difference\n    let newArr = null;\n    for (let i = 0, len = arr.length; i < len; i++) {\n        const newExpr = arr[i].substituteConstants();\n        if (arr[i] !== newExpr) {\n            // something has changed!\n            // allocate array on first difference\n            if (newArr === null) {\n                newArr = [];\n                for (let j = 0; j < i; j++) {\n                    newArr[j] = arr[j];\n                }\n            }\n        }\n        if (newArr !== null) {\n            newArr[i] = newExpr;\n        }\n    }\n    if (newArr === null) {\n        return arr;\n    }\n    return newArr;\n}\nexport class ContextKeyAndExpr {\n    static create(_expr, negated, extraRedundantCheck) {\n        return ContextKeyAndExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n    }\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 6 /* ContextKeyExprType.And */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyAndExpr.create(exprArr, this.negated, false);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (!this.expr[i].evaluate(context)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static _normalizeArr(arr, negated, extraRedundantCheck) {\n        const expr = [];\n        let hasTrue = false;\n        for (const e of arr) {\n            if (!e) {\n                continue;\n            }\n            if (e.type === 1 /* ContextKeyExprType.True */) {\n                // anything && true ==> anything\n                hasTrue = true;\n                continue;\n            }\n            if (e.type === 0 /* ContextKeyExprType.False */) {\n                // anything && false ==> false\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            if (e.type === 6 /* ContextKeyExprType.And */) {\n                expr.push(...e.expr);\n                continue;\n            }\n            expr.push(e);\n        }\n        if (expr.length === 0 && hasTrue) {\n            return ContextKeyTrueExpr.INSTANCE;\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        expr.sort(cmp);\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // We must distribute any OR expression because we don't support parens\n        // OR extensions will be at the end (due to sorting rules)\n        while (expr.length > 1) {\n            const lastElement = expr[expr.length - 1];\n            if (lastElement.type !== 9 /* ContextKeyExprType.Or */) {\n                break;\n            }\n            // pop the last element\n            expr.pop();\n            // pop the second to last element\n            const secondToLastElement = expr.pop();\n            const isFinished = (expr.length === 0);\n            // distribute `lastElement` over `secondToLastElement`\n            const resultElement = ContextKeyOrExpr.create(lastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement], null, extraRedundantCheck)), null, isFinished);\n            if (resultElement) {\n                expr.push(resultElement);\n                expr.sort(cmp);\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // resolve false AND expressions\n        if (extraRedundantCheck) {\n            for (let i = 0; i < expr.length; i++) {\n                for (let j = i + 1; j < expr.length; j++) {\n                    if (expr[i].negate().equals(expr[j])) {\n                        // A && !A case\n                        return ContextKeyFalseExpr.INSTANCE;\n                    }\n                }\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n        }\n        return new ContextKeyAndExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' && ');\n    }\n    keys() {\n        const result = [];\n        for (const expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    map(mapFnc) {\n        return new ContextKeyAndExpr(this.expr.map(expr => expr.map(mapFnc)), null);\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (const expr of this.expr) {\n                result.push(expr.negate());\n            }\n            this.negated = ContextKeyOrExpr.create(result, this, true);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyOrExpr {\n    static create(_expr, negated, extraRedundantCheck) {\n        return ContextKeyOrExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n    }\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 9 /* ContextKeyExprType.Or */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyOrExpr.create(exprArr, this.negated, false);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (this.expr[i].evaluate(context)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static _normalizeArr(arr, negated, extraRedundantCheck) {\n        let expr = [];\n        let hasFalse = false;\n        if (arr) {\n            for (let i = 0, len = arr.length; i < len; i++) {\n                const e = arr[i];\n                if (!e) {\n                    continue;\n                }\n                if (e.type === 0 /* ContextKeyExprType.False */) {\n                    // anything || false ==> anything\n                    hasFalse = true;\n                    continue;\n                }\n                if (e.type === 1 /* ContextKeyExprType.True */) {\n                    // anything || true ==> true\n                    return ContextKeyTrueExpr.INSTANCE;\n                }\n                if (e.type === 9 /* ContextKeyExprType.Or */) {\n                    expr = expr.concat(e.expr);\n                    continue;\n                }\n                expr.push(e);\n            }\n            if (expr.length === 0 && hasFalse) {\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            expr.sort(cmp);\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // resolve true OR expressions\n        if (extraRedundantCheck) {\n            for (let i = 0; i < expr.length; i++) {\n                for (let j = i + 1; j < expr.length; j++) {\n                    if (expr[i].negate().equals(expr[j])) {\n                        // A || !A case\n                        return ContextKeyTrueExpr.INSTANCE;\n                    }\n                }\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n        }\n        return new ContextKeyOrExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' || ');\n    }\n    keys() {\n        const result = [];\n        for (const expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    map(mapFnc) {\n        return new ContextKeyOrExpr(this.expr.map(expr => expr.map(mapFnc)), null);\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (const expr of this.expr) {\n                result.push(expr.negate());\n            }\n            // We don't support parens, so here we distribute the AND over the OR terminals\n            // We always take the first 2 AND pairs and distribute them\n            while (result.length > 1) {\n                const LEFT = result.shift();\n                const RIGHT = result.shift();\n                const all = [];\n                for (const left of getTerminals(LEFT)) {\n                    for (const right of getTerminals(RIGHT)) {\n                        all.push(ContextKeyAndExpr.create([left, right], null, false));\n                    }\n                }\n                result.unshift(ContextKeyOrExpr.create(all, null, false));\n            }\n            this.negated = ContextKeyOrExpr.create(result, this, true);\n        }\n        return this.negated;\n    }\n}\nexport class RawContextKey extends ContextKeyDefinedExpr {\n    static all() {\n        return RawContextKey._info.values();\n    }\n    constructor(key, defaultValue, metaOrHide) {\n        super(key, null);\n        this._defaultValue = defaultValue;\n        // collect all context keys into a central place\n        if (typeof metaOrHide === 'object') {\n            RawContextKey._info.push(Object.assign(Object.assign({}, metaOrHide), { key }));\n        }\n        else if (metaOrHide !== true) {\n            RawContextKey._info.push({ key, description: metaOrHide, type: defaultValue !== null && defaultValue !== undefined ? typeof defaultValue : undefined });\n        }\n    }\n    bindTo(target) {\n        return target.createKey(this.key, this._defaultValue);\n    }\n    getValue(target) {\n        return target.getContextKeyValue(this.key);\n    }\n    toNegated() {\n        return this.negate();\n    }\n    isEqualTo(value) {\n        return ContextKeyEqualsExpr.create(this.key, value);\n    }\n    notEqualsTo(value) {\n        return ContextKeyNotEqualsExpr.create(this.key, value);\n    }\n}\nRawContextKey._info = [];\nexport const IContextKeyService = createDecorator('contextKeyService');\nfunction cmp1(key1, key2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    return 0;\n}\nfunction cmp2(key1, value1, key2, value2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    if (value1 < value2) {\n        return -1;\n    }\n    if (value1 > value2) {\n        return 1;\n    }\n    return 0;\n}\n/**\n * Returns true if it is provable `p` implies `q`.\n */\nexport function implies(p, q) {\n    if (p.type === 0 /* ContextKeyExprType.False */ || q.type === 1 /* ContextKeyExprType.True */) {\n        // false implies anything\n        // anything implies true\n        return true;\n    }\n    if (p.type === 9 /* ContextKeyExprType.Or */) {\n        if (q.type === 9 /* ContextKeyExprType.Or */) {\n            // `a || b || c` can only imply something like `a || b || c || d`\n            return allElementsIncluded(p.expr, q.expr);\n        }\n        return false;\n    }\n    if (q.type === 9 /* ContextKeyExprType.Or */) {\n        for (const element of q.expr) {\n            if (implies(p, element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (p.type === 6 /* ContextKeyExprType.And */) {\n        if (q.type === 6 /* ContextKeyExprType.And */) {\n            // `a && b && c` implies `a && c`\n            return allElementsIncluded(q.expr, p.expr);\n        }\n        for (const element of p.expr) {\n            if (implies(element, q)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    return p.equals(q);\n}\n/**\n * Returns true if all elements in `p` are also present in `q`.\n * The two arrays are assumed to be sorted\n */\nfunction allElementsIncluded(p, q) {\n    let pIndex = 0;\n    let qIndex = 0;\n    while (pIndex < p.length && qIndex < q.length) {\n        const cmp = p[pIndex].cmp(q[qIndex]);\n        if (cmp < 0) {\n            // an element from `p` is missing from `q`\n            return false;\n        }\n        else if (cmp === 0) {\n            pIndex++;\n            qIndex++;\n        }\n        else {\n            qIndex++;\n        }\n    }\n    return (pIndex === p.length);\n}\nfunction getTerminals(node) {\n    if (node.type === 9 /* ContextKeyExprType.Or */) {\n        return node.expr;\n    }\n    return [node];\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from './arrays.js';\nimport * as types from './types.js';\nimport * as nls from '../../nls.js';\nfunction exceptionToErrorMessage(exception, verbose) {\n    if (verbose && (exception.stack || exception.stacktrace)) {\n        return nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n    }\n    return detectSystemErrorMessage(exception);\n}\nfunction stackToString(stack) {\n    if (Array.isArray(stack)) {\n        return stack.join('\\n');\n    }\n    return stack;\n}\nfunction detectSystemErrorMessage(exception) {\n    // Custom node.js error from us\n    if (exception.code === 'ERR_UNC_HOST_NOT_ALLOWED') {\n        return `${exception.message}. Please update the 'security.allowedUNCHosts' setting if you want to allow this host.`;\n    }\n    // See https://nodejs.org/api/errors.html#errors_class_system_error\n    if (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n        return nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n    }\n    return exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error = null, verbose = false) {\n    if (!error) {\n        return nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n    }\n    if (Array.isArray(error)) {\n        const errors = arrays.coalesce(error);\n        const msg = toErrorMessage(errors[0], verbose);\n        if (errors.length > 1) {\n            return nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n        }\n        return msg;\n    }\n    if (types.isString(error)) {\n        return error;\n    }\n    if (error.detail) {\n        const detail = error.detail;\n        if (detail.error) {\n            return exceptionToErrorMessage(detail.error, verbose);\n        }\n        if (detail.exception) {\n            return exceptionToErrorMessage(detail.exception, verbose);\n        }\n    }\n    if (error.stack) {\n        return exceptionToErrorMessage(error, verbose);\n    }\n    if (error.message) {\n        return error.message;\n    }\n    return nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\nexport function isErrorWithActions(obj) {\n    const candidate = obj;\n    return candidate instanceof Error && Array.isArray(candidate.actions);\n}\nexport function createErrorWithActions(messageOrError, actions) {\n    let error;\n    if (typeof messageOrError === 'string') {\n        error = new Error(messageOrError);\n    }\n    else {\n        error = messageOrError;\n    }\n    error.actions = actions;\n    return error;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj) {\n    return doHash(obj, 0);\n}\nexport function doHash(obj, hashVal) {\n    switch (typeof obj) {\n        case 'object':\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            }\n            else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\nexport function numberHash(val, initialHashVal) {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0; // hashVal * 31 + ch, keep as int32\n}\nfunction booleanHash(b, initialHashVal) {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\nexport function stringHash(s, hashVal) {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return Object.keys(obj).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\nexport class Hasher {\n    constructor() {\n        this._value = 0;\n    }\n    get value() {\n        return this._value;\n    }\n    hash(obj) {\n        this._value = doHash(obj, this._value);\n        return this._value;\n    }\n}\nfunction leftRotate(value, bits, totalBits = 32) {\n    // delta + bits = totalBits\n    const delta = totalBits - bits;\n    // All ones, expect `delta` zeros aligned to the right\n    const mask = ~((1 << delta) - 1);\n    // Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n    return ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\nfunction fill(dest, index = 0, count = dest.byteLength, value = 0) {\n    for (let i = 0; i < count; i++) {\n        dest[index + i] = value;\n    }\n}\nfunction leftPad(value, length, char = '0') {\n    while (value.length < length) {\n        value = char + value;\n    }\n    return value;\n}\nexport function toHexString(bufferOrValue, bitsize = 32) {\n    if (bufferOrValue instanceof ArrayBuffer) {\n        return Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n    }\n    return leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n    constructor() {\n        this._h0 = 0x67452301;\n        this._h1 = 0xEFCDAB89;\n        this._h2 = 0x98BADCFE;\n        this._h3 = 0x10325476;\n        this._h4 = 0xC3D2E1F0;\n        this._buff = new Uint8Array(64 /* SHA1Constant.BLOCK_SIZE */ + 3 /* to fit any utf-8 */);\n        this._buffDV = new DataView(this._buff.buffer);\n        this._buffLen = 0;\n        this._totalLen = 0;\n        this._leftoverHighSurrogate = 0;\n        this._finished = false;\n    }\n    update(str) {\n        const strLen = str.length;\n        if (strLen === 0) {\n            return;\n        }\n        const buff = this._buff;\n        let buffLen = this._buffLen;\n        let leftoverHighSurrogate = this._leftoverHighSurrogate;\n        let charCode;\n        let offset;\n        if (leftoverHighSurrogate !== 0) {\n            charCode = leftoverHighSurrogate;\n            offset = -1;\n            leftoverHighSurrogate = 0;\n        }\n        else {\n            charCode = str.charCodeAt(0);\n            offset = 0;\n        }\n        while (true) {\n            let codePoint = charCode;\n            if (strings.isHighSurrogate(charCode)) {\n                if (offset + 1 < strLen) {\n                    const nextCharCode = str.charCodeAt(offset + 1);\n                    if (strings.isLowSurrogate(nextCharCode)) {\n                        offset++;\n                        codePoint = strings.computeCodePoint(charCode, nextCharCode);\n                    }\n                    else {\n                        // illegal => unicode replacement character\n                        codePoint = 65533 /* SHA1Constant.UNICODE_REPLACEMENT */;\n                    }\n                }\n                else {\n                    // last character is a surrogate pair\n                    leftoverHighSurrogate = charCode;\n                    break;\n                }\n            }\n            else if (strings.isLowSurrogate(charCode)) {\n                // illegal => unicode replacement character\n                codePoint = 65533 /* SHA1Constant.UNICODE_REPLACEMENT */;\n            }\n            buffLen = this._push(buff, buffLen, codePoint);\n            offset++;\n            if (offset < strLen) {\n                charCode = str.charCodeAt(offset);\n            }\n            else {\n                break;\n            }\n        }\n        this._buffLen = buffLen;\n        this._leftoverHighSurrogate = leftoverHighSurrogate;\n    }\n    _push(buff, buffLen, codePoint) {\n        if (codePoint < 0x0080) {\n            buff[buffLen++] = codePoint;\n        }\n        else if (codePoint < 0x0800) {\n            buff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else if (codePoint < 0x10000) {\n            buff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else {\n            buff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        if (buffLen >= 64 /* SHA1Constant.BLOCK_SIZE */) {\n            this._step();\n            buffLen -= 64 /* SHA1Constant.BLOCK_SIZE */;\n            this._totalLen += 64 /* SHA1Constant.BLOCK_SIZE */;\n            // take last 3 in case of UTF8 overflow\n            buff[0] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 0];\n            buff[1] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 1];\n            buff[2] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 2];\n        }\n        return buffLen;\n    }\n    digest() {\n        if (!this._finished) {\n            this._finished = true;\n            if (this._leftoverHighSurrogate) {\n                // illegal => unicode replacement character\n                this._leftoverHighSurrogate = 0;\n                this._buffLen = this._push(this._buff, this._buffLen, 65533 /* SHA1Constant.UNICODE_REPLACEMENT */);\n            }\n            this._totalLen += this._buffLen;\n            this._wrapUp();\n        }\n        return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n    }\n    _wrapUp() {\n        this._buff[this._buffLen++] = 0x80;\n        fill(this._buff, this._buffLen);\n        if (this._buffLen > 56) {\n            this._step();\n            fill(this._buff);\n        }\n        // this will fit because the mantissa can cover up to 52 bits\n        const ml = 8 * this._totalLen;\n        this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n        this._buffDV.setUint32(60, ml % 4294967296, false);\n        this._step();\n    }\n    _step() {\n        const bigBlock32 = StringSHA1._bigBlock32;\n        const data = this._buffDV;\n        for (let j = 0; j < 64 /* 16*4 */; j += 4) {\n            bigBlock32.setUint32(j, data.getUint32(j, false), false);\n        }\n        for (let j = 64; j < 320 /* 80*4 */; j += 4) {\n            bigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n        }\n        let a = this._h0;\n        let b = this._h1;\n        let c = this._h2;\n        let d = this._h3;\n        let e = this._h4;\n        let f, k;\n        let temp;\n        for (let j = 0; j < 80; j++) {\n            if (j < 20) {\n                f = (b & c) | ((~b) & d);\n                k = 0x5A827999;\n            }\n            else if (j < 40) {\n                f = b ^ c ^ d;\n                k = 0x6ED9EBA1;\n            }\n            else if (j < 60) {\n                f = (b & c) | (b & d) | (c & d);\n                k = 0x8F1BBCDC;\n            }\n            else {\n                f = b ^ c ^ d;\n                k = 0xCA62C1D6;\n            }\n            temp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n            e = d;\n            d = c;\n            c = leftRotate(b, 30);\n            b = a;\n            a = temp;\n        }\n        this._h0 = (this._h0 + a) & 0xffffffff;\n        this._h1 = (this._h1 + b) & 0xffffffff;\n        this._h2 = (this._h2 + c) & 0xffffffff;\n        this._h3 = (this._h3 + d) & 0xffffffff;\n        this._h4 = (this._h4 + e) & 0xffffffff;\n    }\n}\nStringSHA1._bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toErrorMessage } from '../../../base/common/errorMessage.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { hash } from '../../../base/common/hash.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { isWindows } from '../../../base/common/platform.js';\nimport { joinPath } from '../../../base/common/resources.js';\nimport { isNumber, isString } from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ILogService = createDecorator('logService');\nexport const ILoggerService = createDecorator('loggerService');\nfunction now() {\n    return new Date().toISOString();\n}\nexport function isLogLevel(thing) {\n    return isNumber(thing);\n}\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Off\"] = 0] = \"Off\";\n    LogLevel[LogLevel[\"Trace\"] = 1] = \"Trace\";\n    LogLevel[LogLevel[\"Debug\"] = 2] = \"Debug\";\n    LogLevel[LogLevel[\"Info\"] = 3] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 4] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 5] = \"Error\";\n})(LogLevel || (LogLevel = {}));\nexport const DEFAULT_LOG_LEVEL = LogLevel.Info;\nexport function log(logger, level, message) {\n    switch (level) {\n        case LogLevel.Trace:\n            logger.trace(message);\n            break;\n        case LogLevel.Debug:\n            logger.debug(message);\n            break;\n        case LogLevel.Info:\n            logger.info(message);\n            break;\n        case LogLevel.Warning:\n            logger.warn(message);\n            break;\n        case LogLevel.Error:\n            logger.error(message);\n            break;\n        case LogLevel.Off: /* do nothing */ break;\n        default: throw new Error(`Invalid log level ${level}`);\n    }\n}\nfunction format(args, verbose = false) {\n    let result = '';\n    for (let i = 0; i < args.length; i++) {\n        let a = args[i];\n        if (a instanceof Error) {\n            a = toErrorMessage(a, verbose);\n        }\n        if (typeof a === 'object') {\n            try {\n                a = JSON.stringify(a);\n            }\n            catch (e) { }\n        }\n        result += (i > 0 ? ' ' : '') + a;\n    }\n    return result;\n}\nexport class AbstractLogger extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.level = DEFAULT_LOG_LEVEL;\n        this._onDidChangeLogLevel = this._register(new Emitter());\n        this.onDidChangeLogLevel = this._onDidChangeLogLevel.event;\n    }\n    setLevel(level) {\n        if (this.level !== level) {\n            this.level = level;\n            this._onDidChangeLogLevel.fire(this.level);\n        }\n    }\n    getLevel() {\n        return this.level;\n    }\n    checkLogLevel(level) {\n        return this.level !== LogLevel.Off && this.level <= level;\n    }\n}\nexport class AbstractMessageLogger extends AbstractLogger {\n    constructor(logAlways) {\n        super();\n        this.logAlways = logAlways;\n    }\n    checkLogLevel(level) {\n        return this.logAlways || super.checkLogLevel(level);\n    }\n    trace(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Trace)) {\n            this.log(LogLevel.Trace, format([message, ...args], true));\n        }\n    }\n    debug(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Debug)) {\n            this.log(LogLevel.Debug, format([message, ...args]));\n        }\n    }\n    info(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Info)) {\n            this.log(LogLevel.Info, format([message, ...args]));\n        }\n    }\n    warn(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Warning)) {\n            this.log(LogLevel.Warning, format([message, ...args]));\n        }\n    }\n    error(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Error)) {\n            if (message instanceof Error) {\n                const array = Array.prototype.slice.call(arguments);\n                array[0] = message.stack;\n                this.log(LogLevel.Error, format(array));\n            }\n            else {\n                this.log(LogLevel.Error, format([message, ...args]));\n            }\n        }\n    }\n    flush() { }\n}\nexport class ConsoleMainLogger extends AbstractLogger {\n    constructor(logLevel = DEFAULT_LOG_LEVEL) {\n        super();\n        this.setLevel(logLevel);\n        this.useColors = !isWindows;\n    }\n    trace(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Trace)) {\n            if (this.useColors) {\n                console.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n            }\n            else {\n                console.log(`[main ${now()}]`, message, ...args);\n            }\n        }\n    }\n    debug(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Debug)) {\n            if (this.useColors) {\n                console.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n            }\n            else {\n                console.log(`[main ${now()}]`, message, ...args);\n            }\n        }\n    }\n    info(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Info)) {\n            if (this.useColors) {\n                console.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n            }\n            else {\n                console.log(`[main ${now()}]`, message, ...args);\n            }\n        }\n    }\n    warn(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Warning)) {\n            if (this.useColors) {\n                console.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n            }\n            else {\n                console.warn(`[main ${now()}]`, message, ...args);\n            }\n        }\n    }\n    error(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Error)) {\n            if (this.useColors) {\n                console.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n            }\n            else {\n                console.error(`[main ${now()}]`, message, ...args);\n            }\n        }\n    }\n    dispose() {\n        // noop\n    }\n    flush() {\n        // noop\n    }\n}\nexport class ConsoleLogger extends AbstractLogger {\n    constructor(logLevel = DEFAULT_LOG_LEVEL, useColors = true) {\n        super();\n        this.useColors = useColors;\n        this.setLevel(logLevel);\n    }\n    trace(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Trace)) {\n            if (this.useColors) {\n                console.log('%cTRACE', 'color: #888', message, ...args);\n            }\n            else {\n                console.log(message, ...args);\n            }\n        }\n    }\n    debug(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Debug)) {\n            if (this.useColors) {\n                console.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n            }\n            else {\n                console.log(message, ...args);\n            }\n        }\n    }\n    info(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Info)) {\n            if (this.useColors) {\n                console.log('%c INFO', 'color: #33f', message, ...args);\n            }\n            else {\n                console.log(message, ...args);\n            }\n        }\n    }\n    warn(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Warning)) {\n            if (this.useColors) {\n                console.log('%c WARN', 'color: #993', message, ...args);\n            }\n            else {\n                console.log(message, ...args);\n            }\n        }\n    }\n    error(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Error)) {\n            if (this.useColors) {\n                console.log('%c  ERR', 'color: #f33', message, ...args);\n            }\n            else {\n                console.error(message, ...args);\n            }\n        }\n    }\n    dispose() {\n        // noop\n    }\n    flush() {\n        // noop\n    }\n}\nexport class AdapterLogger extends AbstractLogger {\n    constructor(adapter, logLevel = DEFAULT_LOG_LEVEL) {\n        super();\n        this.adapter = adapter;\n        this.setLevel(logLevel);\n    }\n    trace(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Trace)) {\n            this.adapter.log(LogLevel.Trace, [this.extractMessage(message), ...args]);\n        }\n    }\n    debug(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Debug)) {\n            this.adapter.log(LogLevel.Debug, [this.extractMessage(message), ...args]);\n        }\n    }\n    info(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Info)) {\n            this.adapter.log(LogLevel.Info, [this.extractMessage(message), ...args]);\n        }\n    }\n    warn(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Warning)) {\n            this.adapter.log(LogLevel.Warning, [this.extractMessage(message), ...args]);\n        }\n    }\n    error(message, ...args) {\n        if (this.checkLogLevel(LogLevel.Error)) {\n            this.adapter.log(LogLevel.Error, [this.extractMessage(message), ...args]);\n        }\n    }\n    extractMessage(msg) {\n        if (typeof msg === 'string') {\n            return msg;\n        }\n        return toErrorMessage(msg, this.checkLogLevel(LogLevel.Trace));\n    }\n    dispose() {\n        // noop\n    }\n    flush() {\n        // noop\n    }\n}\nexport class MultiplexLogger extends AbstractLogger {\n    constructor(loggers) {\n        super();\n        this.loggers = loggers;\n        if (loggers.length) {\n            this.setLevel(loggers[0].getLevel());\n        }\n    }\n    setLevel(level) {\n        for (const logger of this.loggers) {\n            logger.setLevel(level);\n        }\n        super.setLevel(level);\n    }\n    trace(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.trace(message, ...args);\n        }\n    }\n    debug(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.debug(message, ...args);\n        }\n    }\n    info(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.info(message, ...args);\n        }\n    }\n    warn(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.warn(message, ...args);\n        }\n    }\n    error(message, ...args) {\n        for (const logger of this.loggers) {\n            logger.error(message, ...args);\n        }\n    }\n    flush() {\n        for (const logger of this.loggers) {\n            logger.flush();\n        }\n    }\n    dispose() {\n        for (const logger of this.loggers) {\n            logger.dispose();\n        }\n    }\n}\nexport class AbstractLoggerService extends Disposable {\n    constructor(logLevel, logsHome, loggerResources) {\n        super();\n        this.logLevel = logLevel;\n        this.logsHome = logsHome;\n        this._loggers = new ResourceMap();\n        this._onDidChangeLoggers = this._register(new Emitter);\n        this.onDidChangeLoggers = this._onDidChangeLoggers.event;\n        this._onDidChangeLogLevel = this._register(new Emitter);\n        this.onDidChangeLogLevel = this._onDidChangeLogLevel.event;\n        this._onDidChangeVisibility = this._register(new Emitter);\n        this.onDidChangeVisibility = this._onDidChangeVisibility.event;\n        if (loggerResources) {\n            for (const loggerResource of loggerResources) {\n                this._loggers.set(loggerResource.resource, { logger: undefined, info: loggerResource });\n            }\n        }\n    }\n    getLoggerEntry(resourceOrId) {\n        if (isString(resourceOrId)) {\n            return [...this._loggers.values()].find(logger => logger.info.id === resourceOrId);\n        }\n        return this._loggers.get(resourceOrId);\n    }\n    getLogger(resourceOrId) {\n        var _a;\n        return (_a = this.getLoggerEntry(resourceOrId)) === null || _a === void 0 ? void 0 : _a.logger;\n    }\n    createLogger(idOrResource, options) {\n        var _a, _b, _c;\n        const resource = this.toResource(idOrResource);\n        const id = isString(idOrResource) ? idOrResource : ((_a = options === null || options === void 0 ? void 0 : options.id) !== null && _a !== void 0 ? _a : hash(resource.toString()).toString(16));\n        let logger = (_b = this._loggers.get(resource)) === null || _b === void 0 ? void 0 : _b.logger;\n        const logLevel = (options === null || options === void 0 ? void 0 : options.logLevel) === 'always' ? LogLevel.Trace : options === null || options === void 0 ? void 0 : options.logLevel;\n        if (!logger) {\n            logger = this.doCreateLogger(resource, (_c = logLevel !== null && logLevel !== void 0 ? logLevel : this.getLogLevel(resource)) !== null && _c !== void 0 ? _c : this.logLevel, Object.assign(Object.assign({}, options), { id }));\n        }\n        const loggerEntry = {\n            logger,\n            info: { resource, id, logLevel, name: options === null || options === void 0 ? void 0 : options.name, hidden: options === null || options === void 0 ? void 0 : options.hidden, extensionId: options === null || options === void 0 ? void 0 : options.extensionId, when: options === null || options === void 0 ? void 0 : options.when }\n        };\n        this.registerLogger(loggerEntry.info);\n        // TODO: @sandy081 Remove this once registerLogger can take ILogger\n        this._loggers.set(resource, loggerEntry);\n        return logger;\n    }\n    toResource(idOrResource) {\n        return isString(idOrResource) ? joinPath(this.logsHome, `${idOrResource}.log`) : idOrResource;\n    }\n    setLogLevel(arg1, arg2) {\n        var _a, _b, _c;\n        if (URI.isUri(arg1)) {\n            const resource = arg1;\n            const logLevel = arg2;\n            const logger = this._loggers.get(resource);\n            if (logger && logLevel !== logger.info.logLevel) {\n                logger.info.logLevel = logLevel === this.logLevel ? undefined : logLevel;\n                (_a = logger.logger) === null || _a === void 0 ? void 0 : _a.setLevel(logLevel);\n                this._loggers.set(logger.info.resource, logger);\n                this._onDidChangeLogLevel.fire([resource, logLevel]);\n            }\n        }\n        else {\n            this.logLevel = arg1;\n            for (const [resource, logger] of this._loggers.entries()) {\n                if (((_b = this._loggers.get(resource)) === null || _b === void 0 ? void 0 : _b.info.logLevel) === undefined) {\n                    (_c = logger.logger) === null || _c === void 0 ? void 0 : _c.setLevel(this.logLevel);\n                }\n            }\n            this._onDidChangeLogLevel.fire(this.logLevel);\n        }\n    }\n    setVisibility(resourceOrId, visibility) {\n        const logger = this.getLoggerEntry(resourceOrId);\n        if (logger && visibility !== !logger.info.hidden) {\n            logger.info.hidden = !visibility;\n            this._loggers.set(logger.info.resource, logger);\n            this._onDidChangeVisibility.fire([logger.info.resource, visibility]);\n        }\n    }\n    getLogLevel(resource) {\n        var _a;\n        let logLevel;\n        if (resource) {\n            logLevel = (_a = this._loggers.get(resource)) === null || _a === void 0 ? void 0 : _a.info.logLevel;\n        }\n        return logLevel !== null && logLevel !== void 0 ? logLevel : this.logLevel;\n    }\n    registerLogger(resource) {\n        const existing = this._loggers.get(resource.resource);\n        if (existing) {\n            if (existing.info.hidden !== resource.hidden) {\n                this.setVisibility(resource.resource, !resource.hidden);\n            }\n        }\n        else {\n            this._loggers.set(resource.resource, { info: resource, logger: undefined });\n            this._onDidChangeLoggers.fire({ added: [resource], removed: [] });\n        }\n    }\n    deregisterLogger(resource) {\n        const existing = this._loggers.get(resource);\n        if (existing) {\n            if (existing.logger) {\n                existing.logger.dispose();\n            }\n            this._loggers.delete(resource);\n            this._onDidChangeLoggers.fire({ added: [], removed: [existing.info] });\n        }\n    }\n    *getRegisteredLoggers() {\n        for (const entry of this._loggers.values()) {\n            yield entry.info;\n        }\n    }\n    getRegisteredLogger(resource) {\n        var _a;\n        return (_a = this._loggers.get(resource)) === null || _a === void 0 ? void 0 : _a.info;\n    }\n    dispose() {\n        this._loggers.forEach(logger => { var _a; return (_a = logger.logger) === null || _a === void 0 ? void 0 : _a.dispose(); });\n        this._loggers.clear();\n        super.dispose();\n    }\n}\nexport class NullLogger {\n    constructor() {\n        this.onDidChangeLogLevel = new Emitter().event;\n    }\n    setLevel(level) { }\n    getLevel() { return LogLevel.Info; }\n    trace(message, ...args) { }\n    debug(message, ...args) { }\n    info(message, ...args) { }\n    warn(message, ...args) { }\n    error(message, ...args) { }\n    critical(message, ...args) { }\n    dispose() { }\n    flush() { }\n}\nexport class NullLogService extends NullLogger {\n}\nexport function getLogLevel(environmentService) {\n    if (environmentService.verbose) {\n        return LogLevel.Trace;\n    }\n    if (typeof environmentService.logLevel === 'string') {\n        const logLevel = parseLogLevel(environmentService.logLevel.toLowerCase());\n        if (logLevel !== undefined) {\n            return logLevel;\n        }\n    }\n    return DEFAULT_LOG_LEVEL;\n}\nexport function LogLevelToString(logLevel) {\n    switch (logLevel) {\n        case LogLevel.Trace: return 'trace';\n        case LogLevel.Debug: return 'debug';\n        case LogLevel.Info: return 'info';\n        case LogLevel.Warning: return 'warn';\n        case LogLevel.Error: return 'error';\n        case LogLevel.Off: return 'off';\n    }\n}\nexport function parseLogLevel(logLevel) {\n    switch (logLevel) {\n        case 'trace':\n            return LogLevel.Trace;\n        case 'debug':\n            return LogLevel.Debug;\n        case 'info':\n            return LogLevel.Info;\n        case 'warn':\n            return LogLevel.Warning;\n        case 'error':\n            return LogLevel.Error;\n        case 'critical':\n            return LogLevel.Error;\n        case 'off':\n            return LogLevel.Off;\n    }\n    return undefined;\n}\n// Contexts\nexport const CONTEXT_LOG_LEVEL = new RawContextKey('logLevel', LogLevelToString(LogLevel.Info));\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ITelemetryService = createDecorator('telemetryService');\nexport const ICustomEndpointTelemetryService = createDecorator('customEndpointTelemetryService');\n// Keys\nexport const currentSessionDateStorageKey = 'telemetry.currentSessionDate';\nexport const firstSessionDateStorageKey = 'telemetry.firstSessionDate';\nexport const lastSessionDateStorageKey = 'telemetry.lastSessionDate';\nexport const machineIdKey = 'telemetry.machineId';\n// Configuration Keys\nexport const TELEMETRY_SECTION_ID = 'telemetry';\nexport const TELEMETRY_SETTING_ID = 'telemetry.telemetryLevel';\nexport const TELEMETRY_CRASH_REPORTER_SETTING_ID = 'telemetry.enableCrashReporter';\nexport const TELEMETRY_OLD_SETTING_ID = 'telemetry.enableTelemetry';\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { onUnexpectedError } from './errors.js';\nimport { DisposableStore, toDisposable } from './lifecycle.js';\nexport function isReadable(obj) {\n    const candidate = obj;\n    if (!candidate) {\n        return false;\n    }\n    return typeof candidate.read === 'function';\n}\nexport function isReadableStream(obj) {\n    const candidate = obj;\n    if (!candidate) {\n        return false;\n    }\n    return [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\nexport function isReadableBufferedStream(obj) {\n    const candidate = obj;\n    if (!candidate) {\n        return false;\n    }\n    return isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\nexport function newWriteableStream(reducer, options) {\n    return new WriteableStreamImpl(reducer, options);\n}\nclass WriteableStreamImpl {\n    constructor(reducer, options) {\n        this.reducer = reducer;\n        this.options = options;\n        this.state = {\n            flowing: false,\n            ended: false,\n            destroyed: false\n        };\n        this.buffer = {\n            data: [],\n            error: []\n        };\n        this.listeners = {\n            data: [],\n            error: [],\n            end: []\n        };\n        this.pendingWritePromises = [];\n    }\n    pause() {\n        if (this.state.destroyed) {\n            return;\n        }\n        this.state.flowing = false;\n    }\n    resume() {\n        if (this.state.destroyed) {\n            return;\n        }\n        if (!this.state.flowing) {\n            this.state.flowing = true;\n            // emit buffered events\n            this.flowData();\n            this.flowErrors();\n            this.flowEnd();\n        }\n    }\n    write(data) {\n        var _a;\n        if (this.state.destroyed) {\n            return;\n        }\n        // flowing: directly send the data to listeners\n        if (this.state.flowing) {\n            this.emitData(data);\n        }\n        // not yet flowing: buffer data until flowing\n        else {\n            this.buffer.data.push(data);\n            // highWaterMark: if configured, signal back when buffer reached limits\n            if (typeof ((_a = this.options) === null || _a === void 0 ? void 0 : _a.highWaterMark) === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n                return new Promise(resolve => this.pendingWritePromises.push(resolve));\n            }\n        }\n    }\n    error(error) {\n        if (this.state.destroyed) {\n            return;\n        }\n        // flowing: directly send the error to listeners\n        if (this.state.flowing) {\n            this.emitError(error);\n        }\n        // not yet flowing: buffer errors until flowing\n        else {\n            this.buffer.error.push(error);\n        }\n    }\n    end(result) {\n        if (this.state.destroyed) {\n            return;\n        }\n        // end with data if provided\n        if (typeof result !== 'undefined') {\n            this.write(result);\n        }\n        // flowing: send end event to listeners\n        if (this.state.flowing) {\n            this.emitEnd();\n            this.destroy();\n        }\n        // not yet flowing: remember state\n        else {\n            this.state.ended = true;\n        }\n    }\n    emitData(data) {\n        this.listeners.data.slice(0).forEach(listener => listener(data)); // slice to avoid listener mutation from delivering event\n    }\n    emitError(error) {\n        if (this.listeners.error.length === 0) {\n            onUnexpectedError(error); // nobody listened to this error so we log it as unexpected\n        }\n        else {\n            this.listeners.error.slice(0).forEach(listener => listener(error)); // slice to avoid listener mutation from delivering event\n        }\n    }\n    emitEnd() {\n        this.listeners.end.slice(0).forEach(listener => listener()); // slice to avoid listener mutation from delivering event\n    }\n    on(event, callback) {\n        if (this.state.destroyed) {\n            return;\n        }\n        switch (event) {\n            case 'data':\n                this.listeners.data.push(callback);\n                // switch into flowing mode as soon as the first 'data'\n                // listener is added and we are not yet in flowing mode\n                this.resume();\n                break;\n            case 'end':\n                this.listeners.end.push(callback);\n                // emit 'end' event directly if we are flowing\n                // and the end has already been reached\n                //\n                // finish() when it went through\n                if (this.state.flowing && this.flowEnd()) {\n                    this.destroy();\n                }\n                break;\n            case 'error':\n                this.listeners.error.push(callback);\n                // emit buffered 'error' events unless done already\n                // now that we know that we have at least one listener\n                if (this.state.flowing) {\n                    this.flowErrors();\n                }\n                break;\n        }\n    }\n    removeListener(event, callback) {\n        if (this.state.destroyed) {\n            return;\n        }\n        let listeners = undefined;\n        switch (event) {\n            case 'data':\n                listeners = this.listeners.data;\n                break;\n            case 'end':\n                listeners = this.listeners.end;\n                break;\n            case 'error':\n                listeners = this.listeners.error;\n                break;\n        }\n        if (listeners) {\n            const index = listeners.indexOf(callback);\n            if (index >= 0) {\n                listeners.splice(index, 1);\n            }\n        }\n    }\n    flowData() {\n        if (this.buffer.data.length > 0) {\n            const fullDataBuffer = this.reducer(this.buffer.data);\n            this.emitData(fullDataBuffer);\n            this.buffer.data.length = 0;\n            // When the buffer is empty, resolve all pending writers\n            const pendingWritePromises = [...this.pendingWritePromises];\n            this.pendingWritePromises.length = 0;\n            pendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n        }\n    }\n    flowErrors() {\n        if (this.listeners.error.length > 0) {\n            for (const error of this.buffer.error) {\n                this.emitError(error);\n            }\n            this.buffer.error.length = 0;\n        }\n    }\n    flowEnd() {\n        if (this.state.ended) {\n            this.emitEnd();\n            return this.listeners.end.length > 0;\n        }\n        return false;\n    }\n    destroy() {\n        if (!this.state.destroyed) {\n            this.state.destroyed = true;\n            this.state.ended = true;\n            this.buffer.data.length = 0;\n            this.buffer.error.length = 0;\n            this.listeners.data.length = 0;\n            this.listeners.error.length = 0;\n            this.listeners.end.length = 0;\n            this.pendingWritePromises.length = 0;\n        }\n    }\n}\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable(readable, reducer) {\n    const chunks = [];\n    let chunk;\n    while ((chunk = readable.read()) !== null) {\n        chunks.push(chunk);\n    }\n    return reducer(chunks);\n}\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable(readable, reducer, maxChunks) {\n    const chunks = [];\n    let chunk = undefined;\n    while ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n        chunks.push(chunk);\n    }\n    // If the last chunk is null, it means we reached the end of\n    // the readable and return all the data at once\n    if (chunk === null && chunks.length > 0) {\n        return reducer(chunks);\n    }\n    // Otherwise, we still have a chunk, it means we reached the maxChunks\n    // value and as such we return a new Readable that first returns\n    // the existing read chunks and then continues with reading from\n    // the underlying readable.\n    return {\n        read: () => {\n            // First consume chunks from our array\n            if (chunks.length > 0) {\n                return chunks.shift();\n            }\n            // Then ensure to return our last read chunk\n            if (typeof chunk !== 'undefined') {\n                const lastReadChunk = chunk;\n                // explicitly use undefined here to indicate that we consumed\n                // the chunk, which could have either been null or valued.\n                chunk = undefined;\n                return lastReadChunk;\n            }\n            // Finally delegate back to the Readable\n            return readable.read();\n        }\n    };\n}\nexport function consumeStream(stream, reducer) {\n    return new Promise((resolve, reject) => {\n        const chunks = [];\n        listenStream(stream, {\n            onData: chunk => {\n                if (reducer) {\n                    chunks.push(chunk);\n                }\n            },\n            onError: error => {\n                if (reducer) {\n                    reject(error);\n                }\n                else {\n                    resolve(undefined);\n                }\n            },\n            onEnd: () => {\n                if (reducer) {\n                    resolve(reducer(chunks));\n                }\n                else {\n                    resolve(undefined);\n                }\n            }\n        });\n    });\n}\n/**\n * Helper to listen to all events of a T stream in proper order.\n */\nexport function listenStream(stream, listener, token) {\n    stream.on('error', error => {\n        if (!(token === null || token === void 0 ? void 0 : token.isCancellationRequested)) {\n            listener.onError(error);\n        }\n    });\n    stream.on('end', () => {\n        if (!(token === null || token === void 0 ? void 0 : token.isCancellationRequested)) {\n            listener.onEnd();\n        }\n    });\n    // Adding the `data` listener will turn the stream\n    // into flowing mode. As such it is important to\n    // add this listener last (DO NOT CHANGE!)\n    stream.on('data', data => {\n        if (!(token === null || token === void 0 ? void 0 : token.isCancellationRequested)) {\n            listener.onData(data);\n        }\n    });\n}\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream(stream, maxChunks) {\n    return new Promise((resolve, reject) => {\n        const streamListeners = new DisposableStore();\n        const buffer = [];\n        // Data Listener\n        const dataListener = (chunk) => {\n            // Add to buffer\n            buffer.push(chunk);\n            // We reached maxChunks and thus need to return\n            if (buffer.length > maxChunks) {\n                // Dispose any listeners and ensure to pause the\n                // stream so that it can be consumed again by caller\n                streamListeners.dispose();\n                stream.pause();\n                return resolve({ stream, buffer, ended: false });\n            }\n        };\n        // Error Listener\n        const errorListener = (error) => {\n            return reject(error);\n        };\n        // End Listener\n        const endListener = () => {\n            return resolve({ stream, buffer, ended: true });\n        };\n        streamListeners.add(toDisposable(() => stream.removeListener('error', errorListener)));\n        stream.on('error', errorListener);\n        streamListeners.add(toDisposable(() => stream.removeListener('end', endListener)));\n        stream.on('end', endListener);\n        // Important: leave the `data` listener last because\n        // this can turn the stream into flowing mode and we\n        // want `error` events to be received as well.\n        streamListeners.add(toDisposable(() => stream.removeListener('data', dataListener)));\n        stream.on('data', dataListener);\n    });\n}\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream(t, reducer) {\n    const stream = newWriteableStream(reducer);\n    stream.end(t);\n    return stream;\n}\n/**\n * Helper to create an empty stream\n */\nexport function emptyStream() {\n    const stream = newWriteableStream(() => { throw new Error('not supported'); });\n    stream.end();\n    return stream;\n}\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable(t) {\n    let consumed = false;\n    return {\n        read: () => {\n            if (consumed) {\n                return null;\n            }\n            consumed = true;\n            return t;\n        }\n    };\n}\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform(stream, transformer, reducer) {\n    const target = newWriteableStream(reducer);\n    listenStream(stream, {\n        onData: data => target.write(transformer.data(data)),\n        onError: error => target.error(transformer.error ? transformer.error(error) : error),\n        onEnd: () => target.end()\n    });\n    return target;\n}\n/**\n * Helper to take an existing readable that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedReadable(prefix, readable, reducer) {\n    let prefixHandled = false;\n    return {\n        read: () => {\n            const chunk = readable.read();\n            // Handle prefix only once\n            if (!prefixHandled) {\n                prefixHandled = true;\n                // If we have also a read-result, make\n                // sure to reduce it to a single result\n                if (chunk !== null) {\n                    return reducer([prefix, chunk]);\n                }\n                // Otherwise, just return prefix directly\n                return prefix;\n            }\n            return chunk;\n        }\n    };\n}\n/**\n * Helper to take an existing stream that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedStream(prefix, stream, reducer) {\n    let prefixHandled = false;\n    const target = newWriteableStream(reducer);\n    listenStream(stream, {\n        onData: data => {\n            // Handle prefix only once\n            if (!prefixHandled) {\n                prefixHandled = true;\n                return target.write(reducer([prefix, data]));\n            }\n            return target.write(data);\n        },\n        onError: error => target.error(error),\n        onEnd: () => {\n            // Handle prefix only once\n            if (!prefixHandled) {\n                prefixHandled = true;\n                target.write(prefix);\n            }\n            target.end();\n        }\n    });\n    return target;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Lazy } from './lazy.js';\nimport * as streams from './stream.js';\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst indexOfTable = new Lazy(() => new Uint8Array(256));\nlet textEncoder;\nlet textDecoder;\nexport class VSBuffer {\n    /**\n     * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n     * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n     */\n    static alloc(byteLength) {\n        if (hasBuffer) {\n            return new VSBuffer(Buffer.allocUnsafe(byteLength));\n        }\n        else {\n            return new VSBuffer(new Uint8Array(byteLength));\n        }\n    }\n    /**\n     * When running in a nodejs context, if `actual` is not a nodejs Buffer, the backing store for\n     * the returned `VSBuffer` instance might use a nodejs Buffer allocated from node's Buffer pool,\n     * which is not transferrable.\n     */\n    static wrap(actual) {\n        if (hasBuffer && !(Buffer.isBuffer(actual))) {\n            // https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n            // Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n            actual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n        }\n        return new VSBuffer(actual);\n    }\n    /**\n     * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n     * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n     */\n    static fromString(source, options) {\n        const dontUseNodeBuffer = (options === null || options === void 0 ? void 0 : options.dontUseNodeBuffer) || false;\n        if (!dontUseNodeBuffer && hasBuffer) {\n            return new VSBuffer(Buffer.from(source));\n        }\n        else {\n            if (!textEncoder) {\n                textEncoder = new TextEncoder();\n            }\n            return new VSBuffer(textEncoder.encode(source));\n        }\n    }\n    /**\n     * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n     * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n     */\n    static fromByteArray(source) {\n        const result = VSBuffer.alloc(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            result.buffer[i] = source[i];\n        }\n        return result;\n    }\n    /**\n     * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n     * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n     */\n    static concat(buffers, totalLength) {\n        if (typeof totalLength === 'undefined') {\n            totalLength = 0;\n            for (let i = 0, len = buffers.length; i < len; i++) {\n                totalLength += buffers[i].byteLength;\n            }\n        }\n        const ret = VSBuffer.alloc(totalLength);\n        let offset = 0;\n        for (let i = 0, len = buffers.length; i < len; i++) {\n            const element = buffers[i];\n            ret.set(element, offset);\n            offset += element.byteLength;\n        }\n        return ret;\n    }\n    constructor(buffer) {\n        this.buffer = buffer;\n        this.byteLength = this.buffer.byteLength;\n    }\n    /**\n     * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n     * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n     */\n    clone() {\n        const result = VSBuffer.alloc(this.byteLength);\n        result.set(this);\n        return result;\n    }\n    toString() {\n        if (hasBuffer) {\n            return this.buffer.toString();\n        }\n        else {\n            if (!textDecoder) {\n                textDecoder = new TextDecoder();\n            }\n            return textDecoder.decode(this.buffer);\n        }\n    }\n    slice(start, end) {\n        // IMPORTANT: use subarray instead of slice because TypedArray#slice\n        // creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n        // ensures the same, performance, behaviour.\n        return new VSBuffer(this.buffer.subarray(start, end));\n    }\n    set(array, offset) {\n        if (array instanceof VSBuffer) {\n            this.buffer.set(array.buffer, offset);\n        }\n        else if (array instanceof Uint8Array) {\n            this.buffer.set(array, offset);\n        }\n        else if (array instanceof ArrayBuffer) {\n            this.buffer.set(new Uint8Array(array), offset);\n        }\n        else if (ArrayBuffer.isView(array)) {\n            this.buffer.set(new Uint8Array(array.buffer, array.byteOffset, array.byteLength), offset);\n        }\n        else {\n            throw new Error(`Unknown argument 'array'`);\n        }\n    }\n    readUInt32BE(offset) {\n        return readUInt32BE(this.buffer, offset);\n    }\n    writeUInt32BE(value, offset) {\n        writeUInt32BE(this.buffer, value, offset);\n    }\n    readUInt32LE(offset) {\n        return readUInt32LE(this.buffer, offset);\n    }\n    writeUInt32LE(value, offset) {\n        writeUInt32LE(this.buffer, value, offset);\n    }\n    readUInt8(offset) {\n        return readUInt8(this.buffer, offset);\n    }\n    writeUInt8(value, offset) {\n        writeUInt8(this.buffer, value, offset);\n    }\n    indexOf(subarray, offset = 0) {\n        return binaryIndexOf(this.buffer, subarray instanceof VSBuffer ? subarray.buffer : subarray, offset);\n    }\n}\n/**\n * Like String.indexOf, but works on Uint8Arrays.\n * Uses the boyer-moore-horspool algorithm to be reasonably speedy.\n */\nexport function binaryIndexOf(haystack, needle, offset = 0) {\n    const needleLen = needle.byteLength;\n    const haystackLen = haystack.byteLength;\n    if (needleLen === 0) {\n        return 0;\n    }\n    if (needleLen === 1) {\n        return haystack.indexOf(needle[0]);\n    }\n    if (needleLen > haystackLen - offset) {\n        return -1;\n    }\n    // find index of the subarray using boyer-moore-horspool algorithm\n    const table = indexOfTable.value;\n    table.fill(needle.length);\n    for (let i = 0; i < needle.length; i++) {\n        table[needle[i]] = needle.length - i - 1;\n    }\n    let i = offset + needle.length - 1;\n    let j = i;\n    let result = -1;\n    while (i < haystackLen) {\n        if (haystack[i] === needle[j]) {\n            if (j === 0) {\n                result = i;\n                break;\n            }\n            i--;\n            j--;\n        }\n        else {\n            i += Math.max(needle.length - j, table[haystack[i]]);\n            j = needle.length - 1;\n        }\n    }\n    return result;\n}\nexport function readUInt16LE(source, offset) {\n    return (((source[offset + 0] << 0) >>> 0) |\n        ((source[offset + 1] << 8) >>> 0));\n}\nexport function writeUInt16LE(destination, value, offset) {\n    destination[offset + 0] = (value & 0b11111111);\n    value = value >>> 8;\n    destination[offset + 1] = (value & 0b11111111);\n}\nexport function readUInt32BE(source, offset) {\n    return (source[offset] * Math.pow(2, 24)\n        + source[offset + 1] * Math.pow(2, 16)\n        + source[offset + 2] * Math.pow(2, 8)\n        + source[offset + 3]);\n}\nexport function writeUInt32BE(destination, value, offset) {\n    destination[offset + 3] = value;\n    value = value >>> 8;\n    destination[offset + 2] = value;\n    value = value >>> 8;\n    destination[offset + 1] = value;\n    value = value >>> 8;\n    destination[offset] = value;\n}\nexport function readUInt32LE(source, offset) {\n    return (((source[offset + 0] << 0) >>> 0) |\n        ((source[offset + 1] << 8) >>> 0) |\n        ((source[offset + 2] << 16) >>> 0) |\n        ((source[offset + 3] << 24) >>> 0));\n}\nexport function writeUInt32LE(destination, value, offset) {\n    destination[offset + 0] = (value & 0b11111111);\n    value = value >>> 8;\n    destination[offset + 1] = (value & 0b11111111);\n    value = value >>> 8;\n    destination[offset + 2] = (value & 0b11111111);\n    value = value >>> 8;\n    destination[offset + 3] = (value & 0b11111111);\n}\nexport function readUInt8(source, offset) {\n    return source[offset];\n}\nexport function writeUInt8(destination, value, offset) {\n    destination[offset] = value;\n}\nexport function readableToBuffer(readable) {\n    return streams.consumeReadable(readable, chunks => VSBuffer.concat(chunks));\n}\nexport function bufferToReadable(buffer) {\n    return streams.toReadable(buffer);\n}\nexport function streamToBuffer(stream) {\n    return streams.consumeStream(stream, chunks => VSBuffer.concat(chunks));\n}\nexport function bufferedStreamToBuffer(bufferedStream) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (bufferedStream.ended) {\n            return VSBuffer.concat(bufferedStream.buffer);\n        }\n        return VSBuffer.concat([\n            // Include already read chunks...\n            ...bufferedStream.buffer,\n            // ...and all additional chunks\n            yield streamToBuffer(bufferedStream.stream)\n        ]);\n    });\n}\nexport function bufferToStream(buffer) {\n    return streams.toStream(buffer, chunks => VSBuffer.concat(chunks));\n}\nexport function streamToBufferReadableStream(stream) {\n    return streams.transform(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\nexport function newWriteableBufferStream(options) {\n    return streams.newWriteableStream(chunks => VSBuffer.concat(chunks), options);\n}\nexport function prefixedBufferReadable(prefix, readable) {\n    return streams.prefixedReadable(prefix, readable, chunks => VSBuffer.concat(chunks));\n}\nexport function prefixedBufferStream(prefix, stream) {\n    return streams.prefixedStream(prefix, stream, chunks => VSBuffer.concat(chunks));\n}\n/** Decodes base64 to a uint8 array. URL-encoded and unpadded base64 is allowed. */\nexport function decodeBase64(encoded) {\n    let building = 0;\n    let remainder = 0;\n    let bufi = 0;\n    // The simpler way to do this is `Uint8Array.from(atob(str), c => c.charCodeAt(0))`,\n    // but that's about 10-20x slower than this function in current Chromium versions.\n    const buffer = new Uint8Array(Math.floor(encoded.length / 4 * 3));\n    const append = (value) => {\n        switch (remainder) {\n            case 3:\n                buffer[bufi++] = building | value;\n                remainder = 0;\n                break;\n            case 2:\n                buffer[bufi++] = building | (value >>> 2);\n                building = value << 6;\n                remainder = 3;\n                break;\n            case 1:\n                buffer[bufi++] = building | (value >>> 4);\n                building = value << 4;\n                remainder = 2;\n                break;\n            default:\n                building = value << 2;\n                remainder = 1;\n        }\n    };\n    for (let i = 0; i < encoded.length; i++) {\n        const code = encoded.charCodeAt(i);\n        // See https://datatracker.ietf.org/doc/html/rfc4648#section-4\n        // This branchy code is about 3x faster than an indexOf on a base64 char string.\n        if (code >= 65 && code <= 90) {\n            append(code - 65); // A-Z starts ranges from char code 65 to 90\n        }\n        else if (code >= 97 && code <= 122) {\n            append(code - 97 + 26); // a-z starts ranges from char code 97 to 122, starting at byte 26\n        }\n        else if (code >= 48 && code <= 57) {\n            append(code - 48 + 52); // 0-9 starts ranges from char code 48 to 58, starting at byte 52\n        }\n        else if (code === 43 || code === 45) {\n            append(62); // \"+\" or \"-\" for URLS\n        }\n        else if (code === 47 || code === 95) {\n            append(63); // \"/\" or \"_\" for URLS\n        }\n        else if (code === 61) {\n            break; // \"=\"\n        }\n        else {\n            throw new SyntaxError(`Unexpected base64 character ${encoded[i]}`);\n        }\n    }\n    const unpadded = bufi;\n    while (remainder > 0) {\n        append(0);\n    }\n    // slice is needed to account for overestimation due to padding\n    return VSBuffer.wrap(buffer).slice(0, unpadded);\n}\nconst base64Alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64UrlSafeAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\n/** Encodes a buffer to a base64 string. */\nexport function encodeBase64({ buffer }, padded = true, urlSafe = false) {\n    const dictionary = urlSafe ? base64UrlSafeAlphabet : base64Alphabet;\n    let output = '';\n    const remainder = buffer.byteLength % 3;\n    let i = 0;\n    for (; i < buffer.byteLength - remainder; i += 3) {\n        const a = buffer[i + 0];\n        const b = buffer[i + 1];\n        const c = buffer[i + 2];\n        output += dictionary[a >>> 2];\n        output += dictionary[(a << 4 | b >>> 4) & 0b111111];\n        output += dictionary[(b << 2 | c >>> 6) & 0b111111];\n        output += dictionary[c & 0b111111];\n    }\n    if (remainder === 1) {\n        const a = buffer[i + 0];\n        output += dictionary[a >>> 2];\n        output += dictionary[(a << 4) & 0b111111];\n        if (padded) {\n            output += '==';\n        }\n    }\n    else if (remainder === 2) {\n        const a = buffer[i + 0];\n        const b = buffer[i + 1];\n        output += dictionary[a >>> 2];\n        output += dictionary[(a << 4 | b >>> 4) & 0b111111];\n        output += dictionary[(b << 2) & 0b111111];\n        if (padded) {\n            output += '=';\n        }\n    }\n    return output;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isTypedArray, isObject, isUndefinedOrNull } from './types.js';\nexport function deepClone(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        return obj;\n    }\n    const result = Array.isArray(obj) ? [] : {};\n    Object.entries(obj).forEach(([key, value]) => {\n        result[key] = value && typeof value === 'object' ? deepClone(value) : value;\n    });\n    return result;\n}\nexport function deepFreeze(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    const stack = [obj];\n    while (stack.length > 0) {\n        const obj = stack.shift();\n        Object.freeze(obj);\n        for (const key in obj) {\n            if (_hasOwnProperty.call(obj, key)) {\n                const prop = obj[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function cloneAndChange(obj, changer) {\n    return _cloneAndChange(obj, changer, new Set());\n}\nfunction _cloneAndChange(obj, changer, seen) {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n    if (Array.isArray(obj)) {\n        const r1 = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n    if (isObject(obj)) {\n        if (seen.has(obj)) {\n            throw new Error('Cannot clone recursive data-structure');\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (const i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n    return obj;\n}\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination, source, overwrite = true) {\n    if (!isObject(destination)) {\n        return source;\n    }\n    if (isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    }\n                    else {\n                        destination[key] = source[key];\n                    }\n                }\n            }\n            else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\nexport function equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    let i;\n    let key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        const oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        const otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * Calls `JSON.Stringify` with a replacer to break apart any circular references.\n * This prevents `JSON`.stringify` from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj) {\n    const seen = new Set();\n    return JSON.stringify(obj, (key, value) => {\n        if (isObject(value) || Array.isArray(value)) {\n            if (seen.has(value)) {\n                return '[Circular]';\n            }\n            else {\n                seen.add(value);\n            }\n        }\n        return value;\n    });\n}\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base, target) {\n    const result = Object.create(null);\n    if (!base || !target) {\n        return result;\n    }\n    const targetKeys = Object.keys(target);\n    targetKeys.forEach(k => {\n        const baseValue = base[k];\n        const targetValue = target[k];\n        if (!equals(baseValue, targetValue)) {\n            result[k] = targetValue;\n        }\n    });\n    return result;\n}\nexport function getCaseInsensitive(target, key) {\n    const lowercaseKey = key.toLowerCase();\n    const equivalentKey = Object.keys(target).find(k => k.toLowerCase() === lowercaseKey);\n    return equivalentKey ? target[equivalentKey] : target[key];\n}\nexport function filter(obj, predicate) {\n    const result = Object.create(null);\n    for (const [key, value] of Object.entries(obj)) {\n        if (predicate(key, value)) {\n            result[key] = value;\n        }\n    }\n    return result;\n}\nexport function getAllPropertyNames(obj) {\n    let res = [];\n    while (Object.prototype !== obj) {\n        res = res.concat(Object.getOwnPropertyNames(obj));\n        obj = Object.getPrototypeOf(obj);\n    }\n    return res;\n}\nexport function getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { equals } from '../../base/common/objects.js';\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * Vertical Lane in the glyph margin of the editor.\n */\nexport var GlyphMarginLane;\n(function (GlyphMarginLane) {\n    GlyphMarginLane[GlyphMarginLane[\"Left\"] = 1] = \"Left\";\n    GlyphMarginLane[GlyphMarginLane[\"Right\"] = 2] = \"Right\";\n})(GlyphMarginLane || (GlyphMarginLane = {}));\n/**\n * Position in the minimap to render the decoration.\n */\nexport var MinimapPosition;\n(function (MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {}));\nexport var InjectedTextCursorStops;\n(function (InjectedTextCursorStops) {\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Both\"] = 0] = \"Both\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Right\"] = 1] = \"Right\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Left\"] = 2] = \"Left\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"None\"] = 3] = \"None\";\n})(InjectedTextCursorStops || (InjectedTextCursorStops = {}));\nexport class TextModelResolvedOptions {\n    get originalIndentSize() {\n        return this._indentSizeIsTabSize ? 'tabSize' : this.indentSize;\n    }\n    /**\n     * @internal\n     */\n    constructor(src) {\n        this._textModelResolvedOptionsBrand = undefined;\n        this.tabSize = Math.max(1, src.tabSize | 0);\n        if (src.indentSize === 'tabSize') {\n            this.indentSize = this.tabSize;\n            this._indentSizeIsTabSize = true;\n        }\n        else {\n            this.indentSize = Math.max(1, src.indentSize | 0);\n            this._indentSizeIsTabSize = false;\n        }\n        this.insertSpaces = Boolean(src.insertSpaces);\n        this.defaultEOL = src.defaultEOL | 0;\n        this.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);\n        this.bracketPairColorizationOptions = src.bracketPairColorizationOptions;\n    }\n    /**\n     * @internal\n     */\n    equals(other) {\n        return (this.tabSize === other.tabSize\n            && this._indentSizeIsTabSize === other._indentSizeIsTabSize\n            && this.indentSize === other.indentSize\n            && this.insertSpaces === other.insertSpaces\n            && this.defaultEOL === other.defaultEOL\n            && this.trimAutoWhitespace === other.trimAutoWhitespace\n            && equals(this.bracketPairColorizationOptions, other.bracketPairColorizationOptions));\n    }\n    /**\n     * @internal\n     */\n    createChangeEvent(newOpts) {\n        return {\n            tabSize: this.tabSize !== newOpts.tabSize,\n            indentSize: this.indentSize !== newOpts.indentSize,\n            insertSpaces: this.insertSpaces !== newOpts.insertSpaces,\n            trimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace,\n        };\n    }\n}\nexport class FindMatch {\n    /**\n     * @internal\n     */\n    constructor(range, matches) {\n        this._findMatchBrand = undefined;\n        this.range = range;\n        this.matches = matches;\n    }\n}\n/**\n * @internal\n */\nexport function isITextSnapshot(obj) {\n    return (obj && typeof obj.read === 'function');\n}\n/**\n * @internal\n */\nexport class ValidAnnotatedEditOperation {\n    constructor(identifier, range, text, forceMoveMarkers, isAutoWhitespaceEdit, _isTracked) {\n        this.identifier = identifier;\n        this.range = range;\n        this.text = text;\n        this.forceMoveMarkers = forceMoveMarkers;\n        this.isAutoWhitespaceEdit = isAutoWhitespaceEdit;\n        this._isTracked = _isTracked;\n    }\n}\n/**\n * @internal\n */\nexport class SearchData {\n    constructor(regex, wordSeparators, simpleSearch) {\n        this.regex = regex;\n        this.wordSeparators = wordSeparators;\n        this.simpleSearch = simpleSearch;\n    }\n}\n/**\n * @internal\n */\nexport class ApplyEditsResult {\n    constructor(reverseEdits, changes, trimAutoWhitespaceLineNumbers) {\n        this.reverseEdits = reverseEdits;\n        this.changes = changes;\n        this.trimAutoWhitespaceLineNumbers = trimAutoWhitespaceLineNumbers;\n    }\n}\n/**\n * @internal\n */\nexport function shouldSynchronizeModel(model) {\n    return (!model.isTooLargeForSyncing() && !model.isForSimpleWidget);\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const EDITOR_MODEL_DEFAULTS = {\n    tabSize: 4,\n    indentSize: 4,\n    insertSpaces: true,\n    detectIndentation: true,\n    trimAutoWhitespace: true,\n    largeFileOptimizations: true,\n    bracketPairColorizationOptions: {\n        enabled: true,\n        independentColorPoolPerBracketType: false,\n    },\n};\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords = '') {\n    let source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (const sep of USUAL_WORD_SEPARATORS) {\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    let result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            let flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nconst _defaultConfig = new LinkedList();\n_defaultConfig.unshift({\n    maxLen: 1000,\n    windowSize: 15,\n    timeBudget: 150\n});\nexport function setDefaultGetWordAtTextConfig(value) {\n    const rm = _defaultConfig.unshift(value);\n    return toDisposable(rm);\n}\nexport function getWordAtText(column, wordDefinition, text, textOffset, config) {\n    if (!config) {\n        config = Iterable.first(_defaultConfig);\n    }\n    if (text.length > config.maxLen) {\n        // don't throw strings that long at the regexp\n        // but use a sub-string in which a word must occur\n        let start = column - config.maxLen / 2;\n        if (start < 0) {\n            start = 0;\n        }\n        else {\n            textOffset += start;\n        }\n        text = text.substring(start, column + config.maxLen / 2);\n        return getWordAtText(column, wordDefinition, text, textOffset, config);\n    }\n    const t1 = Date.now();\n    const pos = column - 1 - textOffset;\n    let prevRegexIndex = -1;\n    let match = null;\n    for (let i = 1;; i++) {\n        // check time budget\n        if (Date.now() - t1 >= config.timeBudget) {\n            break;\n        }\n        // reset the index at which the regexp should start matching, also know where it\n        // should stop so that subsequent search don't repeat previous searches\n        const regexIndex = pos - config.windowSize * i;\n        wordDefinition.lastIndex = Math.max(0, regexIndex);\n        const thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n        if (!thisMatch && match) {\n            // stop: we have something\n            break;\n        }\n        match = thisMatch;\n        // stop: searched at start\n        if (regexIndex <= 0) {\n            break;\n        }\n        prevRegexIndex = regexIndex;\n    }\n    if (match) {\n        const result = {\n            word: match[0],\n            startColumn: textOffset + 1 + match.index,\n            endColumn: textOffset + 1 + match.index + match[0].length\n        };\n        wordDefinition.lastIndex = 0;\n        return result;\n    }\n    return null;\n}\nfunction _findRegexMatchEnclosingPosition(wordDefinition, text, pos, stopPos) {\n    let match;\n    while (match = wordDefinition.exec(text)) {\n        const matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return match;\n        }\n        else if (stopPos > 0 && matchIndex > stopPos) {\n            return null;\n        }\n    }\n    return null;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from '../../../base/common/arrays.js';\nimport * as objects from '../../../base/common/objects.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { EDITOR_MODEL_DEFAULTS } from '../core/textModelDefaults.js';\nimport { USUAL_WORD_SEPARATORS } from '../core/wordHelper.js';\nimport * as nls from '../../../nls.js';\n/**\n * @internal\n * The width of the minimap gutter, in pixels.\n */\nexport const MINIMAP_GUTTER_WIDTH = 8;\n//#endregion\n/**\n * An event describing that the configuration of the editor has changed.\n */\nexport class ConfigurationChangedEvent {\n    /**\n     * @internal\n     */\n    constructor(values) {\n        this._values = values;\n    }\n    hasChanged(id) {\n        return this._values[id];\n    }\n}\n/**\n * @internal\n */\nexport class ComputeOptionsMemory {\n    constructor() {\n        this.stableMinimapLayoutInput = null;\n        this.stableFitMaxMinimapScale = 0;\n        this.stableFitRemainingWidth = 0;\n    }\n}\n/**\n * @internal\n */\nclass BaseEditorOption {\n    constructor(id, name, defaultValue, schema) {\n        this.id = id;\n        this.name = name;\n        this.defaultValue = defaultValue;\n        this.schema = schema;\n    }\n    applyUpdate(value, update) {\n        return applyUpdate(value, update);\n    }\n    compute(env, options, value) {\n        return value;\n    }\n}\nexport class ApplyUpdateResult {\n    constructor(newValue, didChange) {\n        this.newValue = newValue;\n        this.didChange = didChange;\n    }\n}\nfunction applyUpdate(value, update) {\n    if (typeof value !== 'object' || typeof update !== 'object' || !value || !update) {\n        return new ApplyUpdateResult(update, value !== update);\n    }\n    if (Array.isArray(value) || Array.isArray(update)) {\n        const arrayEquals = Array.isArray(value) && Array.isArray(update) && arrays.equals(value, update);\n        return new ApplyUpdateResult(update, !arrayEquals);\n    }\n    let didChange = false;\n    for (const key in update) {\n        if (update.hasOwnProperty(key)) {\n            const result = applyUpdate(value[key], update[key]);\n            if (result.didChange) {\n                value[key] = result.newValue;\n                didChange = true;\n            }\n        }\n    }\n    return new ApplyUpdateResult(value, didChange);\n}\n/**\n * @internal\n */\nclass ComputedEditorOption {\n    constructor(id) {\n        this.schema = undefined;\n        this.id = id;\n        this.name = '_never_';\n        this.defaultValue = undefined;\n    }\n    applyUpdate(value, update) {\n        return applyUpdate(value, update);\n    }\n    validate(input) {\n        return this.defaultValue;\n    }\n}\nclass SimpleEditorOption {\n    constructor(id, name, defaultValue, schema) {\n        this.id = id;\n        this.name = name;\n        this.defaultValue = defaultValue;\n        this.schema = schema;\n    }\n    applyUpdate(value, update) {\n        return applyUpdate(value, update);\n    }\n    validate(input) {\n        if (typeof input === 'undefined') {\n            return this.defaultValue;\n        }\n        return input;\n    }\n    compute(env, options, value) {\n        return value;\n    }\n}\n/**\n * @internal\n */\nexport function boolean(value, defaultValue) {\n    if (typeof value === 'undefined') {\n        return defaultValue;\n    }\n    if (value === 'false') {\n        // treat the string 'false' as false\n        return false;\n    }\n    return Boolean(value);\n}\nclass EditorBooleanOption extends SimpleEditorOption {\n    constructor(id, name, defaultValue, schema = undefined) {\n        if (typeof schema !== 'undefined') {\n            schema.type = 'boolean';\n            schema.default = defaultValue;\n        }\n        super(id, name, defaultValue, schema);\n    }\n    validate(input) {\n        return boolean(input, this.defaultValue);\n    }\n}\n/**\n * @internal\n */\nexport function clampedInt(value, defaultValue, minimum, maximum) {\n    if (typeof value === 'undefined') {\n        return defaultValue;\n    }\n    let r = parseInt(value, 10);\n    if (isNaN(r)) {\n        return defaultValue;\n    }\n    r = Math.max(minimum, r);\n    r = Math.min(maximum, r);\n    return r | 0;\n}\nclass EditorIntOption extends SimpleEditorOption {\n    static clampedInt(value, defaultValue, minimum, maximum) {\n        return clampedInt(value, defaultValue, minimum, maximum);\n    }\n    constructor(id, name, defaultValue, minimum, maximum, schema = undefined) {\n        if (typeof schema !== 'undefined') {\n            schema.type = 'integer';\n            schema.default = defaultValue;\n            schema.minimum = minimum;\n            schema.maximum = maximum;\n        }\n        super(id, name, defaultValue, schema);\n        this.minimum = minimum;\n        this.maximum = maximum;\n    }\n    validate(input) {\n        return EditorIntOption.clampedInt(input, this.defaultValue, this.minimum, this.maximum);\n    }\n}\n/**\n * @internal\n */\nexport function clampedFloat(value, defaultValue, minimum, maximum) {\n    if (typeof value === 'undefined') {\n        return defaultValue;\n    }\n    const r = EditorFloatOption.float(value, defaultValue);\n    return EditorFloatOption.clamp(r, minimum, maximum);\n}\nclass EditorFloatOption extends SimpleEditorOption {\n    static clamp(n, min, max) {\n        if (n < min) {\n            return min;\n        }\n        if (n > max) {\n            return max;\n        }\n        return n;\n    }\n    static float(value, defaultValue) {\n        if (typeof value === 'number') {\n            return value;\n        }\n        if (typeof value === 'undefined') {\n            return defaultValue;\n        }\n        const r = parseFloat(value);\n        return (isNaN(r) ? defaultValue : r);\n    }\n    constructor(id, name, defaultValue, validationFn, schema) {\n        if (typeof schema !== 'undefined') {\n            schema.type = 'number';\n            schema.default = defaultValue;\n        }\n        super(id, name, defaultValue, schema);\n        this.validationFn = validationFn;\n    }\n    validate(input) {\n        return this.validationFn(EditorFloatOption.float(input, this.defaultValue));\n    }\n}\nclass EditorStringOption extends SimpleEditorOption {\n    static string(value, defaultValue) {\n        if (typeof value !== 'string') {\n            return defaultValue;\n        }\n        return value;\n    }\n    constructor(id, name, defaultValue, schema = undefined) {\n        if (typeof schema !== 'undefined') {\n            schema.type = 'string';\n            schema.default = defaultValue;\n        }\n        super(id, name, defaultValue, schema);\n    }\n    validate(input) {\n        return EditorStringOption.string(input, this.defaultValue);\n    }\n}\n/**\n * @internal\n */\nexport function stringSet(value, defaultValue, allowedValues, renamedValues) {\n    if (typeof value !== 'string') {\n        return defaultValue;\n    }\n    if (renamedValues && value in renamedValues) {\n        return renamedValues[value];\n    }\n    if (allowedValues.indexOf(value) === -1) {\n        return defaultValue;\n    }\n    return value;\n}\nclass EditorStringEnumOption extends SimpleEditorOption {\n    constructor(id, name, defaultValue, allowedValues, schema = undefined) {\n        if (typeof schema !== 'undefined') {\n            schema.type = 'string';\n            schema.enum = allowedValues;\n            schema.default = defaultValue;\n        }\n        super(id, name, defaultValue, schema);\n        this._allowedValues = allowedValues;\n    }\n    validate(input) {\n        return stringSet(input, this.defaultValue, this._allowedValues);\n    }\n}\nclass EditorEnumOption extends BaseEditorOption {\n    constructor(id, name, defaultValue, defaultStringValue, allowedValues, convert, schema = undefined) {\n        if (typeof schema !== 'undefined') {\n            schema.type = 'string';\n            schema.enum = allowedValues;\n            schema.default = defaultStringValue;\n        }\n        super(id, name, defaultValue, schema);\n        this._allowedValues = allowedValues;\n        this._convert = convert;\n    }\n    validate(input) {\n        if (typeof input !== 'string') {\n            return this.defaultValue;\n        }\n        if (this._allowedValues.indexOf(input) === -1) {\n            return this.defaultValue;\n        }\n        return this._convert(input);\n    }\n}\n//#endregion\n//#region autoIndent\nfunction _autoIndentFromString(autoIndent) {\n    switch (autoIndent) {\n        case 'none': return 0 /* EditorAutoIndentStrategy.None */;\n        case 'keep': return 1 /* EditorAutoIndentStrategy.Keep */;\n        case 'brackets': return 2 /* EditorAutoIndentStrategy.Brackets */;\n        case 'advanced': return 3 /* EditorAutoIndentStrategy.Advanced */;\n        case 'full': return 4 /* EditorAutoIndentStrategy.Full */;\n    }\n}\n//#endregion\n//#region accessibilitySupport\nclass EditorAccessibilitySupport extends BaseEditorOption {\n    constructor() {\n        super(2 /* EditorOption.accessibilitySupport */, 'accessibilitySupport', 0 /* AccessibilitySupport.Unknown */, {\n            type: 'string',\n            enum: ['auto', 'on', 'off'],\n            enumDescriptions: [\n                nls.localize('accessibilitySupport.auto', \"Use platform APIs to detect when a Screen Reader is attached\"),\n                nls.localize('accessibilitySupport.on', \"Optimize for usage with a Screen Reader\"),\n                nls.localize('accessibilitySupport.off', \"Assume a screen reader is not attached\"),\n            ],\n            default: 'auto',\n            tags: ['accessibility'],\n            description: nls.localize('accessibilitySupport', \"Controls if the UI should run in a mode where it is optimized for screen readers.\")\n        });\n    }\n    validate(input) {\n        switch (input) {\n            case 'auto': return 0 /* AccessibilitySupport.Unknown */;\n            case 'off': return 1 /* AccessibilitySupport.Disabled */;\n            case 'on': return 2 /* AccessibilitySupport.Enabled */;\n        }\n        return this.defaultValue;\n    }\n    compute(env, options, value) {\n        if (value === 0 /* AccessibilitySupport.Unknown */) {\n            // The editor reads the `accessibilitySupport` from the environment\n            return env.accessibilitySupport;\n        }\n        return value;\n    }\n}\nclass EditorComments extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            insertSpace: true,\n            ignoreEmptyLines: true,\n        };\n        super(22 /* EditorOption.comments */, 'comments', defaults, {\n            'editor.comments.insertSpace': {\n                type: 'boolean',\n                default: defaults.insertSpace,\n                description: nls.localize('comments.insertSpace', \"Controls whether a space character is inserted when commenting.\")\n            },\n            'editor.comments.ignoreEmptyLines': {\n                type: 'boolean',\n                default: defaults.ignoreEmptyLines,\n                description: nls.localize('comments.ignoreEmptyLines', 'Controls if empty lines should be ignored with toggle, add or remove actions for line comments.')\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            insertSpace: boolean(input.insertSpace, this.defaultValue.insertSpace),\n            ignoreEmptyLines: boolean(input.ignoreEmptyLines, this.defaultValue.ignoreEmptyLines),\n        };\n    }\n}\nfunction _cursorBlinkingStyleFromString(cursorBlinkingStyle) {\n    switch (cursorBlinkingStyle) {\n        case 'blink': return 1 /* TextEditorCursorBlinkingStyle.Blink */;\n        case 'smooth': return 2 /* TextEditorCursorBlinkingStyle.Smooth */;\n        case 'phase': return 3 /* TextEditorCursorBlinkingStyle.Phase */;\n        case 'expand': return 4 /* TextEditorCursorBlinkingStyle.Expand */;\n        case 'solid': return 5 /* TextEditorCursorBlinkingStyle.Solid */;\n    }\n}\n//#endregion\n//#region cursorStyle\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\n/**\n * @internal\n */\nexport function cursorStyleToString(cursorStyle) {\n    switch (cursorStyle) {\n        case TextEditorCursorStyle.Line: return 'line';\n        case TextEditorCursorStyle.Block: return 'block';\n        case TextEditorCursorStyle.Underline: return 'underline';\n        case TextEditorCursorStyle.LineThin: return 'line-thin';\n        case TextEditorCursorStyle.BlockOutline: return 'block-outline';\n        case TextEditorCursorStyle.UnderlineThin: return 'underline-thin';\n    }\n}\nfunction _cursorStyleFromString(cursorStyle) {\n    switch (cursorStyle) {\n        case 'line': return TextEditorCursorStyle.Line;\n        case 'block': return TextEditorCursorStyle.Block;\n        case 'underline': return TextEditorCursorStyle.Underline;\n        case 'line-thin': return TextEditorCursorStyle.LineThin;\n        case 'block-outline': return TextEditorCursorStyle.BlockOutline;\n        case 'underline-thin': return TextEditorCursorStyle.UnderlineThin;\n    }\n}\n//#endregion\n//#region editorClassName\nclass EditorClassName extends ComputedEditorOption {\n    constructor() {\n        super(139 /* EditorOption.editorClassName */);\n    }\n    compute(env, options, _) {\n        const classNames = ['monaco-editor'];\n        if (options.get(38 /* EditorOption.extraEditorClassName */)) {\n            classNames.push(options.get(38 /* EditorOption.extraEditorClassName */));\n        }\n        if (env.extraEditorClassName) {\n            classNames.push(env.extraEditorClassName);\n        }\n        if (options.get(72 /* EditorOption.mouseStyle */) === 'default') {\n            classNames.push('mouse-default');\n        }\n        else if (options.get(72 /* EditorOption.mouseStyle */) === 'copy') {\n            classNames.push('mouse-copy');\n        }\n        if (options.get(109 /* EditorOption.showUnused */)) {\n            classNames.push('showUnused');\n        }\n        if (options.get(137 /* EditorOption.showDeprecated */)) {\n            classNames.push('showDeprecated');\n        }\n        return classNames.join(' ');\n    }\n}\n//#endregion\n//#region emptySelectionClipboard\nclass EditorEmptySelectionClipboard extends EditorBooleanOption {\n    constructor() {\n        super(36 /* EditorOption.emptySelectionClipboard */, 'emptySelectionClipboard', true, { description: nls.localize('emptySelectionClipboard', \"Controls whether copying without a selection copies the current line.\") });\n    }\n    compute(env, options, value) {\n        return value && env.emptySelectionClipboard;\n    }\n}\nclass EditorFind extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            cursorMoveOnType: true,\n            seedSearchStringFromSelection: 'always',\n            autoFindInSelection: 'never',\n            globalFindClipboard: false,\n            addExtraSpaceOnTop: true,\n            loop: true\n        };\n        super(40 /* EditorOption.find */, 'find', defaults, {\n            'editor.find.cursorMoveOnType': {\n                type: 'boolean',\n                default: defaults.cursorMoveOnType,\n                description: nls.localize('find.cursorMoveOnType', \"Controls whether the cursor should jump to find matches while typing.\")\n            },\n            'editor.find.seedSearchStringFromSelection': {\n                type: 'string',\n                enum: ['never', 'always', 'selection'],\n                default: defaults.seedSearchStringFromSelection,\n                enumDescriptions: [\n                    nls.localize('editor.find.seedSearchStringFromSelection.never', 'Never seed search string from the editor selection.'),\n                    nls.localize('editor.find.seedSearchStringFromSelection.always', 'Always seed search string from the editor selection, including word at cursor position.'),\n                    nls.localize('editor.find.seedSearchStringFromSelection.selection', 'Only seed search string from the editor selection.')\n                ],\n                description: nls.localize('find.seedSearchStringFromSelection', \"Controls whether the search string in the Find Widget is seeded from the editor selection.\")\n            },\n            'editor.find.autoFindInSelection': {\n                type: 'string',\n                enum: ['never', 'always', 'multiline'],\n                default: defaults.autoFindInSelection,\n                enumDescriptions: [\n                    nls.localize('editor.find.autoFindInSelection.never', 'Never turn on Find in Selection automatically (default).'),\n                    nls.localize('editor.find.autoFindInSelection.always', 'Always turn on Find in Selection automatically.'),\n                    nls.localize('editor.find.autoFindInSelection.multiline', 'Turn on Find in Selection automatically when multiple lines of content are selected.')\n                ],\n                description: nls.localize('find.autoFindInSelection', \"Controls the condition for turning on Find in Selection automatically.\")\n            },\n            'editor.find.globalFindClipboard': {\n                type: 'boolean',\n                default: defaults.globalFindClipboard,\n                description: nls.localize('find.globalFindClipboard', \"Controls whether the Find Widget should read or modify the shared find clipboard on macOS.\"),\n                included: platform.isMacintosh\n            },\n            'editor.find.addExtraSpaceOnTop': {\n                type: 'boolean',\n                default: defaults.addExtraSpaceOnTop,\n                description: nls.localize('find.addExtraSpaceOnTop', \"Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.\")\n            },\n            'editor.find.loop': {\n                type: 'boolean',\n                default: defaults.loop,\n                description: nls.localize('find.loop', \"Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            cursorMoveOnType: boolean(input.cursorMoveOnType, this.defaultValue.cursorMoveOnType),\n            seedSearchStringFromSelection: typeof _input.seedSearchStringFromSelection === 'boolean'\n                ? (_input.seedSearchStringFromSelection ? 'always' : 'never')\n                : stringSet(input.seedSearchStringFromSelection, this.defaultValue.seedSearchStringFromSelection, ['never', 'always', 'selection']),\n            autoFindInSelection: typeof _input.autoFindInSelection === 'boolean'\n                ? (_input.autoFindInSelection ? 'always' : 'never')\n                : stringSet(input.autoFindInSelection, this.defaultValue.autoFindInSelection, ['never', 'always', 'multiline']),\n            globalFindClipboard: boolean(input.globalFindClipboard, this.defaultValue.globalFindClipboard),\n            addExtraSpaceOnTop: boolean(input.addExtraSpaceOnTop, this.defaultValue.addExtraSpaceOnTop),\n            loop: boolean(input.loop, this.defaultValue.loop),\n        };\n    }\n}\n//#endregion\n//#region fontLigatures\n/**\n * @internal\n */\nexport class EditorFontLigatures extends BaseEditorOption {\n    constructor() {\n        super(50 /* EditorOption.fontLigatures */, 'fontLigatures', EditorFontLigatures.OFF, {\n            anyOf: [\n                {\n                    type: 'boolean',\n                    description: nls.localize('fontLigatures', \"Enables/Disables font ligatures ('calt' and 'liga' font features). Change this to a string for fine-grained control of the 'font-feature-settings' CSS property.\"),\n                },\n                {\n                    type: 'string',\n                    description: nls.localize('fontFeatureSettings', \"Explicit 'font-feature-settings' CSS property. A boolean can be passed instead if one only needs to turn on/off ligatures.\")\n                }\n            ],\n            description: nls.localize('fontLigaturesGeneral', \"Configures font ligatures or font features. Can be either a boolean to enable/disable ligatures or a string for the value of the CSS 'font-feature-settings' property.\"),\n            default: false\n        });\n    }\n    validate(input) {\n        if (typeof input === 'undefined') {\n            return this.defaultValue;\n        }\n        if (typeof input === 'string') {\n            if (input === 'false') {\n                return EditorFontLigatures.OFF;\n            }\n            if (input === 'true') {\n                return EditorFontLigatures.ON;\n            }\n            return input;\n        }\n        if (Boolean(input)) {\n            return EditorFontLigatures.ON;\n        }\n        return EditorFontLigatures.OFF;\n    }\n}\nEditorFontLigatures.OFF = '\"liga\" off, \"calt\" off';\nEditorFontLigatures.ON = '\"liga\" on, \"calt\" on';\n//#endregion\n//#region fontVariations\n/**\n * @internal\n */\nexport class EditorFontVariations extends BaseEditorOption {\n    constructor() {\n        super(53 /* EditorOption.fontVariations */, 'fontVariations', EditorFontVariations.OFF, {\n            anyOf: [\n                {\n                    type: 'boolean',\n                    description: nls.localize('fontVariations', \"Enables/Disables the translation from font-weight to font-variation-settings. Change this to a string for fine-grained control of the 'font-variation-settings' CSS property.\"),\n                },\n                {\n                    type: 'string',\n                    description: nls.localize('fontVariationSettings', \"Explicit 'font-variation-settings' CSS property. A boolean can be passed instead if one only needs to translate font-weight to font-variation-settings.\")\n                }\n            ],\n            description: nls.localize('fontVariationsGeneral', \"Configures font variations. Can be either a boolean to enable/disable the translation from font-weight to font-variation-settings or a string for the value of the CSS 'font-variation-settings' property.\"),\n            default: false\n        });\n    }\n    validate(input) {\n        if (typeof input === 'undefined') {\n            return this.defaultValue;\n        }\n        if (typeof input === 'string') {\n            if (input === 'false') {\n                return EditorFontVariations.OFF;\n            }\n            if (input === 'true') {\n                return EditorFontVariations.TRANSLATE;\n            }\n            return input;\n        }\n        if (Boolean(input)) {\n            return EditorFontVariations.TRANSLATE;\n        }\n        return EditorFontVariations.OFF;\n    }\n    compute(env, options, value) {\n        // The value is computed from the fontWeight if it is true.\n        // So take the result from env.fontInfo\n        return env.fontInfo.fontVariationSettings;\n    }\n}\n// Text is laid out using default settings.\nEditorFontVariations.OFF = 'normal';\n// Translate `fontWeight` config to the `font-variation-settings` CSS property.\nEditorFontVariations.TRANSLATE = 'translate';\n//#endregion\n//#region fontInfo\nclass EditorFontInfo extends ComputedEditorOption {\n    constructor() {\n        super(49 /* EditorOption.fontInfo */);\n    }\n    compute(env, options, _) {\n        return env.fontInfo;\n    }\n}\n//#endregion\n//#region fontSize\nclass EditorFontSize extends SimpleEditorOption {\n    constructor() {\n        super(51 /* EditorOption.fontSize */, 'fontSize', EDITOR_FONT_DEFAULTS.fontSize, {\n            type: 'number',\n            minimum: 6,\n            maximum: 100,\n            default: EDITOR_FONT_DEFAULTS.fontSize,\n            description: nls.localize('fontSize', \"Controls the font size in pixels.\")\n        });\n    }\n    validate(input) {\n        const r = EditorFloatOption.float(input, this.defaultValue);\n        if (r === 0) {\n            return EDITOR_FONT_DEFAULTS.fontSize;\n        }\n        return EditorFloatOption.clamp(r, 6, 100);\n    }\n    compute(env, options, value) {\n        // The final fontSize respects the editor zoom level.\n        // So take the result from env.fontInfo\n        return env.fontInfo.fontSize;\n    }\n}\n//#endregion\n//#region fontWeight\nclass EditorFontWeight extends BaseEditorOption {\n    constructor() {\n        super(52 /* EditorOption.fontWeight */, 'fontWeight', EDITOR_FONT_DEFAULTS.fontWeight, {\n            anyOf: [\n                {\n                    type: 'number',\n                    minimum: EditorFontWeight.MINIMUM_VALUE,\n                    maximum: EditorFontWeight.MAXIMUM_VALUE,\n                    errorMessage: nls.localize('fontWeightErrorMessage', \"Only \\\"normal\\\" and \\\"bold\\\" keywords or numbers between 1 and 1000 are allowed.\")\n                },\n                {\n                    type: 'string',\n                    pattern: '^(normal|bold|1000|[1-9][0-9]{0,2})$'\n                },\n                {\n                    enum: EditorFontWeight.SUGGESTION_VALUES\n                }\n            ],\n            default: EDITOR_FONT_DEFAULTS.fontWeight,\n            description: nls.localize('fontWeight', \"Controls the font weight. Accepts \\\"normal\\\" and \\\"bold\\\" keywords or numbers between 1 and 1000.\")\n        });\n    }\n    validate(input) {\n        if (input === 'normal' || input === 'bold') {\n            return input;\n        }\n        return String(EditorIntOption.clampedInt(input, EDITOR_FONT_DEFAULTS.fontWeight, EditorFontWeight.MINIMUM_VALUE, EditorFontWeight.MAXIMUM_VALUE));\n    }\n}\nEditorFontWeight.SUGGESTION_VALUES = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\nEditorFontWeight.MINIMUM_VALUE = 1;\nEditorFontWeight.MAXIMUM_VALUE = 1000;\nclass EditorGoToLocation extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            multiple: 'peek',\n            multipleDefinitions: 'peek',\n            multipleTypeDefinitions: 'peek',\n            multipleDeclarations: 'peek',\n            multipleImplementations: 'peek',\n            multipleReferences: 'peek',\n            alternativeDefinitionCommand: 'editor.action.goToReferences',\n            alternativeTypeDefinitionCommand: 'editor.action.goToReferences',\n            alternativeDeclarationCommand: 'editor.action.goToReferences',\n            alternativeImplementationCommand: '',\n            alternativeReferenceCommand: '',\n        };\n        const jsonSubset = {\n            type: 'string',\n            enum: ['peek', 'gotoAndPeek', 'goto'],\n            default: defaults.multiple,\n            enumDescriptions: [\n                nls.localize('editor.gotoLocation.multiple.peek', 'Show Peek view of the results (default)'),\n                nls.localize('editor.gotoLocation.multiple.gotoAndPeek', 'Go to the primary result and show a Peek view'),\n                nls.localize('editor.gotoLocation.multiple.goto', 'Go to the primary result and enable Peek-less navigation to others')\n            ]\n        };\n        const alternativeCommandOptions = ['', 'editor.action.referenceSearch.trigger', 'editor.action.goToReferences', 'editor.action.peekImplementation', 'editor.action.goToImplementation', 'editor.action.peekTypeDefinition', 'editor.action.goToTypeDefinition', 'editor.action.peekDeclaration', 'editor.action.revealDeclaration', 'editor.action.peekDefinition', 'editor.action.revealDefinitionAside', 'editor.action.revealDefinition'];\n        super(57 /* EditorOption.gotoLocation */, 'gotoLocation', defaults, {\n            'editor.gotoLocation.multiple': {\n                deprecationMessage: nls.localize('editor.gotoLocation.multiple.deprecated', \"This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.\"),\n            },\n            'editor.gotoLocation.multipleDefinitions': Object.assign({ description: nls.localize('editor.editor.gotoLocation.multipleDefinitions', \"Controls the behavior the 'Go to Definition'-command when multiple target locations exist.\") }, jsonSubset),\n            'editor.gotoLocation.multipleTypeDefinitions': Object.assign({ description: nls.localize('editor.editor.gotoLocation.multipleTypeDefinitions', \"Controls the behavior the 'Go to Type Definition'-command when multiple target locations exist.\") }, jsonSubset),\n            'editor.gotoLocation.multipleDeclarations': Object.assign({ description: nls.localize('editor.editor.gotoLocation.multipleDeclarations', \"Controls the behavior the 'Go to Declaration'-command when multiple target locations exist.\") }, jsonSubset),\n            'editor.gotoLocation.multipleImplementations': Object.assign({ description: nls.localize('editor.editor.gotoLocation.multipleImplemenattions', \"Controls the behavior the 'Go to Implementations'-command when multiple target locations exist.\") }, jsonSubset),\n            'editor.gotoLocation.multipleReferences': Object.assign({ description: nls.localize('editor.editor.gotoLocation.multipleReferences', \"Controls the behavior the 'Go to References'-command when multiple target locations exist.\") }, jsonSubset),\n            'editor.gotoLocation.alternativeDefinitionCommand': {\n                type: 'string',\n                default: defaults.alternativeDefinitionCommand,\n                enum: alternativeCommandOptions,\n                description: nls.localize('alternativeDefinitionCommand', \"Alternative command id that is being executed when the result of 'Go to Definition' is the current location.\")\n            },\n            'editor.gotoLocation.alternativeTypeDefinitionCommand': {\n                type: 'string',\n                default: defaults.alternativeTypeDefinitionCommand,\n                enum: alternativeCommandOptions,\n                description: nls.localize('alternativeTypeDefinitionCommand', \"Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.\")\n            },\n            'editor.gotoLocation.alternativeDeclarationCommand': {\n                type: 'string',\n                default: defaults.alternativeDeclarationCommand,\n                enum: alternativeCommandOptions,\n                description: nls.localize('alternativeDeclarationCommand', \"Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.\")\n            },\n            'editor.gotoLocation.alternativeImplementationCommand': {\n                type: 'string',\n                default: defaults.alternativeImplementationCommand,\n                enum: alternativeCommandOptions,\n                description: nls.localize('alternativeImplementationCommand', \"Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.\")\n            },\n            'editor.gotoLocation.alternativeReferenceCommand': {\n                type: 'string',\n                default: defaults.alternativeReferenceCommand,\n                enum: alternativeCommandOptions,\n                description: nls.localize('alternativeReferenceCommand', \"Alternative command id that is being executed when the result of 'Go to Reference' is the current location.\")\n            },\n        });\n    }\n    validate(_input) {\n        var _a, _b, _c, _d, _e;\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            multiple: stringSet(input.multiple, this.defaultValue.multiple, ['peek', 'gotoAndPeek', 'goto']),\n            multipleDefinitions: (_a = input.multipleDefinitions) !== null && _a !== void 0 ? _a : stringSet(input.multipleDefinitions, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n            multipleTypeDefinitions: (_b = input.multipleTypeDefinitions) !== null && _b !== void 0 ? _b : stringSet(input.multipleTypeDefinitions, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n            multipleDeclarations: (_c = input.multipleDeclarations) !== null && _c !== void 0 ? _c : stringSet(input.multipleDeclarations, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n            multipleImplementations: (_d = input.multipleImplementations) !== null && _d !== void 0 ? _d : stringSet(input.multipleImplementations, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n            multipleReferences: (_e = input.multipleReferences) !== null && _e !== void 0 ? _e : stringSet(input.multipleReferences, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n            alternativeDefinitionCommand: EditorStringOption.string(input.alternativeDefinitionCommand, this.defaultValue.alternativeDefinitionCommand),\n            alternativeTypeDefinitionCommand: EditorStringOption.string(input.alternativeTypeDefinitionCommand, this.defaultValue.alternativeTypeDefinitionCommand),\n            alternativeDeclarationCommand: EditorStringOption.string(input.alternativeDeclarationCommand, this.defaultValue.alternativeDeclarationCommand),\n            alternativeImplementationCommand: EditorStringOption.string(input.alternativeImplementationCommand, this.defaultValue.alternativeImplementationCommand),\n            alternativeReferenceCommand: EditorStringOption.string(input.alternativeReferenceCommand, this.defaultValue.alternativeReferenceCommand),\n        };\n    }\n}\nclass EditorHover extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            enabled: true,\n            delay: 300,\n            sticky: true,\n            above: true,\n        };\n        super(59 /* EditorOption.hover */, 'hover', defaults, {\n            'editor.hover.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                description: nls.localize('hover.enabled', \"Controls whether the hover is shown.\")\n            },\n            'editor.hover.delay': {\n                type: 'number',\n                default: defaults.delay,\n                minimum: 0,\n                maximum: 10000,\n                description: nls.localize('hover.delay', \"Controls the delay in milliseconds after which the hover is shown.\")\n            },\n            'editor.hover.sticky': {\n                type: 'boolean',\n                default: defaults.sticky,\n                description: nls.localize('hover.sticky', \"Controls whether the hover should remain visible when mouse is moved over it.\")\n            },\n            'editor.hover.above': {\n                type: 'boolean',\n                default: defaults.above,\n                description: nls.localize('hover.above', \"Prefer showing hovers above the line, if there's space.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            delay: EditorIntOption.clampedInt(input.delay, this.defaultValue.delay, 0, 10000),\n            sticky: boolean(input.sticky, this.defaultValue.sticky),\n            above: boolean(input.above, this.defaultValue.above),\n        };\n    }\n}\n/**\n * @internal\n */\nexport class EditorLayoutInfoComputer extends ComputedEditorOption {\n    constructor() {\n        super(142 /* EditorOption.layoutInfo */);\n    }\n    compute(env, options, _) {\n        return EditorLayoutInfoComputer.computeLayout(options, {\n            memory: env.memory,\n            outerWidth: env.outerWidth,\n            outerHeight: env.outerHeight,\n            isDominatedByLongLines: env.isDominatedByLongLines,\n            lineHeight: env.fontInfo.lineHeight,\n            viewLineCount: env.viewLineCount,\n            lineNumbersDigitCount: env.lineNumbersDigitCount,\n            typicalHalfwidthCharacterWidth: env.fontInfo.typicalHalfwidthCharacterWidth,\n            maxDigitWidth: env.fontInfo.maxDigitWidth,\n            pixelRatio: env.pixelRatio,\n            glyphMarginDecorationLaneCount: env.glyphMarginDecorationLaneCount\n        });\n    }\n    static computeContainedMinimapLineCount(input) {\n        const typicalViewportLineCount = input.height / input.lineHeight;\n        const extraLinesBeforeFirstLine = Math.floor(input.paddingTop / input.lineHeight);\n        let extraLinesBeyondLastLine = Math.floor(input.paddingBottom / input.lineHeight);\n        if (input.scrollBeyondLastLine) {\n            extraLinesBeyondLastLine = Math.max(extraLinesBeyondLastLine, typicalViewportLineCount - 1);\n        }\n        const desiredRatio = (extraLinesBeforeFirstLine + input.viewLineCount + extraLinesBeyondLastLine) / (input.pixelRatio * input.height);\n        const minimapLineCount = Math.floor(input.viewLineCount / desiredRatio);\n        return { typicalViewportLineCount, extraLinesBeforeFirstLine, extraLinesBeyondLastLine, desiredRatio, minimapLineCount };\n    }\n    static _computeMinimapLayout(input, memory) {\n        const outerWidth = input.outerWidth;\n        const outerHeight = input.outerHeight;\n        const pixelRatio = input.pixelRatio;\n        if (!input.minimap.enabled) {\n            return {\n                renderMinimap: 0 /* RenderMinimap.None */,\n                minimapLeft: 0,\n                minimapWidth: 0,\n                minimapHeightIsEditorHeight: false,\n                minimapIsSampling: false,\n                minimapScale: 1,\n                minimapLineHeight: 1,\n                minimapCanvasInnerWidth: 0,\n                minimapCanvasInnerHeight: Math.floor(pixelRatio * outerHeight),\n                minimapCanvasOuterWidth: 0,\n                minimapCanvasOuterHeight: outerHeight,\n            };\n        }\n        // Can use memory if only the `viewLineCount` and `remainingWidth` have changed\n        const stableMinimapLayoutInput = memory.stableMinimapLayoutInput;\n        const couldUseMemory = (stableMinimapLayoutInput\n            // && input.outerWidth === lastMinimapLayoutInput.outerWidth !!! INTENTIONAL OMITTED\n            && input.outerHeight === stableMinimapLayoutInput.outerHeight\n            && input.lineHeight === stableMinimapLayoutInput.lineHeight\n            && input.typicalHalfwidthCharacterWidth === stableMinimapLayoutInput.typicalHalfwidthCharacterWidth\n            && input.pixelRatio === stableMinimapLayoutInput.pixelRatio\n            && input.scrollBeyondLastLine === stableMinimapLayoutInput.scrollBeyondLastLine\n            && input.paddingTop === stableMinimapLayoutInput.paddingTop\n            && input.paddingBottom === stableMinimapLayoutInput.paddingBottom\n            && input.minimap.enabled === stableMinimapLayoutInput.minimap.enabled\n            && input.minimap.side === stableMinimapLayoutInput.minimap.side\n            && input.minimap.size === stableMinimapLayoutInput.minimap.size\n            && input.minimap.showSlider === stableMinimapLayoutInput.minimap.showSlider\n            && input.minimap.renderCharacters === stableMinimapLayoutInput.minimap.renderCharacters\n            && input.minimap.maxColumn === stableMinimapLayoutInput.minimap.maxColumn\n            && input.minimap.scale === stableMinimapLayoutInput.minimap.scale\n            && input.verticalScrollbarWidth === stableMinimapLayoutInput.verticalScrollbarWidth\n            // && input.viewLineCount === lastMinimapLayoutInput.viewLineCount !!! INTENTIONAL OMITTED\n            // && input.remainingWidth === lastMinimapLayoutInput.remainingWidth !!! INTENTIONAL OMITTED\n            && input.isViewportWrapping === stableMinimapLayoutInput.isViewportWrapping);\n        const lineHeight = input.lineHeight;\n        const typicalHalfwidthCharacterWidth = input.typicalHalfwidthCharacterWidth;\n        const scrollBeyondLastLine = input.scrollBeyondLastLine;\n        const minimapRenderCharacters = input.minimap.renderCharacters;\n        let minimapScale = (pixelRatio >= 2 ? Math.round(input.minimap.scale * 2) : input.minimap.scale);\n        const minimapMaxColumn = input.minimap.maxColumn;\n        const minimapSize = input.minimap.size;\n        const minimapSide = input.minimap.side;\n        const verticalScrollbarWidth = input.verticalScrollbarWidth;\n        const viewLineCount = input.viewLineCount;\n        const remainingWidth = input.remainingWidth;\n        const isViewportWrapping = input.isViewportWrapping;\n        const baseCharHeight = minimapRenderCharacters ? 2 : 3;\n        let minimapCanvasInnerHeight = Math.floor(pixelRatio * outerHeight);\n        const minimapCanvasOuterHeight = minimapCanvasInnerHeight / pixelRatio;\n        let minimapHeightIsEditorHeight = false;\n        let minimapIsSampling = false;\n        let minimapLineHeight = baseCharHeight * minimapScale;\n        let minimapCharWidth = minimapScale / pixelRatio;\n        let minimapWidthMultiplier = 1;\n        if (minimapSize === 'fill' || minimapSize === 'fit') {\n            const { typicalViewportLineCount, extraLinesBeforeFirstLine, extraLinesBeyondLastLine, desiredRatio, minimapLineCount } = EditorLayoutInfoComputer.computeContainedMinimapLineCount({\n                viewLineCount: viewLineCount,\n                scrollBeyondLastLine: scrollBeyondLastLine,\n                paddingTop: input.paddingTop,\n                paddingBottom: input.paddingBottom,\n                height: outerHeight,\n                lineHeight: lineHeight,\n                pixelRatio: pixelRatio\n            });\n            // ratio is intentionally not part of the layout to avoid the layout changing all the time\n            // when doing sampling\n            const ratio = viewLineCount / minimapLineCount;\n            if (ratio > 1) {\n                minimapHeightIsEditorHeight = true;\n                minimapIsSampling = true;\n                minimapScale = 1;\n                minimapLineHeight = 1;\n                minimapCharWidth = minimapScale / pixelRatio;\n            }\n            else {\n                let fitBecomesFill = false;\n                let maxMinimapScale = minimapScale + 1;\n                if (minimapSize === 'fit') {\n                    const effectiveMinimapHeight = Math.ceil((extraLinesBeforeFirstLine + viewLineCount + extraLinesBeyondLastLine) * minimapLineHeight);\n                    if (isViewportWrapping && couldUseMemory && remainingWidth <= memory.stableFitRemainingWidth) {\n                        // There is a loop when using `fit` and viewport wrapping:\n                        // - view line count impacts minimap layout\n                        // - minimap layout impacts viewport width\n                        // - viewport width impacts view line count\n                        // To break the loop, once we go to a smaller minimap scale, we try to stick with it.\n                        fitBecomesFill = true;\n                        maxMinimapScale = memory.stableFitMaxMinimapScale;\n                    }\n                    else {\n                        fitBecomesFill = (effectiveMinimapHeight > minimapCanvasInnerHeight);\n                    }\n                }\n                if (minimapSize === 'fill' || fitBecomesFill) {\n                    minimapHeightIsEditorHeight = true;\n                    const configuredMinimapScale = minimapScale;\n                    minimapLineHeight = Math.min(lineHeight * pixelRatio, Math.max(1, Math.floor(1 / desiredRatio)));\n                    if (isViewportWrapping && couldUseMemory && remainingWidth <= memory.stableFitRemainingWidth) {\n                        // There is a loop when using `fill` and viewport wrapping:\n                        // - view line count impacts minimap layout\n                        // - minimap layout impacts viewport width\n                        // - viewport width impacts view line count\n                        // To break the loop, once we go to a smaller minimap scale, we try to stick with it.\n                        maxMinimapScale = memory.stableFitMaxMinimapScale;\n                    }\n                    minimapScale = Math.min(maxMinimapScale, Math.max(1, Math.floor(minimapLineHeight / baseCharHeight)));\n                    if (minimapScale > configuredMinimapScale) {\n                        minimapWidthMultiplier = Math.min(2, minimapScale / configuredMinimapScale);\n                    }\n                    minimapCharWidth = minimapScale / pixelRatio / minimapWidthMultiplier;\n                    minimapCanvasInnerHeight = Math.ceil((Math.max(typicalViewportLineCount, extraLinesBeforeFirstLine + viewLineCount + extraLinesBeyondLastLine)) * minimapLineHeight);\n                    if (isViewportWrapping) {\n                        // remember for next time\n                        memory.stableMinimapLayoutInput = input;\n                        memory.stableFitRemainingWidth = remainingWidth;\n                        memory.stableFitMaxMinimapScale = minimapScale;\n                    }\n                    else {\n                        memory.stableMinimapLayoutInput = null;\n                        memory.stableFitRemainingWidth = 0;\n                    }\n                }\n            }\n        }\n        // Given:\n        // (leaving 2px for the cursor to have space after the last character)\n        // viewportColumn = (contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth\n        // minimapWidth = viewportColumn * minimapCharWidth\n        // contentWidth = remainingWidth - minimapWidth\n        // What are good values for contentWidth and minimapWidth ?\n        // minimapWidth = ((contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth) * minimapCharWidth\n        // typicalHalfwidthCharacterWidth * minimapWidth = (contentWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n        // typicalHalfwidthCharacterWidth * minimapWidth = (remainingWidth - minimapWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n        // (typicalHalfwidthCharacterWidth + minimapCharWidth) * minimapWidth = (remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n        // minimapWidth = ((remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth) / (typicalHalfwidthCharacterWidth + minimapCharWidth)\n        const minimapMaxWidth = Math.floor(minimapMaxColumn * minimapCharWidth);\n        const minimapWidth = Math.min(minimapMaxWidth, Math.max(0, Math.floor(((remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth) / (typicalHalfwidthCharacterWidth + minimapCharWidth))) + MINIMAP_GUTTER_WIDTH);\n        let minimapCanvasInnerWidth = Math.floor(pixelRatio * minimapWidth);\n        const minimapCanvasOuterWidth = minimapCanvasInnerWidth / pixelRatio;\n        minimapCanvasInnerWidth = Math.floor(minimapCanvasInnerWidth * minimapWidthMultiplier);\n        const renderMinimap = (minimapRenderCharacters ? 1 /* RenderMinimap.Text */ : 2 /* RenderMinimap.Blocks */);\n        const minimapLeft = (minimapSide === 'left' ? 0 : (outerWidth - minimapWidth - verticalScrollbarWidth));\n        return {\n            renderMinimap,\n            minimapLeft,\n            minimapWidth,\n            minimapHeightIsEditorHeight,\n            minimapIsSampling,\n            minimapScale,\n            minimapLineHeight,\n            minimapCanvasInnerWidth,\n            minimapCanvasInnerHeight,\n            minimapCanvasOuterWidth,\n            minimapCanvasOuterHeight,\n        };\n    }\n    static computeLayout(options, env) {\n        const outerWidth = env.outerWidth | 0;\n        const outerHeight = env.outerHeight | 0;\n        const lineHeight = env.lineHeight | 0;\n        const lineNumbersDigitCount = env.lineNumbersDigitCount | 0;\n        const typicalHalfwidthCharacterWidth = env.typicalHalfwidthCharacterWidth;\n        const maxDigitWidth = env.maxDigitWidth;\n        const pixelRatio = env.pixelRatio;\n        const viewLineCount = env.viewLineCount;\n        const wordWrapOverride2 = options.get(134 /* EditorOption.wordWrapOverride2 */);\n        const wordWrapOverride1 = (wordWrapOverride2 === 'inherit' ? options.get(133 /* EditorOption.wordWrapOverride1 */) : wordWrapOverride2);\n        const wordWrap = (wordWrapOverride1 === 'inherit' ? options.get(129 /* EditorOption.wordWrap */) : wordWrapOverride1);\n        const wordWrapColumn = options.get(132 /* EditorOption.wordWrapColumn */);\n        const isDominatedByLongLines = env.isDominatedByLongLines;\n        const showGlyphMargin = options.get(56 /* EditorOption.glyphMargin */);\n        const showLineNumbers = (options.get(66 /* EditorOption.lineNumbers */).renderType !== 0 /* RenderLineNumbersType.Off */);\n        const lineNumbersMinChars = options.get(67 /* EditorOption.lineNumbersMinChars */);\n        const scrollBeyondLastLine = options.get(103 /* EditorOption.scrollBeyondLastLine */);\n        const padding = options.get(82 /* EditorOption.padding */);\n        const minimap = options.get(71 /* EditorOption.minimap */);\n        const scrollbar = options.get(101 /* EditorOption.scrollbar */);\n        const verticalScrollbarWidth = scrollbar.verticalScrollbarSize;\n        const verticalScrollbarHasArrows = scrollbar.verticalHasArrows;\n        const scrollbarArrowSize = scrollbar.arrowSize;\n        const horizontalScrollbarHeight = scrollbar.horizontalScrollbarSize;\n        const folding = options.get(42 /* EditorOption.folding */);\n        const showFoldingDecoration = options.get(108 /* EditorOption.showFoldingControls */) !== 'never';\n        let lineDecorationsWidth = options.get(64 /* EditorOption.lineDecorationsWidth */);\n        if (folding && showFoldingDecoration) {\n            lineDecorationsWidth += 16;\n        }\n        let lineNumbersWidth = 0;\n        if (showLineNumbers) {\n            const digitCount = Math.max(lineNumbersDigitCount, lineNumbersMinChars);\n            lineNumbersWidth = Math.round(digitCount * maxDigitWidth);\n        }\n        let glyphMarginWidth = 0;\n        if (showGlyphMargin) {\n            glyphMarginWidth = lineHeight * env.glyphMarginDecorationLaneCount;\n        }\n        let glyphMarginLeft = 0;\n        let lineNumbersLeft = glyphMarginLeft + glyphMarginWidth;\n        let decorationsLeft = lineNumbersLeft + lineNumbersWidth;\n        let contentLeft = decorationsLeft + lineDecorationsWidth;\n        const remainingWidth = outerWidth - glyphMarginWidth - lineNumbersWidth - lineDecorationsWidth;\n        let isWordWrapMinified = false;\n        let isViewportWrapping = false;\n        let wrappingColumn = -1;\n        if (wordWrapOverride1 === 'inherit' && isDominatedByLongLines) {\n            // Force viewport width wrapping if model is dominated by long lines\n            isWordWrapMinified = true;\n            isViewportWrapping = true;\n        }\n        else if (wordWrap === 'on' || wordWrap === 'bounded') {\n            isViewportWrapping = true;\n        }\n        else if (wordWrap === 'wordWrapColumn') {\n            wrappingColumn = wordWrapColumn;\n        }\n        const minimapLayout = EditorLayoutInfoComputer._computeMinimapLayout({\n            outerWidth: outerWidth,\n            outerHeight: outerHeight,\n            lineHeight: lineHeight,\n            typicalHalfwidthCharacterWidth: typicalHalfwidthCharacterWidth,\n            pixelRatio: pixelRatio,\n            scrollBeyondLastLine: scrollBeyondLastLine,\n            paddingTop: padding.top,\n            paddingBottom: padding.bottom,\n            minimap: minimap,\n            verticalScrollbarWidth: verticalScrollbarWidth,\n            viewLineCount: viewLineCount,\n            remainingWidth: remainingWidth,\n            isViewportWrapping: isViewportWrapping,\n        }, env.memory || new ComputeOptionsMemory());\n        if (minimapLayout.renderMinimap !== 0 /* RenderMinimap.None */ && minimapLayout.minimapLeft === 0) {\n            // the minimap is rendered to the left, so move everything to the right\n            glyphMarginLeft += minimapLayout.minimapWidth;\n            lineNumbersLeft += minimapLayout.minimapWidth;\n            decorationsLeft += minimapLayout.minimapWidth;\n            contentLeft += minimapLayout.minimapWidth;\n        }\n        const contentWidth = remainingWidth - minimapLayout.minimapWidth;\n        // (leaving 2px for the cursor to have space after the last character)\n        const viewportColumn = Math.max(1, Math.floor((contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth));\n        const verticalArrowSize = (verticalScrollbarHasArrows ? scrollbarArrowSize : 0);\n        if (isViewportWrapping) {\n            // compute the actual wrappingColumn\n            wrappingColumn = Math.max(1, viewportColumn);\n            if (wordWrap === 'bounded') {\n                wrappingColumn = Math.min(wrappingColumn, wordWrapColumn);\n            }\n        }\n        return {\n            width: outerWidth,\n            height: outerHeight,\n            glyphMarginLeft: glyphMarginLeft,\n            glyphMarginWidth: glyphMarginWidth,\n            glyphMarginDecorationLaneCount: env.glyphMarginDecorationLaneCount,\n            lineNumbersLeft: lineNumbersLeft,\n            lineNumbersWidth: lineNumbersWidth,\n            decorationsLeft: decorationsLeft,\n            decorationsWidth: lineDecorationsWidth,\n            contentLeft: contentLeft,\n            contentWidth: contentWidth,\n            minimap: minimapLayout,\n            viewportColumn: viewportColumn,\n            isWordWrapMinified: isWordWrapMinified,\n            isViewportWrapping: isViewportWrapping,\n            wrappingColumn: wrappingColumn,\n            verticalScrollbarWidth: verticalScrollbarWidth,\n            horizontalScrollbarHeight: horizontalScrollbarHeight,\n            overviewRuler: {\n                top: verticalArrowSize,\n                width: verticalScrollbarWidth,\n                height: (outerHeight - 2 * verticalArrowSize),\n                right: 0\n            }\n        };\n    }\n}\n//#endregion\n//#region WrappingStrategy\nclass WrappingStrategy extends BaseEditorOption {\n    constructor() {\n        super(136 /* EditorOption.wrappingStrategy */, 'wrappingStrategy', 'simple', {\n            'editor.wrappingStrategy': {\n                enumDescriptions: [\n                    nls.localize('wrappingStrategy.simple', \"Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width.\"),\n                    nls.localize('wrappingStrategy.advanced', \"Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases.\")\n                ],\n                type: 'string',\n                enum: ['simple', 'advanced'],\n                default: 'simple',\n                description: nls.localize('wrappingStrategy', \"Controls the algorithm that computes wrapping points. Note that when in accessibility mode, advanced will be used for the best experience.\")\n            }\n        });\n    }\n    validate(input) {\n        return stringSet(input, 'simple', ['simple', 'advanced']);\n    }\n    compute(env, options, value) {\n        const accessibilitySupport = options.get(2 /* EditorOption.accessibilitySupport */);\n        if (accessibilitySupport === 2 /* AccessibilitySupport.Enabled */) {\n            // if we know for a fact that a screen reader is attached, we switch our strategy to advanced to\n            // help that the editor's wrapping points match the textarea's wrapping points\n            return 'advanced';\n        }\n        return value;\n    }\n}\nclass EditorLightbulb extends BaseEditorOption {\n    constructor() {\n        const defaults = { enabled: true };\n        super(63 /* EditorOption.lightbulb */, 'lightbulb', defaults, {\n            'editor.lightbulb.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                description: nls.localize('codeActions', \"Enables the Code Action lightbulb in the editor.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled)\n        };\n    }\n}\nclass EditorStickyScroll extends BaseEditorOption {\n    constructor() {\n        const defaults = { enabled: false, maxLineCount: 5, defaultModel: 'outlineModel', scrollWithEditor: true };\n        super(113 /* EditorOption.stickyScroll */, 'stickyScroll', defaults, {\n            'editor.stickyScroll.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                description: nls.localize('editor.stickyScroll.enabled', \"Shows the nested current scopes during the scroll at the top of the editor.\")\n            },\n            'editor.stickyScroll.maxLineCount': {\n                type: 'number',\n                default: defaults.maxLineCount,\n                minimum: 1,\n                maximum: 10,\n                description: nls.localize('editor.stickyScroll.maxLineCount', \"Defines the maximum number of sticky lines to show.\")\n            },\n            'editor.stickyScroll.defaultModel': {\n                type: 'string',\n                enum: ['outlineModel', 'foldingProviderModel', 'indentationModel'],\n                default: defaults.defaultModel,\n                description: nls.localize('editor.stickyScroll.defaultModel', \"Defines the model to use for determining which lines to stick. If the outline model does not exist, it will fall back on the folding provider model which falls back on the indentation model. This order is respected in all three cases.\")\n            },\n            'editor.stickyScroll.scrollWithEditor': {\n                type: 'boolean',\n                default: defaults.scrollWithEditor,\n                description: nls.localize('editor.stickyScroll.scrollWithEditor', \"Enable scrolling of the sticky scroll widget with the editor's horizontal scrollbar.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            maxLineCount: EditorIntOption.clampedInt(input.maxLineCount, this.defaultValue.maxLineCount, 1, 10),\n            defaultModel: stringSet(input.defaultModel, this.defaultValue.defaultModel, ['outlineModel', 'foldingProviderModel', 'indentationModel']),\n            scrollWithEditor: boolean(input.scrollWithEditor, this.defaultValue.scrollWithEditor)\n        };\n    }\n}\nclass EditorInlayHints extends BaseEditorOption {\n    constructor() {\n        const defaults = { enabled: 'on', fontSize: 0, fontFamily: '', padding: false };\n        super(138 /* EditorOption.inlayHints */, 'inlayHints', defaults, {\n            'editor.inlayHints.enabled': {\n                type: 'string',\n                default: defaults.enabled,\n                description: nls.localize('inlayHints.enable', \"Enables the inlay hints in the editor.\"),\n                enum: ['on', 'onUnlessPressed', 'offUnlessPressed', 'off'],\n                markdownEnumDescriptions: [\n                    nls.localize('editor.inlayHints.on', \"Inlay hints are enabled\"),\n                    nls.localize('editor.inlayHints.onUnlessPressed', \"Inlay hints are showing by default and hide when holding {0}\", platform.isMacintosh ? `Ctrl+Option` : `Ctrl+Alt`),\n                    nls.localize('editor.inlayHints.offUnlessPressed', \"Inlay hints are hidden by default and show when holding {0}\", platform.isMacintosh ? `Ctrl+Option` : `Ctrl+Alt`),\n                    nls.localize('editor.inlayHints.off', \"Inlay hints are disabled\"),\n                ],\n            },\n            'editor.inlayHints.fontSize': {\n                type: 'number',\n                default: defaults.fontSize,\n                markdownDescription: nls.localize('inlayHints.fontSize', \"Controls font size of inlay hints in the editor. As default the {0} is used when the configured value is less than {1} or greater than the editor font size.\", '`#editor.fontSize#`', '`5`')\n            },\n            'editor.inlayHints.fontFamily': {\n                type: 'string',\n                default: defaults.fontFamily,\n                markdownDescription: nls.localize('inlayHints.fontFamily', \"Controls font family of inlay hints in the editor. When set to empty, the {0} is used.\", '`#editor.fontFamily#`')\n            },\n            'editor.inlayHints.padding': {\n                type: 'boolean',\n                default: defaults.padding,\n                description: nls.localize('inlayHints.padding', \"Enables the padding around the inlay hints in the editor.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        if (typeof input.enabled === 'boolean') {\n            input.enabled = input.enabled ? 'on' : 'off';\n        }\n        return {\n            enabled: stringSet(input.enabled, this.defaultValue.enabled, ['on', 'off', 'offUnlessPressed', 'onUnlessPressed']),\n            fontSize: EditorIntOption.clampedInt(input.fontSize, this.defaultValue.fontSize, 0, 100),\n            fontFamily: EditorStringOption.string(input.fontFamily, this.defaultValue.fontFamily),\n            padding: boolean(input.padding, this.defaultValue.padding)\n        };\n    }\n}\n//#endregion\n//#region lineDecorationsWidth\nclass EditorLineDecorationsWidth extends BaseEditorOption {\n    constructor() {\n        super(64 /* EditorOption.lineDecorationsWidth */, 'lineDecorationsWidth', 10);\n    }\n    validate(input) {\n        if (typeof input === 'string' && /^\\d+(\\.\\d+)?ch$/.test(input)) {\n            const multiple = parseFloat(input.substring(0, input.length - 2));\n            return -multiple; // negative numbers signal a multiple\n        }\n        else {\n            return EditorIntOption.clampedInt(input, this.defaultValue, 0, 1000);\n        }\n    }\n    compute(env, options, value) {\n        if (value < 0) {\n            // negative numbers signal a multiple\n            return EditorIntOption.clampedInt(-value * env.fontInfo.typicalHalfwidthCharacterWidth, this.defaultValue, 0, 1000);\n        }\n        else {\n            return value;\n        }\n    }\n}\n//#endregion\n//#region lineHeight\nclass EditorLineHeight extends EditorFloatOption {\n    constructor() {\n        super(65 /* EditorOption.lineHeight */, 'lineHeight', EDITOR_FONT_DEFAULTS.lineHeight, x => EditorFloatOption.clamp(x, 0, 150), { markdownDescription: nls.localize('lineHeight', \"Controls the line height. \\n - Use 0 to automatically compute the line height from the font size.\\n - Values between 0 and 8 will be used as a multiplier with the font size.\\n - Values greater than or equal to 8 will be used as effective values.\") });\n    }\n    compute(env, options, value) {\n        // The lineHeight is computed from the fontSize if it is 0.\n        // Moreover, the final lineHeight respects the editor zoom level.\n        // So take the result from env.fontInfo\n        return env.fontInfo.lineHeight;\n    }\n}\nclass EditorMinimap extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            enabled: true,\n            size: 'proportional',\n            side: 'right',\n            showSlider: 'mouseover',\n            autohide: false,\n            renderCharacters: true,\n            maxColumn: 120,\n            scale: 1,\n        };\n        super(71 /* EditorOption.minimap */, 'minimap', defaults, {\n            'editor.minimap.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                description: nls.localize('minimap.enabled', \"Controls whether the minimap is shown.\")\n            },\n            'editor.minimap.autohide': {\n                type: 'boolean',\n                default: defaults.autohide,\n                description: nls.localize('minimap.autohide', \"Controls whether the minimap is hidden automatically.\")\n            },\n            'editor.minimap.size': {\n                type: 'string',\n                enum: ['proportional', 'fill', 'fit'],\n                enumDescriptions: [\n                    nls.localize('minimap.size.proportional', \"The minimap has the same size as the editor contents (and might scroll).\"),\n                    nls.localize('minimap.size.fill', \"The minimap will stretch or shrink as necessary to fill the height of the editor (no scrolling).\"),\n                    nls.localize('minimap.size.fit', \"The minimap will shrink as necessary to never be larger than the editor (no scrolling).\"),\n                ],\n                default: defaults.size,\n                description: nls.localize('minimap.size', \"Controls the size of the minimap.\")\n            },\n            'editor.minimap.side': {\n                type: 'string',\n                enum: ['left', 'right'],\n                default: defaults.side,\n                description: nls.localize('minimap.side', \"Controls the side where to render the minimap.\")\n            },\n            'editor.minimap.showSlider': {\n                type: 'string',\n                enum: ['always', 'mouseover'],\n                default: defaults.showSlider,\n                description: nls.localize('minimap.showSlider', \"Controls when the minimap slider is shown.\")\n            },\n            'editor.minimap.scale': {\n                type: 'number',\n                default: defaults.scale,\n                minimum: 1,\n                maximum: 3,\n                enum: [1, 2, 3],\n                description: nls.localize('minimap.scale', \"Scale of content drawn in the minimap: 1, 2 or 3.\")\n            },\n            'editor.minimap.renderCharacters': {\n                type: 'boolean',\n                default: defaults.renderCharacters,\n                description: nls.localize('minimap.renderCharacters', \"Render the actual characters on a line as opposed to color blocks.\")\n            },\n            'editor.minimap.maxColumn': {\n                type: 'number',\n                default: defaults.maxColumn,\n                description: nls.localize('minimap.maxColumn', \"Limit the width of the minimap to render at most a certain number of columns.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            autohide: boolean(input.autohide, this.defaultValue.autohide),\n            size: stringSet(input.size, this.defaultValue.size, ['proportional', 'fill', 'fit']),\n            side: stringSet(input.side, this.defaultValue.side, ['right', 'left']),\n            showSlider: stringSet(input.showSlider, this.defaultValue.showSlider, ['always', 'mouseover']),\n            renderCharacters: boolean(input.renderCharacters, this.defaultValue.renderCharacters),\n            scale: EditorIntOption.clampedInt(input.scale, 1, 1, 3),\n            maxColumn: EditorIntOption.clampedInt(input.maxColumn, this.defaultValue.maxColumn, 1, 10000),\n        };\n    }\n}\n//#endregion\n//#region multiCursorModifier\nfunction _multiCursorModifierFromString(multiCursorModifier) {\n    if (multiCursorModifier === 'ctrlCmd') {\n        return (platform.isMacintosh ? 'metaKey' : 'ctrlKey');\n    }\n    return 'altKey';\n}\nclass EditorPadding extends BaseEditorOption {\n    constructor() {\n        super(82 /* EditorOption.padding */, 'padding', { top: 0, bottom: 0 }, {\n            'editor.padding.top': {\n                type: 'number',\n                default: 0,\n                minimum: 0,\n                maximum: 1000,\n                description: nls.localize('padding.top', \"Controls the amount of space between the top edge of the editor and the first line.\")\n            },\n            'editor.padding.bottom': {\n                type: 'number',\n                default: 0,\n                minimum: 0,\n                maximum: 1000,\n                description: nls.localize('padding.bottom', \"Controls the amount of space between the bottom edge of the editor and the last line.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            top: EditorIntOption.clampedInt(input.top, 0, 0, 1000),\n            bottom: EditorIntOption.clampedInt(input.bottom, 0, 0, 1000)\n        };\n    }\n}\nclass EditorParameterHints extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            enabled: true,\n            cycle: true\n        };\n        super(84 /* EditorOption.parameterHints */, 'parameterHints', defaults, {\n            'editor.parameterHints.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                description: nls.localize('parameterHints.enabled', \"Enables a pop-up that shows parameter documentation and type information as you type.\")\n            },\n            'editor.parameterHints.cycle': {\n                type: 'boolean',\n                default: defaults.cycle,\n                description: nls.localize('parameterHints.cycle', \"Controls whether the parameter hints menu cycles or closes when reaching the end of the list.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            cycle: boolean(input.cycle, this.defaultValue.cycle)\n        };\n    }\n}\n//#endregion\n//#region pixelRatio\nclass EditorPixelRatio extends ComputedEditorOption {\n    constructor() {\n        super(140 /* EditorOption.pixelRatio */);\n    }\n    compute(env, options, _) {\n        return env.pixelRatio;\n    }\n}\nclass EditorQuickSuggestions extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            other: 'on',\n            comments: 'off',\n            strings: 'off'\n        };\n        const types = [\n            { type: 'boolean' },\n            {\n                type: 'string',\n                enum: ['on', 'inline', 'off'],\n                enumDescriptions: [nls.localize('on', \"Quick suggestions show inside the suggest widget\"), nls.localize('inline', \"Quick suggestions show as ghost text\"), nls.localize('off', \"Quick suggestions are disabled\")]\n            }\n        ];\n        super(87 /* EditorOption.quickSuggestions */, 'quickSuggestions', defaults, {\n            type: 'object',\n            additionalProperties: false,\n            properties: {\n                strings: {\n                    anyOf: types,\n                    default: defaults.strings,\n                    description: nls.localize('quickSuggestions.strings', \"Enable quick suggestions inside strings.\")\n                },\n                comments: {\n                    anyOf: types,\n                    default: defaults.comments,\n                    description: nls.localize('quickSuggestions.comments', \"Enable quick suggestions inside comments.\")\n                },\n                other: {\n                    anyOf: types,\n                    default: defaults.other,\n                    description: nls.localize('quickSuggestions.other', \"Enable quick suggestions outside of strings and comments.\")\n                },\n            },\n            default: defaults,\n            markdownDescription: nls.localize('quickSuggestions', \"Controls whether suggestions should automatically show up while typing. This can be controlled for typing in comments, strings, and other code. Quick suggestion can be configured to show as ghost text or with the suggest widget. Also be aware of the '{0}'-setting which controls if suggestions are triggered by special characters.\", `#editor.suggestOnTriggerCharacters#`)\n        });\n        this.defaultValue = defaults;\n    }\n    validate(input) {\n        if (typeof input === 'boolean') {\n            // boolean -> all on/off\n            const value = input ? 'on' : 'off';\n            return { comments: value, strings: value, other: value };\n        }\n        if (!input || typeof input !== 'object') {\n            // invalid object\n            return this.defaultValue;\n        }\n        const { other, comments, strings } = input;\n        const allowedValues = ['on', 'inline', 'off'];\n        let validatedOther;\n        let validatedComments;\n        let validatedStrings;\n        if (typeof other === 'boolean') {\n            validatedOther = other ? 'on' : 'off';\n        }\n        else {\n            validatedOther = stringSet(other, this.defaultValue.other, allowedValues);\n        }\n        if (typeof comments === 'boolean') {\n            validatedComments = comments ? 'on' : 'off';\n        }\n        else {\n            validatedComments = stringSet(comments, this.defaultValue.comments, allowedValues);\n        }\n        if (typeof strings === 'boolean') {\n            validatedStrings = strings ? 'on' : 'off';\n        }\n        else {\n            validatedStrings = stringSet(strings, this.defaultValue.strings, allowedValues);\n        }\n        return {\n            other: validatedOther,\n            comments: validatedComments,\n            strings: validatedStrings\n        };\n    }\n}\nclass EditorRenderLineNumbersOption extends BaseEditorOption {\n    constructor() {\n        super(66 /* EditorOption.lineNumbers */, 'lineNumbers', { renderType: 1 /* RenderLineNumbersType.On */, renderFn: null }, {\n            type: 'string',\n            enum: ['off', 'on', 'relative', 'interval'],\n            enumDescriptions: [\n                nls.localize('lineNumbers.off', \"Line numbers are not rendered.\"),\n                nls.localize('lineNumbers.on', \"Line numbers are rendered as absolute number.\"),\n                nls.localize('lineNumbers.relative', \"Line numbers are rendered as distance in lines to cursor position.\"),\n                nls.localize('lineNumbers.interval', \"Line numbers are rendered every 10 lines.\")\n            ],\n            default: 'on',\n            description: nls.localize('lineNumbers', \"Controls the display of line numbers.\")\n        });\n    }\n    validate(lineNumbers) {\n        let renderType = this.defaultValue.renderType;\n        let renderFn = this.defaultValue.renderFn;\n        if (typeof lineNumbers !== 'undefined') {\n            if (typeof lineNumbers === 'function') {\n                renderType = 4 /* RenderLineNumbersType.Custom */;\n                renderFn = lineNumbers;\n            }\n            else if (lineNumbers === 'interval') {\n                renderType = 3 /* RenderLineNumbersType.Interval */;\n            }\n            else if (lineNumbers === 'relative') {\n                renderType = 2 /* RenderLineNumbersType.Relative */;\n            }\n            else if (lineNumbers === 'on') {\n                renderType = 1 /* RenderLineNumbersType.On */;\n            }\n            else {\n                renderType = 0 /* RenderLineNumbersType.Off */;\n            }\n        }\n        return {\n            renderType,\n            renderFn\n        };\n    }\n}\n//#endregion\n//#region renderValidationDecorations\n/**\n * @internal\n */\nexport function filterValidationDecorations(options) {\n    const renderValidationDecorations = options.get(96 /* EditorOption.renderValidationDecorations */);\n    if (renderValidationDecorations === 'editable') {\n        return options.get(89 /* EditorOption.readOnly */);\n    }\n    return renderValidationDecorations === 'on' ? false : true;\n}\nclass EditorRulers extends BaseEditorOption {\n    constructor() {\n        const defaults = [];\n        const columnSchema = { type: 'number', description: nls.localize('rulers.size', \"Number of monospace characters at which this editor ruler will render.\") };\n        super(100 /* EditorOption.rulers */, 'rulers', defaults, {\n            type: 'array',\n            items: {\n                anyOf: [\n                    columnSchema,\n                    {\n                        type: [\n                            'object'\n                        ],\n                        properties: {\n                            column: columnSchema,\n                            color: {\n                                type: 'string',\n                                description: nls.localize('rulers.color', \"Color of this editor ruler.\"),\n                                format: 'color-hex'\n                            }\n                        }\n                    }\n                ]\n            },\n            default: defaults,\n            description: nls.localize('rulers', \"Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.\")\n        });\n    }\n    validate(input) {\n        if (Array.isArray(input)) {\n            const rulers = [];\n            for (const _element of input) {\n                if (typeof _element === 'number') {\n                    rulers.push({\n                        column: EditorIntOption.clampedInt(_element, 0, 0, 10000),\n                        color: null\n                    });\n                }\n                else if (_element && typeof _element === 'object') {\n                    const element = _element;\n                    rulers.push({\n                        column: EditorIntOption.clampedInt(element.column, 0, 0, 10000),\n                        color: element.color\n                    });\n                }\n            }\n            rulers.sort((a, b) => a.column - b.column);\n            return rulers;\n        }\n        return this.defaultValue;\n    }\n}\n//#endregion\n//#region readonly\n/**\n * Configuration options for readonly message\n */\nclass ReadonlyMessage extends BaseEditorOption {\n    constructor() {\n        const defaults = undefined;\n        super(90 /* EditorOption.readOnlyMessage */, 'readOnlyMessage', defaults);\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        return _input;\n    }\n}\nfunction _scrollbarVisibilityFromString(visibility, defaultValue) {\n    if (typeof visibility !== 'string') {\n        return defaultValue;\n    }\n    switch (visibility) {\n        case 'hidden': return 2 /* ScrollbarVisibility.Hidden */;\n        case 'visible': return 3 /* ScrollbarVisibility.Visible */;\n        default: return 1 /* ScrollbarVisibility.Auto */;\n    }\n}\nclass EditorScrollbar extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            vertical: 1 /* ScrollbarVisibility.Auto */,\n            horizontal: 1 /* ScrollbarVisibility.Auto */,\n            arrowSize: 11,\n            useShadows: true,\n            verticalHasArrows: false,\n            horizontalHasArrows: false,\n            horizontalScrollbarSize: 12,\n            horizontalSliderSize: 12,\n            verticalScrollbarSize: 14,\n            verticalSliderSize: 14,\n            handleMouseWheel: true,\n            alwaysConsumeMouseWheel: true,\n            scrollByPage: false\n        };\n        super(101 /* EditorOption.scrollbar */, 'scrollbar', defaults, {\n            'editor.scrollbar.vertical': {\n                type: 'string',\n                enum: ['auto', 'visible', 'hidden'],\n                enumDescriptions: [\n                    nls.localize('scrollbar.vertical.auto', \"The vertical scrollbar will be visible only when necessary.\"),\n                    nls.localize('scrollbar.vertical.visible', \"The vertical scrollbar will always be visible.\"),\n                    nls.localize('scrollbar.vertical.fit', \"The vertical scrollbar will always be hidden.\"),\n                ],\n                default: 'auto',\n                description: nls.localize('scrollbar.vertical', \"Controls the visibility of the vertical scrollbar.\")\n            },\n            'editor.scrollbar.horizontal': {\n                type: 'string',\n                enum: ['auto', 'visible', 'hidden'],\n                enumDescriptions: [\n                    nls.localize('scrollbar.horizontal.auto', \"The horizontal scrollbar will be visible only when necessary.\"),\n                    nls.localize('scrollbar.horizontal.visible', \"The horizontal scrollbar will always be visible.\"),\n                    nls.localize('scrollbar.horizontal.fit', \"The horizontal scrollbar will always be hidden.\"),\n                ],\n                default: 'auto',\n                description: nls.localize('scrollbar.horizontal', \"Controls the visibility of the horizontal scrollbar.\")\n            },\n            'editor.scrollbar.verticalScrollbarSize': {\n                type: 'number',\n                default: defaults.verticalScrollbarSize,\n                description: nls.localize('scrollbar.verticalScrollbarSize', \"The width of the vertical scrollbar.\")\n            },\n            'editor.scrollbar.horizontalScrollbarSize': {\n                type: 'number',\n                default: defaults.horizontalScrollbarSize,\n                description: nls.localize('scrollbar.horizontalScrollbarSize', \"The height of the horizontal scrollbar.\")\n            },\n            'editor.scrollbar.scrollByPage': {\n                type: 'boolean',\n                default: defaults.scrollByPage,\n                description: nls.localize('scrollbar.scrollByPage', \"Controls whether clicks scroll by page or jump to click position.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        const horizontalScrollbarSize = EditorIntOption.clampedInt(input.horizontalScrollbarSize, this.defaultValue.horizontalScrollbarSize, 0, 1000);\n        const verticalScrollbarSize = EditorIntOption.clampedInt(input.verticalScrollbarSize, this.defaultValue.verticalScrollbarSize, 0, 1000);\n        return {\n            arrowSize: EditorIntOption.clampedInt(input.arrowSize, this.defaultValue.arrowSize, 0, 1000),\n            vertical: _scrollbarVisibilityFromString(input.vertical, this.defaultValue.vertical),\n            horizontal: _scrollbarVisibilityFromString(input.horizontal, this.defaultValue.horizontal),\n            useShadows: boolean(input.useShadows, this.defaultValue.useShadows),\n            verticalHasArrows: boolean(input.verticalHasArrows, this.defaultValue.verticalHasArrows),\n            horizontalHasArrows: boolean(input.horizontalHasArrows, this.defaultValue.horizontalHasArrows),\n            handleMouseWheel: boolean(input.handleMouseWheel, this.defaultValue.handleMouseWheel),\n            alwaysConsumeMouseWheel: boolean(input.alwaysConsumeMouseWheel, this.defaultValue.alwaysConsumeMouseWheel),\n            horizontalScrollbarSize: horizontalScrollbarSize,\n            horizontalSliderSize: EditorIntOption.clampedInt(input.horizontalSliderSize, horizontalScrollbarSize, 0, 1000),\n            verticalScrollbarSize: verticalScrollbarSize,\n            verticalSliderSize: EditorIntOption.clampedInt(input.verticalSliderSize, verticalScrollbarSize, 0, 1000),\n            scrollByPage: boolean(input.scrollByPage, this.defaultValue.scrollByPage),\n        };\n    }\n}\n/**\n * @internal\n*/\nexport const inUntrustedWorkspace = 'inUntrustedWorkspace';\n/**\n * @internal\n */\nexport const unicodeHighlightConfigKeys = {\n    allowedCharacters: 'editor.unicodeHighlight.allowedCharacters',\n    invisibleCharacters: 'editor.unicodeHighlight.invisibleCharacters',\n    nonBasicASCII: 'editor.unicodeHighlight.nonBasicASCII',\n    ambiguousCharacters: 'editor.unicodeHighlight.ambiguousCharacters',\n    includeComments: 'editor.unicodeHighlight.includeComments',\n    includeStrings: 'editor.unicodeHighlight.includeStrings',\n    allowedLocales: 'editor.unicodeHighlight.allowedLocales',\n};\nclass UnicodeHighlight extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            nonBasicASCII: inUntrustedWorkspace,\n            invisibleCharacters: true,\n            ambiguousCharacters: true,\n            includeComments: inUntrustedWorkspace,\n            includeStrings: true,\n            allowedCharacters: {},\n            allowedLocales: { _os: true, _vscode: true },\n        };\n        super(123 /* EditorOption.unicodeHighlighting */, 'unicodeHighlight', defaults, {\n            [unicodeHighlightConfigKeys.nonBasicASCII]: {\n                restricted: true,\n                type: ['boolean', 'string'],\n                enum: [true, false, inUntrustedWorkspace],\n                default: defaults.nonBasicASCII,\n                description: nls.localize('unicodeHighlight.nonBasicASCII', \"Controls whether all non-basic ASCII characters are highlighted. Only characters between U+0020 and U+007E, tab, line-feed and carriage-return are considered basic ASCII.\")\n            },\n            [unicodeHighlightConfigKeys.invisibleCharacters]: {\n                restricted: true,\n                type: 'boolean',\n                default: defaults.invisibleCharacters,\n                description: nls.localize('unicodeHighlight.invisibleCharacters', \"Controls whether characters that just reserve space or have no width at all are highlighted.\")\n            },\n            [unicodeHighlightConfigKeys.ambiguousCharacters]: {\n                restricted: true,\n                type: 'boolean',\n                default: defaults.ambiguousCharacters,\n                description: nls.localize('unicodeHighlight.ambiguousCharacters', \"Controls whether characters are highlighted that can be confused with basic ASCII characters, except those that are common in the current user locale.\")\n            },\n            [unicodeHighlightConfigKeys.includeComments]: {\n                restricted: true,\n                type: ['boolean', 'string'],\n                enum: [true, false, inUntrustedWorkspace],\n                default: defaults.includeComments,\n                description: nls.localize('unicodeHighlight.includeComments', \"Controls whether characters in comments should also be subject to Unicode highlighting.\")\n            },\n            [unicodeHighlightConfigKeys.includeStrings]: {\n                restricted: true,\n                type: ['boolean', 'string'],\n                enum: [true, false, inUntrustedWorkspace],\n                default: defaults.includeStrings,\n                description: nls.localize('unicodeHighlight.includeStrings', \"Controls whether characters in strings should also be subject to Unicode highlighting.\")\n            },\n            [unicodeHighlightConfigKeys.allowedCharacters]: {\n                restricted: true,\n                type: 'object',\n                default: defaults.allowedCharacters,\n                description: nls.localize('unicodeHighlight.allowedCharacters', \"Defines allowed characters that are not being highlighted.\"),\n                additionalProperties: {\n                    type: 'boolean'\n                }\n            },\n            [unicodeHighlightConfigKeys.allowedLocales]: {\n                restricted: true,\n                type: 'object',\n                additionalProperties: {\n                    type: 'boolean'\n                },\n                default: defaults.allowedLocales,\n                description: nls.localize('unicodeHighlight.allowedLocales', \"Unicode characters that are common in allowed locales are not being highlighted.\")\n            },\n        });\n    }\n    applyUpdate(value, update) {\n        let didChange = false;\n        if (update.allowedCharacters && value) {\n            // Treat allowedCharacters atomically\n            if (!objects.equals(value.allowedCharacters, update.allowedCharacters)) {\n                value = Object.assign(Object.assign({}, value), { allowedCharacters: update.allowedCharacters });\n                didChange = true;\n            }\n        }\n        if (update.allowedLocales && value) {\n            // Treat allowedLocales atomically\n            if (!objects.equals(value.allowedLocales, update.allowedLocales)) {\n                value = Object.assign(Object.assign({}, value), { allowedLocales: update.allowedLocales });\n                didChange = true;\n            }\n        }\n        const result = super.applyUpdate(value, update);\n        if (didChange) {\n            return new ApplyUpdateResult(result.newValue, true);\n        }\n        return result;\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            nonBasicASCII: primitiveSet(input.nonBasicASCII, inUntrustedWorkspace, [true, false, inUntrustedWorkspace]),\n            invisibleCharacters: boolean(input.invisibleCharacters, this.defaultValue.invisibleCharacters),\n            ambiguousCharacters: boolean(input.ambiguousCharacters, this.defaultValue.ambiguousCharacters),\n            includeComments: primitiveSet(input.includeComments, inUntrustedWorkspace, [true, false, inUntrustedWorkspace]),\n            includeStrings: primitiveSet(input.includeStrings, inUntrustedWorkspace, [true, false, inUntrustedWorkspace]),\n            allowedCharacters: this.validateBooleanMap(_input.allowedCharacters, this.defaultValue.allowedCharacters),\n            allowedLocales: this.validateBooleanMap(_input.allowedLocales, this.defaultValue.allowedLocales),\n        };\n    }\n    validateBooleanMap(map, defaultValue) {\n        if ((typeof map !== 'object') || !map) {\n            return defaultValue;\n        }\n        const result = {};\n        for (const [key, value] of Object.entries(map)) {\n            if (value === true) {\n                result[key] = true;\n            }\n        }\n        return result;\n    }\n}\n/**\n * Configuration options for inline suggestions\n */\nclass InlineEditorSuggest extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            enabled: true,\n            mode: 'subwordSmart',\n            showToolbar: 'onHover',\n            suppressSuggestions: false,\n            keepOnBlur: false,\n        };\n        super(61 /* EditorOption.inlineSuggest */, 'inlineSuggest', defaults, {\n            'editor.inlineSuggest.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                description: nls.localize('inlineSuggest.enabled', \"Controls whether to automatically show inline suggestions in the editor.\")\n            },\n            'editor.inlineSuggest.showToolbar': {\n                type: 'string',\n                default: defaults.showToolbar,\n                enum: ['always', 'onHover'],\n                enumDescriptions: [\n                    nls.localize('inlineSuggest.showToolbar.always', \"Show the inline suggestion toolbar whenever an inline suggestion is shown.\"),\n                    nls.localize('inlineSuggest.showToolbar.onHover', \"Show the inline suggestion toolbar when hovering over an inline suggestion.\"),\n                ],\n                description: nls.localize('inlineSuggest.showToolbar', \"Controls when to show the inline suggestion toolbar.\"),\n            },\n            'editor.inlineSuggest.suppressSuggestions': {\n                type: 'boolean',\n                default: defaults.suppressSuggestions,\n                description: nls.localize('inlineSuggest.suppressSuggestions', \"Controls how inline suggestions interact with the suggest widget. If enabled, the suggest widget is not shown automatically when inline suggestions are available.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            mode: stringSet(input.mode, this.defaultValue.mode, ['prefix', 'subword', 'subwordSmart']),\n            showToolbar: stringSet(input.showToolbar, this.defaultValue.showToolbar, ['always', 'onHover']),\n            suppressSuggestions: boolean(input.suppressSuggestions, this.defaultValue.suppressSuggestions),\n            keepOnBlur: boolean(input.keepOnBlur, this.defaultValue.keepOnBlur),\n        };\n    }\n}\n/**\n * Configuration options for inline suggestions\n */\nclass BracketPairColorization extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            enabled: EDITOR_MODEL_DEFAULTS.bracketPairColorizationOptions.enabled,\n            independentColorPoolPerBracketType: EDITOR_MODEL_DEFAULTS.bracketPairColorizationOptions.independentColorPoolPerBracketType,\n        };\n        super(14 /* EditorOption.bracketPairColorization */, 'bracketPairColorization', defaults, {\n            'editor.bracketPairColorization.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                markdownDescription: nls.localize('bracketPairColorization.enabled', \"Controls whether bracket pair colorization is enabled or not. Use {0} to override the bracket highlight colors.\", '`#workbench.colorCustomizations#`')\n            },\n            'editor.bracketPairColorization.independentColorPoolPerBracketType': {\n                type: 'boolean',\n                default: defaults.independentColorPoolPerBracketType,\n                description: nls.localize('bracketPairColorization.independentColorPoolPerBracketType', \"Controls whether each bracket type has its own independent color pool.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            independentColorPoolPerBracketType: boolean(input.independentColorPoolPerBracketType, this.defaultValue.independentColorPoolPerBracketType),\n        };\n    }\n}\n/**\n * Configuration options for inline suggestions\n */\nclass GuideOptions extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            bracketPairs: false,\n            bracketPairsHorizontal: 'active',\n            highlightActiveBracketPair: true,\n            indentation: true,\n            highlightActiveIndentation: true\n        };\n        super(15 /* EditorOption.guides */, 'guides', defaults, {\n            'editor.guides.bracketPairs': {\n                type: ['boolean', 'string'],\n                enum: [true, 'active', false],\n                enumDescriptions: [\n                    nls.localize('editor.guides.bracketPairs.true', \"Enables bracket pair guides.\"),\n                    nls.localize('editor.guides.bracketPairs.active', \"Enables bracket pair guides only for the active bracket pair.\"),\n                    nls.localize('editor.guides.bracketPairs.false', \"Disables bracket pair guides.\"),\n                ],\n                default: defaults.bracketPairs,\n                description: nls.localize('editor.guides.bracketPairs', \"Controls whether bracket pair guides are enabled or not.\")\n            },\n            'editor.guides.bracketPairsHorizontal': {\n                type: ['boolean', 'string'],\n                enum: [true, 'active', false],\n                enumDescriptions: [\n                    nls.localize('editor.guides.bracketPairsHorizontal.true', \"Enables horizontal guides as addition to vertical bracket pair guides.\"),\n                    nls.localize('editor.guides.bracketPairsHorizontal.active', \"Enables horizontal guides only for the active bracket pair.\"),\n                    nls.localize('editor.guides.bracketPairsHorizontal.false', \"Disables horizontal bracket pair guides.\"),\n                ],\n                default: defaults.bracketPairsHorizontal,\n                description: nls.localize('editor.guides.bracketPairsHorizontal', \"Controls whether horizontal bracket pair guides are enabled or not.\")\n            },\n            'editor.guides.highlightActiveBracketPair': {\n                type: 'boolean',\n                default: defaults.highlightActiveBracketPair,\n                description: nls.localize('editor.guides.highlightActiveBracketPair', \"Controls whether the editor should highlight the active bracket pair.\")\n            },\n            'editor.guides.indentation': {\n                type: 'boolean',\n                default: defaults.indentation,\n                description: nls.localize('editor.guides.indentation', \"Controls whether the editor should render indent guides.\")\n            },\n            'editor.guides.highlightActiveIndentation': {\n                type: ['boolean', 'string'],\n                enum: [true, 'always', false],\n                enumDescriptions: [\n                    nls.localize('editor.guides.highlightActiveIndentation.true', \"Highlights the active indent guide.\"),\n                    nls.localize('editor.guides.highlightActiveIndentation.always', \"Highlights the active indent guide even if bracket guides are highlighted.\"),\n                    nls.localize('editor.guides.highlightActiveIndentation.false', \"Do not highlight the active indent guide.\"),\n                ],\n                default: defaults.highlightActiveIndentation,\n                description: nls.localize('editor.guides.highlightActiveIndentation', \"Controls whether the editor should highlight the active indent guide.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            bracketPairs: primitiveSet(input.bracketPairs, this.defaultValue.bracketPairs, [true, false, 'active']),\n            bracketPairsHorizontal: primitiveSet(input.bracketPairsHorizontal, this.defaultValue.bracketPairsHorizontal, [true, false, 'active']),\n            highlightActiveBracketPair: boolean(input.highlightActiveBracketPair, this.defaultValue.highlightActiveBracketPair),\n            indentation: boolean(input.indentation, this.defaultValue.indentation),\n            highlightActiveIndentation: primitiveSet(input.highlightActiveIndentation, this.defaultValue.highlightActiveIndentation, [true, false, 'always']),\n        };\n    }\n}\nfunction primitiveSet(value, defaultValue, allowedValues) {\n    const idx = allowedValues.indexOf(value);\n    if (idx === -1) {\n        return defaultValue;\n    }\n    return allowedValues[idx];\n}\nclass EditorSuggest extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            insertMode: 'insert',\n            filterGraceful: true,\n            snippetsPreventQuickSuggestions: false,\n            localityBonus: false,\n            shareSuggestSelections: false,\n            selectionMode: 'always',\n            showIcons: true,\n            showStatusBar: false,\n            preview: false,\n            previewMode: 'subwordSmart',\n            showInlineDetails: true,\n            showMethods: true,\n            showFunctions: true,\n            showConstructors: true,\n            showDeprecated: true,\n            matchOnWordStartOnly: true,\n            showFields: true,\n            showVariables: true,\n            showClasses: true,\n            showStructs: true,\n            showInterfaces: true,\n            showModules: true,\n            showProperties: true,\n            showEvents: true,\n            showOperators: true,\n            showUnits: true,\n            showValues: true,\n            showConstants: true,\n            showEnums: true,\n            showEnumMembers: true,\n            showKeywords: true,\n            showWords: true,\n            showColors: true,\n            showFiles: true,\n            showReferences: true,\n            showFolders: true,\n            showTypeParameters: true,\n            showSnippets: true,\n            showUsers: true,\n            showIssues: true,\n        };\n        super(116 /* EditorOption.suggest */, 'suggest', defaults, {\n            'editor.suggest.insertMode': {\n                type: 'string',\n                enum: ['insert', 'replace'],\n                enumDescriptions: [\n                    nls.localize('suggest.insertMode.insert', \"Insert suggestion without overwriting text right of the cursor.\"),\n                    nls.localize('suggest.insertMode.replace', \"Insert suggestion and overwrite text right of the cursor.\"),\n                ],\n                default: defaults.insertMode,\n                description: nls.localize('suggest.insertMode', \"Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.\")\n            },\n            'editor.suggest.filterGraceful': {\n                type: 'boolean',\n                default: defaults.filterGraceful,\n                description: nls.localize('suggest.filterGraceful', \"Controls whether filtering and sorting suggestions accounts for small typos.\")\n            },\n            'editor.suggest.localityBonus': {\n                type: 'boolean',\n                default: defaults.localityBonus,\n                description: nls.localize('suggest.localityBonus', \"Controls whether sorting favors words that appear close to the cursor.\")\n            },\n            'editor.suggest.shareSuggestSelections': {\n                type: 'boolean',\n                default: defaults.shareSuggestSelections,\n                markdownDescription: nls.localize('suggest.shareSuggestSelections', \"Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).\")\n            },\n            'editor.suggest.selectionMode': {\n                type: 'string',\n                enum: ['always', 'never', 'whenTriggerCharacter', 'whenQuickSuggestion'],\n                enumDescriptions: [\n                    nls.localize('suggest.insertMode.always', \"Always select a suggestion when automatically triggering IntelliSense.\"),\n                    nls.localize('suggest.insertMode.never', \"Never select a suggestion when automatically triggering IntelliSense.\"),\n                    nls.localize('suggest.insertMode.whenTriggerCharacter', \"Select a suggestion only when triggering IntelliSense from a trigger character.\"),\n                    nls.localize('suggest.insertMode.whenQuickSuggestion', \"Select a suggestion only when triggering IntelliSense as you type.\"),\n                ],\n                default: defaults.selectionMode,\n                markdownDescription: nls.localize('suggest.selectionMode', \"Controls whether a suggestion is selected when the widget shows. Note that this only applies to automatically triggered suggestions (`#editor.quickSuggestions#` and `#editor.suggestOnTriggerCharacters#`) and that a suggestion is always selected when explicitly invoked, e.g via `Ctrl+Space`.\")\n            },\n            'editor.suggest.snippetsPreventQuickSuggestions': {\n                type: 'boolean',\n                default: defaults.snippetsPreventQuickSuggestions,\n                description: nls.localize('suggest.snippetsPreventQuickSuggestions', \"Controls whether an active snippet prevents quick suggestions.\")\n            },\n            'editor.suggest.showIcons': {\n                type: 'boolean',\n                default: defaults.showIcons,\n                description: nls.localize('suggest.showIcons', \"Controls whether to show or hide icons in suggestions.\")\n            },\n            'editor.suggest.showStatusBar': {\n                type: 'boolean',\n                default: defaults.showStatusBar,\n                description: nls.localize('suggest.showStatusBar', \"Controls the visibility of the status bar at the bottom of the suggest widget.\")\n            },\n            'editor.suggest.preview': {\n                type: 'boolean',\n                default: defaults.preview,\n                description: nls.localize('suggest.preview', \"Controls whether to preview the suggestion outcome in the editor.\")\n            },\n            'editor.suggest.showInlineDetails': {\n                type: 'boolean',\n                default: defaults.showInlineDetails,\n                description: nls.localize('suggest.showInlineDetails', \"Controls whether suggest details show inline with the label or only in the details widget.\")\n            },\n            'editor.suggest.maxVisibleSuggestions': {\n                type: 'number',\n                deprecationMessage: nls.localize('suggest.maxVisibleSuggestions.dep', \"This setting is deprecated. The suggest widget can now be resized.\"),\n            },\n            'editor.suggest.filteredTypes': {\n                type: 'object',\n                deprecationMessage: nls.localize('deprecated', \"This setting is deprecated, please use separate settings like 'editor.suggest.showKeywords' or 'editor.suggest.showSnippets' instead.\")\n            },\n            'editor.suggest.showMethods': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showMethods', \"When enabled IntelliSense shows `method`-suggestions.\")\n            },\n            'editor.suggest.showFunctions': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showFunctions', \"When enabled IntelliSense shows `function`-suggestions.\")\n            },\n            'editor.suggest.showConstructors': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showConstructors', \"When enabled IntelliSense shows `constructor`-suggestions.\")\n            },\n            'editor.suggest.showDeprecated': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showDeprecated', \"When enabled IntelliSense shows `deprecated`-suggestions.\")\n            },\n            'editor.suggest.matchOnWordStartOnly': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.matchOnWordStartOnly', \"When enabled IntelliSense filtering requires that the first character matches on a word start. For example, `c` on `Console` or `WebContext` but _not_ on `description`. When disabled IntelliSense will show more results but still sorts them by match quality.\")\n            },\n            'editor.suggest.showFields': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showFields', \"When enabled IntelliSense shows `field`-suggestions.\")\n            },\n            'editor.suggest.showVariables': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showVariables', \"When enabled IntelliSense shows `variable`-suggestions.\")\n            },\n            'editor.suggest.showClasses': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showClasss', \"When enabled IntelliSense shows `class`-suggestions.\")\n            },\n            'editor.suggest.showStructs': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showStructs', \"When enabled IntelliSense shows `struct`-suggestions.\")\n            },\n            'editor.suggest.showInterfaces': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showInterfaces', \"When enabled IntelliSense shows `interface`-suggestions.\")\n            },\n            'editor.suggest.showModules': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showModules', \"When enabled IntelliSense shows `module`-suggestions.\")\n            },\n            'editor.suggest.showProperties': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showPropertys', \"When enabled IntelliSense shows `property`-suggestions.\")\n            },\n            'editor.suggest.showEvents': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showEvents', \"When enabled IntelliSense shows `event`-suggestions.\")\n            },\n            'editor.suggest.showOperators': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showOperators', \"When enabled IntelliSense shows `operator`-suggestions.\")\n            },\n            'editor.suggest.showUnits': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showUnits', \"When enabled IntelliSense shows `unit`-suggestions.\")\n            },\n            'editor.suggest.showValues': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showValues', \"When enabled IntelliSense shows `value`-suggestions.\")\n            },\n            'editor.suggest.showConstants': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showConstants', \"When enabled IntelliSense shows `constant`-suggestions.\")\n            },\n            'editor.suggest.showEnums': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showEnums', \"When enabled IntelliSense shows `enum`-suggestions.\")\n            },\n            'editor.suggest.showEnumMembers': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showEnumMembers', \"When enabled IntelliSense shows `enumMember`-suggestions.\")\n            },\n            'editor.suggest.showKeywords': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showKeywords', \"When enabled IntelliSense shows `keyword`-suggestions.\")\n            },\n            'editor.suggest.showWords': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showTexts', \"When enabled IntelliSense shows `text`-suggestions.\")\n            },\n            'editor.suggest.showColors': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showColors', \"When enabled IntelliSense shows `color`-suggestions.\")\n            },\n            'editor.suggest.showFiles': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showFiles', \"When enabled IntelliSense shows `file`-suggestions.\")\n            },\n            'editor.suggest.showReferences': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showReferences', \"When enabled IntelliSense shows `reference`-suggestions.\")\n            },\n            'editor.suggest.showCustomcolors': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showCustomcolors', \"When enabled IntelliSense shows `customcolor`-suggestions.\")\n            },\n            'editor.suggest.showFolders': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showFolders', \"When enabled IntelliSense shows `folder`-suggestions.\")\n            },\n            'editor.suggest.showTypeParameters': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showTypeParameters', \"When enabled IntelliSense shows `typeParameter`-suggestions.\")\n            },\n            'editor.suggest.showSnippets': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showSnippets', \"When enabled IntelliSense shows `snippet`-suggestions.\")\n            },\n            'editor.suggest.showUsers': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showUsers', \"When enabled IntelliSense shows `user`-suggestions.\")\n            },\n            'editor.suggest.showIssues': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showIssues', \"When enabled IntelliSense shows `issues`-suggestions.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            insertMode: stringSet(input.insertMode, this.defaultValue.insertMode, ['insert', 'replace']),\n            filterGraceful: boolean(input.filterGraceful, this.defaultValue.filterGraceful),\n            snippetsPreventQuickSuggestions: boolean(input.snippetsPreventQuickSuggestions, this.defaultValue.filterGraceful),\n            localityBonus: boolean(input.localityBonus, this.defaultValue.localityBonus),\n            shareSuggestSelections: boolean(input.shareSuggestSelections, this.defaultValue.shareSuggestSelections),\n            selectionMode: stringSet(input.selectionMode, this.defaultValue.selectionMode, ['always', 'never', 'whenQuickSuggestion', 'whenTriggerCharacter']),\n            showIcons: boolean(input.showIcons, this.defaultValue.showIcons),\n            showStatusBar: boolean(input.showStatusBar, this.defaultValue.showStatusBar),\n            preview: boolean(input.preview, this.defaultValue.preview),\n            previewMode: stringSet(input.previewMode, this.defaultValue.previewMode, ['prefix', 'subword', 'subwordSmart']),\n            showInlineDetails: boolean(input.showInlineDetails, this.defaultValue.showInlineDetails),\n            showMethods: boolean(input.showMethods, this.defaultValue.showMethods),\n            showFunctions: boolean(input.showFunctions, this.defaultValue.showFunctions),\n            showConstructors: boolean(input.showConstructors, this.defaultValue.showConstructors),\n            showDeprecated: boolean(input.showDeprecated, this.defaultValue.showDeprecated),\n            matchOnWordStartOnly: boolean(input.matchOnWordStartOnly, this.defaultValue.matchOnWordStartOnly),\n            showFields: boolean(input.showFields, this.defaultValue.showFields),\n            showVariables: boolean(input.showVariables, this.defaultValue.showVariables),\n            showClasses: boolean(input.showClasses, this.defaultValue.showClasses),\n            showStructs: boolean(input.showStructs, this.defaultValue.showStructs),\n            showInterfaces: boolean(input.showInterfaces, this.defaultValue.showInterfaces),\n            showModules: boolean(input.showModules, this.defaultValue.showModules),\n            showProperties: boolean(input.showProperties, this.defaultValue.showProperties),\n            showEvents: boolean(input.showEvents, this.defaultValue.showEvents),\n            showOperators: boolean(input.showOperators, this.defaultValue.showOperators),\n            showUnits: boolean(input.showUnits, this.defaultValue.showUnits),\n            showValues: boolean(input.showValues, this.defaultValue.showValues),\n            showConstants: boolean(input.showConstants, this.defaultValue.showConstants),\n            showEnums: boolean(input.showEnums, this.defaultValue.showEnums),\n            showEnumMembers: boolean(input.showEnumMembers, this.defaultValue.showEnumMembers),\n            showKeywords: boolean(input.showKeywords, this.defaultValue.showKeywords),\n            showWords: boolean(input.showWords, this.defaultValue.showWords),\n            showColors: boolean(input.showColors, this.defaultValue.showColors),\n            showFiles: boolean(input.showFiles, this.defaultValue.showFiles),\n            showReferences: boolean(input.showReferences, this.defaultValue.showReferences),\n            showFolders: boolean(input.showFolders, this.defaultValue.showFolders),\n            showTypeParameters: boolean(input.showTypeParameters, this.defaultValue.showTypeParameters),\n            showSnippets: boolean(input.showSnippets, this.defaultValue.showSnippets),\n            showUsers: boolean(input.showUsers, this.defaultValue.showUsers),\n            showIssues: boolean(input.showIssues, this.defaultValue.showIssues),\n        };\n    }\n}\nclass SmartSelect extends BaseEditorOption {\n    constructor() {\n        super(111 /* EditorOption.smartSelect */, 'smartSelect', {\n            selectLeadingAndTrailingWhitespace: true,\n            selectSubwords: true,\n        }, {\n            'editor.smartSelect.selectLeadingAndTrailingWhitespace': {\n                description: nls.localize('selectLeadingAndTrailingWhitespace', \"Whether leading and trailing whitespace should always be selected.\"),\n                default: true,\n                type: 'boolean'\n            },\n            'editor.smartSelect.selectSubwords': {\n                description: nls.localize('selectSubwords', \"Whether subwords (like 'foo' in 'fooBar' or 'foo_bar') should be selected.\"),\n                default: true,\n                type: 'boolean'\n            }\n        });\n    }\n    validate(input) {\n        if (!input || typeof input !== 'object') {\n            return this.defaultValue;\n        }\n        return {\n            selectLeadingAndTrailingWhitespace: boolean(input.selectLeadingAndTrailingWhitespace, this.defaultValue.selectLeadingAndTrailingWhitespace),\n            selectSubwords: boolean(input.selectSubwords, this.defaultValue.selectSubwords),\n        };\n    }\n}\nclass WrappingIndentOption extends BaseEditorOption {\n    constructor() {\n        super(135 /* EditorOption.wrappingIndent */, 'wrappingIndent', 1 /* WrappingIndent.Same */, {\n            'editor.wrappingIndent': {\n                type: 'string',\n                enum: ['none', 'same', 'indent', 'deepIndent'],\n                enumDescriptions: [\n                    nls.localize('wrappingIndent.none', \"No indentation. Wrapped lines begin at column 1.\"),\n                    nls.localize('wrappingIndent.same', \"Wrapped lines get the same indentation as the parent.\"),\n                    nls.localize('wrappingIndent.indent', \"Wrapped lines get +1 indentation toward the parent.\"),\n                    nls.localize('wrappingIndent.deepIndent', \"Wrapped lines get +2 indentation toward the parent.\"),\n                ],\n                description: nls.localize('wrappingIndent', \"Controls the indentation of wrapped lines.\"),\n                default: 'same'\n            }\n        });\n    }\n    validate(input) {\n        switch (input) {\n            case 'none': return 0 /* WrappingIndent.None */;\n            case 'same': return 1 /* WrappingIndent.Same */;\n            case 'indent': return 2 /* WrappingIndent.Indent */;\n            case 'deepIndent': return 3 /* WrappingIndent.DeepIndent */;\n        }\n        return 1 /* WrappingIndent.Same */;\n    }\n    compute(env, options, value) {\n        const accessibilitySupport = options.get(2 /* EditorOption.accessibilitySupport */);\n        if (accessibilitySupport === 2 /* AccessibilitySupport.Enabled */) {\n            // if we know for a fact that a screen reader is attached, we use no indent wrapping to\n            // help that the editor's wrapping points match the textarea's wrapping points\n            return 0 /* WrappingIndent.None */;\n        }\n        return value;\n    }\n}\nclass EditorWrappingInfoComputer extends ComputedEditorOption {\n    constructor() {\n        super(143 /* EditorOption.wrappingInfo */);\n    }\n    compute(env, options, _) {\n        const layoutInfo = options.get(142 /* EditorOption.layoutInfo */);\n        return {\n            isDominatedByLongLines: env.isDominatedByLongLines,\n            isWordWrapMinified: layoutInfo.isWordWrapMinified,\n            isViewportWrapping: layoutInfo.isViewportWrapping,\n            wrappingColumn: layoutInfo.wrappingColumn,\n        };\n    }\n}\nclass EditorDropIntoEditor extends BaseEditorOption {\n    constructor() {\n        const defaults = { enabled: true, showDropSelector: 'afterDrop' };\n        super(35 /* EditorOption.dropIntoEditor */, 'dropIntoEditor', defaults, {\n            'editor.dropIntoEditor.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                markdownDescription: nls.localize('dropIntoEditor.enabled', \"Controls whether you can drag and drop a file into a text editor by holding down `shift` (instead of opening the file in an editor).\"),\n            },\n            'editor.dropIntoEditor.showDropSelector': {\n                type: 'string',\n                markdownDescription: nls.localize('dropIntoEditor.showDropSelector', \"Controls if a widget is shown when dropping files into the editor. This widget lets you control how the file is dropped.\"),\n                enum: [\n                    'afterDrop',\n                    'never'\n                ],\n                enumDescriptions: [\n                    nls.localize('dropIntoEditor.showDropSelector.afterDrop', \"Show the drop selector widget after a file is dropped into the editor.\"),\n                    nls.localize('dropIntoEditor.showDropSelector.never', \"Never show the drop selector widget. Instead the default drop provider is always used.\"),\n                ],\n                default: 'afterDrop',\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            showDropSelector: stringSet(input.showDropSelector, this.defaultValue.showDropSelector, ['afterDrop', 'never']),\n        };\n    }\n}\nclass EditorPasteAs extends BaseEditorOption {\n    constructor() {\n        const defaults = { enabled: true, showPasteSelector: 'afterPaste' };\n        super(83 /* EditorOption.pasteAs */, 'pasteAs', defaults, {\n            'editor.pasteAs.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                markdownDescription: nls.localize('pasteAs.enabled', \"Controls whether you can paste content in different ways.\"),\n            },\n            'editor.pasteAs.showPasteSelector': {\n                type: 'string',\n                markdownDescription: nls.localize('pasteAs.showPasteSelector', \"Controls if a widget is shown when pasting content in to the editor. This widget lets you control how the file is pasted.\"),\n                enum: [\n                    'afterPaste',\n                    'never'\n                ],\n                enumDescriptions: [\n                    nls.localize('pasteAs.showPasteSelector.afterPaste', \"Show the paste selector widget after content is pasted into the editor.\"),\n                    nls.localize('pasteAs.showPasteSelector.never', \"Never show the paste selector widget. Instead the default pasting behavior is always used.\"),\n                ],\n                default: 'afterPaste',\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            showPasteSelector: stringSet(input.showPasteSelector, this.defaultValue.showPasteSelector, ['afterPaste', 'never']),\n        };\n    }\n}\n//#endregion\nconst DEFAULT_WINDOWS_FONT_FAMILY = 'Consolas, \\'Courier New\\', monospace';\nconst DEFAULT_MAC_FONT_FAMILY = 'Menlo, Monaco, \\'Courier New\\', monospace';\nconst DEFAULT_LINUX_FONT_FAMILY = '\\'Droid Sans Mono\\', \\'monospace\\', monospace';\n/**\n * @internal\n */\nexport const EDITOR_FONT_DEFAULTS = {\n    fontFamily: (platform.isMacintosh ? DEFAULT_MAC_FONT_FAMILY : (platform.isLinux ? DEFAULT_LINUX_FONT_FAMILY : DEFAULT_WINDOWS_FONT_FAMILY)),\n    fontWeight: 'normal',\n    fontSize: (platform.isMacintosh ? 12 : 14),\n    lineHeight: 0,\n    letterSpacing: 0,\n};\n/**\n * @internal\n */\nexport const editorOptionsRegistry = [];\nfunction register(option) {\n    editorOptionsRegistry[option.id] = option;\n    return option;\n}\nexport const EditorOptions = {\n    acceptSuggestionOnCommitCharacter: register(new EditorBooleanOption(0 /* EditorOption.acceptSuggestionOnCommitCharacter */, 'acceptSuggestionOnCommitCharacter', true, { markdownDescription: nls.localize('acceptSuggestionOnCommitCharacter', \"Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.\") })),\n    acceptSuggestionOnEnter: register(new EditorStringEnumOption(1 /* EditorOption.acceptSuggestionOnEnter */, 'acceptSuggestionOnEnter', 'on', ['on', 'smart', 'off'], {\n        markdownEnumDescriptions: [\n            '',\n            nls.localize('acceptSuggestionOnEnterSmart', \"Only accept a suggestion with `Enter` when it makes a textual change.\"),\n            ''\n        ],\n        markdownDescription: nls.localize('acceptSuggestionOnEnter', \"Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.\")\n    })),\n    accessibilitySupport: register(new EditorAccessibilitySupport()),\n    accessibilityPageSize: register(new EditorIntOption(3 /* EditorOption.accessibilityPageSize */, 'accessibilityPageSize', 10, 1, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, {\n        description: nls.localize('accessibilityPageSize', \"Controls the number of lines in the editor that can be read out by a screen reader at once. When we detect a screen reader we automatically set the default to be 500. Warning: this has a performance implication for numbers larger than the default.\"),\n        tags: ['accessibility']\n    })),\n    ariaLabel: register(new EditorStringOption(4 /* EditorOption.ariaLabel */, 'ariaLabel', nls.localize('editorViewAccessibleLabel', \"Editor content\"))),\n    ariaRequired: register(new EditorBooleanOption(5 /* EditorOption.ariaRequired */, 'ariaRequired', false, undefined)),\n    screenReaderAnnounceInlineSuggestion: register(new EditorBooleanOption(7 /* EditorOption.screenReaderAnnounceInlineSuggestion */, 'screenReaderAnnounceInlineSuggestion', true, {\n        description: nls.localize('screenReaderAnnounceInlineSuggestion', \"Control whether inline suggestions are announced by a screen reader.\"),\n        tags: ['accessibility']\n    })),\n    autoClosingBrackets: register(new EditorStringEnumOption(6 /* EditorOption.autoClosingBrackets */, 'autoClosingBrackets', 'languageDefined', ['always', 'languageDefined', 'beforeWhitespace', 'never'], {\n        enumDescriptions: [\n            '',\n            nls.localize('editor.autoClosingBrackets.languageDefined', \"Use language configurations to determine when to autoclose brackets.\"),\n            nls.localize('editor.autoClosingBrackets.beforeWhitespace', \"Autoclose brackets only when the cursor is to the left of whitespace.\"),\n            '',\n        ],\n        description: nls.localize('autoClosingBrackets', \"Controls whether the editor should automatically close brackets after the user adds an opening bracket.\")\n    })),\n    autoClosingDelete: register(new EditorStringEnumOption(8 /* EditorOption.autoClosingDelete */, 'autoClosingDelete', 'auto', ['always', 'auto', 'never'], {\n        enumDescriptions: [\n            '',\n            nls.localize('editor.autoClosingDelete.auto', \"Remove adjacent closing quotes or brackets only if they were automatically inserted.\"),\n            '',\n        ],\n        description: nls.localize('autoClosingDelete', \"Controls whether the editor should remove adjacent closing quotes or brackets when deleting.\")\n    })),\n    autoClosingOvertype: register(new EditorStringEnumOption(9 /* EditorOption.autoClosingOvertype */, 'autoClosingOvertype', 'auto', ['always', 'auto', 'never'], {\n        enumDescriptions: [\n            '',\n            nls.localize('editor.autoClosingOvertype.auto', \"Type over closing quotes or brackets only if they were automatically inserted.\"),\n            '',\n        ],\n        description: nls.localize('autoClosingOvertype', \"Controls whether the editor should type over closing quotes or brackets.\")\n    })),\n    autoClosingQuotes: register(new EditorStringEnumOption(10 /* EditorOption.autoClosingQuotes */, 'autoClosingQuotes', 'languageDefined', ['always', 'languageDefined', 'beforeWhitespace', 'never'], {\n        enumDescriptions: [\n            '',\n            nls.localize('editor.autoClosingQuotes.languageDefined', \"Use language configurations to determine when to autoclose quotes.\"),\n            nls.localize('editor.autoClosingQuotes.beforeWhitespace', \"Autoclose quotes only when the cursor is to the left of whitespace.\"),\n            '',\n        ],\n        description: nls.localize('autoClosingQuotes', \"Controls whether the editor should automatically close quotes after the user adds an opening quote.\")\n    })),\n    autoIndent: register(new EditorEnumOption(11 /* EditorOption.autoIndent */, 'autoIndent', 4 /* EditorAutoIndentStrategy.Full */, 'full', ['none', 'keep', 'brackets', 'advanced', 'full'], _autoIndentFromString, {\n        enumDescriptions: [\n            nls.localize('editor.autoIndent.none', \"The editor will not insert indentation automatically.\"),\n            nls.localize('editor.autoIndent.keep', \"The editor will keep the current line's indentation.\"),\n            nls.localize('editor.autoIndent.brackets', \"The editor will keep the current line's indentation and honor language defined brackets.\"),\n            nls.localize('editor.autoIndent.advanced', \"The editor will keep the current line's indentation, honor language defined brackets and invoke special onEnterRules defined by languages.\"),\n            nls.localize('editor.autoIndent.full', \"The editor will keep the current line's indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages.\"),\n        ],\n        description: nls.localize('autoIndent', \"Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.\")\n    })),\n    automaticLayout: register(new EditorBooleanOption(12 /* EditorOption.automaticLayout */, 'automaticLayout', false)),\n    autoSurround: register(new EditorStringEnumOption(13 /* EditorOption.autoSurround */, 'autoSurround', 'languageDefined', ['languageDefined', 'quotes', 'brackets', 'never'], {\n        enumDescriptions: [\n            nls.localize('editor.autoSurround.languageDefined', \"Use language configurations to determine when to automatically surround selections.\"),\n            nls.localize('editor.autoSurround.quotes', \"Surround with quotes but not brackets.\"),\n            nls.localize('editor.autoSurround.brackets', \"Surround with brackets but not quotes.\"),\n            ''\n        ],\n        description: nls.localize('autoSurround', \"Controls whether the editor should automatically surround selections when typing quotes or brackets.\")\n    })),\n    bracketPairColorization: register(new BracketPairColorization()),\n    bracketPairGuides: register(new GuideOptions()),\n    stickyTabStops: register(new EditorBooleanOption(114 /* EditorOption.stickyTabStops */, 'stickyTabStops', false, { description: nls.localize('stickyTabStops', \"Emulate selection behavior of tab characters when using spaces for indentation. Selection will stick to tab stops.\") })),\n    codeLens: register(new EditorBooleanOption(16 /* EditorOption.codeLens */, 'codeLens', true, { description: nls.localize('codeLens', \"Controls whether the editor shows CodeLens.\") })),\n    codeLensFontFamily: register(new EditorStringOption(17 /* EditorOption.codeLensFontFamily */, 'codeLensFontFamily', '', { description: nls.localize('codeLensFontFamily', \"Controls the font family for CodeLens.\") })),\n    codeLensFontSize: register(new EditorIntOption(18 /* EditorOption.codeLensFontSize */, 'codeLensFontSize', 0, 0, 100, {\n        type: 'number',\n        default: 0,\n        minimum: 0,\n        maximum: 100,\n        markdownDescription: nls.localize('codeLensFontSize', \"Controls the font size in pixels for CodeLens. When set to 0, 90% of `#editor.fontSize#` is used.\")\n    })),\n    colorDecorators: register(new EditorBooleanOption(19 /* EditorOption.colorDecorators */, 'colorDecorators', true, { description: nls.localize('colorDecorators', \"Controls whether the editor should render the inline color decorators and color picker.\") })),\n    colorDecoratorActivatedOn: register(new EditorStringEnumOption(145 /* EditorOption.colorDecoratorsActivatedOn */, 'colorDecoratorsActivatedOn', 'clickAndHover', ['clickAndHover', 'hover', 'click'], {\n        enumDescriptions: [\n            nls.localize('editor.colorDecoratorActivatedOn.clickAndHover', \"Make the color picker appear both on click and hover of the color decorator\"),\n            nls.localize('editor.colorDecoratorActivatedOn.hover', \"Make the color picker appear on hover of the color decorator\"),\n            nls.localize('editor.colorDecoratorActivatedOn.click', \"Make the color picker appear on click of the color decorator\")\n        ],\n        description: nls.localize('colorDecoratorActivatedOn', \"Controls the condition to make a color picker appear from a color decorator\")\n    })),\n    colorDecoratorsLimit: register(new EditorIntOption(20 /* EditorOption.colorDecoratorsLimit */, 'colorDecoratorsLimit', 500, 1, 1000000, {\n        markdownDescription: nls.localize('colorDecoratorsLimit', \"Controls the max number of color decorators that can be rendered in an editor at once.\")\n    })),\n    columnSelection: register(new EditorBooleanOption(21 /* EditorOption.columnSelection */, 'columnSelection', false, { description: nls.localize('columnSelection', \"Enable that the selection with the mouse and keys is doing column selection.\") })),\n    comments: register(new EditorComments()),\n    contextmenu: register(new EditorBooleanOption(23 /* EditorOption.contextmenu */, 'contextmenu', true)),\n    copyWithSyntaxHighlighting: register(new EditorBooleanOption(24 /* EditorOption.copyWithSyntaxHighlighting */, 'copyWithSyntaxHighlighting', true, { description: nls.localize('copyWithSyntaxHighlighting', \"Controls whether syntax highlighting should be copied into the clipboard.\") })),\n    cursorBlinking: register(new EditorEnumOption(25 /* EditorOption.cursorBlinking */, 'cursorBlinking', 1 /* TextEditorCursorBlinkingStyle.Blink */, 'blink', ['blink', 'smooth', 'phase', 'expand', 'solid'], _cursorBlinkingStyleFromString, { description: nls.localize('cursorBlinking', \"Control the cursor animation style.\") })),\n    cursorSmoothCaretAnimation: register(new EditorStringEnumOption(26 /* EditorOption.cursorSmoothCaretAnimation */, 'cursorSmoothCaretAnimation', 'off', ['off', 'explicit', 'on'], {\n        enumDescriptions: [\n            nls.localize('cursorSmoothCaretAnimation.off', \"Smooth caret animation is disabled.\"),\n            nls.localize('cursorSmoothCaretAnimation.explicit', \"Smooth caret animation is enabled only when the user moves the cursor with an explicit gesture.\"),\n            nls.localize('cursorSmoothCaretAnimation.on', \"Smooth caret animation is always enabled.\")\n        ],\n        description: nls.localize('cursorSmoothCaretAnimation', \"Controls whether the smooth caret animation should be enabled.\")\n    })),\n    cursorStyle: register(new EditorEnumOption(27 /* EditorOption.cursorStyle */, 'cursorStyle', TextEditorCursorStyle.Line, 'line', ['line', 'block', 'underline', 'line-thin', 'block-outline', 'underline-thin'], _cursorStyleFromString, { description: nls.localize('cursorStyle', \"Controls the cursor style.\") })),\n    cursorSurroundingLines: register(new EditorIntOption(28 /* EditorOption.cursorSurroundingLines */, 'cursorSurroundingLines', 0, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, { description: nls.localize('cursorSurroundingLines', \"Controls the minimal number of visible leading lines (minimum 0) and trailing lines (minimum 1) surrounding the cursor. Known as 'scrollOff' or 'scrollOffset' in some other editors.\") })),\n    cursorSurroundingLinesStyle: register(new EditorStringEnumOption(29 /* EditorOption.cursorSurroundingLinesStyle */, 'cursorSurroundingLinesStyle', 'default', ['default', 'all'], {\n        enumDescriptions: [\n            nls.localize('cursorSurroundingLinesStyle.default', \"`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.\"),\n            nls.localize('cursorSurroundingLinesStyle.all', \"`cursorSurroundingLines` is enforced always.\")\n        ],\n        description: nls.localize('cursorSurroundingLinesStyle', \"Controls when `cursorSurroundingLines` should be enforced.\")\n    })),\n    cursorWidth: register(new EditorIntOption(30 /* EditorOption.cursorWidth */, 'cursorWidth', 0, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, { markdownDescription: nls.localize('cursorWidth', \"Controls the width of the cursor when `#editor.cursorStyle#` is set to `line`.\") })),\n    disableLayerHinting: register(new EditorBooleanOption(31 /* EditorOption.disableLayerHinting */, 'disableLayerHinting', false)),\n    disableMonospaceOptimizations: register(new EditorBooleanOption(32 /* EditorOption.disableMonospaceOptimizations */, 'disableMonospaceOptimizations', false)),\n    domReadOnly: register(new EditorBooleanOption(33 /* EditorOption.domReadOnly */, 'domReadOnly', false)),\n    dragAndDrop: register(new EditorBooleanOption(34 /* EditorOption.dragAndDrop */, 'dragAndDrop', true, { description: nls.localize('dragAndDrop', \"Controls whether the editor should allow moving selections via drag and drop.\") })),\n    emptySelectionClipboard: register(new EditorEmptySelectionClipboard()),\n    dropIntoEditor: register(new EditorDropIntoEditor()),\n    stickyScroll: register(new EditorStickyScroll()),\n    experimentalWhitespaceRendering: register(new EditorStringEnumOption(37 /* EditorOption.experimentalWhitespaceRendering */, 'experimentalWhitespaceRendering', 'svg', ['svg', 'font', 'off'], {\n        enumDescriptions: [\n            nls.localize('experimentalWhitespaceRendering.svg', \"Use a new rendering method with svgs.\"),\n            nls.localize('experimentalWhitespaceRendering.font', \"Use a new rendering method with font characters.\"),\n            nls.localize('experimentalWhitespaceRendering.off', \"Use the stable rendering method.\"),\n        ],\n        description: nls.localize('experimentalWhitespaceRendering', \"Controls whether whitespace is rendered with a new, experimental method.\")\n    })),\n    extraEditorClassName: register(new EditorStringOption(38 /* EditorOption.extraEditorClassName */, 'extraEditorClassName', '')),\n    fastScrollSensitivity: register(new EditorFloatOption(39 /* EditorOption.fastScrollSensitivity */, 'fastScrollSensitivity', 5, x => (x <= 0 ? 5 : x), { markdownDescription: nls.localize('fastScrollSensitivity', \"Scrolling speed multiplier when pressing `Alt`.\") })),\n    find: register(new EditorFind()),\n    fixedOverflowWidgets: register(new EditorBooleanOption(41 /* EditorOption.fixedOverflowWidgets */, 'fixedOverflowWidgets', false)),\n    folding: register(new EditorBooleanOption(42 /* EditorOption.folding */, 'folding', true, { description: nls.localize('folding', \"Controls whether the editor has code folding enabled.\") })),\n    foldingStrategy: register(new EditorStringEnumOption(43 /* EditorOption.foldingStrategy */, 'foldingStrategy', 'auto', ['auto', 'indentation'], {\n        enumDescriptions: [\n            nls.localize('foldingStrategy.auto', \"Use a language-specific folding strategy if available, else the indentation-based one.\"),\n            nls.localize('foldingStrategy.indentation', \"Use the indentation-based folding strategy.\"),\n        ],\n        description: nls.localize('foldingStrategy', \"Controls the strategy for computing folding ranges.\")\n    })),\n    foldingHighlight: register(new EditorBooleanOption(44 /* EditorOption.foldingHighlight */, 'foldingHighlight', true, { description: nls.localize('foldingHighlight', \"Controls whether the editor should highlight folded ranges.\") })),\n    foldingImportsByDefault: register(new EditorBooleanOption(45 /* EditorOption.foldingImportsByDefault */, 'foldingImportsByDefault', false, { description: nls.localize('foldingImportsByDefault', \"Controls whether the editor automatically collapses import ranges.\") })),\n    foldingMaximumRegions: register(new EditorIntOption(46 /* EditorOption.foldingMaximumRegions */, 'foldingMaximumRegions', 5000, 10, 65000, // limit must be less than foldingRanges MAX_FOLDING_REGIONS\n    { description: nls.localize('foldingMaximumRegions', \"The maximum number of foldable regions. Increasing this value may result in the editor becoming less responsive when the current source has a large number of foldable regions.\") })),\n    unfoldOnClickAfterEndOfLine: register(new EditorBooleanOption(47 /* EditorOption.unfoldOnClickAfterEndOfLine */, 'unfoldOnClickAfterEndOfLine', false, { description: nls.localize('unfoldOnClickAfterEndOfLine', \"Controls whether clicking on the empty content after a folded line will unfold the line.\") })),\n    fontFamily: register(new EditorStringOption(48 /* EditorOption.fontFamily */, 'fontFamily', EDITOR_FONT_DEFAULTS.fontFamily, { description: nls.localize('fontFamily', \"Controls the font family.\") })),\n    fontInfo: register(new EditorFontInfo()),\n    fontLigatures2: register(new EditorFontLigatures()),\n    fontSize: register(new EditorFontSize()),\n    fontWeight: register(new EditorFontWeight()),\n    fontVariations: register(new EditorFontVariations()),\n    formatOnPaste: register(new EditorBooleanOption(54 /* EditorOption.formatOnPaste */, 'formatOnPaste', false, { description: nls.localize('formatOnPaste', \"Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.\") })),\n    formatOnType: register(new EditorBooleanOption(55 /* EditorOption.formatOnType */, 'formatOnType', false, { description: nls.localize('formatOnType', \"Controls whether the editor should automatically format the line after typing.\") })),\n    glyphMargin: register(new EditorBooleanOption(56 /* EditorOption.glyphMargin */, 'glyphMargin', true, { description: nls.localize('glyphMargin', \"Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.\") })),\n    gotoLocation: register(new EditorGoToLocation()),\n    hideCursorInOverviewRuler: register(new EditorBooleanOption(58 /* EditorOption.hideCursorInOverviewRuler */, 'hideCursorInOverviewRuler', false, { description: nls.localize('hideCursorInOverviewRuler', \"Controls whether the cursor should be hidden in the overview ruler.\") })),\n    hover: register(new EditorHover()),\n    inDiffEditor: register(new EditorBooleanOption(60 /* EditorOption.inDiffEditor */, 'inDiffEditor', false)),\n    letterSpacing: register(new EditorFloatOption(62 /* EditorOption.letterSpacing */, 'letterSpacing', EDITOR_FONT_DEFAULTS.letterSpacing, x => EditorFloatOption.clamp(x, -5, 20), { description: nls.localize('letterSpacing', \"Controls the letter spacing in pixels.\") })),\n    lightbulb: register(new EditorLightbulb()),\n    lineDecorationsWidth: register(new EditorLineDecorationsWidth()),\n    lineHeight: register(new EditorLineHeight()),\n    lineNumbers: register(new EditorRenderLineNumbersOption()),\n    lineNumbersMinChars: register(new EditorIntOption(67 /* EditorOption.lineNumbersMinChars */, 'lineNumbersMinChars', 5, 1, 300)),\n    linkedEditing: register(new EditorBooleanOption(68 /* EditorOption.linkedEditing */, 'linkedEditing', false, { description: nls.localize('linkedEditing', \"Controls whether the editor has linked editing enabled. Depending on the language, related symbols such as HTML tags, are updated while editing.\") })),\n    links: register(new EditorBooleanOption(69 /* EditorOption.links */, 'links', true, { description: nls.localize('links', \"Controls whether the editor should detect links and make them clickable.\") })),\n    matchBrackets: register(new EditorStringEnumOption(70 /* EditorOption.matchBrackets */, 'matchBrackets', 'always', ['always', 'near', 'never'], { description: nls.localize('matchBrackets', \"Highlight matching brackets.\") })),\n    minimap: register(new EditorMinimap()),\n    mouseStyle: register(new EditorStringEnumOption(72 /* EditorOption.mouseStyle */, 'mouseStyle', 'text', ['text', 'default', 'copy'])),\n    mouseWheelScrollSensitivity: register(new EditorFloatOption(73 /* EditorOption.mouseWheelScrollSensitivity */, 'mouseWheelScrollSensitivity', 1, x => (x === 0 ? 1 : x), { markdownDescription: nls.localize('mouseWheelScrollSensitivity', \"A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\") })),\n    mouseWheelZoom: register(new EditorBooleanOption(74 /* EditorOption.mouseWheelZoom */, 'mouseWheelZoom', false, { markdownDescription: nls.localize('mouseWheelZoom', \"Zoom the font of the editor when using mouse wheel and holding `Ctrl`.\") })),\n    multiCursorMergeOverlapping: register(new EditorBooleanOption(75 /* EditorOption.multiCursorMergeOverlapping */, 'multiCursorMergeOverlapping', true, { description: nls.localize('multiCursorMergeOverlapping', \"Merge multiple cursors when they are overlapping.\") })),\n    multiCursorModifier: register(new EditorEnumOption(76 /* EditorOption.multiCursorModifier */, 'multiCursorModifier', 'altKey', 'alt', ['ctrlCmd', 'alt'], _multiCursorModifierFromString, {\n        markdownEnumDescriptions: [\n            nls.localize('multiCursorModifier.ctrlCmd', \"Maps to `Control` on Windows and Linux and to `Command` on macOS.\"),\n            nls.localize('multiCursorModifier.alt', \"Maps to `Alt` on Windows and Linux and to `Option` on macOS.\")\n        ],\n        markdownDescription: nls.localize({\n            key: 'multiCursorModifier',\n            comment: [\n                '- `ctrlCmd` refers to a value the setting can take and should not be localized.',\n                '- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized.'\n            ]\n        }, \"The modifier to be used to add multiple cursors with the mouse. The Go to Definition and Open Link mouse gestures will adapt such that they do not conflict with the [multicursor modifier](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).\")\n    })),\n    multiCursorPaste: register(new EditorStringEnumOption(77 /* EditorOption.multiCursorPaste */, 'multiCursorPaste', 'spread', ['spread', 'full'], {\n        markdownEnumDescriptions: [\n            nls.localize('multiCursorPaste.spread', \"Each cursor pastes a single line of the text.\"),\n            nls.localize('multiCursorPaste.full', \"Each cursor pastes the full text.\")\n        ],\n        markdownDescription: nls.localize('multiCursorPaste', \"Controls pasting when the line count of the pasted text matches the cursor count.\")\n    })),\n    multiCursorLimit: register(new EditorIntOption(78 /* EditorOption.multiCursorLimit */, 'multiCursorLimit', 10000, 1, 100000, {\n        markdownDescription: nls.localize('multiCursorLimit', \"Controls the max number of cursors that can be in an active editor at once.\")\n    })),\n    occurrencesHighlight: register(new EditorBooleanOption(79 /* EditorOption.occurrencesHighlight */, 'occurrencesHighlight', true, { description: nls.localize('occurrencesHighlight', \"Controls whether the editor should highlight semantic symbol occurrences.\") })),\n    overviewRulerBorder: register(new EditorBooleanOption(80 /* EditorOption.overviewRulerBorder */, 'overviewRulerBorder', true, { description: nls.localize('overviewRulerBorder', \"Controls whether a border should be drawn around the overview ruler.\") })),\n    overviewRulerLanes: register(new EditorIntOption(81 /* EditorOption.overviewRulerLanes */, 'overviewRulerLanes', 3, 0, 3)),\n    padding: register(new EditorPadding()),\n    pasteAs: register(new EditorPasteAs()),\n    parameterHints: register(new EditorParameterHints()),\n    peekWidgetDefaultFocus: register(new EditorStringEnumOption(85 /* EditorOption.peekWidgetDefaultFocus */, 'peekWidgetDefaultFocus', 'tree', ['tree', 'editor'], {\n        enumDescriptions: [\n            nls.localize('peekWidgetDefaultFocus.tree', \"Focus the tree when opening peek\"),\n            nls.localize('peekWidgetDefaultFocus.editor', \"Focus the editor when opening peek\")\n        ],\n        description: nls.localize('peekWidgetDefaultFocus', \"Controls whether to focus the inline editor or the tree in the peek widget.\")\n    })),\n    definitionLinkOpensInPeek: register(new EditorBooleanOption(86 /* EditorOption.definitionLinkOpensInPeek */, 'definitionLinkOpensInPeek', false, { description: nls.localize('definitionLinkOpensInPeek', \"Controls whether the Go to Definition mouse gesture always opens the peek widget.\") })),\n    quickSuggestions: register(new EditorQuickSuggestions()),\n    quickSuggestionsDelay: register(new EditorIntOption(88 /* EditorOption.quickSuggestionsDelay */, 'quickSuggestionsDelay', 10, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, { description: nls.localize('quickSuggestionsDelay', \"Controls the delay in milliseconds after which quick suggestions will show up.\") })),\n    readOnly: register(new EditorBooleanOption(89 /* EditorOption.readOnly */, 'readOnly', false)),\n    readOnlyMessage: register(new ReadonlyMessage()),\n    renameOnType: register(new EditorBooleanOption(91 /* EditorOption.renameOnType */, 'renameOnType', false, { description: nls.localize('renameOnType', \"Controls whether the editor auto renames on type.\"), markdownDeprecationMessage: nls.localize('renameOnTypeDeprecate', \"Deprecated, use `editor.linkedEditing` instead.\") })),\n    renderControlCharacters: register(new EditorBooleanOption(92 /* EditorOption.renderControlCharacters */, 'renderControlCharacters', true, { description: nls.localize('renderControlCharacters', \"Controls whether the editor should render control characters.\"), restricted: true })),\n    renderFinalNewline: register(new EditorStringEnumOption(93 /* EditorOption.renderFinalNewline */, 'renderFinalNewline', (platform.isLinux ? 'dimmed' : 'on'), ['off', 'on', 'dimmed'], { description: nls.localize('renderFinalNewline', \"Render last line number when the file ends with a newline.\") })),\n    renderLineHighlight: register(new EditorStringEnumOption(94 /* EditorOption.renderLineHighlight */, 'renderLineHighlight', 'line', ['none', 'gutter', 'line', 'all'], {\n        enumDescriptions: [\n            '',\n            '',\n            '',\n            nls.localize('renderLineHighlight.all', \"Highlights both the gutter and the current line.\"),\n        ],\n        description: nls.localize('renderLineHighlight', \"Controls how the editor should render the current line highlight.\")\n    })),\n    renderLineHighlightOnlyWhenFocus: register(new EditorBooleanOption(95 /* EditorOption.renderLineHighlightOnlyWhenFocus */, 'renderLineHighlightOnlyWhenFocus', false, { description: nls.localize('renderLineHighlightOnlyWhenFocus', \"Controls if the editor should render the current line highlight only when the editor is focused.\") })),\n    renderValidationDecorations: register(new EditorStringEnumOption(96 /* EditorOption.renderValidationDecorations */, 'renderValidationDecorations', 'editable', ['editable', 'on', 'off'])),\n    renderWhitespace: register(new EditorStringEnumOption(97 /* EditorOption.renderWhitespace */, 'renderWhitespace', 'selection', ['none', 'boundary', 'selection', 'trailing', 'all'], {\n        enumDescriptions: [\n            '',\n            nls.localize('renderWhitespace.boundary', \"Render whitespace characters except for single spaces between words.\"),\n            nls.localize('renderWhitespace.selection', \"Render whitespace characters only on selected text.\"),\n            nls.localize('renderWhitespace.trailing', \"Render only trailing whitespace characters.\"),\n            ''\n        ],\n        description: nls.localize('renderWhitespace', \"Controls how the editor should render whitespace characters.\")\n    })),\n    revealHorizontalRightPadding: register(new EditorIntOption(98 /* EditorOption.revealHorizontalRightPadding */, 'revealHorizontalRightPadding', 15, 0, 1000)),\n    roundedSelection: register(new EditorBooleanOption(99 /* EditorOption.roundedSelection */, 'roundedSelection', true, { description: nls.localize('roundedSelection', \"Controls whether selections should have rounded corners.\") })),\n    rulers: register(new EditorRulers()),\n    scrollbar: register(new EditorScrollbar()),\n    scrollBeyondLastColumn: register(new EditorIntOption(102 /* EditorOption.scrollBeyondLastColumn */, 'scrollBeyondLastColumn', 4, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, { description: nls.localize('scrollBeyondLastColumn', \"Controls the number of extra characters beyond which the editor will scroll horizontally.\") })),\n    scrollBeyondLastLine: register(new EditorBooleanOption(103 /* EditorOption.scrollBeyondLastLine */, 'scrollBeyondLastLine', true, { description: nls.localize('scrollBeyondLastLine', \"Controls whether the editor will scroll beyond the last line.\") })),\n    scrollPredominantAxis: register(new EditorBooleanOption(104 /* EditorOption.scrollPredominantAxis */, 'scrollPredominantAxis', true, { description: nls.localize('scrollPredominantAxis', \"Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time. Prevents horizontal drift when scrolling vertically on a trackpad.\") })),\n    selectionClipboard: register(new EditorBooleanOption(105 /* EditorOption.selectionClipboard */, 'selectionClipboard', true, {\n        description: nls.localize('selectionClipboard', \"Controls whether the Linux primary clipboard should be supported.\"),\n        included: platform.isLinux\n    })),\n    selectionHighlight: register(new EditorBooleanOption(106 /* EditorOption.selectionHighlight */, 'selectionHighlight', true, { description: nls.localize('selectionHighlight', \"Controls whether the editor should highlight matches similar to the selection.\") })),\n    selectOnLineNumbers: register(new EditorBooleanOption(107 /* EditorOption.selectOnLineNumbers */, 'selectOnLineNumbers', true)),\n    showFoldingControls: register(new EditorStringEnumOption(108 /* EditorOption.showFoldingControls */, 'showFoldingControls', 'mouseover', ['always', 'never', 'mouseover'], {\n        enumDescriptions: [\n            nls.localize('showFoldingControls.always', \"Always show the folding controls.\"),\n            nls.localize('showFoldingControls.never', \"Never show the folding controls and reduce the gutter size.\"),\n            nls.localize('showFoldingControls.mouseover', \"Only show the folding controls when the mouse is over the gutter.\"),\n        ],\n        description: nls.localize('showFoldingControls', \"Controls when the folding controls on the gutter are shown.\")\n    })),\n    showUnused: register(new EditorBooleanOption(109 /* EditorOption.showUnused */, 'showUnused', true, { description: nls.localize('showUnused', \"Controls fading out of unused code.\") })),\n    showDeprecated: register(new EditorBooleanOption(137 /* EditorOption.showDeprecated */, 'showDeprecated', true, { description: nls.localize('showDeprecated', \"Controls strikethrough deprecated variables.\") })),\n    inlayHints: register(new EditorInlayHints()),\n    snippetSuggestions: register(new EditorStringEnumOption(110 /* EditorOption.snippetSuggestions */, 'snippetSuggestions', 'inline', ['top', 'bottom', 'inline', 'none'], {\n        enumDescriptions: [\n            nls.localize('snippetSuggestions.top', \"Show snippet suggestions on top of other suggestions.\"),\n            nls.localize('snippetSuggestions.bottom', \"Show snippet suggestions below other suggestions.\"),\n            nls.localize('snippetSuggestions.inline', \"Show snippets suggestions with other suggestions.\"),\n            nls.localize('snippetSuggestions.none', \"Do not show snippet suggestions.\"),\n        ],\n        description: nls.localize('snippetSuggestions', \"Controls whether snippets are shown with other suggestions and how they are sorted.\")\n    })),\n    smartSelect: register(new SmartSelect()),\n    smoothScrolling: register(new EditorBooleanOption(112 /* EditorOption.smoothScrolling */, 'smoothScrolling', false, { description: nls.localize('smoothScrolling', \"Controls whether the editor will scroll using an animation.\") })),\n    stopRenderingLineAfter: register(new EditorIntOption(115 /* EditorOption.stopRenderingLineAfter */, 'stopRenderingLineAfter', 10000, -1, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */)),\n    suggest: register(new EditorSuggest()),\n    inlineSuggest: register(new InlineEditorSuggest()),\n    inlineCompletionsAccessibilityVerbose: register(new EditorBooleanOption(146 /* EditorOption.inlineCompletionsAccessibilityVerbose */, 'inlineCompletionsAccessibilityVerbose', false, { description: nls.localize('inlineCompletionsAccessibilityVerbose', \"Controls whether the accessibility hint should be provided to screen reader users when an inline completion is shown.\") })),\n    suggestFontSize: register(new EditorIntOption(117 /* EditorOption.suggestFontSize */, 'suggestFontSize', 0, 0, 1000, { markdownDescription: nls.localize('suggestFontSize', \"Font size for the suggest widget. When set to {0}, the value of {1} is used.\", '`0`', '`#editor.fontSize#`') })),\n    suggestLineHeight: register(new EditorIntOption(118 /* EditorOption.suggestLineHeight */, 'suggestLineHeight', 0, 0, 1000, { markdownDescription: nls.localize('suggestLineHeight', \"Line height for the suggest widget. When set to {0}, the value of {1} is used. The minimum value is 8.\", '`0`', '`#editor.lineHeight#`') })),\n    suggestOnTriggerCharacters: register(new EditorBooleanOption(119 /* EditorOption.suggestOnTriggerCharacters */, 'suggestOnTriggerCharacters', true, { description: nls.localize('suggestOnTriggerCharacters', \"Controls whether suggestions should automatically show up when typing trigger characters.\") })),\n    suggestSelection: register(new EditorStringEnumOption(120 /* EditorOption.suggestSelection */, 'suggestSelection', 'first', ['first', 'recentlyUsed', 'recentlyUsedByPrefix'], {\n        markdownEnumDescriptions: [\n            nls.localize('suggestSelection.first', \"Always select the first suggestion.\"),\n            nls.localize('suggestSelection.recentlyUsed', \"Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.\"),\n            nls.localize('suggestSelection.recentlyUsedByPrefix', \"Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`.\"),\n        ],\n        description: nls.localize('suggestSelection', \"Controls how suggestions are pre-selected when showing the suggest list.\")\n    })),\n    tabCompletion: register(new EditorStringEnumOption(121 /* EditorOption.tabCompletion */, 'tabCompletion', 'off', ['on', 'off', 'onlySnippets'], {\n        enumDescriptions: [\n            nls.localize('tabCompletion.on', \"Tab complete will insert the best matching suggestion when pressing tab.\"),\n            nls.localize('tabCompletion.off', \"Disable tab completions.\"),\n            nls.localize('tabCompletion.onlySnippets', \"Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled.\"),\n        ],\n        description: nls.localize('tabCompletion', \"Enables tab completions.\")\n    })),\n    tabIndex: register(new EditorIntOption(122 /* EditorOption.tabIndex */, 'tabIndex', 0, -1, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */)),\n    unicodeHighlight: register(new UnicodeHighlight()),\n    unusualLineTerminators: register(new EditorStringEnumOption(124 /* EditorOption.unusualLineTerminators */, 'unusualLineTerminators', 'prompt', ['auto', 'off', 'prompt'], {\n        enumDescriptions: [\n            nls.localize('unusualLineTerminators.auto', \"Unusual line terminators are automatically removed.\"),\n            nls.localize('unusualLineTerminators.off', \"Unusual line terminators are ignored.\"),\n            nls.localize('unusualLineTerminators.prompt', \"Unusual line terminators prompt to be removed.\"),\n        ],\n        description: nls.localize('unusualLineTerminators', \"Remove unusual line terminators that might cause problems.\")\n    })),\n    useShadowDOM: register(new EditorBooleanOption(125 /* EditorOption.useShadowDOM */, 'useShadowDOM', true)),\n    useTabStops: register(new EditorBooleanOption(126 /* EditorOption.useTabStops */, 'useTabStops', true, { description: nls.localize('useTabStops', \"Inserting and deleting whitespace follows tab stops.\") })),\n    wordBreak: register(new EditorStringEnumOption(127 /* EditorOption.wordBreak */, 'wordBreak', 'normal', ['normal', 'keepAll'], {\n        markdownEnumDescriptions: [\n            nls.localize('wordBreak.normal', \"Use the default line break rule.\"),\n            nls.localize('wordBreak.keepAll', \"Word breaks should not be used for Chinese/Japanese/Korean (CJK) text. Non-CJK text behavior is the same as for normal.\"),\n        ],\n        description: nls.localize('wordBreak', \"Controls the word break rules used for Chinese/Japanese/Korean (CJK) text.\")\n    })),\n    wordSeparators: register(new EditorStringOption(128 /* EditorOption.wordSeparators */, 'wordSeparators', USUAL_WORD_SEPARATORS, { description: nls.localize('wordSeparators', \"Characters that will be used as word separators when doing word related navigations or operations.\") })),\n    wordWrap: register(new EditorStringEnumOption(129 /* EditorOption.wordWrap */, 'wordWrap', 'off', ['off', 'on', 'wordWrapColumn', 'bounded'], {\n        markdownEnumDescriptions: [\n            nls.localize('wordWrap.off', \"Lines will never wrap.\"),\n            nls.localize('wordWrap.on', \"Lines will wrap at the viewport width.\"),\n            nls.localize({\n                key: 'wordWrap.wordWrapColumn',\n                comment: [\n                    '- `editor.wordWrapColumn` refers to a different setting and should not be localized.'\n                ]\n            }, \"Lines will wrap at `#editor.wordWrapColumn#`.\"),\n            nls.localize({\n                key: 'wordWrap.bounded',\n                comment: [\n                    '- viewport means the edge of the visible window size.',\n                    '- `editor.wordWrapColumn` refers to a different setting and should not be localized.'\n                ]\n            }, \"Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`.\"),\n        ],\n        description: nls.localize({\n            key: 'wordWrap',\n            comment: [\n                '- \\'off\\', \\'on\\', \\'wordWrapColumn\\' and \\'bounded\\' refer to values the setting can take and should not be localized.',\n                '- `editor.wordWrapColumn` refers to a different setting and should not be localized.'\n            ]\n        }, \"Controls how lines should wrap.\")\n    })),\n    wordWrapBreakAfterCharacters: register(new EditorStringOption(130 /* EditorOption.wordWrapBreakAfterCharacters */, 'wordWrapBreakAfterCharacters', \n    // allow-any-unicode-next-line\n    ' \\t})]?|/&.,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ”〉》」』】〕）］｝｣')),\n    wordWrapBreakBeforeCharacters: register(new EditorStringOption(131 /* EditorOption.wordWrapBreakBeforeCharacters */, 'wordWrapBreakBeforeCharacters', \n    // allow-any-unicode-next-line\n    '([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋')),\n    wordWrapColumn: register(new EditorIntOption(132 /* EditorOption.wordWrapColumn */, 'wordWrapColumn', 80, 1, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, {\n        markdownDescription: nls.localize({\n            key: 'wordWrapColumn',\n            comment: [\n                '- `editor.wordWrap` refers to a different setting and should not be localized.',\n                '- \\'wordWrapColumn\\' and \\'bounded\\' refer to values the different setting can take and should not be localized.'\n            ]\n        }, \"Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.\")\n    })),\n    wordWrapOverride1: register(new EditorStringEnumOption(133 /* EditorOption.wordWrapOverride1 */, 'wordWrapOverride1', 'inherit', ['off', 'on', 'inherit'])),\n    wordWrapOverride2: register(new EditorStringEnumOption(134 /* EditorOption.wordWrapOverride2 */, 'wordWrapOverride2', 'inherit', ['off', 'on', 'inherit'])),\n    // Leave these at the end (because they have dependencies!)\n    editorClassName: register(new EditorClassName()),\n    defaultColorDecorators: register(new EditorBooleanOption(144 /* EditorOption.defaultColorDecorators */, 'defaultColorDecorators', false, { markdownDescription: nls.localize('defaultColorDecorators', \"Controls whether inline color decorations should be shown using the default document color provider\") })),\n    pixelRatio: register(new EditorPixelRatio()),\n    tabFocusMode: register(new EditorBooleanOption(141 /* EditorOption.tabFocusMode */, 'tabFocusMode', false, { markdownDescription: nls.localize('tabFocusMode', \"Controls whether the editor receives tabs or defers them to the workbench for navigation.\") })),\n    layoutInfo: register(new EditorLayoutInfoComputer()),\n    wrappingInfo: register(new EditorWrappingInfoComputer()),\n    wrappingIndent: register(new WrappingIndentOption()),\n    wrappingStrategy: register(new WrappingStrategy())\n};\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\n/**\n * @internal\n */\nexport class StandardAutoClosingPairConditional {\n    constructor(source) {\n        this._neutralCharacter = null;\n        this._neutralCharacterSearched = false;\n        this.open = source.open;\n        this.close = source.close;\n        // initially allowed in all tokens\n        this._inString = true;\n        this._inComment = true;\n        this._inRegEx = true;\n        if (Array.isArray(source.notIn)) {\n            for (let i = 0, len = source.notIn.length; i < len; i++) {\n                const notIn = source.notIn[i];\n                switch (notIn) {\n                    case 'string':\n                        this._inString = false;\n                        break;\n                    case 'comment':\n                        this._inComment = false;\n                        break;\n                    case 'regex':\n                        this._inRegEx = false;\n                        break;\n                }\n            }\n        }\n    }\n    isOK(standardToken) {\n        switch (standardToken) {\n            case 0 /* StandardTokenType.Other */:\n                return true;\n            case 1 /* StandardTokenType.Comment */:\n                return this._inComment;\n            case 2 /* StandardTokenType.String */:\n                return this._inString;\n            case 3 /* StandardTokenType.RegEx */:\n                return this._inRegEx;\n        }\n    }\n    shouldAutoClose(context, column) {\n        // Always complete on empty line\n        if (context.getTokenCount() === 0) {\n            return true;\n        }\n        const tokenIndex = context.findTokenIndexAtOffset(column - 2);\n        const standardTokenType = context.getStandardTokenType(tokenIndex);\n        return this.isOK(standardTokenType);\n    }\n    _findNeutralCharacterInRange(fromCharCode, toCharCode) {\n        for (let charCode = fromCharCode; charCode <= toCharCode; charCode++) {\n            const character = String.fromCharCode(charCode);\n            if (!this.open.includes(character) && !this.close.includes(character)) {\n                return character;\n            }\n        }\n        return null;\n    }\n    /**\n     * Find a character in the range [0-9a-zA-Z] that does not appear in the open or close\n     */\n    findNeutralCharacter() {\n        if (!this._neutralCharacterSearched) {\n            this._neutralCharacterSearched = true;\n            if (!this._neutralCharacter) {\n                this._neutralCharacter = this._findNeutralCharacterInRange(48 /* CharCode.Digit0 */, 57 /* CharCode.Digit9 */);\n            }\n            if (!this._neutralCharacter) {\n                this._neutralCharacter = this._findNeutralCharacterInRange(97 /* CharCode.a */, 122 /* CharCode.z */);\n            }\n            if (!this._neutralCharacter) {\n                this._neutralCharacter = this._findNeutralCharacterInRange(65 /* CharCode.A */, 90 /* CharCode.Z */);\n            }\n        }\n        return this._neutralCharacter;\n    }\n}\n/**\n * @internal\n */\nexport class AutoClosingPairs {\n    constructor(autoClosingPairs) {\n        this.autoClosingPairsOpenByStart = new Map();\n        this.autoClosingPairsOpenByEnd = new Map();\n        this.autoClosingPairsCloseByStart = new Map();\n        this.autoClosingPairsCloseByEnd = new Map();\n        this.autoClosingPairsCloseSingleChar = new Map();\n        for (const pair of autoClosingPairs) {\n            appendEntry(this.autoClosingPairsOpenByStart, pair.open.charAt(0), pair);\n            appendEntry(this.autoClosingPairsOpenByEnd, pair.open.charAt(pair.open.length - 1), pair);\n            appendEntry(this.autoClosingPairsCloseByStart, pair.close.charAt(0), pair);\n            appendEntry(this.autoClosingPairsCloseByEnd, pair.close.charAt(pair.close.length - 1), pair);\n            if (pair.close.length === 1 && pair.open.length === 1) {\n                appendEntry(this.autoClosingPairsCloseSingleChar, pair.close, pair);\n            }\n        }\n    }\n}\nfunction appendEntry(target, key, value) {\n    if (target.has(key)) {\n        target.get(key).push(value);\n    }\n    else {\n        target.set(key, [value]);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Schemas } from '../../../base/common/network.js';\nexport function getRemoteAuthority(uri) {\n    return uri.scheme === Schemas.vscodeRemote ? uri.authority : undefined;\n}\nexport function getRemoteName(authority) {\n    if (!authority) {\n        return undefined;\n    }\n    const pos = authority.indexOf('+');\n    if (pos < 0) {\n        // e.g. localhost:8000\n        return authority;\n    }\n    return authority.substr(0, pos);\n}\n/**\n * The root path to use when accessing the remote server. The path contains the quality and commit of the current build.\n * @param product\n * @returns\n */\nexport function getRemoteServerRootPath(product) {\n    var _a, _b;\n    return `/${(_a = product.quality) !== null && _a !== void 0 ? _a : 'oss'}-${(_b = product.commit) !== null && _b !== void 0 ? _b : 'dev'}`;\n}\nexport function parseAuthorityWithPort(authority) {\n    const { host, port } = parseAuthority(authority);\n    if (typeof port === 'undefined') {\n        throw new Error(`Remote authority doesn't contain a port!`);\n    }\n    return { host, port };\n}\nexport function parseAuthorityWithOptionalPort(authority, defaultPort) {\n    let { host, port } = parseAuthority(authority);\n    if (typeof port === 'undefined') {\n        port = defaultPort;\n    }\n    return { host, port };\n}\nfunction parseAuthority(authority) {\n    // check for ipv6 with port\n    const m1 = authority.match(/^(\\[[0-9a-z:]+\\]):(\\d+)$/);\n    if (m1) {\n        return { host: m1[1], port: parseInt(m1[2], 10) };\n    }\n    // check for ipv6 without port\n    const m2 = authority.match(/^(\\[[0-9a-z:]+\\])$/);\n    if (m2) {\n        return { host: m2[1], port: undefined };\n    }\n    // anything with a trailing port\n    const m3 = authority.match(/(.*):(\\d+)$/);\n    if (m3) {\n        return { host: m3[1], port: parseInt(m3[2], 10) };\n    }\n    // doesn't contain a port\n    return { host: authority, port: undefined };\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { getRemoteName } from '../../remote/common/remoteHosts.js';\nexport const USER_MANIFEST_CACHE_FILE = 'extensions.user.cache';\nexport const BUILTIN_MANIFEST_CACHE_FILE = 'extensions.builtin.cache';\nexport const UNDEFINED_PUBLISHER = 'undefined_publisher';\nexport const ALL_EXTENSION_KINDS = ['ui', 'workspace', 'web'];\nexport function getWorkspaceSupportTypeMessage(supportType) {\n    if (typeof supportType === 'object' && supportType !== null) {\n        if (supportType.supported !== true) {\n            return supportType.description;\n        }\n    }\n    return undefined;\n}\nexport const EXTENSION_CATEGORIES = [\n    'Azure',\n    'Data Science',\n    'Debuggers',\n    'Extension Packs',\n    'Education',\n    'Formatters',\n    'Keymaps',\n    'Language Packs',\n    'Linters',\n    'Machine Learning',\n    'Notebooks',\n    'Programming Languages',\n    'SCM Providers',\n    'Snippets',\n    'Testing',\n    'Themes',\n    'Visualization',\n    'Other',\n];\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n    constructor(value) {\n        this.value = value;\n        this._lower = value.toLowerCase();\n    }\n    static equals(a, b) {\n        if (typeof a === 'undefined' || a === null) {\n            return (typeof b === 'undefined' || b === null);\n        }\n        if (typeof b === 'undefined' || b === null) {\n            return false;\n        }\n        if (typeof a === 'string' || typeof b === 'string') {\n            // At least one of the arguments is an extension id in string form,\n            // so we have to use the string comparison which ignores case.\n            const aValue = (typeof a === 'string' ? a : a.value);\n            const bValue = (typeof b === 'string' ? b : b.value);\n            return strings.equalsIgnoreCase(aValue, bValue);\n        }\n        // Now we know both arguments are ExtensionIdentifier\n        return (a._lower === b._lower);\n    }\n    /**\n     * Gives the value by which to index (for equality).\n     */\n    static toKey(id) {\n        if (typeof id === 'string') {\n            return id.toLowerCase();\n        }\n        return id._lower;\n    }\n}\nexport class ExtensionIdentifierSet {\n    get size() {\n        return this._set.size;\n    }\n    constructor(iterable) {\n        this._set = new Set();\n        if (iterable) {\n            for (const value of iterable) {\n                this.add(value);\n            }\n        }\n    }\n    add(id) {\n        this._set.add(ExtensionIdentifier.toKey(id));\n    }\n    delete(extensionId) {\n        return this._set.delete(ExtensionIdentifier.toKey(extensionId));\n    }\n    has(id) {\n        return this._set.has(ExtensionIdentifier.toKey(id));\n    }\n}\nexport class ExtensionIdentifierMap {\n    constructor() {\n        this._map = new Map();\n    }\n    clear() {\n        this._map.clear();\n    }\n    delete(id) {\n        this._map.delete(ExtensionIdentifier.toKey(id));\n    }\n    get(id) {\n        return this._map.get(ExtensionIdentifier.toKey(id));\n    }\n    has(id) {\n        return this._map.has(ExtensionIdentifier.toKey(id));\n    }\n    set(id, value) {\n        this._map.set(ExtensionIdentifier.toKey(id), value);\n    }\n    values() {\n        return this._map.values();\n    }\n    forEach(callbackfn) {\n        this._map.forEach(callbackfn);\n    }\n    [Symbol.iterator]() {\n        return this._map[Symbol.iterator]();\n    }\n}\nexport function isApplicationScopedExtension(manifest) {\n    return isLanguagePackExtension(manifest);\n}\nexport function isLanguagePackExtension(manifest) {\n    return manifest.contributes && manifest.contributes.localizations ? manifest.contributes.localizations.length > 0 : false;\n}\nexport function isAuthenticationProviderExtension(manifest) {\n    return manifest.contributes && manifest.contributes.authentication ? manifest.contributes.authentication.length > 0 : false;\n}\nexport function isResolverExtension(manifest, remoteAuthority) {\n    var _a;\n    if (remoteAuthority) {\n        const activationEvent = `onResolveRemoteAuthority:${getRemoteName(remoteAuthority)}`;\n        return !!((_a = manifest.activationEvents) === null || _a === void 0 ? void 0 : _a.includes(activationEvent));\n    }\n    return false;\n}\nexport const IBuiltinExtensionsScannerService = createDecorator('IBuiltinExtensionsScannerService');\n", "import { isString } from './types.js';\nconst _codiconFontCharacters = Object.create(null);\nfunction register(id, fontCharacter) {\n    if (isString(fontCharacter)) {\n        const val = _codiconFontCharacters[fontCharacter];\n        if (val === undefined) {\n            throw new Error(`${id} references an unknown codicon: ${fontCharacter}`);\n        }\n        fontCharacter = val;\n    }\n    _codiconFontCharacters[id] = fontCharacter;\n    return { id };\n}\n/**\n * Only to be used by the iconRegistry.\n */\nexport function getCodiconFontCharacters() {\n    return _codiconFontCharacters;\n}\n/**\n * Only to be used by the iconRegistry.\n */\nexport function getAllCodicons() {\n    return Object.values(Codicon);\n}\n/**\n * The Codicon library is a set of default icons that are built-in in VS Code.\n *\n * In the product (outside of base) Codicons should only be used as defaults. In order to have all icons in VS Code\n * themeable, component should define new, UI component specific icons using `iconRegistry.registerIcon`.\n * In that call a Codicon can be named as default.\n */\nexport const Codicon = {\n    // built-in icons, with image name\n    add: register('add', 0xea60),\n    plus: register('plus', 0xea60),\n    gistNew: register('gist-new', 0xea60),\n    repoCreate: register('repo-create', 0xea60),\n    lightbulb: register('lightbulb', 0xea61),\n    lightBulb: register('light-bulb', 0xea61),\n    repo: register('repo', 0xea62),\n    repoDelete: register('repo-delete', 0xea62),\n    gistFork: register('gist-fork', 0xea63),\n    repoForked: register('repo-forked', 0xea63),\n    gitPullRequest: register('git-pull-request', 0xea64),\n    gitPullRequestAbandoned: register('git-pull-request-abandoned', 0xea64),\n    recordKeys: register('record-keys', 0xea65),\n    keyboard: register('keyboard', 0xea65),\n    tag: register('tag', 0xea66),\n    tagAdd: register('tag-add', 0xea66),\n    tagRemove: register('tag-remove', 0xea66),\n    gitPullRequestLabel: register('git-pull-request-label', 0xea66),\n    person: register('person', 0xea67),\n    personFollow: register('person-follow', 0xea67),\n    personOutline: register('person-outline', 0xea67),\n    personFilled: register('person-filled', 0xea67),\n    gitBranch: register('git-branch', 0xea68),\n    gitBranchCreate: register('git-branch-create', 0xea68),\n    gitBranchDelete: register('git-branch-delete', 0xea68),\n    sourceControl: register('source-control', 0xea68),\n    mirror: register('mirror', 0xea69),\n    mirrorPublic: register('mirror-public', 0xea69),\n    star: register('star', 0xea6a),\n    starAdd: register('star-add', 0xea6a),\n    starDelete: register('star-delete', 0xea6a),\n    starEmpty: register('star-empty', 0xea6a),\n    comment: register('comment', 0xea6b),\n    commentAdd: register('comment-add', 0xea6b),\n    alert: register('alert', 0xea6c),\n    warning: register('warning', 0xea6c),\n    search: register('search', 0xea6d),\n    searchSave: register('search-save', 0xea6d),\n    logOut: register('log-out', 0xea6e),\n    signOut: register('sign-out', 0xea6e),\n    logIn: register('log-in', 0xea6f),\n    signIn: register('sign-in', 0xea6f),\n    eye: register('eye', 0xea70),\n    eyeUnwatch: register('eye-unwatch', 0xea70),\n    eyeWatch: register('eye-watch', 0xea70),\n    circleFilled: register('circle-filled', 0xea71),\n    primitiveDot: register('primitive-dot', 0xea71),\n    closeDirty: register('close-dirty', 0xea71),\n    debugBreakpoint: register('debug-breakpoint', 0xea71),\n    debugBreakpointDisabled: register('debug-breakpoint-disabled', 0xea71),\n    debugHint: register('debug-hint', 0xea71),\n    primitiveSquare: register('primitive-square', 0xea72),\n    edit: register('edit', 0xea73),\n    pencil: register('pencil', 0xea73),\n    info: register('info', 0xea74),\n    issueOpened: register('issue-opened', 0xea74),\n    gistPrivate: register('gist-private', 0xea75),\n    gitForkPrivate: register('git-fork-private', 0xea75),\n    lock: register('lock', 0xea75),\n    mirrorPrivate: register('mirror-private', 0xea75),\n    close: register('close', 0xea76),\n    removeClose: register('remove-close', 0xea76),\n    x: register('x', 0xea76),\n    repoSync: register('repo-sync', 0xea77),\n    sync: register('sync', 0xea77),\n    clone: register('clone', 0xea78),\n    desktopDownload: register('desktop-download', 0xea78),\n    beaker: register('beaker', 0xea79),\n    microscope: register('microscope', 0xea79),\n    vm: register('vm', 0xea7a),\n    deviceDesktop: register('device-desktop', 0xea7a),\n    file: register('file', 0xea7b),\n    fileText: register('file-text', 0xea7b),\n    more: register('more', 0xea7c),\n    ellipsis: register('ellipsis', 0xea7c),\n    kebabHorizontal: register('kebab-horizontal', 0xea7c),\n    mailReply: register('mail-reply', 0xea7d),\n    reply: register('reply', 0xea7d),\n    organization: register('organization', 0xea7e),\n    organizationFilled: register('organization-filled', 0xea7e),\n    organizationOutline: register('organization-outline', 0xea7e),\n    newFile: register('new-file', 0xea7f),\n    fileAdd: register('file-add', 0xea7f),\n    newFolder: register('new-folder', 0xea80),\n    fileDirectoryCreate: register('file-directory-create', 0xea80),\n    trash: register('trash', 0xea81),\n    trashcan: register('trashcan', 0xea81),\n    history: register('history', 0xea82),\n    clock: register('clock', 0xea82),\n    folder: register('folder', 0xea83),\n    fileDirectory: register('file-directory', 0xea83),\n    symbolFolder: register('symbol-folder', 0xea83),\n    logoGithub: register('logo-github', 0xea84),\n    markGithub: register('mark-github', 0xea84),\n    github: register('github', 0xea84),\n    terminal: register('terminal', 0xea85),\n    console: register('console', 0xea85),\n    repl: register('repl', 0xea85),\n    zap: register('zap', 0xea86),\n    symbolEvent: register('symbol-event', 0xea86),\n    error: register('error', 0xea87),\n    stop: register('stop', 0xea87),\n    variable: register('variable', 0xea88),\n    symbolVariable: register('symbol-variable', 0xea88),\n    array: register('array', 0xea8a),\n    symbolArray: register('symbol-array', 0xea8a),\n    symbolModule: register('symbol-module', 0xea8b),\n    symbolPackage: register('symbol-package', 0xea8b),\n    symbolNamespace: register('symbol-namespace', 0xea8b),\n    symbolObject: register('symbol-object', 0xea8b),\n    symbolMethod: register('symbol-method', 0xea8c),\n    symbolFunction: register('symbol-function', 0xea8c),\n    symbolConstructor: register('symbol-constructor', 0xea8c),\n    symbolBoolean: register('symbol-boolean', 0xea8f),\n    symbolNull: register('symbol-null', 0xea8f),\n    symbolNumeric: register('symbol-numeric', 0xea90),\n    symbolNumber: register('symbol-number', 0xea90),\n    symbolStructure: register('symbol-structure', 0xea91),\n    symbolStruct: register('symbol-struct', 0xea91),\n    symbolParameter: register('symbol-parameter', 0xea92),\n    symbolTypeParameter: register('symbol-type-parameter', 0xea92),\n    symbolKey: register('symbol-key', 0xea93),\n    symbolText: register('symbol-text', 0xea93),\n    symbolReference: register('symbol-reference', 0xea94),\n    goToFile: register('go-to-file', 0xea94),\n    symbolEnum: register('symbol-enum', 0xea95),\n    symbolValue: register('symbol-value', 0xea95),\n    symbolRuler: register('symbol-ruler', 0xea96),\n    symbolUnit: register('symbol-unit', 0xea96),\n    activateBreakpoints: register('activate-breakpoints', 0xea97),\n    archive: register('archive', 0xea98),\n    arrowBoth: register('arrow-both', 0xea99),\n    arrowDown: register('arrow-down', 0xea9a),\n    arrowLeft: register('arrow-left', 0xea9b),\n    arrowRight: register('arrow-right', 0xea9c),\n    arrowSmallDown: register('arrow-small-down', 0xea9d),\n    arrowSmallLeft: register('arrow-small-left', 0xea9e),\n    arrowSmallRight: register('arrow-small-right', 0xea9f),\n    arrowSmallUp: register('arrow-small-up', 0xeaa0),\n    arrowUp: register('arrow-up', 0xeaa1),\n    bell: register('bell', 0xeaa2),\n    bold: register('bold', 0xeaa3),\n    book: register('book', 0xeaa4),\n    bookmark: register('bookmark', 0xeaa5),\n    debugBreakpointConditionalUnverified: register('debug-breakpoint-conditional-unverified', 0xeaa6),\n    debugBreakpointConditional: register('debug-breakpoint-conditional', 0xeaa7),\n    debugBreakpointConditionalDisabled: register('debug-breakpoint-conditional-disabled', 0xeaa7),\n    debugBreakpointDataUnverified: register('debug-breakpoint-data-unverified', 0xeaa8),\n    debugBreakpointData: register('debug-breakpoint-data', 0xeaa9),\n    debugBreakpointDataDisabled: register('debug-breakpoint-data-disabled', 0xeaa9),\n    debugBreakpointLogUnverified: register('debug-breakpoint-log-unverified', 0xeaaa),\n    debugBreakpointLog: register('debug-breakpoint-log', 0xeaab),\n    debugBreakpointLogDisabled: register('debug-breakpoint-log-disabled', 0xeaab),\n    briefcase: register('briefcase', 0xeaac),\n    broadcast: register('broadcast', 0xeaad),\n    browser: register('browser', 0xeaae),\n    bug: register('bug', 0xeaaf),\n    calendar: register('calendar', 0xeab0),\n    caseSensitive: register('case-sensitive', 0xeab1),\n    check: register('check', 0xeab2),\n    checklist: register('checklist', 0xeab3),\n    chevronDown: register('chevron-down', 0xeab4),\n    dropDownButton: register('drop-down-button', 0xeab4),\n    chevronLeft: register('chevron-left', 0xeab5),\n    chevronRight: register('chevron-right', 0xeab6),\n    chevronUp: register('chevron-up', 0xeab7),\n    chromeClose: register('chrome-close', 0xeab8),\n    chromeMaximize: register('chrome-maximize', 0xeab9),\n    chromeMinimize: register('chrome-minimize', 0xeaba),\n    chromeRestore: register('chrome-restore', 0xeabb),\n    circle: register('circle', 0xeabc),\n    circleOutline: register('circle-outline', 0xeabc),\n    debugBreakpointUnverified: register('debug-breakpoint-unverified', 0xeabc),\n    circleSlash: register('circle-slash', 0xeabd),\n    circuitBoard: register('circuit-board', 0xeabe),\n    clearAll: register('clear-all', 0xeabf),\n    clippy: register('clippy', 0xeac0),\n    closeAll: register('close-all', 0xeac1),\n    cloudDownload: register('cloud-download', 0xeac2),\n    cloudUpload: register('cloud-upload', 0xeac3),\n    code: register('code', 0xeac4),\n    collapseAll: register('collapse-all', 0xeac5),\n    colorMode: register('color-mode', 0xeac6),\n    commentDiscussion: register('comment-discussion', 0xeac7),\n    compareChanges: register('compare-changes', 0xeafd),\n    creditCard: register('credit-card', 0xeac9),\n    dash: register('dash', 0xeacc),\n    dashboard: register('dashboard', 0xeacd),\n    database: register('database', 0xeace),\n    debugContinue: register('debug-continue', 0xeacf),\n    debugDisconnect: register('debug-disconnect', 0xead0),\n    debugPause: register('debug-pause', 0xead1),\n    debugRestart: register('debug-restart', 0xead2),\n    debugStart: register('debug-start', 0xead3),\n    debugStepInto: register('debug-step-into', 0xead4),\n    debugStepOut: register('debug-step-out', 0xead5),\n    debugStepOver: register('debug-step-over', 0xead6),\n    debugStop: register('debug-stop', 0xead7),\n    debug: register('debug', 0xead8),\n    deviceCameraVideo: register('device-camera-video', 0xead9),\n    deviceCamera: register('device-camera', 0xeada),\n    deviceMobile: register('device-mobile', 0xeadb),\n    diffAdded: register('diff-added', 0xeadc),\n    diffIgnored: register('diff-ignored', 0xeadd),\n    diffModified: register('diff-modified', 0xeade),\n    diffRemoved: register('diff-removed', 0xeadf),\n    diffRenamed: register('diff-renamed', 0xeae0),\n    diff: register('diff', 0xeae1),\n    discard: register('discard', 0xeae2),\n    editorLayout: register('editor-layout', 0xeae3),\n    emptyWindow: register('empty-window', 0xeae4),\n    exclude: register('exclude', 0xeae5),\n    extensions: register('extensions', 0xeae6),\n    eyeClosed: register('eye-closed', 0xeae7),\n    fileBinary: register('file-binary', 0xeae8),\n    fileCode: register('file-code', 0xeae9),\n    fileMedia: register('file-media', 0xeaea),\n    filePdf: register('file-pdf', 0xeaeb),\n    fileSubmodule: register('file-submodule', 0xeaec),\n    fileSymlinkDirectory: register('file-symlink-directory', 0xeaed),\n    fileSymlinkFile: register('file-symlink-file', 0xeaee),\n    fileZip: register('file-zip', 0xeaef),\n    files: register('files', 0xeaf0),\n    filter: register('filter', 0xeaf1),\n    flame: register('flame', 0xeaf2),\n    foldDown: register('fold-down', 0xeaf3),\n    foldUp: register('fold-up', 0xeaf4),\n    fold: register('fold', 0xeaf5),\n    folderActive: register('folder-active', 0xeaf6),\n    folderOpened: register('folder-opened', 0xeaf7),\n    gear: register('gear', 0xeaf8),\n    gift: register('gift', 0xeaf9),\n    gistSecret: register('gist-secret', 0xeafa),\n    gist: register('gist', 0xeafb),\n    gitCommit: register('git-commit', 0xeafc),\n    gitCompare: register('git-compare', 0xeafd),\n    gitMerge: register('git-merge', 0xeafe),\n    githubAction: register('github-action', 0xeaff),\n    githubAlt: register('github-alt', 0xeb00),\n    globe: register('globe', 0xeb01),\n    grabber: register('grabber', 0xeb02),\n    graph: register('graph', 0xeb03),\n    gripper: register('gripper', 0xeb04),\n    heart: register('heart', 0xeb05),\n    home: register('home', 0xeb06),\n    horizontalRule: register('horizontal-rule', 0xeb07),\n    hubot: register('hubot', 0xeb08),\n    inbox: register('inbox', 0xeb09),\n    issueClosed: register('issue-closed', 0xeba4),\n    issueReopened: register('issue-reopened', 0xeb0b),\n    issues: register('issues', 0xeb0c),\n    italic: register('italic', 0xeb0d),\n    jersey: register('jersey', 0xeb0e),\n    json: register('json', 0xeb0f),\n    bracket: register('bracket', 0xeb0f),\n    kebabVertical: register('kebab-vertical', 0xeb10),\n    key: register('key', 0xeb11),\n    law: register('law', 0xeb12),\n    lightbulbAutofix: register('lightbulb-autofix', 0xeb13),\n    linkExternal: register('link-external', 0xeb14),\n    link: register('link', 0xeb15),\n    listOrdered: register('list-ordered', 0xeb16),\n    listUnordered: register('list-unordered', 0xeb17),\n    liveShare: register('live-share', 0xeb18),\n    loading: register('loading', 0xeb19),\n    location: register('location', 0xeb1a),\n    mailRead: register('mail-read', 0xeb1b),\n    mail: register('mail', 0xeb1c),\n    markdown: register('markdown', 0xeb1d),\n    megaphone: register('megaphone', 0xeb1e),\n    mention: register('mention', 0xeb1f),\n    milestone: register('milestone', 0xeb20),\n    gitPullRequestMilestone: register('git-pull-request-milestone', 0xeb20),\n    mortarBoard: register('mortar-board', 0xeb21),\n    move: register('move', 0xeb22),\n    multipleWindows: register('multiple-windows', 0xeb23),\n    mute: register('mute', 0xeb24),\n    noNewline: register('no-newline', 0xeb25),\n    note: register('note', 0xeb26),\n    octoface: register('octoface', 0xeb27),\n    openPreview: register('open-preview', 0xeb28),\n    package_: register('package', 0xeb29),\n    paintcan: register('paintcan', 0xeb2a),\n    pin: register('pin', 0xeb2b),\n    play: register('play', 0xeb2c),\n    run: register('run', 0xeb2c),\n    plug: register('plug', 0xeb2d),\n    preserveCase: register('preserve-case', 0xeb2e),\n    preview: register('preview', 0xeb2f),\n    project: register('project', 0xeb30),\n    pulse: register('pulse', 0xeb31),\n    question: register('question', 0xeb32),\n    quote: register('quote', 0xeb33),\n    radioTower: register('radio-tower', 0xeb34),\n    reactions: register('reactions', 0xeb35),\n    references: register('references', 0xeb36),\n    refresh: register('refresh', 0xeb37),\n    regex: register('regex', 0xeb38),\n    remoteExplorer: register('remote-explorer', 0xeb39),\n    remote: register('remote', 0xeb3a),\n    remove: register('remove', 0xeb3b),\n    replaceAll: register('replace-all', 0xeb3c),\n    replace: register('replace', 0xeb3d),\n    repoClone: register('repo-clone', 0xeb3e),\n    repoForcePush: register('repo-force-push', 0xeb3f),\n    repoPull: register('repo-pull', 0xeb40),\n    repoPush: register('repo-push', 0xeb41),\n    report: register('report', 0xeb42),\n    requestChanges: register('request-changes', 0xeb43),\n    rocket: register('rocket', 0xeb44),\n    rootFolderOpened: register('root-folder-opened', 0xeb45),\n    rootFolder: register('root-folder', 0xeb46),\n    rss: register('rss', 0xeb47),\n    ruby: register('ruby', 0xeb48),\n    saveAll: register('save-all', 0xeb49),\n    saveAs: register('save-as', 0xeb4a),\n    save: register('save', 0xeb4b),\n    screenFull: register('screen-full', 0xeb4c),\n    screenNormal: register('screen-normal', 0xeb4d),\n    searchStop: register('search-stop', 0xeb4e),\n    server: register('server', 0xeb50),\n    settingsGear: register('settings-gear', 0xeb51),\n    settings: register('settings', 0xeb52),\n    shield: register('shield', 0xeb53),\n    smiley: register('smiley', 0xeb54),\n    sortPrecedence: register('sort-precedence', 0xeb55),\n    splitHorizontal: register('split-horizontal', 0xeb56),\n    splitVertical: register('split-vertical', 0xeb57),\n    squirrel: register('squirrel', 0xeb58),\n    starFull: register('star-full', 0xeb59),\n    starHalf: register('star-half', 0xeb5a),\n    symbolClass: register('symbol-class', 0xeb5b),\n    symbolColor: register('symbol-color', 0xeb5c),\n    symbolCustomColor: register('symbol-customcolor', 0xeb5c),\n    symbolConstant: register('symbol-constant', 0xeb5d),\n    symbolEnumMember: register('symbol-enum-member', 0xeb5e),\n    symbolField: register('symbol-field', 0xeb5f),\n    symbolFile: register('symbol-file', 0xeb60),\n    symbolInterface: register('symbol-interface', 0xeb61),\n    symbolKeyword: register('symbol-keyword', 0xeb62),\n    symbolMisc: register('symbol-misc', 0xeb63),\n    symbolOperator: register('symbol-operator', 0xeb64),\n    symbolProperty: register('symbol-property', 0xeb65),\n    wrench: register('wrench', 0xeb65),\n    wrenchSubaction: register('wrench-subaction', 0xeb65),\n    symbolSnippet: register('symbol-snippet', 0xeb66),\n    tasklist: register('tasklist', 0xeb67),\n    telescope: register('telescope', 0xeb68),\n    textSize: register('text-size', 0xeb69),\n    threeBars: register('three-bars', 0xeb6a),\n    thumbsdown: register('thumbsdown', 0xeb6b),\n    thumbsup: register('thumbsup', 0xeb6c),\n    tools: register('tools', 0xeb6d),\n    triangleDown: register('triangle-down', 0xeb6e),\n    triangleLeft: register('triangle-left', 0xeb6f),\n    triangleRight: register('triangle-right', 0xeb70),\n    triangleUp: register('triangle-up', 0xeb71),\n    twitter: register('twitter', 0xeb72),\n    unfold: register('unfold', 0xeb73),\n    unlock: register('unlock', 0xeb74),\n    unmute: register('unmute', 0xeb75),\n    unverified: register('unverified', 0xeb76),\n    verified: register('verified', 0xeb77),\n    versions: register('versions', 0xeb78),\n    vmActive: register('vm-active', 0xeb79),\n    vmOutline: register('vm-outline', 0xeb7a),\n    vmRunning: register('vm-running', 0xeb7b),\n    watch: register('watch', 0xeb7c),\n    whitespace: register('whitespace', 0xeb7d),\n    wholeWord: register('whole-word', 0xeb7e),\n    window: register('window', 0xeb7f),\n    wordWrap: register('word-wrap', 0xeb80),\n    zoomIn: register('zoom-in', 0xeb81),\n    zoomOut: register('zoom-out', 0xeb82),\n    listFilter: register('list-filter', 0xeb83),\n    listFlat: register('list-flat', 0xeb84),\n    listSelection: register('list-selection', 0xeb85),\n    selection: register('selection', 0xeb85),\n    listTree: register('list-tree', 0xeb86),\n    debugBreakpointFunctionUnverified: register('debug-breakpoint-function-unverified', 0xeb87),\n    debugBreakpointFunction: register('debug-breakpoint-function', 0xeb88),\n    debugBreakpointFunctionDisabled: register('debug-breakpoint-function-disabled', 0xeb88),\n    debugStackframeActive: register('debug-stackframe-active', 0xeb89),\n    circleSmallFilled: register('circle-small-filled', 0xeb8a),\n    debugStackframeDot: register('debug-stackframe-dot', 0xeb8a),\n    debugStackframe: register('debug-stackframe', 0xeb8b),\n    debugStackframeFocused: register('debug-stackframe-focused', 0xeb8b),\n    debugBreakpointUnsupported: register('debug-breakpoint-unsupported', 0xeb8c),\n    symbolString: register('symbol-string', 0xeb8d),\n    debugReverseContinue: register('debug-reverse-continue', 0xeb8e),\n    debugStepBack: register('debug-step-back', 0xeb8f),\n    debugRestartFrame: register('debug-restart-frame', 0xeb90),\n    callIncoming: register('call-incoming', 0xeb92),\n    callOutgoing: register('call-outgoing', 0xeb93),\n    menu: register('menu', 0xeb94),\n    expandAll: register('expand-all', 0xeb95),\n    feedback: register('feedback', 0xeb96),\n    gitPullRequestReviewer: register('git-pull-request-reviewer', 0xeb96),\n    groupByRefType: register('group-by-ref-type', 0xeb97),\n    ungroupByRefType: register('ungroup-by-ref-type', 0xeb98),\n    account: register('account', 0xeb99),\n    gitPullRequestAssignee: register('git-pull-request-assignee', 0xeb99),\n    bellDot: register('bell-dot', 0xeb9a),\n    debugConsole: register('debug-console', 0xeb9b),\n    library: register('library', 0xeb9c),\n    output: register('output', 0xeb9d),\n    runAll: register('run-all', 0xeb9e),\n    syncIgnored: register('sync-ignored', 0xeb9f),\n    pinned: register('pinned', 0xeba0),\n    githubInverted: register('github-inverted', 0xeba1),\n    debugAlt: register('debug-alt', 0xeb91),\n    serverProcess: register('server-process', 0xeba2),\n    serverEnvironment: register('server-environment', 0xeba3),\n    pass: register('pass', 0xeba4),\n    stopCircle: register('stop-circle', 0xeba5),\n    playCircle: register('play-circle', 0xeba6),\n    record: register('record', 0xeba7),\n    debugAltSmall: register('debug-alt-small', 0xeba8),\n    vmConnect: register('vm-connect', 0xeba9),\n    cloud: register('cloud', 0xebaa),\n    merge: register('merge', 0xebab),\n    exportIcon: register('export', 0xebac),\n    graphLeft: register('graph-left', 0xebad),\n    magnet: register('magnet', 0xebae),\n    notebook: register('notebook', 0xebaf),\n    redo: register('redo', 0xebb0),\n    checkAll: register('check-all', 0xebb1),\n    pinnedDirty: register('pinned-dirty', 0xebb2),\n    passFilled: register('pass-filled', 0xebb3),\n    circleLargeFilled: register('circle-large-filled', 0xebb4),\n    circleLarge: register('circle-large', 0xebb5),\n    circleLargeOutline: register('circle-large-outline', 0xebb5),\n    combine: register('combine', 0xebb6),\n    gather: register('gather', 0xebb6),\n    table: register('table', 0xebb7),\n    variableGroup: register('variable-group', 0xebb8),\n    typeHierarchy: register('type-hierarchy', 0xebb9),\n    typeHierarchySub: register('type-hierarchy-sub', 0xebba),\n    typeHierarchySuper: register('type-hierarchy-super', 0xebbb),\n    gitPullRequestCreate: register('git-pull-request-create', 0xebbc),\n    runAbove: register('run-above', 0xebbd),\n    runBelow: register('run-below', 0xebbe),\n    notebookTemplate: register('notebook-template', 0xebbf),\n    debugRerun: register('debug-rerun', 0xebc0),\n    workspaceTrusted: register('workspace-trusted', 0xebc1),\n    workspaceUntrusted: register('workspace-untrusted', 0xebc2),\n    workspaceUnspecified: register('workspace-unspecified', 0xebc3),\n    terminalCmd: register('terminal-cmd', 0xebc4),\n    terminalDebian: register('terminal-debian', 0xebc5),\n    terminalLinux: register('terminal-linux', 0xebc6),\n    terminalPowershell: register('terminal-powershell', 0xebc7),\n    terminalTmux: register('terminal-tmux', 0xebc8),\n    terminalUbuntu: register('terminal-ubuntu', 0xebc9),\n    terminalBash: register('terminal-bash', 0xebca),\n    arrowSwap: register('arrow-swap', 0xebcb),\n    copy: register('copy', 0xebcc),\n    personAdd: register('person-add', 0xebcd),\n    filterFilled: register('filter-filled', 0xebce),\n    wand: register('wand', 0xebcf),\n    debugLineByLine: register('debug-line-by-line', 0xebd0),\n    inspect: register('inspect', 0xebd1),\n    layers: register('layers', 0xebd2),\n    layersDot: register('layers-dot', 0xebd3),\n    layersActive: register('layers-active', 0xebd4),\n    compass: register('compass', 0xebd5),\n    compassDot: register('compass-dot', 0xebd6),\n    compassActive: register('compass-active', 0xebd7),\n    azure: register('azure', 0xebd8),\n    issueDraft: register('issue-draft', 0xebd9),\n    gitPullRequestClosed: register('git-pull-request-closed', 0xebda),\n    gitPullRequestDraft: register('git-pull-request-draft', 0xebdb),\n    debugAll: register('debug-all', 0xebdc),\n    debugCoverage: register('debug-coverage', 0xebdd),\n    runErrors: register('run-errors', 0xebde),\n    folderLibrary: register('folder-library', 0xebdf),\n    debugContinueSmall: register('debug-continue-small', 0xebe0),\n    beakerStop: register('beaker-stop', 0xebe1),\n    graphLine: register('graph-line', 0xebe2),\n    graphScatter: register('graph-scatter', 0xebe3),\n    pieChart: register('pie-chart', 0xebe4),\n    bracketDot: register('bracket-dot', 0xebe5),\n    bracketError: register('bracket-error', 0xebe6),\n    lockSmall: register('lock-small', 0xebe7),\n    azureDevops: register('azure-devops', 0xebe8),\n    verifiedFilled: register('verified-filled', 0xebe9),\n    newLine: register('newline', 0xebea),\n    layout: register('layout', 0xebeb),\n    layoutActivitybarLeft: register('layout-activitybar-left', 0xebec),\n    layoutActivitybarRight: register('layout-activitybar-right', 0xebed),\n    layoutPanelLeft: register('layout-panel-left', 0xebee),\n    layoutPanelCenter: register('layout-panel-center', 0xebef),\n    layoutPanelJustify: register('layout-panel-justify', 0xebf0),\n    layoutPanelRight: register('layout-panel-right', 0xebf1),\n    layoutPanel: register('layout-panel', 0xebf2),\n    layoutSidebarLeft: register('layout-sidebar-left', 0xebf3),\n    layoutSidebarRight: register('layout-sidebar-right', 0xebf4),\n    layoutStatusbar: register('layout-statusbar', 0xebf5),\n    layoutMenubar: register('layout-menubar', 0xebf6),\n    layoutCentered: register('layout-centered', 0xebf7),\n    layoutSidebarRightOff: register('layout-sidebar-right-off', 0xec00),\n    layoutPanelOff: register('layout-panel-off', 0xec01),\n    layoutSidebarLeftOff: register('layout-sidebar-left-off', 0xec02),\n    target: register('target', 0xebf8),\n    indent: register('indent', 0xebf9),\n    recordSmall: register('record-small', 0xebfa),\n    errorSmall: register('error-small', 0xebfb),\n    arrowCircleDown: register('arrow-circle-down', 0xebfc),\n    arrowCircleLeft: register('arrow-circle-left', 0xebfd),\n    arrowCircleRight: register('arrow-circle-right', 0xebfe),\n    arrowCircleUp: register('arrow-circle-up', 0xebff),\n    heartFilled: register('heart-filled', 0xec04),\n    map: register('map', 0xec05),\n    mapFilled: register('map-filled', 0xec06),\n    circleSmall: register('circle-small', 0xec07),\n    bellSlash: register('bell-slash', 0xec08),\n    bellSlashDot: register('bell-slash-dot', 0xec09),\n    commentUnresolved: register('comment-unresolved', 0xec0a),\n    gitPullRequestGoToChanges: register('git-pull-request-go-to-changes', 0xec0b),\n    gitPullRequestNewChanges: register('git-pull-request-new-changes', 0xec0c),\n    searchFuzzy: register('search-fuzzy', 0xec0d),\n    commentDraft: register('comment-draft', 0xec0e),\n    send: register('send', 0xec0f),\n    sparkle: register('sparkle', 0xec10),\n    insert: register('insert', 0xec11),\n    mic: register('mic', 0xec12),\n    // derived icons, that could become separate icons\n    dialogError: register('dialog-error', 'error'),\n    dialogWarning: register('dialog-warning', 'warning'),\n    dialogInfo: register('dialog-info', 'info'),\n    dialogClose: register('dialog-close', 'close'),\n    treeItemExpanded: register('tree-item-expanded', 'chevron-down'),\n    treeFilterOnTypeOn: register('tree-filter-on-type-on', 'list-filter'),\n    treeFilterOnTypeOff: register('tree-filter-on-type-off', 'list-selection'),\n    treeFilterClear: register('tree-filter-clear', 'close'),\n    treeItemLoading: register('tree-item-loading', 'loading'),\n    menuSelection: register('menu-selection', 'check'),\n    menuSubmenu: register('menu-submenu', 'chevron-right'),\n    menuBarMore: register('menubar-more', 'more'),\n    scrollbarButtonLeft: register('scrollbar-button-left', 'triangle-left'),\n    scrollbarButtonRight: register('scrollbar-button-right', 'triangle-right'),\n    scrollbarButtonUp: register('scrollbar-button-up', 'triangle-up'),\n    scrollbarButtonDown: register('scrollbar-button-down', 'triangle-down'),\n    toolBarMore: register('toolbar-more', 'more'),\n    quickInputBack: register('quick-input-back', 'arrow-left')\n};\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Codicon } from './codicons.js';\nexport var ThemeColor;\n(function (ThemeColor) {\n    function isThemeColor(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string';\n    }\n    ThemeColor.isThemeColor = isThemeColor;\n})(ThemeColor || (ThemeColor = {}));\nexport function themeColorFromId(id) {\n    return { id };\n}\nexport var ThemeIcon;\n(function (ThemeIcon) {\n    ThemeIcon.iconNameSegment = '[A-Za-z0-9]+';\n    ThemeIcon.iconNameExpression = '[A-Za-z0-9-]+';\n    ThemeIcon.iconModifierExpression = '~[A-Za-z]+';\n    ThemeIcon.iconNameCharacter = '[A-Za-z0-9~-]';\n    const ThemeIconIdRegex = new RegExp(`^(${ThemeIcon.iconNameExpression})(${ThemeIcon.iconModifierExpression})?$`);\n    function asClassNameArray(icon) {\n        const match = ThemeIconIdRegex.exec(icon.id);\n        if (!match) {\n            return asClassNameArray(Codicon.error);\n        }\n        const [, id, modifier] = match;\n        const classNames = ['codicon', 'codicon-' + id];\n        if (modifier) {\n            classNames.push('codicon-modifier-' + modifier.substring(1));\n        }\n        return classNames;\n    }\n    ThemeIcon.asClassNameArray = asClassNameArray;\n    function asClassName(icon) {\n        return asClassNameArray(icon).join(' ');\n    }\n    ThemeIcon.asClassName = asClassName;\n    function asCSSSelector(icon) {\n        return '.' + asClassNameArray(icon).join('.');\n    }\n    ThemeIcon.asCSSSelector = asCSSSelector;\n    function isThemeIcon(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string' && (typeof obj.color === 'undefined' || ThemeColor.isThemeColor(obj.color));\n    }\n    ThemeIcon.isThemeIcon = isThemeIcon;\n    const _regexFromString = new RegExp(`^\\\\$\\\\((${ThemeIcon.iconNameExpression}(?:${ThemeIcon.iconModifierExpression})?)\\\\)$`);\n    function fromString(str) {\n        const match = _regexFromString.exec(str);\n        if (!match) {\n            return undefined;\n        }\n        const [, name] = match;\n        return { id: name };\n    }\n    ThemeIcon.fromString = fromString;\n    function fromId(id) {\n        return { id };\n    }\n    ThemeIcon.fromId = fromId;\n    function modify(icon, modifier) {\n        let id = icon.id;\n        const tildeIndex = id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            id = id.substring(0, tildeIndex);\n        }\n        if (modifier) {\n            id = `${id}~${modifier}`;\n        }\n        return { id };\n    }\n    ThemeIcon.modify = modify;\n    function getModifier(icon) {\n        const tildeIndex = icon.id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            return icon.id.substring(tildeIndex + 1);\n        }\n        return undefined;\n    }\n    ThemeIcon.getModifier = getModifier;\n    function isEqual(ti1, ti2) {\n        var _a, _b;\n        return ti1.id === ti2.id && ((_a = ti1.color) === null || _a === void 0 ? void 0 : _a.id) === ((_b = ti2.color) === null || _b === void 0 ? void 0 : _b.id);\n    }\n    ThemeIcon.isEqual = isEqual;\n})(ThemeIcon || (ThemeIcon = {}));\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\nexport function isUUID(value) {\n    return _UUIDPattern.test(value);\n}\nexport const generateUuid = (function () {\n    // use `randomUUID` if possible\n    if (typeof crypto === 'object' && typeof crypto.randomUUID === 'function') {\n        return crypto.randomUUID.bind(crypto);\n    }\n    // use `randomValues` if possible\n    let getRandomValues;\n    if (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    else {\n        getRandomValues = function (bucket) {\n            for (let i = 0; i < bucket.length; i++) {\n                bucket[i] = Math.floor(Math.random() * 256);\n            }\n            return bucket;\n        };\n    }\n    // prep-work\n    const _data = new Uint8Array(16);\n    const _hex = [];\n    for (let i = 0; i < 256; i++) {\n        _hex.push(i.toString(16).padStart(2, '0'));\n    }\n    return function generateUuid() {\n        // get data\n        getRandomValues(_data);\n        // set version bits\n        _data[6] = (_data[6] & 0x0f) | 0x40;\n        _data[8] = (_data[8] & 0x3f) | 0x80;\n        // print as string\n        let i = 0;\n        let result = '';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        return result;\n    };\n})();\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LRUCache } from './map.js';\nimport * as strings from './strings.js';\n// Combined filters\n/**\n * @returns A filter which combines the provided set\n * of filters with an or. The *first* filters that\n * matches defined the return value of the returned\n * filter.\n */\nexport function or(...filter) {\n    return function (word, wordToMatchAgainst) {\n        for (let i = 0, len = filter.length; i < len; i++) {\n            const match = filter[i](word, wordToMatchAgainst);\n            if (match) {\n                return match;\n            }\n        }\n        return null;\n    };\n}\n// Prefix\nexport const matchesStrictPrefix = _matchesPrefix.bind(undefined, false);\nexport const matchesPrefix = _matchesPrefix.bind(undefined, true);\nfunction _matchesPrefix(ignoreCase, word, wordToMatchAgainst) {\n    if (!wordToMatchAgainst || wordToMatchAgainst.length < word.length) {\n        return null;\n    }\n    let matches;\n    if (ignoreCase) {\n        matches = strings.startsWithIgnoreCase(wordToMatchAgainst, word);\n    }\n    else {\n        matches = wordToMatchAgainst.indexOf(word) === 0;\n    }\n    if (!matches) {\n        return null;\n    }\n    return word.length > 0 ? [{ start: 0, end: word.length }] : [];\n}\n// Contiguous Substring\nexport function matchesContiguousSubString(word, wordToMatchAgainst) {\n    const index = wordToMatchAgainst.toLowerCase().indexOf(word.toLowerCase());\n    if (index === -1) {\n        return null;\n    }\n    return [{ start: index, end: index + word.length }];\n}\n// Substring\nexport function matchesSubString(word, wordToMatchAgainst) {\n    return _matchesSubString(word.toLowerCase(), wordToMatchAgainst.toLowerCase(), 0, 0);\n}\nfunction _matchesSubString(word, wordToMatchAgainst, i, j) {\n    if (i === word.length) {\n        return [];\n    }\n    else if (j === wordToMatchAgainst.length) {\n        return null;\n    }\n    else {\n        if (word[i] === wordToMatchAgainst[j]) {\n            let result = null;\n            if (result = _matchesSubString(word, wordToMatchAgainst, i + 1, j + 1)) {\n                return join({ start: j, end: j + 1 }, result);\n            }\n            return null;\n        }\n        return _matchesSubString(word, wordToMatchAgainst, i, j + 1);\n    }\n}\n// CamelCase\nfunction isLower(code) {\n    return 97 /* CharCode.a */ <= code && code <= 122 /* CharCode.z */;\n}\nexport function isUpper(code) {\n    return 65 /* CharCode.A */ <= code && code <= 90 /* CharCode.Z */;\n}\nfunction isNumber(code) {\n    return 48 /* CharCode.Digit0 */ <= code && code <= 57 /* CharCode.Digit9 */;\n}\nfunction isWhitespace(code) {\n    return (code === 32 /* CharCode.Space */\n        || code === 9 /* CharCode.Tab */\n        || code === 10 /* CharCode.LineFeed */\n        || code === 13 /* CharCode.CarriageReturn */);\n}\nconst wordSeparators = new Set();\n// These are chosen as natural word separators based on writen text.\n// It is a subset of the word separators used by the monaco editor.\n'()[]{}<>`\\'\"-/;:,.?!'\n    .split('')\n    .forEach(s => wordSeparators.add(s.charCodeAt(0)));\nfunction isWordSeparator(code) {\n    return isWhitespace(code) || wordSeparators.has(code);\n}\nfunction charactersMatch(codeA, codeB) {\n    return (codeA === codeB) || (isWordSeparator(codeA) && isWordSeparator(codeB));\n}\nfunction isAlphanumeric(code) {\n    return isLower(code) || isUpper(code) || isNumber(code);\n}\nfunction join(head, tail) {\n    if (tail.length === 0) {\n        tail = [head];\n    }\n    else if (head.end === tail[0].start) {\n        tail[0].start = head.start;\n    }\n    else {\n        tail.unshift(head);\n    }\n    return tail;\n}\nfunction nextAnchor(camelCaseWord, start) {\n    for (let i = start; i < camelCaseWord.length; i++) {\n        const c = camelCaseWord.charCodeAt(i);\n        if (isUpper(c) || isNumber(c) || (i > 0 && !isAlphanumeric(camelCaseWord.charCodeAt(i - 1)))) {\n            return i;\n        }\n    }\n    return camelCaseWord.length;\n}\nfunction _matchesCamelCase(word, camelCaseWord, i, j) {\n    if (i === word.length) {\n        return [];\n    }\n    else if (j === camelCaseWord.length) {\n        return null;\n    }\n    else if (word[i] !== camelCaseWord[j].toLowerCase()) {\n        return null;\n    }\n    else {\n        let result = null;\n        let nextUpperIndex = j + 1;\n        result = _matchesCamelCase(word, camelCaseWord, i + 1, j + 1);\n        while (!result && (nextUpperIndex = nextAnchor(camelCaseWord, nextUpperIndex)) < camelCaseWord.length) {\n            result = _matchesCamelCase(word, camelCaseWord, i + 1, nextUpperIndex);\n            nextUpperIndex++;\n        }\n        return result === null ? null : join({ start: j, end: j + 1 }, result);\n    }\n}\n// Heuristic to avoid computing camel case matcher for words that don't\n// look like camelCaseWords.\nfunction analyzeCamelCaseWord(word) {\n    let upper = 0, lower = 0, alpha = 0, numeric = 0, code = 0;\n    for (let i = 0; i < word.length; i++) {\n        code = word.charCodeAt(i);\n        if (isUpper(code)) {\n            upper++;\n        }\n        if (isLower(code)) {\n            lower++;\n        }\n        if (isAlphanumeric(code)) {\n            alpha++;\n        }\n        if (isNumber(code)) {\n            numeric++;\n        }\n    }\n    const upperPercent = upper / word.length;\n    const lowerPercent = lower / word.length;\n    const alphaPercent = alpha / word.length;\n    const numericPercent = numeric / word.length;\n    return { upperPercent, lowerPercent, alphaPercent, numericPercent };\n}\nfunction isUpperCaseWord(analysis) {\n    const { upperPercent, lowerPercent } = analysis;\n    return lowerPercent === 0 && upperPercent > 0.6;\n}\nfunction isCamelCaseWord(analysis) {\n    const { upperPercent, lowerPercent, alphaPercent, numericPercent } = analysis;\n    return lowerPercent > 0.2 && upperPercent < 0.8 && alphaPercent > 0.6 && numericPercent < 0.2;\n}\n// Heuristic to avoid computing camel case matcher for words that don't\n// look like camel case patterns.\nfunction isCamelCasePattern(word) {\n    let upper = 0, lower = 0, code = 0, whitespace = 0;\n    for (let i = 0; i < word.length; i++) {\n        code = word.charCodeAt(i);\n        if (isUpper(code)) {\n            upper++;\n        }\n        if (isLower(code)) {\n            lower++;\n        }\n        if (isWhitespace(code)) {\n            whitespace++;\n        }\n    }\n    if ((upper === 0 || lower === 0) && whitespace === 0) {\n        return word.length <= 30;\n    }\n    else {\n        return upper <= 5;\n    }\n}\nexport function matchesCamelCase(word, camelCaseWord) {\n    if (!camelCaseWord) {\n        return null;\n    }\n    camelCaseWord = camelCaseWord.trim();\n    if (camelCaseWord.length === 0) {\n        return null;\n    }\n    if (!isCamelCasePattern(word)) {\n        return null;\n    }\n    if (camelCaseWord.length > 60) {\n        return null;\n    }\n    const analysis = analyzeCamelCaseWord(camelCaseWord);\n    if (!isCamelCaseWord(analysis)) {\n        if (!isUpperCaseWord(analysis)) {\n            return null;\n        }\n        camelCaseWord = camelCaseWord.toLowerCase();\n    }\n    let result = null;\n    let i = 0;\n    word = word.toLowerCase();\n    while (i < camelCaseWord.length && (result = _matchesCamelCase(word, camelCaseWord, 0, i)) === null) {\n        i = nextAnchor(camelCaseWord, i + 1);\n    }\n    return result;\n}\n// Matches beginning of words supporting non-ASCII languages\n// If `contiguous` is true then matches word with beginnings of the words in the target. E.g. \"pul\" will match \"Git: Pull\"\n// Otherwise also matches sub string of the word with beginnings of the words in the target. E.g. \"gp\" or \"g p\" will match \"Git: Pull\"\n// Useful in cases where the target is words (e.g. command labels)\nexport function matchesWords(word, target, contiguous = false) {\n    if (!target || target.length === 0) {\n        return null;\n    }\n    let result = null;\n    let i = 0;\n    word = word.toLowerCase();\n    target = target.toLowerCase();\n    while (i < target.length && (result = _matchesWords(word, target, 0, i, contiguous)) === null) {\n        i = nextWord(target, i + 1);\n    }\n    return result;\n}\nfunction _matchesWords(word, target, i, j, contiguous) {\n    if (i === word.length) {\n        return [];\n    }\n    else if (j === target.length) {\n        return null;\n    }\n    else if (!charactersMatch(word.charCodeAt(i), target.charCodeAt(j))) {\n        return null;\n    }\n    else {\n        let result = null;\n        let nextWordIndex = j + 1;\n        result = _matchesWords(word, target, i + 1, j + 1, contiguous);\n        if (!contiguous) {\n            while (!result && (nextWordIndex = nextWord(target, nextWordIndex)) < target.length) {\n                result = _matchesWords(word, target, i + 1, nextWordIndex, contiguous);\n                nextWordIndex++;\n            }\n        }\n        if (!result) {\n            return null;\n        }\n        // If the characters don't exactly match, then they must be word separators (see charactersMatch(...)).\n        // We don't want to include this in the matches but we don't want to throw the target out all together so we return `result`.\n        if (word.charCodeAt(i) !== target.charCodeAt(j)) {\n            return result;\n        }\n        return join({ start: j, end: j + 1 }, result);\n    }\n}\nfunction nextWord(word, start) {\n    for (let i = start; i < word.length; i++) {\n        if (isWordSeparator(word.charCodeAt(i)) ||\n            (i > 0 && isWordSeparator(word.charCodeAt(i - 1)))) {\n            return i;\n        }\n    }\n    return word.length;\n}\n// Fuzzy\nconst fuzzyContiguousFilter = or(matchesPrefix, matchesCamelCase, matchesContiguousSubString);\nconst fuzzySeparateFilter = or(matchesPrefix, matchesCamelCase, matchesSubString);\nconst fuzzyRegExpCache = new LRUCache(10000); // bounded to 10000 elements\nexport function matchesFuzzy(word, wordToMatchAgainst, enableSeparateSubstringMatching = false) {\n    if (typeof word !== 'string' || typeof wordToMatchAgainst !== 'string') {\n        return null; // return early for invalid input\n    }\n    // Form RegExp for wildcard matches\n    let regexp = fuzzyRegExpCache.get(word);\n    if (!regexp) {\n        regexp = new RegExp(strings.convertSimple2RegExpPattern(word), 'i');\n        fuzzyRegExpCache.set(word, regexp);\n    }\n    // RegExp Filter\n    const match = regexp.exec(wordToMatchAgainst);\n    if (match) {\n        return [{ start: match.index, end: match.index + match[0].length }];\n    }\n    // Default Filter\n    return enableSeparateSubstringMatching ? fuzzySeparateFilter(word, wordToMatchAgainst) : fuzzyContiguousFilter(word, wordToMatchAgainst);\n}\n/**\n * Match pattern against word in a fuzzy way. As in IntelliSense and faster and more\n * powerful than `matchesFuzzy`\n */\nexport function matchesFuzzy2(pattern, word) {\n    const score = fuzzyScore(pattern, pattern.toLowerCase(), 0, word, word.toLowerCase(), 0, { firstMatchCanBeWeak: true, boostFullMatch: true });\n    return score ? createMatches(score) : null;\n}\nexport function anyScore(pattern, lowPattern, patternPos, word, lowWord, wordPos) {\n    const max = Math.min(13, pattern.length);\n    for (; patternPos < max; patternPos++) {\n        const result = fuzzyScore(pattern, lowPattern, patternPos, word, lowWord, wordPos, { firstMatchCanBeWeak: true, boostFullMatch: true });\n        if (result) {\n            return result;\n        }\n    }\n    return [0, wordPos];\n}\n//#region --- fuzzyScore ---\nexport function createMatches(score) {\n    if (typeof score === 'undefined') {\n        return [];\n    }\n    const res = [];\n    const wordPos = score[1];\n    for (let i = score.length - 1; i > 1; i--) {\n        const pos = score[i] + wordPos;\n        const last = res[res.length - 1];\n        if (last && last.end === pos) {\n            last.end = pos + 1;\n        }\n        else {\n            res.push({ start: pos, end: pos + 1 });\n        }\n    }\n    return res;\n}\nconst _maxLen = 128;\nfunction initTable() {\n    const table = [];\n    const row = [];\n    for (let i = 0; i <= _maxLen; i++) {\n        row[i] = 0;\n    }\n    for (let i = 0; i <= _maxLen; i++) {\n        table.push(row.slice(0));\n    }\n    return table;\n}\nfunction initArr(maxLen) {\n    const row = [];\n    for (let i = 0; i <= maxLen; i++) {\n        row[i] = 0;\n    }\n    return row;\n}\nconst _minWordMatchPos = initArr(2 * _maxLen); // min word position for a certain pattern position\nconst _maxWordMatchPos = initArr(2 * _maxLen); // max word position for a certain pattern position\nconst _diag = initTable(); // the length of a contiguous diagonal match\nconst _table = initTable();\nconst _arrows = initTable();\nconst _debug = false;\nfunction printTable(table, pattern, patternLen, word, wordLen) {\n    function pad(s, n, pad = ' ') {\n        while (s.length < n) {\n            s = pad + s;\n        }\n        return s;\n    }\n    let ret = ` |   |${word.split('').map(c => pad(c, 3)).join('|')}\\n`;\n    for (let i = 0; i <= patternLen; i++) {\n        if (i === 0) {\n            ret += ' |';\n        }\n        else {\n            ret += `${pattern[i - 1]}|`;\n        }\n        ret += table[i].slice(0, wordLen + 1).map(n => pad(n.toString(), 3)).join('|') + '\\n';\n    }\n    return ret;\n}\nfunction printTables(pattern, patternStart, word, wordStart) {\n    pattern = pattern.substr(patternStart);\n    word = word.substr(wordStart);\n    console.log(printTable(_table, pattern, pattern.length, word, word.length));\n    console.log(printTable(_arrows, pattern, pattern.length, word, word.length));\n    console.log(printTable(_diag, pattern, pattern.length, word, word.length));\n}\nfunction isSeparatorAtPos(value, index) {\n    if (index < 0 || index >= value.length) {\n        return false;\n    }\n    const code = value.codePointAt(index);\n    switch (code) {\n        case 95 /* CharCode.Underline */:\n        case 45 /* CharCode.Dash */:\n        case 46 /* CharCode.Period */:\n        case 32 /* CharCode.Space */:\n        case 47 /* CharCode.Slash */:\n        case 92 /* CharCode.Backslash */:\n        case 39 /* CharCode.SingleQuote */:\n        case 34 /* CharCode.DoubleQuote */:\n        case 58 /* CharCode.Colon */:\n        case 36 /* CharCode.DollarSign */:\n        case 60 /* CharCode.LessThan */:\n        case 62 /* CharCode.GreaterThan */:\n        case 40 /* CharCode.OpenParen */:\n        case 41 /* CharCode.CloseParen */:\n        case 91 /* CharCode.OpenSquareBracket */:\n        case 93 /* CharCode.CloseSquareBracket */:\n        case 123 /* CharCode.OpenCurlyBrace */:\n        case 125 /* CharCode.CloseCurlyBrace */:\n            return true;\n        case undefined:\n            return false;\n        default:\n            if (strings.isEmojiImprecise(code)) {\n                return true;\n            }\n            return false;\n    }\n}\nfunction isWhitespaceAtPos(value, index) {\n    if (index < 0 || index >= value.length) {\n        return false;\n    }\n    const code = value.charCodeAt(index);\n    switch (code) {\n        case 32 /* CharCode.Space */:\n        case 9 /* CharCode.Tab */:\n            return true;\n        default:\n            return false;\n    }\n}\nfunction isUpperCaseAtPos(pos, word, wordLow) {\n    return word[pos] !== wordLow[pos];\n}\nexport function isPatternInWord(patternLow, patternPos, patternLen, wordLow, wordPos, wordLen, fillMinWordPosArr = false) {\n    while (patternPos < patternLen && wordPos < wordLen) {\n        if (patternLow[patternPos] === wordLow[wordPos]) {\n            if (fillMinWordPosArr) {\n                // Remember the min word position for each pattern position\n                _minWordMatchPos[patternPos] = wordPos;\n            }\n            patternPos += 1;\n        }\n        wordPos += 1;\n    }\n    return patternPos === patternLen; // pattern must be exhausted\n}\nexport var FuzzyScore;\n(function (FuzzyScore) {\n    /**\n     * No matches and value `-100`\n     */\n    FuzzyScore.Default = ([-100, 0]);\n    function isDefault(score) {\n        return !score || (score.length === 2 && score[0] === -100 && score[1] === 0);\n    }\n    FuzzyScore.isDefault = isDefault;\n})(FuzzyScore || (FuzzyScore = {}));\nexport class FuzzyScoreOptions {\n    constructor(firstMatchCanBeWeak, boostFullMatch) {\n        this.firstMatchCanBeWeak = firstMatchCanBeWeak;\n        this.boostFullMatch = boostFullMatch;\n    }\n}\nFuzzyScoreOptions.default = { boostFullMatch: true, firstMatchCanBeWeak: false };\nexport function fuzzyScore(pattern, patternLow, patternStart, word, wordLow, wordStart, options = FuzzyScoreOptions.default) {\n    const patternLen = pattern.length > _maxLen ? _maxLen : pattern.length;\n    const wordLen = word.length > _maxLen ? _maxLen : word.length;\n    if (patternStart >= patternLen || wordStart >= wordLen || (patternLen - patternStart) > (wordLen - wordStart)) {\n        return undefined;\n    }\n    // Run a simple check if the characters of pattern occur\n    // (in order) at all in word. If that isn't the case we\n    // stop because no match will be possible\n    if (!isPatternInWord(patternLow, patternStart, patternLen, wordLow, wordStart, wordLen, true)) {\n        return undefined;\n    }\n    // Find the max matching word position for each pattern position\n    // NOTE: the min matching word position was filled in above, in the `isPatternInWord` call\n    _fillInMaxWordMatchPos(patternLen, wordLen, patternStart, wordStart, patternLow, wordLow);\n    let row = 1;\n    let column = 1;\n    let patternPos = patternStart;\n    let wordPos = wordStart;\n    const hasStrongFirstMatch = [false];\n    // There will be a match, fill in tables\n    for (row = 1, patternPos = patternStart; patternPos < patternLen; row++, patternPos++) {\n        // Reduce search space to possible matching word positions and to possible access from next row\n        const minWordMatchPos = _minWordMatchPos[patternPos];\n        const maxWordMatchPos = _maxWordMatchPos[patternPos];\n        const nextMaxWordMatchPos = (patternPos + 1 < patternLen ? _maxWordMatchPos[patternPos + 1] : wordLen);\n        for (column = minWordMatchPos - wordStart + 1, wordPos = minWordMatchPos; wordPos < nextMaxWordMatchPos; column++, wordPos++) {\n            let score = Number.MIN_SAFE_INTEGER;\n            let canComeDiag = false;\n            if (wordPos <= maxWordMatchPos) {\n                score = _doScore(pattern, patternLow, patternPos, patternStart, word, wordLow, wordPos, wordLen, wordStart, _diag[row - 1][column - 1] === 0, hasStrongFirstMatch);\n            }\n            let diagScore = 0;\n            if (score !== Number.MAX_SAFE_INTEGER) {\n                canComeDiag = true;\n                diagScore = score + _table[row - 1][column - 1];\n            }\n            const canComeLeft = wordPos > minWordMatchPos;\n            const leftScore = canComeLeft ? _table[row][column - 1] + (_diag[row][column - 1] > 0 ? -5 : 0) : 0; // penalty for a gap start\n            const canComeLeftLeft = wordPos > minWordMatchPos + 1 && _diag[row][column - 1] > 0;\n            const leftLeftScore = canComeLeftLeft ? _table[row][column - 2] + (_diag[row][column - 2] > 0 ? -5 : 0) : 0; // penalty for a gap start\n            if (canComeLeftLeft && (!canComeLeft || leftLeftScore >= leftScore) && (!canComeDiag || leftLeftScore >= diagScore)) {\n                // always prefer choosing left left to jump over a diagonal because that means a match is earlier in the word\n                _table[row][column] = leftLeftScore;\n                _arrows[row][column] = 3 /* Arrow.LeftLeft */;\n                _diag[row][column] = 0;\n            }\n            else if (canComeLeft && (!canComeDiag || leftScore >= diagScore)) {\n                // always prefer choosing left since that means a match is earlier in the word\n                _table[row][column] = leftScore;\n                _arrows[row][column] = 2 /* Arrow.Left */;\n                _diag[row][column] = 0;\n            }\n            else if (canComeDiag) {\n                _table[row][column] = diagScore;\n                _arrows[row][column] = 1 /* Arrow.Diag */;\n                _diag[row][column] = _diag[row - 1][column - 1] + 1;\n            }\n            else {\n                throw new Error(`not possible`);\n            }\n        }\n    }\n    if (_debug) {\n        printTables(pattern, patternStart, word, wordStart);\n    }\n    if (!hasStrongFirstMatch[0] && !options.firstMatchCanBeWeak) {\n        return undefined;\n    }\n    row--;\n    column--;\n    const result = [_table[row][column], wordStart];\n    let backwardsDiagLength = 0;\n    let maxMatchColumn = 0;\n    while (row >= 1) {\n        // Find the column where we go diagonally up\n        let diagColumn = column;\n        do {\n            const arrow = _arrows[row][diagColumn];\n            if (arrow === 3 /* Arrow.LeftLeft */) {\n                diagColumn = diagColumn - 2;\n            }\n            else if (arrow === 2 /* Arrow.Left */) {\n                diagColumn = diagColumn - 1;\n            }\n            else {\n                // found the diagonal\n                break;\n            }\n        } while (diagColumn >= 1);\n        // Overturn the \"forwards\" decision if keeping the \"backwards\" diagonal would give a better match\n        if (backwardsDiagLength > 1 // only if we would have a contiguous match of 3 characters\n            && patternLow[patternStart + row - 1] === wordLow[wordStart + column - 1] // only if we can do a contiguous match diagonally\n            && !isUpperCaseAtPos(diagColumn + wordStart - 1, word, wordLow) // only if the forwards chose diagonal is not an uppercase\n            && backwardsDiagLength + 1 > _diag[row][diagColumn] // only if our contiguous match would be longer than the \"forwards\" contiguous match\n        ) {\n            diagColumn = column;\n        }\n        if (diagColumn === column) {\n            // this is a contiguous match\n            backwardsDiagLength++;\n        }\n        else {\n            backwardsDiagLength = 1;\n        }\n        if (!maxMatchColumn) {\n            // remember the last matched column\n            maxMatchColumn = diagColumn;\n        }\n        row--;\n        column = diagColumn - 1;\n        result.push(column);\n    }\n    if (wordLen === patternLen && options.boostFullMatch) {\n        // the word matches the pattern with all characters!\n        // giving the score a total match boost (to come up ahead other words)\n        result[0] += 2;\n    }\n    // Add 1 penalty for each skipped character in the word\n    const skippedCharsCount = maxMatchColumn - patternLen;\n    result[0] -= skippedCharsCount;\n    return result;\n}\nfunction _fillInMaxWordMatchPos(patternLen, wordLen, patternStart, wordStart, patternLow, wordLow) {\n    let patternPos = patternLen - 1;\n    let wordPos = wordLen - 1;\n    while (patternPos >= patternStart && wordPos >= wordStart) {\n        if (patternLow[patternPos] === wordLow[wordPos]) {\n            _maxWordMatchPos[patternPos] = wordPos;\n            patternPos--;\n        }\n        wordPos--;\n    }\n}\nfunction _doScore(pattern, patternLow, patternPos, patternStart, word, wordLow, wordPos, wordLen, wordStart, newMatchStart, outFirstMatchStrong) {\n    if (patternLow[patternPos] !== wordLow[wordPos]) {\n        return Number.MIN_SAFE_INTEGER;\n    }\n    let score = 1;\n    let isGapLocation = false;\n    if (wordPos === (patternPos - patternStart)) {\n        // common prefix: `foobar <-> foobaz`\n        //                            ^^^^^\n        score = pattern[patternPos] === word[wordPos] ? 7 : 5;\n    }\n    else if (isUpperCaseAtPos(wordPos, word, wordLow) && (wordPos === 0 || !isUpperCaseAtPos(wordPos - 1, word, wordLow))) {\n        // hitting upper-case: `foo <-> forOthers`\n        //                              ^^ ^\n        score = pattern[patternPos] === word[wordPos] ? 7 : 5;\n        isGapLocation = true;\n    }\n    else if (isSeparatorAtPos(wordLow, wordPos) && (wordPos === 0 || !isSeparatorAtPos(wordLow, wordPos - 1))) {\n        // hitting a separator: `. <-> foo.bar`\n        //                                ^\n        score = 5;\n    }\n    else if (isSeparatorAtPos(wordLow, wordPos - 1) || isWhitespaceAtPos(wordLow, wordPos - 1)) {\n        // post separator: `foo <-> bar_foo`\n        //                              ^^^\n        score = 5;\n        isGapLocation = true;\n    }\n    if (score > 1 && patternPos === patternStart) {\n        outFirstMatchStrong[0] = true;\n    }\n    if (!isGapLocation) {\n        isGapLocation = isUpperCaseAtPos(wordPos, word, wordLow) || isSeparatorAtPos(wordLow, wordPos - 1) || isWhitespaceAtPos(wordLow, wordPos - 1);\n    }\n    //\n    if (patternPos === patternStart) { // first character in pattern\n        if (wordPos > wordStart) {\n            // the first pattern character would match a word character that is not at the word start\n            // so introduce a penalty to account for the gap preceding this match\n            score -= isGapLocation ? 3 : 5;\n        }\n    }\n    else {\n        if (newMatchStart) {\n            // this would be the beginning of a new match (i.e. there would be a gap before this location)\n            score += isGapLocation ? 2 : 0;\n        }\n        else {\n            // this is part of a contiguous match, so give it a slight bonus, but do so only if it would not be a preferred gap location\n            score += isGapLocation ? 0 : 1;\n        }\n    }\n    if (wordPos + 1 === wordLen) {\n        // we always penalize gaps, but this gives unfair advantages to a match that would match the last character in the word\n        // so pretend there is a gap after the last character in the word to normalize things\n        score -= isGapLocation ? 3 : 5;\n    }\n    return score;\n}\n//#endregion\n//#region --- graceful ---\nexport function fuzzyScoreGracefulAggressive(pattern, lowPattern, patternPos, word, lowWord, wordPos, options) {\n    return fuzzyScoreWithPermutations(pattern, lowPattern, patternPos, word, lowWord, wordPos, true, options);\n}\nexport function fuzzyScoreGraceful(pattern, lowPattern, patternPos, word, lowWord, wordPos, options) {\n    return fuzzyScoreWithPermutations(pattern, lowPattern, patternPos, word, lowWord, wordPos, false, options);\n}\nfunction fuzzyScoreWithPermutations(pattern, lowPattern, patternPos, word, lowWord, wordPos, aggressive, options) {\n    let top = fuzzyScore(pattern, lowPattern, patternPos, word, lowWord, wordPos, options);\n    if (top && !aggressive) {\n        // when using the original pattern yield a result we`\n        // return it unless we are aggressive and try to find\n        // a better alignment, e.g. `cno` -> `^co^ns^ole` or `^c^o^nsole`.\n        return top;\n    }\n    if (pattern.length >= 3) {\n        // When the pattern is long enough then try a few (max 7)\n        // permutations of the pattern to find a better match. The\n        // permutations only swap neighbouring characters, e.g\n        // `cnoso` becomes `conso`, `cnsoo`, `cnoos`.\n        const tries = Math.min(7, pattern.length - 1);\n        for (let movingPatternPos = patternPos + 1; movingPatternPos < tries; movingPatternPos++) {\n            const newPattern = nextTypoPermutation(pattern, movingPatternPos);\n            if (newPattern) {\n                const candidate = fuzzyScore(newPattern, newPattern.toLowerCase(), patternPos, word, lowWord, wordPos, options);\n                if (candidate) {\n                    candidate[0] -= 3; // permutation penalty\n                    if (!top || candidate[0] > top[0]) {\n                        top = candidate;\n                    }\n                }\n            }\n        }\n    }\n    return top;\n}\nfunction nextTypoPermutation(pattern, patternPos) {\n    if (patternPos + 1 >= pattern.length) {\n        return undefined;\n    }\n    const swap1 = pattern[patternPos];\n    const swap2 = pattern[patternPos + 1];\n    if (swap1 === swap2) {\n        return undefined;\n    }\n    return pattern.slice(0, patternPos)\n        + swap2\n        + swap1\n        + pattern.slice(patternPos + 2);\n}\n//#endregion\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { matchesFuzzy } from './filters.js';\nimport { ltrim } from './strings.js';\nimport { ThemeIcon } from './themables.js';\nconst iconStartMarker = '$(';\nconst iconsRegex = new RegExp(`\\\\$\\\\(${ThemeIcon.iconNameExpression}(?:${ThemeIcon.iconModifierExpression})?\\\\)`, 'g'); // no capturing groups\nconst escapeIconsRegex = new RegExp(`(\\\\\\\\)?${iconsRegex.source}`, 'g');\nexport function escapeIcons(text) {\n    return text.replace(escapeIconsRegex, (match, escaped) => escaped ? match : `\\\\${match}`);\n}\nconst markdownEscapedIconsRegex = new RegExp(`\\\\\\\\${iconsRegex.source}`, 'g');\nexport function markdownEscapeEscapedIcons(text) {\n    // Need to add an extra \\ for escaping in markdown\n    return text.replace(markdownEscapedIconsRegex, match => `\\\\${match}`);\n}\nconst stripIconsRegex = new RegExp(`(\\\\s)?(\\\\\\\\)?${iconsRegex.source}(\\\\s)?`, 'g');\n/**\n * Takes a label with icons (`$(iconId)xyz`)  and strips the icons out (`xyz`)\n */\nexport function stripIcons(text) {\n    if (text.indexOf(iconStartMarker) === -1) {\n        return text;\n    }\n    return text.replace(stripIconsRegex, (match, preWhitespace, escaped, postWhitespace) => escaped ? match : preWhitespace || postWhitespace || '');\n}\n/**\n * Takes a label with icons (`$(iconId)xyz`), removes the icon syntax adds whitespace so that screen readers can read the text better.\n */\nexport function getCodiconAriaLabel(text) {\n    if (!text) {\n        return '';\n    }\n    return text.replace(/\\$\\((.*?)\\)/g, (_match, codiconName) => ` ${codiconName} `).trim();\n}\nconst _parseIconsRegex = new RegExp(`\\\\$\\\\(${ThemeIcon.iconNameCharacter}+\\\\)`, 'g');\n/**\n * Takes a label with icons (`abc $(iconId)xyz`) and returns the text (`abc xyz`) and the offsets of the icons (`[3]`)\n */\nexport function parseLabelWithIcons(input) {\n    _parseIconsRegex.lastIndex = 0;\n    let text = '';\n    const iconOffsets = [];\n    let iconsOffset = 0;\n    while (true) {\n        const pos = _parseIconsRegex.lastIndex;\n        const match = _parseIconsRegex.exec(input);\n        const chars = input.substring(pos, match === null || match === void 0 ? void 0 : match.index);\n        if (chars.length > 0) {\n            text += chars;\n            for (let i = 0; i < chars.length; i++) {\n                iconOffsets.push(iconsOffset);\n            }\n        }\n        if (!match) {\n            break;\n        }\n        iconsOffset += match[0].length;\n    }\n    return { text, iconOffsets };\n}\nexport function matchesFuzzyIconAware(query, target, enableSeparateSubstringMatching = false) {\n    const { text, iconOffsets } = target;\n    // Return early if there are no icon markers in the word to match against\n    if (!iconOffsets || iconOffsets.length === 0) {\n        return matchesFuzzy(query, text, enableSeparateSubstringMatching);\n    }\n    // Trim the word to match against because it could have leading\n    // whitespace now if the word started with an icon\n    const wordToMatchAgainstWithoutIconsTrimmed = ltrim(text, ' ');\n    const leadingWhitespaceOffset = text.length - wordToMatchAgainstWithoutIconsTrimmed.length;\n    // match on value without icon\n    const matches = matchesFuzzy(query, wordToMatchAgainstWithoutIconsTrimmed, enableSeparateSubstringMatching);\n    // Map matches back to offsets with icon and trimming\n    if (matches) {\n        for (const match of matches) {\n            const iconOffset = iconOffsets[match.start + leadingWhitespaceOffset] /* icon offsets at index */ + leadingWhitespaceOffset /* overall leading whitespace offset */;\n            match.start += iconOffset;\n            match.end += iconOffset;\n        }\n    }\n    return matches;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nimport { escapeIcons } from './iconLabels.js';\nimport { isEqual } from './resources.js';\nimport { escapeRegExpCharacters } from './strings.js';\nimport { URI } from './uri.js';\nexport class MarkdownString {\n    constructor(value = '', isTrustedOrOptions = false) {\n        var _a, _b, _c;\n        this.value = value;\n        if (typeof this.value !== 'string') {\n            throw illegalArgument('value');\n        }\n        if (typeof isTrustedOrOptions === 'boolean') {\n            this.isTrusted = isTrustedOrOptions;\n            this.supportThemeIcons = false;\n            this.supportHtml = false;\n        }\n        else {\n            this.isTrusted = (_a = isTrustedOrOptions.isTrusted) !== null && _a !== void 0 ? _a : undefined;\n            this.supportThemeIcons = (_b = isTrustedOrOptions.supportThemeIcons) !== null && _b !== void 0 ? _b : false;\n            this.supportHtml = (_c = isTrustedOrOptions.supportHtml) !== null && _c !== void 0 ? _c : false;\n        }\n    }\n    appendText(value, newlineStyle = 0 /* MarkdownStringTextNewlineStyle.Paragraph */) {\n        this.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value)\n            .replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length)) // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n            .replace(/\\>/gm, '\\\\>') // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n            .replace(/\\n/g, newlineStyle === 1 /* MarkdownStringTextNewlineStyle.Break */ ? '\\\\\\n' : '\\n\\n'); // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n        return this;\n    }\n    appendMarkdown(value) {\n        this.value += value;\n        return this;\n    }\n    appendCodeblock(langId, code) {\n        this.value += '\\n```';\n        this.value += langId;\n        this.value += '\\n';\n        this.value += code;\n        this.value += '\\n```\\n';\n        return this;\n    }\n    appendLink(target, label, title) {\n        this.value += '[';\n        this.value += this._escape(label, ']');\n        this.value += '](';\n        this.value += this._escape(String(target), ')');\n        if (title) {\n            this.value += ` \"${this._escape(this._escape(title, '\"'), ')')}\"`;\n        }\n        this.value += ')';\n        return this;\n    }\n    _escape(value, ch) {\n        const r = new RegExp(escapeRegExpCharacters(ch), 'g');\n        return value.replace(r, (match, offset) => {\n            if (value.charAt(offset - 1) !== '\\\\') {\n                return `\\\\${match}`;\n            }\n            else {\n                return match;\n            }\n        });\n    }\n}\nexport function isEmptyMarkdownString(oneOrMany) {\n    if (isMarkdownString(oneOrMany)) {\n        return !oneOrMany.value;\n    }\n    else if (Array.isArray(oneOrMany)) {\n        return oneOrMany.every(isEmptyMarkdownString);\n    }\n    else {\n        return true;\n    }\n}\nexport function isMarkdownString(thing) {\n    if (thing instanceof MarkdownString) {\n        return true;\n    }\n    else if (thing && typeof thing === 'object') {\n        return typeof thing.value === 'string'\n            && (typeof thing.isTrusted === 'boolean' || typeof thing.isTrusted === 'object' || thing.isTrusted === undefined)\n            && (typeof thing.supportThemeIcons === 'boolean' || thing.supportThemeIcons === undefined);\n    }\n    return false;\n}\nexport function markdownStringEqual(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else if (!a || !b) {\n        return false;\n    }\n    else {\n        return a.value === b.value\n            && a.isTrusted === b.isTrusted\n            && a.supportThemeIcons === b.supportThemeIcons\n            && a.supportHtml === b.supportHtml\n            && (a.baseUri === b.baseUri || !!a.baseUri && !!b.baseUri && isEqual(URI.from(a.baseUri), URI.from(b.baseUri)));\n    }\n}\nexport function escapeMarkdownSyntaxTokens(text) {\n    // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    return text.replace(/[\\\\`*_{}[\\]()#+\\-!~]/g, '\\\\$&'); // CodeQL [SM02383] Backslash is escaped in the character class\n}\nexport function escapeDoubleQuotes(input) {\n    return input.replace(/\"/g, '&quot;');\n}\nexport function removeMarkdownEscapes(text) {\n    if (!text) {\n        return text;\n    }\n    return text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!~])/g, '$1');\n}\nexport function parseHrefAndDimensions(href) {\n    const dimensions = [];\n    const splitted = href.split('|').map(s => s.trim());\n    href = splitted[0];\n    const parameters = splitted[1];\n    if (parameters) {\n        const heightFromParams = /height=(\\d+)/.exec(parameters);\n        const widthFromParams = /width=(\\d+)/.exec(parameters);\n        const height = heightFromParams ? heightFromParams[1] : '';\n        const width = widthFromParams ? widthFromParams[1] : '';\n        const widthIsFinite = isFinite(parseInt(width));\n        const heightIsFinite = isFinite(parseInt(height));\n        if (widthIsFinite) {\n            dimensions.push(`width=\"${width}\"`);\n        }\n        if (heightIsFinite) {\n            dimensions.push(`height=\"${height}\"`);\n        }\n    }\n    return { href, dimensions };\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { extname } from './path.js';\nexport const Mimes = Object.freeze({\n    text: 'text/plain',\n    binary: 'application/octet-stream',\n    unknown: 'application/unknown',\n    markdown: 'text/markdown',\n    latex: 'text/latex',\n    uriList: 'text/uri-list',\n});\nconst mapExtToTextMimes = {\n    '.css': 'text/css',\n    '.csv': 'text/csv',\n    '.htm': 'text/html',\n    '.html': 'text/html',\n    '.ics': 'text/calendar',\n    '.js': 'text/javascript',\n    '.mjs': 'text/javascript',\n    '.txt': 'text/plain',\n    '.xml': 'text/xml'\n};\n// Known media mimes that we can handle\nconst mapExtToMediaMimes = {\n    '.aac': 'audio/x-aac',\n    '.avi': 'video/x-msvideo',\n    '.bmp': 'image/bmp',\n    '.flv': 'video/x-flv',\n    '.gif': 'image/gif',\n    '.ico': 'image/x-icon',\n    '.jpe': 'image/jpg',\n    '.jpeg': 'image/jpg',\n    '.jpg': 'image/jpg',\n    '.m1v': 'video/mpeg',\n    '.m2a': 'audio/mpeg',\n    '.m2v': 'video/mpeg',\n    '.m3a': 'audio/mpeg',\n    '.mid': 'audio/midi',\n    '.midi': 'audio/midi',\n    '.mk3d': 'video/x-matroska',\n    '.mks': 'video/x-matroska',\n    '.mkv': 'video/x-matroska',\n    '.mov': 'video/quicktime',\n    '.movie': 'video/x-sgi-movie',\n    '.mp2': 'audio/mpeg',\n    '.mp2a': 'audio/mpeg',\n    '.mp3': 'audio/mpeg',\n    '.mp4': 'video/mp4',\n    '.mp4a': 'audio/mp4',\n    '.mp4v': 'video/mp4',\n    '.mpe': 'video/mpeg',\n    '.mpeg': 'video/mpeg',\n    '.mpg': 'video/mpeg',\n    '.mpg4': 'video/mp4',\n    '.mpga': 'audio/mpeg',\n    '.oga': 'audio/ogg',\n    '.ogg': 'audio/ogg',\n    '.opus': 'audio/opus',\n    '.ogv': 'video/ogg',\n    '.png': 'image/png',\n    '.psd': 'image/vnd.adobe.photoshop',\n    '.qt': 'video/quicktime',\n    '.spx': 'audio/ogg',\n    '.svg': 'image/svg+xml',\n    '.tga': 'image/x-tga',\n    '.tif': 'image/tiff',\n    '.tiff': 'image/tiff',\n    '.wav': 'audio/x-wav',\n    '.webm': 'video/webm',\n    '.webp': 'image/webp',\n    '.wma': 'audio/x-ms-wma',\n    '.wmv': 'video/x-ms-wmv',\n    '.woff': 'application/font-woff',\n};\nexport function getMediaOrTextMime(path) {\n    const ext = extname(path);\n    const textMime = mapExtToTextMimes[ext.toLowerCase()];\n    if (textMime !== undefined) {\n        return textMime;\n    }\n    else {\n        return getMediaMime(path);\n    }\n}\nexport function getMediaMime(path) {\n    const ext = extname(path);\n    return mapExtToMediaMimes[ext.toLowerCase()];\n}\nexport function getExtensionForMimeType(mimeType) {\n    for (const extension in mapExtToMediaMimes) {\n        if (mapExtToMediaMimes[extension] === mimeType) {\n            return extension;\n        }\n    }\n    return undefined;\n}\nconst _simplePattern = /^(.+)\\/(.+?)(;.+)?$/;\nexport function normalizeMimeType(mimeType, strict) {\n    var _a;\n    const match = _simplePattern.exec(mimeType);\n    if (!match) {\n        return strict\n            ? undefined\n            : mimeType;\n    }\n    // https://datatracker.ietf.org/doc/html/rfc2045#section-5.1\n    // media and subtype must ALWAYS be lowercase, parameter not\n    return `${match[1].toLowerCase()}/${match[2].toLowerCase()}${(_a = match[3]) !== null && _a !== void 0 ? _a : ''}`;\n}\n"],
  "mappings": "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",
  "names": ["Iterable", "_empty", "filter", "index", "from", "self", "resolve", "_a", "dispose", "__awaiter", "resolve", "Event", "count", "once", "map", "filter", "equals", "buffer", "id", "_a", "stack", "_b", "_c", "index", "errorHandler", "data", "dispose", "index", "result", "platform", "Language", "platform", "isPathSeparator", "_format", "sep", "platform", "isAbsolute", "tail", "cwd", "start", "_a", "_b", "CancellationToken", "_a", "id", "index", "_util", "_a", "Schemas", "_a", "COI", "_a", "format", "format2", "_b", "index", "_a", "map", "isPathSeparator", "sep", "pos", "distinctParents", "index", "isEqualOrParent", "isEqual", "basename", "extname", "dirname", "relativePath", "sep", "DataUri", "index", "compare", "splice", "CompareResult", "count", "_a", "_b", "node", "key", "__awaiter", "resolve", "FileType", "FilePermission", "FileSystemProviderErrorCode", "_a", "_b", "_c", "FileKind", "cmp", "hasOwnProperty", "delta", "index", "count", "format", "LogLevel", "_a", "_b", "_c", "id", "resolve", "_a", "index", "i", "__awaiter", "resolve", "obj", "equals", "distinct", "OverviewRulerLane", "GlyphMarginLane", "MinimapPosition", "InjectedTextCursorStops", "equals", "range", "wordSeparators", "sep", "id", "env", "TextEditorCursorStyle", "_a", "_b", "_c", "equals", "IndentAction", "_a", "_b", "id", "register", "id", "ThemeColor", "ThemeIcon", "id", "isEqual", "_a", "_b", "generateUuid", "filter", "index", "join", "isNumber", "tail", "pad", "FuzzyScore", "isEqual", "_a", "_b", "_c", "_a"]
}

{
  "version": 3,
  "sources": ["../../vscode/vscode/src/vs/workbench/contrib/debug/common/debug.js", "../../vscode/vscode/src/vs/platform/workspace/common/editSessions.js", "../../vscode/vscode/src/vs/platform/remote/common/remoteAuthorityResolver.js", "../../vscode/vscode/src/vs/workbench/contrib/notebook/common/notebookCommon.js"],
  "sourcesContent": ["import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst VIEWLET_ID = 'workbench.view.debug';\nconst VARIABLES_VIEW_ID = 'workbench.debug.variablesView';\nconst WATCH_VIEW_ID = 'workbench.debug.watchExpressionsView';\nconst CALLSTACK_VIEW_ID = 'workbench.debug.callStackView';\nconst LOADED_SCRIPTS_VIEW_ID = 'workbench.debug.loadedScriptsView';\nconst BREAKPOINTS_VIEW_ID = 'workbench.debug.breakPointsView';\nconst DISASSEMBLY_VIEW_ID = 'workbench.debug.disassemblyView';\nconst DEBUG_PANEL_ID = 'workbench.panel.repl';\nconst REPL_VIEW_ID = 'workbench.panel.repl.view';\nconst CONTEXT_DEBUG_TYPE = ( new RawContextKey('debugType', undefined, { type: 'string', description: ( nls.localize(\n    'debugType',\n    \"Debug type of the active debug session. For example 'python'.\"\n)) }));\nconst CONTEXT_DEBUG_CONFIGURATION_TYPE = ( new RawContextKey(\n    'debugConfigurationType',\n    undefined,\n    { type: 'string', description: ( nls.localize(\n        'debugConfigurationType',\n        \"Debug type of the selected launch configuration. For example 'python'.\"\n    )) }\n));\nconst CONTEXT_DEBUG_STATE = ( new RawContextKey('debugState', 'inactive', { type: 'string', description: ( nls.localize(\n    'debugState',\n    \"State that the focused debug session is in. One of the following: 'inactive', 'initializing', 'stopped' or 'running'.\"\n)) }));\nconst CONTEXT_DEBUG_UX_KEY = 'debugUx';\nconst CONTEXT_DEBUG_UX = ( new RawContextKey(\n    CONTEXT_DEBUG_UX_KEY,\n    'default',\n    { type: 'string', description: ( nls.localize(\n        'debugUX',\n        \"Debug UX state. When there are no debug configurations it is 'simple', otherwise 'default'. Used to decide when to show welcome views in the debug viewlet.\"\n    )) }\n));\nconst CONTEXT_HAS_DEBUGGED = ( new RawContextKey('hasDebugged', false, { type: 'boolean', description: ( nls.localize(\n    'hasDebugged',\n    \"True when a debug session has been started at least once, false otherwise.\"\n)) }));\nconst CONTEXT_IN_DEBUG_MODE = ( new RawContextKey('inDebugMode', false, { type: 'boolean', description: ( nls.localize('inDebugMode', \"True when debugging, false otherwise.\")) }));\nconst CONTEXT_IN_DEBUG_REPL = ( new RawContextKey('inDebugRepl', false, { type: 'boolean', description: ( nls.localize('inDebugRepl', \"True when focus is in the debug console, false otherwise.\")) }));\nconst CONTEXT_BREAKPOINT_WIDGET_VISIBLE = ( new RawContextKey(\n    'breakpointWidgetVisible',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'breakpointWidgetVisibile',\n        \"True when breakpoint editor zone widget is visible, false otherwise.\"\n    )) }\n));\nconst CONTEXT_IN_BREAKPOINT_WIDGET = ( new RawContextKey(\n    'inBreakpointWidget',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'inBreakpointWidget',\n        \"True when focus is in the breakpoint editor zone widget, false otherwise.\"\n    )) }\n));\nconst CONTEXT_BREAKPOINTS_FOCUSED = ( new RawContextKey('breakpointsFocused', true, { type: 'boolean', description: ( nls.localize(\n    'breakpointsFocused',\n    \"True when the BREAKPOINTS view is focused, false otherwise.\"\n)) }));\nconst CONTEXT_WATCH_EXPRESSIONS_FOCUSED = ( new RawContextKey(\n    'watchExpressionsFocused',\n    true,\n    { type: 'boolean', description: ( nls.localize(\n        'watchExpressionsFocused',\n        \"True when the WATCH view is focused, false otherwsie.\"\n    )) }\n));\nconst CONTEXT_WATCH_EXPRESSIONS_EXIST = ( new RawContextKey(\n    'watchExpressionsExist',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'watchExpressionsExist',\n        \"True when at least one watch expression exists, false otherwise.\"\n    )) }\n));\nconst CONTEXT_VARIABLES_FOCUSED = ( new RawContextKey('variablesFocused', true, { type: 'boolean', description: ( nls.localize(\n    'variablesFocused',\n    \"True when the VARIABLES views is focused, false otherwsie\"\n)) }));\nconst CONTEXT_EXPRESSION_SELECTED = ( new RawContextKey(\n    'expressionSelected',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'expressionSelected',\n        \"True when an expression input box is open in either the WATCH or the VARIABLES view, false otherwise.\"\n    )) }\n));\nconst CONTEXT_BREAKPOINT_INPUT_FOCUSED = ( new RawContextKey(\n    'breakpointInputFocused',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'breakpointInputFocused',\n        \"True when the input box has focus in the BREAKPOINTS view.\"\n    )) }\n));\nconst CONTEXT_CALLSTACK_ITEM_TYPE = ( new RawContextKey(\n    'callStackItemType',\n    undefined,\n    { type: 'string', description: ( nls.localize(\n        'callStackItemType',\n        \"Represents the item type of the focused element in the CALL STACK view. For example: 'session', 'thread', 'stackFrame'\"\n    )) }\n));\nconst CONTEXT_CALLSTACK_SESSION_IS_ATTACH = ( new RawContextKey(\n    'callStackSessionIsAttach',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'callStackSessionIsAttach',\n        \"True when the session in the CALL STACK view is attach, false otherwise. Used internally for inline menus in the CALL STACK view.\"\n    )) }\n));\nconst CONTEXT_CALLSTACK_ITEM_STOPPED = ( new RawContextKey(\n    'callStackItemStopped',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'callStackItemStopped',\n        \"True when the focused item in the CALL STACK is stopped. Used internaly for inline menus in the CALL STACK view.\"\n    )) }\n));\nconst CONTEXT_CALLSTACK_SESSION_HAS_ONE_THREAD = ( new RawContextKey(\n    'callStackSessionHasOneThread',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'callStackSessionHasOneThread',\n        \"True when the focused session in the CALL STACK view has exactly one thread. Used internally for inline menus in the CALL STACK view.\"\n    )) }\n));\nconst CONTEXT_WATCH_ITEM_TYPE = ( new RawContextKey('watchItemType', undefined, { type: 'string', description: ( nls.localize(\n    'watchItemType',\n    \"Represents the item type of the focused element in the WATCH view. For example: 'expression', 'variable'\"\n)) }));\nconst CONTEXT_CAN_VIEW_MEMORY = ( new RawContextKey('canViewMemory', undefined, { type: 'boolean', description: ( nls.localize(\n    'canViewMemory',\n    \"Indicates whether the item in the view has an associated memory refrence.\"\n)) }));\nconst CONTEXT_BREAKPOINT_ITEM_TYPE = ( new RawContextKey(\n    'breakpointItemType',\n    undefined,\n    { type: 'string', description: ( nls.localize(\n        'breakpointItemType',\n        \"Represents the item type of the focused element in the BREAKPOINTS view. For example: 'breakpoint', 'exceptionBreakppint', 'functionBreakpoint', 'dataBreakpoint'\"\n    )) }\n));\nconst CONTEXT_BREAKPOINT_SUPPORTS_CONDITION = ( new RawContextKey(\n    'breakpointSupportsCondition',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'breakpointSupportsCondition',\n        \"True when the focused breakpoint supports conditions.\"\n    )) }\n));\nconst CONTEXT_LOADED_SCRIPTS_SUPPORTED = ( new RawContextKey(\n    'loadedScriptsSupported',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'loadedScriptsSupported',\n        \"True when the focused sessions supports the LOADED SCRIPTS view\"\n    )) }\n));\nconst CONTEXT_LOADED_SCRIPTS_ITEM_TYPE = ( new RawContextKey(\n    'loadedScriptsItemType',\n    undefined,\n    { type: 'string', description: ( nls.localize(\n        'loadedScriptsItemType',\n        \"Represents the item type of the focused element in the LOADED SCRIPTS view.\"\n    )) }\n));\nconst CONTEXT_FOCUSED_SESSION_IS_ATTACH = ( new RawContextKey(\n    'focusedSessionIsAttach',\n    false,\n    { type: 'boolean', description: ( nls.localize('focusedSessionIsAttach', \"True when the focused session is 'attach'.\")) }\n));\nconst CONTEXT_STEP_BACK_SUPPORTED = ( new RawContextKey('stepBackSupported', false, { type: 'boolean', description: ( nls.localize(\n    'stepBackSupported',\n    \"True when the focused session supports 'stepBack' requests.\"\n)) }));\nconst CONTEXT_RESTART_FRAME_SUPPORTED = ( new RawContextKey(\n    'restartFrameSupported',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'restartFrameSupported',\n        \"True when the focused session supports 'restartFrame' requests.\"\n    )) }\n));\nconst CONTEXT_STACK_FRAME_SUPPORTS_RESTART = ( new RawContextKey(\n    'stackFrameSupportsRestart',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'stackFrameSupportsRestart',\n        \"True when the focused stack frame suppots 'restartFrame'.\"\n    )) }\n));\nconst CONTEXT_JUMP_TO_CURSOR_SUPPORTED = ( new RawContextKey(\n    'jumpToCursorSupported',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'jumpToCursorSupported',\n        \"True when the focused session supports 'jumpToCursor' request.\"\n    )) }\n));\nconst CONTEXT_STEP_INTO_TARGETS_SUPPORTED = ( new RawContextKey(\n    'stepIntoTargetsSupported',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'stepIntoTargetsSupported',\n        \"True when the focused session supports 'stepIntoTargets' request.\"\n    )) }\n));\nconst CONTEXT_BREAKPOINTS_EXIST = ( new RawContextKey('breakpointsExist', false, { type: 'boolean', description: ( nls.localize('breakpointsExist', \"True when at least one breakpoint exists.\")) }));\nconst CONTEXT_DEBUGGERS_AVAILABLE = ( new RawContextKey(\n    'debuggersAvailable',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'debuggersAvailable',\n        \"True when there is at least one debug extensions active.\"\n    )) }\n));\nconst CONTEXT_DEBUG_EXTENSION_AVAILABLE = ( new RawContextKey(\n    'debugExtensionAvailable',\n    true,\n    { type: 'boolean', description: ( nls.localize(\n        'debugExtensionsAvailable',\n        \"True when there is at least one debug extension installed and enabled.\"\n    )) }\n));\nconst CONTEXT_DEBUG_PROTOCOL_VARIABLE_MENU_CONTEXT = ( new RawContextKey(\n    'debugProtocolVariableMenuContext',\n    undefined,\n    { type: 'string', description: ( nls.localize(\n        'debugProtocolVariableMenuContext',\n        \"Represents the context the debug adapter sets on the focused variable in the VARIABLES view.\"\n    )) }\n));\nconst CONTEXT_SET_VARIABLE_SUPPORTED = ( new RawContextKey(\n    'debugSetVariableSupported',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'debugSetVariableSupported',\n        \"True when the focused session supports 'setVariable' request.\"\n    )) }\n));\nconst CONTEXT_SET_EXPRESSION_SUPPORTED = ( new RawContextKey(\n    'debugSetExpressionSupported',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'debugSetExpressionSupported',\n        \"True when the focused session supports 'setExpression' request.\"\n    )) }\n));\nconst CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED = ( new RawContextKey(\n    'breakWhenValueChangesSupported',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'breakWhenValueChangesSupported',\n        \"True when the focused session supports to break when value changes.\"\n    )) }\n));\nconst CONTEXT_BREAK_WHEN_VALUE_IS_ACCESSED_SUPPORTED = ( new RawContextKey(\n    'breakWhenValueIsAccessedSupported',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'breakWhenValueIsAccessedSupported',\n        \"True when the focused breakpoint supports to break when value is accessed.\"\n    )) }\n));\nconst CONTEXT_BREAK_WHEN_VALUE_IS_READ_SUPPORTED = ( new RawContextKey(\n    'breakWhenValueIsReadSupported',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'breakWhenValueIsReadSupported',\n        \"True when the focused breakpoint supports to break when value is read.\"\n    )) }\n));\nconst CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED = ( new RawContextKey(\n    'terminateDebuggeeSupported',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'terminateDebuggeeSupported',\n        \"True when the focused session supports the terminate debuggee capability.\"\n    )) }\n));\nconst CONTEXT_SUSPEND_DEBUGGEE_SUPPORTED = ( new RawContextKey(\n    'suspendDebuggeeSupported',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'suspendDebuggeeSupported',\n        \"True when the focused session supports the suspend debuggee capability.\"\n    )) }\n));\nconst CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT = ( new RawContextKey(\n    'variableEvaluateNamePresent',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'variableEvaluateNamePresent',\n        \"True when the focused variable has an 'evalauteName' field set.\"\n    )) }\n));\nconst CONTEXT_VARIABLE_IS_READONLY = ( new RawContextKey(\n    'variableIsReadonly',\n    false,\n    { type: 'boolean', description: ( nls.localize('variableIsReadonly', \"True when the focused variable is read-only.\")) }\n));\nconst CONTEXT_EXCEPTION_WIDGET_VISIBLE = ( new RawContextKey(\n    'exceptionWidgetVisible',\n    false,\n    { type: 'boolean', description: ( nls.localize('exceptionWidgetVisible', \"True when the exception widget is visible.\")) }\n));\nconst CONTEXT_MULTI_SESSION_REPL = ( new RawContextKey('multiSessionRepl', false, { type: 'boolean', description: ( nls.localize('multiSessionRepl', \"True when there is more than 1 debug console.\")) }));\nconst CONTEXT_MULTI_SESSION_DEBUG = ( new RawContextKey('multiSessionDebug', false, { type: 'boolean', description: ( nls.localize(\n    'multiSessionDebug',\n    \"True when there is more than 1 active debug session.\"\n)) }));\nconst CONTEXT_DISASSEMBLE_REQUEST_SUPPORTED = ( new RawContextKey(\n    'disassembleRequestSupported',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'disassembleRequestSupported',\n        \"True when the focused sessions supports disassemble request.\"\n    )) }\n));\nconst CONTEXT_DISASSEMBLY_VIEW_FOCUS = ( new RawContextKey(\n    'disassemblyViewFocus',\n    false,\n    { type: 'boolean', description: ( nls.localize('disassemblyViewFocus', \"True when the Disassembly View is focused.\")) }\n));\nconst CONTEXT_LANGUAGE_SUPPORTS_DISASSEMBLE_REQUEST = ( new RawContextKey(\n    'languageSupportsDisassembleRequest',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'languageSupportsDisassembleRequest',\n        \"True when the language in the current editor supports disassemble request.\"\n    )) }\n));\nconst CONTEXT_FOCUSED_STACK_FRAME_HAS_INSTRUCTION_POINTER_REFERENCE = ( new RawContextKey(\n    'focusedStackFrameHasInstructionReference',\n    false,\n    { type: 'boolean', description: ( nls.localize(\n        'focusedStackFrameHasInstructionReference',\n        \"True when the focused stack frame has instruction pointer reference.\"\n    )) }\n));\nconst debuggerDisabledMessage = (debugType) => ( nls.localize(\n    'debuggerDisabled',\n    \"Configured debug type '{0}' is installed but not supported in this environment.\",\n    debugType\n));\nconst EDITOR_CONTRIBUTION_ID = 'editor.contrib.debug';\nconst BREAKPOINT_EDITOR_CONTRIBUTION_ID = 'editor.contrib.breakpoint';\nconst DEBUG_SCHEME = 'debug';\nconst INTERNAL_CONSOLE_OPTIONS_SCHEMA = {\n    enum: ['neverOpen', 'openOnSessionStart', 'openOnFirstSessionStart'],\n    default: 'openOnFirstSessionStart',\n    description: ( nls.localize(\n        'internalConsoleOptions',\n        \"Controls when the internal Debug Console should open.\"\n    ))\n};\nfunction getStateLabel(state) {\n    switch (state) {\n        case 1 : return 'initializing';\n        case 2 : return 'stopped';\n        case 3 : return 'running';\n        default: return 'inactive';\n    }\n}\nconst DEBUG_MEMORY_SCHEME = 'vscode-debug-memory';\nvar DebugConfigurationProviderTriggerKind;\n( (function(DebugConfigurationProviderTriggerKind) {\n    DebugConfigurationProviderTriggerKind[DebugConfigurationProviderTriggerKind[\"Initial\"] = 1] = \"Initial\";\n    DebugConfigurationProviderTriggerKind[DebugConfigurationProviderTriggerKind[\"Dynamic\"] = 2] = \"Dynamic\";\n})(\n    DebugConfigurationProviderTriggerKind || (DebugConfigurationProviderTriggerKind = {})\n));\nvar DebuggerString;\n( (function(DebuggerString) {\n    DebuggerString[\"UnverifiedBreakpoints\"] = \"unverifiedBreakpoints\";\n})(DebuggerString || (DebuggerString = {})));\nconst IDebugService = ( createDecorator('debugService'));\nexport { BREAKPOINTS_VIEW_ID, BREAKPOINT_EDITOR_CONTRIBUTION_ID, CALLSTACK_VIEW_ID, CONTEXT_BREAKPOINTS_EXIST, CONTEXT_BREAKPOINTS_FOCUSED, CONTEXT_BREAKPOINT_INPUT_FOCUSED, CONTEXT_BREAKPOINT_ITEM_TYPE, CONTEXT_BREAKPOINT_SUPPORTS_CONDITION, CONTEXT_BREAKPOINT_WIDGET_VISIBLE, CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED, CONTEXT_BREAK_WHEN_VALUE_IS_ACCESSED_SUPPORTED, CONTEXT_BREAK_WHEN_VALUE_IS_READ_SUPPORTED, CONTEXT_CALLSTACK_ITEM_STOPPED, CONTEXT_CALLSTACK_ITEM_TYPE, CONTEXT_CALLSTACK_SESSION_HAS_ONE_THREAD, CONTEXT_CALLSTACK_SESSION_IS_ATTACH, CONTEXT_CAN_VIEW_MEMORY, CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_DEBUG_CONFIGURATION_TYPE, CONTEXT_DEBUG_EXTENSION_AVAILABLE, CONTEXT_DEBUG_PROTOCOL_VARIABLE_MENU_CONTEXT, CONTEXT_DEBUG_STATE, CONTEXT_DEBUG_TYPE, CONTEXT_DEBUG_UX, CONTEXT_DEBUG_UX_KEY, CONTEXT_DISASSEMBLE_REQUEST_SUPPORTED, CONTEXT_DISASSEMBLY_VIEW_FOCUS, CONTEXT_EXCEPTION_WIDGET_VISIBLE, CONTEXT_EXPRESSION_SELECTED, CONTEXT_FOCUSED_SESSION_IS_ATTACH, CONTEXT_FOCUSED_STACK_FRAME_HAS_INSTRUCTION_POINTER_REFERENCE, CONTEXT_HAS_DEBUGGED, CONTEXT_IN_BREAKPOINT_WIDGET, CONTEXT_IN_DEBUG_MODE, CONTEXT_IN_DEBUG_REPL, CONTEXT_JUMP_TO_CURSOR_SUPPORTED, CONTEXT_LANGUAGE_SUPPORTS_DISASSEMBLE_REQUEST, CONTEXT_LOADED_SCRIPTS_ITEM_TYPE, CONTEXT_LOADED_SCRIPTS_SUPPORTED, CONTEXT_MULTI_SESSION_DEBUG, CONTEXT_MULTI_SESSION_REPL, CONTEXT_RESTART_FRAME_SUPPORTED, CONTEXT_SET_EXPRESSION_SUPPORTED, CONTEXT_SET_VARIABLE_SUPPORTED, CONTEXT_STACK_FRAME_SUPPORTS_RESTART, CONTEXT_STEP_BACK_SUPPORTED, CONTEXT_STEP_INTO_TARGETS_SUPPORTED, CONTEXT_SUSPEND_DEBUGGEE_SUPPORTED, CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED, CONTEXT_VARIABLES_FOCUSED, CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT, CONTEXT_VARIABLE_IS_READONLY, CONTEXT_WATCH_EXPRESSIONS_EXIST, CONTEXT_WATCH_EXPRESSIONS_FOCUSED, CONTEXT_WATCH_ITEM_TYPE, DEBUG_MEMORY_SCHEME, DEBUG_PANEL_ID, DEBUG_SCHEME, DISASSEMBLY_VIEW_ID, DebugConfigurationProviderTriggerKind, DebuggerString, EDITOR_CONTRIBUTION_ID, IDebugService, INTERNAL_CONSOLE_OPTIONS_SCHEMA, LOADED_SCRIPTS_VIEW_ID, REPL_VIEW_ID, VARIABLES_VIEW_ID, VIEWLET_ID, WATCH_VIEW_ID, debuggerDisabledMessage, getStateLabel };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IEditSessionIdentityService = ( createDecorator('editSessionIdentityService'));\nvar EditSessionIdentityMatch;\n( (function(EditSessionIdentityMatch) {\n    EditSessionIdentityMatch[EditSessionIdentityMatch[\"Complete\"] = 100] = \"Complete\";\n    EditSessionIdentityMatch[EditSessionIdentityMatch[\"Partial\"] = 50] = \"Partial\";\n    EditSessionIdentityMatch[EditSessionIdentityMatch[\"None\"] = 0] = \"None\";\n})(EditSessionIdentityMatch || (EditSessionIdentityMatch = {})));\nexport { EditSessionIdentityMatch, IEditSessionIdentityService };\n", "import { ErrorNoTelemetry } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IRemoteAuthorityResolverService = ( createDecorator('remoteAuthorityResolverService'));\nclass ManagedRemoteConnection {\n    constructor(id) {\n        this.id = id;\n        this.type = 1 ;\n    }\n    toString() {\n        return `Managed(${this.id})`;\n    }\n}\nclass WebSocketRemoteConnection {\n    constructor(host, port) {\n        this.host = host;\n        this.port = port;\n        this.type = 0 ;\n    }\n    toString() {\n        return `WebSocket(${this.host}:${this.port})`;\n    }\n}\nvar RemoteAuthorityResolverErrorCode;\n( (function(RemoteAuthorityResolverErrorCode) {\n    RemoteAuthorityResolverErrorCode[\"Unknown\"] = \"Unknown\";\n    RemoteAuthorityResolverErrorCode[\"NotAvailable\"] = \"NotAvailable\";\n    RemoteAuthorityResolverErrorCode[\"TemporarilyNotAvailable\"] = \"TemporarilyNotAvailable\";\n    RemoteAuthorityResolverErrorCode[\"NoResolverFound\"] = \"NoResolverFound\";\n    RemoteAuthorityResolverErrorCode[\"InvalidAuthority\"] = \"InvalidAuthority\";\n})(\n    RemoteAuthorityResolverErrorCode || (RemoteAuthorityResolverErrorCode = {})\n));\nclass RemoteAuthorityResolverError extends ErrorNoTelemetry {\n    static isNotAvailable(err) {\n        return (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.NotAvailable;\n    }\n    static isTemporarilyNotAvailable(err) {\n        return (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.TemporarilyNotAvailable;\n    }\n    static isNoResolverFound(err) {\n        return (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.NoResolverFound;\n    }\n    static isInvalidAuthority(err) {\n        return (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.InvalidAuthority;\n    }\n    static isHandled(err) {\n        return (err instanceof RemoteAuthorityResolverError) && err.isHandled;\n    }\n    constructor(message, code = RemoteAuthorityResolverErrorCode.Unknown, detail) {\n        super(message);\n        this._message = message;\n        this._code = code;\n        this._detail = detail;\n        this.isHandled = (code === RemoteAuthorityResolverErrorCode.NotAvailable) && detail === true;\n        Object.setPrototypeOf(this, RemoteAuthorityResolverError.prototype);\n    }\n}\nfunction getRemoteAuthorityPrefix(remoteAuthority) {\n    const plusIndex = remoteAuthority.indexOf('+');\n    if (plusIndex === -1) {\n        return remoteAuthority;\n    }\n    return remoteAuthority.substring(0, plusIndex);\n}\nexport { IRemoteAuthorityResolverService, ManagedRemoteConnection, RemoteAuthorityResolverError, RemoteAuthorityResolverErrorCode, WebSocketRemoteConnection, getRemoteAuthorityPrefix };\n", "import { encodeBase64, VSBuffer, decodeBase64 } from 'monaco-editor/esm/vs/base/common/buffer.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nconst NOTEBOOK_EDITOR_ID = 'workbench.editor.notebook';\nvar CellKind;\n( (function(CellKind) {\n    CellKind[CellKind[\"Markup\"] = 1] = \"Markup\";\n    CellKind[CellKind[\"Code\"] = 2] = \"Code\";\n})(CellKind || (CellKind = {})));\nvar NotebookCellExecutionState;\n( (function(NotebookCellExecutionState) {\n    NotebookCellExecutionState[NotebookCellExecutionState[\"Unconfirmed\"] = 1] = \"Unconfirmed\";\n    NotebookCellExecutionState[NotebookCellExecutionState[\"Pending\"] = 2] = \"Pending\";\n    NotebookCellExecutionState[NotebookCellExecutionState[\"Executing\"] = 3] = \"Executing\";\n})(NotebookCellExecutionState || (NotebookCellExecutionState = {})));\nvar NotebookCellsChangeType;\n( (function(NotebookCellsChangeType) {\n    NotebookCellsChangeType[NotebookCellsChangeType[\"ModelChange\"] = 1] = \"ModelChange\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"Move\"] = 2] = \"Move\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"ChangeCellLanguage\"] = 5] = \"ChangeCellLanguage\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"Initialize\"] = 6] = \"Initialize\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"ChangeCellMetadata\"] = 7] = \"ChangeCellMetadata\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"Output\"] = 8] = \"Output\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"OutputItem\"] = 9] = \"OutputItem\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"ChangeCellContent\"] = 10] = \"ChangeCellContent\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"ChangeDocumentMetadata\"] = 11] = \"ChangeDocumentMetadata\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"ChangeCellInternalMetadata\"] = 12] = \"ChangeCellInternalMetadata\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"ChangeCellMime\"] = 13] = \"ChangeCellMime\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"Unknown\"] = 100] = \"Unknown\";\n})(NotebookCellsChangeType || (NotebookCellsChangeType = {})));\nvar SelectionStateType;\n( (function(SelectionStateType) {\n    SelectionStateType[SelectionStateType[\"Handle\"] = 0] = \"Handle\";\n    SelectionStateType[SelectionStateType[\"Index\"] = 1] = \"Index\";\n})(SelectionStateType || (SelectionStateType = {})));\nvar CellUri;\n( (function(CellUri) {\n    CellUri.scheme = Schemas.vscodeNotebookCell;\n    const _lengths = ['W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f'];\n    const _padRegexp = ( new RegExp(`^[${_lengths.join('')}]+`));\n    const _radix = 7;\n    function generate(notebook, handle) {\n        const s = ( handle.toString(_radix));\n        const p = s.length < _lengths.length ? _lengths[s.length - 1] : 'z';\n        const fragment = `${p}${s}s${encodeBase64(VSBuffer.fromString(notebook.scheme), true, true)}`;\n        return notebook.with({ scheme: CellUri.scheme, fragment });\n    }\n    CellUri.generate = generate;\n    function parse(cell) {\n        if (cell.scheme !== CellUri.scheme) {\n            return undefined;\n        }\n        const idx = cell.fragment.indexOf('s');\n        if (idx < 0) {\n            return undefined;\n        }\n        const handle = parseInt(cell.fragment.substring(0, idx).replace(_padRegexp, ''), _radix);\n        const _scheme = ( decodeBase64(cell.fragment.substring(idx + 1)).toString());\n        if (isNaN(handle)) {\n            return undefined;\n        }\n        return {\n            handle,\n            notebook: cell.with({ scheme: _scheme, fragment: null })\n        };\n    }\n    CellUri.parse = parse;\n    function generateCellOutputUri(notebook, outputId) {\n        return notebook.with({\n            scheme: Schemas.vscodeNotebookCellOutput,\n            fragment: `op${outputId ?? ''},${notebook.scheme !== Schemas.file ? notebook.scheme : ''}`\n        });\n    }\n    CellUri.generateCellOutputUri = generateCellOutputUri;\n    function parseCellOutputUri(uri) {\n        if (uri.scheme !== Schemas.vscodeNotebookCellOutput) {\n            return;\n        }\n        const match = /^op([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?\\,(.*)$/i.exec(uri.fragment);\n        if (!match) {\n            return undefined;\n        }\n        const outputId = (match[1] && match[1] !== '') ? match[1] : undefined;\n        const scheme = match[2];\n        return {\n            outputId,\n            notebook: uri.with({\n                scheme: scheme || Schemas.file,\n                fragment: null\n            })\n        };\n    }\n    CellUri.parseCellOutputUri = parseCellOutputUri;\n    function generateCellPropertyUri(notebook, handle, scheme) {\n        return CellUri.generate(notebook, handle).with({ scheme: scheme });\n    }\n    CellUri.generateCellPropertyUri = generateCellPropertyUri;\n    function parseCellPropertyUri(uri, propertyScheme) {\n        if (uri.scheme !== propertyScheme) {\n            return undefined;\n        }\n        return CellUri.parse(uri.with({ scheme: CellUri.scheme }));\n    }\n    CellUri.parseCellPropertyUri = parseCellPropertyUri;\n})(CellUri || (CellUri = {})));\nconst NotebookSetting = {\n    displayOrder: 'notebook.displayOrder',\n    cellToolbarLocation: 'notebook.cellToolbarLocation',\n    cellToolbarVisibility: 'notebook.cellToolbarVisibility',\n    showCellStatusBar: 'notebook.showCellStatusBar',\n    textDiffEditorPreview: 'notebook.diff.enablePreview',\n    diffOverviewRuler: 'notebook.diff.overviewRuler',\n    experimentalInsertToolbarAlignment: 'notebook.experimental.insertToolbarAlignment',\n    compactView: 'notebook.compactView',\n    focusIndicator: 'notebook.cellFocusIndicator',\n    insertToolbarLocation: 'notebook.insertToolbarLocation',\n    globalToolbar: 'notebook.globalToolbar',\n    stickyScroll: 'notebook.stickyScroll.enabled',\n    undoRedoPerCell: 'notebook.undoRedoPerCell',\n    consolidatedOutputButton: 'notebook.consolidatedOutputButton',\n    showFoldingControls: 'notebook.showFoldingControls',\n    dragAndDropEnabled: 'notebook.dragAndDropEnabled',\n    cellEditorOptionsCustomizations: 'notebook.editorOptionsCustomizations',\n    consolidatedRunButton: 'notebook.consolidatedRunButton',\n    openGettingStarted: 'notebook.experimental.openGettingStarted',\n    globalToolbarShowLabel: 'notebook.globalToolbarShowLabel',\n    markupFontSize: 'notebook.markup.fontSize',\n    interactiveWindowCollapseCodeCells: 'interactiveWindow.collapseCellInputCode',\n    outputScrollingDeprecated: 'notebook.experimental.outputScrolling',\n    outputScrolling: 'notebook.output.scrolling',\n    textOutputLineLimit: 'notebook.output.textLineLimit',\n    formatOnSave: 'notebook.formatOnSave.enabled',\n    formatOnCellExecution: 'notebook.formatOnCellExecution',\n    codeActionsOnSave: 'notebook.codeActionsOnSave',\n    outputWordWrap: 'notebook.output.wordWrap',\n    outputLineHeightDeprecated: 'notebook.outputLineHeight',\n    outputLineHeight: 'notebook.output.lineHeight',\n    outputFontSizeDeprecated: 'notebook.outputFontSize',\n    outputFontSize: 'notebook.output.fontSize',\n    outputFontFamilyDeprecated: 'notebook.outputFontFamily',\n    outputFontFamily: 'notebook.output.fontFamily',\n    findScope: 'notebook.find.scope',\n    logging: 'notebook.logging',\n    confirmDeleteRunningCell: 'notebook.confirmDeleteRunningCell',\n    remoteSaving: 'notebook.experimental.remoteSave'\n};\nclass NotebookWorkingCopyTypeIdentifier {\n    static { this._prefix = 'notebook/'; }\n    static create(viewType) {\n        return `${NotebookWorkingCopyTypeIdentifier._prefix}${viewType}`;\n    }\n    static parse(candidate) {\n        if (candidate.startsWith(NotebookWorkingCopyTypeIdentifier._prefix)) {\n            return candidate.substring(NotebookWorkingCopyTypeIdentifier._prefix.length);\n        }\n        return undefined;\n    }\n}\nfunction isTextStreamMime(mimeType) {\n    return ['application/vnd.code.notebook.stdout', 'application/vnd.code.notebook.stderr'].includes(mimeType);\n}\nconst textDecoder = ( new TextDecoder());\nfunction compressOutputItemStreams(outputs) {\n    const buffers = [];\n    let startAppending = false;\n    for (const output of outputs) {\n        if ((buffers.length === 0 || startAppending)) {\n            buffers.push(output);\n            startAppending = true;\n        }\n    }\n    let didCompression = compressStreamBuffer(buffers);\n    const concatenated = VSBuffer.concat(( buffers.map(buffer => VSBuffer.wrap(buffer))));\n    const data = formatStreamText(concatenated);\n    didCompression = didCompression || data.byteLength !== concatenated.byteLength;\n    return { data, didCompression };\n}\nconst MOVE_CURSOR_1_LINE_COMMAND = `${String.fromCharCode(27)}[A`;\nconst MOVE_CURSOR_1_LINE_COMMAND_BYTES = ( MOVE_CURSOR_1_LINE_COMMAND.split('').map(c => c.charCodeAt(0)));\nconst LINE_FEED = 10;\nfunction compressStreamBuffer(streams) {\n    let didCompress = false;\n    streams.forEach((stream, index) => {\n        if (index === 0 || stream.length < MOVE_CURSOR_1_LINE_COMMAND.length) {\n            return;\n        }\n        const previousStream = streams[index - 1];\n        const command = stream.subarray(0, MOVE_CURSOR_1_LINE_COMMAND.length);\n        if (command[0] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[0] && command[1] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[1] && command[2] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[2]) {\n            const lastIndexOfLineFeed = previousStream.lastIndexOf(LINE_FEED);\n            if (lastIndexOfLineFeed === -1) {\n                return;\n            }\n            didCompress = true;\n            streams[index - 1] = previousStream.subarray(0, lastIndexOfLineFeed);\n            streams[index] = stream.subarray(MOVE_CURSOR_1_LINE_COMMAND.length);\n        }\n    });\n    return didCompress;\n}\nfunction fixBackspace(txt) {\n    let tmp = txt;\n    do {\n        txt = tmp;\n        tmp = txt.replace(/[^\\n]\\x08/gm, '');\n    } while (tmp.length < txt.length);\n    return txt;\n}\nfunction fixCarriageReturn(txt) {\n    txt = txt.replace(/\\r+\\n/gm, '\\n');\n    while (txt.search(/\\r[^$]/g) > -1) {\n        const base = txt.match(/^(.*)\\r+/m)[1];\n        let insert = txt.match(/\\r+(.*)$/m)[1];\n        insert = insert + base.slice(insert.length, base.length);\n        txt = txt.replace(/\\r+.*$/m, '\\r').replace(/^.*\\r/m, insert);\n    }\n    return txt;\n}\nconst BACKSPACE_CHARACTER = '\\b'.charCodeAt(0);\nconst CARRIAGE_RETURN_CHARACTER = '\\r'.charCodeAt(0);\nfunction formatStreamText(buffer) {\n    if (!buffer.buffer.includes(BACKSPACE_CHARACTER) && !buffer.buffer.includes(CARRIAGE_RETURN_CHARACTER)) {\n        return buffer;\n    }\n    return VSBuffer.fromString(fixCarriageReturn(fixBackspace(textDecoder.decode(buffer.buffer))));\n}\nexport { CellKind, CellUri, MOVE_CURSOR_1_LINE_COMMAND, NOTEBOOK_EDITOR_ID, NotebookCellExecutionState, NotebookCellsChangeType, NotebookSetting, NotebookWorkingCopyTypeIdentifier, SelectionStateType, compressOutputItemStreams, isTextStreamMime };\n"],
  "mappings": "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",
  "names": ["DebugConfigurationProviderTriggerKind", "DebuggerString", "EditSessionIdentityMatch", "RemoteAuthorityResolverErrorCode", "CellKind", "NotebookCellExecutionState", "NotebookCellsChangeType", "SelectionStateType", "CellUri"]
}

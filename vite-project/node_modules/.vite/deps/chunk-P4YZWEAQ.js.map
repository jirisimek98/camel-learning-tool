{
  "version": 3,
  "sources": ["../../vscode/service-override/languages.js"],
  "sourcesContent": ["import { __decorate, __param } from '../external/tslib/tslib.es6.js';\nimport '../missing-services.js';\nimport { SyncDescriptor } from 'monaco-editor/esm/vs/platform/instantiation/common/descriptors.js';\nimport { WorkbenchLanguageService } from '../vscode/src/vs/workbench/services/language/common/languageService.js';\nimport { LanguageConfigurationFileHandler } from '../vscode/src/vs/workbench/contrib/codeEditor/browser/languageConfigurationExtensionPoint.js';\nimport { Extensions } from '../vscode/src/vs/workbench/common/contributions.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport getServiceOverride$1 from './files.js';\nlet ExtensionPoints = class ExtensionPoints {\n    constructor(instantiationService) {\n        this.instantiationService = instantiationService;\n        this.instantiationService.createInstance(LanguageConfigurationFileHandler);\n    }\n};\nExtensionPoints = __decorate([\n    ( __param(0, IInstantiationService))\n], ExtensionPoints);\n( Registry.as(Extensions.Workbench)).registerWorkbenchContribution(ExtensionPoints, 1 );\nfunction getServiceOverride() {\n    return {\n        ...getServiceOverride$1(),\n        [( ILanguageService.toString())]: new SyncDescriptor(WorkbenchLanguageService, [], false)\n    };\n}\nexport { ExtensionPoints, getServiceOverride as default };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAIA;AACA;AACA;AAEA,IAAI,kBAAkB,MAAMA,iBAAgB;AAAA,EACxC,YAAY,sBAAsB;AAC9B,SAAK,uBAAuB;AAC5B,SAAK,qBAAqB,eAAe,gCAAgC;AAAA,EAC7E;AACJ;AACA,kBAAkB,WAAW;AAAA,EACvB,QAAQ,GAAG,qBAAqB;AACtC,GAAG,eAAe;AAChB,SAAS,GAAG,WAAW,SAAS,EAAG,8BAA8B,iBAAiB,CAAE;AACtF,SAASC,sBAAqB;AAC1B,SAAO;AAAA,IACH,GAAG,mBAAqB;AAAA,IACxB,CAAG,iBAAiB,SAAS,CAAE,GAAG,IAAI,eAAe,0BAA0B,CAAC,GAAG,KAAK;AAAA,EAC5F;AACJ;",
  "names": ["ExtensionPoints", "getServiceOverride"]
}

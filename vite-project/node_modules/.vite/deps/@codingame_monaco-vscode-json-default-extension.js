import {
  registerExtension
} from "./chunk-XRPB7NZZ.js";
import "./chunk-OOEFYOH5.js";
import "./chunk-KKMJ3VMB.js";
import "./chunk-ICNEG4YE.js";
import "./chunk-N4LABOCD.js";
import "./chunk-FXNOABVO.js";
import "./chunk-YDWP2D7X.js";
import "./chunk-KYTAC6SG.js";
import "./chunk-KDNL575K.js";
import "./chunk-DE7JK3KC.js";
import "./chunk-XHQJEB2N.js";
import "./chunk-ZVOC25HY.js";
import "./chunk-AR3QIQFF.js";
import "./chunk-E2764U5K.js";
import "./chunk-MEAKYGIF.js";
import "./chunk-ETI4KOTI.js";
import "./chunk-GJDIUAXO.js";
import "./chunk-O3SOEW3V.js";
import "./chunk-N5MAMNNV.js";
import "./chunk-PGWBAY6J.js";

// node_modules/@codingame/monaco-vscode-json-default-extension/index.js
var manifest = { name: "json", displayName: "JSON Language Basics", description: "Provides syntax highlighting & bracket matching in JSON files.", version: "1.0.0", publisher: "vscode", license: "MIT", engines: { vscode: "0.10.x" }, scripts: { "update-grammar": "node ./build/update-grammars.js" }, contributes: { languages: [{ id: "json", aliases: ["JSON", "json"], extensions: [".json", ".bowerrc", ".jscsrc", ".webmanifest", ".js.map", ".css.map", ".ts.map", ".har", ".jslintrc", ".jsonld", ".geojson", ".ipynb", ".vuerc"], filenames: ["composer.lock", ".watchmanconfig"], mimetypes: ["application/json", "application/manifest+json"], configuration: "./language-configuration.json" }, { id: "jsonc", aliases: ["JSON with Comments"], extensions: [".jsonc", ".eslintrc", ".eslintrc.json", ".jsfmtrc", ".jshintrc", ".swcrc", ".hintrc", ".babelrc"], filenames: ["babel.config.json", ".babelrc.json", ".ember-cli", "typedoc.json"], configuration: "./language-configuration.json" }, { id: "jsonl", aliases: ["JSON Lines"], extensions: [".jsonl"], filenames: [], configuration: "./language-configuration.json" }, { id: "snippets", aliases: ["Code Snippets"], extensions: [".code-snippets"], filenamePatterns: ["**/User/snippets/*.json", "**/User/profiles/*/snippets/*.json"], configuration: "./language-configuration.json" }], grammars: [{ language: "json", scopeName: "source.json", path: "./syntaxes/JSON.tmLanguage.json" }, { language: "jsonc", scopeName: "source.json.comments", path: "./syntaxes/JSONC.tmLanguage.json" }, { language: "jsonl", scopeName: "source.json.lines", path: "./syntaxes/JSONL.tmLanguage.json" }, { language: "snippets", scopeName: "source.json.comments.snippets", path: "./syntaxes/snippets.tmLanguage.json" }] }, repository: { type: "git", url: "https://github.com/microsoft/vscode.git" }, main: void 0 };
var { registerFileUrl, whenReady } = registerExtension(manifest);
registerFileUrl("./syntaxes/JSON.tmLanguage.json", new URL("/home/jsimek/MUNI/diplomka/camel-learning-tool/vite-project/node_modules/@codingame/monaco-vscode-json-default-extension/JSON.tmLanguage.json", import.meta.url).toString(), "application/json");
registerFileUrl("./syntaxes/JSONC.tmLanguage.json", new URL("/home/jsimek/MUNI/diplomka/camel-learning-tool/vite-project/node_modules/@codingame/monaco-vscode-json-default-extension/JSONC.tmLanguage.json", import.meta.url).toString(), "application/json");
registerFileUrl("./syntaxes/JSONL.tmLanguage.json", new URL("/home/jsimek/MUNI/diplomka/camel-learning-tool/vite-project/node_modules/@codingame/monaco-vscode-json-default-extension/JSONL.tmLanguage.json", import.meta.url).toString(), "application/json");
registerFileUrl("./syntaxes/snippets.tmLanguage.json", new URL("/home/jsimek/MUNI/diplomka/camel-learning-tool/vite-project/node_modules/@codingame/monaco-vscode-json-default-extension/snippets.tmLanguage.json", import.meta.url).toString(), "application/json");
registerFileUrl("./language-configuration.json", new URL("/home/jsimek/MUNI/diplomka/camel-learning-tool/vite-project/node_modules/@codingame/monaco-vscode-json-default-extension/language-configuration.json", import.meta.url).toString(), "application/json");
export {
  whenReady
};
//# sourceMappingURL=@codingame_monaco-vscode-json-default-extension.js.map

{
  "version": 3,
  "sources": ["../../vscode-textmate/release/webpack:/vscodetextmate/webpack/universalModuleDefinition", "../../vscode-textmate/release/webpack:/vscodetextmate/out/debug.js", "../../vscode-textmate/release/webpack:/vscodetextmate/out/diffStateStacks.js", "../../vscode-textmate/release/webpack:/vscodetextmate/out/encodedTokenAttributes.js", "../../vscode-textmate/release/webpack:/vscodetextmate/out/grammar/basicScopesAttributeProvider.js", "../../vscode-textmate/release/webpack:/vscodetextmate/out/grammar/grammar.js", "../../vscode-textmate/release/webpack:/vscodetextmate/out/grammar/grammarDependencies.js", "../../vscode-textmate/release/webpack:/vscodetextmate/out/grammar/index.js", "../../vscode-textmate/release/webpack:/vscodetextmate/out/grammar/tokenizeString.js", "../../vscode-textmate/release/webpack:/vscodetextmate/out/json.js", "../../vscode-textmate/release/webpack:/vscodetextmate/out/main.js", "../../vscode-textmate/release/webpack:/vscodetextmate/out/matcher.js", "../../vscode-textmate/release/webpack:/vscodetextmate/out/onigLib.js", "../../vscode-textmate/release/webpack:/vscodetextmate/out/parseRawGrammar.js", "../../vscode-textmate/release/webpack:/vscodetextmate/out/plist.js", "../../vscode-textmate/release/webpack:/vscodetextmate/out/registry.js", "../../vscode-textmate/release/webpack:/vscodetextmate/out/rule.js", "../../vscode-textmate/release/webpack:/vscodetextmate/out/theme.js", "../../vscode-textmate/release/webpack:/vscodetextmate/out/utils.js", "../../vscode-textmate/release/webpack:/vscodetextmate/webpack/bootstrap", "../../vscode-textmate/release/webpack:/vscodetextmate/webpack/startup", "../../vscode-oniguruma/release/main.js", "../../vscode/service-override/textmate.js", "../../vscode/vscode/src/vs/workbench/services/textMate/browser/textMateTokenizationFeatureImpl.js", "../../vscode/vscode/src/vs/workbench/services/textMate/browser/tokenizationSupport/textMateTokenizationSupport.js", "../../vscode/vscode/src/vs/workbench/services/textMate/browser/tokenizationSupport/tokenizationSupportWithLineLimit.js", "../../vscode/vscode/src/vs/workbench/services/textMate/browser/backgroundTokenization/threadedBackgroundTokenizerFactory.js", "../../vscode/vscode/src/vs/workbench/services/textMate/browser/backgroundTokenization/textMateWorkerTokenizerController.js", "../../vscode/vscode/src/vs/workbench/services/textMate/browser/arrayOperation.js", "../../vscode/vscode/src/vs/workbench/services/textMate/common/TMGrammarFactory.js", "../../vscode/vscode/src/vs/workbench/services/textMate/common/TMScopeRegistry.js", "../../vscode/vscode/src/vs/workbench/services/textMate/common/TMGrammars.js", "../../vscode/vscode/src/vs/workbench/services/themes/common/tokenClassificationExtensionPoint.js"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vscodetextmate\"] = factory();\n\telse\n\t\troot[\"vscodetextmate\"] = factory();\n})(this, function() {\nreturn ", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UseOnigurumaFindOptions = exports.DebugFlags = void 0;\nexports.DebugFlags = {\n    InDebugMode: (typeof process !== 'undefined' && !!process.env['VSCODE_TEXTMATE_DEBUG'])\n};\nexports.UseOnigurumaFindOptions = false;\n//# sourceMappingURL=debug.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyStateStackDiff = exports.diffStateStacksRefEq = void 0;\nconst grammar_1 = require(\"./grammar\");\nfunction diffStateStacksRefEq(first, second) {\n    let pops = 0;\n    const newFrames = [];\n    let curFirst = first;\n    let curSecond = second;\n    while (curFirst !== curSecond) {\n        if (curFirst && (!curSecond || curFirst.depth >= curSecond.depth)) {\n            // curFirst is certainly not contained in curSecond\n            pops++;\n            curFirst = curFirst.parent;\n        }\n        else {\n            // curSecond is certainly not contained in curFirst.\n            // Also, curSecond must be defined, as otherwise a previous case would match\n            newFrames.push(curSecond.toStateStackFrame());\n            curSecond = curSecond.parent;\n        }\n    }\n    return {\n        pops,\n        newFrames: newFrames.reverse(),\n    };\n}\nexports.diffStateStacksRefEq = diffStateStacksRefEq;\nfunction applyStateStackDiff(stack, diff) {\n    let curStack = stack;\n    for (let i = 0; i < diff.pops; i++) {\n        curStack = curStack.parent;\n    }\n    for (const frame of diff.newFrames) {\n        curStack = grammar_1.StateStackImpl.pushFrame(curStack, frame);\n    }\n    return curStack;\n}\nexports.applyStateStackDiff = applyStateStackDiff;\n//# sourceMappingURL=diffStateStacks.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toOptionalTokenType = exports.EncodedTokenAttributes = void 0;\nvar EncodedTokenAttributes;\n(function (EncodedTokenAttributes) {\n    function toBinaryStr(encodedTokenAttributes) {\n        let r = encodedTokenAttributes.toString(2);\n        while (r.length < 32) {\n            r = \"0\" + r;\n        }\n        return r;\n    }\n    EncodedTokenAttributes.toBinaryStr = toBinaryStr;\n    function print(encodedTokenAttributes) {\n        const languageId = EncodedTokenAttributes.getLanguageId(encodedTokenAttributes);\n        const tokenType = EncodedTokenAttributes.getTokenType(encodedTokenAttributes);\n        const fontStyle = EncodedTokenAttributes.getFontStyle(encodedTokenAttributes);\n        const foreground = EncodedTokenAttributes.getForeground(encodedTokenAttributes);\n        const background = EncodedTokenAttributes.getBackground(encodedTokenAttributes);\n        console.log({\n            languageId: languageId,\n            tokenType: tokenType,\n            fontStyle: fontStyle,\n            foreground: foreground,\n            background: background,\n        });\n    }\n    EncodedTokenAttributes.print = print;\n    function getLanguageId(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 255 /* LANGUAGEID_MASK */) >>>\n            0 /* LANGUAGEID_OFFSET */);\n    }\n    EncodedTokenAttributes.getLanguageId = getLanguageId;\n    function getTokenType(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 768 /* TOKEN_TYPE_MASK */) >>>\n            8 /* TOKEN_TYPE_OFFSET */);\n    }\n    EncodedTokenAttributes.getTokenType = getTokenType;\n    function containsBalancedBrackets(encodedTokenAttributes) {\n        return (encodedTokenAttributes & 1024 /* BALANCED_BRACKETS_MASK */) !== 0;\n    }\n    EncodedTokenAttributes.containsBalancedBrackets = containsBalancedBrackets;\n    function getFontStyle(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 30720 /* FONT_STYLE_MASK */) >>>\n            11 /* FONT_STYLE_OFFSET */);\n    }\n    EncodedTokenAttributes.getFontStyle = getFontStyle;\n    function getForeground(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 16744448 /* FOREGROUND_MASK */) >>>\n            15 /* FOREGROUND_OFFSET */);\n    }\n    EncodedTokenAttributes.getForeground = getForeground;\n    function getBackground(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 4278190080 /* BACKGROUND_MASK */) >>>\n            24 /* BACKGROUND_OFFSET */);\n    }\n    EncodedTokenAttributes.getBackground = getBackground;\n    /**\n     * Updates the fields in `metadata`.\n     * A value of `0`, `NotSet` or `null` indicates that the corresponding field should be left as is.\n     */\n    function set(encodedTokenAttributes, languageId, tokenType, containsBalancedBrackets, fontStyle, foreground, background) {\n        let _languageId = EncodedTokenAttributes.getLanguageId(encodedTokenAttributes);\n        let _tokenType = EncodedTokenAttributes.getTokenType(encodedTokenAttributes);\n        let _containsBalancedBracketsBit = EncodedTokenAttributes.containsBalancedBrackets(encodedTokenAttributes) ? 1 : 0;\n        let _fontStyle = EncodedTokenAttributes.getFontStyle(encodedTokenAttributes);\n        let _foreground = EncodedTokenAttributes.getForeground(encodedTokenAttributes);\n        let _background = EncodedTokenAttributes.getBackground(encodedTokenAttributes);\n        if (languageId !== 0) {\n            _languageId = languageId;\n        }\n        if (tokenType !== 8 /* NotSet */) {\n            _tokenType = fromOptionalTokenType(tokenType);\n        }\n        if (containsBalancedBrackets !== null) {\n            _containsBalancedBracketsBit = containsBalancedBrackets ? 1 : 0;\n        }\n        if (fontStyle !== -1 /* NotSet */) {\n            _fontStyle = fontStyle;\n        }\n        if (foreground !== 0) {\n            _foreground = foreground;\n        }\n        if (background !== 0) {\n            _background = background;\n        }\n        return (((_languageId << 0 /* LANGUAGEID_OFFSET */) |\n            (_tokenType << 8 /* TOKEN_TYPE_OFFSET */) |\n            (_containsBalancedBracketsBit <<\n                10 /* BALANCED_BRACKETS_OFFSET */) |\n            (_fontStyle << 11 /* FONT_STYLE_OFFSET */) |\n            (_foreground << 15 /* FOREGROUND_OFFSET */) |\n            (_background << 24 /* BACKGROUND_OFFSET */)) >>>\n            0);\n    }\n    EncodedTokenAttributes.set = set;\n})(EncodedTokenAttributes = exports.EncodedTokenAttributes || (exports.EncodedTokenAttributes = {}));\nfunction toOptionalTokenType(standardType) {\n    return standardType;\n}\nexports.toOptionalTokenType = toOptionalTokenType;\nfunction fromOptionalTokenType(standardType) {\n    return standardType;\n}\n//# sourceMappingURL=encodedTokenAttributes.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BasicScopeAttributesProvider = exports.BasicScopeAttributes = void 0;\nconst utils_1 = require(\"../utils\");\nclass BasicScopeAttributes {\n    constructor(languageId, tokenType) {\n        this.languageId = languageId;\n        this.tokenType = tokenType;\n    }\n}\nexports.BasicScopeAttributes = BasicScopeAttributes;\nclass BasicScopeAttributesProvider {\n    constructor(initialLanguageId, embeddedLanguages) {\n        this._getBasicScopeAttributes = new utils_1.CachedFn((scopeName) => {\n            const languageId = this._scopeToLanguage(scopeName);\n            const standardTokenType = this._toStandardTokenType(scopeName);\n            return new BasicScopeAttributes(languageId, standardTokenType);\n        });\n        this._defaultAttributes = new BasicScopeAttributes(initialLanguageId, 8 /* NotSet */);\n        this._embeddedLanguagesMatcher = new ScopeMatcher(Object.entries(embeddedLanguages || {}));\n    }\n    getDefaultAttributes() {\n        return this._defaultAttributes;\n    }\n    getBasicScopeAttributes(scopeName) {\n        if (scopeName === null) {\n            return BasicScopeAttributesProvider._NULL_SCOPE_METADATA;\n        }\n        return this._getBasicScopeAttributes.get(scopeName);\n    }\n    /**\n     * Given a produced TM scope, return the language that token describes or null if unknown.\n     * e.g. source.html => html, source.css.embedded.html => css, punctuation.definition.tag.html => null\n     */\n    _scopeToLanguage(scope) {\n        return this._embeddedLanguagesMatcher.match(scope) || 0;\n    }\n    _toStandardTokenType(scopeName) {\n        const m = scopeName.match(BasicScopeAttributesProvider.STANDARD_TOKEN_TYPE_REGEXP);\n        if (!m) {\n            return 8 /* NotSet */;\n        }\n        switch (m[1]) {\n            case \"comment\":\n                return 1 /* Comment */;\n            case \"string\":\n                return 2 /* String */;\n            case \"regex\":\n                return 3 /* RegEx */;\n            case \"meta.embedded\":\n                return 0 /* Other */;\n        }\n        throw new Error(\"Unexpected match for standard token type!\");\n    }\n}\nexports.BasicScopeAttributesProvider = BasicScopeAttributesProvider;\nBasicScopeAttributesProvider._NULL_SCOPE_METADATA = new BasicScopeAttributes(0, 0);\nBasicScopeAttributesProvider.STANDARD_TOKEN_TYPE_REGEXP = /\\b(comment|string|regex|meta\\.embedded)\\b/;\nclass ScopeMatcher {\n    constructor(values) {\n        if (values.length === 0) {\n            this.values = null;\n            this.scopesRegExp = null;\n        }\n        else {\n            this.values = new Map(values);\n            // create the regex\n            const escapedScopes = values.map(([scopeName, value]) => utils_1.escapeRegExpCharacters(scopeName));\n            escapedScopes.sort();\n            escapedScopes.reverse(); // Longest scope first\n            this.scopesRegExp = new RegExp(`^((${escapedScopes.join(\")|(\")}))($|\\\\.)`, \"\");\n        }\n    }\n    match(scope) {\n        if (!this.scopesRegExp) {\n            return undefined;\n        }\n        const m = scope.match(this.scopesRegExp);\n        if (!m) {\n            // no scopes matched\n            return undefined;\n        }\n        return this.values.get(m[1]);\n    }\n}\n//# sourceMappingURL=basicScopesAttributeProvider.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LineTokens = exports.BalancedBracketSelectors = exports.StateStackImpl = exports.AttributedScopeStack = exports.Grammar = exports.createGrammar = void 0;\nconst debug_1 = require(\"../debug\");\nconst encodedTokenAttributes_1 = require(\"../encodedTokenAttributes\");\nconst matcher_1 = require(\"../matcher\");\nconst onigLib_1 = require(\"../onigLib\");\nconst rule_1 = require(\"../rule\");\nconst theme_1 = require(\"../theme\");\nconst utils_1 = require(\"../utils\");\nconst basicScopesAttributeProvider_1 = require(\"./basicScopesAttributeProvider\");\nconst tokenizeString_1 = require(\"./tokenizeString\");\nfunction createGrammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib) {\n    return new Grammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib); //TODO\n}\nexports.createGrammar = createGrammar;\nfunction collectInjections(result, selector, rule, ruleFactoryHelper, grammar) {\n    const matchers = matcher_1.createMatchers(selector, nameMatcher);\n    const ruleId = rule_1.RuleFactory.getCompiledRuleId(rule, ruleFactoryHelper, grammar.repository);\n    for (const matcher of matchers) {\n        result.push({\n            debugSelector: selector,\n            matcher: matcher.matcher,\n            ruleId: ruleId,\n            grammar: grammar,\n            priority: matcher.priority\n        });\n    }\n}\nfunction nameMatcher(identifers, scopes) {\n    if (scopes.length < identifers.length) {\n        return false;\n    }\n    let lastIndex = 0;\n    return identifers.every(identifier => {\n        for (let i = lastIndex; i < scopes.length; i++) {\n            if (scopesAreMatching(scopes[i], identifier)) {\n                lastIndex = i + 1;\n                return true;\n            }\n        }\n        return false;\n    });\n}\nfunction scopesAreMatching(thisScopeName, scopeName) {\n    if (!thisScopeName) {\n        return false;\n    }\n    if (thisScopeName === scopeName) {\n        return true;\n    }\n    const len = scopeName.length;\n    return thisScopeName.length > len && thisScopeName.substr(0, len) === scopeName && thisScopeName[len] === '.';\n}\nclass Grammar {\n    constructor(_rootScopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, _onigLib) {\n        this._rootScopeName = _rootScopeName;\n        this.balancedBracketSelectors = balancedBracketSelectors;\n        this._onigLib = _onigLib;\n        this._basicScopeAttributesProvider = new basicScopesAttributeProvider_1.BasicScopeAttributesProvider(initialLanguage, embeddedLanguages);\n        this._rootId = -1;\n        this._lastRuleId = 0;\n        this._ruleId2desc = [null];\n        this._includedGrammars = {};\n        this._grammarRepository = grammarRepository;\n        this._grammar = initGrammar(grammar, null);\n        this._injections = null;\n        this._tokenTypeMatchers = [];\n        if (tokenTypes) {\n            for (const selector of Object.keys(tokenTypes)) {\n                const matchers = matcher_1.createMatchers(selector, nameMatcher);\n                for (const matcher of matchers) {\n                    this._tokenTypeMatchers.push({\n                        matcher: matcher.matcher,\n                        type: tokenTypes[selector],\n                    });\n                }\n            }\n        }\n    }\n    get themeProvider() { return this._grammarRepository; }\n    dispose() {\n        for (const rule of this._ruleId2desc) {\n            if (rule) {\n                rule.dispose();\n            }\n        }\n    }\n    createOnigScanner(sources) {\n        return this._onigLib.createOnigScanner(sources);\n    }\n    createOnigString(sources) {\n        return this._onigLib.createOnigString(sources);\n    }\n    getMetadataForScope(scope) {\n        return this._basicScopeAttributesProvider.getBasicScopeAttributes(scope);\n    }\n    _collectInjections() {\n        const grammarRepository = {\n            lookup: (scopeName) => {\n                if (scopeName === this._rootScopeName) {\n                    return this._grammar;\n                }\n                return this.getExternalGrammar(scopeName);\n            },\n            injections: (scopeName) => {\n                return this._grammarRepository.injections(scopeName);\n            },\n        };\n        const result = [];\n        const scopeName = this._rootScopeName;\n        const grammar = grammarRepository.lookup(scopeName);\n        if (grammar) {\n            // add injections from the current grammar\n            const rawInjections = grammar.injections;\n            if (rawInjections) {\n                for (let expression in rawInjections) {\n                    collectInjections(result, expression, rawInjections[expression], this, grammar);\n                }\n            }\n            // add injection grammars contributed for the current scope\n            const injectionScopeNames = this._grammarRepository.injections(scopeName);\n            if (injectionScopeNames) {\n                injectionScopeNames.forEach((injectionScopeName) => {\n                    const injectionGrammar = this.getExternalGrammar(injectionScopeName);\n                    if (injectionGrammar) {\n                        const selector = injectionGrammar.injectionSelector;\n                        if (selector) {\n                            collectInjections(result, selector, injectionGrammar, this, injectionGrammar);\n                        }\n                    }\n                });\n            }\n        }\n        result.sort((i1, i2) => i1.priority - i2.priority); // sort by priority\n        return result;\n    }\n    getInjections() {\n        if (this._injections === null) {\n            this._injections = this._collectInjections();\n            if (debug_1.DebugFlags.InDebugMode && this._injections.length > 0) {\n                console.log(`Grammar ${this._rootScopeName} contains the following injections:`);\n                for (const injection of this._injections) {\n                    console.log(`  - ${injection.debugSelector}`);\n                }\n            }\n        }\n        return this._injections;\n    }\n    registerRule(factory) {\n        const id = ++this._lastRuleId;\n        const result = factory(rule_1.ruleIdFromNumber(id));\n        this._ruleId2desc[id] = result;\n        return result;\n    }\n    getRule(ruleId) {\n        return this._ruleId2desc[rule_1.ruleIdToNumber(ruleId)];\n    }\n    getExternalGrammar(scopeName, repository) {\n        if (this._includedGrammars[scopeName]) {\n            return this._includedGrammars[scopeName];\n        }\n        else if (this._grammarRepository) {\n            const rawIncludedGrammar = this._grammarRepository.lookup(scopeName);\n            if (rawIncludedGrammar) {\n                // console.log('LOADED GRAMMAR ' + pattern.include);\n                this._includedGrammars[scopeName] = initGrammar(rawIncludedGrammar, repository && repository.$base);\n                return this._includedGrammars[scopeName];\n            }\n        }\n        return undefined;\n    }\n    tokenizeLine(lineText, prevState, timeLimit = 0) {\n        const r = this._tokenize(lineText, prevState, false, timeLimit);\n        return {\n            tokens: r.lineTokens.getResult(r.ruleStack, r.lineLength),\n            ruleStack: r.ruleStack,\n            stoppedEarly: r.stoppedEarly,\n        };\n    }\n    tokenizeLine2(lineText, prevState, timeLimit = 0) {\n        const r = this._tokenize(lineText, prevState, true, timeLimit);\n        return {\n            tokens: r.lineTokens.getBinaryResult(r.ruleStack, r.lineLength),\n            ruleStack: r.ruleStack,\n            stoppedEarly: r.stoppedEarly,\n        };\n    }\n    _tokenize(lineText, prevState, emitBinaryTokens, timeLimit) {\n        if (this._rootId === -1) {\n            this._rootId = rule_1.RuleFactory.getCompiledRuleId(this._grammar.repository.$self, this, this._grammar.repository);\n            // This ensures ids are deterministic, and thus equal in renderer and webworker.\n            this.getInjections();\n        }\n        let isFirstLine;\n        if (!prevState || prevState === StateStackImpl.NULL) {\n            isFirstLine = true;\n            const rawDefaultMetadata = this._basicScopeAttributesProvider.getDefaultAttributes();\n            const defaultStyle = this.themeProvider.getDefaults();\n            const defaultMetadata = encodedTokenAttributes_1.EncodedTokenAttributes.set(0, rawDefaultMetadata.languageId, rawDefaultMetadata.tokenType, null, defaultStyle.fontStyle, defaultStyle.foregroundId, defaultStyle.backgroundId);\n            const rootScopeName = this.getRule(this._rootId).getName(null, null);\n            let scopeList;\n            if (rootScopeName) {\n                scopeList = AttributedScopeStack.createRootAndLookUpScopeName(rootScopeName, defaultMetadata, this);\n            }\n            else {\n                scopeList = AttributedScopeStack.createRoot(\"unknown\", defaultMetadata);\n            }\n            prevState = new StateStackImpl(null, this._rootId, -1, -1, false, null, scopeList, scopeList);\n        }\n        else {\n            isFirstLine = false;\n            prevState.reset();\n        }\n        lineText = lineText + \"\\n\";\n        const onigLineText = this.createOnigString(lineText);\n        const lineLength = onigLineText.content.length;\n        const lineTokens = new LineTokens(emitBinaryTokens, lineText, this._tokenTypeMatchers, this.balancedBracketSelectors);\n        const r = tokenizeString_1._tokenizeString(this, onigLineText, isFirstLine, 0, prevState, lineTokens, true, timeLimit);\n        onigLib_1.disposeOnigString(onigLineText);\n        return {\n            lineLength: lineLength,\n            lineTokens: lineTokens,\n            ruleStack: r.stack,\n            stoppedEarly: r.stoppedEarly,\n        };\n    }\n}\nexports.Grammar = Grammar;\nfunction initGrammar(grammar, base) {\n    grammar = utils_1.clone(grammar);\n    grammar.repository = grammar.repository || {};\n    grammar.repository.$self = {\n        $vscodeTextmateLocation: grammar.$vscodeTextmateLocation,\n        patterns: grammar.patterns,\n        name: grammar.scopeName\n    };\n    grammar.repository.$base = base || grammar.repository.$self;\n    return grammar;\n}\nclass AttributedScopeStack {\n    /**\n     * Invariant:\n     * ```\n     * if (parent && !scopePath.extends(parent.scopePath)) {\n     * \tthrow new Error();\n     * }\n     * ```\n     */\n    constructor(parent, scopePath, tokenAttributes) {\n        this.parent = parent;\n        this.scopePath = scopePath;\n        this.tokenAttributes = tokenAttributes;\n    }\n    static fromExtension(namesScopeList, contentNameScopesList) {\n        let current = namesScopeList;\n        let scopeNames = namesScopeList?.scopePath ?? null;\n        for (const frame of contentNameScopesList) {\n            scopeNames = theme_1.ScopeStack.push(scopeNames, frame.scopeNames);\n            current = new AttributedScopeStack(current, scopeNames, frame.encodedTokenAttributes);\n        }\n        return current;\n    }\n    static createRoot(scopeName, tokenAttributes) {\n        return new AttributedScopeStack(null, new theme_1.ScopeStack(null, scopeName), tokenAttributes);\n    }\n    static createRootAndLookUpScopeName(scopeName, tokenAttributes, grammar) {\n        const rawRootMetadata = grammar.getMetadataForScope(scopeName);\n        const scopePath = new theme_1.ScopeStack(null, scopeName);\n        const rootStyle = grammar.themeProvider.themeMatch(scopePath);\n        const resolvedTokenAttributes = AttributedScopeStack.mergeAttributes(tokenAttributes, rawRootMetadata, rootStyle);\n        return new AttributedScopeStack(null, scopePath, resolvedTokenAttributes);\n    }\n    get scopeName() { return this.scopePath.scopeName; }\n    toString() {\n        return this.getScopeNames().join(' ');\n    }\n    equals(other) {\n        return AttributedScopeStack.equals(this, other);\n    }\n    static equals(a, b) {\n        do {\n            if (a === b) {\n                return true;\n            }\n            if (!a && !b) {\n                // End of list reached for both\n                return true;\n            }\n            if (!a || !b) {\n                // End of list reached only for one\n                return false;\n            }\n            if (a.scopeName !== b.scopeName || a.tokenAttributes !== b.tokenAttributes) {\n                return false;\n            }\n            // Go to previous pair\n            a = a.parent;\n            b = b.parent;\n        } while (true);\n    }\n    static mergeAttributes(existingTokenAttributes, basicScopeAttributes, styleAttributes) {\n        let fontStyle = -1 /* NotSet */;\n        let foreground = 0;\n        let background = 0;\n        if (styleAttributes !== null) {\n            fontStyle = styleAttributes.fontStyle;\n            foreground = styleAttributes.foregroundId;\n            background = styleAttributes.backgroundId;\n        }\n        return encodedTokenAttributes_1.EncodedTokenAttributes.set(existingTokenAttributes, basicScopeAttributes.languageId, basicScopeAttributes.tokenType, null, fontStyle, foreground, background);\n    }\n    pushAttributed(scopePath, grammar) {\n        if (scopePath === null) {\n            return this;\n        }\n        if (scopePath.indexOf(' ') === -1) {\n            // This is the common case and much faster\n            return AttributedScopeStack._pushAttributed(this, scopePath, grammar);\n        }\n        const scopes = scopePath.split(/ /g);\n        let result = this;\n        for (const scope of scopes) {\n            result = AttributedScopeStack._pushAttributed(result, scope, grammar);\n        }\n        return result;\n    }\n    static _pushAttributed(target, scopeName, grammar) {\n        const rawMetadata = grammar.getMetadataForScope(scopeName);\n        const newPath = target.scopePath.push(scopeName);\n        const scopeThemeMatchResult = grammar.themeProvider.themeMatch(newPath);\n        const metadata = AttributedScopeStack.mergeAttributes(target.tokenAttributes, rawMetadata, scopeThemeMatchResult);\n        return new AttributedScopeStack(target, newPath, metadata);\n    }\n    getScopeNames() {\n        return this.scopePath.getSegments();\n    }\n    getExtensionIfDefined(base) {\n        const result = [];\n        let self = this;\n        while (self && self !== base) {\n            result.push({\n                encodedTokenAttributes: self.tokenAttributes,\n                scopeNames: self.scopePath.getExtensionIfDefined(self.parent?.scopePath ?? null),\n            });\n            self = self.parent;\n        }\n        return self === base ? result.reverse() : undefined;\n    }\n}\nexports.AttributedScopeStack = AttributedScopeStack;\n/**\n * Represents a \"pushed\" state on the stack (as a linked list element).\n */\nclass StateStackImpl {\n    /**\n     * Invariant:\n     * ```\n     * if (contentNameScopesList !== nameScopesList && contentNameScopesList?.parent !== nameScopesList) {\n     * \tthrow new Error();\n     * }\n     * if (this.parent && !nameScopesList.extends(this.parent.contentNameScopesList)) {\n     * \tthrow new Error();\n     * }\n     * ```\n     */\n    constructor(\n    /**\n     * The previous state on the stack (or null for the root state).\n     */\n    parent, \n    /**\n     * The state (rule) that this element represents.\n     */\n    ruleId, enterPos, anchorPos, \n    /**\n     * The state has entered and captured \\n. This means that the next line should have an anchorPosition of 0.\n     */\n    beginRuleCapturedEOL, \n    /**\n     * The \"pop\" (end) condition for this state in case that it was dynamically generated through captured text.\n     */\n    endRule, \n    /**\n     * The list of scopes containing the \"name\" for this state.\n     */\n    nameScopesList, \n    /**\n     * The list of scopes containing the \"contentName\" (besides \"name\") for this state.\n     * This list **must** contain as an element `scopeName`.\n     */\n    contentNameScopesList) {\n        this.parent = parent;\n        this.ruleId = ruleId;\n        this.beginRuleCapturedEOL = beginRuleCapturedEOL;\n        this.endRule = endRule;\n        this.nameScopesList = nameScopesList;\n        this.contentNameScopesList = contentNameScopesList;\n        this._stackElementBrand = undefined;\n        this.depth = this.parent ? this.parent.depth + 1 : 1;\n        this._enterPos = enterPos;\n        this._anchorPos = anchorPos;\n    }\n    equals(other) {\n        if (other === null) {\n            return false;\n        }\n        return StateStackImpl._equals(this, other);\n    }\n    static _equals(a, b) {\n        if (a === b) {\n            return true;\n        }\n        if (!this._structuralEquals(a, b)) {\n            return false;\n        }\n        return AttributedScopeStack.equals(a.contentNameScopesList, b.contentNameScopesList);\n    }\n    /**\n     * A structural equals check. Does not take into account `scopes`.\n     */\n    static _structuralEquals(a, b) {\n        do {\n            if (a === b) {\n                return true;\n            }\n            if (!a && !b) {\n                // End of list reached for both\n                return true;\n            }\n            if (!a || !b) {\n                // End of list reached only for one\n                return false;\n            }\n            if (a.depth !== b.depth ||\n                a.ruleId !== b.ruleId ||\n                a.endRule !== b.endRule) {\n                return false;\n            }\n            // Go to previous pair\n            a = a.parent;\n            b = b.parent;\n        } while (true);\n    }\n    clone() {\n        return this;\n    }\n    static _reset(el) {\n        while (el) {\n            el._enterPos = -1;\n            el._anchorPos = -1;\n            el = el.parent;\n        }\n    }\n    reset() {\n        StateStackImpl._reset(this);\n    }\n    pop() {\n        return this.parent;\n    }\n    safePop() {\n        if (this.parent) {\n            return this.parent;\n        }\n        return this;\n    }\n    push(ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList) {\n        return new StateStackImpl(this, ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList);\n    }\n    getEnterPos() {\n        return this._enterPos;\n    }\n    getAnchorPos() {\n        return this._anchorPos;\n    }\n    getRule(grammar) {\n        return grammar.getRule(this.ruleId);\n    }\n    toString() {\n        const r = [];\n        this._writeString(r, 0);\n        return \"[\" + r.join(\",\") + \"]\";\n    }\n    _writeString(res, outIndex) {\n        if (this.parent) {\n            outIndex = this.parent._writeString(res, outIndex);\n        }\n        res[outIndex++] = `(${this.ruleId}, ${this.nameScopesList?.toString()}, ${this.contentNameScopesList?.toString()})`;\n        return outIndex;\n    }\n    withContentNameScopesList(contentNameScopeStack) {\n        if (this.contentNameScopesList === contentNameScopeStack) {\n            return this;\n        }\n        return this.parent.push(this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, this.endRule, this.nameScopesList, contentNameScopeStack);\n    }\n    withEndRule(endRule) {\n        if (this.endRule === endRule) {\n            return this;\n        }\n        return new StateStackImpl(this.parent, this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, endRule, this.nameScopesList, this.contentNameScopesList);\n    }\n    // Used to warn of endless loops\n    hasSameRuleAs(other) {\n        let el = this;\n        while (el && el._enterPos === other._enterPos) {\n            if (el.ruleId === other.ruleId) {\n                return true;\n            }\n            el = el.parent;\n        }\n        return false;\n    }\n    toStateStackFrame() {\n        return {\n            ruleId: rule_1.ruleIdToNumber(this.ruleId),\n            beginRuleCapturedEOL: this.beginRuleCapturedEOL,\n            endRule: this.endRule,\n            nameScopesList: this.nameScopesList?.getExtensionIfDefined(this.parent?.nameScopesList ?? null) ?? [],\n            contentNameScopesList: this.contentNameScopesList?.getExtensionIfDefined(this.nameScopesList) ?? [],\n        };\n    }\n    static pushFrame(self, frame) {\n        const namesScopeList = AttributedScopeStack.fromExtension(self?.nameScopesList ?? null, frame.nameScopesList);\n        return new StateStackImpl(self, rule_1.ruleIdFromNumber(frame.ruleId), frame.enterPos ?? -1, frame.anchorPos ?? -1, frame.beginRuleCapturedEOL, frame.endRule, namesScopeList, AttributedScopeStack.fromExtension(namesScopeList, frame.contentNameScopesList));\n    }\n}\nexports.StateStackImpl = StateStackImpl;\n// TODO remove me\nStateStackImpl.NULL = new StateStackImpl(null, 0, 0, 0, false, null, null, null);\nclass BalancedBracketSelectors {\n    constructor(balancedBracketScopes, unbalancedBracketScopes) {\n        this.allowAny = false;\n        this.balancedBracketScopes = balancedBracketScopes.flatMap((selector) => {\n            if (selector === '*') {\n                this.allowAny = true;\n                return [];\n            }\n            return matcher_1.createMatchers(selector, nameMatcher).map((m) => m.matcher);\n        });\n        this.unbalancedBracketScopes = unbalancedBracketScopes.flatMap((selector) => matcher_1.createMatchers(selector, nameMatcher).map((m) => m.matcher));\n    }\n    get matchesAlways() {\n        return this.allowAny && this.unbalancedBracketScopes.length === 0;\n    }\n    get matchesNever() {\n        return this.balancedBracketScopes.length === 0 && !this.allowAny;\n    }\n    match(scopes) {\n        for (const excluder of this.unbalancedBracketScopes) {\n            if (excluder(scopes)) {\n                return false;\n            }\n        }\n        for (const includer of this.balancedBracketScopes) {\n            if (includer(scopes)) {\n                return true;\n            }\n        }\n        return this.allowAny;\n    }\n}\nexports.BalancedBracketSelectors = BalancedBracketSelectors;\nclass LineTokens {\n    constructor(emitBinaryTokens, lineText, tokenTypeOverrides, balancedBracketSelectors) {\n        this.balancedBracketSelectors = balancedBracketSelectors;\n        this._emitBinaryTokens = emitBinaryTokens;\n        this._tokenTypeOverrides = tokenTypeOverrides;\n        if (debug_1.DebugFlags.InDebugMode) {\n            this._lineText = lineText;\n        }\n        else {\n            this._lineText = null;\n        }\n        this._tokens = [];\n        this._binaryTokens = [];\n        this._lastTokenEndIndex = 0;\n    }\n    produce(stack, endIndex) {\n        this.produceFromScopes(stack.contentNameScopesList, endIndex);\n    }\n    produceFromScopes(scopesList, endIndex) {\n        if (this._lastTokenEndIndex >= endIndex) {\n            return;\n        }\n        if (this._emitBinaryTokens) {\n            let metadata = scopesList?.tokenAttributes ?? 0;\n            let containsBalancedBrackets = false;\n            if (this.balancedBracketSelectors?.matchesAlways) {\n                containsBalancedBrackets = true;\n            }\n            if (this._tokenTypeOverrides.length > 0 || (this.balancedBracketSelectors && !this.balancedBracketSelectors.matchesAlways && !this.balancedBracketSelectors.matchesNever)) {\n                // Only generate scope array when required to improve performance\n                const scopes = scopesList?.getScopeNames() ?? [];\n                for (const tokenType of this._tokenTypeOverrides) {\n                    if (tokenType.matcher(scopes)) {\n                        metadata = encodedTokenAttributes_1.EncodedTokenAttributes.set(metadata, 0, encodedTokenAttributes_1.toOptionalTokenType(tokenType.type), null, -1 /* NotSet */, 0, 0);\n                    }\n                }\n                if (this.balancedBracketSelectors) {\n                    containsBalancedBrackets = this.balancedBracketSelectors.match(scopes);\n                }\n            }\n            if (containsBalancedBrackets) {\n                metadata = encodedTokenAttributes_1.EncodedTokenAttributes.set(metadata, 0, 8 /* NotSet */, containsBalancedBrackets, -1 /* NotSet */, 0, 0);\n            }\n            if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === metadata) {\n                // no need to push a token with the same metadata\n                this._lastTokenEndIndex = endIndex;\n                return;\n            }\n            if (debug_1.DebugFlags.InDebugMode) {\n                const scopes = scopesList?.getScopeNames() ?? [];\n                console.log('  token: |' + this._lineText.substring(this._lastTokenEndIndex, endIndex).replace(/\\n$/, '\\\\n') + '|');\n                for (let k = 0; k < scopes.length; k++) {\n                    console.log('      * ' + scopes[k]);\n                }\n            }\n            this._binaryTokens.push(this._lastTokenEndIndex);\n            this._binaryTokens.push(metadata);\n            this._lastTokenEndIndex = endIndex;\n            return;\n        }\n        const scopes = scopesList?.getScopeNames() ?? [];\n        if (debug_1.DebugFlags.InDebugMode) {\n            console.log('  token: |' + this._lineText.substring(this._lastTokenEndIndex, endIndex).replace(/\\n$/, '\\\\n') + '|');\n            for (let k = 0; k < scopes.length; k++) {\n                console.log('      * ' + scopes[k]);\n            }\n        }\n        this._tokens.push({\n            startIndex: this._lastTokenEndIndex,\n            endIndex: endIndex,\n            // value: lineText.substring(lastTokenEndIndex, endIndex),\n            scopes: scopes\n        });\n        this._lastTokenEndIndex = endIndex;\n    }\n    getResult(stack, lineLength) {\n        if (this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === lineLength - 1) {\n            // pop produced token for newline\n            this._tokens.pop();\n        }\n        if (this._tokens.length === 0) {\n            this._lastTokenEndIndex = -1;\n            this.produce(stack, lineLength);\n            this._tokens[this._tokens.length - 1].startIndex = 0;\n        }\n        return this._tokens;\n    }\n    getBinaryResult(stack, lineLength) {\n        if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === lineLength - 1) {\n            // pop produced token for newline\n            this._binaryTokens.pop();\n            this._binaryTokens.pop();\n        }\n        if (this._binaryTokens.length === 0) {\n            this._lastTokenEndIndex = -1;\n            this.produce(stack, lineLength);\n            this._binaryTokens[this._binaryTokens.length - 2] = 0;\n        }\n        const result = new Uint32Array(this._binaryTokens.length);\n        for (let i = 0, len = this._binaryTokens.length; i < len; i++) {\n            result[i] = this._binaryTokens[i];\n        }\n        return result;\n    }\n}\nexports.LineTokens = LineTokens;\n//# sourceMappingURL=grammar.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseInclude = exports.TopLevelRepositoryReference = exports.TopLevelReference = exports.RelativeReference = exports.SelfReference = exports.BaseReference = exports.ScopeDependencyProcessor = exports.ExternalReferenceCollector = exports.TopLevelRepositoryRuleReference = exports.TopLevelRuleReference = void 0;\nconst utils_1 = require(\"../utils\");\n/**\n * References the top level rule of a grammar with the given scope name.\n*/\nclass TopLevelRuleReference {\n    constructor(scopeName) {\n        this.scopeName = scopeName;\n    }\n    toKey() {\n        return this.scopeName;\n    }\n}\nexports.TopLevelRuleReference = TopLevelRuleReference;\n/**\n * References a rule of a grammar in the top level repository section with the given name.\n*/\nclass TopLevelRepositoryRuleReference {\n    constructor(scopeName, ruleName) {\n        this.scopeName = scopeName;\n        this.ruleName = ruleName;\n    }\n    toKey() {\n        return `${this.scopeName}#${this.ruleName}`;\n    }\n}\nexports.TopLevelRepositoryRuleReference = TopLevelRepositoryRuleReference;\nclass ExternalReferenceCollector {\n    constructor() {\n        this._references = [];\n        this._seenReferenceKeys = new Set();\n        this.visitedRule = new Set();\n    }\n    get references() {\n        return this._references;\n    }\n    add(reference) {\n        const key = reference.toKey();\n        if (this._seenReferenceKeys.has(key)) {\n            return;\n        }\n        this._seenReferenceKeys.add(key);\n        this._references.push(reference);\n    }\n}\nexports.ExternalReferenceCollector = ExternalReferenceCollector;\nclass ScopeDependencyProcessor {\n    constructor(repo, initialScopeName) {\n        this.repo = repo;\n        this.initialScopeName = initialScopeName;\n        this.seenFullScopeRequests = new Set();\n        this.seenPartialScopeRequests = new Set();\n        this.seenFullScopeRequests.add(this.initialScopeName);\n        this.Q = [new TopLevelRuleReference(this.initialScopeName)];\n    }\n    processQueue() {\n        const q = this.Q;\n        this.Q = [];\n        const deps = new ExternalReferenceCollector();\n        for (const dep of q) {\n            collectReferencesOfReference(dep, this.initialScopeName, this.repo, deps);\n        }\n        for (const dep of deps.references) {\n            if (dep instanceof TopLevelRuleReference) {\n                if (this.seenFullScopeRequests.has(dep.scopeName)) {\n                    // already processed\n                    continue;\n                }\n                this.seenFullScopeRequests.add(dep.scopeName);\n                this.Q.push(dep);\n            }\n            else {\n                if (this.seenFullScopeRequests.has(dep.scopeName)) {\n                    // already processed in full\n                    continue;\n                }\n                if (this.seenPartialScopeRequests.has(dep.toKey())) {\n                    // already processed\n                    continue;\n                }\n                this.seenPartialScopeRequests.add(dep.toKey());\n                this.Q.push(dep);\n            }\n        }\n    }\n}\nexports.ScopeDependencyProcessor = ScopeDependencyProcessor;\nfunction collectReferencesOfReference(reference, baseGrammarScopeName, repo, result) {\n    const selfGrammar = repo.lookup(reference.scopeName);\n    if (!selfGrammar) {\n        if (reference.scopeName === baseGrammarScopeName) {\n            throw new Error(`No grammar provided for <${baseGrammarScopeName}>`);\n        }\n        return;\n    }\n    const baseGrammar = repo.lookup(baseGrammarScopeName);\n    if (reference instanceof TopLevelRuleReference) {\n        collectExternalReferencesInTopLevelRule({ baseGrammar, selfGrammar }, result);\n    }\n    else {\n        collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, { baseGrammar, selfGrammar, repository: selfGrammar.repository }, result);\n    }\n    const injections = repo.injections(reference.scopeName);\n    if (injections) {\n        for (const injection of injections) {\n            result.add(new TopLevelRuleReference(injection));\n        }\n    }\n}\nfunction collectExternalReferencesInTopLevelRepositoryRule(ruleName, context, result) {\n    if (context.repository && context.repository[ruleName]) {\n        const rule = context.repository[ruleName];\n        collectExternalReferencesInRules([rule], context, result);\n    }\n}\nfunction collectExternalReferencesInTopLevelRule(context, result) {\n    if (context.selfGrammar.patterns && Array.isArray(context.selfGrammar.patterns)) {\n        collectExternalReferencesInRules(context.selfGrammar.patterns, { ...context, repository: context.selfGrammar.repository }, result);\n    }\n    if (context.selfGrammar.injections) {\n        collectExternalReferencesInRules(Object.values(context.selfGrammar.injections), { ...context, repository: context.selfGrammar.repository }, result);\n    }\n}\nfunction collectExternalReferencesInRules(rules, context, result) {\n    for (const rule of rules) {\n        if (result.visitedRule.has(rule)) {\n            continue;\n        }\n        result.visitedRule.add(rule);\n        const patternRepository = rule.repository ? utils_1.mergeObjects({}, context.repository, rule.repository) : context.repository;\n        if (Array.isArray(rule.patterns)) {\n            collectExternalReferencesInRules(rule.patterns, { ...context, repository: patternRepository }, result);\n        }\n        const include = rule.include;\n        if (!include) {\n            continue;\n        }\n        const reference = parseInclude(include);\n        switch (reference.kind) {\n            case 0 /* Base */:\n                collectExternalReferencesInTopLevelRule({ ...context, selfGrammar: context.baseGrammar }, result);\n                break;\n            case 1 /* Self */:\n                collectExternalReferencesInTopLevelRule(context, result);\n                break;\n            case 2 /* RelativeReference */:\n                collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, { ...context, repository: patternRepository }, result);\n                break;\n            case 3 /* TopLevelReference */:\n            case 4 /* TopLevelRepositoryReference */:\n                const selfGrammar = reference.scopeName === context.selfGrammar.scopeName\n                    ? context.selfGrammar\n                    : reference.scopeName === context.baseGrammar.scopeName\n                        ? context.baseGrammar\n                        : undefined;\n                if (selfGrammar) {\n                    const newContext = { baseGrammar: context.baseGrammar, selfGrammar, repository: patternRepository };\n                    if (reference.kind === 4 /* TopLevelRepositoryReference */) {\n                        collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, newContext, result);\n                    }\n                    else {\n                        collectExternalReferencesInTopLevelRule(newContext, result);\n                    }\n                }\n                else {\n                    if (reference.kind === 4 /* TopLevelRepositoryReference */) {\n                        result.add(new TopLevelRepositoryRuleReference(reference.scopeName, reference.ruleName));\n                    }\n                    else {\n                        result.add(new TopLevelRuleReference(reference.scopeName));\n                    }\n                }\n                break;\n        }\n    }\n}\nclass BaseReference {\n    constructor() {\n        this.kind = 0 /* Base */;\n    }\n}\nexports.BaseReference = BaseReference;\nclass SelfReference {\n    constructor() {\n        this.kind = 1 /* Self */;\n    }\n}\nexports.SelfReference = SelfReference;\nclass RelativeReference {\n    constructor(ruleName) {\n        this.ruleName = ruleName;\n        this.kind = 2 /* RelativeReference */;\n    }\n}\nexports.RelativeReference = RelativeReference;\nclass TopLevelReference {\n    constructor(scopeName) {\n        this.scopeName = scopeName;\n        this.kind = 3 /* TopLevelReference */;\n    }\n}\nexports.TopLevelReference = TopLevelReference;\nclass TopLevelRepositoryReference {\n    constructor(scopeName, ruleName) {\n        this.scopeName = scopeName;\n        this.ruleName = ruleName;\n        this.kind = 4 /* TopLevelRepositoryReference */;\n    }\n}\nexports.TopLevelRepositoryReference = TopLevelRepositoryReference;\nfunction parseInclude(include) {\n    if (include === '$base') {\n        return new BaseReference();\n    }\n    else if (include === '$self') {\n        return new SelfReference();\n    }\n    const indexOfSharp = include.indexOf(\"#\");\n    if (indexOfSharp === -1) {\n        return new TopLevelReference(include);\n    }\n    else if (indexOfSharp === 0) {\n        return new RelativeReference(include.substring(1));\n    }\n    else {\n        const scopeName = include.substring(0, indexOfSharp);\n        const ruleName = include.substring(indexOfSharp + 1);\n        return new TopLevelRepositoryReference(scopeName, ruleName);\n    }\n}\nexports.parseInclude = parseInclude;\n//# sourceMappingURL=grammarDependencies.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./grammar\"), exports);\n//# sourceMappingURL=index.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LocalStackElement = exports._tokenizeString = void 0;\nconst debug_1 = require(\"../debug\");\nconst onigLib_1 = require(\"../onigLib\");\nconst rule_1 = require(\"../rule\");\nconst utils_1 = require(\"../utils\");\nclass TokenizeStringResult {\n    constructor(stack, stoppedEarly) {\n        this.stack = stack;\n        this.stoppedEarly = stoppedEarly;\n    }\n}\n/**\n * Tokenize a string\n * @param grammar\n * @param lineText\n * @param isFirstLine\n * @param linePos\n * @param stack\n * @param lineTokens\n * @param checkWhileConditions\n * @param timeLimit Use `0` to indicate no time limit\n * @returns the StackElement or StackElement.TIME_LIMIT_REACHED if the time limit has been reached\n */\nfunction _tokenizeString(grammar, lineText, isFirstLine, linePos, stack, lineTokens, checkWhileConditions, timeLimit) {\n    const lineLength = lineText.content.length;\n    let STOP = false;\n    let anchorPosition = -1;\n    if (checkWhileConditions) {\n        const whileCheckResult = _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens);\n        stack = whileCheckResult.stack;\n        linePos = whileCheckResult.linePos;\n        isFirstLine = whileCheckResult.isFirstLine;\n        anchorPosition = whileCheckResult.anchorPosition;\n    }\n    const startTime = Date.now();\n    while (!STOP) {\n        if (timeLimit !== 0) {\n            const elapsedTime = Date.now() - startTime;\n            if (elapsedTime > timeLimit) {\n                return new TokenizeStringResult(stack, true);\n            }\n        }\n        scanNext(); // potentially modifies linePos && anchorPosition\n    }\n    return new TokenizeStringResult(stack, false);\n    function scanNext() {\n        if (debug_1.DebugFlags.InDebugMode) {\n            console.log(\"\");\n            console.log(`@@scanNext ${linePos}: |${lineText.content\n                .substr(linePos)\n                .replace(/\\n$/, \"\\\\n\")}|`);\n        }\n        const r = matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n        if (!r) {\n            if (debug_1.DebugFlags.InDebugMode) {\n                console.log(\"  no more matches.\");\n            }\n            // No match\n            lineTokens.produce(stack, lineLength);\n            STOP = true;\n            return;\n        }\n        const captureIndices = r.captureIndices;\n        const matchedRuleId = r.matchedRuleId;\n        const hasAdvanced = captureIndices && captureIndices.length > 0\n            ? captureIndices[0].end > linePos\n            : false;\n        if (matchedRuleId === rule_1.endRuleId) {\n            // We matched the `end` for this rule => pop it\n            const poppedRule = stack.getRule(grammar);\n            if (debug_1.DebugFlags.InDebugMode) {\n                console.log(\"  popping \" +\n                    poppedRule.debugName +\n                    \" - \" +\n                    poppedRule.debugEndRegExp);\n            }\n            lineTokens.produce(stack, captureIndices[0].start);\n            stack = stack.withContentNameScopesList(stack.nameScopesList);\n            handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, poppedRule.endCaptures, captureIndices);\n            lineTokens.produce(stack, captureIndices[0].end);\n            // pop\n            const popped = stack;\n            stack = stack.parent;\n            anchorPosition = popped.getAnchorPos();\n            if (!hasAdvanced && popped.getEnterPos() === linePos) {\n                // Grammar pushed & popped a rule without advancing\n                if (debug_1.DebugFlags.InDebugMode) {\n                    console.error(\"[1] - Grammar is in an endless loop - Grammar pushed & popped a rule without advancing\");\n                }\n                // See https://github.com/Microsoft/vscode-textmate/issues/12\n                // Let's assume this was a mistake by the grammar author and the intent was to continue in this state\n                stack = popped;\n                lineTokens.produce(stack, lineLength);\n                STOP = true;\n                return;\n            }\n        }\n        else {\n            // We matched a rule!\n            const _rule = grammar.getRule(matchedRuleId);\n            lineTokens.produce(stack, captureIndices[0].start);\n            const beforePush = stack;\n            // push it on the stack rule\n            const scopeName = _rule.getName(lineText.content, captureIndices);\n            const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);\n            stack = stack.push(matchedRuleId, linePos, anchorPosition, captureIndices[0].end === lineLength, null, nameScopesList, nameScopesList);\n            if (_rule instanceof rule_1.BeginEndRule) {\n                const pushedRule = _rule;\n                if (debug_1.DebugFlags.InDebugMode) {\n                    console.log(\"  pushing \" +\n                        pushedRule.debugName +\n                        \" - \" +\n                        pushedRule.debugBeginRegExp);\n                }\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                anchorPosition = captureIndices[0].end;\n                const contentName = pushedRule.getContentName(lineText.content, captureIndices);\n                const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n                stack = stack.withContentNameScopesList(contentNameScopesList);\n                if (pushedRule.endHasBackReferences) {\n                    stack = stack.withEndRule(pushedRule.getEndWithResolvedBackReferences(lineText.content, captureIndices));\n                }\n                if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n                    // Grammar pushed the same rule without advancing\n                    if (debug_1.DebugFlags.InDebugMode) {\n                        console.error(\"[2] - Grammar is in an endless loop - Grammar pushed the same rule without advancing\");\n                    }\n                    stack = stack.pop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n            else if (_rule instanceof rule_1.BeginWhileRule) {\n                const pushedRule = _rule;\n                if (debug_1.DebugFlags.InDebugMode) {\n                    console.log(\"  pushing \" + pushedRule.debugName);\n                }\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                anchorPosition = captureIndices[0].end;\n                const contentName = pushedRule.getContentName(lineText.content, captureIndices);\n                const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n                stack = stack.withContentNameScopesList(contentNameScopesList);\n                if (pushedRule.whileHasBackReferences) {\n                    stack = stack.withEndRule(pushedRule.getWhileWithResolvedBackReferences(lineText.content, captureIndices));\n                }\n                if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n                    // Grammar pushed the same rule without advancing\n                    if (debug_1.DebugFlags.InDebugMode) {\n                        console.error(\"[3] - Grammar is in an endless loop - Grammar pushed the same rule without advancing\");\n                    }\n                    stack = stack.pop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n            else {\n                const matchingRule = _rule;\n                if (debug_1.DebugFlags.InDebugMode) {\n                    console.log(\"  matched \" +\n                        matchingRule.debugName +\n                        \" - \" +\n                        matchingRule.debugMatchRegExp);\n                }\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, matchingRule.captures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                // pop rule immediately since it is a MatchRule\n                stack = stack.pop();\n                if (!hasAdvanced) {\n                    // Grammar is not advancing, nor is it pushing/popping\n                    if (debug_1.DebugFlags.InDebugMode) {\n                        console.error(\"[4] - Grammar is in an endless loop - Grammar is not advancing, nor is it pushing/popping\");\n                    }\n                    stack = stack.safePop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n        }\n        if (captureIndices[0].end > linePos) {\n            // Advance stream\n            linePos = captureIndices[0].end;\n            isFirstLine = false;\n        }\n    }\n}\nexports._tokenizeString = _tokenizeString;\n/**\n * Walk the stack from bottom to top, and check each while condition in this order.\n * If any fails, cut off the entire stack above the failed while condition. While conditions\n * may also advance the linePosition.\n */\nfunction _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens) {\n    let anchorPosition = (stack.beginRuleCapturedEOL ? 0 : -1);\n    const whileRules = [];\n    for (let node = stack; node; node = node.pop()) {\n        const nodeRule = node.getRule(grammar);\n        if (nodeRule instanceof rule_1.BeginWhileRule) {\n            whileRules.push({\n                rule: nodeRule,\n                stack: node\n            });\n        }\n    }\n    for (let whileRule = whileRules.pop(); whileRule; whileRule = whileRules.pop()) {\n        const { ruleScanner, findOptions } = prepareRuleWhileSearch(whileRule.rule, grammar, whileRule.stack.endRule, isFirstLine, linePos === anchorPosition);\n        const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n        if (debug_1.DebugFlags.InDebugMode) {\n            console.log('  scanning for while rule');\n            console.log(ruleScanner.toString());\n        }\n        if (r) {\n            const matchedRuleId = r.ruleId;\n            if (matchedRuleId !== rule_1.whileRuleId) {\n                // we shouldn't end up here\n                stack = whileRule.stack.pop();\n                break;\n            }\n            if (r.captureIndices && r.captureIndices.length) {\n                lineTokens.produce(whileRule.stack, r.captureIndices[0].start);\n                handleCaptures(grammar, lineText, isFirstLine, whileRule.stack, lineTokens, whileRule.rule.whileCaptures, r.captureIndices);\n                lineTokens.produce(whileRule.stack, r.captureIndices[0].end);\n                anchorPosition = r.captureIndices[0].end;\n                if (r.captureIndices[0].end > linePos) {\n                    linePos = r.captureIndices[0].end;\n                    isFirstLine = false;\n                }\n            }\n        }\n        else {\n            if (debug_1.DebugFlags.InDebugMode) {\n                console.log('  popping ' + whileRule.rule.debugName + ' - ' + whileRule.rule.debugWhileRegExp);\n            }\n            stack = whileRule.stack.pop();\n            break;\n        }\n    }\n    return { stack: stack, linePos: linePos, anchorPosition: anchorPosition, isFirstLine: isFirstLine };\n}\nfunction matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    // Look for normal grammar rule\n    const matchResult = matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n    // Look for injected rules\n    const injections = grammar.getInjections();\n    if (injections.length === 0) {\n        // No injections whatsoever => early return\n        return matchResult;\n    }\n    const injectionResult = matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n    if (!injectionResult) {\n        // No injections matched => early return\n        return matchResult;\n    }\n    if (!matchResult) {\n        // Only injections matched => early return\n        return injectionResult;\n    }\n    // Decide if `matchResult` or `injectionResult` should win\n    const matchResultScore = matchResult.captureIndices[0].start;\n    const injectionResultScore = injectionResult.captureIndices[0].start;\n    if (injectionResultScore < matchResultScore || (injectionResult.priorityMatch && injectionResultScore === matchResultScore)) {\n        // injection won!\n        return injectionResult;\n    }\n    return matchResult;\n}\nfunction matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    const rule = stack.getRule(grammar);\n    const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, stack.endRule, isFirstLine, linePos === anchorPosition);\n    let perfStart = 0;\n    if (debug_1.DebugFlags.InDebugMode) {\n        perfStart = utils_1.performanceNow();\n    }\n    const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n    if (debug_1.DebugFlags.InDebugMode) {\n        const elapsedMillis = utils_1.performanceNow() - perfStart;\n        if (elapsedMillis > 5) {\n            console.warn(`Rule ${rule.debugName} (${rule.id}) matching took ${elapsedMillis} against '${lineText}'`);\n        }\n        console.log(`  scanning for (linePos: ${linePos}, anchorPosition: ${anchorPosition})`);\n        console.log(ruleScanner.toString());\n        if (r) {\n            console.log(`matched rule id: ${r.ruleId} from ${r.captureIndices[0].start} to ${r.captureIndices[0].end}`);\n        }\n    }\n    if (r) {\n        return {\n            captureIndices: r.captureIndices,\n            matchedRuleId: r.ruleId\n        };\n    }\n    return null;\n}\nfunction matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    // The lower the better\n    let bestMatchRating = Number.MAX_VALUE;\n    let bestMatchCaptureIndices = null;\n    let bestMatchRuleId;\n    let bestMatchResultPriority = 0;\n    const scopes = stack.contentNameScopesList.getScopeNames();\n    for (let i = 0, len = injections.length; i < len; i++) {\n        const injection = injections[i];\n        if (!injection.matcher(scopes)) {\n            // injection selector doesn't match stack\n            continue;\n        }\n        const rule = grammar.getRule(injection.ruleId);\n        const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, null, isFirstLine, linePos === anchorPosition);\n        const matchResult = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n        if (!matchResult) {\n            continue;\n        }\n        if (debug_1.DebugFlags.InDebugMode) {\n            console.log(`  matched injection: ${injection.debugSelector}`);\n            console.log(ruleScanner.toString());\n        }\n        const matchRating = matchResult.captureIndices[0].start;\n        if (matchRating >= bestMatchRating) {\n            // Injections are sorted by priority, so the previous injection had a better or equal priority\n            continue;\n        }\n        bestMatchRating = matchRating;\n        bestMatchCaptureIndices = matchResult.captureIndices;\n        bestMatchRuleId = matchResult.ruleId;\n        bestMatchResultPriority = injection.priority;\n        if (bestMatchRating === linePos) {\n            // No more need to look at the rest of the injections.\n            break;\n        }\n    }\n    if (bestMatchCaptureIndices) {\n        return {\n            priorityMatch: bestMatchResultPriority === -1,\n            captureIndices: bestMatchCaptureIndices,\n            matchedRuleId: bestMatchRuleId\n        };\n    }\n    return null;\n}\nfunction prepareRuleSearch(rule, grammar, endRegexSource, allowA, allowG) {\n    if (debug_1.UseOnigurumaFindOptions) {\n        const ruleScanner = rule.compile(grammar, endRegexSource);\n        const findOptions = getFindOptions(allowA, allowG);\n        return { ruleScanner, findOptions };\n    }\n    const ruleScanner = rule.compileAG(grammar, endRegexSource, allowA, allowG);\n    return { ruleScanner, findOptions: 0 /* None */ };\n}\nfunction prepareRuleWhileSearch(rule, grammar, endRegexSource, allowA, allowG) {\n    if (debug_1.UseOnigurumaFindOptions) {\n        const ruleScanner = rule.compileWhile(grammar, endRegexSource);\n        const findOptions = getFindOptions(allowA, allowG);\n        return { ruleScanner, findOptions };\n    }\n    const ruleScanner = rule.compileWhileAG(grammar, endRegexSource, allowA, allowG);\n    return { ruleScanner, findOptions: 0 /* None */ };\n}\nfunction getFindOptions(allowA, allowG) {\n    let options = 0 /* None */;\n    if (!allowA) {\n        options |= 1 /* NotBeginString */;\n    }\n    if (!allowG) {\n        options |= 4 /* NotBeginPosition */;\n    }\n    return options;\n}\nfunction handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, captures, captureIndices) {\n    if (captures.length === 0) {\n        return;\n    }\n    const lineTextContent = lineText.content;\n    const len = Math.min(captures.length, captureIndices.length);\n    const localStack = [];\n    const maxEnd = captureIndices[0].end;\n    for (let i = 0; i < len; i++) {\n        const captureRule = captures[i];\n        if (captureRule === null) {\n            // Not interested\n            continue;\n        }\n        const captureIndex = captureIndices[i];\n        if (captureIndex.length === 0) {\n            // Nothing really captured\n            continue;\n        }\n        if (captureIndex.start > maxEnd) {\n            // Capture going beyond consumed string\n            break;\n        }\n        // pop captures while needed\n        while (localStack.length > 0 && localStack[localStack.length - 1].endPos <= captureIndex.start) {\n            // pop!\n            lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n            localStack.pop();\n        }\n        if (localStack.length > 0) {\n            lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, captureIndex.start);\n        }\n        else {\n            lineTokens.produce(stack, captureIndex.start);\n        }\n        if (captureRule.retokenizeCapturedWithRuleId) {\n            // the capture requires additional matching\n            const scopeName = captureRule.getName(lineTextContent, captureIndices);\n            const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);\n            const contentName = captureRule.getContentName(lineTextContent, captureIndices);\n            const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n            const stackClone = stack.push(captureRule.retokenizeCapturedWithRuleId, captureIndex.start, -1, false, null, nameScopesList, contentNameScopesList);\n            const onigSubStr = grammar.createOnigString(lineTextContent.substring(0, captureIndex.end));\n            _tokenizeString(grammar, onigSubStr, (isFirstLine && captureIndex.start === 0), captureIndex.start, stackClone, lineTokens, false, /* no time limit */ 0);\n            onigLib_1.disposeOnigString(onigSubStr);\n            continue;\n        }\n        const captureRuleScopeName = captureRule.getName(lineTextContent, captureIndices);\n        if (captureRuleScopeName !== null) {\n            // push\n            const base = localStack.length > 0 ? localStack[localStack.length - 1].scopes : stack.contentNameScopesList;\n            const captureRuleScopesList = base.pushAttributed(captureRuleScopeName, grammar);\n            localStack.push(new LocalStackElement(captureRuleScopesList, captureIndex.end));\n        }\n    }\n    while (localStack.length > 0) {\n        // pop!\n        lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n        localStack.pop();\n    }\n}\nclass LocalStackElement {\n    constructor(scopes, endPos) {\n        this.scopes = scopes;\n        this.endPos = endPos;\n    }\n}\nexports.LocalStackElement = LocalStackElement;\n//# sourceMappingURL=tokenizeString.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseJSON = void 0;\nfunction doFail(streamState, msg) {\n    // console.log('Near offset ' + streamState.pos + ': ' + msg + ' ~~~' + streamState.source.substr(streamState.pos, 50) + '~~~');\n    throw new Error('Near offset ' + streamState.pos + ': ' + msg + ' ~~~' + streamState.source.substr(streamState.pos, 50) + '~~~');\n}\nfunction parseJSON(source, filename, withMetadata) {\n    let streamState = new JSONStreamState(source);\n    let token = new JSONToken();\n    let state = 0 /* ROOT_STATE */;\n    let cur = null;\n    let stateStack = [];\n    let objStack = [];\n    function pushState() {\n        stateStack.push(state);\n        objStack.push(cur);\n    }\n    function popState() {\n        state = stateStack.pop();\n        cur = objStack.pop();\n    }\n    function fail(msg) {\n        doFail(streamState, msg);\n    }\n    while (nextJSONToken(streamState, token)) {\n        if (state === 0 /* ROOT_STATE */) {\n            if (cur !== null) {\n                fail('too many constructs in root');\n            }\n            if (token.type === 3 /* LEFT_CURLY_BRACKET */) {\n                cur = {};\n                if (withMetadata) {\n                    cur.$vscodeTextmateLocation = token.toLocation(filename);\n                }\n                pushState();\n                state = 1 /* DICT_STATE */;\n                continue;\n            }\n            if (token.type === 2 /* LEFT_SQUARE_BRACKET */) {\n                cur = [];\n                pushState();\n                state = 4 /* ARR_STATE */;\n                continue;\n            }\n            fail('unexpected token in root');\n        }\n        if (state === 2 /* DICT_STATE_COMMA */) {\n            if (token.type === 5 /* RIGHT_CURLY_BRACKET */) {\n                popState();\n                continue;\n            }\n            if (token.type === 7 /* COMMA */) {\n                state = 3 /* DICT_STATE_NO_CLOSE */;\n                continue;\n            }\n            fail('expected , or }');\n        }\n        if (state === 1 /* DICT_STATE */ || state === 3 /* DICT_STATE_NO_CLOSE */) {\n            if (state === 1 /* DICT_STATE */ && token.type === 5 /* RIGHT_CURLY_BRACKET */) {\n                popState();\n                continue;\n            }\n            if (token.type === 1 /* STRING */) {\n                let keyValue = token.value;\n                if (!nextJSONToken(streamState, token) || token.type !== 6 /* COLON */) {\n                    fail('expected colon');\n                }\n                if (!nextJSONToken(streamState, token)) {\n                    fail('expected value');\n                }\n                state = 2 /* DICT_STATE_COMMA */;\n                if (token.type === 1 /* STRING */) {\n                    cur[keyValue] = token.value;\n                    continue;\n                }\n                if (token.type === 8 /* NULL */) {\n                    cur[keyValue] = null;\n                    continue;\n                }\n                if (token.type === 9 /* TRUE */) {\n                    cur[keyValue] = true;\n                    continue;\n                }\n                if (token.type === 10 /* FALSE */) {\n                    cur[keyValue] = false;\n                    continue;\n                }\n                if (token.type === 11 /* NUMBER */) {\n                    cur[keyValue] = parseFloat(token.value);\n                    continue;\n                }\n                if (token.type === 2 /* LEFT_SQUARE_BRACKET */) {\n                    let newArr = [];\n                    cur[keyValue] = newArr;\n                    pushState();\n                    state = 4 /* ARR_STATE */;\n                    cur = newArr;\n                    continue;\n                }\n                if (token.type === 3 /* LEFT_CURLY_BRACKET */) {\n                    let newDict = {};\n                    if (withMetadata) {\n                        newDict.$vscodeTextmateLocation = token.toLocation(filename);\n                    }\n                    cur[keyValue] = newDict;\n                    pushState();\n                    state = 1 /* DICT_STATE */;\n                    cur = newDict;\n                    continue;\n                }\n            }\n            fail('unexpected token in dict');\n        }\n        if (state === 5 /* ARR_STATE_COMMA */) {\n            if (token.type === 4 /* RIGHT_SQUARE_BRACKET */) {\n                popState();\n                continue;\n            }\n            if (token.type === 7 /* COMMA */) {\n                state = 6 /* ARR_STATE_NO_CLOSE */;\n                continue;\n            }\n            fail('expected , or ]');\n        }\n        if (state === 4 /* ARR_STATE */ || state === 6 /* ARR_STATE_NO_CLOSE */) {\n            if (state === 4 /* ARR_STATE */ && token.type === 4 /* RIGHT_SQUARE_BRACKET */) {\n                popState();\n                continue;\n            }\n            state = 5 /* ARR_STATE_COMMA */;\n            if (token.type === 1 /* STRING */) {\n                cur.push(token.value);\n                continue;\n            }\n            if (token.type === 8 /* NULL */) {\n                cur.push(null);\n                continue;\n            }\n            if (token.type === 9 /* TRUE */) {\n                cur.push(true);\n                continue;\n            }\n            if (token.type === 10 /* FALSE */) {\n                cur.push(false);\n                continue;\n            }\n            if (token.type === 11 /* NUMBER */) {\n                cur.push(parseFloat(token.value));\n                continue;\n            }\n            if (token.type === 2 /* LEFT_SQUARE_BRACKET */) {\n                let newArr = [];\n                cur.push(newArr);\n                pushState();\n                state = 4 /* ARR_STATE */;\n                cur = newArr;\n                continue;\n            }\n            if (token.type === 3 /* LEFT_CURLY_BRACKET */) {\n                let newDict = {};\n                if (withMetadata) {\n                    newDict.$vscodeTextmateLocation = token.toLocation(filename);\n                }\n                cur.push(newDict);\n                pushState();\n                state = 1 /* DICT_STATE */;\n                cur = newDict;\n                continue;\n            }\n            fail('unexpected token in array');\n        }\n        fail('unknown state');\n    }\n    if (objStack.length !== 0) {\n        fail('unclosed constructs');\n    }\n    return cur;\n}\nexports.parseJSON = parseJSON;\nclass JSONStreamState {\n    constructor(source) {\n        this.source = source;\n        this.pos = 0;\n        this.len = source.length;\n        this.line = 1;\n        this.char = 0;\n    }\n}\nclass JSONToken {\n    constructor() {\n        this.value = null;\n        this.type = 0 /* UNKNOWN */;\n        this.offset = -1;\n        this.len = -1;\n        this.line = -1;\n        this.char = -1;\n    }\n    toLocation(filename) {\n        return {\n            filename: filename,\n            line: this.line,\n            char: this.char\n        };\n    }\n}\n/**\n * precondition: the string is known to be valid JSON (https://www.ietf.org/rfc/rfc4627.txt)\n */\nfunction nextJSONToken(_state, _out) {\n    _out.value = null;\n    _out.type = 0 /* UNKNOWN */;\n    _out.offset = -1;\n    _out.len = -1;\n    _out.line = -1;\n    _out.char = -1;\n    let source = _state.source;\n    let pos = _state.pos;\n    let len = _state.len;\n    let line = _state.line;\n    let char = _state.char;\n    //------------------------ skip whitespace\n    let chCode;\n    do {\n        if (pos >= len) {\n            return false; /*EOS*/\n        }\n        chCode = source.charCodeAt(pos);\n        if (chCode === 32 /* SPACE */ || chCode === 9 /* HORIZONTAL_TAB */ || chCode === 13 /* CARRIAGE_RETURN */) {\n            // regular whitespace\n            pos++;\n            char++;\n            continue;\n        }\n        if (chCode === 10 /* LINE_FEED */) {\n            // newline\n            pos++;\n            line++;\n            char = 0;\n            continue;\n        }\n        // not whitespace\n        break;\n    } while (true);\n    _out.offset = pos;\n    _out.line = line;\n    _out.char = char;\n    if (chCode === 34 /* QUOTATION_MARK */) {\n        //------------------------ strings\n        _out.type = 1 /* STRING */;\n        pos++;\n        char++;\n        do {\n            if (pos >= len) {\n                return false; /*EOS*/\n            }\n            chCode = source.charCodeAt(pos);\n            pos++;\n            char++;\n            if (chCode === 92 /* BACKSLASH */) {\n                // skip next char\n                pos++;\n                char++;\n                continue;\n            }\n            if (chCode === 34 /* QUOTATION_MARK */) {\n                // end of the string\n                break;\n            }\n        } while (true);\n        _out.value = source.substring(_out.offset + 1, pos - 1).replace(/\\\\u([0-9A-Fa-f]{4})/g, (_, m0) => {\n            return String.fromCodePoint(parseInt(m0, 16));\n        }).replace(/\\\\(.)/g, (_, m0) => {\n            switch (m0) {\n                case '\"': return '\"';\n                case '\\\\': return '\\\\';\n                case '/': return '/';\n                case 'b': return '\\b';\n                case 'f': return '\\f';\n                case 'n': return '\\n';\n                case 'r': return '\\r';\n                case 't': return '\\t';\n                default: doFail(_state, 'invalid escape sequence');\n            }\n            throw new Error('unreachable');\n        });\n    }\n    else if (chCode === 91 /* LEFT_SQUARE_BRACKET */) {\n        _out.type = 2 /* LEFT_SQUARE_BRACKET */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 123 /* LEFT_CURLY_BRACKET */) {\n        _out.type = 3 /* LEFT_CURLY_BRACKET */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 93 /* RIGHT_SQUARE_BRACKET */) {\n        _out.type = 4 /* RIGHT_SQUARE_BRACKET */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 125 /* RIGHT_CURLY_BRACKET */) {\n        _out.type = 5 /* RIGHT_CURLY_BRACKET */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 58 /* COLON */) {\n        _out.type = 6 /* COLON */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 44 /* COMMA */) {\n        _out.type = 7 /* COMMA */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 110 /* n */) {\n        //------------------------ null\n        _out.type = 8 /* NULL */;\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 117 /* u */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 108 /* l */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 108 /* l */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n    }\n    else if (chCode === 116 /* t */) {\n        //------------------------ true\n        _out.type = 9 /* TRUE */;\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 114 /* r */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 117 /* u */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 101 /* e */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n    }\n    else if (chCode === 102 /* f */) {\n        //------------------------ false\n        _out.type = 10 /* FALSE */;\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 97 /* a */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 108 /* l */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 115 /* s */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 101 /* e */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n    }\n    else {\n        //------------------------ numbers\n        _out.type = 11 /* NUMBER */;\n        do {\n            if (pos >= len) {\n                return false; /*EOS*/\n            }\n            chCode = source.charCodeAt(pos);\n            if (chCode === 46 /* DOT */\n                || (chCode >= 48 /* D0 */ && chCode <= 57 /* D9 */)\n                || (chCode === 101 /* e */ || chCode === 69 /* E */)\n                || (chCode === 45 /* MINUS */ || chCode === 43 /* PLUS */)) {\n                // looks like a piece of a number\n                pos++;\n                char++;\n                continue;\n            }\n            // pos--; char--;\n            break;\n        } while (true);\n    }\n    _out.len = pos - _out.offset;\n    if (_out.value === null) {\n        _out.value = source.substr(_out.offset, _out.len);\n    }\n    _state.pos = pos;\n    _state.line = line;\n    _state.char = char;\n    // console.log('PRODUCING TOKEN: ', _out.value, JSONTokenType[_out.type]);\n    return true;\n}\n//# sourceMappingURL=json.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyStateStackDiff = exports.diffStateStacksRefEq = exports.parseRawGrammar = exports.INITIAL = exports.Registry = void 0;\nconst grammar_1 = require(\"./grammar\");\nconst grammarReader = require(\"./parseRawGrammar\");\nconst registry_1 = require(\"./registry\");\nconst theme_1 = require(\"./theme\");\nconst grammarDependencies_1 = require(\"./grammar/grammarDependencies\");\nconst diffStateStacks_1 = require(\"./diffStateStacks\");\nObject.defineProperty(exports, \"applyStateStackDiff\", { enumerable: true, get: function () { return diffStateStacks_1.applyStateStackDiff; } });\nObject.defineProperty(exports, \"diffStateStacksRefEq\", { enumerable: true, get: function () { return diffStateStacks_1.diffStateStacksRefEq; } });\n__exportStar(require(\"./onigLib\"), exports);\n/**\n * The registry that will hold all grammars.\n */\nclass Registry {\n    constructor(options) {\n        this._options = options;\n        this._syncRegistry = new registry_1.SyncRegistry(theme_1.Theme.createFromRawTheme(options.theme, options.colorMap), options.onigLib);\n        this._ensureGrammarCache = new Map();\n    }\n    dispose() {\n        this._syncRegistry.dispose();\n    }\n    /**\n     * Change the theme. Once called, no previous `ruleStack` should be used anymore.\n     */\n    setTheme(theme, colorMap) {\n        this._syncRegistry.setTheme(theme_1.Theme.createFromRawTheme(theme, colorMap));\n    }\n    /**\n     * Returns a lookup array for color ids.\n     */\n    getColorMap() {\n        return this._syncRegistry.getColorMap();\n    }\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     * Please do not use language id 0.\n     */\n    loadGrammarWithEmbeddedLanguages(initialScopeName, initialLanguage, embeddedLanguages) {\n        return this.loadGrammarWithConfiguration(initialScopeName, initialLanguage, { embeddedLanguages });\n    }\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     * Please do not use language id 0.\n     */\n    loadGrammarWithConfiguration(initialScopeName, initialLanguage, configuration) {\n        return this._loadGrammar(initialScopeName, initialLanguage, configuration.embeddedLanguages, configuration.tokenTypes, new grammar_1.BalancedBracketSelectors(configuration.balancedBracketSelectors || [], configuration.unbalancedBracketSelectors || []));\n    }\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     */\n    loadGrammar(initialScopeName) {\n        return this._loadGrammar(initialScopeName, 0, null, null, null);\n    }\n    async _loadGrammar(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n        const dependencyProcessor = new grammarDependencies_1.ScopeDependencyProcessor(this._syncRegistry, initialScopeName);\n        while (dependencyProcessor.Q.length > 0) {\n            await Promise.all(dependencyProcessor.Q.map((request) => this._loadSingleGrammar(request.scopeName)));\n            dependencyProcessor.processQueue();\n        }\n        return this._grammarForScopeName(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors);\n    }\n    async _loadSingleGrammar(scopeName) {\n        if (!this._ensureGrammarCache.has(scopeName)) {\n            this._ensureGrammarCache.set(scopeName, this._doLoadSingleGrammar(scopeName));\n        }\n        return this._ensureGrammarCache.get(scopeName);\n    }\n    async _doLoadSingleGrammar(scopeName) {\n        const grammar = await this._options.loadGrammar(scopeName);\n        if (grammar) {\n            const injections = typeof this._options.getInjections === \"function\" ? this._options.getInjections(scopeName) : undefined;\n            this._syncRegistry.addGrammar(grammar, injections);\n        }\n    }\n    /**\n     * Adds a rawGrammar.\n     */\n    async addGrammar(rawGrammar, injections = [], initialLanguage = 0, embeddedLanguages = null) {\n        this._syncRegistry.addGrammar(rawGrammar, injections);\n        return (await this._grammarForScopeName(rawGrammar.scopeName, initialLanguage, embeddedLanguages));\n    }\n    /**\n     * Get the grammar for `scopeName`. The grammar must first be created via `loadGrammar` or `addGrammar`.\n     */\n    _grammarForScopeName(scopeName, initialLanguage = 0, embeddedLanguages = null, tokenTypes = null, balancedBracketSelectors = null) {\n        return this._syncRegistry.grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors);\n    }\n}\nexports.Registry = Registry;\nexports.INITIAL = grammar_1.StateStackImpl.NULL;\nexports.parseRawGrammar = grammarReader.parseRawGrammar;\n//# sourceMappingURL=main.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMatchers = void 0;\nfunction createMatchers(selector, matchesName) {\n    const results = [];\n    const tokenizer = newTokenizer(selector);\n    let token = tokenizer.next();\n    while (token !== null) {\n        let priority = 0;\n        if (token.length === 2 && token.charAt(1) === ':') {\n            switch (token.charAt(0)) {\n                case 'R':\n                    priority = 1;\n                    break;\n                case 'L':\n                    priority = -1;\n                    break;\n                default:\n                    console.log(`Unknown priority ${token} in scope selector`);\n            }\n            token = tokenizer.next();\n        }\n        let matcher = parseConjunction();\n        results.push({ matcher, priority });\n        if (token !== ',') {\n            break;\n        }\n        token = tokenizer.next();\n    }\n    return results;\n    function parseOperand() {\n        if (token === '-') {\n            token = tokenizer.next();\n            const expressionToNegate = parseOperand();\n            return matcherInput => !!expressionToNegate && !expressionToNegate(matcherInput);\n        }\n        if (token === '(') {\n            token = tokenizer.next();\n            const expressionInParents = parseInnerExpression();\n            if (token === ')') {\n                token = tokenizer.next();\n            }\n            return expressionInParents;\n        }\n        if (isIdentifier(token)) {\n            const identifiers = [];\n            do {\n                identifiers.push(token);\n                token = tokenizer.next();\n            } while (isIdentifier(token));\n            return matcherInput => matchesName(identifiers, matcherInput);\n        }\n        return null;\n    }\n    function parseConjunction() {\n        const matchers = [];\n        let matcher = parseOperand();\n        while (matcher) {\n            matchers.push(matcher);\n            matcher = parseOperand();\n        }\n        return matcherInput => matchers.every(matcher => matcher(matcherInput)); // and\n    }\n    function parseInnerExpression() {\n        const matchers = [];\n        let matcher = parseConjunction();\n        while (matcher) {\n            matchers.push(matcher);\n            if (token === '|' || token === ',') {\n                do {\n                    token = tokenizer.next();\n                } while (token === '|' || token === ','); // ignore subsequent commas\n            }\n            else {\n                break;\n            }\n            matcher = parseConjunction();\n        }\n        return matcherInput => matchers.some(matcher => matcher(matcherInput)); // or\n    }\n}\nexports.createMatchers = createMatchers;\nfunction isIdentifier(token) {\n    return !!token && !!token.match(/[\\w\\.:]+/);\n}\nfunction newTokenizer(input) {\n    let regex = /([LR]:|[\\w\\.:][\\w\\.:\\-]*|[\\,\\|\\-\\(\\)])/g;\n    let match = regex.exec(input);\n    return {\n        next: () => {\n            if (!match) {\n                return null;\n            }\n            const res = match[0];\n            match = regex.exec(input);\n            return res;\n        }\n    };\n}\n//# sourceMappingURL=matcher.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.disposeOnigString = void 0;\nfunction disposeOnigString(str) {\n    if (typeof str.dispose === 'function') {\n        str.dispose();\n    }\n}\nexports.disposeOnigString = disposeOnigString;\n//# sourceMappingURL=onigLib.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseRawGrammar = void 0;\nconst plist = require(\"./plist\");\nconst debug_1 = require(\"./debug\");\nconst json_1 = require(\"./json\");\nfunction parseRawGrammar(content, filePath = null) {\n    if (filePath !== null && /\\.json$/.test(filePath)) {\n        return parseJSONGrammar(content, filePath);\n    }\n    return parsePLISTGrammar(content, filePath);\n}\nexports.parseRawGrammar = parseRawGrammar;\nfunction parseJSONGrammar(contents, filename) {\n    if (debug_1.DebugFlags.InDebugMode) {\n        return json_1.parseJSON(contents, filename, true);\n    }\n    return JSON.parse(contents);\n}\nfunction parsePLISTGrammar(contents, filename) {\n    if (debug_1.DebugFlags.InDebugMode) {\n        return plist.parseWithLocation(contents, filename, '$vscodeTextmateLocation');\n    }\n    return plist.parsePLIST(contents);\n}\n//# sourceMappingURL=parseRawGrammar.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parsePLIST = exports.parseWithLocation = void 0;\nfunction parseWithLocation(content, filename, locationKeyName) {\n    return _parse(content, filename, locationKeyName);\n}\nexports.parseWithLocation = parseWithLocation;\n/**\n * A very fast plist parser\n */\nfunction parsePLIST(content) {\n    return _parse(content, null, null);\n}\nexports.parsePLIST = parsePLIST;\nfunction _parse(content, filename, locationKeyName) {\n    const len = content.length;\n    let pos = 0;\n    let line = 1;\n    let char = 0;\n    // Skip UTF8 BOM\n    if (len > 0 && content.charCodeAt(0) === 65279 /* BOM */) {\n        pos = 1;\n    }\n    function advancePosBy(by) {\n        if (locationKeyName === null) {\n            pos = pos + by;\n        }\n        else {\n            while (by > 0) {\n                let chCode = content.charCodeAt(pos);\n                if (chCode === 10 /* LINE_FEED */) {\n                    pos++;\n                    line++;\n                    char = 0;\n                }\n                else {\n                    pos++;\n                    char++;\n                }\n                by--;\n            }\n        }\n    }\n    function advancePosTo(to) {\n        if (locationKeyName === null) {\n            pos = to;\n        }\n        else {\n            advancePosBy(to - pos);\n        }\n    }\n    function skipWhitespace() {\n        while (pos < len) {\n            let chCode = content.charCodeAt(pos);\n            if (chCode !== 32 /* SPACE */ && chCode !== 9 /* TAB */ && chCode !== 13 /* CARRIAGE_RETURN */ && chCode !== 10 /* LINE_FEED */) {\n                break;\n            }\n            advancePosBy(1);\n        }\n    }\n    function advanceIfStartsWith(str) {\n        if (content.substr(pos, str.length) === str) {\n            advancePosBy(str.length);\n            return true;\n        }\n        return false;\n    }\n    function advanceUntil(str) {\n        let nextOccurence = content.indexOf(str, pos);\n        if (nextOccurence !== -1) {\n            advancePosTo(nextOccurence + str.length);\n        }\n        else {\n            // EOF\n            advancePosTo(len);\n        }\n    }\n    function captureUntil(str) {\n        let nextOccurence = content.indexOf(str, pos);\n        if (nextOccurence !== -1) {\n            let r = content.substring(pos, nextOccurence);\n            advancePosTo(nextOccurence + str.length);\n            return r;\n        }\n        else {\n            // EOF\n            let r = content.substr(pos);\n            advancePosTo(len);\n            return r;\n        }\n    }\n    let state = 0 /* ROOT_STATE */;\n    let cur = null;\n    let stateStack = [];\n    let objStack = [];\n    let curKey = null;\n    function pushState(newState, newCur) {\n        stateStack.push(state);\n        objStack.push(cur);\n        state = newState;\n        cur = newCur;\n    }\n    function popState() {\n        if (stateStack.length === 0) {\n            return fail('illegal state stack');\n        }\n        state = stateStack.pop();\n        cur = objStack.pop();\n    }\n    function fail(msg) {\n        throw new Error('Near offset ' + pos + ': ' + msg + ' ~~~' + content.substr(pos, 50) + '~~~');\n    }\n    const dictState = {\n        enterDict: function () {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            let newDict = {};\n            if (locationKeyName !== null) {\n                newDict[locationKeyName] = {\n                    filename: filename,\n                    line: line,\n                    char: char\n                };\n            }\n            cur[curKey] = newDict;\n            curKey = null;\n            pushState(1 /* DICT_STATE */, newDict);\n        },\n        enterArray: function () {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            let newArr = [];\n            cur[curKey] = newArr;\n            curKey = null;\n            pushState(2 /* ARR_STATE */, newArr);\n        }\n    };\n    const arrState = {\n        enterDict: function () {\n            let newDict = {};\n            if (locationKeyName !== null) {\n                newDict[locationKeyName] = {\n                    filename: filename,\n                    line: line,\n                    char: char\n                };\n            }\n            cur.push(newDict);\n            pushState(1 /* DICT_STATE */, newDict);\n        },\n        enterArray: function () {\n            let newArr = [];\n            cur.push(newArr);\n            pushState(2 /* ARR_STATE */, newArr);\n        }\n    };\n    function enterDict() {\n        if (state === 1 /* DICT_STATE */) {\n            dictState.enterDict();\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            arrState.enterDict();\n        }\n        else { // ROOT_STATE\n            cur = {};\n            if (locationKeyName !== null) {\n                cur[locationKeyName] = {\n                    filename: filename,\n                    line: line,\n                    char: char\n                };\n            }\n            pushState(1 /* DICT_STATE */, cur);\n        }\n    }\n    function leaveDict() {\n        if (state === 1 /* DICT_STATE */) {\n            popState();\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            return fail('unexpected </dict>');\n        }\n        else { // ROOT_STATE\n            return fail('unexpected </dict>');\n        }\n    }\n    function enterArray() {\n        if (state === 1 /* DICT_STATE */) {\n            dictState.enterArray();\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            arrState.enterArray();\n        }\n        else { // ROOT_STATE\n            cur = [];\n            pushState(2 /* ARR_STATE */, cur);\n        }\n    }\n    function leaveArray() {\n        if (state === 1 /* DICT_STATE */) {\n            return fail('unexpected </array>');\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            popState();\n        }\n        else { // ROOT_STATE\n            return fail('unexpected </array>');\n        }\n    }\n    function acceptKey(val) {\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey !== null) {\n                return fail('too many <key>');\n            }\n            curKey = val;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            return fail('unexpected <key>');\n        }\n        else { // ROOT_STATE\n            return fail('unexpected <key>');\n        }\n    }\n    function acceptString(val) {\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptReal(val) {\n        if (isNaN(val)) {\n            return fail('cannot parse float');\n        }\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptInteger(val) {\n        if (isNaN(val)) {\n            return fail('cannot parse integer');\n        }\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptDate(val) {\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptData(val) {\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptBool(val) {\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function escapeVal(str) {\n        return str.replace(/&#([0-9]+);/g, function (_, m0) {\n            return String.fromCodePoint(parseInt(m0, 10));\n        }).replace(/&#x([0-9a-f]+);/g, function (_, m0) {\n            return String.fromCodePoint(parseInt(m0, 16));\n        }).replace(/&amp;|&lt;|&gt;|&quot;|&apos;/g, function (_) {\n            switch (_) {\n                case '&amp;': return '&';\n                case '&lt;': return '<';\n                case '&gt;': return '>';\n                case '&quot;': return '\"';\n                case '&apos;': return '\\'';\n            }\n            return _;\n        });\n    }\n    function parseOpenTag() {\n        let r = captureUntil('>');\n        let isClosed = false;\n        if (r.charCodeAt(r.length - 1) === 47 /* SLASH */) {\n            isClosed = true;\n            r = r.substring(0, r.length - 1);\n        }\n        return {\n            name: r.trim(),\n            isClosed: isClosed\n        };\n    }\n    function parseTagValue(tag) {\n        if (tag.isClosed) {\n            return '';\n        }\n        let val = captureUntil('</');\n        advanceUntil('>');\n        return escapeVal(val);\n    }\n    while (pos < len) {\n        skipWhitespace();\n        if (pos >= len) {\n            break;\n        }\n        const chCode = content.charCodeAt(pos);\n        advancePosBy(1);\n        if (chCode !== 60 /* LESS_THAN */) {\n            return fail('expected <');\n        }\n        if (pos >= len) {\n            return fail('unexpected end of input');\n        }\n        const peekChCode = content.charCodeAt(pos);\n        if (peekChCode === 63 /* QUESTION_MARK */) {\n            advancePosBy(1);\n            advanceUntil('?>');\n            continue;\n        }\n        if (peekChCode === 33 /* EXCLAMATION_MARK */) {\n            advancePosBy(1);\n            if (advanceIfStartsWith('--')) {\n                advanceUntil('-->');\n                continue;\n            }\n            advanceUntil('>');\n            continue;\n        }\n        if (peekChCode === 47 /* SLASH */) {\n            advancePosBy(1);\n            skipWhitespace();\n            if (advanceIfStartsWith('plist')) {\n                advanceUntil('>');\n                continue;\n            }\n            if (advanceIfStartsWith('dict')) {\n                advanceUntil('>');\n                leaveDict();\n                continue;\n            }\n            if (advanceIfStartsWith('array')) {\n                advanceUntil('>');\n                leaveArray();\n                continue;\n            }\n            return fail('unexpected closed tag');\n        }\n        let tag = parseOpenTag();\n        switch (tag.name) {\n            case 'dict':\n                enterDict();\n                if (tag.isClosed) {\n                    leaveDict();\n                }\n                continue;\n            case 'array':\n                enterArray();\n                if (tag.isClosed) {\n                    leaveArray();\n                }\n                continue;\n            case 'key':\n                acceptKey(parseTagValue(tag));\n                continue;\n            case 'string':\n                acceptString(parseTagValue(tag));\n                continue;\n            case 'real':\n                acceptReal(parseFloat(parseTagValue(tag)));\n                continue;\n            case 'integer':\n                acceptInteger(parseInt(parseTagValue(tag), 10));\n                continue;\n            case 'date':\n                acceptDate(new Date(parseTagValue(tag)));\n                continue;\n            case 'data':\n                acceptData(parseTagValue(tag));\n                continue;\n            case 'true':\n                parseTagValue(tag);\n                acceptBool(true);\n                continue;\n            case 'false':\n                parseTagValue(tag);\n                acceptBool(false);\n                continue;\n        }\n        if (/^plist/.test(tag.name)) {\n            continue;\n        }\n        return fail('unexpected opened tag ' + tag.name);\n    }\n    return cur;\n}\n//# sourceMappingURL=plist.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SyncRegistry = void 0;\nconst grammar_1 = require(\"./grammar\");\nclass SyncRegistry {\n    constructor(theme, _onigLibPromise) {\n        this._onigLibPromise = _onigLibPromise;\n        this._grammars = new Map();\n        this._rawGrammars = new Map();\n        this._injectionGrammars = new Map();\n        this._theme = theme;\n    }\n    dispose() {\n        for (const grammar of this._grammars.values()) {\n            grammar.dispose();\n        }\n    }\n    setTheme(theme) {\n        this._theme = theme;\n    }\n    getColorMap() {\n        return this._theme.getColorMap();\n    }\n    /**\n     * Add `grammar` to registry and return a list of referenced scope names\n     */\n    addGrammar(grammar, injectionScopeNames) {\n        this._rawGrammars.set(grammar.scopeName, grammar);\n        if (injectionScopeNames) {\n            this._injectionGrammars.set(grammar.scopeName, injectionScopeNames);\n        }\n    }\n    /**\n     * Lookup a raw grammar.\n     */\n    lookup(scopeName) {\n        return this._rawGrammars.get(scopeName);\n    }\n    /**\n     * Returns the injections for the given grammar\n     */\n    injections(targetScope) {\n        return this._injectionGrammars.get(targetScope);\n    }\n    /**\n     * Get the default theme settings\n     */\n    getDefaults() {\n        return this._theme.getDefaults();\n    }\n    /**\n     * Match a scope in the theme.\n     */\n    themeMatch(scopePath) {\n        return this._theme.match(scopePath);\n    }\n    /**\n     * Lookup a grammar.\n     */\n    async grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n        if (!this._grammars.has(scopeName)) {\n            let rawGrammar = this._rawGrammars.get(scopeName);\n            if (!rawGrammar) {\n                return null;\n            }\n            this._grammars.set(scopeName, grammar_1.createGrammar(scopeName, rawGrammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, this, await this._onigLibPromise));\n        }\n        return this._grammars.get(scopeName);\n    }\n}\nexports.SyncRegistry = SyncRegistry;\n//# sourceMappingURL=registry.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompiledRule = exports.RegExpSourceList = exports.RegExpSource = exports.RuleFactory = exports.BeginWhileRule = exports.BeginEndRule = exports.IncludeOnlyRule = exports.MatchRule = exports.CaptureRule = exports.Rule = exports.ruleIdToNumber = exports.ruleIdFromNumber = exports.whileRuleId = exports.endRuleId = void 0;\nconst utils_1 = require(\"./utils\");\nconst grammarDependencies_1 = require(\"./grammar/grammarDependencies\");\nconst HAS_BACK_REFERENCES = /\\\\(\\d+)/;\nconst BACK_REFERENCING_END = /\\\\(\\d+)/g;\nconst ruleIdSymbol = Symbol('RuleId');\n// This is a special constant to indicate that the end regexp matched.\nexports.endRuleId = -1;\n// This is a special constant to indicate that the while regexp matched.\nexports.whileRuleId = -2;\nfunction ruleIdFromNumber(id) {\n    return id;\n}\nexports.ruleIdFromNumber = ruleIdFromNumber;\nfunction ruleIdToNumber(id) {\n    return id;\n}\nexports.ruleIdToNumber = ruleIdToNumber;\nclass Rule {\n    constructor($location, id, name, contentName) {\n        this.$location = $location;\n        this.id = id;\n        this._name = name || null;\n        this._nameIsCapturing = utils_1.RegexSource.hasCaptures(this._name);\n        this._contentName = contentName || null;\n        this._contentNameIsCapturing = utils_1.RegexSource.hasCaptures(this._contentName);\n    }\n    get debugName() {\n        const location = this.$location ? `${utils_1.basename(this.$location.filename)}:${this.$location.line}` : 'unknown';\n        return `${this.constructor.name}#${this.id} @ ${location}`;\n    }\n    getName(lineText, captureIndices) {\n        if (!this._nameIsCapturing || this._name === null || lineText === null || captureIndices === null) {\n            return this._name;\n        }\n        return utils_1.RegexSource.replaceCaptures(this._name, lineText, captureIndices);\n    }\n    getContentName(lineText, captureIndices) {\n        if (!this._contentNameIsCapturing || this._contentName === null) {\n            return this._contentName;\n        }\n        return utils_1.RegexSource.replaceCaptures(this._contentName, lineText, captureIndices);\n    }\n}\nexports.Rule = Rule;\nclass CaptureRule extends Rule {\n    constructor($location, id, name, contentName, retokenizeCapturedWithRuleId) {\n        super($location, id, name, contentName);\n        this.retokenizeCapturedWithRuleId = retokenizeCapturedWithRuleId;\n    }\n    dispose() {\n        // nothing to dispose\n    }\n    collectPatterns(grammar, out) {\n        throw new Error('Not supported!');\n    }\n    compile(grammar, endRegexSource) {\n        throw new Error('Not supported!');\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        throw new Error('Not supported!');\n    }\n}\nexports.CaptureRule = CaptureRule;\nclass MatchRule extends Rule {\n    constructor($location, id, name, match, captures) {\n        super($location, id, name, null);\n        this._match = new RegExpSource(match, this.id);\n        this.captures = captures;\n        this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n    }\n    get debugMatchRegExp() {\n        return `${this._match.source}`;\n    }\n    collectPatterns(grammar, out) {\n        out.push(this._match);\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            this.collectPatterns(grammar, this._cachedCompiledPatterns);\n        }\n        return this._cachedCompiledPatterns;\n    }\n}\nexports.MatchRule = MatchRule;\nclass IncludeOnlyRule extends Rule {\n    constructor($location, id, name, contentName, patterns) {\n        super($location, id, name, contentName);\n        this.patterns = patterns.patterns;\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\n        this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n    }\n    collectPatterns(grammar, out) {\n        for (const pattern of this.patterns) {\n            const rule = grammar.getRule(pattern);\n            rule.collectPatterns(grammar, out);\n        }\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            this.collectPatterns(grammar, this._cachedCompiledPatterns);\n        }\n        return this._cachedCompiledPatterns;\n    }\n}\nexports.IncludeOnlyRule = IncludeOnlyRule;\nclass BeginEndRule extends Rule {\n    constructor($location, id, name, contentName, begin, beginCaptures, end, endCaptures, applyEndPatternLast, patterns) {\n        super($location, id, name, contentName);\n        this._begin = new RegExpSource(begin, this.id);\n        this.beginCaptures = beginCaptures;\n        this._end = new RegExpSource(end ? end : '\\uFFFF', -1);\n        this.endHasBackReferences = this._end.hasBackReferences;\n        this.endCaptures = endCaptures;\n        this.applyEndPatternLast = applyEndPatternLast || false;\n        this.patterns = patterns.patterns;\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\n        this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n    }\n    get debugBeginRegExp() {\n        return `${this._begin.source}`;\n    }\n    get debugEndRegExp() {\n        return `${this._end.source}`;\n    }\n    getEndWithResolvedBackReferences(lineText, captureIndices) {\n        return this._end.resolveBackReferences(lineText, captureIndices);\n    }\n    collectPatterns(grammar, out) {\n        out.push(this._begin);\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar, endRegexSource).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar, endRegexSource) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            for (const pattern of this.patterns) {\n                const rule = grammar.getRule(pattern);\n                rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n            }\n            if (this.applyEndPatternLast) {\n                this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end);\n            }\n            else {\n                this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end);\n            }\n        }\n        if (this._end.hasBackReferences) {\n            if (this.applyEndPatternLast) {\n                this._cachedCompiledPatterns.setSource(this._cachedCompiledPatterns.length() - 1, endRegexSource);\n            }\n            else {\n                this._cachedCompiledPatterns.setSource(0, endRegexSource);\n            }\n        }\n        return this._cachedCompiledPatterns;\n    }\n}\nexports.BeginEndRule = BeginEndRule;\nclass BeginWhileRule extends Rule {\n    constructor($location, id, name, contentName, begin, beginCaptures, _while, whileCaptures, patterns) {\n        super($location, id, name, contentName);\n        this._begin = new RegExpSource(begin, this.id);\n        this.beginCaptures = beginCaptures;\n        this.whileCaptures = whileCaptures;\n        this._while = new RegExpSource(_while, exports.whileRuleId);\n        this.whileHasBackReferences = this._while.hasBackReferences;\n        this.patterns = patterns.patterns;\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\n        this._cachedCompiledPatterns = null;\n        this._cachedCompiledWhilePatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n        if (this._cachedCompiledWhilePatterns) {\n            this._cachedCompiledWhilePatterns.dispose();\n            this._cachedCompiledWhilePatterns = null;\n        }\n    }\n    get debugBeginRegExp() {\n        return `${this._begin.source}`;\n    }\n    get debugWhileRegExp() {\n        return `${this._while.source}`;\n    }\n    getWhileWithResolvedBackReferences(lineText, captureIndices) {\n        return this._while.resolveBackReferences(lineText, captureIndices);\n    }\n    collectPatterns(grammar, out) {\n        out.push(this._begin);\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            for (const pattern of this.patterns) {\n                const rule = grammar.getRule(pattern);\n                rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n            }\n        }\n        return this._cachedCompiledPatterns;\n    }\n    compileWhile(grammar, endRegexSource) {\n        return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compile(grammar);\n    }\n    compileWhileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledWhilePatterns(grammar, endRegexSource) {\n        if (!this._cachedCompiledWhilePatterns) {\n            this._cachedCompiledWhilePatterns = new RegExpSourceList();\n            this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while);\n        }\n        if (this._while.hasBackReferences) {\n            this._cachedCompiledWhilePatterns.setSource(0, endRegexSource ? endRegexSource : '\\uFFFF');\n        }\n        return this._cachedCompiledWhilePatterns;\n    }\n}\nexports.BeginWhileRule = BeginWhileRule;\nclass RuleFactory {\n    static createCaptureRule(helper, $location, name, contentName, retokenizeCapturedWithRuleId) {\n        return helper.registerRule((id) => {\n            return new CaptureRule($location, id, name, contentName, retokenizeCapturedWithRuleId);\n        });\n    }\n    static getCompiledRuleId(desc, helper, repository) {\n        if (!desc.id) {\n            helper.registerRule((id) => {\n                desc.id = id;\n                if (desc.match) {\n                    return new MatchRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.match, RuleFactory._compileCaptures(desc.captures, helper, repository));\n                }\n                if (typeof desc.begin === 'undefined') {\n                    if (desc.repository) {\n                        repository = utils_1.mergeObjects({}, repository, desc.repository);\n                    }\n                    let patterns = desc.patterns;\n                    if (typeof patterns === 'undefined' && desc.include) {\n                        patterns = [{ include: desc.include }];\n                    }\n                    return new IncludeOnlyRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, RuleFactory._compilePatterns(patterns, helper, repository));\n                }\n                if (desc.while) {\n                    return new BeginWhileRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.while, RuleFactory._compileCaptures(desc.whileCaptures || desc.captures, helper, repository), RuleFactory._compilePatterns(desc.patterns, helper, repository));\n                }\n                return new BeginEndRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.end, RuleFactory._compileCaptures(desc.endCaptures || desc.captures, helper, repository), desc.applyEndPatternLast, RuleFactory._compilePatterns(desc.patterns, helper, repository));\n            });\n        }\n        return desc.id;\n    }\n    static _compileCaptures(captures, helper, repository) {\n        let r = [];\n        if (captures) {\n            // Find the maximum capture id\n            let maximumCaptureId = 0;\n            for (const captureId in captures) {\n                if (captureId === '$vscodeTextmateLocation') {\n                    continue;\n                }\n                const numericCaptureId = parseInt(captureId, 10);\n                if (numericCaptureId > maximumCaptureId) {\n                    maximumCaptureId = numericCaptureId;\n                }\n            }\n            // Initialize result\n            for (let i = 0; i <= maximumCaptureId; i++) {\n                r[i] = null;\n            }\n            // Fill out result\n            for (const captureId in captures) {\n                if (captureId === '$vscodeTextmateLocation') {\n                    continue;\n                }\n                const numericCaptureId = parseInt(captureId, 10);\n                let retokenizeCapturedWithRuleId = 0;\n                if (captures[captureId].patterns) {\n                    retokenizeCapturedWithRuleId = RuleFactory.getCompiledRuleId(captures[captureId], helper, repository);\n                }\n                r[numericCaptureId] = RuleFactory.createCaptureRule(helper, captures[captureId].$vscodeTextmateLocation, captures[captureId].name, captures[captureId].contentName, retokenizeCapturedWithRuleId);\n            }\n        }\n        return r;\n    }\n    static _compilePatterns(patterns, helper, repository) {\n        let r = [];\n        if (patterns) {\n            for (let i = 0, len = patterns.length; i < len; i++) {\n                const pattern = patterns[i];\n                let ruleId = -1;\n                if (pattern.include) {\n                    const reference = grammarDependencies_1.parseInclude(pattern.include);\n                    switch (reference.kind) {\n                        case 0 /* Base */:\n                        case 1 /* Self */:\n                            ruleId = RuleFactory.getCompiledRuleId(repository[pattern.include], helper, repository);\n                            break;\n                        case 2 /* RelativeReference */:\n                            // Local include found in `repository`\n                            let localIncludedRule = repository[reference.ruleName];\n                            if (localIncludedRule) {\n                                ruleId = RuleFactory.getCompiledRuleId(localIncludedRule, helper, repository);\n                            }\n                            else {\n                                // console.warn('CANNOT find rule for scopeName: ' + pattern.include + ', I am: ', repository['$base'].name);\n                            }\n                            break;\n                        case 3 /* TopLevelReference */:\n                        case 4 /* TopLevelRepositoryReference */:\n                            const externalGrammarName = reference.scopeName;\n                            const externalGrammarInclude = reference.kind === 4 /* TopLevelRepositoryReference */\n                                ? reference.ruleName\n                                : null;\n                            // External include\n                            const externalGrammar = helper.getExternalGrammar(externalGrammarName, repository);\n                            if (externalGrammar) {\n                                if (externalGrammarInclude) {\n                                    let externalIncludedRule = externalGrammar.repository[externalGrammarInclude];\n                                    if (externalIncludedRule) {\n                                        ruleId = RuleFactory.getCompiledRuleId(externalIncludedRule, helper, externalGrammar.repository);\n                                    }\n                                    else {\n                                        // console.warn('CANNOT find rule for scopeName: ' + pattern.include + ', I am: ', repository['$base'].name);\n                                    }\n                                }\n                                else {\n                                    ruleId = RuleFactory.getCompiledRuleId(externalGrammar.repository.$self, helper, externalGrammar.repository);\n                                }\n                            }\n                            else {\n                                // console.warn('CANNOT find grammar for scopeName: ' + pattern.include + ', I am: ', repository['$base'].name);\n                            }\n                            break;\n                    }\n                }\n                else {\n                    ruleId = RuleFactory.getCompiledRuleId(pattern, helper, repository);\n                }\n                if (ruleId !== -1) {\n                    const rule = helper.getRule(ruleId);\n                    let skipRule = false;\n                    if (rule instanceof IncludeOnlyRule || rule instanceof BeginEndRule || rule instanceof BeginWhileRule) {\n                        if (rule.hasMissingPatterns && rule.patterns.length === 0) {\n                            skipRule = true;\n                        }\n                    }\n                    if (skipRule) {\n                        // console.log('REMOVING RULE ENTIRELY DUE TO EMPTY PATTERNS THAT ARE MISSING');\n                        continue;\n                    }\n                    r.push(ruleId);\n                }\n            }\n        }\n        return {\n            patterns: r,\n            hasMissingPatterns: ((patterns ? patterns.length : 0) !== r.length)\n        };\n    }\n}\nexports.RuleFactory = RuleFactory;\nclass RegExpSource {\n    constructor(regExpSource, ruleId) {\n        if (regExpSource) {\n            const len = regExpSource.length;\n            let lastPushedPos = 0;\n            let output = [];\n            let hasAnchor = false;\n            for (let pos = 0; pos < len; pos++) {\n                const ch = regExpSource.charAt(pos);\n                if (ch === '\\\\') {\n                    if (pos + 1 < len) {\n                        const nextCh = regExpSource.charAt(pos + 1);\n                        if (nextCh === 'z') {\n                            output.push(regExpSource.substring(lastPushedPos, pos));\n                            output.push('$(?!\\\\n)(?<!\\\\n)');\n                            lastPushedPos = pos + 2;\n                        }\n                        else if (nextCh === 'A' || nextCh === 'G') {\n                            hasAnchor = true;\n                        }\n                        pos++;\n                    }\n                }\n            }\n            this.hasAnchor = hasAnchor;\n            if (lastPushedPos === 0) {\n                // No \\z hit\n                this.source = regExpSource;\n            }\n            else {\n                output.push(regExpSource.substring(lastPushedPos, len));\n                this.source = output.join('');\n            }\n        }\n        else {\n            this.hasAnchor = false;\n            this.source = regExpSource;\n        }\n        if (this.hasAnchor) {\n            this._anchorCache = this._buildAnchorCache();\n        }\n        else {\n            this._anchorCache = null;\n        }\n        this.ruleId = ruleId;\n        this.hasBackReferences = HAS_BACK_REFERENCES.test(this.source);\n        // console.log('input: ' + regExpSource + ' => ' + this.source + ', ' + this.hasAnchor);\n    }\n    clone() {\n        return new RegExpSource(this.source, this.ruleId);\n    }\n    setSource(newSource) {\n        if (this.source === newSource) {\n            return;\n        }\n        this.source = newSource;\n        if (this.hasAnchor) {\n            this._anchorCache = this._buildAnchorCache();\n        }\n    }\n    resolveBackReferences(lineText, captureIndices) {\n        let capturedValues = captureIndices.map((capture) => {\n            return lineText.substring(capture.start, capture.end);\n        });\n        BACK_REFERENCING_END.lastIndex = 0;\n        return this.source.replace(BACK_REFERENCING_END, (match, g1) => {\n            return utils_1.escapeRegExpCharacters(capturedValues[parseInt(g1, 10)] || '');\n        });\n    }\n    _buildAnchorCache() {\n        let A0_G0_result = [];\n        let A0_G1_result = [];\n        let A1_G0_result = [];\n        let A1_G1_result = [];\n        let pos, len, ch, nextCh;\n        for (pos = 0, len = this.source.length; pos < len; pos++) {\n            ch = this.source.charAt(pos);\n            A0_G0_result[pos] = ch;\n            A0_G1_result[pos] = ch;\n            A1_G0_result[pos] = ch;\n            A1_G1_result[pos] = ch;\n            if (ch === '\\\\') {\n                if (pos + 1 < len) {\n                    nextCh = this.source.charAt(pos + 1);\n                    if (nextCh === 'A') {\n                        A0_G0_result[pos + 1] = '\\uFFFF';\n                        A0_G1_result[pos + 1] = '\\uFFFF';\n                        A1_G0_result[pos + 1] = 'A';\n                        A1_G1_result[pos + 1] = 'A';\n                    }\n                    else if (nextCh === 'G') {\n                        A0_G0_result[pos + 1] = '\\uFFFF';\n                        A0_G1_result[pos + 1] = 'G';\n                        A1_G0_result[pos + 1] = '\\uFFFF';\n                        A1_G1_result[pos + 1] = 'G';\n                    }\n                    else {\n                        A0_G0_result[pos + 1] = nextCh;\n                        A0_G1_result[pos + 1] = nextCh;\n                        A1_G0_result[pos + 1] = nextCh;\n                        A1_G1_result[pos + 1] = nextCh;\n                    }\n                    pos++;\n                }\n            }\n        }\n        return {\n            A0_G0: A0_G0_result.join(''),\n            A0_G1: A0_G1_result.join(''),\n            A1_G0: A1_G0_result.join(''),\n            A1_G1: A1_G1_result.join('')\n        };\n    }\n    resolveAnchors(allowA, allowG) {\n        if (!this.hasAnchor || !this._anchorCache) {\n            return this.source;\n        }\n        if (allowA) {\n            if (allowG) {\n                return this._anchorCache.A1_G1;\n            }\n            else {\n                return this._anchorCache.A1_G0;\n            }\n        }\n        else {\n            if (allowG) {\n                return this._anchorCache.A0_G1;\n            }\n            else {\n                return this._anchorCache.A0_G0;\n            }\n        }\n    }\n}\nexports.RegExpSource = RegExpSource;\nclass RegExpSourceList {\n    constructor() {\n        this._items = [];\n        this._hasAnchors = false;\n        this._cached = null;\n        this._anchorCache = {\n            A0_G0: null,\n            A0_G1: null,\n            A1_G0: null,\n            A1_G1: null\n        };\n    }\n    dispose() {\n        this._disposeCaches();\n    }\n    _disposeCaches() {\n        if (this._cached) {\n            this._cached.dispose();\n            this._cached = null;\n        }\n        if (this._anchorCache.A0_G0) {\n            this._anchorCache.A0_G0.dispose();\n            this._anchorCache.A0_G0 = null;\n        }\n        if (this._anchorCache.A0_G1) {\n            this._anchorCache.A0_G1.dispose();\n            this._anchorCache.A0_G1 = null;\n        }\n        if (this._anchorCache.A1_G0) {\n            this._anchorCache.A1_G0.dispose();\n            this._anchorCache.A1_G0 = null;\n        }\n        if (this._anchorCache.A1_G1) {\n            this._anchorCache.A1_G1.dispose();\n            this._anchorCache.A1_G1 = null;\n        }\n    }\n    push(item) {\n        this._items.push(item);\n        this._hasAnchors = this._hasAnchors || item.hasAnchor;\n    }\n    unshift(item) {\n        this._items.unshift(item);\n        this._hasAnchors = this._hasAnchors || item.hasAnchor;\n    }\n    length() {\n        return this._items.length;\n    }\n    setSource(index, newSource) {\n        if (this._items[index].source !== newSource) {\n            // bust the cache\n            this._disposeCaches();\n            this._items[index].setSource(newSource);\n        }\n    }\n    compile(onigLib) {\n        if (!this._cached) {\n            let regExps = this._items.map(e => e.source);\n            this._cached = new CompiledRule(onigLib, regExps, this._items.map(e => e.ruleId));\n        }\n        return this._cached;\n    }\n    compileAG(onigLib, allowA, allowG) {\n        if (!this._hasAnchors) {\n            return this.compile(onigLib);\n        }\n        else {\n            if (allowA) {\n                if (allowG) {\n                    if (!this._anchorCache.A1_G1) {\n                        this._anchorCache.A1_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A1_G1;\n                }\n                else {\n                    if (!this._anchorCache.A1_G0) {\n                        this._anchorCache.A1_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A1_G0;\n                }\n            }\n            else {\n                if (allowG) {\n                    if (!this._anchorCache.A0_G1) {\n                        this._anchorCache.A0_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A0_G1;\n                }\n                else {\n                    if (!this._anchorCache.A0_G0) {\n                        this._anchorCache.A0_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A0_G0;\n                }\n            }\n        }\n    }\n    _resolveAnchors(onigLib, allowA, allowG) {\n        let regExps = this._items.map(e => e.resolveAnchors(allowA, allowG));\n        return new CompiledRule(onigLib, regExps, this._items.map(e => e.ruleId));\n    }\n}\nexports.RegExpSourceList = RegExpSourceList;\nclass CompiledRule {\n    constructor(onigLib, regExps, rules) {\n        this.regExps = regExps;\n        this.rules = rules;\n        this.scanner = onigLib.createOnigScanner(regExps);\n    }\n    dispose() {\n        if (typeof this.scanner.dispose === \"function\") {\n            this.scanner.dispose();\n        }\n    }\n    toString() {\n        const r = [];\n        for (let i = 0, len = this.rules.length; i < len; i++) {\n            r.push(\"   - \" + this.rules[i] + \": \" + this.regExps[i]);\n        }\n        return r.join(\"\\n\");\n    }\n    findNextMatchSync(string, startPosition, options) {\n        const result = this.scanner.findNextMatchSync(string, startPosition, options);\n        if (!result) {\n            return null;\n        }\n        return {\n            ruleId: this.rules[result.index],\n            captureIndices: result.captureIndices,\n        };\n    }\n}\nexports.CompiledRule = CompiledRule;\n//# sourceMappingURL=rule.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ThemeTrieElement = exports.ThemeTrieElementRule = exports.ColorMap = exports.fontStyleToString = exports.ParsedThemeRule = exports.parseTheme = exports.StyleAttributes = exports.ScopeStack = exports.Theme = void 0;\nconst utils_1 = require(\"./utils\");\nclass Theme {\n    constructor(_colorMap, _defaults, _root) {\n        this._colorMap = _colorMap;\n        this._defaults = _defaults;\n        this._root = _root;\n        this._cachedMatchRoot = new utils_1.CachedFn((scopeName) => this._root.match(scopeName));\n    }\n    static createFromRawTheme(source, colorMap) {\n        return this.createFromParsedTheme(parseTheme(source), colorMap);\n    }\n    static createFromParsedTheme(source, colorMap) {\n        return resolveParsedThemeRules(source, colorMap);\n    }\n    getColorMap() {\n        return this._colorMap.getColorMap();\n    }\n    getDefaults() {\n        return this._defaults;\n    }\n    match(scopePath) {\n        if (scopePath === null) {\n            return this._defaults;\n        }\n        const scopeName = scopePath.scopeName;\n        const matchingTrieElements = this._cachedMatchRoot.get(scopeName);\n        const effectiveRule = matchingTrieElements.find((v) => _scopePathMatchesParentScopes(scopePath.parent, v.parentScopes));\n        if (!effectiveRule) {\n            return null;\n        }\n        return new StyleAttributes(effectiveRule.fontStyle, effectiveRule.foreground, effectiveRule.background);\n    }\n}\nexports.Theme = Theme;\nclass ScopeStack {\n    constructor(parent, scopeName) {\n        this.parent = parent;\n        this.scopeName = scopeName;\n    }\n    static push(path, scopeNames) {\n        for (const name of scopeNames) {\n            path = new ScopeStack(path, name);\n        }\n        return path;\n    }\n    static from(...segments) {\n        let result = null;\n        for (let i = 0; i < segments.length; i++) {\n            result = new ScopeStack(result, segments[i]);\n        }\n        return result;\n    }\n    push(scopeName) {\n        return new ScopeStack(this, scopeName);\n    }\n    getSegments() {\n        let item = this;\n        const result = [];\n        while (item) {\n            result.push(item.scopeName);\n            item = item.parent;\n        }\n        result.reverse();\n        return result;\n    }\n    toString() {\n        return this.getSegments().join(' ');\n    }\n    extends(other) {\n        if (this === other) {\n            return true;\n        }\n        if (this.parent === null) {\n            return false;\n        }\n        return this.parent.extends(other);\n    }\n    getExtensionIfDefined(base) {\n        const result = [];\n        let item = this;\n        while (item && item !== base) {\n            result.push(item.scopeName);\n            item = item.parent;\n        }\n        return item === base ? result.reverse() : undefined;\n    }\n}\nexports.ScopeStack = ScopeStack;\nfunction _scopePathMatchesParentScopes(scopePath, parentScopes) {\n    if (parentScopes === null) {\n        return true;\n    }\n    let index = 0;\n    let scopePattern = parentScopes[index];\n    while (scopePath) {\n        if (_matchesScope(scopePath.scopeName, scopePattern)) {\n            index++;\n            if (index === parentScopes.length) {\n                return true;\n            }\n            scopePattern = parentScopes[index];\n        }\n        scopePath = scopePath.parent;\n    }\n    return false;\n}\nfunction _matchesScope(scopeName, scopePattern) {\n    return scopePattern === scopeName || (scopeName.startsWith(scopePattern) && scopeName[scopePattern.length] === '.');\n}\nclass StyleAttributes {\n    constructor(fontStyle, foregroundId, backgroundId) {\n        this.fontStyle = fontStyle;\n        this.foregroundId = foregroundId;\n        this.backgroundId = backgroundId;\n    }\n}\nexports.StyleAttributes = StyleAttributes;\n/**\n * Parse a raw theme into rules.\n */\nfunction parseTheme(source) {\n    if (!source) {\n        return [];\n    }\n    if (!source.settings || !Array.isArray(source.settings)) {\n        return [];\n    }\n    let settings = source.settings;\n    let result = [], resultLen = 0;\n    for (let i = 0, len = settings.length; i < len; i++) {\n        let entry = settings[i];\n        if (!entry.settings) {\n            continue;\n        }\n        let scopes;\n        if (typeof entry.scope === 'string') {\n            let _scope = entry.scope;\n            // remove leading commas\n            _scope = _scope.replace(/^[,]+/, '');\n            // remove trailing commans\n            _scope = _scope.replace(/[,]+$/, '');\n            scopes = _scope.split(',');\n        }\n        else if (Array.isArray(entry.scope)) {\n            scopes = entry.scope;\n        }\n        else {\n            scopes = [''];\n        }\n        let fontStyle = -1 /* NotSet */;\n        if (typeof entry.settings.fontStyle === 'string') {\n            fontStyle = 0 /* None */;\n            let segments = entry.settings.fontStyle.split(' ');\n            for (let j = 0, lenJ = segments.length; j < lenJ; j++) {\n                let segment = segments[j];\n                switch (segment) {\n                    case 'italic':\n                        fontStyle = fontStyle | 1 /* Italic */;\n                        break;\n                    case 'bold':\n                        fontStyle = fontStyle | 2 /* Bold */;\n                        break;\n                    case 'underline':\n                        fontStyle = fontStyle | 4 /* Underline */;\n                        break;\n                    case 'strikethrough':\n                        fontStyle = fontStyle | 8 /* Strikethrough */;\n                        break;\n                }\n            }\n        }\n        let foreground = null;\n        if (typeof entry.settings.foreground === 'string' && utils_1.isValidHexColor(entry.settings.foreground)) {\n            foreground = entry.settings.foreground;\n        }\n        let background = null;\n        if (typeof entry.settings.background === 'string' && utils_1.isValidHexColor(entry.settings.background)) {\n            background = entry.settings.background;\n        }\n        for (let j = 0, lenJ = scopes.length; j < lenJ; j++) {\n            let _scope = scopes[j].trim();\n            let segments = _scope.split(' ');\n            let scope = segments[segments.length - 1];\n            let parentScopes = null;\n            if (segments.length > 1) {\n                parentScopes = segments.slice(0, segments.length - 1);\n                parentScopes.reverse();\n            }\n            result[resultLen++] = new ParsedThemeRule(scope, parentScopes, i, fontStyle, foreground, background);\n        }\n    }\n    return result;\n}\nexports.parseTheme = parseTheme;\nclass ParsedThemeRule {\n    constructor(scope, parentScopes, index, fontStyle, foreground, background) {\n        this.scope = scope;\n        this.parentScopes = parentScopes;\n        this.index = index;\n        this.fontStyle = fontStyle;\n        this.foreground = foreground;\n        this.background = background;\n    }\n}\nexports.ParsedThemeRule = ParsedThemeRule;\nfunction fontStyleToString(fontStyle) {\n    if (fontStyle === -1 /* NotSet */) {\n        return 'not set';\n    }\n    let style = '';\n    if (fontStyle & 1 /* Italic */) {\n        style += 'italic ';\n    }\n    if (fontStyle & 2 /* Bold */) {\n        style += 'bold ';\n    }\n    if (fontStyle & 4 /* Underline */) {\n        style += 'underline ';\n    }\n    if (fontStyle & 8 /* Strikethrough */) {\n        style += 'strikethrough ';\n    }\n    if (style === '') {\n        style = 'none';\n    }\n    return style.trim();\n}\nexports.fontStyleToString = fontStyleToString;\n/**\n * Resolve rules (i.e. inheritance).\n */\nfunction resolveParsedThemeRules(parsedThemeRules, _colorMap) {\n    // Sort rules lexicographically, and then by index if necessary\n    parsedThemeRules.sort((a, b) => {\n        let r = utils_1.strcmp(a.scope, b.scope);\n        if (r !== 0) {\n            return r;\n        }\n        r = utils_1.strArrCmp(a.parentScopes, b.parentScopes);\n        if (r !== 0) {\n            return r;\n        }\n        return a.index - b.index;\n    });\n    // Determine defaults\n    let defaultFontStyle = 0 /* None */;\n    let defaultForeground = '#000000';\n    let defaultBackground = '#ffffff';\n    while (parsedThemeRules.length >= 1 && parsedThemeRules[0].scope === '') {\n        let incomingDefaults = parsedThemeRules.shift();\n        if (incomingDefaults.fontStyle !== -1 /* NotSet */) {\n            defaultFontStyle = incomingDefaults.fontStyle;\n        }\n        if (incomingDefaults.foreground !== null) {\n            defaultForeground = incomingDefaults.foreground;\n        }\n        if (incomingDefaults.background !== null) {\n            defaultBackground = incomingDefaults.background;\n        }\n    }\n    let colorMap = new ColorMap(_colorMap);\n    let defaults = new StyleAttributes(defaultFontStyle, colorMap.getId(defaultForeground), colorMap.getId(defaultBackground));\n    let root = new ThemeTrieElement(new ThemeTrieElementRule(0, null, -1 /* NotSet */, 0, 0), []);\n    for (let i = 0, len = parsedThemeRules.length; i < len; i++) {\n        let rule = parsedThemeRules[i];\n        root.insert(0, rule.scope, rule.parentScopes, rule.fontStyle, colorMap.getId(rule.foreground), colorMap.getId(rule.background));\n    }\n    return new Theme(colorMap, defaults, root);\n}\nclass ColorMap {\n    constructor(_colorMap) {\n        this._lastColorId = 0;\n        this._id2color = [];\n        this._color2id = Object.create(null);\n        if (Array.isArray(_colorMap)) {\n            this._isFrozen = true;\n            for (let i = 0, len = _colorMap.length; i < len; i++) {\n                this._color2id[_colorMap[i]] = i;\n                this._id2color[i] = _colorMap[i];\n            }\n        }\n        else {\n            this._isFrozen = false;\n        }\n    }\n    getId(color) {\n        if (color === null) {\n            return 0;\n        }\n        color = color.toUpperCase();\n        let value = this._color2id[color];\n        if (value) {\n            return value;\n        }\n        if (this._isFrozen) {\n            throw new Error(`Missing color in color map - ${color}`);\n        }\n        value = ++this._lastColorId;\n        this._color2id[color] = value;\n        this._id2color[value] = color;\n        return value;\n    }\n    getColorMap() {\n        return this._id2color.slice(0);\n    }\n}\nexports.ColorMap = ColorMap;\nclass ThemeTrieElementRule {\n    constructor(scopeDepth, parentScopes, fontStyle, foreground, background) {\n        this.scopeDepth = scopeDepth;\n        this.parentScopes = parentScopes;\n        this.fontStyle = fontStyle;\n        this.foreground = foreground;\n        this.background = background;\n    }\n    clone() {\n        return new ThemeTrieElementRule(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);\n    }\n    static cloneArr(arr) {\n        let r = [];\n        for (let i = 0, len = arr.length; i < len; i++) {\n            r[i] = arr[i].clone();\n        }\n        return r;\n    }\n    acceptOverwrite(scopeDepth, fontStyle, foreground, background) {\n        if (this.scopeDepth > scopeDepth) {\n            console.log('how did this happen?');\n        }\n        else {\n            this.scopeDepth = scopeDepth;\n        }\n        // console.log('TODO -> my depth: ' + this.scopeDepth + ', overwriting depth: ' + scopeDepth);\n        if (fontStyle !== -1 /* NotSet */) {\n            this.fontStyle = fontStyle;\n        }\n        if (foreground !== 0) {\n            this.foreground = foreground;\n        }\n        if (background !== 0) {\n            this.background = background;\n        }\n    }\n}\nexports.ThemeTrieElementRule = ThemeTrieElementRule;\nclass ThemeTrieElement {\n    constructor(_mainRule, rulesWithParentScopes = [], _children = {}) {\n        this._mainRule = _mainRule;\n        this._children = _children;\n        this._rulesWithParentScopes = rulesWithParentScopes;\n    }\n    static _sortBySpecificity(arr) {\n        if (arr.length === 1) {\n            return arr;\n        }\n        arr.sort(this._cmpBySpecificity);\n        return arr;\n    }\n    static _cmpBySpecificity(a, b) {\n        if (a.scopeDepth === b.scopeDepth) {\n            const aParentScopes = a.parentScopes;\n            const bParentScopes = b.parentScopes;\n            let aParentScopesLen = aParentScopes === null ? 0 : aParentScopes.length;\n            let bParentScopesLen = bParentScopes === null ? 0 : bParentScopes.length;\n            if (aParentScopesLen === bParentScopesLen) {\n                for (let i = 0; i < aParentScopesLen; i++) {\n                    const aLen = aParentScopes[i].length;\n                    const bLen = bParentScopes[i].length;\n                    if (aLen !== bLen) {\n                        return bLen - aLen;\n                    }\n                }\n            }\n            return bParentScopesLen - aParentScopesLen;\n        }\n        return b.scopeDepth - a.scopeDepth;\n    }\n    match(scope) {\n        if (scope === '') {\n            return ThemeTrieElement._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\n        }\n        let dotIndex = scope.indexOf('.');\n        let head;\n        let tail;\n        if (dotIndex === -1) {\n            head = scope;\n            tail = '';\n        }\n        else {\n            head = scope.substring(0, dotIndex);\n            tail = scope.substring(dotIndex + 1);\n        }\n        if (this._children.hasOwnProperty(head)) {\n            return this._children[head].match(tail);\n        }\n        return ThemeTrieElement._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\n    }\n    insert(scopeDepth, scope, parentScopes, fontStyle, foreground, background) {\n        if (scope === '') {\n            this._doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background);\n            return;\n        }\n        let dotIndex = scope.indexOf('.');\n        let head;\n        let tail;\n        if (dotIndex === -1) {\n            head = scope;\n            tail = '';\n        }\n        else {\n            head = scope.substring(0, dotIndex);\n            tail = scope.substring(dotIndex + 1);\n        }\n        let child;\n        if (this._children.hasOwnProperty(head)) {\n            child = this._children[head];\n        }\n        else {\n            child = new ThemeTrieElement(this._mainRule.clone(), ThemeTrieElementRule.cloneArr(this._rulesWithParentScopes));\n            this._children[head] = child;\n        }\n        child.insert(scopeDepth + 1, tail, parentScopes, fontStyle, foreground, background);\n    }\n    _doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background) {\n        if (parentScopes === null) {\n            // Merge into the main rule\n            this._mainRule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n            return;\n        }\n        // Try to merge into existing rule\n        for (let i = 0, len = this._rulesWithParentScopes.length; i < len; i++) {\n            let rule = this._rulesWithParentScopes[i];\n            if (utils_1.strArrCmp(rule.parentScopes, parentScopes) === 0) {\n                // bingo! => we get to merge this into an existing one\n                rule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n                return;\n            }\n        }\n        // Must add a new rule\n        // Inherit from main rule\n        if (fontStyle === -1 /* NotSet */) {\n            fontStyle = this._mainRule.fontStyle;\n        }\n        if (foreground === 0) {\n            foreground = this._mainRule.foreground;\n        }\n        if (background === 0) {\n            background = this._mainRule.background;\n        }\n        this._rulesWithParentScopes.push(new ThemeTrieElementRule(scopeDepth, parentScopes, fontStyle, foreground, background));\n    }\n}\nexports.ThemeTrieElement = ThemeTrieElement;\n//# sourceMappingURL=theme.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.performanceNow = exports.CachedFn = exports.escapeRegExpCharacters = exports.isValidHexColor = exports.strArrCmp = exports.strcmp = exports.RegexSource = exports.basename = exports.mergeObjects = exports.clone = void 0;\nfunction clone(something) {\n    return doClone(something);\n}\nexports.clone = clone;\nfunction doClone(something) {\n    if (Array.isArray(something)) {\n        return cloneArray(something);\n    }\n    if (typeof something === 'object') {\n        return cloneObj(something);\n    }\n    return something;\n}\nfunction cloneArray(arr) {\n    let r = [];\n    for (let i = 0, len = arr.length; i < len; i++) {\n        r[i] = doClone(arr[i]);\n    }\n    return r;\n}\nfunction cloneObj(obj) {\n    let r = {};\n    for (let key in obj) {\n        r[key] = doClone(obj[key]);\n    }\n    return r;\n}\nfunction mergeObjects(target, ...sources) {\n    sources.forEach(source => {\n        for (let key in source) {\n            target[key] = source[key];\n        }\n    });\n    return target;\n}\nexports.mergeObjects = mergeObjects;\nfunction basename(path) {\n    const idx = ~path.lastIndexOf('/') || ~path.lastIndexOf('\\\\');\n    if (idx === 0) {\n        return path;\n    }\n    else if (~idx === path.length - 1) {\n        return basename(path.substring(0, path.length - 1));\n    }\n    else {\n        return path.substr(~idx + 1);\n    }\n}\nexports.basename = basename;\nlet CAPTURING_REGEX_SOURCE = /\\$(\\d+)|\\${(\\d+):\\/(downcase|upcase)}/g;\nclass RegexSource {\n    static hasCaptures(regexSource) {\n        if (regexSource === null) {\n            return false;\n        }\n        CAPTURING_REGEX_SOURCE.lastIndex = 0;\n        return CAPTURING_REGEX_SOURCE.test(regexSource);\n    }\n    static replaceCaptures(regexSource, captureSource, captureIndices) {\n        return regexSource.replace(CAPTURING_REGEX_SOURCE, (match, index, commandIndex, command) => {\n            let capture = captureIndices[parseInt(index || commandIndex, 10)];\n            if (capture) {\n                let result = captureSource.substring(capture.start, capture.end);\n                // Remove leading dots that would make the selector invalid\n                while (result[0] === '.') {\n                    result = result.substring(1);\n                }\n                switch (command) {\n                    case 'downcase':\n                        return result.toLowerCase();\n                    case 'upcase':\n                        return result.toUpperCase();\n                    default:\n                        return result;\n                }\n            }\n            else {\n                return match;\n            }\n        });\n    }\n}\nexports.RegexSource = RegexSource;\nfunction strcmp(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\nexports.strcmp = strcmp;\nfunction strArrCmp(a, b) {\n    if (a === null && b === null) {\n        return 0;\n    }\n    if (!a) {\n        return -1;\n    }\n    if (!b) {\n        return 1;\n    }\n    let len1 = a.length;\n    let len2 = b.length;\n    if (len1 === len2) {\n        for (let i = 0; i < len1; i++) {\n            let res = strcmp(a[i], b[i]);\n            if (res !== 0) {\n                return res;\n            }\n        }\n        return 0;\n    }\n    return len1 - len2;\n}\nexports.strArrCmp = strArrCmp;\nfunction isValidHexColor(hex) {\n    if (/^#[0-9a-f]{6}$/i.test(hex)) {\n        // #rrggbb\n        return true;\n    }\n    if (/^#[0-9a-f]{8}$/i.test(hex)) {\n        // #rrggbbaa\n        return true;\n    }\n    if (/^#[0-9a-f]{3}$/i.test(hex)) {\n        // #rgb\n        return true;\n    }\n    if (/^#[0-9a-f]{4}$/i.test(hex)) {\n        // #rgba\n        return true;\n    }\n    return false;\n}\nexports.isValidHexColor = isValidHexColor;\n/**\n * Escapes regular expression characters in a given string\n */\nfunction escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\n}\nexports.escapeRegExpCharacters = escapeRegExpCharacters;\nclass CachedFn {\n    constructor(fn) {\n        this.fn = fn;\n        this.cache = new Map();\n    }\n    get(key) {\n        if (this.cache.has(key)) {\n            return this.cache.get(key);\n        }\n        const value = this.fn(key);\n        this.cache.set(key, value);\n        return value;\n    }\n}\nexports.CachedFn = CachedFn;\nexports.performanceNow = typeof performance === \"undefined\"\n    // performance.now() is not available in this environment, so use Date.now()\n    ? function () {\n        return Date.now();\n    }\n    : function () {\n        return performance.now();\n    };\n//# sourceMappingURL=utils.js.map", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(787);\n", "!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.onig=t():e.onig=t()}(this,(()=>{return e={770:function(e,t,n){\"use strict\";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\"__esModule\",{value:!0}),t.setDefaultDebugCall=t.createOnigScanner=t.createOnigString=t.loadWASM=t.OnigScanner=t.OnigString=void 0;const i=r(n(418));let o=null,a=!1;class s{static _utf8ByteLength(e){let t=0;for(let n=0,r=e.length;n<r;n++){const i=e.charCodeAt(n);let o=i,a=!1;if(i>=55296&&i<=56319&&n+1<r){const t=e.charCodeAt(n+1);t>=56320&&t<=57343&&(o=65536+(i-55296<<10)|t-56320,a=!0)}t+=o<=127?1:o<=2047?2:o<=65535?3:4,a&&n++}return t}constructor(e){const t=e.length,n=s._utf8ByteLength(e),r=n!==t,i=r?new Uint32Array(t+1):null;r&&(i[t]=n);const o=r?new Uint32Array(n+1):null;r&&(o[n]=t);const a=new Uint8Array(n);let f=0;for(let n=0;n<t;n++){const s=e.charCodeAt(n);let u=s,c=!1;if(s>=55296&&s<=56319&&n+1<t){const t=e.charCodeAt(n+1);t>=56320&&t<=57343&&(u=65536+(s-55296<<10)|t-56320,c=!0)}r&&(i[n]=f,c&&(i[n+1]=f),u<=127?o[f+0]=n:u<=2047?(o[f+0]=n,o[f+1]=n):u<=65535?(o[f+0]=n,o[f+1]=n,o[f+2]=n):(o[f+0]=n,o[f+1]=n,o[f+2]=n,o[f+3]=n)),u<=127?a[f++]=u:u<=2047?(a[f++]=192|(1984&u)>>>6,a[f++]=128|(63&u)>>>0):u<=65535?(a[f++]=224|(61440&u)>>>12,a[f++]=128|(4032&u)>>>6,a[f++]=128|(63&u)>>>0):(a[f++]=240|(1835008&u)>>>18,a[f++]=128|(258048&u)>>>12,a[f++]=128|(4032&u)>>>6,a[f++]=128|(63&u)>>>0),c&&n++}this.utf16Length=t,this.utf8Length=n,this.utf16Value=e,this.utf8Value=a,this.utf16OffsetToUtf8=i,this.utf8OffsetToUtf16=o}createString(e){const t=e._omalloc(this.utf8Length);return e.HEAPU8.set(this.utf8Value,t),t}}class f{constructor(e){if(this.id=++f.LAST_ID,!o)throw new Error(\"Must invoke loadWASM first.\");this._onigBinding=o,this.content=e;const t=new s(e);this.utf16Length=t.utf16Length,this.utf8Length=t.utf8Length,this.utf16OffsetToUtf8=t.utf16OffsetToUtf8,this.utf8OffsetToUtf16=t.utf8OffsetToUtf16,this.utf8Length<1e4&&!f._sharedPtrInUse?(f._sharedPtr||(f._sharedPtr=o._omalloc(1e4)),f._sharedPtrInUse=!0,o.HEAPU8.set(t.utf8Value,f._sharedPtr),this.ptr=f._sharedPtr):this.ptr=t.createString(o)}convertUtf8OffsetToUtf16(e){return this.utf8OffsetToUtf16?e<0?0:e>this.utf8Length?this.utf16Length:this.utf8OffsetToUtf16[e]:e}convertUtf16OffsetToUtf8(e){return this.utf16OffsetToUtf8?e<0?0:e>this.utf16Length?this.utf8Length:this.utf16OffsetToUtf8[e]:e}dispose(){this.ptr===f._sharedPtr?f._sharedPtrInUse=!1:this._onigBinding._ofree(this.ptr)}}t.OnigString=f,f.LAST_ID=0,f._sharedPtr=0,f._sharedPtrInUse=!1;class u{constructor(e,t){var n,r;if(!o)throw new Error(\"Must invoke loadWASM first.\");const i=[],a=[];for(let t=0,n=e.length;t<n;t++){const n=new s(e[t]);i[t]=n.createString(o),a[t]=n.utf8Length}const f=o._omalloc(4*e.length);o.HEAPU32.set(i,f/4);const u=o._omalloc(4*e.length);o.HEAPU32.set(a,u/4),this._onigBinding=o,this._options=null!==(n=null==t?void 0:t.options)&&void 0!==n?n:[10];const c=this.onigOptions(this._options),_=this.onigSyntax(null!==(r=null==t?void 0:t.syntax)&&void 0!==r?r:0),d=o._createOnigScanner(f,u,e.length,c,_);this._ptr=d;for(let t=0,n=e.length;t<n;t++)o._ofree(i[t]);o._ofree(u),o._ofree(f),0===d&&function(e){throw new Error(e.UTF8ToString(e._getLastOnigError()))}(o)}dispose(){this._onigBinding._freeOnigScanner(this._ptr)}findNextMatchSync(e,t,n){let r=a,i=this._options;if(Array.isArray(n)?(n.includes(25)&&(r=!0),i=i.concat(n)):\"boolean\"==typeof n&&(r=n),\"string\"==typeof e){e=new f(e);const n=this._findNextMatchSync(e,t,r,i);return e.dispose(),n}return this._findNextMatchSync(e,t,r,i)}_findNextMatchSync(e,t,n,r){const i=this._onigBinding,o=this.onigOptions(r);let a;if(a=n?i._findNextOnigScannerMatchDbg(this._ptr,e.id,e.ptr,e.utf8Length,e.convertUtf16OffsetToUtf8(t),o):i._findNextOnigScannerMatch(this._ptr,e.id,e.ptr,e.utf8Length,e.convertUtf16OffsetToUtf8(t),o),0===a)return null;const s=i.HEAPU32;let f=a/4;const u=s[f++],c=s[f++];let _=[];for(let t=0;t<c;t++){const n=e.convertUtf8OffsetToUtf16(s[f++]),r=e.convertUtf8OffsetToUtf16(s[f++]);_[t]={start:n,end:r,length:r-n}}return{index:u,captureIndices:_}}onigOptions(e){return e.map((e=>this.onigOption(e))).reduce(((e,t)=>e|t),this._onigBinding.ONIG_OPTION_NONE)}onigSyntax(e){switch(e){case 0:return this._onigBinding.ONIG_SYNTAX_DEFAULT;case 1:return this._onigBinding.ONIG_SYNTAX_ASIS;case 2:return this._onigBinding.ONIG_SYNTAX_POSIX_BASIC;case 3:return this._onigBinding.ONIG_SYNTAX_POSIX_EXTENDED;case 4:return this._onigBinding.ONIG_SYNTAX_EMACS;case 5:return this._onigBinding.ONIG_SYNTAX_GREP;case 6:return this._onigBinding.ONIG_SYNTAX_GNU_REGEX;case 7:return this._onigBinding.ONIG_SYNTAX_JAVA;case 8:return this._onigBinding.ONIG_SYNTAX_PERL;case 9:return this._onigBinding.ONIG_SYNTAX_PERL_NG;case 10:return this._onigBinding.ONIG_SYNTAX_RUBY;case 11:return this._onigBinding.ONIG_SYNTAX_PYTHON;case 12:return this._onigBinding.ONIG_SYNTAX_ONIGURUMA}}onigOption(e){switch(e){case 1:return this._onigBinding.ONIG_OPTION_NONE;case 0:case 25:return this._onigBinding.ONIG_OPTION_DEFAULT;case 2:return this._onigBinding.ONIG_OPTION_IGNORECASE;case 3:return this._onigBinding.ONIG_OPTION_EXTEND;case 4:return this._onigBinding.ONIG_OPTION_MULTILINE;case 5:return this._onigBinding.ONIG_OPTION_SINGLELINE;case 6:return this._onigBinding.ONIG_OPTION_FIND_LONGEST;case 7:return this._onigBinding.ONIG_OPTION_FIND_NOT_EMPTY;case 8:return this._onigBinding.ONIG_OPTION_NEGATE_SINGLELINE;case 9:return this._onigBinding.ONIG_OPTION_DONT_CAPTURE_GROUP;case 10:return this._onigBinding.ONIG_OPTION_CAPTURE_GROUP;case 11:return this._onigBinding.ONIG_OPTION_NOTBOL;case 12:return this._onigBinding.ONIG_OPTION_NOTEOL;case 13:return this._onigBinding.ONIG_OPTION_CHECK_VALIDITY_OF_STRING;case 14:return this._onigBinding.ONIG_OPTION_IGNORECASE_IS_ASCII;case 15:return this._onigBinding.ONIG_OPTION_WORD_IS_ASCII;case 16:return this._onigBinding.ONIG_OPTION_DIGIT_IS_ASCII;case 17:return this._onigBinding.ONIG_OPTION_SPACE_IS_ASCII;case 18:return this._onigBinding.ONIG_OPTION_POSIX_IS_ASCII;case 19:return this._onigBinding.ONIG_OPTION_TEXT_SEGMENT_EXTENDED_GRAPHEME_CLUSTER;case 20:return this._onigBinding.ONIG_OPTION_TEXT_SEGMENT_WORD;case 21:return this._onigBinding.ONIG_OPTION_NOT_BEGIN_STRING;case 22:return this._onigBinding.ONIG_OPTION_NOT_END_STRING;case 23:return this._onigBinding.ONIG_OPTION_NOT_BEGIN_POSITION;case 24:return this._onigBinding.ONIG_OPTION_CALLBACK_EACH_MATCH}}}t.OnigScanner=u;let c=!1,_=null;t.loadWASM=function(e){if(c)return _;let t,n,r,a;if(c=!0,function(e){return\"function\"==typeof e.instantiator}(e))t=e.instantiator,n=e.print;else{let r;!function(e){return void 0!==e.data}(e)?r=e:(r=e.data,n=e.print),t=function(e){return\"undefined\"!=typeof Response&&e instanceof Response}(r)?\"function\"==typeof WebAssembly.instantiateStreaming?function(e){return t=>WebAssembly.instantiateStreaming(e,t)}(r):function(e){return async t=>{const n=await e.arrayBuffer();return WebAssembly.instantiate(n,t)}}(r):function(e){return t=>WebAssembly.instantiate(e,t)}(r)}return _=new Promise(((e,t)=>{r=e,a=t})),function(e,t,n,r){(0,i.default)({print:t,instantiateWasm:(t,n)=>{if(\"undefined\"==typeof performance){const e=()=>Date.now();t.env.emscripten_get_now=e,t.wasi_snapshot_preview1.emscripten_get_now=e}return e(t).then((e=>n(e.instance)),r),{}}}).then((e=>{o=e,n()}))}(t,n,r,a),_},t.createOnigString=function(e){return new f(e)},t.createOnigScanner=function(e){return new u(e)},t.setDefaultDebugCall=function(e){a=e}},418:e=>{var t=(\"undefined\"!=typeof document&&document.currentScript&&document.currentScript.src,function(e={}){var t,n,r=e;r.ready=new Promise(((e,r)=>{t=e,n=r}));var i,o=Object.assign({},r);\"undefined\"!=typeof read&&read,i=e=>{if(\"function\"==typeof readbuffer)return new Uint8Array(readbuffer(e));let t=read(e,\"binary\");return\"object\"==typeof t||P(n),t;var n},\"undefined\"==typeof clearTimeout&&(globalThis.clearTimeout=e=>{}),\"undefined\"==typeof setTimeout&&(globalThis.setTimeout=e=>\"function\"==typeof e?e():P()),\"undefined\"!=typeof scriptArgs&&scriptArgs,\"undefined\"!=typeof onig_print&&(\"undefined\"==typeof console&&(console={}),console.log=onig_print,console.warn=console.error=\"undefined\"!=typeof printErr?printErr:onig_print);var a,s,f=r.print||console.log.bind(console),u=r.printErr||console.error.bind(console);Object.assign(r,o),o=null,r.arguments&&r.arguments,r.thisProgram&&r.thisProgram,r.quit&&r.quit,r.wasmBinary&&(a=r.wasmBinary),r.noExitRuntime,\"object\"!=typeof WebAssembly&&P(\"no native wasm support detected\");var c,_,d,g,l,h,p,O,v=!1;function m(){var e=s.buffer;r.HEAP8=c=new Int8Array(e),r.HEAP16=d=new Int16Array(e),r.HEAPU8=_=new Uint8Array(e),r.HEAPU16=g=new Uint16Array(e),r.HEAP32=l=new Int32Array(e),r.HEAPU32=h=new Uint32Array(e),r.HEAPF32=p=new Float32Array(e),r.HEAPF64=O=new Float64Array(e)}var y=[],I=[],T=[];var N=0,A=null,S=null;function P(e){r.onAbort&&r.onAbort(e),u(e=\"Aborted(\"+e+\")\"),v=!0,e+=\". Build with -sASSERTIONS for more info.\";var t=new WebAssembly.RuntimeError(e);throw n(t),t}var E,w;function b(e){return e.startsWith(\"data:application/octet-stream;base64,\")}function C(e){if(e==E&&a)return new Uint8Array(a);if(i)return i(e);throw\"both async and sync fetching of the wasm failed\"}function U(e,t,n){return function(e){return Promise.resolve().then((()=>C(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(n,(e=>{u(`failed to asynchronously prepare wasm: ${e}`),P(e)}))}b(E=\"onig.wasm\")||(w=E,E=r.locateFile?r.locateFile(w,\"\"):\"\"+w);var G=e=>{for(;e.length>0;)e.shift()(r)},B=void 0,R=e=>{for(var t=\"\",n=e;_[n];)t+=B[_[n++]];return t},W={},L={},D={},x=void 0,M=e=>{throw new x(e)},F=void 0,X=(e,t,n)=>{function r(t){var r=n(t);r.length!==e.length&&(e=>{throw new F(e)})(\"Mismatched type converter count\");for(var i=0;i<e.length;++i)k(e[i],r[i])}e.forEach((function(e){D[e]=t}));var i=new Array(t.length),o=[],a=0;t.forEach(((e,t)=>{L.hasOwnProperty(e)?i[t]=L[e]:(o.push(e),W.hasOwnProperty(e)||(W[e]=[]),W[e].push((()=>{i[t]=L[e],++a===o.length&&r(i)})))})),0===o.length&&r(i)};function k(e,t,n={}){if(!(\"argPackAdvance\"in t))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");return function(e,t,n={}){var r=t.name;if(e||M(`type \"${r}\" must have a positive integer typeid pointer`),L.hasOwnProperty(e)){if(n.ignoreDuplicateRegistrations)return;M(`Cannot register type '${r}' twice`)}if(L[e]=t,delete D[e],W.hasOwnProperty(e)){var i=W[e];delete W[e],i.forEach((e=>e()))}}(e,t,n)}function H(){this.allocated=[void 0],this.freelist=[]}var Y=new H,j=()=>{for(var e=0,t=Y.reserved;t<Y.allocated.length;++t)void 0!==Y.allocated[t]&&++e;return e},V=e=>(e||M(\"Cannot use deleted val. handle = \"+e),Y.get(e).value),$=e=>{switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return Y.allocate({refcount:1,value:e})}};function z(e){return this.fromWireType(l[e>>2])}var q=(e,t)=>{switch(t){case 4:return function(e){return this.fromWireType(p[e>>2])};case 8:return function(e){return this.fromWireType(O[e>>3])};default:throw new TypeError(`invalid float width (${t}): ${e}`)}},K=(e,t,n)=>{switch(t){case 1:return n?e=>c[e>>0]:e=>_[e>>0];case 2:return n?e=>d[e>>1]:e=>g[e>>1];case 4:return n?e=>l[e>>2]:e=>h[e>>2];default:throw new TypeError(`invalid integer width (${t}): ${e}`)}};function J(e){return this.fromWireType(h[e>>2])}var Q,Z=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0,ee=(e,t,n)=>{for(var r=t+n,i=t;e[i]&&!(i>=r);)++i;if(i-t>16&&e.buffer&&Z)return Z.decode(e.subarray(t,i));for(var o=\"\";t<i;){var a=e[t++];if(128&a){var s=63&e[t++];if(192!=(224&a)){var f=63&e[t++];if((a=224==(240&a)?(15&a)<<12|s<<6|f:(7&a)<<18|s<<12|f<<6|63&e[t++])<65536)o+=String.fromCharCode(a);else{var u=a-65536;o+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else o+=String.fromCharCode((31&a)<<6|s)}else o+=String.fromCharCode(a)}return o},te=(e,t)=>e?ee(_,e,t):\"\",ne=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0,re=(e,t)=>{for(var n=e,r=n>>1,i=r+t/2;!(r>=i)&&g[r];)++r;if((n=r<<1)-e>32&&ne)return ne.decode(_.subarray(e,n));for(var o=\"\",a=0;!(a>=t/2);++a){var s=d[e+2*a>>1];if(0==s)break;o+=String.fromCharCode(s)}return o},ie=(e,t,n)=>{if(void 0===n&&(n=2147483647),n<2)return 0;for(var r=t,i=(n-=2)<2*e.length?n/2:e.length,o=0;o<i;++o){var a=e.charCodeAt(o);d[t>>1]=a,t+=2}return d[t>>1]=0,t-r},oe=e=>2*e.length,ae=(e,t)=>{for(var n=0,r=\"\";!(n>=t/4);){var i=l[e+4*n>>2];if(0==i)break;if(++n,i>=65536){var o=i-65536;r+=String.fromCharCode(55296|o>>10,56320|1023&o)}else r+=String.fromCharCode(i)}return r},se=(e,t,n)=>{if(void 0===n&&(n=2147483647),n<4)return 0;for(var r=t,i=r+n-4,o=0;o<e.length;++o){var a=e.charCodeAt(o);if(a>=55296&&a<=57343&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++o)),l[t>>2]=a,(t+=4)+4>i)break}return l[t>>2]=0,t-r},fe=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&++n,t+=4}return t};Q=()=>performance.now();var ue=e=>{var t=(e-s.buffer.byteLength+65535)/65536;try{return s.grow(t),m(),1}catch(e){}},ce=[null,[],[]];(()=>{for(var e=new Array(256),t=0;t<256;++t)e[t]=String.fromCharCode(t);B=e})(),x=r.BindingError=class extends Error{constructor(e){super(e),this.name=\"BindingError\"}},F=r.InternalError=class extends Error{constructor(e){super(e),this.name=\"InternalError\"}},Object.assign(H.prototype,{get(e){return this.allocated[e]},has(e){return void 0!==this.allocated[e]},allocate(e){var t=this.freelist.pop()||this.allocated.length;return this.allocated[t]=e,t},free(e){this.allocated[e]=void 0,this.freelist.push(e)}}),Y.allocated.push({value:void 0},{value:null},{value:!0},{value:!1}),Y.reserved=Y.allocated.length,r.count_emval_handles=j;var _e,de={_embind_register_bigint:(e,t,n,r,i)=>{},_embind_register_bool:(e,t,n,r)=>{k(e,{name:t=R(t),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?n:r},argPackAdvance:8,readValueFromPointer:function(e){return this.fromWireType(_[e])},destructorFunction:null})},_embind_register_constant:(e,t,n)=>{e=R(e),X([],[t],(function(t){return t=t[0],r[e]=t.fromWireType(n),[]}))},_embind_register_emval:(e,t)=>{k(e,{name:t=R(t),fromWireType:e=>{var t=V(e);return(e=>{e>=Y.reserved&&0==--Y.get(e).refcount&&Y.free(e)})(e),t},toWireType:(e,t)=>$(t),argPackAdvance:8,readValueFromPointer:z,destructorFunction:null})},_embind_register_float:(e,t,n)=>{k(e,{name:t=R(t),fromWireType:e=>e,toWireType:(e,t)=>t,argPackAdvance:8,readValueFromPointer:q(t,n),destructorFunction:null})},_embind_register_integer:(e,t,n,r,i)=>{t=R(t),-1===i&&(i=4294967295);var o=e=>e;if(0===r){var a=32-8*n;o=e=>e<<a>>>a}var s=t.includes(\"unsigned\");k(e,{name:t,fromWireType:o,toWireType:s?function(e,t){return this.name,t>>>0}:function(e,t){return this.name,t},argPackAdvance:8,readValueFromPointer:K(t,n,0!==r),destructorFunction:null})},_embind_register_memory_view:(e,t,n)=>{var r=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][t];function i(e){var t=h[e>>2],n=h[e+4>>2];return new r(c.buffer,n,t)}k(e,{name:n=R(n),fromWireType:i,argPackAdvance:8,readValueFromPointer:i},{ignoreDuplicateRegistrations:!0})},_embind_register_std_string:(e,t)=>{var n=\"std::string\"===(t=R(t));k(e,{name:t,fromWireType:e=>{var t,r=h[e>>2],i=e+4;if(n)for(var o=i,a=0;a<=r;++a){var s=i+a;if(a==r||0==_[s]){var f=te(o,s-o);void 0===t?t=f:(t+=String.fromCharCode(0),t+=f),o=s+1}}else{var u=new Array(r);for(a=0;a<r;++a)u[a]=String.fromCharCode(_[i+a]);t=u.join(\"\")}return he(e),t},toWireType:(e,t)=>{var r;t instanceof ArrayBuffer&&(t=new Uint8Array(t));var i=\"string\"==typeof t;i||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array||M(\"Cannot pass non-string to std::string\"),r=n&&i?(e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r<=127?t++:r<=2047?t+=2:r>=55296&&r<=57343?(t+=4,++n):t+=3}return t})(t):t.length;var o=le(4+r+1),a=o+4;if(h[o>>2]=r,n&&i)((e,t,n,r)=>{if(!(r>0))return 0;for(var i=n,o=n+r-1,a=0;a<e.length;++a){var s=e.charCodeAt(a);if(s>=55296&&s<=57343&&(s=65536+((1023&s)<<10)|1023&e.charCodeAt(++a)),s<=127){if(n>=o)break;t[n++]=s}else if(s<=2047){if(n+1>=o)break;t[n++]=192|s>>6,t[n++]=128|63&s}else if(s<=65535){if(n+2>=o)break;t[n++]=224|s>>12,t[n++]=128|s>>6&63,t[n++]=128|63&s}else{if(n+3>=o)break;t[n++]=240|s>>18,t[n++]=128|s>>12&63,t[n++]=128|s>>6&63,t[n++]=128|63&s}}t[n]=0})(t,_,a,r+1);else if(i)for(var s=0;s<r;++s){var f=t.charCodeAt(s);f>255&&(he(a),M(\"String has UTF-16 code units that do not fit in 8 bits\")),_[a+s]=f}else for(s=0;s<r;++s)_[a+s]=t[s];return null!==e&&e.push(he,o),o},argPackAdvance:8,readValueFromPointer:J,destructorFunction:e=>he(e)})},_embind_register_std_wstring:(e,t,n)=>{var r,i,o,a,s;n=R(n),2===t?(r=re,i=ie,a=oe,o=()=>g,s=1):4===t&&(r=ae,i=se,a=fe,o=()=>h,s=2),k(e,{name:n,fromWireType:e=>{for(var n,i=h[e>>2],a=o(),f=e+4,u=0;u<=i;++u){var c=e+4+u*t;if(u==i||0==a[c>>s]){var _=r(f,c-f);void 0===n?n=_:(n+=String.fromCharCode(0),n+=_),f=c+t}}return he(e),n},toWireType:(e,r)=>{\"string\"!=typeof r&&M(`Cannot pass non-string to C++ string type ${n}`);var o=a(r),f=le(4+o+t);return h[f>>2]=o>>s,i(r,f+4,o+t),null!==e&&e.push(he,f),f},argPackAdvance:8,readValueFromPointer:z,destructorFunction:e=>he(e)})},_embind_register_void:(e,t)=>{k(e,{isVoid:!0,name:t=R(t),argPackAdvance:0,fromWireType:()=>{},toWireType:(e,t)=>{}})},emscripten_get_now:Q,emscripten_memcpy_big:(e,t,n)=>_.copyWithin(e,t,t+n),emscripten_resize_heap:e=>{var t=_.length,n=2147483648;if((e>>>=0)>n)return!1;for(var r,i=1;i<=4;i*=2){var o=t*(1+.2/i);o=Math.min(o,e+100663296);var a=Math.min(n,(r=Math.max(e,o))+(65536-r%65536)%65536);if(ue(a))return!0}return!1},fd_write:(e,t,n,r)=>{for(var i=0,o=0;o<n;o++){var a=h[t>>2],s=h[t+4>>2];t+=8;for(var c=0;c<s;c++)d=e,g=_[a+c],l=void 0,l=ce[d],0===g||10===g?((1===d?f:u)(ee(l,0)),l.length=0):l.push(g);i+=s}var d,g,l;return h[r>>2]=i,0}},ge=function(){var e,t,i,o,f={env:de,wasi_snapshot_preview1:de};function c(e,t){var n,i=e.exports;return s=(ge=i).memory,m(),ge.__indirect_function_table,n=ge.__wasm_call_ctors,I.unshift(n),function(e){if(N--,r.monitorRunDependencies&&r.monitorRunDependencies(N),0==N&&(null!==A&&(clearInterval(A),A=null),S)){var t=S;S=null,t()}}(),i}if(N++,r.monitorRunDependencies&&r.monitorRunDependencies(N),r.instantiateWasm)try{return r.instantiateWasm(f,c)}catch(e){u(`Module.instantiateWasm callback failed with error: ${e}`),n(e)}return(e=a,t=E,i=f,o=function(e){c(e.instance)},e||\"function\"!=typeof WebAssembly.instantiateStreaming||b(t)||\"function\"!=typeof fetch?U(t,i,o):fetch(t,{credentials:\"same-origin\"}).then((e=>WebAssembly.instantiateStreaming(e,i).then(o,(function(e){return u(`wasm streaming compile failed: ${e}`),u(\"falling back to ArrayBuffer instantiation\"),U(t,i,o)}))))).catch(n),{}}(),le=e=>(le=ge.malloc)(e),he=e=>(he=ge.free)(e);function pe(){function e(){_e||(_e=!0,r.calledRun=!0,v||(G(I),t(r),r.onRuntimeInitialized&&r.onRuntimeInitialized(),function(){if(r.postRun)for(\"function\"==typeof r.postRun&&(r.postRun=[r.postRun]);r.postRun.length;)e=r.postRun.shift(),T.unshift(e);var e;G(T)}()))}N>0||(function(){if(r.preRun)for(\"function\"==typeof r.preRun&&(r.preRun=[r.preRun]);r.preRun.length;)e=r.preRun.shift(),y.unshift(e);var e;G(y)}(),N>0||(r.setStatus?(r.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){r.setStatus(\"\")}),1),e()}),1)):e()))}if(r._omalloc=e=>(r._omalloc=ge.omalloc)(e),r._ofree=e=>(r._ofree=ge.ofree)(e),r._getLastOnigError=()=>(r._getLastOnigError=ge.getLastOnigError)(),r._createOnigScanner=(e,t,n,i,o)=>(r._createOnigScanner=ge.createOnigScanner)(e,t,n,i,o),r._freeOnigScanner=e=>(r._freeOnigScanner=ge.freeOnigScanner)(e),r._findNextOnigScannerMatch=(e,t,n,i,o,a)=>(r._findNextOnigScannerMatch=ge.findNextOnigScannerMatch)(e,t,n,i,o,a),r._findNextOnigScannerMatchDbg=(e,t,n,i,o,a)=>(r._findNextOnigScannerMatchDbg=ge.findNextOnigScannerMatchDbg)(e,t,n,i,o,a),r.__embind_initialize_bindings=()=>(r.__embind_initialize_bindings=ge._embind_initialize_bindings)(),r.dynCall_jiji=(e,t,n,i,o)=>(r.dynCall_jiji=ge.dynCall_jiji)(e,t,n,i,o),r.UTF8ToString=te,S=function e(){_e||pe(),_e||(S=e)},r.preInit)for(\"function\"==typeof r.preInit&&(r.preInit=[r.preInit]);r.preInit.length>0;)r.preInit.pop()();return pe(),e.ready});e.exports=t}},t={},function n(r){var i=t[r];if(void 0!==i)return i.exports;var o=t[r]={exports:{}};return e[r].call(o.exports,o,o.exports,n),o.exports}(770);var e,t}));", "import { __decorate, __param } from '../external/tslib/tslib.es6.js';\nimport '../missing-services.js';\nimport { StandaloneServices } from 'monaco-editor/esm/vs/editor/standalone/browser/standaloneServices.js';\nimport { ITextMateTokenizationService } from '../vscode/src/vs/workbench/services/textMate/browser/textMateTokenizationFeature.js';\nimport { SyncDescriptor } from 'monaco-editor/esm/vs/platform/instantiation/common/descriptors.js';\nimport { TextMateTokenizationFeature } from '../vscode/src/vs/workbench/services/textMate/browser/textMateTokenizationFeatureImpl.js';\nimport { TokenClassificationExtensionPoints } from '../vscode/src/vs/workbench/services/themes/common/tokenClassificationExtensionPoint.js';\nimport { Extensions } from '../vscode/src/vs/workbench/common/contributions.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { ILifecycleService } from '../vscode/src/vs/workbench/services/lifecycle/common/lifecycle.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport getServiceOverride$1 from './files.js';\nimport { registerServiceInitializeParticipant } from '../lifecycle.js';\nimport { registerAssets } from '../assets.js';\nconst _onigWasm = new URL(\"/home/jsimek/MUNI/diplomka/camel-learning-tool/vite-project/node_modules/vscode-oniguruma/release/onig.wasm\", import.meta.url).href;\nregisterAssets({\n    'vscode-oniguruma/../onig.wasm': _onigWasm,\n    'vs/../../node_modules/vscode-oniguruma/release/onig.wasm': _onigWasm\n});\nregisterServiceInitializeParticipant(async (accessor) => {\n    void accessor.get(ILifecycleService).when(2 ).then(() => {\n        StandaloneServices.get(ITextMateTokenizationService);\n    });\n});\nlet ExtensionPoints = class ExtensionPoints {\n    constructor(instantiationService) {\n        this.instantiationService = instantiationService;\n        this.instantiationService.createInstance(TokenClassificationExtensionPoints);\n    }\n};\nExtensionPoints = __decorate([\n    ( __param(0, IInstantiationService))\n], ExtensionPoints);\n( Registry.as(Extensions.Workbench)).registerWorkbenchContribution(ExtensionPoints, 1 );\nfunction getServiceOverride() {\n    return {\n        ...getServiceOverride$1(),\n        [( ITextMateTokenizationService.toString())]: new SyncDescriptor(TextMateTokenizationFeature, [], false)\n    };\n}\nexport { ITextMateTokenizationService, getServiceOverride as default };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { equals } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { Color } from 'monaco-editor/esm/vs/base/common/color.js';\nimport { onUnexpectedError } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { Disposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { FileAccess, nodeModulesAsarUnpackedPath, nodeModulesPath } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { observableFromEvent } from 'monaco-editor/esm/vs/base/common/observable.js';\nimport { isWeb } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport * as resources from 'monaco-editor/esm/vs/base/common/resources.js';\nimport * as types from 'monaco-editor/esm/vs/base/common/types.js';\nimport { TokenizationRegistry, LazyTokenizationSupport } from 'monaco-editor/esm/vs/editor/common/languages.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { generateTokensCSSForColorMap } from 'monaco-editor/esm/vs/editor/common/languages/supports/tokenization.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IExtensionResourceLoaderService } from '../../../../platform/extensionResourceLoader/common/extensionResourceLoader.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { IProgressService } from 'monaco-editor/esm/vs/platform/progress/common/progress.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { IWorkbenchEnvironmentService } from '../../environment/common/environmentService.js';\nimport { TextMateTokenizationSupport } from './tokenizationSupport/textMateTokenizationSupport.js';\nimport { TokenizationSupportWithLineLimit } from './tokenizationSupport/tokenizationSupportWithLineLimit.js';\nimport { ThreadedBackgroundTokenizerFactory } from './backgroundTokenization/threadedBackgroundTokenizerFactory.js';\nimport { TMGrammarFactory, missingTMGrammarErrorMessage } from '../common/TMGrammarFactory.js';\nimport { grammarsExtPoint } from '../common/TMGrammars.js';\nimport { IWorkbenchThemeService } from '../../themes/common/workbenchThemeService.js';\nimport * as vscodeTextmate from 'vscode-textmate';\nimport * as vscodeOniguruma from 'vscode-oniguruma';\nvar TextMateTokenizationFeature_1;\nlet TextMateTokenizationFeature = class TextMateTokenizationFeature extends Disposable {\n    static { TextMateTokenizationFeature_1 = this; }\n    static { this.reportTokenizationTimeCounter = { sync: 0, async: 0 }; }\n    constructor(_languageService, _themeService, _extensionResourceLoaderService, _notificationService, _logService, _configurationService, _progressService, _environmentService, _instantiationService, _telemetryService) {\n        super();\n        this._languageService = _languageService;\n        this._themeService = _themeService;\n        this._extensionResourceLoaderService = _extensionResourceLoaderService;\n        this._notificationService = _notificationService;\n        this._logService = _logService;\n        this._configurationService = _configurationService;\n        this._progressService = _progressService;\n        this._environmentService = _environmentService;\n        this._instantiationService = _instantiationService;\n        this._telemetryService = _telemetryService;\n        this._createdModes = [];\n        this._encounteredLanguages = [];\n        this._debugMode = false;\n        this._debugModePrintFunc = () => { };\n        this._grammarDefinitions = null;\n        this._grammarFactory = null;\n        this._tokenizersRegistrations = ( new DisposableStore());\n        this._currentTheme = null;\n        this._currentTokenColorMap = null;\n        this._threadedBackgroundTokenizerFactory = this._instantiationService.createInstance(ThreadedBackgroundTokenizerFactory, (timeMs, languageId, sourceExtensionId, lineLength, isRandomSample) => this._reportTokenizationTime(timeMs, languageId, sourceExtensionId, lineLength, true, isRandomSample), () => this.getAsyncTokenizationEnabled());\n        this._vscodeOniguruma = null;\n        this._styleElement = dom.createStyleSheet();\n        this._styleElement.className = 'vscode-tokens-styles';\n        grammarsExtPoint.setHandler((extensions) => this._handleGrammarsExtPoint(extensions));\n        this._updateTheme(this._themeService.getColorTheme(), true);\n        this._register(this._themeService.onDidColorThemeChange(() => {\n            this._updateTheme(this._themeService.getColorTheme(), false);\n        }));\n        this._languageService.onDidRequestRichLanguageFeatures((languageId) => {\n            this._createdModes.push(languageId);\n        });\n    }\n    getAsyncTokenizationEnabled() {\n        return !!this._configurationService.getValue('editor.experimental.asyncTokenization');\n    }\n    getAsyncTokenizationVerification() {\n        return !!this._configurationService.getValue('editor.experimental.asyncTokenizationVerification');\n    }\n    _handleGrammarsExtPoint(extensions) {\n        this._grammarDefinitions = null;\n        if (this._grammarFactory) {\n            this._grammarFactory.dispose();\n            this._grammarFactory = null;\n        }\n        this._tokenizersRegistrations.clear();\n        this._grammarDefinitions = [];\n        for (const extension of extensions) {\n            const grammars = extension.value;\n            for (const grammar of grammars) {\n                const validatedGrammar = this._validateGrammarDefinition(extension, grammar);\n                if (validatedGrammar) {\n                    this._grammarDefinitions.push(validatedGrammar);\n                    if (validatedGrammar.language) {\n                        const lazyTokenizationSupport = ( new LazyTokenizationSupport(() => this._createTokenizationSupport(validatedGrammar.language)));\n                        this._tokenizersRegistrations.add(lazyTokenizationSupport);\n                        this._tokenizersRegistrations.add(TokenizationRegistry.registerFactory(validatedGrammar.language, lazyTokenizationSupport));\n                    }\n                }\n            }\n        }\n        this._threadedBackgroundTokenizerFactory.setGrammarDefinitions(this._grammarDefinitions);\n        for (const createdMode of this._createdModes) {\n            TokenizationRegistry.getOrCreate(createdMode);\n        }\n    }\n    _validateGrammarDefinition(extension, grammar) {\n        if (!validateGrammarExtensionPoint(extension.description.extensionLocation, grammar, extension.collector, this._languageService)) {\n            return null;\n        }\n        const grammarLocation = resources.joinPath(extension.description.extensionLocation, grammar.path);\n        const embeddedLanguages = Object.create(null);\n        if (grammar.embeddedLanguages) {\n            const scopes = ( Object.keys(grammar.embeddedLanguages));\n            for (let i = 0, len = scopes.length; i < len; i++) {\n                const scope = scopes[i];\n                const language = grammar.embeddedLanguages[scope];\n                if (typeof language !== 'string') {\n                    continue;\n                }\n                if (this._languageService.isRegisteredLanguageId(language)) {\n                    embeddedLanguages[scope] = this._languageService.languageIdCodec.encodeLanguageId(language);\n                }\n            }\n        }\n        const tokenTypes = Object.create(null);\n        if (grammar.tokenTypes) {\n            const scopes = ( Object.keys(grammar.tokenTypes));\n            for (const scope of scopes) {\n                const tokenType = grammar.tokenTypes[scope];\n                switch (tokenType) {\n                    case 'string':\n                        tokenTypes[scope] = 2 ;\n                        break;\n                    case 'other':\n                        tokenTypes[scope] = 0 ;\n                        break;\n                    case 'comment':\n                        tokenTypes[scope] = 1 ;\n                        break;\n                }\n            }\n        }\n        const validLanguageId = grammar.language && this._languageService.isRegisteredLanguageId(grammar.language) ? grammar.language : null;\n        function asStringArray(array, defaultValue) {\n            if (!Array.isArray(array)) {\n                return defaultValue;\n            }\n            if (!array.every(e => typeof e === 'string')) {\n                return defaultValue;\n            }\n            return array;\n        }\n        return {\n            location: grammarLocation,\n            language: validLanguageId || undefined,\n            scopeName: grammar.scopeName,\n            embeddedLanguages: embeddedLanguages,\n            tokenTypes: tokenTypes,\n            injectTo: grammar.injectTo,\n            balancedBracketSelectors: asStringArray(grammar.balancedBracketScopes, ['*']),\n            unbalancedBracketSelectors: asStringArray(grammar.unbalancedBracketScopes, []),\n            sourceExtensionId: extension.description.id,\n        };\n    }\n    startDebugMode(printFn, onStop) {\n        if (this._debugMode) {\n            this._notificationService.error(( nls.localize('alreadyDebugging', \"Already Logging.\")));\n            return;\n        }\n        this._debugModePrintFunc = printFn;\n        this._debugMode = true;\n        if (this._debugMode) {\n            this._progressService.withProgress({\n                location: 15 ,\n                buttons: [( nls.localize('stop', \"Stop\"))]\n            }, (progress) => {\n                progress.report({\n                    message: ( nls.localize(\n                        'progress1',\n                        \"Preparing to log TM Grammar parsing. Press Stop when finished.\"\n                    ))\n                });\n                return this._getVSCodeOniguruma().then((vscodeOniguruma) => {\n                    vscodeOniguruma.setDefaultDebugCall(true);\n                    progress.report({\n                        message: ( nls.localize('progress2', \"Now logging TM Grammar parsing. Press Stop when finished.\"))\n                    });\n                    return ( new Promise((resolve, reject) => { }));\n                });\n            }, (choice) => {\n                this._getVSCodeOniguruma().then((vscodeOniguruma) => {\n                    this._debugModePrintFunc = () => { };\n                    this._debugMode = false;\n                    vscodeOniguruma.setDefaultDebugCall(false);\n                    onStop();\n                });\n            });\n        }\n    }\n    _canCreateGrammarFactory() {\n        return !!this._grammarDefinitions;\n    }\n    async _getOrCreateGrammarFactory() {\n        if (this._grammarFactory) {\n            return this._grammarFactory;\n        }\n        const vscodeOniguruma = await this._getVSCodeOniguruma();\n        const onigLib = Promise.resolve({\n            createOnigScanner: (sources) => vscodeOniguruma.createOnigScanner(sources),\n            createOnigString: (str) => vscodeOniguruma.createOnigString(str)\n        });\n        if (this._grammarFactory) {\n            return this._grammarFactory;\n        }\n        this._grammarFactory = ( new TMGrammarFactory({\n            logTrace: (msg) => this._logService.trace(msg),\n            logError: (msg, err) => this._logService.error(msg, err),\n            readFile: (resource) => this._extensionResourceLoaderService.readExtensionResource(resource)\n        }, this._grammarDefinitions || [], vscodeTextmate, onigLib));\n        this._updateTheme(this._themeService.getColorTheme(), true);\n        return this._grammarFactory;\n    }\n    async _createTokenizationSupport(languageId) {\n        if (!this._languageService.isRegisteredLanguageId(languageId)) {\n            return null;\n        }\n        if (!this._canCreateGrammarFactory()) {\n            return null;\n        }\n        try {\n            const grammarFactory = await this._getOrCreateGrammarFactory();\n            if (!( grammarFactory.has(languageId))) {\n                return null;\n            }\n            const encodedLanguageId = this._languageService.languageIdCodec.encodeLanguageId(languageId);\n            const r = await grammarFactory.createGrammar(languageId, encodedLanguageId);\n            if (!r.grammar) {\n                return null;\n            }\n            const maxTokenizationLineLength = observableConfigValue('editor.maxTokenizationLineLength', languageId, -1, this._configurationService);\n            const tokenization = ( new TextMateTokenizationSupport(\n                r.grammar,\n                r.initialState,\n                r.containsEmbeddedLanguages,\n                (textModel, tokenStore) => this._threadedBackgroundTokenizerFactory.createBackgroundTokenizer(textModel, tokenStore, maxTokenizationLineLength),\n                () => this.getAsyncTokenizationVerification(),\n                (timeMs, lineLength, isRandomSample) => {\n                    this._reportTokenizationTime(timeMs, languageId, r.sourceExtensionId, lineLength, false, isRandomSample);\n                },\n                true\n            ));\n            tokenization.onDidEncounterLanguage((encodedLanguageId) => {\n                if (!this._encounteredLanguages[encodedLanguageId]) {\n                    const languageId = this._languageService.languageIdCodec.decodeLanguageId(encodedLanguageId);\n                    this._encounteredLanguages[encodedLanguageId] = true;\n                    this._languageService.requestBasicLanguageFeatures(languageId);\n                }\n            });\n            return ( new TokenizationSupportWithLineLimit(encodedLanguageId, tokenization, maxTokenizationLineLength));\n        }\n        catch (err) {\n            if (err.message && err.message === missingTMGrammarErrorMessage) {\n                return null;\n            }\n            onUnexpectedError(err);\n            return null;\n        }\n    }\n    _updateTheme(colorTheme, forceUpdate) {\n        if (!forceUpdate && this._currentTheme && this._currentTokenColorMap && equalsTokenRules(this._currentTheme.settings, colorTheme.tokenColors)\n            && equals(this._currentTokenColorMap, colorTheme.tokenColorMap)) {\n            return;\n        }\n        this._currentTheme = { name: colorTheme.label, settings: colorTheme.tokenColors };\n        this._currentTokenColorMap = colorTheme.tokenColorMap;\n        this._grammarFactory?.setTheme(this._currentTheme, this._currentTokenColorMap);\n        const colorMap = toColorMap(this._currentTokenColorMap);\n        const cssRules = generateTokensCSSForColorMap(colorMap);\n        this._styleElement.textContent = cssRules;\n        TokenizationRegistry.setColorMap(colorMap);\n        if (this._currentTheme && this._currentTokenColorMap) {\n            this._threadedBackgroundTokenizerFactory.acceptTheme(this._currentTheme, this._currentTokenColorMap);\n        }\n    }\n    async createTokenizer(languageId) {\n        if (!this._languageService.isRegisteredLanguageId(languageId)) {\n            return null;\n        }\n        const grammarFactory = await this._getOrCreateGrammarFactory();\n        if (!( grammarFactory.has(languageId))) {\n            return null;\n        }\n        const encodedLanguageId = this._languageService.languageIdCodec.encodeLanguageId(languageId);\n        const { grammar } = await grammarFactory.createGrammar(languageId, encodedLanguageId);\n        return grammar;\n    }\n    _getVSCodeOniguruma() {\n        if (!this._vscodeOniguruma) {\n            this._vscodeOniguruma = (async () => {\n                const wasm = await this._loadVSCodeOnigurumaWASM();\n                await vscodeOniguruma.loadWASM({\n                    data: wasm,\n                    print: (str) => {\n                        this._debugModePrintFunc(str);\n                    }\n                });\n                return vscodeOniguruma;\n            })();\n        }\n        return this._vscodeOniguruma;\n    }\n    async _loadVSCodeOnigurumaWASM() {\n        if (isWeb) {\n            const response = await fetch(( ( FileAccess.asBrowserUri('vscode-oniguruma/../onig.wasm')).toString(true)));\n            return await response.arrayBuffer();\n        }\n        else {\n            const response = await fetch(this._environmentService.isBuilt\n                ? ( ( FileAccess.asBrowserUri(`${nodeModulesAsarUnpackedPath}/vscode-oniguruma/release/onig.wasm`)).toString(true))\n                : ( ( FileAccess.asBrowserUri(`${nodeModulesPath}/vscode-oniguruma/release/onig.wasm`)).toString(true)));\n            return response;\n        }\n    }\n    _reportTokenizationTime(timeMs, languageId, sourceExtensionId, lineLength, fromWorker, isRandomSample) {\n        const key = fromWorker ? 'async' : 'sync';\n        if (TextMateTokenizationFeature_1.reportTokenizationTimeCounter[key] > 50) {\n            return;\n        }\n        if (TextMateTokenizationFeature_1.reportTokenizationTimeCounter[key] === 0) {\n            setTimeout(() => {\n                TextMateTokenizationFeature_1.reportTokenizationTimeCounter[key] = 0;\n            }, 1000 * 60 * 60);\n        }\n        TextMateTokenizationFeature_1.reportTokenizationTimeCounter[key]++;\n        this._telemetryService.publicLog2('editor.tokenizedLine', {\n            timeMs,\n            languageId,\n            lineLength,\n            fromWorker,\n            sourceExtensionId,\n            isRandomSample,\n            tokenizationSetting: this.getAsyncTokenizationEnabled() ? (this.getAsyncTokenizationVerification() ? 2 : 1) : 0,\n        });\n    }\n};\nTextMateTokenizationFeature = TextMateTokenizationFeature_1 = ( __decorate([\n    ( __param(0, ILanguageService)),\n    ( __param(1, IWorkbenchThemeService)),\n    ( __param(2, IExtensionResourceLoaderService)),\n    ( __param(3, INotificationService)),\n    ( __param(4, ILogService)),\n    ( __param(5, IConfigurationService)),\n    ( __param(6, IProgressService)),\n    ( __param(7, IWorkbenchEnvironmentService)),\n    ( __param(8, IInstantiationService)),\n    ( __param(9, ITelemetryService))\n], TextMateTokenizationFeature));\nfunction toColorMap(colorMap) {\n    const result = [null];\n    for (let i = 1, len = colorMap.length; i < len; i++) {\n        result[i] = ( Color.fromHex(colorMap[i]));\n    }\n    return result;\n}\nfunction equalsTokenRules(a, b) {\n    if (!b || !a || b.length !== a.length) {\n        return false;\n    }\n    for (let i = b.length - 1; i >= 0; i--) {\n        const r1 = b[i];\n        const r2 = a[i];\n        if (r1.scope !== r2.scope) {\n            return false;\n        }\n        const s1 = r1.settings;\n        const s2 = r2.settings;\n        if (s1 && s2) {\n            if (s1.fontStyle !== s2.fontStyle || s1.foreground !== s2.foreground || s1.background !== s2.background) {\n                return false;\n            }\n        }\n        else if (!s1 || !s2) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction validateGrammarExtensionPoint(extensionLocation, syntax, collector, _languageService) {\n    if (syntax.language && ((typeof syntax.language !== 'string') || !_languageService.isRegisteredLanguageId(syntax.language))) {\n        collector.error(( nls.localize(\n            'invalid.language',\n            \"Unknown language in `contributes.{0}.language`. Provided value: {1}\",\n            grammarsExtPoint.name,\n            String(syntax.language)\n        )));\n        return false;\n    }\n    if (!syntax.scopeName || (typeof syntax.scopeName !== 'string')) {\n        collector.error(( nls.localize(\n            'invalid.scopeName',\n            \"Expected string in `contributes.{0}.scopeName`. Provided value: {1}\",\n            grammarsExtPoint.name,\n            String(syntax.scopeName)\n        )));\n        return false;\n    }\n    if (!syntax.path || (typeof syntax.path !== 'string')) {\n        collector.error(( nls.localize(\n            'invalid.path.0',\n            \"Expected string in `contributes.{0}.path`. Provided value: {1}\",\n            grammarsExtPoint.name,\n            String(syntax.path)\n        )));\n        return false;\n    }\n    if (syntax.injectTo && (!Array.isArray(syntax.injectTo) || ( syntax.injectTo.some(scope => typeof scope !== 'string')))) {\n        collector.error(( nls.localize(\n            'invalid.injectTo',\n            \"Invalid value in `contributes.{0}.injectTo`. Must be an array of language scope names. Provided value: {1}\",\n            grammarsExtPoint.name,\n            JSON.stringify(syntax.injectTo)\n        )));\n        return false;\n    }\n    if (syntax.embeddedLanguages && !types.isObject(syntax.embeddedLanguages)) {\n        collector.error(( nls.localize(\n            'invalid.embeddedLanguages',\n            \"Invalid value in `contributes.{0}.embeddedLanguages`. Must be an object map from scope name to language. Provided value: {1}\",\n            grammarsExtPoint.name,\n            JSON.stringify(syntax.embeddedLanguages)\n        )));\n        return false;\n    }\n    if (syntax.tokenTypes && !types.isObject(syntax.tokenTypes)) {\n        collector.error(( nls.localize(\n            'invalid.tokenTypes',\n            \"Invalid value in `contributes.{0}.tokenTypes`. Must be an object map from scope name to token type. Provided value: {1}\",\n            grammarsExtPoint.name,\n            JSON.stringify(syntax.tokenTypes)\n        )));\n        return false;\n    }\n    const grammarLocation = resources.joinPath(extensionLocation, syntax.path);\n    if (!resources.isEqualOrParent(grammarLocation, extensionLocation)) {\n        collector.warn(( nls.localize(\n            'invalid.path.1',\n            \"Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.\",\n            grammarsExtPoint.name,\n            grammarLocation.path,\n            extensionLocation.path\n        )));\n    }\n    return true;\n}\nfunction observableConfigValue(key, languageId, defaultValue, configurationService) {\n    return observableFromEvent((handleChange) => configurationService.onDidChangeConfiguration(e => {\n        if (e.affectsConfiguration(key, { overrideIdentifier: languageId })) {\n            handleChange(e);\n        }\n    }), () => configurationService.getValue(key, { overrideIdentifier: languageId }) ?? defaultValue);\n}\nexport { TextMateTokenizationFeature };\n", "import { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { StopWatch } from 'monaco-editor/esm/vs/base/common/stopwatch.js';\nimport { TokenMetadata } from 'monaco-editor/esm/vs/editor/common/encodedTokenAttributes.js';\nimport { EncodedTokenizationResult } from 'monaco-editor/esm/vs/editor/common/languages.js';\nclass TextMateTokenizationSupport extends Disposable {\n    constructor(_grammar, _initialState, _containsEmbeddedLanguages, _createBackgroundTokenizer, _backgroundTokenizerShouldOnlyVerifyTokens, _reportTokenizationTime, _reportSlowTokenization) {\n        super();\n        this._grammar = _grammar;\n        this._initialState = _initialState;\n        this._containsEmbeddedLanguages = _containsEmbeddedLanguages;\n        this._createBackgroundTokenizer = _createBackgroundTokenizer;\n        this._backgroundTokenizerShouldOnlyVerifyTokens = _backgroundTokenizerShouldOnlyVerifyTokens;\n        this._reportTokenizationTime = _reportTokenizationTime;\n        this._reportSlowTokenization = _reportSlowTokenization;\n        this._seenLanguages = [];\n        this._onDidEncounterLanguage = this._register(( new Emitter()));\n        this.onDidEncounterLanguage = this._onDidEncounterLanguage.event;\n    }\n    get backgroundTokenizerShouldOnlyVerifyTokens() {\n        return this._backgroundTokenizerShouldOnlyVerifyTokens();\n    }\n    getInitialState() {\n        return this._initialState;\n    }\n    tokenize(line, hasEOL, state) {\n        throw new Error('Not supported!');\n    }\n    createBackgroundTokenizer(textModel, store) {\n        if (this._createBackgroundTokenizer) {\n            return this._createBackgroundTokenizer(textModel, store);\n        }\n        return undefined;\n    }\n    tokenizeEncoded(line, hasEOL, state) {\n        const isRandomSample = Math.random() * 10000 < 1;\n        const shouldMeasure = this._reportSlowTokenization || isRandomSample;\n        const sw = shouldMeasure ? ( new StopWatch(true)) : undefined;\n        const textMateResult = this._grammar.tokenizeLine2(line, state, 500);\n        if (shouldMeasure) {\n            const timeMS = sw.elapsed();\n            if (isRandomSample || timeMS > 32) {\n                this._reportTokenizationTime(timeMS, line.length, isRandomSample);\n            }\n        }\n        if (textMateResult.stoppedEarly) {\n            console.warn(`Time limit reached when tokenizing line: ${line.substring(0, 100)}`);\n            return ( new EncodedTokenizationResult(textMateResult.tokens, state));\n        }\n        if (this._containsEmbeddedLanguages) {\n            const seenLanguages = this._seenLanguages;\n            const tokens = textMateResult.tokens;\n            for (let i = 0, len = (tokens.length >>> 1); i < len; i++) {\n                const metadata = tokens[(i << 1) + 1];\n                const languageId = TokenMetadata.getLanguageId(metadata);\n                if (!seenLanguages[languageId]) {\n                    seenLanguages[languageId] = true;\n                    this._onDidEncounterLanguage.fire(languageId);\n                }\n            }\n        }\n        let endState;\n        if (state.equals(textMateResult.ruleStack)) {\n            endState = state;\n        }\n        else {\n            endState = textMateResult.ruleStack;\n        }\n        return ( new EncodedTokenizationResult(textMateResult.tokens, endState));\n    }\n}\nexport { TextMateTokenizationSupport };\n", "import { nullTokenizeEncoded } from 'monaco-editor/esm/vs/editor/common/languages/nullTokenize.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { keepAlive } from 'monaco-editor/esm/vs/base/common/observable.js';\nclass TokenizationSupportWithLineLimit extends Disposable {\n    get backgroundTokenizerShouldOnlyVerifyTokens() {\n        return this._actual.backgroundTokenizerShouldOnlyVerifyTokens;\n    }\n    constructor(_encodedLanguageId, _actual, _maxTokenizationLineLength) {\n        super();\n        this._encodedLanguageId = _encodedLanguageId;\n        this._actual = _actual;\n        this._maxTokenizationLineLength = _maxTokenizationLineLength;\n        this._register(keepAlive(this._maxTokenizationLineLength));\n    }\n    getInitialState() {\n        return this._actual.getInitialState();\n    }\n    tokenize(line, hasEOL, state) {\n        throw new Error('Not supported!');\n    }\n    tokenizeEncoded(line, hasEOL, state) {\n        if (line.length >= this._maxTokenizationLineLength.get()) {\n            return nullTokenizeEncoded(this._encodedLanguageId, state);\n        }\n        return this._actual.tokenizeEncoded(line, hasEOL, state);\n    }\n    createBackgroundTokenizer(textModel, store) {\n        if (this._actual.createBackgroundTokenizer) {\n            return this._actual.createBackgroundTokenizer(textModel, store);\n        }\n        else {\n            return undefined;\n        }\n    }\n}\nexport { TokenizationSupportWithLineLimit };\n", "import { __decorate, __param } from '../../../../../../../../external/tslib/tslib.es6.js';\nimport { DisposableStore, toDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { FileAccess, nodeModulesPath, nodeModulesAsarPath } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { isWeb } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { createWebWorker } from 'monaco-editor/esm/vs/editor/browser/services/webWorker.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { ILanguageConfigurationService } from 'monaco-editor/esm/vs/editor/common/languages/languageConfigurationRegistry.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IEnvironmentService } from 'monaco-editor/esm/vs/platform/environment/common/environment.js';\nimport { IExtensionResourceLoaderService } from '../../../../../platform/extensionResourceLoader/common/extensionResourceLoader.js';\nimport { INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { TextMateWorkerTokenizerController } from './textMateWorkerTokenizerController.js';\nvar ThreadedBackgroundTokenizerFactory_1;\nlet ThreadedBackgroundTokenizerFactory = class ThreadedBackgroundTokenizerFactory {\n    static { ThreadedBackgroundTokenizerFactory_1 = this; }\n    static { this._reportedMismatchingTokens = false; }\n    constructor(_reportTokenizationTime, _shouldTokenizeAsync, _extensionResourceLoaderService, _modelService, _languageConfigurationService, _configurationService, _languageService, _environmentService, _notificationService, _telemetryService) {\n        this._reportTokenizationTime = _reportTokenizationTime;\n        this._shouldTokenizeAsync = _shouldTokenizeAsync;\n        this._extensionResourceLoaderService = _extensionResourceLoaderService;\n        this._modelService = _modelService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._configurationService = _configurationService;\n        this._languageService = _languageService;\n        this._environmentService = _environmentService;\n        this._notificationService = _notificationService;\n        this._telemetryService = _telemetryService;\n        this._workerProxyPromise = null;\n        this._worker = null;\n        this._workerProxy = null;\n        this._workerTokenizerControllers = ( new Map());\n        this._currentTheme = null;\n        this._currentTokenColorMap = null;\n        this._grammarDefinitions = [];\n    }\n    dispose() {\n        this._disposeWorker();\n    }\n    createBackgroundTokenizer(textModel, tokenStore, maxTokenizationLineLength) {\n        if (!this._shouldTokenizeAsync() || textModel.isTooLargeForSyncing()) {\n            return undefined;\n        }\n        const store = ( new DisposableStore());\n        const controllerContainer = this._getWorkerProxy().then((workerProxy) => {\n            if (store.isDisposed || !workerProxy) {\n                return undefined;\n            }\n            const controllerContainer = { controller: undefined, worker: this._worker };\n            store.add(keepAliveWhenAttached(textModel, () => {\n                const controller = ( new TextMateWorkerTokenizerController(\n                    textModel,\n                    workerProxy,\n                    this._languageService.languageIdCodec,\n                    tokenStore,\n                    this._configurationService,\n                    maxTokenizationLineLength\n                ));\n                controllerContainer.controller = controller;\n                this._workerTokenizerControllers.set(controller.controllerId, controller);\n                return toDisposable(() => {\n                    controllerContainer.controller = undefined;\n                    this._workerTokenizerControllers.delete(controller.controllerId);\n                    controller.dispose();\n                });\n            }));\n            return controllerContainer;\n        });\n        return {\n            dispose() {\n                store.dispose();\n            },\n            requestTokens: async (startLineNumber, endLineNumberExclusive) => {\n                const container = await controllerContainer;\n                if (container?.controller && container.worker === this._worker) {\n                    container.controller.requestTokens(startLineNumber, endLineNumberExclusive);\n                }\n            },\n            reportMismatchingTokens: (lineNumber) => {\n                if (ThreadedBackgroundTokenizerFactory_1._reportedMismatchingTokens) {\n                    return;\n                }\n                ThreadedBackgroundTokenizerFactory_1._reportedMismatchingTokens = true;\n                this._notificationService.error({\n                    message: 'Async Tokenization Token Mismatch in line ' + lineNumber,\n                    name: 'Async Tokenization Token Mismatch',\n                });\n                this._telemetryService.publicLog2('asyncTokenizationMismatchingTokens', {});\n            },\n        };\n    }\n    setGrammarDefinitions(grammarDefinitions) {\n        this._grammarDefinitions = grammarDefinitions;\n        this._disposeWorker();\n    }\n    acceptTheme(theme, colorMap) {\n        this._currentTheme = theme;\n        this._currentTokenColorMap = colorMap;\n        if (this._currentTheme && this._currentTokenColorMap && this._workerProxy) {\n            this._workerProxy.acceptTheme(this._currentTheme, this._currentTokenColorMap);\n        }\n    }\n    _getWorkerProxy() {\n        if (!this._workerProxyPromise) {\n            this._workerProxyPromise = this._createWorkerProxy();\n        }\n        return this._workerProxyPromise;\n    }\n    async _createWorkerProxy() {\n        const textmateModuleLocation = `${nodeModulesPath}/vscode-textmate`;\n        const textmateModuleLocationAsar = `${nodeModulesAsarPath}/vscode-textmate`;\n        const onigurumaModuleLocation = `${nodeModulesPath}/vscode-oniguruma`;\n        const onigurumaModuleLocationAsar = `${nodeModulesAsarPath}/vscode-oniguruma`;\n        const useAsar = this._environmentService.isBuilt && !isWeb;\n        const textmateLocation = useAsar ? textmateModuleLocationAsar : textmateModuleLocation;\n        const onigurumaLocation = useAsar ? onigurumaModuleLocationAsar : onigurumaModuleLocation;\n        const textmateMain = `${textmateLocation}/release/main.js`;\n        const onigurumaMain = `${onigurumaLocation}/release/main.js`;\n        const onigurumaWASM = `${onigurumaLocation}/release/onig.wasm`;\n        const uri = ( ( FileAccess.asBrowserUri(textmateMain)).toString(true));\n        const createData = {\n            grammarDefinitions: this._grammarDefinitions,\n            textmateMainUri: uri,\n            onigurumaMainUri: ( ( FileAccess.asBrowserUri(onigurumaMain)).toString(true)),\n            onigurumaWASMUri: ( ( FileAccess.asBrowserUri(onigurumaWASM)).toString(true)),\n        };\n        const host = {\n            readFile: async (_resource) => {\n                const resource = URI.revive(_resource);\n                return this._extensionResourceLoaderService.readExtensionResource(resource);\n            },\n            setTokensAndStates: async (controllerId, versionId, tokens, lineEndStateDeltas) => {\n                const controller = this._workerTokenizerControllers.get(controllerId);\n                if (controller) {\n                    controller.setTokensAndStates(controllerId, versionId, tokens, lineEndStateDeltas);\n                }\n            },\n            reportTokenizationTime: (timeMs, languageId, sourceExtensionId, lineLength, isRandomSample) => {\n                this._reportTokenizationTime(timeMs, languageId, sourceExtensionId, lineLength, isRandomSample);\n            }\n        };\n        const worker = this._worker = createWebWorker(this._modelService, this._languageConfigurationService, {\n            createData,\n            label: 'textMateWorker',\n            moduleId: 'vs/workbench/services/textMate/browser/backgroundTokenization/worker/textMateTokenizationWorker.worker',\n            host,\n        });\n        const proxy = await ( worker.getProxy());\n        if (this._worker !== worker) {\n            return null;\n        }\n        this._workerProxy = proxy;\n        if (this._currentTheme && this._currentTokenColorMap) {\n            this._workerProxy.acceptTheme(this._currentTheme, this._currentTokenColorMap);\n        }\n        return proxy;\n    }\n    _disposeWorker() {\n        for (const controller of ( this._workerTokenizerControllers.values())) {\n            controller.dispose();\n        }\n        this._workerTokenizerControllers.clear();\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._workerProxy = null;\n        this._workerProxyPromise = null;\n    }\n};\nThreadedBackgroundTokenizerFactory = ThreadedBackgroundTokenizerFactory_1 = ( __decorate([\n    ( __param(2, IExtensionResourceLoaderService)),\n    ( __param(3, IModelService)),\n    ( __param(4, ILanguageConfigurationService)),\n    ( __param(5, IConfigurationService)),\n    ( __param(6, ILanguageService)),\n    ( __param(7, IEnvironmentService)),\n    ( __param(8, INotificationService)),\n    ( __param(9, ITelemetryService))\n], ThreadedBackgroundTokenizerFactory));\nfunction keepAliveWhenAttached(textModel, factory) {\n    const disposableStore = ( new DisposableStore());\n    const subStore = disposableStore.add(( new DisposableStore()));\n    function checkAttached() {\n        if (textModel.isAttachedToEditor()) {\n            subStore.add(factory());\n        }\n        else {\n            subStore.clear();\n        }\n    }\n    checkAttached();\n    disposableStore.add(textModel.onDidChangeAttached(() => {\n        checkAttached();\n    }));\n    return disposableStore;\n}\nexport { ThreadedBackgroundTokenizerFactory };\n", "import { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { keepAlive, autorun, observableFromEvent } from 'monaco-editor/esm/vs/base/common/observable.js';\nimport { countEOL } from 'monaco-editor/esm/vs/editor/common/core/eolCounter.js';\nimport { LineRange } from 'monaco-editor/esm/vs/editor/common/core/lineRange.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { TokenizationStateStore } from 'monaco-editor/esm/vs/editor/common/model/textModelTokens.js';\nimport { ContiguousMultilineTokensBuilder } from 'monaco-editor/esm/vs/editor/common/tokens/contiguousMultilineTokensBuilder.js';\nimport { MonotonousIndexTransformer, ArrayEdit, SingleArrayEdit } from '../arrayOperation.js';\nimport { applyStateStackDiff, INITIAL } from 'vscode-textmate';\nclass TextMateWorkerTokenizerController extends Disposable {\n    static { this._id = 0; }\n    constructor(_model, _worker, _languageIdCodec, _backgroundTokenizationStore, _configurationService, _maxTokenizationLineLength) {\n        super();\n        this._model = _model;\n        this._worker = _worker;\n        this._languageIdCodec = _languageIdCodec;\n        this._backgroundTokenizationStore = _backgroundTokenizationStore;\n        this._configurationService = _configurationService;\n        this._maxTokenizationLineLength = _maxTokenizationLineLength;\n        this.controllerId = TextMateWorkerTokenizerController._id++;\n        this._pendingChanges = [];\n        this._states = ( new TokenizationStateStore());\n        this._loggingEnabled = observableConfigValue('editor.experimental.asyncTokenizationLogging', false, this._configurationService);\n        this._register(keepAlive(this._loggingEnabled));\n        this._register(this._model.onDidChangeContent((e) => {\n            if (this._shouldLog) {\n                console.log('model change', {\n                    fileName: this._model.uri.fsPath.split('\\\\').pop(),\n                    changes: changesToString(e.changes),\n                });\n            }\n            this._worker.acceptModelChanged(this.controllerId, e);\n            this._pendingChanges.push(e);\n        }));\n        this._register(this._model.onDidChangeLanguage((e) => {\n            const languageId = this._model.getLanguageId();\n            const encodedLanguageId = this._languageIdCodec.encodeLanguageId(languageId);\n            this._worker.acceptModelLanguageChanged(this.controllerId, languageId, encodedLanguageId);\n        }));\n        const languageId = this._model.getLanguageId();\n        const encodedLanguageId = this._languageIdCodec.encodeLanguageId(languageId);\n        this._worker.acceptNewModel({\n            uri: this._model.uri,\n            versionId: this._model.getVersionId(),\n            lines: this._model.getLinesContent(),\n            EOL: this._model.getEOL(),\n            languageId,\n            encodedLanguageId,\n            maxTokenizationLineLength: this._maxTokenizationLineLength.get(),\n            controllerId: this.controllerId,\n        });\n        this._register(autorun(reader => {\n            const maxTokenizationLineLength = this._maxTokenizationLineLength.read(reader);\n            this._worker.acceptMaxTokenizationLineLength(this.controllerId, maxTokenizationLineLength);\n        }));\n    }\n    dispose() {\n        super.dispose();\n        this._worker.acceptRemovedModel(this.controllerId);\n    }\n    requestTokens(startLineNumber, endLineNumberExclusive) {\n        this._worker.retokenize(this.controllerId, startLineNumber, endLineNumberExclusive);\n    }\n    async setTokensAndStates(controllerId, versionId, rawTokens, stateDeltas) {\n        if (this.controllerId !== controllerId) {\n            return;\n        }\n        let tokens = ContiguousMultilineTokensBuilder.deserialize(( new Uint8Array(rawTokens)));\n        if (this._shouldLog) {\n            console.log('received background tokenization result', {\n                fileName: this._model.uri.fsPath.split('\\\\').pop(),\n                updatedTokenLines: ( tokens.map((t) => t.getLineRange())).join(' & '),\n                updatedStateLines: ( stateDeltas.map((s) => ( ( new LineRange(s.startLineNumber, s.startLineNumber + s.stateDeltas.length)).toString()))).join(' & '),\n            });\n        }\n        if (this._shouldLog) {\n            const changes = ( ( this._pendingChanges.filter(c => c.versionId <= versionId).map(c => c.changes)).map(c => changesToString(c))).join(' then ');\n            console.log('Applying changes to local states', changes);\n        }\n        while (this._pendingChanges.length > 0 &&\n            this._pendingChanges[0].versionId <= versionId) {\n            const change = this._pendingChanges.shift();\n            this._states.acceptChanges(change.changes);\n        }\n        if (this._pendingChanges.length > 0) {\n            if (this._shouldLog) {\n                const changes = ( ( this._pendingChanges.map(c => c.changes)).map(c => changesToString(c))).join(' then ');\n                console.log('Considering non-processed changes', changes);\n            }\n            const curToFutureTransformerTokens = MonotonousIndexTransformer.fromMany(( this._pendingChanges.map((c) => fullLineArrayEditFromModelContentChange(c.changes))));\n            const b = ( new ContiguousMultilineTokensBuilder());\n            for (const t of tokens) {\n                for (let i = t.startLineNumber; i <= t.endLineNumber; i++) {\n                    const result = curToFutureTransformerTokens.transform(i - 1);\n                    if (result !== undefined) {\n                        b.add(i, t.getLineTokens(i));\n                    }\n                }\n            }\n            tokens = b.finalize();\n            for (const change of this._pendingChanges) {\n                for (const innerChanges of change.changes) {\n                    for (let j = 0; j < tokens.length; j++) {\n                        tokens[j].applyEdit(innerChanges.range, innerChanges.text);\n                    }\n                }\n            }\n        }\n        const curToFutureTransformerStates = MonotonousIndexTransformer.fromMany(( this._pendingChanges.map((c) => fullLineArrayEditFromModelContentChange(c.changes))));\n        if (!this._applyStateStackDiffFn || !this._initialState) {\n            this._applyStateStackDiffFn = applyStateStackDiff;\n            this._initialState = INITIAL;\n        }\n        for (const d of stateDeltas) {\n            let prevState = d.startLineNumber <= 1 ? this._initialState : this._states.getEndState(d.startLineNumber - 1);\n            for (let i = 0; i < d.stateDeltas.length; i++) {\n                const delta = d.stateDeltas[i];\n                let state;\n                if (delta) {\n                    state = this._applyStateStackDiffFn(prevState, delta);\n                    this._states.setEndState(d.startLineNumber + i, state);\n                }\n                else {\n                    state = this._states.getEndState(d.startLineNumber + i);\n                }\n                const offset = curToFutureTransformerStates.transform(d.startLineNumber + i - 1);\n                if (offset !== undefined) {\n                    this._backgroundTokenizationStore.setEndState(offset + 1, state);\n                }\n                if (d.startLineNumber + i >= this._model.getLineCount() - 1) {\n                    this._backgroundTokenizationStore.backgroundTokenizationFinished();\n                }\n                prevState = state;\n            }\n        }\n        this._backgroundTokenizationStore.setTokens(tokens);\n    }\n    get _shouldLog() { return this._loggingEnabled.get(); }\n}\nfunction fullLineArrayEditFromModelContentChange(c) {\n    return ( new ArrayEdit(( c.map((c) => ( new SingleArrayEdit(\n        c.range.startLineNumber - 1,\n        c.range.endLineNumber - c.range.startLineNumber + 1,\n        countEOL(c.text)[0] + 1\n    ))))));\n}\nfunction changesToString(changes) {\n    return ( changes.map(c => ( Range.lift(c.range).toString()) + ' => ' + c.text)).join(' & ');\n}\nfunction observableConfigValue(key, defaultValue, configurationService) {\n    return observableFromEvent((handleChange) => configurationService.onDidChangeConfiguration(e => {\n        if (e.affectsConfiguration(key)) {\n            handleChange(e);\n        }\n    }), () => configurationService.getValue(key) ?? defaultValue);\n}\nexport { TextMateWorkerTokenizerController };\n", "import { compareBy, numberComparator } from 'monaco-editor/esm/vs/base/common/arrays.js';\nclass ArrayEdit {\n    constructor(\n    edits) {\n        this.edits = edits.slice().sort(compareBy(c => c.offset, numberComparator));\n    }\n    applyToArray(array) {\n        for (let i = this.edits.length - 1; i >= 0; i--) {\n            const c = this.edits[i];\n            array.splice(c.offset, c.length, ...( new Array(c.newLength)));\n        }\n    }\n}\nclass SingleArrayEdit {\n    constructor(offset, length, newLength) {\n        this.offset = offset;\n        this.length = length;\n        this.newLength = newLength;\n    }\n    toString() {\n        return `[${this.offset}, +${this.length}) -> +${this.newLength}}`;\n    }\n}\nclass MonotonousIndexTransformer {\n    static fromMany(transformations) {\n        const transformers = ( transformations.map(t => ( new MonotonousIndexTransformer(t))));\n        return ( new CombinedIndexTransformer(transformers));\n    }\n    constructor(transformation) {\n        this.transformation = transformation;\n        this.idx = 0;\n        this.offset = 0;\n    }\n    transform(index) {\n        let nextChange = this.transformation.edits[this.idx];\n        while (nextChange && nextChange.offset + nextChange.length <= index) {\n            this.offset += nextChange.newLength - nextChange.length;\n            this.idx++;\n            nextChange = this.transformation.edits[this.idx];\n        }\n        if (nextChange && nextChange.offset <= index) {\n            return undefined;\n        }\n        return index + this.offset;\n    }\n}\nclass CombinedIndexTransformer {\n    constructor(transformers) {\n        this.transformers = transformers;\n    }\n    transform(index) {\n        for (const transformer of this.transformers) {\n            const result = transformer.transform(index);\n            if (result === undefined) {\n                return undefined;\n            }\n            index = result;\n        }\n        return index;\n    }\n}\nexport { ArrayEdit, CombinedIndexTransformer, MonotonousIndexTransformer, SingleArrayEdit };\n", "import { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { TMScopeRegistry } from './TMScopeRegistry.js';\nconst missingTMGrammarErrorMessage = 'No TM Grammar registered for this language.';\nclass TMGrammarFactory extends Disposable {\n    constructor(host, grammarDefinitions, vscodeTextmate, onigLib) {\n        super();\n        this._host = host;\n        this._initialState = vscodeTextmate.INITIAL;\n        this._scopeRegistry = ( new TMScopeRegistry());\n        this._injections = {};\n        this._injectedEmbeddedLanguages = {};\n        this._languageToScope = ( new Map());\n        this._grammarRegistry = this._register(new vscodeTextmate.Registry({\n            onigLib: onigLib,\n            loadGrammar: async (scopeName) => {\n                const grammarDefinition = this._scopeRegistry.getGrammarDefinition(scopeName);\n                if (!grammarDefinition) {\n                    this._host.logTrace(`No grammar found for scope ${scopeName}`);\n                    return null;\n                }\n                const location = grammarDefinition.location;\n                try {\n                    const content = await this._host.readFile(location);\n                    return vscodeTextmate.parseRawGrammar(content, location.path);\n                }\n                catch (e) {\n                    this._host.logError(`Unable to load and parse grammar for scope ${scopeName} from ${location}`, e);\n                    return null;\n                }\n            },\n            getInjections: (scopeName) => {\n                const scopeParts = scopeName.split('.');\n                let injections = [];\n                for (let i = 1; i <= scopeParts.length; i++) {\n                    const subScopeName = scopeParts.slice(0, i).join('.');\n                    injections = [...injections, ...(this._injections[subScopeName] || [])];\n                }\n                return injections;\n            }\n        }));\n        for (const validGrammar of grammarDefinitions) {\n            this._scopeRegistry.register(validGrammar);\n            if (validGrammar.injectTo) {\n                for (const injectScope of validGrammar.injectTo) {\n                    let injections = this._injections[injectScope];\n                    if (!injections) {\n                        this._injections[injectScope] = injections = [];\n                    }\n                    injections.push(validGrammar.scopeName);\n                }\n                if (validGrammar.embeddedLanguages) {\n                    for (const injectScope of validGrammar.injectTo) {\n                        let injectedEmbeddedLanguages = this._injectedEmbeddedLanguages[injectScope];\n                        if (!injectedEmbeddedLanguages) {\n                            this._injectedEmbeddedLanguages[injectScope] = injectedEmbeddedLanguages = [];\n                        }\n                        injectedEmbeddedLanguages.push(validGrammar.embeddedLanguages);\n                    }\n                }\n            }\n            if (validGrammar.language) {\n                this._languageToScope.set(validGrammar.language, validGrammar.scopeName);\n            }\n        }\n    }\n    has(languageId) {\n        return ( this._languageToScope.has(languageId));\n    }\n    setTheme(theme, colorMap) {\n        this._grammarRegistry.setTheme(theme, colorMap);\n    }\n    getColorMap() {\n        return this._grammarRegistry.getColorMap();\n    }\n    async createGrammar(languageId, encodedLanguageId) {\n        const scopeName = this._languageToScope.get(languageId);\n        if (typeof scopeName !== 'string') {\n            throw new Error(missingTMGrammarErrorMessage);\n        }\n        const grammarDefinition = this._scopeRegistry.getGrammarDefinition(scopeName);\n        if (!grammarDefinition) {\n            throw new Error(missingTMGrammarErrorMessage);\n        }\n        const embeddedLanguages = grammarDefinition.embeddedLanguages;\n        if (this._injectedEmbeddedLanguages[scopeName]) {\n            const injectedEmbeddedLanguages = this._injectedEmbeddedLanguages[scopeName];\n            for (const injected of injectedEmbeddedLanguages) {\n                for (const scope of ( Object.keys(injected))) {\n                    embeddedLanguages[scope] = injected[scope];\n                }\n            }\n        }\n        const containsEmbeddedLanguages = (( Object.keys(embeddedLanguages)).length > 0);\n        let grammar;\n        try {\n            grammar = await this._grammarRegistry.loadGrammarWithConfiguration(scopeName, encodedLanguageId, {\n                embeddedLanguages,\n                tokenTypes: grammarDefinition.tokenTypes,\n                balancedBracketSelectors: grammarDefinition.balancedBracketSelectors,\n                unbalancedBracketSelectors: grammarDefinition.unbalancedBracketSelectors,\n            });\n        }\n        catch (err) {\n            if (err.message && err.message.startsWith('No grammar provided for')) {\n                throw new Error(missingTMGrammarErrorMessage);\n            }\n            throw err;\n        }\n        return {\n            languageId: languageId,\n            grammar: grammar,\n            initialState: this._initialState,\n            containsEmbeddedLanguages: containsEmbeddedLanguages,\n            sourceExtensionId: grammarDefinition.sourceExtensionId,\n        };\n    }\n}\nexport { TMGrammarFactory, missingTMGrammarErrorMessage };\n", "import * as resources from 'monaco-editor/esm/vs/base/common/resources.js';\nclass TMScopeRegistry {\n    constructor() {\n        this._scopeNameToLanguageRegistration = Object.create(null);\n    }\n    reset() {\n        this._scopeNameToLanguageRegistration = Object.create(null);\n    }\n    register(def) {\n        if (this._scopeNameToLanguageRegistration[def.scopeName]) {\n            const existingRegistration = this._scopeNameToLanguageRegistration[def.scopeName];\n            if (!resources.isEqual(existingRegistration.location, def.location)) {\n                console.warn(`Overwriting grammar scope name to file mapping for scope ${def.scopeName}.\\n` +\n                    `Old grammar file: ${( ( existingRegistration.location.toString()))}.\\n` +\n                    `New grammar file: ${( ( def.location.toString()))}`);\n            }\n        }\n        this._scopeNameToLanguageRegistration[def.scopeName] = def;\n    }\n    getGrammarDefinition(scopeName) {\n        return this._scopeNameToLanguageRegistration[scopeName] || null;\n    }\n}\nexport { TMScopeRegistry };\n", "import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { ExtensionsRegistry } from '../../extensions/common/extensionsRegistry.js';\nimport { languagesExtPoint } from '../../language/common/languageService.js';\nconst grammarsExtPoint = ( ExtensionsRegistry.registerExtensionPoint({\n    extensionPoint: 'grammars',\n    deps: [languagesExtPoint],\n    jsonSchema: {\n        description: ( nls.localize(\n            'vscode.extension.contributes.grammars',\n            'Contributes textmate tokenizers.'\n        )),\n        type: 'array',\n        defaultSnippets: [{ body: [{ language: '${1:id}', scopeName: 'source.${2:id}', path: './syntaxes/${3:id}.tmLanguage.' }] }],\n        items: {\n            type: 'object',\n            defaultSnippets: [{ body: { language: '${1:id}', scopeName: 'source.${2:id}', path: './syntaxes/${3:id}.tmLanguage.' } }],\n            properties: {\n                language: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.grammars.language',\n                        'Language identifier for which this syntax is contributed to.'\n                    )),\n                    type: 'string'\n                },\n                scopeName: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.grammars.scopeName',\n                        'Textmate scope name used by the tmLanguage file.'\n                    )),\n                    type: 'string'\n                },\n                path: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.grammars.path',\n                        'Path of the tmLanguage file. The path is relative to the extension folder and typically starts with \\'./syntaxes/\\'.'\n                    )),\n                    type: 'string'\n                },\n                embeddedLanguages: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.grammars.embeddedLanguages',\n                        'A map of scope name to language id if this grammar contains embedded languages.'\n                    )),\n                    type: 'object'\n                },\n                tokenTypes: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.grammars.tokenTypes',\n                        'A map of scope name to token types.'\n                    )),\n                    type: 'object',\n                    additionalProperties: {\n                        enum: ['string', 'comment', 'other']\n                    }\n                },\n                injectTo: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.grammars.injectTo',\n                        'List of language scope names to which this grammar is injected to.'\n                    )),\n                    type: 'array',\n                    items: {\n                        type: 'string'\n                    }\n                },\n                balancedBracketScopes: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.grammars.balancedBracketScopes',\n                        'Defines which scope names contain balanced brackets.'\n                    )),\n                    type: 'array',\n                    items: {\n                        type: 'string'\n                    },\n                    default: ['*'],\n                },\n                unbalancedBracketScopes: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.grammars.unbalancedBracketScopes',\n                        'Defines which scope names do not contain balanced brackets.'\n                    )),\n                    type: 'array',\n                    items: {\n                        type: 'string'\n                    },\n                    default: [],\n                },\n            },\n            required: ['scopeName', 'path']\n        }\n    }\n}));\nexport { grammarsExtPoint };\n", "import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { ExtensionsRegistry } from '../../extensions/common/extensionsRegistry.js';\nimport { getTokenClassificationRegistry, typeAndModifierIdPattern } from '../../../../platform/theme/common/tokenClassificationRegistry.js';\nconst tokenClassificationRegistry = getTokenClassificationRegistry();\nconst tokenTypeExtPoint = ( ExtensionsRegistry.registerExtensionPoint({\n    extensionPoint: 'semanticTokenTypes',\n    jsonSchema: {\n        description: ( nls.localize('contributes.semanticTokenTypes', 'Contributes semantic token types.')),\n        type: 'array',\n        items: {\n            type: 'object',\n            properties: {\n                id: {\n                    type: 'string',\n                    description: ( nls.localize(\n                        'contributes.semanticTokenTypes.id',\n                        'The identifier of the semantic token type'\n                    )),\n                    pattern: typeAndModifierIdPattern,\n                    patternErrorMessage: ( nls.localize(\n                        'contributes.semanticTokenTypes.id.format',\n                        'Identifiers should be in the form letterOrDigit[_-letterOrDigit]*'\n                    )),\n                },\n                superType: {\n                    type: 'string',\n                    description: ( nls.localize(\n                        'contributes.semanticTokenTypes.superType',\n                        'The super type of the semantic token type'\n                    )),\n                    pattern: typeAndModifierIdPattern,\n                    patternErrorMessage: ( nls.localize(\n                        'contributes.semanticTokenTypes.superType.format',\n                        'Super types should be in the form letterOrDigit[_-letterOrDigit]*'\n                    )),\n                },\n                description: {\n                    type: 'string',\n                    description: ( nls.localize(\n                        'contributes.color.description',\n                        'The description of the semantic token type'\n                    )),\n                }\n            }\n        }\n    }\n}));\nconst tokenModifierExtPoint = ( ExtensionsRegistry.registerExtensionPoint({\n    extensionPoint: 'semanticTokenModifiers',\n    jsonSchema: {\n        description: ( nls.localize(\n            'contributes.semanticTokenModifiers',\n            'Contributes semantic token modifiers.'\n        )),\n        type: 'array',\n        items: {\n            type: 'object',\n            properties: {\n                id: {\n                    type: 'string',\n                    description: ( nls.localize(\n                        'contributes.semanticTokenModifiers.id',\n                        'The identifier of the semantic token modifier'\n                    )),\n                    pattern: typeAndModifierIdPattern,\n                    patternErrorMessage: ( nls.localize(\n                        'contributes.semanticTokenModifiers.id.format',\n                        'Identifiers should be in the form letterOrDigit[_-letterOrDigit]*'\n                    ))\n                },\n                description: {\n                    description: ( nls.localize(\n                        'contributes.semanticTokenModifiers.description',\n                        'The description of the semantic token modifier'\n                    ))\n                }\n            }\n        }\n    }\n}));\nconst tokenStyleDefaultsExtPoint = ( ExtensionsRegistry.registerExtensionPoint({\n    extensionPoint: 'semanticTokenScopes',\n    jsonSchema: {\n        description: ( nls.localize(\n            'contributes.semanticTokenScopes',\n            'Contributes semantic token scope maps.'\n        )),\n        type: 'array',\n        items: {\n            type: 'object',\n            properties: {\n                language: {\n                    description: ( nls.localize(\n                        'contributes.semanticTokenScopes.languages',\n                        'Lists the languge for which the defaults are.'\n                    )),\n                    type: 'string'\n                },\n                scopes: {\n                    description: ( nls.localize(\n                        'contributes.semanticTokenScopes.scopes',\n                        'Maps a semantic token (described by semantic token selector) to one or more textMate scopes used to represent that token.'\n                    )),\n                    type: 'object',\n                    additionalProperties: {\n                        type: 'array',\n                        items: {\n                            type: 'string'\n                        }\n                    }\n                }\n            }\n        }\n    }\n}));\nclass TokenClassificationExtensionPoints {\n    constructor() {\n        function validateTypeOrModifier(contribution, extensionPoint, collector) {\n            if (typeof contribution.id !== 'string' || contribution.id.length === 0) {\n                collector.error(( nls.localize(\n                    'invalid.id',\n                    \"'configuration.{0}.id' must be defined and can not be empty\",\n                    extensionPoint\n                )));\n                return false;\n            }\n            if (!contribution.id.match(typeAndModifierIdPattern)) {\n                collector.error(( nls.localize(\n                    'invalid.id.format',\n                    \"'configuration.{0}.id' must follow the pattern letterOrDigit[-_letterOrDigit]*\",\n                    extensionPoint\n                )));\n                return false;\n            }\n            const superType = contribution.superType;\n            if (superType && !superType.match(typeAndModifierIdPattern)) {\n                collector.error(( nls.localize(\n                    'invalid.superType.format',\n                    \"'configuration.{0}.superType' must follow the pattern letterOrDigit[-_letterOrDigit]*\",\n                    extensionPoint\n                )));\n                return false;\n            }\n            if (typeof contribution.description !== 'string' || contribution.id.length === 0) {\n                collector.error(( nls.localize(\n                    'invalid.description',\n                    \"'configuration.{0}.description' must be defined and can not be empty\",\n                    extensionPoint\n                )));\n                return false;\n            }\n            return true;\n        }\n        tokenTypeExtPoint.setHandler((extensions, delta) => {\n            for (const extension of delta.added) {\n                const extensionValue = extension.value;\n                const collector = extension.collector;\n                if (!extensionValue || !Array.isArray(extensionValue)) {\n                    collector.error(( nls.localize(\n                        'invalid.semanticTokenTypeConfiguration',\n                        \"'configuration.semanticTokenType' must be an array\"\n                    )));\n                    return;\n                }\n                for (const contribution of extensionValue) {\n                    if (validateTypeOrModifier(contribution, 'semanticTokenType', collector)) {\n                        tokenClassificationRegistry.registerTokenType(contribution.id, contribution.description, contribution.superType);\n                    }\n                }\n            }\n            for (const extension of delta.removed) {\n                const extensionValue = extension.value;\n                for (const contribution of extensionValue) {\n                    tokenClassificationRegistry.deregisterTokenType(contribution.id);\n                }\n            }\n        });\n        tokenModifierExtPoint.setHandler((extensions, delta) => {\n            for (const extension of delta.added) {\n                const extensionValue = extension.value;\n                const collector = extension.collector;\n                if (!extensionValue || !Array.isArray(extensionValue)) {\n                    collector.error(( nls.localize(\n                        'invalid.semanticTokenModifierConfiguration',\n                        \"'configuration.semanticTokenModifier' must be an array\"\n                    )));\n                    return;\n                }\n                for (const contribution of extensionValue) {\n                    if (validateTypeOrModifier(contribution, 'semanticTokenModifier', collector)) {\n                        tokenClassificationRegistry.registerTokenModifier(contribution.id, contribution.description);\n                    }\n                }\n            }\n            for (const extension of delta.removed) {\n                const extensionValue = extension.value;\n                for (const contribution of extensionValue) {\n                    tokenClassificationRegistry.deregisterTokenModifier(contribution.id);\n                }\n            }\n        });\n        tokenStyleDefaultsExtPoint.setHandler((extensions, delta) => {\n            for (const extension of delta.added) {\n                const extensionValue = extension.value;\n                const collector = extension.collector;\n                if (!extensionValue || !Array.isArray(extensionValue)) {\n                    collector.error(( nls.localize(\n                        'invalid.semanticTokenScopes.configuration',\n                        \"'configuration.semanticTokenScopes' must be an array\"\n                    )));\n                    return;\n                }\n                for (const contribution of extensionValue) {\n                    if (contribution.language && typeof contribution.language !== 'string') {\n                        collector.error(( nls.localize(\n                            'invalid.semanticTokenScopes.language',\n                            \"'configuration.semanticTokenScopes.language' must be a string\"\n                        )));\n                        continue;\n                    }\n                    if (!contribution.scopes || typeof contribution.scopes !== 'object') {\n                        collector.error(( nls.localize(\n                            'invalid.semanticTokenScopes.scopes',\n                            \"'configuration.semanticTokenScopes.scopes' must be defined as an object\"\n                        )));\n                        continue;\n                    }\n                    for (const selectorString in contribution.scopes) {\n                        const tmScopes = contribution.scopes[selectorString];\n                        if (!Array.isArray(tmScopes) || ( tmScopes.some(l => typeof l !== 'string'))) {\n                            collector.error(( nls.localize(\n                                'invalid.semanticTokenScopes.scopes.value',\n                                \"'configuration.semanticTokenScopes.scopes' values must be an array of strings\"\n                            )));\n                            continue;\n                        }\n                        try {\n                            const selector = tokenClassificationRegistry.parseTokenSelector(selectorString, contribution.language);\n                            tokenClassificationRegistry.registerTokenStyleDefault(selector, { scopesToProbe: ( tmScopes.map(s => s.split(' '))) });\n                        }\n                        catch (e) {\n                            collector.error(( nls.localize(\n                                'invalid.semanticTokenScopes.scopes.selector',\n                                \"configuration.semanticTokenScopes.scopes': Problems parsing selector {0}.\",\n                                selectorString\n                            )));\n                        }\n                    }\n                }\n            }\n            for (const extension of delta.removed) {\n                const extensionValue = extension.value;\n                for (const contribution of extensionValue) {\n                    for (const selectorString in contribution.scopes) {\n                        const tmScopes = contribution.scopes[selectorString];\n                        try {\n                            const selector = tokenClassificationRegistry.parseTokenSelector(selectorString, contribution.language);\n                            tokenClassificationRegistry.registerTokenStyleDefault(selector, { scopesToProbe: ( tmScopes.map(s => s.split(' '))) });\n                        }\n                        catch (e) {\n                        }\n                    }\n                }\n            }\n        });\n    }\n}\nexport { TokenClassificationExtensionPoints };\n"],
  "mappings": "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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "this", "e", "t", "Object", "defineProperty", "value", "UseOnigurumaFindOptions", "DebugFlags", "InDebugMode", "process", "env", "applyStateStackDiff", "diffStateStacksRefEq", "grammar_1", "first", "second", "pops", "newFrames", "curFirst", "curSecond", "depth", "parent", "push", "toStateStackFrame", "reverse", "stack", "diff", "curStack", "i", "frame", "StateStackImpl", "pushFrame", "EncodedTokenAttributes", "toOptionalTokenType", "toBinaryStr", "encodedTokenAttributes", "r", "toString", "length", "print", "languageId", "getLanguageId", "tokenType", "getTokenType", "fontStyle", "getFontStyle", "foreground", "getForeground", "background", "getBackground", "console", "log", "containsBalancedBrackets", "set", "_languageId", "_tokenType", "_containsBalancedBracketsBit", "_fontStyle", "_foreground", "_background", "standardType", "BasicScopeAttributesProvider", "BasicScopeAttributes", "utils_1", "constructor", "initialLanguageId", "embeddedLanguages", "_getBasicScopeAttributes", "CachedFn", "scopeName", "_scopeToLanguage", "standardTokenType", "_toStandardTokenType", "_defaultAttributes", "_embeddedLanguagesMatcher", "ScopeMatcher", "entries", "getDefaultAttributes", "getBasicScopeAttributes", "_NULL_SCOPE_METADATA", "get", "scope", "match", "m", "STANDARD_TOKEN_TYPE_REGEXP", "Error", "values", "scopesRegExp", "Map", "escapedScopes", "map", "escapeRegExpCharacters", "sort", "RegExp", "join", "LineTokens", "BalancedBracketSelectors", "AttributedScopeStack", "Grammar", "createGrammar", "debug_1", "encodedTokenAttributes_1", "matcher_1", "onigLib_1", "rule_1", "theme_1", "basicScopesAttributeProvider_1", "tokenizeString_1", "collectInjections", "result", "selector", "rule", "ruleFactoryHelper", "grammar", "matchers", "createMatchers", "nameMatcher", "ruleId", "RuleFactory", "getCompiledRuleId", "repository", "matcher", "debugSelector", "priority", "identifers", "scopes", "lastIndex", "every", "identifier", "scopesAreMatching", "thisScopeName", "len", "substr", "initialLanguage", "tokenTypes", "balancedBracketSelectors", "grammarRepository", "onigLib", "_rootScopeName", "_onigLib", "_basicScopeAttributesProvider", "_rootId", "_lastRuleId", "_ruleId2desc", "_includedGrammars", "_grammarRepository", "_grammar", "initGrammar", "_injections", "_tokenTypeMatchers", "keys", "type", "themeProvider", "dispose", "createOnigScanner", "sources", "createOnigString", "getMetadataForScope", "_collectInjections", "getExternalGrammar", "rawInjections", "injections", "expression", "injectionScopeNames", "forEach", "injectionScopeName", "injectionGrammar", "injectionSelector", "i1", "i2", "getInjections", "injection", "registerRule", "id", "ruleIdFromNumber", "getRule", "ruleIdToNumber", "rawIncludedGrammar", "lookup", "$base", "tokenizeLine", "lineText", "prevState", "timeLimit", "_tokenize", "tokens", "lineTokens", "getResult", "ruleStack", "lineLength", "stoppedEarly", "tokenizeLine2", "getBinaryResult", "emitBinaryTokens", "isFirstLine", "$self", "NULL", "reset", "rawDefaultMetadata", "defaultStyle", "getDefaults", "defaultMetadata", "foregroundId", "backgroundId", "rootScopeName", "getName", "scopeList", "createRootAndLookUpScopeName", "createRoot", "onigLineText", "content", "_tokenizeString", "disposeOnigString", "base", "clone", "$vscodeTextmateLocation", "patterns", "name", "scopePath", "tokenAttributes", "static", "namesScopeList", "contentNameScopesList", "current", "scopeNames", "ScopeStack", "rawRootMetadata", "rootStyle", "themeMatch", "resolvedTokenAttributes", "mergeAttributes", "getScopeNames", "equals", "other", "a", "b", "existingTokenAttributes", "basicScopeAttributes", "styleAttributes", "pushAttributed", "indexOf", "_pushAttributed", "split", "target", "rawMetadata", "newPath", "scopeThemeMatchResult", "metadata", "getSegments", "getExtensionIfDefined", "self", "enterPos", "anchorPos", "beginRuleCapturedEOL", "endRule", "nameScopesList", "_stackElementBrand", "_enterPos", "_anchorPos", "_equals", "_structuralEquals", "el", "_reset", "pop", "safePop", "getEnterPos", "getAnchorPos", "_writeString", "res", "outIndex", "withContentNameScopesList", "contentNameScopeStack", "withEndRule", "hasSameRuleAs", "fromExtension", "balancedBracketScopes", "unbalancedBracketScopes", "allowAny", "flatMap", "matchesAlways", "matchesNever", "excluder", "includer", "tokenTypeOverrides", "_emitBinaryTokens", "_tokenTypeOverrides", "_lineText", "_tokens", "_binaryTokens", "_lastTokenEndIndex", "produce", "endIndex", "produceFromScopes", "scopesList", "substring", "replace", "k", "startIndex", "Uint32Array", "parseInclude", "TopLevelRepositoryReference", "TopLevelReference", "RelativeReference", "SelfReference", "BaseReference", "ScopeDependencyProcessor", "ExternalReferenceCollector", "TopLevelRepositoryRuleReference", "TopLevelRuleReference", "toKey", "ruleName", "_references", "_seenReferenceKeys", "Set", "visitedRule", "references", "add", "reference", "key", "has", "collectReferencesOfReference", "baseGrammarScopeName", "repo", "selfGrammar", "baseGrammar", "collectExternalReferencesInTopLevelRule", "collectExternalReferencesInTopLevelRepositoryRule", "context", "collectExternalReferencesInRules", "Array", "isArray", "rules", "patternRepository", "mergeObjects", "include", "kind", "newContext", "initialScopeName", "seenFullScopeRequests", "seenPartialScopeRequests", "Q", "processQueue", "q", "deps", "dep", "indexOfSharp", "__createBinding", "create", "o", "k2", "enumerable", "__exportStar", "p", "prototype", "hasOwnProperty", "call", "LocalStackElement", "TokenizeStringResult", "linePos", "checkWhileConditions", "STOP", "anchorPosition", "whileCheckResult", "whileRules", "node", "nodeRule", "BeginWhileRule", "whileRule", "ruleScanner", "findOptions", "prepareRuleWhileSearch", "findNextMatchSync", "debugName", "debugWhileRegExp", "whileRuleId", "captureIndices", "start", "handleCaptures", "whileCaptures", "end", "startTime", "Date", "now", "scanNext", "matchResult", "prepareRuleSearch", "perfStart", "performanceNow", "elapsedMillis", "warn", "matchedRuleId", "injectionResult", "bestMatchRuleId", "bestMatchRating", "Number", "MAX_VALUE", "bestMatchCaptureIndices", "bestMatchResultPriority", "matchRating", "priorityMatch", "matchResultScore", "injectionResultScore", "hasAdvanced", "endRuleId", "poppedRule", "debugEndRegExp", "endCaptures", "popped", "error", "_rule", "beforePush", "BeginEndRule", "pushedRule", "debugBeginRegExp", "beginCaptures", "contentName", "getContentName", "endHasBackReferences", "getEndWithResolvedBackReferences", "whileHasBackReferences", "getWhileWithResolvedBackReferences", "matchingRule", "debugMatchRegExp", "captures", "endRegexSource", "allowA", "allowG", "compile", "getFindOptions", "compileAG", "compileWhile", "compileWhileAG", "options", "lineTextContent", "Math", "min", "localStack", "maxEnd", "captureRule", "captureIndex", "endPos", "retokenizeCapturedWithRuleId", "stackClone", "onigSubStr", "captureRuleScopeName", "captureRuleScopesList", "doFail", "streamState", "msg", "pos", "source", "parseJSON", "filename", "withMetadata", "JSONStreamState", "token", "JSONToken", "state", "cur", "stateStack", "objStack", "pushState", "popState", "fail", "nextJSONToken", "toLocation", "keyValue", "parseFloat", "newArr", "newDict", "line", "char", "offset", "_state", "_out", "chCode", "charCodeAt", "_", "m0", "String", "fromCodePoint", "parseInt", "parseRawGrammar", "INITIAL", "Registry", "grammarReader", "registry_1", "grammarDependencies_1", "diffStateStacks_1", "_options", "_syncRegistry", "SyncRegistry", "Theme", "createFromRawTheme", "theme", "colorMap", "_ensureGrammarCache", "setTheme", "getColorMap", "loadGrammarWithEmbeddedLanguages", "loadGrammarWithConfiguration", "configuration", "_loadGrammar", "unbalancedBracketSelectors", "loadGrammar", "async", "dependencyProcessor", "Promise", "all", "request", "_loadSingleGrammar", "_grammarForScopeName", "_doLoadSingleGrammar", "addGrammar", "rawGrammar", "grammarForScopeName", "isIdentifier", "matchesName", "results", "tokenizer", "input", "regex", "exec", "next", "charAt", "parseConjunction", "parseOperand", "expressionToNegate", "matcherInput", "expressionInParents", "some", "parseInnerExpression", "identifiers", "str", "plist", "json_1", "filePath", "test", "contents", "JSON", "parse", "parseWithLocation", "parsePLIST", "_parse", "locationKeyName", "advancePosBy", "by", "advancePosTo", "to", "skipWhitespace", "advanceIfStartsWith", "advanceUntil", "nextOccurence", "captureUntil", "curKey", "newState", "newCur", "dictState", "arrState", "leaveDict", "leaveArray", "acceptString", "val", "acceptReal", "isNaN", "acceptInteger", "acceptDate", "acceptData", "acceptBool", "parseOpenTag", "isClosed", "trim", "parseTagValue", "tag", "peekChCode", "_onigLibPromise", "_grammars", "_rawGrammars", "_injectionGrammars", "_theme", "targetScope", "CompiledRule", "RegExpSourceList", "RegExpSource", "IncludeOnlyRule", "MatchRule", "CaptureRule", "Rule", "HAS_BACK_REFERENCES", "BACK_REFERENCING_END", "Symbol", "$location", "_name", "_nameIsCapturing", "RegexSource", "hasCaptures", "_contentName", "_contentNameIsCapturing", "location", "basename", "replaceCaptures", "super", "collectPatterns", "out", "_match", "_cachedCompiledPatterns", "_getCachedCompiledPatterns", "hasMissingPatterns", "pattern", "begin", "applyEndPatternLast", "_begin", "_end", "hasBackReferences", "resolveBackReferences", "unshift", "setSource", "_while", "_cachedCompiledWhilePatterns", "_getCachedCompiledWhilePatterns", "helper", "desc", "_compileCaptures", "_compilePatterns", "while", "maximumCaptureId", "captureId", "numericCaptureId", "createCaptureRule", "localIncludedRule", "externalGrammarName", "externalGrammarInclude", "externalGrammar", "externalIncludedRule", "skipRule", "regExpSource", "lastPushedPos", "output", "hasAnchor", "nextCh", "_anchorCache", "_buildAnchorCache", "newSource", "capturedValues", "capture", "g1", "ch", "A0_G0_result", "A0_G1_result", "A1_G0_result", "A1_G1_result", "A0_G0", "A0_G1", "A1_G0", "A1_G1", "resolveAnchors", "_items", "_hasAnchors", "_cached", "_disposeCaches", "item", "index", "regExps", "_resolveAnchors", "scanner", "string", "startPosition", "ThemeTrieElement", "ThemeTrieElementRule", "ColorMap", "fontStyleToString", "ParsedThemeRule", "parseTheme", "StyleAttributes", "_colorMap", "_defaults", "_root", "_cachedMatchRoot", "createFromParsedTheme", "parsedThemeRules", "strcmp", "strArrCmp", "parentScopes", "defaultFontStyle", "defaultForeground", "defaultBackground", "incomingDefaults", "shift", "defaults", "getId", "insert", "effectiveRule", "find", "v", "scopePattern", "_matchesScope", "path", "segments", "extends", "startsWith", "settings", "resultLen", "entry", "_scope", "j", "lenJ", "isValidHexColor", "slice", "style", "_lastColorId", "_id2color", "_color2id", "_isFrozen", "color", "toUpperCase", "scopeDepth", "arr", "acceptOverwrite", "_mainRule", "rulesWithParentScopes", "_children", "_rulesWithParentScopes", "_cmpBySpecificity", "aParentScopes", "bParentScopes", "aParentScopesLen", "bParentScopesLen", "aLen", "bLen", "_sortBySpecificity", "concat", "head", "tail", "dotIndex", "_doInsertHere", "child", "cloneArr", "doClone", "something", "obj", "idx", "lastIndexOf", "CAPTURING_REGEX_SOURCE", "regexSource", "captureSource", "commandIndex", "command", "toLowerCase", "len1", "len2", "hex", "fn", "cache", "performance", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "__webpack_modules__", "require_main", "e", "t", "n", "r", "i", "o", "a", "f", "s", "u", "c", "_", "d", "g", "l", "languageId", "encodedLanguageId", "c", "controllerContainer", "vscodeTextmate", "_a", "vscodeOniguruma", "observableConfigValue", "encodedLanguageId", "languageId", "init_platform", "ExtensionPoints", "getServiceOverride"]
}

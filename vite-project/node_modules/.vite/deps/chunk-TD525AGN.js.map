{
  "version": 3,
  "sources": ["../../vscode/vscode/src/vs/workbench/services/environment/common/environmentService.js", "../../vscode/missing-services.js", "../../vscode/vscode/src/vs/workbench/services/panecomposite/browser/panecomposite.js", "../../vscode/vscode/src/vs/workbench/services/workingCopy/common/workingCopyFileService.js", "../../vscode/vscode/src/vs/workbench/services/workingCopy/common/workingCopyService.js", "../../vscode/vscode/src/vs/workbench/services/workingCopy/common/workingCopyFileOperationParticipant.js", "../../vscode/vscode/src/vs/workbench/services/workingCopy/common/storedFileWorkingCopySaveParticipant.js", "../../vscode/vscode/src/vs/workbench/services/path/common/pathService.js", "../../vscode/vscode/src/vs/platform/workspace/common/virtualWorkspace.js", "../../vscode/vscode/src/vs/workbench/services/languageStatus/common/languageStatusService.js", "../../vscode/vscode/src/vs/workbench/services/host/browser/host.js", "../../vscode/vscode/src/vs/workbench/services/languageDetection/common/languageDetectionWorkerService.js", "../../vscode/vscode/src/vs/platform/keyboardLayout/common/keyboardLayout.js", "../../vscode/vscode/src/vs/workbench/services/userData/browser/userDataInit.js", "../../vscode/vscode/src/vs/workbench/services/themes/browser/browserHostColorSchemeService.js", "../../vscode/vscode/src/vs/workbench/services/themes/common/hostColorSchemeService.js", "../../vscode/vscode/src/vs/workbench/services/preferences/common/preferences.js", "../../vscode/vscode/src/vs/workbench/services/userDataProfile/common/userDataProfileService.js", "../../vscode/vscode/src/vs/workbench/services/keybinding/common/fallbackKeyboardMapper.js", "../../vscode/vscode/src/vs/workbench/services/activity/common/activity.js", "../../vscode/vscode/src/vs/platform/debug/common/extensionHostDebug.js", "../../vscode/vscode/src/vs/workbench/common/views.js", "../../vscode/vscode/src/vs/workbench/services/history/common/history.js", "../../vscode/vscode/src/vs/workbench/contrib/tasks/common/taskService.js", "../../vscode/vscode/src/vs/workbench/services/configurationResolver/common/configurationResolver.js", "../../vscode/vscode/src/vs/workbench/services/path/browser/pathService.js", "../../vscode/vscode/src/vs/workbench/services/search/common/search.js", "../../vscode/vscode/src/vs/platform/request/common/request.js", "../../vscode/vscode/src/vs/workbench/services/workspaces/common/workspaceEditing.js", "../../vscode/vscode/src/vs/workbench/services/timer/browser/timerService.js", "../../vscode/vscode/src/vs/workbench/contrib/extensions/common/extensions.js", "../../vscode/vscode/src/vs/workbench/services/extensionManagement/common/extensionManagement.js", "../../vscode/vscode/src/vs/platform/tunnel/common/tunnel.js", "../../vscode/vscode/src/vs/workbench/services/workingCopy/common/workingCopyBackup.js", "../../vscode/vscode/src/vs/workbench/services/filesConfiguration/common/filesConfigurationService.js", "../../vscode/vscode/src/vs/workbench/common/resources.js", "../../vscode/vscode/src/vs/workbench/services/untitled/common/untitledTextEditorService.js", "../../vscode/vscode/src/vs/workbench/services/untitled/common/untitledTextEditorModel.js", "../../vscode/vscode/src/vs/workbench/common/editor/textEditorModel.js", "../../vscode/vscode/src/vs/workbench/common/editor/editorModel.js", "../../vscode/vscode/src/vs/workbench/services/workingCopy/common/workingCopy.js", "../../vscode/vscode/src/vs/workbench/services/textfile/common/encoding.js", "../../vscode/override/vs/platform/dialogs/common/dialogs.js", "../../vscode/vscode/src/vs/workbench/services/files/common/elevatedFileService.js", "../../vscode/vscode/src/vs/workbench/services/files/browser/elevatedFileService.js", "../../vscode/vscode/src/vs/workbench/services/decorations/common/decorations.js", "../../vscode/vscode/src/vs/platform/request/browser/requestService.js", "../../vscode/vscode/src/vs/base/parts/request/browser/request.js", "../../vscode/vscode/src/vs/base/parts/request/common/request.js", "../../vscode/vscode/src/vs/workbench/services/workingCopy/common/workingCopyBackupService.js", "../../vscode/vscode/src/vs/workbench/services/textfile/browser/browserTextFileService.js", "../../vscode/vscode/src/vs/workbench/services/textfile/browser/textFileService.js", "../../vscode/vscode/src/vs/workbench/services/textfile/common/textFileEditorModelManager.js", "../../vscode/vscode/src/vs/workbench/services/textfile/common/textFileEditorModel.js", "../../vscode/vscode/src/vs/workbench/services/textfile/common/textFileSaveParticipant.js", "../../vscode/vscode/src/vs/platform/dialogs/common/dialogs.js", "../../vscode/vscode/src/vs/workbench/services/decorations/browser/decorationsService.js", "../../vscode/vscode/src/vs/platform/uriIdentity/common/uriIdentityService.js", "../../vscode/vscode/src/vs/base/common/skipList.js", "../../vscode/vscode/src/vs/workbench/services/configuration/common/jsonEditing.js", "../../vscode/vscode/src/vs/workbench/services/configuration/common/jsonEditingService.js", "../../vscode/vscode/src/vs/base/common/jsonFormatter.js", "../../vscode/vscode/src/vs/base/common/jsonEdit.js", "../../vscode/vscode/src/vs/platform/workspaces/common/workspaces.js", "../../vscode/vscode/src/vs/workbench/services/textfile/common/textEditorService.js", "../../vscode/vscode/src/vs/workbench/common/editor/diffEditorInput.js", "../../vscode/vscode/src/vs/workbench/common/editor/sideBySideEditorInput.js", "../../vscode/vscode/src/vs/workbench/common/editor/editorInput.js", "../../vscode/vscode/src/vs/workbench/common/editor/diffEditorModel.js", "../../vscode/vscode/src/vs/workbench/common/editor/textDiffEditorModel.js", "../../vscode/vscode/src/vs/workbench/common/editor/textResourceEditorInput.js", "../../vscode/vscode/src/vs/workbench/common/editor/resourceEditorInput.js", "../../vscode/vscode/src/vs/workbench/common/editor/textResourceEditorModel.js", "../../vscode/vscode/src/vs/workbench/services/untitled/common/untitledTextEditorInput.js", "../../vscode/vscode/src/vs/workbench/services/editor/common/editorResolverService.js", "../../vscode/vscode/src/vs/workbench/services/lifecycle/common/lifecycleService.js", "../../vscode/vscode/src/vs/workbench/services/output/common/output.js", "../../vscode/vscode/src/vs/workbench/contrib/output/browser/outputServices.js", "../../vscode/vscode/src/vs/workbench/contrib/output/browser/outputLinkProvider.js", "../../vscode/vscode/src/vs/workbench/contrib/output/common/outputChannelModelService.js", "../../vscode/vscode/src/vs/base/common/date.js", "../../vscode/vscode/src/vs/workbench/contrib/output/common/outputChannelModel.js", "../../vscode/vscode/src/vs/workbench/services/hover/browser/hover.js", "../../vscode/vscode/src/vs/workbench/contrib/files/browser/files.js", "../../vscode/vscode/src/vs/workbench/contrib/files/common/files.js", "../../vscode/vscode/src/vs/workbench/contrib/files/common/explorerModel.js", "../../vscode/vscode/src/vs/workbench/contrib/files/common/explorerFileNestingTrie.js", "../../vscode/vscode/src/vs/platform/extensionManagement/common/extensionStorage.js", "../../vscode/vscode/src/vs/platform/languagePacks/common/languagePacks.js", "../../vscode/vscode/src/vs/workbench/services/views/common/treeViewsService.js", "../../vscode/vscode/src/vs/workbench/services/views/browser/treeViewsService.js", "../../vscode/vscode/src/vs/workbench/browser/parts/editor/breadcrumbs.js", "../../vscode/vscode/src/vs/workbench/services/outline/browser/outline.js", "../../vscode/vscode/src/vs/platform/update/common/update.js", "../../vscode/vscode/src/vs/workbench/services/statusbar/browser/statusbar.js", "../../vscode/vscode/src/vs/workbench/contrib/terminal/browser/terminal.js", "../../vscode/vscode/src/vs/workbench/contrib/terminal/common/terminal.js", "../../vscode/vscode/src/vs/platform/terminal/common/terminal.js", "../../vscode/vscode/src/vs/workbench/contrib/terminal/common/terminalExtensionPoints.js", "../../vscode/vscode/src/vs/workbench/contrib/terminalContrib/links/browser/links.js", "../../vscode/vscode/src/vs/workbench/contrib/terminal/common/environmentVariable.js", "../../vscode/vscode/src/vs/workbench/contrib/terminalContrib/quickFix/browser/quickFix.js", "../../vscode/vscode/src/vs/workbench/contrib/preferences/common/preferences.js", "../../vscode/vscode/src/vs/workbench/services/userDataSync/common/userDataSync.js", "../../vscode/vscode/src/vs/platform/userDataSync/common/userDataSync.js", "../../vscode/vscode/src/vs/workbench/services/keybinding/common/keybindingEditing.js", "../../vscode/vscode/src/vs/workbench/contrib/notebook/common/notebookService.js", "../../vscode/vscode/src/vs/workbench/contrib/search/common/searchHistoryService.js", "../../vscode/vscode/src/vs/workbench/contrib/search/browser/replace.js", "../../vscode/vscode/src/vs/workbench/contrib/search/browser/searchModel.js", "../../vscode/override/vs/workbench/contrib/notebook/browser/contrib/find/findMatchDecorationModel.js", "../../vscode/override/vs/workbench/contrib/notebook/browser/notebookEditorWidget.js", "../../vscode/vscode/src/vs/workbench/contrib/notebook/browser/services/notebookEditorService.js", "../../vscode/vscode/src/vs/workbench/contrib/search/browser/searchNotebookHelpers.js", "../../vscode/vscode/src/vs/workbench/contrib/search/common/notebookSearch.js", "../../vscode/vscode/src/vs/workbench/services/search/common/replace.js", "../../vscode/vscode/src/vs/workbench/services/search/common/searchHelpers.js", "../../vscode/vscode/src/vs/workbench/contrib/notebook/common/notebookEditorModelResolverService.js", "../../vscode/vscode/src/vs/workbench/services/workingCopy/common/workingCopyEditorService.js", "../../vscode/vscode/src/vs/workbench/services/userActivity/common/userActivityService.js", "../../vscode/vscode/src/vs/workbench/services/userActivity/common/userActivityRegistry.js", "../../vscode/vscode/src/vs/workbench/services/workspaces/common/canonicalUriService.js", "../../vscode/vscode/src/vs/platform/workspace/common/canonicalUri.js", "../../vscode/vscode/src/vs/workbench/api/browser/statusBarExtensionPoint.js", "../../vscode/vscode/src/vs/workbench/common/theme.js", "../../vscode/vscode/src/vs/workbench/services/assignment/common/assignmentService.js", "../../vscode/vscode/src/vs/workbench/contrib/chat/common/chatService.js", "../../vscode/vscode/src/vs/workbench/services/terminal/common/embedderTerminalService.js", "../../vscode/vscode/src/vs/workbench/contrib/customEditor/common/customEditor.js", "../../vscode/vscode/src/vs/workbench/contrib/webviewPanel/browser/webviewWorkbenchService.js", "../../vscode/vscode/src/vs/workbench/contrib/webview/browser/webview.js", "../../vscode/vscode/src/vs/workbench/common/memento.js", "../../vscode/vscode/src/vs/workbench/contrib/webviewPanel/browser/webviewEditor.js", "../../vscode/vscode/src/vs/workbench/browser/composite.js", "../../vscode/vscode/src/vs/workbench/common/component.js", "../../vscode/vscode/src/vs/workbench/browser/parts/editor/editorPane.js", "../../vscode/vscode/src/vs/workbench/browser/parts/editor/editor.js", "../../vscode/vscode/src/vs/workbench/contrib/webview/browser/webviewWindowDragMonitor.js", "../../vscode/vscode/src/vs/workbench/contrib/webviewPanel/browser/webviewEditorInput.js", "../../vscode/vscode/src/vs/workbench/services/editor/browser/editorDropService.js", "../../vscode/vscode/src/vs/workbench/services/layout/browser/layoutService.js", "../../vscode/vscode/src/vs/workbench/contrib/webviewPanel/browser/webviewIconManager.js", "../../vscode/vscode/src/vs/workbench/contrib/webviewView/browser/webviewViewService.js", "../../vscode/vscode/src/vs/workbench/contrib/externalUriOpener/common/externalUriOpenerService.js", "../../vscode/vscode/src/vs/workbench/contrib/externalUriOpener/common/configuration.js", "../../vscode/vscode/src/vs/workbench/contrib/url/common/urlGlob.js", "../../vscode/vscode/src/vs/workbench/services/extensions/common/extensionManifestPropertiesService.js", "../../vscode/vscode/src/vs/workbench/services/workspaces/common/workspaceTrust.js", "../../vscode/vscode/src/vs/platform/remote/common/remoteExtensionsScanner.js", "../../vscode/vscode/src/vs/workbench/services/url/browser/urlService.js", "../../vscode/vscode/src/vs/platform/url/common/urlService.js", "../../vscode/vscode/src/vs/workbench/services/environment/browser/environmentService.js", "../../vscode/vscode/src/vs/platform/environment/common/environmentService.js", "../../vscode/vscode/src/vs/platform/url/common/url.js", "../../vscode/vscode/src/vs/platform/credentials/common/credentials.js", "../../vscode/vscode/src/vs/platform/remote/common/remoteSocketFactoryService.js", "../../vscode/vscode/src/vs/workbench/contrib/scm/common/scm.js", "../../vscode/vscode/src/vs/platform/download/common/download.js", "../../vscode/vscode/src/vs/workbench/services/extensions/browser/extensionUrlHandler.js", "../../vscode/vscode/src/vs/workbench/contrib/comments/browser/commentService.js", "../../vscode/vscode/src/vs/workbench/contrib/notebook/common/notebookCellStatusBarService.js", "../../vscode/vscode/src/vs/workbench/contrib/notebook/common/notebookKernelService.js", "../../vscode/vscode/src/vs/workbench/contrib/notebook/common/notebookRendererMessagingService.js", "../../vscode/vscode/src/vs/workbench/contrib/interactive/browser/interactiveDocumentService.js", "../../vscode/vscode/src/vs/workbench/contrib/inlineChat/common/inlineChat.js", "../../vscode/vscode/src/vs/workbench/contrib/chat/browser/chat.js", "../../vscode/vscode/src/vs/workbench/services/remote/common/remoteExplorerService.js", "../../vscode/vscode/src/vs/workbench/services/authentication/common/authentication.js", "../../vscode/vscode/src/vs/workbench/contrib/timeline/common/timeline.js", "../../vscode/vscode/src/vs/workbench/contrib/testing/common/testService.js", "../../vscode/vscode/src/vs/platform/secrets/common/secrets.js", "../../vscode/vscode/src/vs/workbench/contrib/share/common/share.js", "../../vscode/vscode/src/vs/workbench/services/issue/common/issue.js", "../../vscode/vscode/src/vs/workbench/contrib/notebook/common/notebookExecutionStateService.js", "../../vscode/vscode/src/vs/workbench/contrib/chat/common/chatContributionService.js", "../../vscode/vscode/src/vs/workbench/contrib/testing/common/testProfileService.js", "../../vscode/vscode/src/vs/platform/encryption/common/encryptionService.js", "../../vscode/vscode/src/vs/workbench/contrib/testing/common/testResultService.js", "../../vscode/vscode/src/vs/platform/diagnostics/common/diagnostics.js", "../../vscode/vscode/src/vs/workbench/contrib/chat/common/chatProvider.js", "../../vscode/vscode/src/vs/workbench/contrib/chat/common/chatSlashCommands.js", "../../vscode/vscode/src/vs/workbench/contrib/chat/common/chatVariables.js", "../../vscode/vscode/src/vs/workbench/services/aiRelatedInformation/common/aiRelatedInformation.js", "../../vscode/vscode/src/vs/workbench/services/aiEmbeddingVector/common/aiEmbeddingVectorService.js", "../../vscode/vscode/src/vs/platform/sign/common/sign.js", "../../vscode/vscode/src/vs/workbench/services/host/browser/browserHostService.js", "../../vscode/vscode/src/vs/platform/window/common/window.js", "../../vscode/vscode/src/vs/workbench/browser/editor.js", "../../vscode/vscode/src/vs/workbench/services/workspaces/browser/workspaces.js", "../../vscode/vscode/src/vs/workbench/services/banner/browser/bannerService.js", "../../vscode/vscode/src/vs/workbench/services/title/common/titleService.js", "../../vscode/tools.js", "../../vscode/service-override/files.js", "../../vscode/vscode/src/vs/platform/files/common/fileService.js", "../../vscode/vscode/src/vs/platform/files/common/io.js", "../../vscode/vscode/src/vs/platform/files/common/inMemoryFilesystemProvider.js", "../../vscode/vscode/src/vs/platform/files/common/files.js", "../../vscode/vscode/src/vs/workbench/contrib/files/browser/files.contribution.js", "../../vscode/vscode/src/vs/workbench/contrib/files/browser/explorerViewlet.js", "../../vscode/vscode/src/vs/workbench/contrib/files/browser/media/explorerviewlet.css.js", "../../vscode/vscode/src/vs/workbench/contrib/files/browser/views/explorerView.js", "../../vscode/vscode/src/vs/workbench/contrib/files/browser/fileActions.js", "../../vscode/vscode/src/vs/workbench/contrib/files/browser/fileConstants.js", "../../vscode/vscode/src/vs/workbench/browser/parts/editor/editorCommands.js", "../../vscode/vscode/src/vs/workbench/services/editor/common/editorGroupColumn.js", "../../vscode/vscode/src/vs/workbench/browser/parts/editor/textDiffEditor.js", "../../vscode/vscode/src/vs/workbench/browser/parts/editor/textEditor.js", "../../vscode/vscode/src/vs/workbench/browser/parts/editor/editorWithViewState.js", "../../vscode/override/vs/workbench/browser/parts/editor/textEditor.weak.js", "../../vscode/override/vs/workbench/browser/parts/editor/textEditor.js", "../../vscode/vscode/src/vs/workbench/common/editor/editorOptions.js", "../../vscode/vscode/src/vs/workbench/browser/parts/editor/editorQuickAccess.js", "../../vscode/vscode/src/vs/workbench/browser/parts/editor/media/editorquickaccess.css.js", "../../monaco-editor/esm/vs/platform/quickinput/browser/pickerQuickAccess.js", "../../monaco-editor/esm/vs/base/common/fuzzyScorer.js", "../../vscode/vscode/src/vs/workbench/browser/parts/editor/sideBySideEditor.js", "../../vscode/vscode/src/vs/workbench/browser/parts/editor/media/sidebysideeditor.css.js", "../../vscode/vscode/src/vs/workbench/contrib/files/browser/fileImportExport.js", "../../vscode/vscode/src/vs/workbench/contrib/files/browser/views/explorerDecorationsProvider.js", "../../vscode/vscode/src/vs/workbench/contrib/files/browser/views/explorerViewer.js", "../../vscode/vscode/src/vs/workbench/browser/dnd.js", "../../vscode/vscode/src/vs/workbench/services/search/common/ignoreFile.js", "../../vscode/vscode/src/vs/workbench/browser/parts/views/viewPane.js", "../../vscode/vscode/src/vs/workbench/browser/parts/views/media/paneviewlet.css.js", "../../vscode/vscode/src/vs/base/browser/ui/splitview/paneview.js", "../../vscode/vscode/src/vs/base/browser/ui/splitview/paneview.css.js", "../../vscode/vscode/src/vs/workbench/services/progress/browser/progressIndicator.js", "../../vscode/vscode/src/vs/workbench/browser/actions.js", "../../vscode/vscode/src/vs/workbench/browser/parts/views/viewFilter.js", "../../vscode/vscode/src/vs/workbench/browser/labels.js", "../../vscode/vscode/src/vs/workbench/contrib/files/browser/views/emptyView.js", "../../vscode/vscode/src/vs/workbench/contrib/files/browser/views/openEditorsView.js", "../../vscode/vscode/src/vs/workbench/contrib/files/browser/views/media/openeditors.css.js", "../../vscode/vscode/src/vs/workbench/browser/parts/editor/editorActions.js", "../../vscode/vscode/src/vs/workbench/browser/parts/views/viewPaneContainer.js", "../../vscode/vscode/src/vs/workbench/browser/actions/workspaceActions.js", "../../vscode/vscode/src/vs/workbench/browser/actions/workspaceCommands.js"],
  "sourcesContent": ["import { refineServiceDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IEnvironmentService } from 'monaco-editor/esm/vs/platform/environment/common/environment.js';\nconst IWorkbenchEnvironmentService = refineServiceDecorator(IEnvironmentService);\nexport { IWorkbenchEnvironmentService };\n", "import { __decorate, __param } from './external/tslib/tslib.es6.js';\nimport { Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { IEditorService } from './vscode/src/vs/workbench/services/editor/common/editorService.js';\nimport { IPaneCompositePartService } from './vscode/src/vs/workbench/services/panecomposite/browser/panecomposite.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { ITextFileService } from './vscode/src/vs/workbench/services/textfile/common/textfiles.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { IEditorGroupsService } from './vscode/src/vs/workbench/services/editor/common/editorGroupsService.js';\nimport { IWorkingCopyFileService, WorkingCopyFileService } from './vscode/src/vs/workbench/services/workingCopy/common/workingCopyFileService.js';\nimport { IPathService } from './vscode/src/vs/workbench/services/path/common/pathService.js';\nimport { registerSingleton } from 'monaco-editor/esm/vs/platform/instantiation/common/extensions.js';\nimport { IProductService } from 'monaco-editor/esm/vs/platform/product/common/productService.js';\nimport { ILanguageStatusService } from './vscode/src/vs/workbench/services/languageStatus/common/languageStatusService.js';\nimport { LanguageFeatureRegistry } from 'monaco-editor/esm/vs/editor/common/languageFeatureRegistry.js';\nimport { compare } from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { IHostService } from './vscode/src/vs/workbench/services/host/browser/host.js';\nimport { ILifecycleService } from './vscode/src/vs/workbench/services/lifecycle/common/lifecycle.js';\nimport { ILanguageDetectionService } from './vscode/src/vs/workbench/services/languageDetection/common/languageDetectionWorkerService.js';\nimport { IExtensionService, NullExtensionService } from './vscode/src/vs/workbench/services/extensions/common/extensions.js';\nimport { IKeyboardLayoutService } from './vscode/src/vs/platform/keyboardLayout/common/keyboardLayout.js';\nimport { OS } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { IEnvironmentService } from 'monaco-editor/esm/vs/platform/environment/common/environment.js';\nimport { IUserDataInitializationService } from './vscode/src/vs/workbench/services/userData/browser/userDataInit.js';\nimport { BrowserHostColorSchemeService } from './vscode/src/vs/workbench/services/themes/browser/browserHostColorSchemeService.js';\nimport { IHostColorSchemeService } from './vscode/src/vs/workbench/services/themes/common/hostColorSchemeService.js';\nimport { IPreferencesService } from './vscode/src/vs/workbench/services/preferences/common/preferences.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { StandaloneServices } from 'monaco-editor/esm/vs/editor/standalone/browser/standaloneServices.js';\nimport { ICodeEditorService } from 'monaco-editor/esm/vs/editor/browser/services/codeEditorService.js';\nimport { IUserDataProfilesService } from 'monaco-editor/esm/vs/platform/userDataProfile/common/userDataProfile.js';\nimport { IPolicyService } from 'monaco-editor/esm/vs/platform/policy/common/policy.js';\nimport { IUserDataProfileService, IUserDataProfileImportExportService } from './vscode/src/vs/workbench/services/userDataProfile/common/userDataProfile.js';\nimport { UserDataProfileService } from './vscode/src/vs/workbench/services/userDataProfile/common/userDataProfileService.js';\nimport { ISnippetsService } from './vscode/src/vs/workbench/contrib/snippets/browser/snippets.js';\nimport { ILoggerService, AbstractLoggerService, LogLevel, NullLogger } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { Disposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { FallbackKeyboardMapper } from './vscode/src/vs/workbench/services/keybinding/common/fallbackKeyboardMapper.js';\nimport { ITextMateTokenizationService } from './vscode/src/vs/workbench/services/textMate/browser/textMateTokenizationFeature.js';\nimport { IDebugService } from './vscode/src/vs/workbench/contrib/debug/common/debug.js';\nimport { IWorkspaceTrustRequestService, IWorkspaceTrustEnablementService } from 'monaco-editor/esm/vs/platform/workspace/common/workspaceTrust.js';\nimport { IActivityService } from './vscode/src/vs/workbench/services/activity/common/activity.js';\nimport { IExtensionHostDebugService } from './vscode/src/vs/platform/debug/common/extensionHostDebug.js';\nimport { IViewsService, IViewDescriptorService } from './vscode/src/vs/workbench/common/views.js';\nimport { IHistoryService } from './vscode/src/vs/workbench/services/history/common/history.js';\nimport { ITaskService } from './vscode/src/vs/workbench/contrib/tasks/common/taskService.js';\nimport { IConfigurationResolverService } from './vscode/src/vs/workbench/services/configurationResolver/common/configurationResolver.js';\nimport { BrowserPathService } from './vscode/src/vs/workbench/services/path/browser/pathService.js';\nimport { IRemoteAgentService } from './vscode/src/vs/workbench/services/remote/common/remoteAgentService.js';\nimport { ICustomEndpointTelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { NullEndpointTelemetryService } from './vscode/src/vs/platform/telemetry/common/telemetryUtils.js';\nimport { ISearchService } from './vscode/src/vs/workbench/services/search/common/search.js';\nimport { IRequestService } from './vscode/src/vs/platform/request/common/request.js';\nimport { IEditSessionIdentityService } from './vscode/src/vs/platform/workspace/common/editSessions.js';\nimport { IWorkspaceEditingService } from './vscode/src/vs/workbench/services/workspaces/common/workspaceEditing.js';\nimport { ITimerService } from './vscode/src/vs/workbench/services/timer/browser/timerService.js';\nimport { IExtensionsWorkbenchService } from './vscode/src/vs/workbench/contrib/extensions/common/extensions.js';\nimport { IWorkbenchExtensionEnablementService, IWorkbenchExtensionManagementService } from './vscode/src/vs/workbench/services/extensionManagement/common/extensionManagement.js';\nimport { ITunnelService } from './vscode/src/vs/platform/tunnel/common/tunnel.js';\nimport { IWorkingCopyBackupService } from './vscode/src/vs/workbench/services/workingCopy/common/workingCopyBackup.js';\nimport { IWorkingCopyService, WorkingCopyService } from './vscode/src/vs/workbench/services/workingCopy/common/workingCopyService.js';\nimport { IFilesConfigurationService, FilesConfigurationService } from './vscode/src/vs/workbench/services/filesConfiguration/common/filesConfigurationService.js';\nimport { IUntitledTextEditorService } from './vscode/src/vs/workbench/services/untitled/common/untitledTextEditorService.js';\nimport './override/vs/platform/dialogs/common/dialogs.js';\nimport { IElevatedFileService } from './vscode/src/vs/workbench/services/files/common/elevatedFileService.js';\nimport { BrowserElevatedFileService } from './vscode/src/vs/workbench/services/files/browser/elevatedFileService.js';\nimport { IDecorationsService } from './vscode/src/vs/workbench/services/decorations/common/decorations.js';\nimport { RequestService } from './vscode/src/vs/platform/request/browser/requestService.js';\nimport { InMemoryWorkingCopyBackupService } from './vscode/src/vs/workbench/services/workingCopy/common/workingCopyBackupService.js';\nimport { BrowserTextFileService } from './vscode/src/vs/workbench/services/textfile/browser/browserTextFileService.js';\nimport { DecorationsService } from './vscode/src/vs/workbench/services/decorations/browser/decorationsService.js';\nimport { UriIdentityService } from './vscode/src/vs/platform/uriIdentity/common/uriIdentityService.js';\nimport { IJSONEditingService } from './vscode/src/vs/workbench/services/configuration/common/jsonEditing.js';\nimport { JSONEditingService } from './vscode/src/vs/workbench/services/configuration/common/jsonEditingService.js';\nimport { IWorkspacesService } from './vscode/src/vs/platform/workspaces/common/workspaces.js';\nimport { ITextEditorService } from './vscode/src/vs/workbench/services/textfile/common/textEditorService.js';\nimport { IEditorResolverService } from './vscode/src/vs/workbench/services/editor/common/editorResolverService.js';\nimport { AbstractLifecycleService } from './vscode/src/vs/workbench/services/lifecycle/common/lifecycleService.js';\nimport { IOutputService } from './vscode/src/vs/workbench/services/output/common/output.js';\nimport { OutputService } from './vscode/src/vs/workbench/contrib/output/browser/outputServices.js';\nimport { IOutputChannelModelService, OutputChannelModelService } from './vscode/src/vs/workbench/contrib/output/common/outputChannelModelService.js';\nimport { IExtensionResourceLoaderService, AbstractExtensionResourceLoaderService } from './vscode/src/vs/platform/extensionResourceLoader/common/extensionResourceLoader.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IHoverService } from './vscode/src/vs/workbench/services/hover/browser/hover.js';\nimport { IExplorerService } from './vscode/src/vs/workbench/contrib/files/browser/files.js';\nimport { IExtensionStorageService, ExtensionStorageService } from './vscode/src/vs/platform/extensionManagement/common/extensionStorage.js';\nimport { ILanguagePackService } from './vscode/src/vs/platform/languagePacks/common/languagePacks.js';\nimport { TreeViewsDnDService } from 'monaco-editor/esm/vs/editor/common/services/treeViewsDnd.js';\nimport { ITreeViewsDnDService } from 'monaco-editor/esm/vs/editor/common/services/treeViewsDndService.js';\nimport { TreeviewsService } from './vscode/src/vs/workbench/services/views/common/treeViewsService.js';\nimport { ITreeViewsService } from './vscode/src/vs/workbench/services/views/browser/treeViewsService.js';\nimport { IBreadcrumbsService } from './vscode/src/vs/workbench/browser/parts/editor/breadcrumbs.js';\nimport { IOutlineService } from './vscode/src/vs/workbench/services/outline/browser/outline.js';\nimport { IUpdateService, State } from './vscode/src/vs/platform/update/common/update.js';\nimport { IStatusbarService } from './vscode/src/vs/workbench/services/statusbar/browser/statusbar.js';\nimport { IExtensionGalleryService, IExtensionManagementService } from './vscode/src/vs/platform/extensionManagement/common/extensionManagement.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { ITerminalService, ITerminalEditorService, ITerminalGroupService, ITerminalInstanceService } from './vscode/src/vs/workbench/contrib/terminal/browser/terminal.js';\nimport { ITerminalProfileService, ITerminalProfileResolverService } from './vscode/src/vs/workbench/contrib/terminal/common/terminal.js';\nimport { TerminalLocation, ITerminalLogService } from './vscode/src/vs/platform/terminal/common/terminal.js';\nimport { ITerminalContributionService } from './vscode/src/vs/workbench/contrib/terminal/common/terminalExtensionPoints.js';\nimport { ITerminalLinkProviderService } from './vscode/src/vs/workbench/contrib/terminalContrib/links/browser/links.js';\nimport { IEnvironmentVariableService } from './vscode/src/vs/workbench/contrib/terminal/common/environmentVariable.js';\nimport { ITerminalQuickFixService } from './vscode/src/vs/workbench/contrib/terminalContrib/quickFix/browser/quickFix.js';\nimport { IPreferencesSearchService } from './vscode/src/vs/workbench/contrib/preferences/common/preferences.js';\nimport { IUserDataSyncWorkbenchService } from './vscode/src/vs/workbench/services/userDataSync/common/userDataSync.js';\nimport { IUserDataSyncEnablementService } from './vscode/src/vs/platform/userDataSync/common/userDataSync.js';\nimport { IKeybindingEditingService } from './vscode/src/vs/workbench/services/keybinding/common/keybindingEditing.js';\nimport { INotebookService } from './vscode/src/vs/workbench/contrib/notebook/common/notebookService.js';\nimport { ISearchHistoryService } from './vscode/src/vs/workbench/contrib/search/common/searchHistoryService.js';\nimport { IReplaceService } from './vscode/src/vs/workbench/contrib/search/browser/replace.js';\nimport { ISearchViewModelWorkbenchService } from './vscode/src/vs/workbench/contrib/search/browser/searchModel.js';\nimport { INotebookEditorService } from './vscode/src/vs/workbench/contrib/notebook/browser/services/notebookEditorService.js';\nimport { INotebookEditorModelResolverService } from './vscode/src/vs/workbench/contrib/notebook/common/notebookEditorModelResolverService.js';\nimport { IWorkingCopyEditorService, WorkingCopyEditorService } from './vscode/src/vs/workbench/services/workingCopy/common/workingCopyEditorService.js';\nimport { IUserActivityService, UserActivityService } from './vscode/src/vs/workbench/services/userActivity/common/userActivityService.js';\nimport { CanonicalUriService } from './vscode/src/vs/workbench/services/workspaces/common/canonicalUriService.js';\nimport { ICanonicalUriService } from './vscode/src/vs/platform/workspace/common/canonicalUri.js';\nimport { IExtensionStatusBarItemService, ExtensionStatusBarItemService } from './vscode/src/vs/workbench/api/browser/statusBarExtensionPoint.js';\nimport { IWorkbenchAssignmentService } from './vscode/src/vs/workbench/services/assignment/common/assignmentService.js';\nimport { IChatService } from './vscode/src/vs/workbench/contrib/chat/common/chatService.js';\nimport { IEmbedderTerminalService } from './vscode/src/vs/workbench/services/terminal/common/embedderTerminalService.js';\nimport { ICustomEditorService } from './vscode/src/vs/workbench/contrib/customEditor/common/customEditor.js';\nimport { IWebviewWorkbenchService } from './vscode/src/vs/workbench/contrib/webviewPanel/browser/webviewWorkbenchService.js';\nimport { IWebviewService } from './vscode/src/vs/workbench/contrib/webview/browser/webview.js';\nimport { IWebviewViewService } from './vscode/src/vs/workbench/contrib/webviewView/browser/webviewViewService.js';\nimport { IEditorDropService } from './vscode/src/vs/workbench/services/editor/browser/editorDropService.js';\nimport { IRemoteAuthorityResolverService } from './vscode/src/vs/platform/remote/common/remoteAuthorityResolver.js';\nimport { IExternalUriOpenerService, ExternalUriOpenerService } from './vscode/src/vs/workbench/contrib/externalUriOpener/common/externalUriOpenerService.js';\nimport { IAccessibleViewService } from './vscode/src/vs/workbench/contrib/accessibility/browser/accessibleView.js';\nimport { IExtensionManifestPropertiesService } from './vscode/src/vs/workbench/services/extensions/common/extensionManifestPropertiesService.js';\nimport { IRemoteExtensionsScannerService } from './vscode/src/vs/platform/remote/common/remoteExtensionsScanner.js';\nimport { BrowserURLService } from './vscode/src/vs/workbench/services/url/browser/urlService.js';\nimport { IURLService } from './vscode/src/vs/platform/url/common/url.js';\nimport { ICredentialsService } from './vscode/src/vs/platform/credentials/common/credentials.js';\nimport { IRemoteSocketFactoryService } from './vscode/src/vs/platform/remote/common/remoteSocketFactoryService.js';\nimport { IQuickDiffService } from './vscode/src/vs/workbench/contrib/scm/common/quickDiff.js';\nimport { ISCMService, ISCMViewService } from './vscode/src/vs/workbench/contrib/scm/common/scm.js';\nimport { IDownloadService } from './vscode/src/vs/platform/download/common/download.js';\nimport { IExtensionUrlHandler } from './vscode/src/vs/workbench/services/extensions/browser/extensionUrlHandler.js';\nimport { ICommentService } from './vscode/src/vs/workbench/contrib/comments/browser/commentService.js';\nimport { INotebookCellStatusBarService } from './vscode/src/vs/workbench/contrib/notebook/common/notebookCellStatusBarService.js';\nimport { INotebookKernelService } from './vscode/src/vs/workbench/contrib/notebook/common/notebookKernelService.js';\nimport { INotebookRendererMessagingService } from './vscode/src/vs/workbench/contrib/notebook/common/notebookRendererMessagingService.js';\nimport { IInteractiveDocumentService } from './vscode/src/vs/workbench/contrib/interactive/browser/interactiveDocumentService.js';\nimport { IInlineChatService } from './vscode/src/vs/workbench/contrib/inlineChat/common/inlineChat.js';\nimport { IQuickChatService, IChatWidgetService } from './vscode/src/vs/workbench/contrib/chat/browser/chat.js';\nimport { IRemoteExplorerService } from './vscode/src/vs/workbench/services/remote/common/remoteExplorerService.js';\nimport { IAuthenticationService } from './vscode/src/vs/workbench/services/authentication/common/authentication.js';\nimport { ITimelineService } from './vscode/src/vs/workbench/contrib/timeline/common/timeline.js';\nimport { ITestService } from './vscode/src/vs/workbench/contrib/testing/common/testService.js';\nimport { ISecretStorageService } from './vscode/src/vs/platform/secrets/common/secrets.js';\nimport { IShareService } from './vscode/src/vs/workbench/contrib/share/common/share.js';\nimport { IWorkbenchIssueService } from './vscode/src/vs/workbench/services/issue/common/issue.js';\nimport { INotebookExecutionStateService } from './vscode/src/vs/workbench/contrib/notebook/common/notebookExecutionStateService.js';\nimport { IChatContributionService } from './vscode/src/vs/workbench/contrib/chat/common/chatContributionService.js';\nimport { ITestProfileService } from './vscode/src/vs/workbench/contrib/testing/common/testProfileService.js';\nimport { IEncryptionService } from './vscode/src/vs/platform/encryption/common/encryptionService.js';\nimport { ITestResultService } from './vscode/src/vs/workbench/contrib/testing/common/testResultService.js';\nimport { IDiagnosticsService, NullDiagnosticsService } from './vscode/src/vs/platform/diagnostics/common/diagnostics.js';\nimport { INotebookSearchService } from './vscode/src/vs/workbench/contrib/search/common/notebookSearch.js';\nimport { IChatProviderService } from './vscode/src/vs/workbench/contrib/chat/common/chatProvider.js';\nimport { IChatSlashCommandService } from './vscode/src/vs/workbench/contrib/chat/common/chatSlashCommands.js';\nimport { IChatVariablesService } from './vscode/src/vs/workbench/contrib/chat/common/chatVariables.js';\nimport { IAiRelatedInformationService } from './vscode/src/vs/workbench/services/aiRelatedInformation/common/aiRelatedInformation.js';\nimport { IAiEmbeddingVectorService } from './vscode/src/vs/workbench/services/aiEmbeddingVector/common/aiEmbeddingVectorService.js';\nimport { ResourceSet } from 'monaco-editor/esm/vs/base/common/map.js';\nimport { ISignService } from './vscode/src/vs/platform/sign/common/sign.js';\nimport { BrowserHostService } from './vscode/src/vs/workbench/services/host/browser/browserHostService.js';\nimport { IBannerService } from './vscode/src/vs/workbench/services/banner/browser/bannerService.js';\nimport { ITitleService } from './vscode/src/vs/workbench/services/title/common/titleService.js';\nimport { unsupported } from './tools.js';\nimport { IFileDialogService } from './vscode/src/vs/platform/dialogs/common/dialogs.js';\nvar _a;\nclass NullLoggerService extends AbstractLoggerService {\n    constructor() {\n        super(LogLevel.Info, URI.file('logs.log'));\n    }\n    doCreateLogger() { return new NullLogger(); }\n}\nregisterSingleton(ILoggerService, NullLoggerService, 0 );\nregisterSingleton(IEditorService, class EditorService {\n    constructor() {\n        this._serviceBrand = undefined;\n        this.onDidActiveEditorChange = Event.None;\n        this.onDidVisibleEditorsChange = Event.None;\n        this.onDidEditorsChange = Event.None;\n        this.onDidCloseEditor = Event.None;\n        this.activeEditorPane = undefined;\n        this.activeEditor = undefined;\n        this.activeTextEditorLanguageId = undefined;\n        this.visibleEditorPanes = [];\n        this.visibleEditors = [];\n        this.visibleTextEditorControls = [];\n        this.editors = [];\n        this.count = 0;\n        this.getEditors = () => [];\n        this.openEditor = unsupported;\n        this.openEditors = unsupported;\n        this.replaceEditors = async () => { };\n        this.isOpened = () => false;\n        this.isVisible = () => false;\n        this.closeEditor = async () => { };\n        this.closeEditors = async () => { };\n        this.findEditors = () => [];\n        this.save = async () => ({ success: false, editors: [] });\n        this.saveAll = async () => ({ success: false, editors: [] });\n        this.revert = async () => false;\n        this.revertAll = async () => false;\n    }\n    get activeTextEditorControl() { return StandaloneServices.get(ICodeEditorService).getFocusedCodeEditor() ?? undefined; }\n}, 0 );\nregisterSingleton(IPaneCompositePartService, class PaneCompositePartService {\n    constructor() {\n        this._serviceBrand = undefined;\n        this.onDidPaneCompositeOpen = Event.None;\n        this.onDidPaneCompositeClose = Event.None;\n        this.openPaneComposite = async () => undefined;\n        this.getActivePaneComposite = () => undefined;\n        this.getPaneComposite = () => undefined;\n        this.getPaneComposites = () => [];\n        this.getPinnedPaneCompositeIds = () => [];\n        this.getVisiblePaneCompositeIds = () => [];\n        this.getProgressIndicator = () => undefined;\n        this.hideActivePaneComposite = () => { };\n        this.getLastActivePaneCompositeId = unsupported;\n        this.showActivity = () => Disposable.None;\n    }\n}, 0 );\nregisterSingleton(IUriIdentityService, UriIdentityService, 1 );\nregisterSingleton(ITextFileService, BrowserTextFileService, 0 );\nregisterSingleton(IFileService, class FileService {\n    constructor() {\n        this._serviceBrand = undefined;\n        this.onDidChangeFileSystemProviderRegistrations = Event.None;\n        this.onDidChangeFileSystemProviderCapabilities = Event.None;\n        this.onWillActivateFileSystemProvider = Event.None;\n        this.registerProvider = unsupported;\n        this.getProvider = function () {\n            return undefined;\n        };\n        this.activateProvider = async () => { };\n        this.canHandleResource = async () => false;\n        this.hasProvider = () => false;\n        this.hasCapability = () => false;\n        this.listCapabilities = () => [];\n        this.onDidFilesChange = Event.None;\n        this.onDidRunOperation = Event.None;\n        this.resolve = unsupported;\n        this.resolveAll = unsupported;\n        this.stat = unsupported;\n        this.exists = async () => false;\n        this.readFile = unsupported;\n        this.readFileStream = unsupported;\n        this.writeFile = unsupported;\n        this.move = unsupported;\n        this.canMove = unsupported;\n        this.copy = unsupported;\n        this.canCopy = unsupported;\n        this.cloneFile = unsupported;\n        this.createFile = unsupported;\n        this.canCreateFile = unsupported;\n        this.createFolder = unsupported;\n        this.del = unsupported;\n        this.canDelete = unsupported;\n        this.onDidWatchError = Event.None;\n        this.watch = unsupported;\n    }\n    dispose() {\n    }\n}, 0 );\nclass EmptyEditorGroup {\n    constructor() {\n        this.onDidFocus = Event.None;\n        this.onDidOpenEditorFail = Event.None;\n        this.whenRestored = Promise.resolve();\n        this.disposed = false;\n        this.setActive = unsupported;\n        this.notifyIndexChanged = unsupported;\n        this.relayout = unsupported;\n        this.dispose = unsupported;\n        this.toJSON = unsupported;\n        this.minimumWidth = 0;\n        this.maximumWidth = Number.POSITIVE_INFINITY;\n        this.minimumHeight = 0;\n        this.maximumHeight = Number.POSITIVE_INFINITY;\n        this.onDidChange = Event.None;\n        this.layout = unsupported;\n        this.onDidModelChange = Event.None;\n        this.onWillDispose = Event.None;\n        this.onDidActiveEditorChange = Event.None;\n        this.onWillCloseEditor = Event.None;\n        this.onDidCloseEditor = Event.None;\n        this.onWillMoveEditor = Event.None;\n        this.onWillOpenEditor = Event.None;\n        this.id = 0;\n        this.index = 0;\n        this.label = 'main';\n        this.ariaLabel = 'main';\n        this.activeEditorPane = undefined;\n        this.activeEditor = null;\n        this.previewEditor = null;\n        this.count = 0;\n        this.isEmpty = false;\n        this.isLocked = false;\n        this.stickyCount = 0;\n        this.editors = [];\n        this.getEditors = () => [];\n        this.findEditors = () => [];\n        this.getEditorByIndex = () => undefined;\n        this.getIndexOfEditor = unsupported;\n        this.openEditor = unsupported;\n        this.openEditors = unsupported;\n        this.isPinned = () => false;\n        this.isSticky = () => false;\n        this.isActive = () => false;\n        this.contains = () => false;\n        this.moveEditor = unsupported;\n        this.moveEditors = unsupported;\n        this.copyEditor = unsupported;\n        this.copyEditors = unsupported;\n        this.closeEditor = unsupported;\n        this.closeEditors = unsupported;\n        this.closeAllEditors = unsupported;\n        this.replaceEditors = unsupported;\n        this.pinEditor = unsupported;\n        this.stickEditor = unsupported;\n        this.unstickEditor = unsupported;\n        this.lock = unsupported;\n        this.isFirst = unsupported;\n        this.isLast = unsupported;\n    }\n    get titleHeight() {\n        return unsupported();\n    }\n    get element() {\n        return unsupported();\n    }\n    get scopedContextKeyService() { return StandaloneServices.get(IContextKeyService); }\n    focus() {\n    }\n}\nconst fakeActiveGroup = new EmptyEditorGroup();\nclass EmptyEditorGroupsService {\n    constructor() {\n        this._serviceBrand = undefined;\n        this.getLayout = unsupported;\n        this.onDidChangeActiveGroup = Event.None;\n        this.onDidAddGroup = Event.None;\n        this.onDidRemoveGroup = Event.None;\n        this.onDidMoveGroup = Event.None;\n        this.onDidActivateGroup = Event.None;\n        this.onDidLayout = Event.None;\n        this.onDidScroll = Event.None;\n        this.onDidChangeGroupIndex = Event.None;\n        this.onDidChangeGroupLocked = Event.None;\n        this.activeGroup = fakeActiveGroup;\n        this.groups = [fakeActiveGroup];\n        this.count = 0;\n        this.orientation = 0 ;\n        this.isReady = false;\n        this.whenReady = Promise.resolve();\n        this.whenRestored = Promise.resolve();\n        this.hasRestorableState = false;\n        this.getGroups = () => [];\n        this.getGroup = () => undefined;\n        this.activateGroup = unsupported;\n        this.getSize = unsupported;\n        this.setSize = unsupported;\n        this.arrangeGroups = unsupported;\n        this.applyLayout = unsupported;\n        this.centerLayout = unsupported;\n        this.isLayoutCentered = () => false;\n        this.setGroupOrientation = unsupported;\n        this.findGroup = () => undefined;\n        this.addGroup = unsupported;\n        this.removeGroup = unsupported;\n        this.moveGroup = unsupported;\n        this.mergeGroup = unsupported;\n        this.mergeAllGroups = unsupported;\n        this.copyGroup = unsupported;\n        this.partOptions = {};\n        this.onDidChangeEditorPartOptions = Event.None;\n        this.enforcePartOptions = unsupported;\n    }\n    get contentDimension() { return unsupported(); }\n    get sideGroup() { return unsupported(); }\n}\nregisterSingleton(IEditorGroupsService, EmptyEditorGroupsService, 0 );\nregisterSingleton(IBannerService, class BannerService {\n    focus() { }\n    focusNextAction() { }\n    focusPreviousAction() { }\n    hide() { }\n    show() { }\n}, 0 );\nregisterSingleton(ITitleService, class TitleService {\n    constructor() {\n        this.onMenubarVisibilityChange = Event.None;\n        this.isCommandCenterVisible = false;\n        this.onDidChangeCommandCenterVisibility = Event.None;\n    }\n    updateProperties() { }\n}, 0 );\nregisterSingleton(IWorkingCopyFileService, WorkingCopyFileService, 0 );\nregisterSingleton(IPathService, BrowserPathService, 1 );\nregisterSingleton(IProductService, class ProductService {\n    constructor() {\n        this._serviceBrand = undefined;\n        this.version = \"1.82.0\";\n        this.commit = \"16e9205452dd417e32f164325b589b94892846b4\";\n        this.nameShort = 'Code - OSS Dev';\n        this.nameLong = 'Code - OSS Dev';\n        this.applicationName = 'code-oss';\n        this.dataFolderName = '.vscode-oss';\n        this.urlProtocol = 'code-oss';\n        this.reportIssueUrl = 'https://github.com/microsoft/vscode/issues/new';\n        this.licenseName = 'MIT';\n        this.licenseUrl = 'https://github.com/microsoft/vscode/blob/main/LICENSE.txt';\n        this.serverApplicationName = 'code-server-oss';\n    }\n}, 0 );\nregisterSingleton(ILanguageStatusService, class LanguageStatusServiceImpl {\n    constructor() {\n        this._provider = new LanguageFeatureRegistry();\n        this.onDidChange = this._provider.onDidChange;\n    }\n    addStatus(status) {\n        return this._provider.register(status.selector, status);\n    }\n    getLanguageStatus(model) {\n        return this._provider.ordered(model).sort((a, b) => {\n            let res = b.severity - a.severity;\n            if (res === 0) {\n                res = compare(a.source, b.source);\n            }\n            if (res === 0) {\n                res = compare(a.id, b.id);\n            }\n            return res;\n        });\n    }\n}, 0 );\nregisterSingleton(IHostService, BrowserHostService, 0 );\nregisterSingleton(ILifecycleService, class LifecycleService extends AbstractLifecycleService {\n    constructor() {\n        super(...arguments);\n        this.shutdown = unsupported;\n    }\n}, 0 );\nregisterSingleton(ILanguageDetectionService, class LanguageDetectionService {\n    isEnabledForLanguage() {\n        return false;\n    }\n    async detectLanguage() {\n        return undefined;\n    }\n}, 0 );\nregisterSingleton(IExtensionService, NullExtensionService, 0 );\nregisterSingleton(IKeyboardLayoutService, class KeyboardLayoutService {\n    constructor() {\n        this.onDidChangeKeyboardLayout = Event.None;\n        this.getRawKeyboardMapping = () => null;\n        this.getCurrentKeyboardLayout = () => null;\n        this.getAllKeyboardLayouts = () => [];\n        this.getKeyboardMapper = () => new FallbackKeyboardMapper(false, OS);\n        this.validateCurrentKeyboardMapping = () => { };\n    }\n}, 1 );\nregisterSingleton(IUserDataInitializationService, class NullUserDataInitializationService {\n    async requiresInitialization() {\n        return false;\n    }\n    async whenInitializationFinished() { }\n    async initializeRequiredResources() { }\n    async initializeInstalledExtensions() { }\n    async initializeOtherResources() { }\n}, 0 );\nregisterSingleton(IHostColorSchemeService, BrowserHostColorSchemeService, 0 );\nregisterSingleton(IPreferencesService, class PreferencesService {\n    constructor() {\n        this.userSettingsResource = profile.settingsResource;\n        this.workspaceSettingsResource = null;\n        this.getFolderSettingsResource = unsupported;\n        this.createPreferencesEditorModel = unsupported;\n        this.resolveModel = unsupported;\n        this.createSettings2EditorModel = unsupported;\n        this.openRawDefaultSettings = unsupported;\n        this.openSettings = unsupported;\n        this.openUserSettings = unsupported;\n        this.openRemoteSettings = unsupported;\n        this.openWorkspaceSettings = unsupported;\n        this.openFolderSettings = unsupported;\n        this.openGlobalKeybindingSettings = unsupported;\n        this.openDefaultKeybindingsFile = unsupported;\n        this.getEditableSettingsURI = unsupported;\n        this.createSplitJsonEditorInput = unsupported;\n        this.openApplicationSettings = unsupported;\n        this.openLanguageSpecificSettings = unsupported;\n    }\n}, 0 );\nregisterSingleton(ITextMateTokenizationService, class NullTextMateService {\n    constructor() {\n        this.onDidEncounterLanguage = Event.None;\n        this.createGrammar = unsupported;\n        this.startDebugMode = unsupported;\n        this.createTokenizer = unsupported;\n    }\n}, 0 );\nconst profile = {\n    id: 'default',\n    isDefault: true,\n    name: 'default',\n    location: ( URI.from({ scheme: 'user', path: '/profile.json' })),\n    globalStorageHome: ( URI.from({ scheme: 'user', path: '/globalStorage' })),\n    settingsResource: ( URI.from({ scheme: 'user', path: '/settings.json' })),\n    keybindingsResource: ( URI.from({ scheme: 'user', path: '/keybindings.json' })),\n    tasksResource: ( URI.from({ scheme: 'user', path: '/tasks.json' })),\n    snippetsHome: ( URI.from({ scheme: 'user', path: '/snippets' })),\n    extensionsResource: ( URI.from({ scheme: 'user', path: '/extensions.json' })),\n    cacheHome: ( URI.from({ scheme: 'cache', path: '/' }))\n};\nregisterSingleton(IUserDataProfilesService, class UserDataProfilesService {\n    constructor() {\n        this.onDidResetWorkspaces = Event.None;\n        this.isEnabled = () => false;\n        this.createNamedProfile = unsupported;\n        this.createTransientProfile = unsupported;\n        this.resetWorkspaces = unsupported;\n        this.cleanUp = unsupported;\n        this.cleanUpTransientProfiles = unsupported;\n        this.defaultProfile = profile;\n        this.onDidChangeProfiles = Event.None;\n        this.profiles = [profile];\n        this.createProfile = unsupported;\n        this.updateProfile = unsupported;\n        this.setProfileForWorkspace = unsupported;\n        this.getProfile = () => profile;\n        this.removeProfile = unsupported;\n    }\n    get profilesHome() { return unsupported(); }\n}, 0 );\nlet InjectedUserDataProfileService = class InjectedUserDataProfileService extends UserDataProfileService {\n    constructor(userDataProfilesService) {\n        super(profile, userDataProfilesService);\n    }\n};\nInjectedUserDataProfileService = __decorate([\n    ( __param(0, IUserDataProfilesService))\n], InjectedUserDataProfileService);\nregisterSingleton(IUserDataProfileService, InjectedUserDataProfileService, 0 );\nregisterSingleton(IPolicyService, class PolicyService {\n    constructor() {\n        this.updatePolicyDefinitions = unsupported;\n        this.onDidChange = Event.None;\n        this.registerPolicyDefinitions = unsupported;\n        this.getPolicyValue = () => undefined;\n        this.serialize = () => undefined;\n    }\n}, 0 );\nregisterSingleton(ISnippetsService, class SnippetsService {\n    constructor() {\n        this.getSnippetFiles = unsupported;\n        this.isEnabled = unsupported;\n        this.updateEnablement = unsupported;\n        this.updateUsageTimestamp = unsupported;\n        this.getSnippets = async () => [];\n        this.getSnippetsSync = unsupported;\n    }\n}, 0 );\nconst debugModel = {\n    getSession: () => undefined,\n    getSessions: () => [],\n    getBreakpoints: () => [],\n    areBreakpointsActivated: () => false,\n    getFunctionBreakpoints: () => [],\n    getDataBreakpoints: () => [],\n    getExceptionBreakpoints: () => [],\n    getExceptionBreakpointsForSession: () => [],\n    getInstructionBreakpoints: () => [],\n    getWatchExpressions: () => [],\n    onDidChangeBreakpoints: Event.None,\n    onDidChangeCallStack: Event.None,\n    onDidChangeWatchExpressions: Event.None,\n    fetchCallstack: unsupported,\n    getId: unsupported\n};\nclass FakeViewModel {\n    constructor() {\n        this.getId = unsupported;\n        this.focusedSession = undefined;\n        this.focusedThread = undefined;\n        this.focusedStackFrame = undefined;\n        this.getSelectedExpression = unsupported;\n        this.setSelectedExpression = unsupported;\n        this.updateViews = unsupported;\n        this.isMultiSessionView = unsupported;\n        this.onDidFocusSession = Event.None;\n        this.onDidFocusStackFrame = Event.None;\n        this.onDidSelectExpression = Event.None;\n        this.onDidEvaluateLazyExpression = Event.None;\n        this.onWillUpdateViews = Event.None;\n        this.onDidFocusThread = Event.None;\n        this.evaluateLazyExpression = unsupported;\n    }\n}\nclass FakeAdapterManager {\n    constructor() {\n        this.onDidRegisterDebugger = Event.None;\n        this.hasEnabledDebuggers = () => false;\n        this.getDebugAdapterDescriptor = unsupported;\n        this.getDebuggerLabel = unsupported;\n        this.someDebuggerInterestedInLanguage = () => false;\n        this.getDebugger = () => undefined;\n        this.activateDebuggers = unsupported;\n        this.registerDebugAdapterFactory = () => Disposable.None;\n        this.createDebugAdapter = unsupported;\n        this.registerDebugAdapterDescriptorFactory = unsupported;\n        this.unregisterDebugAdapterDescriptorFactory = unsupported;\n        this.substituteVariables = unsupported;\n        this.runInTerminal = unsupported;\n        this.getEnabledDebugger = unsupported;\n        this.guessDebugger = unsupported;\n        this.onDidDebuggersExtPointRead = Event.None;\n    }\n}\nregisterSingleton(IDebugService, class DebugService {\n    constructor() {\n        this.onDidChangeState = Event.None;\n        this.onDidNewSession = Event.None;\n        this.onWillNewSession = Event.None;\n        this.onDidEndSession = Event.None;\n        this.getConfigurationManager = unsupported;\n        this.getAdapterManager = () => new FakeAdapterManager();\n        this.focusStackFrame = unsupported;\n        this.canSetBreakpointsIn = unsupported;\n        this.addBreakpoints = unsupported;\n        this.updateBreakpoints = unsupported;\n        this.enableOrDisableBreakpoints = unsupported;\n        this.setBreakpointsActivated = unsupported;\n        this.removeBreakpoints = unsupported;\n        this.addFunctionBreakpoint = unsupported;\n        this.updateFunctionBreakpoint = unsupported;\n        this.removeFunctionBreakpoints = unsupported;\n        this.addDataBreakpoint = unsupported;\n        this.removeDataBreakpoints = unsupported;\n        this.addInstructionBreakpoint = unsupported;\n        this.removeInstructionBreakpoints = unsupported;\n        this.setExceptionBreakpointCondition = unsupported;\n        this.setExceptionBreakpointsForSession = unsupported;\n        this.sendAllBreakpoints = unsupported;\n        this.addWatchExpression = unsupported;\n        this.renameWatchExpression = unsupported;\n        this.moveWatchExpression = unsupported;\n        this.removeWatchExpressions = unsupported;\n        this.startDebugging = unsupported;\n        this.restartSession = unsupported;\n        this.stopSession = unsupported;\n        this.sourceIsNotAvailable = unsupported;\n        this.getModel = () => debugModel;\n        this.getViewModel = () => new FakeViewModel();\n        this.runTo = unsupported;\n    }\n    get state() { return unsupported(); }\n}, 0 );\nregisterSingleton(IRequestService, RequestService, 0 );\nregisterSingleton(IWorkspaceTrustRequestService, class WorkspaceTrustRequestService {\n    constructor() {\n        this.onDidInitiateOpenFilesTrustRequest = Event.None;\n        this.onDidInitiateWorkspaceTrustRequest = Event.None;\n        this.onDidInitiateWorkspaceTrustRequestOnStartup = Event.None;\n        this.completeOpenFilesTrustRequest = unsupported;\n        this.requestOpenFilesTrust = async () => 1 ;\n        this.cancelWorkspaceTrustRequest = unsupported;\n        this.completeWorkspaceTrustRequest = unsupported;\n        this.requestWorkspaceTrust = async () => true;\n        this.requestWorkspaceTrustOnStartup = () => null;\n    }\n}, 0 );\nregisterSingleton(IActivityService, class ActivityService {\n    constructor() {\n        this.showViewContainerActivity = () => Disposable.None;\n        this.showViewActivity = () => Disposable.None;\n        this.showAccountsActivity = () => Disposable.None;\n        this.showGlobalActivity = () => Disposable.None;\n    }\n}, 0 );\nregisterSingleton(IExtensionHostDebugService, class ExtensionHostDebugService {\n    constructor() {\n        this.reload = unsupported;\n        this.onReload = Event.None;\n        this.close = unsupported;\n        this.onClose = Event.None;\n        this.attachSession = unsupported;\n        this.onAttachSession = Event.None;\n        this.terminateSession = unsupported;\n        this.onTerminateSession = Event.None;\n        this.openExtensionDevelopmentHostWindow = unsupported;\n    }\n}, 0 );\nregisterSingleton(IViewsService, class ViewsService {\n    constructor() {\n        this.getFocusedViewName = unsupported;\n        this.onDidChangeFocusedView = Event.None;\n        this.onDidChangeViewContainerVisibility = Event.None;\n        this.isViewContainerVisible = () => false;\n        this.openViewContainer = unsupported;\n        this.closeViewContainer = unsupported;\n        this.getVisibleViewContainer = unsupported;\n        this.getActiveViewPaneContainerWithId = () => null;\n        this.onDidChangeViewVisibility = Event.None;\n        this.isViewVisible = () => false;\n        this.openView = async () => null;\n        this.closeView = unsupported;\n        this.getActiveViewWithId = () => null;\n        this.getViewWithId = () => null;\n        this.getViewProgressIndicator = () => undefined;\n    }\n}, 0 );\nregisterSingleton(IViewDescriptorService, class ViewDescriptorService {\n    constructor() {\n        this.viewContainers = [];\n        this.onDidChangeViewContainers = Event.None;\n        this.getDefaultViewContainer = () => undefined;\n        this.getViewContainerById = () => null;\n        this.isViewContainerRemovedPermanently = unsupported;\n        this.getDefaultViewContainerLocation = () => null;\n        this.getViewContainerLocation = () => null;\n        this.getViewContainersByLocation = unsupported;\n        this.getViewContainerModel = () => ({\n            onDidChangeAllViewDescriptors: Event.None,\n            visibleViewDescriptors: []\n        });\n        this.onDidChangeContainerLocation = Event.None;\n        this.moveViewContainerToLocation = unsupported;\n        this.getViewContainerBadgeEnablementState = unsupported;\n        this.setViewContainerBadgeEnablementState = unsupported;\n        this.getViewDescriptorById = () => null;\n        this.getViewContainerByViewId = () => null;\n        this.getDefaultContainerById = () => null;\n        this.getViewLocationById = () => null;\n        this.onDidChangeContainer = Event.None;\n        this.moveViewsToContainer = unsupported;\n        this.onDidChangeLocation = Event.None;\n        this.moveViewToLocation = () => null;\n        this.reset = () => null;\n    }\n}, 0 );\nregisterSingleton(IHistoryService, class HistoryService {\n    constructor() {\n        this.goForward = unsupported;\n        this.goBack = unsupported;\n        this.goPrevious = unsupported;\n        this.goLast = unsupported;\n        this.reopenLastClosedEditor = unsupported;\n        this.getHistory = () => [];\n        this.removeFromHistory = unsupported;\n        this.getLastActiveWorkspaceRoot = () => undefined;\n        this.getLastActiveFile = () => undefined;\n        this.openNextRecentlyUsedEditor = unsupported;\n        this.openPreviouslyUsedEditor = unsupported;\n        this.clear = unsupported;\n        this.clearRecentlyOpened = unsupported;\n    }\n}, 0 );\nregisterSingleton(ITaskService, class TaskService {\n    constructor() {\n        this.onDidStateChange = Event.None;\n        this.supportsMultipleTaskExecutions = false;\n        this.configureAction = unsupported;\n        this.run = unsupported;\n        this.inTerminal = () => false;\n        this.getActiveTasks = async () => [];\n        this.getBusyTasks = unsupported;\n        this.terminate = unsupported;\n        this.tasks = unsupported;\n        this.taskTypes = unsupported;\n        this.getWorkspaceTasks = unsupported;\n        this.getSavedTasks = unsupported;\n        this.removeRecentlyUsedTask = unsupported;\n        this.getTask = unsupported;\n        this.tryResolveTask = unsupported;\n        this.createSorter = unsupported;\n        this.getTaskDescription = unsupported;\n        this.customize = unsupported;\n        this.openConfig = unsupported;\n        this.registerTaskProvider = unsupported;\n        this.registerTaskSystem = () => { };\n        this.onDidChangeTaskSystemInfo = Event.None;\n        this.hasTaskSystemInfo = false;\n        this.registerSupportedExecutions = () => { };\n        this.extensionCallbackTaskComplete = unsupported;\n    }\n}, 0 );\nregisterSingleton(IConfigurationResolverService, class ConfigurationResolverService {\n    constructor() {\n        this.resolveWithEnvironment = unsupported;\n        this.resolveAsync = unsupported;\n        this.resolveAnyAsync = unsupported;\n        this.resolveAnyMap = unsupported;\n        this.resolveWithInteractionReplace = unsupported;\n        this.resolveWithInteraction = unsupported;\n        this.contributeVariable = unsupported;\n    }\n}, 0 );\nregisterSingleton(IRemoteAgentService, class RemoteAgentService {\n    constructor() {\n        this.getConnection = () => null;\n        this.getEnvironment = async () => null;\n        this.getRawEnvironment = async () => null;\n        this.getExtensionHostExitInfo = async () => null;\n        this.getRoundTripTime = async () => undefined;\n        this.whenExtensionsReady = async () => undefined;\n        this.scanExtensions = async () => [];\n        this.scanSingleExtension = async () => null;\n        this.getDiagnosticInfo = async () => undefined;\n        this.updateTelemetryLevel = async () => undefined;\n        this.logTelemetry = async () => undefined;\n        this.flushTelemetry = async () => undefined;\n    }\n}, 0 );\nregisterSingleton(ICustomEndpointTelemetryService, NullEndpointTelemetryService, 0 );\nlet MonacoSearchService = class MonacoSearchService {\n    constructor(modelService) {\n        this.modelService = modelService;\n        this.textSearchSplitSyncAsync = unsupported;\n        this.registerSearchResultProvider = unsupported;\n    }\n    async textSearch() {\n        return {\n            results: [],\n            messages: []\n        };\n    }\n    async fileSearch() {\n        return {\n            results: ( this.modelService.getModels().map(model => ({\n                resource: model.uri\n            }))),\n            messages: []\n        };\n    }\n    async clearCache() {\n    }\n};\nMonacoSearchService = __decorate([\n    ( __param(0, IModelService))\n], MonacoSearchService);\nregisterSingleton(ISearchService, MonacoSearchService, 0 );\nregisterSingleton(IEditSessionIdentityService, class EditSessionIdentityService {\n    constructor() {\n        this.registerEditSessionIdentityProvider = unsupported;\n        this.getEditSessionIdentifier = unsupported;\n        this.provideEditSessionIdentityMatch = unsupported;\n        this.addEditSessionIdentityCreateParticipant = () => new DisposableStore();\n        this.onWillCreateEditSessionIdentity = unsupported;\n    }\n}, 0 );\nregisterSingleton(IWorkspaceEditingService, class WorkspaceEditingService {\n    constructor() {\n        this.addFolders = unsupported;\n        this.removeFolders = unsupported;\n        this.updateFolders = unsupported;\n        this.enterWorkspace = unsupported;\n        this.createAndEnterWorkspace = unsupported;\n        this.saveAndEnterWorkspace = unsupported;\n        this.copyWorkspaceSettings = unsupported;\n        this.pickNewWorkspacePath = unsupported;\n    }\n}, 0 );\nregisterSingleton(ITimerService, class TimerService {\n    constructor() {\n        this.whenReady = unsupported;\n        this.setPerformanceMarks = () => { };\n        this.getPerformanceMarks = unsupported;\n        this.getDuration = unsupported;\n    }\n    get perfBaseline() { return unsupported(); }\n    get startupMetrics() { return unsupported(); }\n}, 0 );\nregisterSingleton(IExtensionsWorkbenchService, class ExtensionsWorkbenchService {\n    constructor() {\n        this.toggleApplyExtensionToAllProfiles = unsupported;\n        this.whenInitialized = Promise.resolve();\n        this.onChange = Event.None;\n        this.onReset = Event.None;\n        this.preferPreReleases = false;\n        this.local = [];\n        this.installed = [];\n        this.outdated = [];\n        this.queryLocal = unsupported;\n        this.queryGallery = unsupported;\n        this.getExtensions = unsupported;\n        this.canInstall = unsupported;\n        this.install = unsupported;\n        this.installInServer = unsupported;\n        this.uninstall = unsupported;\n        this.installVersion = unsupported;\n        this.reinstall = unsupported;\n        this.canSetLanguage = unsupported;\n        this.setLanguage = unsupported;\n        this.setEnablement = unsupported;\n        this.pinExtension = unsupported;\n        this.open = unsupported;\n        this.checkForUpdates = unsupported;\n        this.getExtensionStatus = unsupported;\n        this.isExtensionIgnoredToSync = unsupported;\n        this.toggleExtensionIgnoredToSync = unsupported;\n    }\n}, 0 );\nregisterSingleton(IWorkbenchExtensionEnablementService, class WorkbenchExtensionEnablementService {\n    constructor() {\n        this.onEnablementChanged = Event.None;\n        this.getEnablementState = () => 8 ;\n        this.getEnablementStates = (extensions) => ( extensions.map(() => 8 ));\n        this.getDependenciesEnablementStates = () => [];\n        this.canChangeEnablement = () => false;\n        this.canChangeWorkspaceEnablement = () => false;\n        this.isEnabled = () => true;\n        this.isEnabledEnablementState = () => true;\n        this.isDisabledGlobally = () => false;\n        this.setEnablement = unsupported;\n        this.updateExtensionsEnablementsWhenWorkspaceTrustChanges = unsupported;\n    }\n}, 0 );\nregisterSingleton(ITunnelService, class TunnelService {\n    constructor() {\n        this.tunnels = Promise.resolve([]);\n        this.canChangePrivacy = false;\n        this.privacyOptions = [];\n        this.onTunnelOpened = Event.None;\n        this.onTunnelClosed = Event.None;\n        this.canElevate = false;\n        this.hasTunnelProvider = false;\n        this.onAddedTunnelProvider = Event.None;\n        this.canTunnel = () => false;\n        this.openTunnel = unsupported;\n        this.getExistingTunnel = async () => undefined;\n        this.setEnvironmentTunnel = unsupported;\n        this.closeTunnel = unsupported;\n        this.setTunnelProvider = unsupported;\n        this.setTunnelFeatures = unsupported;\n        this.isPortPrivileged = () => false;\n    }\n}, 0 );\nregisterSingleton(IFilesConfigurationService, FilesConfigurationService, 0 );\nregisterSingleton(IUntitledTextEditorService, class UntitledTextEditorService {\n    constructor() {\n        this.isUntitledWithAssociatedResource = () => false;\n        this.onDidChangeDirty = Event.None;\n        this.onDidChangeEncoding = Event.None;\n        this.onDidChangeLabel = Event.None;\n        this.onWillDispose = Event.None;\n        this.create = unsupported;\n        this.get = () => undefined;\n        this.getValue = () => undefined;\n        this.resolve = unsupported;\n    }\n}, 0 );\nregisterSingleton(IWorkingCopyBackupService, InMemoryWorkingCopyBackupService, 0 );\nregisterSingleton(IWorkingCopyService, WorkingCopyService, 0 );\nregisterSingleton(IDecorationsService, DecorationsService, 0 );\nregisterSingleton(IElevatedFileService, BrowserElevatedFileService, 0 );\nregisterSingleton(IFileDialogService, class FileDialogService {\n    constructor() {\n        this.preferredHome = unsupported;\n        this.defaultFilePath = unsupported;\n        this.defaultFolderPath = unsupported;\n        this.defaultWorkspacePath = unsupported;\n        this.pickFileFolderAndOpen = unsupported;\n        this.pickFileAndOpen = unsupported;\n        this.pickFolderAndOpen = unsupported;\n        this.pickWorkspaceAndOpen = unsupported;\n        this.pickFileToSave = unsupported;\n        this.showSaveDialog = unsupported;\n        this.showSaveConfirm = unsupported;\n        this.showOpenDialog = unsupported;\n    }\n}, 0 );\nregisterSingleton(IJSONEditingService, JSONEditingService, 1 );\nregisterSingleton(IWorkspacesService, class WorkspacesService {\n    constructor() {\n        this.enterWorkspace = unsupported;\n        this.createUntitledWorkspace = unsupported;\n        this.deleteUntitledWorkspace = unsupported;\n        this.getWorkspaceIdentifier = unsupported;\n        this.onDidChangeRecentlyOpened = Event.None;\n        this.addRecentlyOpened = unsupported;\n        this.removeRecentlyOpened = unsupported;\n        this.clearRecentlyOpened = unsupported;\n        this.getRecentlyOpened = unsupported;\n        this.getDirtyWorkspaces = unsupported;\n    }\n}, 1 );\nregisterSingleton(ITextEditorService, class TextEditorService {\n    constructor() {\n        this.createTextEditor = unsupported;\n        this.resolveTextEditor = unsupported;\n    }\n}, 0 );\nregisterSingleton(IEditorResolverService, class EditorResolverService {\n    constructor() {\n        this.getAssociationsForResource = unsupported;\n        this.updateUserAssociations = unsupported;\n        this.onDidChangeEditorRegistrations = Event.None;\n        this.bufferChangeEvents = unsupported;\n        this.resolveEditor = unsupported;\n        this.getEditors = () => ([]);\n    }\n    registerEditor() {\n        return {\n            dispose: () => { }\n        };\n    }\n}, 0 );\nregisterSingleton(IOutputService, OutputService, 1 );\nregisterSingleton(IOutputChannelModelService, OutputChannelModelService, 1 );\nlet SimpleExtensionResourceLoaderService = class SimpleExtensionResourceLoaderService extends AbstractExtensionResourceLoaderService {\n    constructor(fileService, storageService, productService, environmentService, configurationService) {\n        super(fileService, storageService, productService, environmentService, configurationService);\n    }\n    async readExtensionResource(uri) {\n        const result = await this._fileService.readFile(uri);\n        return ( result.value.toString());\n    }\n};\nSimpleExtensionResourceLoaderService = __decorate([\n    ( __param(0, IFileService)),\n    ( __param(1, IStorageService)),\n    ( __param(2, IProductService)),\n    ( __param(3, IEnvironmentService)),\n    ( __param(4, IConfigurationService))\n], SimpleExtensionResourceLoaderService);\nregisterSingleton(IExtensionResourceLoaderService, SimpleExtensionResourceLoaderService, 0 );\nregisterSingleton(IHoverService, class HoverService {\n    constructor() {\n        this.showAndFocusLastHover = unsupported;\n        this.showHover = unsupported;\n        this.hideHover = unsupported;\n    }\n}, 0 );\nregisterSingleton(IExplorerService, class ExplorerService {\n    constructor() {\n        this.roots = [];\n        this.getContext = unsupported;\n        this.hasViewFocus = unsupported;\n        this.setEditable = unsupported;\n        this.getEditable = unsupported;\n        this.getEditableData = unsupported;\n        this.isEditable = unsupported;\n        this.findClosest = unsupported;\n        this.findClosestRoot = unsupported;\n        this.refresh = unsupported;\n        this.setToCopy = unsupported;\n        this.isCut = unsupported;\n        this.applyBulkEdit = unsupported;\n        this.select = unsupported;\n        this.registerView = unsupported;\n    }\n    get sortOrderConfiguration() { return unsupported(); }\n}, 1 );\nregisterSingleton(IExtensionStorageService, ExtensionStorageService, 1 );\nregisterSingleton(ILanguagePackService, class LanguagePackService {\n    async getAvailableLanguages() {\n        return [];\n    }\n    async getInstalledLanguages() {\n        return [];\n    }\n    async getBuiltInExtensionTranslationsUri() {\n        return undefined;\n    }\n}, 1 );\nregisterSingleton(ITreeViewsDnDService, TreeViewsDnDService, 1 );\nregisterSingleton(ITreeViewsService, TreeviewsService, 1 );\nregisterSingleton(IBreadcrumbsService, class BreadcrumbsService {\n    constructor() {\n        this.register = unsupported;\n        this.getWidget = () => undefined;\n    }\n}, 0 );\nregisterSingleton(IOutlineService, class OutlineService {\n    constructor() {\n        this.onDidChange = Event.None;\n        this.canCreateOutline = () => false;\n        this.createOutline = async () => undefined;\n        this.registerOutlineCreator = unsupported;\n    }\n}, 0 );\nregisterSingleton(IUpdateService, class UpdateService {\n    constructor() {\n        this.onStateChange = Event.None;\n        this.state = State.Uninitialized;\n        this.checkForUpdates = unsupported;\n        this.downloadUpdate = unsupported;\n        this.applyUpdate = unsupported;\n        this.quitAndInstall = unsupported;\n        this.isLatestVersion = unsupported;\n        this._applySpecificUpdate = unsupported;\n    }\n}, 0 );\nregisterSingleton(IStatusbarService, class StatusbarService {\n    constructor() {\n        this.onDidChangeEntryVisibility = Event.None;\n        this.addEntry = () => ({\n            dispose: () => { },\n            update: () => { }\n        });\n        this.isEntryVisible = () => false;\n        this.updateEntryVisibility = () => { };\n        this.focus = () => { };\n        this.focusNextEntry = () => { };\n        this.focusPreviousEntry = () => { };\n        this.isEntryFocused = () => false;\n        this.overrideStyle = () => Disposable.None;\n    }\n}, 0 );\nregisterSingleton(IExtensionGalleryService, class ExtensionGalleryService {\n    constructor() {\n        this.isEnabled = () => false;\n        this.query = unsupported;\n        this.getExtensions = unsupported;\n        this.isExtensionCompatible = unsupported;\n        this.getCompatibleExtension = unsupported;\n        this.getAllCompatibleVersions = unsupported;\n        this.download = unsupported;\n        this.downloadSignatureArchive = unsupported;\n        this.reportStatistic = unsupported;\n        this.getReadme = unsupported;\n        this.getManifest = unsupported;\n        this.getChangelog = unsupported;\n        this.getCoreTranslation = unsupported;\n        this.getExtensionsControlManifest = unsupported;\n    }\n}, 0 );\nregisterSingleton(ITerminalService, class TerminalService {\n    constructor() {\n        this.onInstanceEvent = unsupported;\n        this.onInstanceCapabilityEvent = unsupported;\n        this.onDidChangeSelection = Event.None;\n        this.detachedXterms = [];\n        this.restoredGroupCount = 0;\n        this.createDetachedXterm = unsupported;\n        this.instances = [];\n        this.revealActiveTerminal = unsupported;\n        this.isProcessSupportRegistered = false;\n        this.connectionState = 1 ;\n        this.defaultLocation = TerminalLocation.Panel;\n        this.onDidChangeActiveGroup = Event.None;\n        this.onDidDisposeGroup = Event.None;\n        this.onDidCreateInstance = Event.None;\n        this.onDidReceiveProcessId = Event.None;\n        this.onDidChangeInstanceDimensions = Event.None;\n        this.onDidMaximumDimensionsChange = Event.None;\n        this.onDidRequestStartExtensionTerminal = Event.None;\n        this.onDidChangeInstanceTitle = Event.None;\n        this.onDidChangeInstanceIcon = Event.None;\n        this.onDidChangeInstanceColor = Event.None;\n        this.onDidChangeInstancePrimaryStatus = Event.None;\n        this.onDidInputInstanceData = Event.None;\n        this.onDidRegisterProcessSupport = Event.None;\n        this.onDidChangeConnectionState = Event.None;\n        this.createTerminal = unsupported;\n        this.getInstanceFromId = unsupported;\n        this.getInstanceFromIndex = unsupported;\n        this.getReconnectedTerminals = unsupported;\n        this.getActiveOrCreateInstance = unsupported;\n        this.moveToEditor = unsupported;\n        this.moveToTerminalView = unsupported;\n        this.getPrimaryBackend = unsupported;\n        this.refreshActiveGroup = unsupported;\n        this.registerProcessSupport = () => { };\n        this.showProfileQuickPick = unsupported;\n        this.setContainers = unsupported;\n        this.requestStartExtensionTerminal = unsupported;\n        this.isAttachedToTerminal = unsupported;\n        this.getEditableData = unsupported;\n        this.setEditable = unsupported;\n        this.isEditable = unsupported;\n        this.safeDisposeTerminal = unsupported;\n        this.getDefaultInstanceHost = unsupported;\n        this.getInstanceHost = unsupported;\n        this.resolveLocation = unsupported;\n        this.setNativeDelegate = unsupported;\n        this.toggleEscapeSequenceLogging = unsupported;\n        this.getEditingTerminal = unsupported;\n        this.setEditingTerminal = unsupported;\n        this.activeInstance = undefined;\n        this.onDidDisposeInstance = Event.None;\n        this.onDidFocusInstance = Event.None;\n        this.onDidChangeActiveInstance = Event.None;\n        this.onDidChangeInstances = Event.None;\n        this.onDidChangeInstanceCapability = Event.None;\n        this.setActiveInstance = unsupported;\n        this.focusActiveInstance = unsupported;\n        this.getInstanceFromResource = unsupported;\n    }\n    async createDetachedTerminal() {\n        unsupported();\n    }\n    get whenConnected() {\n        return (async () => {\n            unsupported();\n        })();\n    }\n    get configHelper() {\n        return unsupported();\n    }\n}, 1 );\nregisterSingleton(ITerminalEditorService, class TerminalEditorService {\n    constructor() {\n        this.instances = [];\n        this.openEditor = unsupported;\n        this.detachActiveEditorInstance = unsupported;\n        this.detachInstance = unsupported;\n        this.splitInstance = unsupported;\n        this.revealActiveEditor = unsupported;\n        this.resolveResource = unsupported;\n        this.reviveInput = unsupported;\n        this.getInputFromResource = unsupported;\n        this.activeInstance = undefined;\n        this.onDidDisposeInstance = Event.None;\n        this.onDidFocusInstance = Event.None;\n        this.onDidChangeActiveInstance = Event.None;\n        this.onDidChangeInstances = Event.None;\n        this.onDidChangeInstanceCapability = Event.None;\n        this.setActiveInstance = unsupported;\n        this.focusActiveInstance = unsupported;\n        this.getInstanceFromResource = unsupported;\n    }\n}, 1 );\nregisterSingleton(ITerminalGroupService, class TerminalGroupService {\n    constructor() {\n        this.lastAccessedMenu = 'inline-tab';\n        this.instances = [];\n        this.groups = [];\n        this.activeGroup = undefined;\n        this.activeGroupIndex = 0;\n        this.onDidChangeActiveGroup = Event.None;\n        this.onDidDisposeGroup = Event.None;\n        this.onDidChangeGroups = Event.None;\n        this.onDidShow = Event.None;\n        this.onDidChangePanelOrientation = Event.None;\n        this.createGroup = unsupported;\n        this.getGroupForInstance = unsupported;\n        this.moveGroup = unsupported;\n        this.moveGroupToEnd = unsupported;\n        this.moveInstance = unsupported;\n        this.unsplitInstance = unsupported;\n        this.joinInstances = unsupported;\n        this.instanceIsSplit = unsupported;\n        this.getGroupLabels = unsupported;\n        this.setActiveGroupByIndex = unsupported;\n        this.setActiveGroupToNext = unsupported;\n        this.setActiveGroupToPrevious = unsupported;\n        this.setActiveInstanceByIndex = unsupported;\n        this.setContainer = unsupported;\n        this.showPanel = unsupported;\n        this.hidePanel = unsupported;\n        this.focusTabs = unsupported;\n        this.focusHover = unsupported;\n        this.showTabs = unsupported;\n        this.updateVisibility = unsupported;\n        this.onDidDisposeInstance = Event.None;\n        this.onDidFocusInstance = Event.None;\n        this.onDidChangeActiveInstance = Event.None;\n        this.onDidChangeInstances = Event.None;\n        this.onDidChangeInstanceCapability = Event.None;\n        this.setActiveInstance = unsupported;\n        this.focusActiveInstance = unsupported;\n        this.getInstanceFromResource = unsupported;\n    }\n}, 1 );\nregisterSingleton(ITerminalInstanceService, class TerminalInstanceService {\n    constructor() {\n        this.getRegisteredBackends = () => ( [].values());\n        this.onDidCreateInstance = Event.None;\n        this.convertProfileToShellLaunchConfig = unsupported;\n        this.createInstance = unsupported;\n        this.getBackend = unsupported;\n        this.didRegisterBackend = unsupported;\n    }\n}, 1 );\nregisterSingleton(ITerminalProfileService, class TerminalProfileService {\n    constructor() {\n        this.availableProfiles = [];\n        this.contributedProfiles = [];\n        this.profilesReady = Promise.resolve();\n        this.getPlatformKey = unsupported;\n        this.refreshAvailableProfiles = unsupported;\n        this.getDefaultProfileName = () => undefined;\n        this.getDefaultProfile = () => undefined;\n        this.onDidChangeAvailableProfiles = Event.None;\n        this.getContributedDefaultProfile = unsupported;\n        this.registerContributedProfile = unsupported;\n        this.getContributedProfileProvider = unsupported;\n        this.registerTerminalProfileProvider = unsupported;\n    }\n}, 1 );\nregisterSingleton(ITerminalLogService, class TerminalLogService {\n    constructor() {\n        this.onDidChangeLogLevel = Event.None;\n        this.getLevel = unsupported;\n        this.setLevel = unsupported;\n        this.trace = unsupported;\n        this.debug = unsupported;\n        this.info = unsupported;\n        this.warn = unsupported;\n        this.error = unsupported;\n        this.flush = unsupported;\n        this.dispose = unsupported;\n    }\n}, 1 );\nregisterSingleton(ITerminalLinkProviderService, class TerminalLinkProviderService {\n    constructor() {\n        this.linkProviders = new Set([]);\n        this.onDidAddLinkProvider = Event.None;\n        this.onDidRemoveLinkProvider = Event.None;\n        this.registerLinkProvider = unsupported;\n    }\n}, 1 );\nregisterSingleton(ITerminalContributionService, class TerminalContributionService {\n    constructor() {\n        this.terminalProfiles = [];\n    }\n}, 1 );\nregisterSingleton(ITerminalProfileResolverService, class TerminalProfileResolverService {\n    constructor() {\n        this.resolveIcon = unsupported;\n        this.resolveShellLaunchConfig = unsupported;\n        this.getDefaultProfile = async () => ({\n            profileName: 'bash',\n            path: '/bin/bash',\n            isDefault: true\n        });\n        this.getDefaultShell = unsupported;\n        this.getDefaultShellArgs = unsupported;\n        this.getDefaultIcon = unsupported;\n        this.getEnvironment = unsupported;\n        this.createProfileFromShellAndShellArgs = unsupported;\n    }\n}, 1 );\nregisterSingleton(IEnvironmentVariableService, class EnvironmentVariableService {\n    constructor() {\n        this.collections = new Map();\n        this.onDidChangeCollections = Event.None;\n        this.set = unsupported;\n        this.delete = unsupported;\n    }\n    get mergedCollection() {\n        return unsupported();\n    }\n}, 1 );\nregisterSingleton(ITerminalQuickFixService, class TerminalQuickFixService {\n    constructor() {\n        this.onDidRegisterProvider = Event.None;\n        this.onDidRegisterCommandSelector = Event.None;\n        this.onDidUnregisterProvider = Event.None;\n        this.extensionQuickFixes = Promise.resolve([]);\n        this.providers = new Map();\n        this.registerQuickFixProvider = unsupported;\n        this.registerCommandSelector = unsupported;\n    }\n}, 1 );\nregisterSingleton(IExtensionManagementService, class ExtensionManagementService {\n    constructor() {\n        this.toggleAppliationScope = async (extension) => extension;\n        this.installGalleryExtensions = unsupported;\n        this.onInstallExtension = Event.None;\n        this.onDidInstallExtensions = Event.None;\n        this.onUninstallExtension = Event.None;\n        this.onDidUninstallExtension = Event.None;\n        this.onDidUpdateExtensionMetadata = Event.None;\n        this.zip = unsupported;\n        this.unzip = unsupported;\n        this.getManifest = unsupported;\n        this.install = unsupported;\n        this.canInstall = unsupported;\n        this.installFromGallery = unsupported;\n        this.installFromLocation = unsupported;\n        this.installExtensionsFromProfile = unsupported;\n        this.uninstall = unsupported;\n        this.reinstallFromGallery = unsupported;\n        this.getInstalled = async () => [];\n        this.getExtensionsControlManifest = unsupported;\n        this.copyExtensions = unsupported;\n        this.updateMetadata = unsupported;\n        this.download = unsupported;\n        this.registerParticipant = unsupported;\n        this.getTargetPlatform = unsupported;\n        this.cleanUp = unsupported;\n    }\n}, 1 );\nregisterSingleton(IUserDataSyncWorkbenchService, class UserDataSyncWorkbenchService {\n    constructor() {\n        this.enabled = false;\n        this.authenticationProviders = [];\n        this.all = [];\n        this.current = undefined;\n        this.accountStatus = \"uninitialized\" ;\n        this.onDidChangeAccountStatus = Event.None;\n        this.turnOn = unsupported;\n        this.turnoff = unsupported;\n        this.signIn = unsupported;\n        this.resetSyncedData = unsupported;\n        this.showSyncActivity = unsupported;\n        this.syncNow = unsupported;\n        this.synchroniseUserDataSyncStoreType = unsupported;\n        this.showConflicts = unsupported;\n        this.accept = unsupported;\n    }\n}, 1 );\nregisterSingleton(IUserDataSyncEnablementService, class UserDataSyncEnablementService {\n    constructor() {\n        this.onDidChangeEnablement = Event.None;\n        this.isEnabled = () => false;\n        this.canToggleEnablement = () => false;\n        this.setEnablement = unsupported;\n        this.onDidChangeResourceEnablement = Event.None;\n        this.isResourceEnabled = () => false;\n        this.setResourceEnablement = unsupported;\n        this.getResourceSyncStateVersion = () => undefined;\n    }\n}, 1 );\nregisterSingleton(IKeybindingEditingService, class KeybindingEditingService {\n    constructor() {\n        this.addKeybinding = unsupported;\n        this.editKeybinding = unsupported;\n        this.removeKeybinding = unsupported;\n        this.resetKeybinding = unsupported;\n    }\n}, 1 );\nregisterSingleton(IPreferencesSearchService, class PreferencesSearchService {\n    constructor() {\n        this.getLocalSearchProvider = unsupported;\n        this.getRemoteSearchProvider = unsupported;\n    }\n}, 1 );\nregisterSingleton(INotebookService, class NotebookService {\n    constructor() {\n        this.canResolve = async () => false;\n        this.onAddViewType = Event.None;\n        this.onWillRemoveViewType = Event.None;\n        this.onDidChangeOutputRenderers = Event.None;\n        this.onWillAddNotebookDocument = Event.None;\n        this.onDidAddNotebookDocument = Event.None;\n        this.onWillRemoveNotebookDocument = Event.None;\n        this.onDidRemoveNotebookDocument = Event.None;\n        this.registerNotebookSerializer = unsupported;\n        this.withNotebookDataProvider = unsupported;\n        this.getOutputMimeTypeInfo = unsupported;\n        this.getViewTypeProvider = () => undefined;\n        this.getRendererInfo = () => undefined;\n        this.getRenderers = () => [];\n        this.getStaticPreloads = unsupported;\n        this.updateMimePreferredRenderer = unsupported;\n        this.saveMimeDisplayOrder = unsupported;\n        this.createNotebookTextModel = unsupported;\n        this.getNotebookTextModel = () => undefined;\n        this.getNotebookTextModels = unsupported;\n        this.listNotebookDocuments = () => [];\n        this.registerContributedNotebookType = unsupported;\n        this.getContributedNotebookType = unsupported;\n        this.getContributedNotebookTypes = () => [];\n        this.getNotebookProviderResourceRoots = () => [];\n        this.setToCopy = unsupported;\n        this.getToCopy = unsupported;\n        this.clearEditorCache = unsupported;\n    }\n}, 1 );\nregisterSingleton(IReplaceService, class ReplaceService {\n    constructor() {\n        this.replace = unsupported;\n        this.openReplacePreview = unsupported;\n        this.updateReplacePreview = unsupported;\n    }\n}, 1 );\nregisterSingleton(ISearchHistoryService, class SearchHistoryService {\n    constructor() {\n        this.onDidClearHistory = Event.None;\n        this.clearHistory = unsupported;\n        this.load = unsupported;\n        this.save = unsupported;\n    }\n}, 1 );\nregisterSingleton(INotebookEditorService, class NotebookEditorService {\n    constructor() {\n        this.retrieveWidget = unsupported;\n        this.retrieveExistingWidgetFromURI = () => undefined;\n        this.retrieveAllExistingWidgets = () => [];\n        this.onDidAddNotebookEditor = Event.None;\n        this.onDidRemoveNotebookEditor = Event.None;\n        this.addNotebookEditor = unsupported;\n        this.removeNotebookEditor = unsupported;\n        this.getNotebookEditor = () => undefined;\n        this.listNotebookEditors = () => [];\n    }\n}, 1 );\nregisterSingleton(ISearchViewModelWorkbenchService, class SearchWorkbenchService {\n    get searchModel() {\n        return unsupported();\n    }\n}, 1 );\nregisterSingleton(INotebookEditorModelResolverService, class NotebookEditorModelResolverService {\n    constructor() {\n        this.onDidSaveNotebook = Event.None;\n        this.onDidChangeDirty = Event.None;\n        this.onWillFailWithConflict = Event.None;\n        this.isDirty = unsupported;\n        this.resolve = unsupported;\n    }\n}, 1 );\nregisterSingleton(IWorkingCopyEditorService, WorkingCopyEditorService, 1 );\nregisterSingleton(IUserActivityService, UserActivityService, 1 );\nregisterSingleton(ICanonicalUriService, CanonicalUriService, 1 );\nregisterSingleton(IExtensionStatusBarItemService, ExtensionStatusBarItemService, 1 );\nregisterSingleton(IWorkbenchAssignmentService, class WorkbenchAssignmentService {\n    constructor() {\n        this.getCurrentExperiments = async () => [];\n        this.getTreatment = async () => undefined;\n    }\n}, 1 );\nregisterSingleton(IChatService, class ChatService {\n    constructor() {\n        this.transferredSessionData = undefined;\n        this.onDidSubmitSlashCommand = Event.None;\n        this.getSessionId = () => undefined;\n        this.transferredSessionId = undefined;\n        this.transferChatSession = unsupported;\n        this.registerProvider = unsupported;\n        this.registerSlashCommandProvider = unsupported;\n        this.getProviderInfos = () => [];\n        this.startSession = unsupported;\n        this.getSession = () => undefined;\n        this.getOrRestoreSession = () => undefined;\n        this.loadSessionFromContent = () => undefined;\n        this.sendRequest = unsupported;\n        this.removeRequest = unsupported;\n        this.cancelCurrentRequestForSession = unsupported;\n        this.getSlashCommands = unsupported;\n        this.clearSession = unsupported;\n        this.addRequest = unsupported;\n        this.addCompleteRequest = unsupported;\n        this.sendRequestToProvider = unsupported;\n        this.getHistory = () => [];\n        this.removeHistoryEntry = unsupported;\n        this.onDidPerformUserAction = Event.None;\n        this.notifyUserAction = unsupported;\n    }\n}, 1 );\nregisterSingleton(IQuickChatService, class QuickChatService {\n    constructor() {\n        this.onDidClose = Event.None;\n        this.enabled = false;\n        this.toggle = unsupported;\n        this.focus = unsupported;\n        this.open = unsupported;\n        this.close = unsupported;\n        this.openInChatView = unsupported;\n    }\n}, 1 );\nregisterSingleton(IEmbedderTerminalService, class EmbedderTerminalService {\n    constructor() {\n        this.onDidCreateTerminal = Event.None;\n        this.createTerminal = unsupported;\n    }\n}, 1 );\nregisterSingleton(ICustomEditorService, class CustomEditorService {\n    constructor() {\n        this.getCustomEditor = unsupported;\n        this.getAllCustomEditors = unsupported;\n        this.getContributedCustomEditors = unsupported;\n        this.getUserConfiguredCustomEditors = unsupported;\n        this.registerCustomEditorCapabilities = unsupported;\n        this.getCustomEditorCapabilities = unsupported;\n    }\n    get models() {\n        return unsupported();\n    }\n}, 1 );\nregisterSingleton(IWebviewService, class WebviewService {\n    constructor() {\n        this.webviews = [];\n        this.onDidChangeActiveWebview = Event.None;\n        this.createWebviewElement = unsupported;\n        this.createWebviewOverlay = unsupported;\n    }\n}, 1 );\nregisterSingleton(IWebviewViewService, class WebviewService {\n    constructor() {\n        this.onNewResolverRegistered = Event.None;\n        this.register = unsupported;\n        this.resolve = unsupported;\n    }\n}, 1 );\nregisterSingleton(IWebviewWorkbenchService, class WebviewWorkbenchService {\n    constructor() {\n        this.onDidChangeActiveWebviewEditor = Event.None;\n        this.openWebview = unsupported;\n        this.openRevivedWebview = unsupported;\n        this.revealWebview = unsupported;\n        this.registerResolver = () => Disposable.None;\n        this.shouldPersist = unsupported;\n        this.resolveWebview = unsupported;\n    }\n    get iconManager() {\n        return unsupported();\n    }\n}, 1 );\nregisterSingleton(IEditorDropService, class EditorDropService {\n    constructor() {\n        this.createEditorDropTarget = unsupported;\n    }\n}, 1 );\nregisterSingleton(IRemoteAuthorityResolverService, class RemoteAuthorityResolverService {\n    constructor() {\n        this.onDidChangeConnectionData = Event.None;\n        this.resolveAuthority = unsupported;\n        this.getConnectionData = unsupported;\n        this.getCanonicalURI = unsupported;\n        this._clearResolvedAuthority = unsupported;\n        this._setResolvedAuthority = unsupported;\n        this._setResolvedAuthorityError = unsupported;\n        this._setAuthorityConnectionToken = unsupported;\n        this._setCanonicalURIProvider = unsupported;\n    }\n}, 1 );\nregisterSingleton(IExternalUriOpenerService, ExternalUriOpenerService, 1 );\nregisterSingleton(IAccessibleViewService, class AccessibleViewService {\n    constructor() {\n        this.showAccessibleViewHelp = unsupported;\n        this.goToSymbol = unsupported;\n        this.disableHint = unsupported;\n        this.next = unsupported;\n        this.previous = unsupported;\n        this.getOpenAriaHint = unsupported;\n        this.show = unsupported;\n        this.registerProvider = unsupported;\n    }\n}, 1 );\nregisterSingleton(IWorkbenchExtensionManagementService, class WorkbenchExtensionManagementService {\n    constructor() {\n        this.toggleAppliationScope = async (extension) => extension;\n        this.onInstallExtension = Event.None;\n        this.onDidInstallExtensions = Event.None;\n        this.onUninstallExtension = Event.None;\n        this.onDidUninstallExtension = Event.None;\n        this.onDidChangeProfile = Event.None;\n        this.installVSIX = unsupported;\n        this.installFromLocation = unsupported;\n        this.updateFromGallery = unsupported;\n        this.onDidUpdateExtensionMetadata = Event.None;\n        this.zip = unsupported;\n        this.unzip = unsupported;\n        this.getManifest = unsupported;\n        this.install = unsupported;\n        this.canInstall = unsupported;\n        this.installFromGallery = unsupported;\n        this.installGalleryExtensions = unsupported;\n        this.installExtensionsFromProfile = unsupported;\n        this.uninstall = unsupported;\n        this.reinstallFromGallery = unsupported;\n        this.getInstalled = unsupported;\n        this.getExtensionsControlManifest = unsupported;\n        this.copyExtensions = unsupported;\n        this.updateMetadata = unsupported;\n        this.download = unsupported;\n        this.registerParticipant = unsupported;\n        this.getTargetPlatform = unsupported;\n        this.cleanUp = unsupported;\n    }\n}, 1 );\nregisterSingleton(IExtensionManifestPropertiesService, class ExtensionManifestPropertiesService {\n    constructor() {\n        this.prefersExecuteOnUI = unsupported;\n        this.prefersExecuteOnWorkspace = unsupported;\n        this.prefersExecuteOnWeb = unsupported;\n        this.canExecuteOnUI = unsupported;\n        this.canExecuteOnWorkspace = unsupported;\n        this.canExecuteOnWeb = unsupported;\n        this.getExtensionKind = unsupported;\n        this.getUserConfiguredExtensionKind = unsupported;\n        this.getExtensionUntrustedWorkspaceSupportType = unsupported;\n        this.getExtensionVirtualWorkspaceSupportType = unsupported;\n    }\n}, 1 );\nregisterSingleton(IWorkspaceTrustEnablementService, class WorkspaceTrustEnablementService {\n    isWorkspaceTrustEnabled() {\n        return false;\n    }\n}, 1 );\nregisterSingleton(IRemoteExtensionsScannerService, class RemoteExtensionsScannerService {\n    whenExtensionsReady() {\n        throw new Error('Method not implemented.');\n    }\n    async scanExtensions() {\n        return [];\n    }\n    async scanSingleExtension() {\n        return null;\n    }\n}, 1 );\nregisterSingleton(IURLService, BrowserURLService, 1 );\nregisterSingleton(ICredentialsService, class CredentialsService {\n    constructor() {\n        this.onDidChangePassword = Event.None;\n        this.getSecretStoragePrefix = async () => 'code-oss';\n        this.getPassword = unsupported;\n        this.setPassword = unsupported;\n        this.deletePassword = unsupported;\n        this.findPassword = unsupported;\n        this.findCredentials = unsupported;\n    }\n}, 1 );\nregisterSingleton(IRemoteSocketFactoryService, class RemoteSocketFactoryService {\n    constructor() {\n        this.register = unsupported;\n        this.connect = unsupported;\n    }\n}, 1 );\nregisterSingleton(IQuickDiffService, class QuickDiffService {\n    constructor() {\n        this.onDidChangeQuickDiffProviders = Event.None;\n        this.addQuickDiffProvider = unsupported;\n        this.getQuickDiffs = unsupported;\n    }\n}, 1 );\nregisterSingleton(ISCMService, class SCMService {\n    constructor() {\n        this.onDidAddRepository = Event.None;\n        this.onDidRemoveRepository = Event.None;\n        this.repositories = [];\n        this.repositoryCount = 0;\n        this.registerSCMProvider = unsupported;\n        this.getRepository = unsupported;\n    }\n}, 1 );\nregisterSingleton(IDownloadService, class DownloadService {\n    constructor() {\n        this.download = unsupported;\n    }\n}, 1 );\nregisterSingleton(IExtensionUrlHandler, class ExtensionUrlHandler {\n    constructor() {\n        this.registerExtensionHandler = unsupported;\n        this.unregisterExtensionHandler = unsupported;\n    }\n}, 1 );\nregisterSingleton(ICommentService, class CommentService {\n    constructor() {\n        this.onDidSetResourceCommentInfos = Event.None;\n        this.onDidSetAllCommentThreads = Event.None;\n        this.onDidUpdateCommentThreads = Event.None;\n        this.onDidUpdateNotebookCommentThreads = Event.None;\n        this.onDidChangeActiveCommentThread = Event.None;\n        this.onDidChangeCurrentCommentThread = Event.None;\n        this.onDidUpdateCommentingRanges = Event.None;\n        this.onDidChangeActiveCommentingRange = Event.None;\n        this.onDidSetDataProvider = Event.None;\n        this.onDidDeleteDataProvider = Event.None;\n        this.onDidChangeCommentingEnabled = Event.None;\n        this.isCommentingEnabled = false;\n        this.setDocumentComments = unsupported;\n        this.setWorkspaceComments = unsupported;\n        this.removeWorkspaceComments = unsupported;\n        this.registerCommentController = unsupported;\n        this.unregisterCommentController = () => { };\n        this.getCommentController = unsupported;\n        this.createCommentThreadTemplate = unsupported;\n        this.updateCommentThreadTemplate = unsupported;\n        this.getCommentMenus = unsupported;\n        this.updateComments = unsupported;\n        this.updateNotebookComments = unsupported;\n        this.disposeCommentThread = unsupported;\n        this.getDocumentComments = unsupported;\n        this.getNotebookComments = unsupported;\n        this.updateCommentingRanges = unsupported;\n        this.hasReactionHandler = unsupported;\n        this.toggleReaction = unsupported;\n        this.setActiveCommentThread = unsupported;\n        this.setCurrentCommentThread = unsupported;\n        this.enableCommenting = unsupported;\n    }\n}, 1 );\nregisterSingleton(INotebookCellStatusBarService, class NotebookCellStatusBarService {\n    constructor() {\n        this.onDidChangeProviders = Event.None;\n        this.onDidChangeItems = Event.None;\n        this.registerCellStatusBarItemProvider = unsupported;\n        this.getStatusBarItemsForCell = unsupported;\n    }\n}, 1 );\nregisterSingleton(INotebookKernelService, class NotebookKernelService {\n    constructor() {\n        this.onDidAddKernel = Event.None;\n        this.onDidRemoveKernel = Event.None;\n        this.onDidChangeSelectedNotebooks = Event.None;\n        this.onDidChangeNotebookAffinity = Event.None;\n        this.registerKernel = unsupported;\n        this.getMatchingKernel = unsupported;\n        this.getSelectedOrSuggestedKernel = unsupported;\n        this.selectKernelForNotebook = unsupported;\n        this.preselectKernelForNotebook = unsupported;\n        this.updateKernelNotebookAffinity = unsupported;\n        this.onDidChangeKernelDetectionTasks = Event.None;\n        this.registerNotebookKernelDetectionTask = unsupported;\n        this.getKernelDetectionTasks = unsupported;\n        this.onDidChangeSourceActions = Event.None;\n        this.getSourceActions = unsupported;\n        this.getRunningSourceActions = unsupported;\n        this.registerKernelSourceActionProvider = unsupported;\n        this.getKernelSourceActions2 = unsupported;\n    }\n}, 1 );\nregisterSingleton(INotebookRendererMessagingService, class NotebookRendererMessagingService {\n    constructor() {\n        this.onShouldPostMessage = Event.None;\n        this.prepare = unsupported;\n        this.getScoped = unsupported;\n        this.receiveMessage = unsupported;\n    }\n}, 1 );\nregisterSingleton(IInteractiveDocumentService, class InteractiveDocumentService {\n    constructor() {\n        this.onWillAddInteractiveDocument = Event.None;\n        this.onWillRemoveInteractiveDocument = Event.None;\n        this.willCreateInteractiveDocument = unsupported;\n        this.willRemoveInteractiveDocument = unsupported;\n    }\n}, 1 );\nregisterSingleton(IInlineChatService, class InlineChatService {\n    constructor() {\n        this.onDidChangeProviders = Event.None;\n        this.addProvider = unsupported;\n        this.getAllProvider = () => [];\n    }\n}, 1 );\nregisterSingleton(IChatWidgetService, class ChatWidgetService {\n    constructor() {\n        this.getWidgetBySessionId = () => undefined;\n        this.lastFocusedWidget = undefined;\n        this.revealViewForProvider = unsupported;\n        this.getWidgetByInputUri = unsupported;\n    }\n}, 1 );\nregisterSingleton(IRemoteExplorerService, class RemoteExplorerService {\n    constructor() {\n        this.onDidChangeTargetType = Event.None;\n        this.targetType = [];\n        this.onDidChangeEditable = Event.None;\n        this.setEditable = unsupported;\n        this.getEditableData = unsupported;\n        this.forward = unsupported;\n        this.close = unsupported;\n        this.setTunnelInformation = unsupported;\n        this.setCandidateFilter = unsupported;\n        this.onFoundNewCandidates = unsupported;\n        this.restore = unsupported;\n        this.enablePortsFeatures = unsupported;\n        this.onEnabledPortsFeatures = Event.None;\n        this.portsFeaturesEnabled = false;\n        this.namedProcesses = new Map();\n    }\n    get tunnelModel() {\n        return unsupported();\n    }\n}, 1 );\nregisterSingleton(IAuthenticationService, class AuthenticationService {\n    constructor() {\n        this.isAuthenticationProviderRegistered = () => false;\n        this.getProviderIds = () => [];\n        this.registerAuthenticationProvider = unsupported;\n        this.unregisterAuthenticationProvider = unsupported;\n        this.isAccessAllowed = () => false;\n        this.updateAllowedExtension = unsupported;\n        this.updateSessionPreference = unsupported;\n        this.getSessionPreference = () => undefined;\n        this.removeSessionPreference = unsupported;\n        this.showGetSessionPrompt = unsupported;\n        this.selectSession = unsupported;\n        this.requestSessionAccess = unsupported;\n        this.completeSessionAccessRequest = unsupported;\n        this.requestNewSession = unsupported;\n        this.sessionsUpdate = unsupported;\n        this.onDidRegisterAuthenticationProvider = Event.None;\n        this.onDidUnregisterAuthenticationProvider = Event.None;\n        this.onDidChangeSessions = Event.None;\n        this.declaredProviders = [];\n        this.onDidChangeDeclaredProviders = Event.None;\n        this.getSessions = async () => [];\n        this.getLabel = unsupported;\n        this.supportsMultipleAccounts = () => false;\n        this.createSession = unsupported;\n        this.removeSession = unsupported;\n        this.manageTrustedExtensionsForAccount = unsupported;\n        this.removeAccountSessions = unsupported;\n    }\n}, 1 );\nregisterSingleton(ITimelineService, class TimelineService {\n    constructor() {\n        this.onDidChangeProviders = Event.None;\n        this.onDidChangeTimeline = Event.None;\n        this.onDidChangeUri = Event.None;\n        this.registerTimelineProvider = unsupported;\n        this.unregisterTimelineProvider = unsupported;\n        this.getSources = () => [];\n        this.getTimeline = unsupported;\n        this.setUri = unsupported;\n    }\n}, 1 );\nregisterSingleton(ITestService, class TestService {\n    constructor() {\n        this.onDidCancelTestRun = Event.None;\n        this.onWillProcessDiff = Event.None;\n        this.onDidProcessDiff = Event.None;\n        this.registerTestController = unsupported;\n        this.getTestController = () => undefined;\n        this.refreshTests = unsupported;\n        this.cancelRefreshTests = unsupported;\n        this.startContinuousRun = unsupported;\n        this.runTests = unsupported;\n        this.runResolvedTests = unsupported;\n        this.syncTests = unsupported;\n        this.cancelTestRun = unsupported;\n        this.publishDiff = unsupported;\n    }\n    get excluded() {\n        return unsupported();\n    }\n    get collection() {\n        return unsupported();\n    }\n    get showInlineOutput() {\n        return unsupported();\n    }\n}, 1 );\nregisterSingleton(ISecretStorageService, class SecretStorageService {\n    constructor() {\n        this.onDidChangeSecret = Event.None;\n        this.type = 'in-memory';\n        this.get = async () => undefined;\n        this.set = unsupported;\n        this.delete = unsupported;\n    }\n}, 1 );\nregisterSingleton(IShareService, class ShareService {\n    constructor() {\n        this.registerShareProvider = unsupported;\n        this.getShareActions = () => [];\n        this.provideShare = async () => undefined;\n    }\n}, 1 );\nregisterSingleton(IUserDataProfileImportExportService, class UserDataProfileImportExportService {\n    constructor() {\n        this.createProfile = unsupported;\n        this.editProfile = unsupported;\n        this.registerProfileContentHandler = unsupported;\n        this.unregisterProfileContentHandler = unsupported;\n        this.exportProfile = unsupported;\n        this.importProfile = unsupported;\n        this.showProfileContents = unsupported;\n        this.createFromCurrentProfile = unsupported;\n        this.createTroubleshootProfile = unsupported;\n        this.setProfile = unsupported;\n    }\n}, 1 );\nregisterSingleton(IWorkbenchIssueService, class WorkbenchIssueService {\n    constructor() {\n        this.openReporter = unsupported;\n        this.openProcessExplorer = unsupported;\n        this.registerIssueUriRequestHandler = unsupported;\n    }\n}, 1 );\nregisterSingleton(ISCMViewService, class SCMViewService {\n    constructor() {\n        this.repositories = [];\n        this.onDidChangeRepositories = Event.None;\n        this.visibleRepositories = [];\n        this.onDidChangeVisibleRepositories = Event.None;\n        this.isVisible = () => false;\n        this.toggleVisibility = unsupported;\n        this.toggleSortKey = unsupported;\n        this.focusedRepository = undefined;\n        this.onDidFocusRepository = Event.None;\n        this.focus = unsupported;\n    }\n    get menus() {\n        return unsupported();\n    }\n}, 1 );\nregisterSingleton(INotebookExecutionStateService, class NotebookExecutionStateService {\n    constructor() {\n        this.onDidChangeExecution = Event.None;\n        this.onDidChangeLastRunFailState = Event.None;\n        this.forceCancelNotebookExecutions = unsupported;\n        this.getCellExecutionsForNotebook = unsupported;\n        this.getCellExecutionsByHandleForNotebook = unsupported;\n        this.getCellExecution = unsupported;\n        this.createCellExecution = unsupported;\n        this.getExecution = unsupported;\n        this.createExecution = unsupported;\n        this.getLastFailedCellForNotebook = unsupported;\n    }\n}, 1 );\nregisterSingleton(IChatContributionService, class ChatContributionService {\n    constructor() {\n        this.registeredProviders = [];\n        this.getViewIdForProvider = unsupported;\n    }\n}, 1 );\nregisterSingleton(ITestProfileService, class TestProfileService {\n    constructor() {\n        this.onDidChange = Event.None;\n        this.addProfile = unsupported;\n        this.updateProfile = unsupported;\n        this.removeProfile = unsupported;\n        this.capabilitiesForTest = unsupported;\n        this.configure = unsupported;\n        this.all = () => [];\n        this.getGroupDefaultProfiles = () => [];\n        this.setGroupDefaultProfiles = unsupported;\n        this.getControllerProfiles = () => [];\n    }\n}, 1 );\nregisterSingleton(IEncryptionService, class EncryptionService {\n    constructor() {\n        this.setUsePlainTextEncryption = unsupported;\n        this.getKeyStorageProvider = unsupported;\n        this.encrypt = unsupported;\n        this.decrypt = unsupported;\n        this.isEncryptionAvailable = unsupported;\n    }\n}, 1 );\nregisterSingleton(ITestResultService, class TestResultService {\n    constructor() {\n        this.onResultsChanged = Event.None;\n        this.onTestChanged = Event.None;\n        this.results = [];\n        this.clear = unsupported;\n        this.createLiveResult = unsupported;\n        this.push = unsupported;\n        this.getResult = () => undefined;\n        this.getStateById = () => undefined;\n    }\n}, 1 );\nregisterSingleton(IUserDataInitializationService, class UserDataInitializationService {\n    constructor() {\n        this.requiresInitialization = async () => false;\n        this.whenInitializationFinished = async () => { };\n        this.initializeRequiredResources = async () => { };\n        this.initializeInstalledExtensions = async () => { };\n        this.initializeOtherResources = async () => { };\n    }\n}, 1 );\nregisterSingleton(IDiagnosticsService, NullDiagnosticsService, 1 );\nregisterSingleton(INotebookSearchService, class NotebookSearchService {\n    notebookSearch() {\n        return {\n            openFilesToScan: new ResourceSet(),\n            completeData: Promise.resolve({\n                results: [],\n                messages: []\n            }),\n            allScannedFiles: Promise.resolve(new ResourceSet())\n        };\n    }\n}, 1 );\nregisterSingleton(IChatProviderService, class ChatProviderService {\n    constructor() {\n        this.registerChatResponseProvider = unsupported;\n        this.fetchChatResponse = unsupported;\n    }\n}, 1 );\nregisterSingleton(IChatSlashCommandService, class ChatSlashCommandService {\n    constructor() {\n        this.onDidChangeCommands = unsupported;\n        this.registerSlashData = unsupported;\n        this.registerSlashCallback = unsupported;\n        this.registerSlashCommand = unsupported;\n        this.executeCommand = unsupported;\n        this.getCommands = unsupported;\n        this.hasCommand = unsupported;\n    }\n}, 1 );\nregisterSingleton(IChatVariablesService, class ChatVariablesService {\n    constructor() {\n        this.registerVariable = unsupported;\n        this.getVariables = unsupported;\n        this.resolveVariables = unsupported;\n    }\n}, 1 );\nregisterSingleton(IAiRelatedInformationService, class AiRelatedInformationService {\n    constructor() {\n        this.isEnabled = () => false;\n        this.getRelatedInformation = unsupported;\n        this.registerAiRelatedInformationProvider = unsupported;\n    }\n}, 1 );\nregisterSingleton(IAiEmbeddingVectorService, class AiEmbeddingVectorService {\n    constructor() {\n        this.isEnabled = () => false;\n        this.getEmbeddingVector = unsupported;\n        this.registerAiEmbeddingVectorProvider = unsupported;\n    }\n}, 1 );\nregisterSingleton(ISignService, (_a = class SignService {\n        async createNewMessage(value) {\n            const id = String(_a._nextId++);\n            return {\n                id,\n                data: value\n            };\n        }\n        async validate() {\n            return true;\n        }\n        async sign(value) {\n            return value;\n        }\n    },\n    _a._nextId = 1,\n    _a), 1 );\nexport { EmptyEditorGroupsService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IPaneCompositePartService = ( createDecorator('paneCompositePartService'));\nexport { IPaneCompositePartService };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { createDecorator, IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { AsyncEmitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Promises } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { insert } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { Disposable, toDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { CancellationToken } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { IWorkingCopyService } from './workingCopyService.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { WorkingCopyFileOperationParticipant } from './workingCopyFileOperationParticipant.js';\nimport { StoredFileWorkingCopySaveParticipant } from './storedFileWorkingCopySaveParticipant.js';\nconst IWorkingCopyFileService = ( createDecorator('workingCopyFileService'));\nlet WorkingCopyFileService = class WorkingCopyFileService extends Disposable {\n    constructor(fileService, workingCopyService, instantiationService, uriIdentityService) {\n        super();\n        this.fileService = fileService;\n        this.workingCopyService = workingCopyService;\n        this.instantiationService = instantiationService;\n        this.uriIdentityService = uriIdentityService;\n        this._onWillRunWorkingCopyFileOperation = this._register(( new AsyncEmitter()));\n        this.onWillRunWorkingCopyFileOperation = this._onWillRunWorkingCopyFileOperation.event;\n        this._onDidFailWorkingCopyFileOperation = this._register(( new AsyncEmitter()));\n        this.onDidFailWorkingCopyFileOperation = this._onDidFailWorkingCopyFileOperation.event;\n        this._onDidRunWorkingCopyFileOperation = this._register(( new AsyncEmitter()));\n        this.onDidRunWorkingCopyFileOperation = this._onDidRunWorkingCopyFileOperation.event;\n        this.correlationIds = 0;\n        this.fileOperationParticipants = this._register(this.instantiationService.createInstance(WorkingCopyFileOperationParticipant));\n        this.saveParticipants = this._register(this.instantiationService.createInstance(StoredFileWorkingCopySaveParticipant));\n        this.workingCopyProviders = [];\n        this._register(this.registerWorkingCopyProvider(resource => {\n            return this.workingCopyService.workingCopies.filter(workingCopy => {\n                if (this.fileService.hasProvider(resource)) {\n                    return this.uriIdentityService.extUri.isEqualOrParent(workingCopy.resource, resource);\n                }\n                return this.uriIdentityService.extUri.isEqual(workingCopy.resource, resource);\n            });\n        }));\n    }\n    create(operations, token, undoInfo) {\n        return this.doCreateFileOrFolder(operations, true, token, undoInfo);\n    }\n    createFolder(operations, token, undoInfo) {\n        return this.doCreateFileOrFolder(operations, false, token, undoInfo);\n    }\n    async doCreateFileOrFolder(operations, isFile, token, undoInfo) {\n        if (operations.length === 0) {\n            return [];\n        }\n        if (isFile) {\n            const validateCreates = await Promises.settled(( operations.map(\n                operation => this.fileService.canCreateFile(operation.resource, { overwrite: operation.overwrite })\n            )));\n            const error = validateCreates.find(validateCreate => validateCreate instanceof Error);\n            if (error instanceof Error) {\n                throw error;\n            }\n        }\n        const files = ( operations.map(operation => ({ target: operation.resource })));\n        await this.runFileOperationParticipants(files, 0 , undoInfo, token);\n        const event = { correlationId: this.correlationIds++, operation: 0 , files };\n        await this._onWillRunWorkingCopyFileOperation.fireAsync(event, CancellationToken.None );\n        let stats;\n        try {\n            if (isFile) {\n                stats = await Promises.settled(( operations.map(\n                    operation => this.fileService.createFile(operation.resource, operation.contents, { overwrite: operation.overwrite })\n                )));\n            }\n            else {\n                stats = await Promises.settled(( operations.map(operation => this.fileService.createFolder(operation.resource))));\n            }\n        }\n        catch (error) {\n            await this._onDidFailWorkingCopyFileOperation.fireAsync(event, CancellationToken.None );\n            throw error;\n        }\n        await this._onDidRunWorkingCopyFileOperation.fireAsync(event, CancellationToken.None );\n        return stats;\n    }\n    async move(operations, token, undoInfo) {\n        return this.doMoveOrCopy(operations, true, token, undoInfo);\n    }\n    async copy(operations, token, undoInfo) {\n        return this.doMoveOrCopy(operations, false, token, undoInfo);\n    }\n    async doMoveOrCopy(operations, move, token, undoInfo) {\n        const stats = [];\n        for (const { file: { source, target }, overwrite } of operations) {\n            const validateMoveOrCopy = await (move ? this.fileService.canMove(source, target, overwrite) : this.fileService.canCopy(source, target, overwrite));\n            if (validateMoveOrCopy instanceof Error) {\n                throw validateMoveOrCopy;\n            }\n        }\n        const files = ( operations.map(o => o.file));\n        await this.runFileOperationParticipants(files, move ? 2  : 3 , undoInfo, token);\n        const event = { correlationId: this.correlationIds++, operation: move ? 2  : 3 , files };\n        await this._onWillRunWorkingCopyFileOperation.fireAsync(event, CancellationToken.None );\n        try {\n            for (const { file: { source, target }, overwrite } of operations) {\n                if (!this.uriIdentityService.extUri.isEqual(source, target)) {\n                    const dirtyWorkingCopies = (move ? [...this.getDirty(source), ...this.getDirty(target)] : this.getDirty(target));\n                    await Promises.settled(( dirtyWorkingCopies.map(dirtyWorkingCopy => dirtyWorkingCopy.revert({ soft: true }))));\n                }\n                if (move) {\n                    stats.push(await this.fileService.move(source, target, overwrite));\n                }\n                else {\n                    stats.push(await this.fileService.copy(source, target, overwrite));\n                }\n            }\n        }\n        catch (error) {\n            await this._onDidFailWorkingCopyFileOperation.fireAsync(event, CancellationToken.None );\n            throw error;\n        }\n        await this._onDidRunWorkingCopyFileOperation.fireAsync(event, CancellationToken.None );\n        return stats;\n    }\n    async delete(operations, token, undoInfo) {\n        for (const operation of operations) {\n            const validateDelete = await this.fileService.canDelete(operation.resource, { recursive: operation.recursive, useTrash: operation.useTrash });\n            if (validateDelete instanceof Error) {\n                throw validateDelete;\n            }\n        }\n        const files = ( operations.map(operation => ({ target: operation.resource })));\n        await this.runFileOperationParticipants(files, 1 , undoInfo, token);\n        const event = { correlationId: this.correlationIds++, operation: 1 , files };\n        await this._onWillRunWorkingCopyFileOperation.fireAsync(event, CancellationToken.None );\n        for (const operation of operations) {\n            const dirtyWorkingCopies = this.getDirty(operation.resource);\n            await Promises.settled(( dirtyWorkingCopies.map(dirtyWorkingCopy => dirtyWorkingCopy.revert({ soft: true }))));\n        }\n        try {\n            for (const operation of operations) {\n                await this.fileService.del(operation.resource, { recursive: operation.recursive, useTrash: operation.useTrash });\n            }\n        }\n        catch (error) {\n            await this._onDidFailWorkingCopyFileOperation.fireAsync(event, CancellationToken.None );\n            throw error;\n        }\n        await this._onDidRunWorkingCopyFileOperation.fireAsync(event, CancellationToken.None );\n    }\n    addFileOperationParticipant(participant) {\n        return this.fileOperationParticipants.addFileOperationParticipant(participant);\n    }\n    runFileOperationParticipants(files, operation, undoInfo, token) {\n        return this.fileOperationParticipants.participate(files, operation, undoInfo, token);\n    }\n    get hasSaveParticipants() { return this.saveParticipants.length > 0; }\n    addSaveParticipant(participant) {\n        return this.saveParticipants.addSaveParticipant(participant);\n    }\n    runSaveParticipants(workingCopy, context, token) {\n        return this.saveParticipants.participate(workingCopy, context, token);\n    }\n    registerWorkingCopyProvider(provider) {\n        const remove = insert(this.workingCopyProviders, provider);\n        return toDisposable(remove);\n    }\n    getDirty(resource) {\n        const dirtyWorkingCopies = ( new Set());\n        for (const provider of this.workingCopyProviders) {\n            for (const workingCopy of provider(resource)) {\n                if (workingCopy.isDirty()) {\n                    dirtyWorkingCopies.add(workingCopy);\n                }\n            }\n        }\n        return Array.from(dirtyWorkingCopies);\n    }\n};\nWorkingCopyFileService = ( __decorate([\n    ( __param(0, IFileService)),\n    ( __param(1, IWorkingCopyService)),\n    ( __param(2, IInstantiationService)),\n    ( __param(3, IUriIdentityService))\n], WorkingCopyFileService));\nexport { IWorkingCopyFileService, WorkingCopyFileService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { Disposable, toDisposable, dispose, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { ResourceMap } from 'monaco-editor/esm/vs/base/common/map.js';\nconst IWorkingCopyService = ( createDecorator('workingCopyService'));\nclass WorkingCopyService extends Disposable {\n    constructor() {\n        super(...arguments);\n        this._onDidRegister = this._register(( new Emitter()));\n        this.onDidRegister = this._onDidRegister.event;\n        this._onDidUnregister = this._register(( new Emitter()));\n        this.onDidUnregister = this._onDidUnregister.event;\n        this._onDidChangeDirty = this._register(( new Emitter()));\n        this.onDidChangeDirty = this._onDidChangeDirty.event;\n        this._onDidChangeContent = this._register(( new Emitter()));\n        this.onDidChangeContent = this._onDidChangeContent.event;\n        this._onDidSave = this._register(( new Emitter()));\n        this.onDidSave = this._onDidSave.event;\n        this._workingCopies = ( new Set());\n        this.mapResourceToWorkingCopies = ( new ResourceMap());\n    }\n    get workingCopies() { return Array.from(( this._workingCopies.values())); }\n    registerWorkingCopy(workingCopy) {\n        let workingCopiesForResource = this.mapResourceToWorkingCopies.get(workingCopy.resource);\n        if (workingCopiesForResource?.has(workingCopy.typeId)) {\n            throw new Error(`Cannot register more than one working copy with the same resource ${workingCopy.resource.toString()} and type ${workingCopy.typeId}.`);\n        }\n        this._workingCopies.add(workingCopy);\n        if (!workingCopiesForResource) {\n            workingCopiesForResource = ( new Map());\n            this.mapResourceToWorkingCopies.set(workingCopy.resource, workingCopiesForResource);\n        }\n        workingCopiesForResource.set(workingCopy.typeId, workingCopy);\n        const disposables = ( new DisposableStore());\n        disposables.add(workingCopy.onDidChangeContent(() => this._onDidChangeContent.fire(workingCopy)));\n        disposables.add(workingCopy.onDidChangeDirty(() => this._onDidChangeDirty.fire(workingCopy)));\n        disposables.add(workingCopy.onDidSave(e => this._onDidSave.fire({ workingCopy, ...e })));\n        this._onDidRegister.fire(workingCopy);\n        if (workingCopy.isDirty()) {\n            this._onDidChangeDirty.fire(workingCopy);\n        }\n        return toDisposable(() => {\n            this.unregisterWorkingCopy(workingCopy);\n            dispose(disposables);\n            this._onDidUnregister.fire(workingCopy);\n        });\n    }\n    unregisterWorkingCopy(workingCopy) {\n        this._workingCopies.delete(workingCopy);\n        const workingCopiesForResource = this.mapResourceToWorkingCopies.get(workingCopy.resource);\n        if (workingCopiesForResource?.delete(workingCopy.typeId) && workingCopiesForResource.size === 0) {\n            this.mapResourceToWorkingCopies.delete(workingCopy.resource);\n        }\n        if (workingCopy.isDirty()) {\n            this._onDidChangeDirty.fire(workingCopy);\n        }\n    }\n    has(resourceOrIdentifier) {\n        if (URI.isUri(resourceOrIdentifier)) {\n            return ( this.mapResourceToWorkingCopies.has(resourceOrIdentifier));\n        }\n        return this.mapResourceToWorkingCopies.get(resourceOrIdentifier.resource)?.has(resourceOrIdentifier.typeId) ?? false;\n    }\n    get(identifier) {\n        return this.mapResourceToWorkingCopies.get(identifier.resource)?.get(identifier.typeId);\n    }\n    getAll(resource) {\n        const workingCopies = this.mapResourceToWorkingCopies.get(resource);\n        if (!workingCopies) {\n            return undefined;\n        }\n        return Array.from(( workingCopies.values()));\n    }\n    get hasDirty() {\n        for (const workingCopy of this._workingCopies) {\n            if (workingCopy.isDirty()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    get dirtyCount() {\n        let totalDirtyCount = 0;\n        for (const workingCopy of this._workingCopies) {\n            if (workingCopy.isDirty()) {\n                totalDirtyCount++;\n            }\n        }\n        return totalDirtyCount;\n    }\n    get dirtyWorkingCopies() {\n        return this.workingCopies.filter(workingCopy => workingCopy.isDirty());\n    }\n    get modifiedCount() {\n        let totalModifiedCount = 0;\n        for (const workingCopy of this._workingCopies) {\n            if (workingCopy.isModified()) {\n                totalModifiedCount++;\n            }\n        }\n        return totalModifiedCount;\n    }\n    get modifiedWorkingCopies() {\n        return this.workingCopies.filter(workingCopy => workingCopy.isModified());\n    }\n    isDirty(resource, typeId) {\n        const workingCopies = this.mapResourceToWorkingCopies.get(resource);\n        if (workingCopies) {\n            if (typeof typeId === 'string') {\n                return workingCopies.get(typeId)?.isDirty() ?? false;\n            }\n            else {\n                for (const [, workingCopy] of workingCopies) {\n                    if (workingCopy.isDirty()) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}\nexport { IWorkingCopyService, WorkingCopyService };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { Disposable, toDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { LinkedList } from 'monaco-editor/esm/vs/base/common/linkedList.js';\nlet WorkingCopyFileOperationParticipant = class WorkingCopyFileOperationParticipant extends Disposable {\n    constructor(logService, configurationService) {\n        super();\n        this.logService = logService;\n        this.configurationService = configurationService;\n        this.participants = ( new LinkedList());\n    }\n    addFileOperationParticipant(participant) {\n        const remove = this.participants.push(participant);\n        return toDisposable(() => remove());\n    }\n    async participate(files, operation, undoInfo, token) {\n        const timeout = this.configurationService.getValue('files.participants.timeout');\n        if (typeof timeout !== 'number' || timeout <= 0) {\n            return;\n        }\n        for (const participant of this.participants) {\n            try {\n                await participant.participate(files, operation, undoInfo, timeout, token);\n            }\n            catch (err) {\n                this.logService.warn(err);\n            }\n        }\n    }\n    dispose() {\n        this.participants.clear();\n        super.dispose();\n    }\n};\nWorkingCopyFileOperationParticipant = ( __decorate([\n    ( __param(0, ILogService)),\n    ( __param(1, IConfigurationService))\n], WorkingCopyFileOperationParticipant));\nexport { WorkingCopyFileOperationParticipant };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { raceCancellation } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { CancellationTokenSource } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { IProgressService } from 'monaco-editor/esm/vs/platform/progress/common/progress.js';\nimport { Disposable, toDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { insert } from 'monaco-editor/esm/vs/base/common/arrays.js';\nlet StoredFileWorkingCopySaveParticipant = class StoredFileWorkingCopySaveParticipant extends Disposable {\n    get length() { return this.saveParticipants.length; }\n    constructor(progressService, logService) {\n        super();\n        this.progressService = progressService;\n        this.logService = logService;\n        this.saveParticipants = [];\n    }\n    addSaveParticipant(participant) {\n        const remove = insert(this.saveParticipants, participant);\n        return toDisposable(() => remove());\n    }\n    participate(workingCopy, context, token) {\n        const cts = ( new CancellationTokenSource(token));\n        return this.progressService.withProgress({\n            title: ( localize('saveParticipants', \"Saving '{0}'\", workingCopy.name)),\n            location: 15 ,\n            cancellable: true,\n            delay: workingCopy.isDirty() ? 3000 : 5000\n        }, async (progress) => {\n            workingCopy.model?.pushStackElement();\n            for (const saveParticipant of this.saveParticipants) {\n                if (cts.token.isCancellationRequested || workingCopy.isDisposed()) {\n                    break;\n                }\n                try {\n                    const promise = saveParticipant.participate(workingCopy, context, progress, cts.token);\n                    await raceCancellation(promise, cts.token);\n                }\n                catch (err) {\n                    this.logService.warn(err);\n                }\n            }\n            workingCopy.model?.pushStackElement();\n        }, () => {\n            cts.dispose(true);\n        });\n    }\n    dispose() {\n        this.saveParticipants.splice(0, this.saveParticipants.length);\n        super.dispose();\n    }\n};\nStoredFileWorkingCopySaveParticipant = ( __decorate([\n    ( __param(0, IProgressService)),\n    ( __param(1, ILogService))\n], StoredFileWorkingCopySaveParticipant));\nexport { StoredFileWorkingCopySaveParticipant };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { isValidBasename } from 'monaco-editor/esm/vs/base/common/extpath.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { win32, posix } from 'monaco-editor/esm/vs/base/common/path.js';\nimport { OS } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { basename } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { getVirtualWorkspaceScheme } from '../../../../platform/workspace/common/virtualWorkspace.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { IWorkbenchEnvironmentService } from '../../environment/common/environmentService.js';\nimport { IRemoteAgentService } from '../../remote/common/remoteAgentService.js';\nvar AbstractPathService_1;\nconst IPathService = ( createDecorator('pathService'));\nlet AbstractPathService = AbstractPathService_1 = class AbstractPathService {\n    constructor(localUserHome, remoteAgentService, environmentService, contextService) {\n        this.localUserHome = localUserHome;\n        this.remoteAgentService = remoteAgentService;\n        this.environmentService = environmentService;\n        this.contextService = contextService;\n        this.resolveOS = (async () => {\n            const env = await this.remoteAgentService.getEnvironment();\n            return env?.os || OS;\n        })();\n        this.resolveUserHome = (async () => {\n            const env = await this.remoteAgentService.getEnvironment();\n            const userHome = this.maybeUnresolvedUserHome = env?.userHome ?? localUserHome;\n            return userHome;\n        })();\n    }\n    hasValidBasename(resource, arg2, basename) {\n        if (typeof arg2 === 'string' || typeof arg2 === 'undefined') {\n            return this.resolveOS.then(os => this.doHasValidBasename(resource, os, arg2));\n        }\n        return this.doHasValidBasename(resource, arg2, basename);\n    }\n    doHasValidBasename(resource, os, name) {\n        if (resource.scheme === Schemas.file || resource.scheme === Schemas.vscodeRemote) {\n            return isValidBasename(name ?? basename(resource), os === 1 );\n        }\n        return true;\n    }\n    get defaultUriScheme() {\n        return AbstractPathService_1.findDefaultUriScheme(this.environmentService, this.contextService);\n    }\n    static findDefaultUriScheme(environmentService, contextService) {\n        if (environmentService.remoteAuthority) {\n            return Schemas.vscodeRemote;\n        }\n        const virtualWorkspace = getVirtualWorkspaceScheme(contextService.getWorkspace());\n        if (virtualWorkspace) {\n            return virtualWorkspace;\n        }\n        const firstFolder = contextService.getWorkspace().folders[0];\n        if (firstFolder) {\n            return firstFolder.uri.scheme;\n        }\n        const configuration = contextService.getWorkspace().configuration;\n        if (configuration) {\n            return configuration.scheme;\n        }\n        return Schemas.file;\n    }\n    userHome(options) {\n        return options?.preferLocal ? this.localUserHome : this.resolveUserHome;\n    }\n    get resolvedUserHome() {\n        return this.maybeUnresolvedUserHome;\n    }\n    get path() {\n        return this.resolveOS.then(os => {\n            return os === 1  ?\n                win32 :\n                posix;\n        });\n    }\n    async fileURI(_path) {\n        let authority = '';\n        const os = await this.resolveOS;\n        if (os === 1 ) {\n            _path = _path.replace(/\\\\/g, '/');\n        }\n        if (_path[0] === '/' && _path[1] === '/') {\n            const idx = _path.indexOf('/', 2);\n            if (idx === -1) {\n                authority = _path.substring(2);\n                _path = '/';\n            }\n            else {\n                authority = _path.substring(2, idx);\n                _path = _path.substring(idx) || '/';\n            }\n        }\n        return ( URI.from({\n            scheme: Schemas.file,\n            authority,\n            path: _path,\n            query: '',\n            fragment: ''\n        }));\n    }\n};\nAbstractPathService = AbstractPathService_1 = ( __decorate([\n    ( __param(1, IRemoteAgentService)),\n    ( __param(2, IWorkbenchEnvironmentService)),\n    ( __param(3, IWorkspaceContextService))\n], AbstractPathService));\nexport { AbstractPathService, IPathService };\n", "import { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nfunction isVirtualResource(resource) {\n    return resource.scheme !== Schemas.file && resource.scheme !== Schemas.vscodeRemote;\n}\nfunction getVirtualWorkspaceLocation(workspace) {\n    if (workspace.folders.length) {\n        return workspace.folders.every(f => isVirtualResource(f.uri)) ? workspace.folders[0].uri : undefined;\n    }\n    else if (workspace.configuration && isVirtualResource(workspace.configuration)) {\n        return workspace.configuration;\n    }\n    return undefined;\n}\nfunction getVirtualWorkspaceScheme(workspace) {\n    return getVirtualWorkspaceLocation(workspace)?.scheme;\n}\nfunction isVirtualWorkspace(workspace) {\n    return getVirtualWorkspaceLocation(workspace) !== undefined;\n}\nexport { getVirtualWorkspaceLocation, getVirtualWorkspaceScheme, isVirtualResource, isVirtualWorkspace };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ILanguageStatusService = ( createDecorator('ILanguageStatusService'));\nexport { ILanguageStatusService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IHostService = ( createDecorator('hostService'));\nexport { IHostService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ILanguageDetectionService = ( createDecorator('ILanguageDetectionService'));\nconst LanguageDetectionLanguageEventSource = 'languageDetection';\nconst AutomaticLanguageDetectionLikelyWrongId = 'automaticlanguagedetection.likelywrong';\nconst LanguageDetectionStatsId = 'automaticlanguagedetection.stats';\nexport { AutomaticLanguageDetectionLikelyWrongId, ILanguageDetectionService, LanguageDetectionLanguageEventSource, LanguageDetectionStatsId };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IKeyboardLayoutService = ( createDecorator('keyboardLayoutService'));\nfunction getKeyboardLayoutId(layout) {\n    if (layout.name) {\n        return layout.name;\n    }\n    if (layout.id) {\n        return layout.id;\n    }\n    return layout.layout;\n}\nexport { IKeyboardLayoutService, getKeyboardLayoutId };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { createDecorator, IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Extensions } from '../../../common/contributions.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { isWeb } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { IExtensionService } from '../../extensions/common/extensions.js';\nimport { mark } from 'monaco-editor/esm/vs/base/common/performance.js';\nconst IUserDataInitializationService = ( createDecorator('IUserDataInitializationService'));\nlet InitializeOtherResourcesContribution = class InitializeOtherResourcesContribution {\n    constructor(userDataInitializeService, instantiationService, extensionService) {\n        extensionService.whenInstalledExtensionsRegistered().then(() => this.initializeOtherResource(userDataInitializeService, instantiationService));\n    }\n    async initializeOtherResource(userDataInitializeService, instantiationService) {\n        if (await userDataInitializeService.requiresInitialization()) {\n            mark('code/willInitOtherUserData');\n            await userDataInitializeService.initializeOtherResources(instantiationService);\n            mark('code/didInitOtherUserData');\n        }\n    }\n};\nInitializeOtherResourcesContribution = ( __decorate([\n    ( __param(0, IUserDataInitializationService)),\n    ( __param(1, IInstantiationService)),\n    ( __param(2, IExtensionService))\n], InitializeOtherResourcesContribution));\nif (isWeb) {\n    const workbenchRegistry = ( Registry.as(Extensions.Workbench));\n    workbenchRegistry.registerWorkbenchContribution(InitializeOtherResourcesContribution, 3 );\n}\nexport { IUserDataInitializationService };\n", "import { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { addMatchMediaChangeListener } from 'monaco-editor/esm/vs/base/browser/browser.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nclass BrowserHostColorSchemeService extends Disposable {\n    constructor() {\n        super();\n        this._onDidSchemeChangeEvent = this._register(( new Emitter()));\n        this.registerListeners();\n    }\n    registerListeners() {\n        addMatchMediaChangeListener('(prefers-color-scheme: dark)', () => {\n            this._onDidSchemeChangeEvent.fire();\n        });\n        addMatchMediaChangeListener('(forced-colors: active)', () => {\n            this._onDidSchemeChangeEvent.fire();\n        });\n    }\n    get onDidChangeColorScheme() {\n        return this._onDidSchemeChangeEvent.event;\n    }\n    get dark() {\n        if (window.matchMedia(`(prefers-color-scheme: light)`).matches) {\n            return false;\n        }\n        else if (window.matchMedia(`(prefers-color-scheme: dark)`).matches) {\n            return true;\n        }\n        return false;\n    }\n    get highContrast() {\n        if (window.matchMedia(`(forced-colors: active)`).matches) {\n            return true;\n        }\n        return false;\n    }\n}\nexport { BrowserHostColorSchemeService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IHostColorSchemeService = ( createDecorator('hostColorSchemeService'));\nexport { IHostColorSchemeService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { DEFAULT_EDITOR_ASSOCIATION } from '../../../common/editor.js';\nvar SettingValueType;\n( (function(SettingValueType) {\n    SettingValueType[\"Null\"] = \"null\";\n    SettingValueType[\"Enum\"] = \"enum\";\n    SettingValueType[\"String\"] = \"string\";\n    SettingValueType[\"MultilineString\"] = \"multiline-string\";\n    SettingValueType[\"Integer\"] = \"integer\";\n    SettingValueType[\"Number\"] = \"number\";\n    SettingValueType[\"Boolean\"] = \"boolean\";\n    SettingValueType[\"Array\"] = \"array\";\n    SettingValueType[\"Exclude\"] = \"exclude\";\n    SettingValueType[\"Include\"] = \"include\";\n    SettingValueType[\"Complex\"] = \"complex\";\n    SettingValueType[\"NullableInteger\"] = \"nullable-integer\";\n    SettingValueType[\"NullableNumber\"] = \"nullable-number\";\n    SettingValueType[\"Object\"] = \"object\";\n    SettingValueType[\"BooleanObject\"] = \"boolean-object\";\n    SettingValueType[\"LanguageTag\"] = \"language-tag\";\n    SettingValueType[\"ExtensionToggle\"] = \"extension-toggle\";\n})(SettingValueType || (SettingValueType = {})));\nvar SettingMatchType;\n( (function(SettingMatchType) {\n    SettingMatchType[SettingMatchType[\"None\"] = 0] = \"None\";\n    SettingMatchType[SettingMatchType[\"RemoteMatch\"] = 1] = \"RemoteMatch\";\n    SettingMatchType[SettingMatchType[\"WholeWordMatch\"] = 2] = \"WholeWordMatch\";\n    SettingMatchType[SettingMatchType[\"KeyMatch\"] = 4] = \"KeyMatch\";\n})(SettingMatchType || (SettingMatchType = {})));\nfunction validateSettingsEditorOptions(options) {\n    return {\n        ...options,\n        override: DEFAULT_EDITOR_ASSOCIATION.id,\n        pinned: true\n    };\n}\nconst IPreferencesService = ( createDecorator('preferencesService'));\nconst DEFINE_KEYBINDING_EDITOR_CONTRIB_ID = 'editor.contrib.defineKeybinding';\nconst FOLDER_SETTINGS_PATH = '.vscode/settings.json';\nconst DEFAULT_SETTINGS_EDITOR_SETTING = 'workbench.settings.openDefaultSettings';\nconst USE_SPLIT_JSON_SETTING = 'workbench.settings.useSplitJSON';\nexport { DEFAULT_SETTINGS_EDITOR_SETTING, DEFINE_KEYBINDING_EDITOR_CONTRIB_ID, FOLDER_SETTINGS_PATH, IPreferencesService, SettingMatchType, SettingValueType, USE_SPLIT_JSON_SETTING, validateSettingsEditorOptions };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { Promises } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { equals } from 'monaco-editor/esm/vs/base/common/objects.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { IUserDataProfilesService } from 'monaco-editor/esm/vs/platform/userDataProfile/common/userDataProfile.js';\nimport { defaultUserDataProfileIcon } from './userDataProfile.js';\nlet UserDataProfileService = class UserDataProfileService extends Disposable {\n    get currentProfile() { return this._currentProfile; }\n    constructor(currentProfile, userDataProfilesService) {\n        super();\n        this._onDidChangeCurrentProfile = this._register(( new Emitter()));\n        this.onDidChangeCurrentProfile = this._onDidChangeCurrentProfile.event;\n        this._currentProfile = currentProfile;\n    }\n    async updateCurrentProfile(userDataProfile) {\n        if (equals(this._currentProfile, userDataProfile)) {\n            return;\n        }\n        const previous = this._currentProfile;\n        this._currentProfile = userDataProfile;\n        const joiners = [];\n        this._onDidChangeCurrentProfile.fire({\n            previous,\n            profile: userDataProfile,\n            join(promise) {\n                joiners.push(promise);\n            }\n        });\n        await Promises.settled(joiners);\n    }\n    getShortName(profile) {\n        if (!profile.isDefault && profile.shortName && ThemeIcon.fromId(profile.shortName)) {\n            return profile.shortName;\n        }\n        return `$(${defaultUserDataProfileIcon.id})`;\n    }\n};\nUserDataProfileService = ( __decorate([\n    ( __param(1, IUserDataProfilesService))\n], UserDataProfileService));\nexport { UserDataProfileService };\n", "import { Keybinding, KeyCodeChord } from 'monaco-editor/esm/vs/base/common/keybindings.js';\nimport { USLayoutResolvedKeybinding } from 'monaco-editor/esm/vs/platform/keybinding/common/usLayoutResolvedKeybinding.js';\nclass FallbackKeyboardMapper {\n    constructor(_mapAltGrToCtrlAlt, _OS) {\n        this._mapAltGrToCtrlAlt = _mapAltGrToCtrlAlt;\n        this._OS = _OS;\n    }\n    dumpDebugInfo() {\n        return 'FallbackKeyboardMapper dispatching on keyCode';\n    }\n    resolveKeyboardEvent(keyboardEvent) {\n        const ctrlKey = keyboardEvent.ctrlKey || (this._mapAltGrToCtrlAlt && keyboardEvent.altGraphKey);\n        const altKey = keyboardEvent.altKey || (this._mapAltGrToCtrlAlt && keyboardEvent.altGraphKey);\n        const chord = ( new KeyCodeChord(\n            ctrlKey,\n            keyboardEvent.shiftKey,\n            altKey,\n            keyboardEvent.metaKey,\n            keyboardEvent.keyCode\n        ));\n        const result = this.resolveKeybinding(( new Keybinding([chord])));\n        return result[0];\n    }\n    resolveKeybinding(keybinding) {\n        return USLayoutResolvedKeybinding.resolveKeybinding(keybinding, this._OS);\n    }\n}\nexport { FallbackKeyboardMapper };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IActivityService = ( createDecorator('activityService'));\nclass BaseBadge {\n    constructor(descriptorFn) {\n        this.descriptorFn = descriptorFn;\n        this.descriptorFn = descriptorFn;\n    }\n    getDescription() {\n        return this.descriptorFn(null);\n    }\n}\nclass NumberBadge extends BaseBadge {\n    constructor(number, descriptorFn) {\n        super(descriptorFn);\n        this.number = number;\n        this.number = number;\n    }\n    getDescription() {\n        return this.descriptorFn(this.number);\n    }\n}\nclass TextBadge extends BaseBadge {\n    constructor(text, descriptorFn) {\n        super(descriptorFn);\n        this.text = text;\n    }\n}\nclass IconBadge extends BaseBadge {\n    constructor(icon, descriptorFn) {\n        super(descriptorFn);\n        this.icon = icon;\n    }\n}\nclass ProgressBadge extends BaseBadge {\n}\nexport { IActivityService, IconBadge, NumberBadge, ProgressBadge, TextBadge };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IExtensionHostDebugService = ( createDecorator('extensionHostDebugService'));\nexport { IExtensionHostDebugService };\n", "import { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Disposable, toDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { getOrSet } from 'monaco-editor/esm/vs/base/common/map.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { flatten } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { SetMap } from 'monaco-editor/esm/vs/base/common/collections.js';\nimport { mixin } from 'monaco-editor/esm/vs/base/common/objects.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { registerIcon } from 'monaco-editor/esm/vs/platform/theme/common/iconRegistry.js';\nconst defaultViewIcon = registerIcon('default-view-icon', Codicon.window, ( localize('defaultViewIcon', 'Default view icon.')));\nvar Extensions;\n( (function(Extensions) {\n    Extensions.ViewContainersRegistry = 'workbench.registry.view.containers';\n    Extensions.ViewsRegistry = 'workbench.registry.view';\n})(Extensions || (Extensions = {})));\nvar ViewContainerLocation;\n( (function(ViewContainerLocation) {\n    ViewContainerLocation[ViewContainerLocation[\"Sidebar\"] = 0] = \"Sidebar\";\n    ViewContainerLocation[ViewContainerLocation[\"Panel\"] = 1] = \"Panel\";\n    ViewContainerLocation[ViewContainerLocation[\"AuxiliaryBar\"] = 2] = \"AuxiliaryBar\";\n})(ViewContainerLocation || (ViewContainerLocation = {})));\nconst ViewContainerLocations = [0 , 1 , 2 ];\nfunction ViewContainerLocationToString(viewContainerLocation) {\n    switch (viewContainerLocation) {\n        case 0 : return 'sidebar';\n        case 1 : return 'panel';\n        case 2 : return 'auxiliarybar';\n    }\n}\nclass ViewContainersRegistryImpl extends Disposable {\n    constructor() {\n        super(...arguments);\n        this._onDidRegister = this._register(( new Emitter()));\n        this.onDidRegister = this._onDidRegister.event;\n        this._onDidDeregister = this._register(( new Emitter()));\n        this.onDidDeregister = this._onDidDeregister.event;\n        this.viewContainers = ( new Map());\n        this.defaultViewContainers = [];\n    }\n    get all() {\n        return flatten([...( this.viewContainers.values())]);\n    }\n    registerViewContainer(viewContainerDescriptor, viewContainerLocation, options) {\n        const existing = this.get(viewContainerDescriptor.id);\n        if (existing) {\n            return existing;\n        }\n        const viewContainer = viewContainerDescriptor;\n        viewContainer.openCommandActionDescriptor = options?.doNotRegisterOpenCommand ? undefined : (viewContainer.openCommandActionDescriptor ?? { id: viewContainer.id });\n        const viewContainers = getOrSet(this.viewContainers, viewContainerLocation, []);\n        viewContainers.push(viewContainer);\n        if (options?.isDefault) {\n            this.defaultViewContainers.push(viewContainer);\n        }\n        this._onDidRegister.fire({ viewContainer, viewContainerLocation });\n        return viewContainer;\n    }\n    deregisterViewContainer(viewContainer) {\n        for (const viewContainerLocation of ( this.viewContainers.keys())) {\n            const viewContainers = this.viewContainers.get(viewContainerLocation);\n            const index = viewContainers?.indexOf(viewContainer);\n            if (index !== -1) {\n                viewContainers?.splice(index, 1);\n                if (viewContainers.length === 0) {\n                    this.viewContainers.delete(viewContainerLocation);\n                }\n                this._onDidDeregister.fire({ viewContainer, viewContainerLocation });\n                return;\n            }\n        }\n    }\n    get(id) {\n        return this.all.filter(viewContainer => viewContainer.id === id)[0];\n    }\n    getViewContainers(location) {\n        return [...(this.viewContainers.get(location) || [])];\n    }\n    getViewContainerLocation(container) {\n        return [...( this.viewContainers.keys())].filter(location => this.getViewContainers(location).filter(viewContainer => viewContainer?.id === container.id).length > 0)[0];\n    }\n    getDefaultViewContainer(location) {\n        return this.defaultViewContainers.find(viewContainer => this.getViewContainerLocation(viewContainer) === location);\n    }\n}\nRegistry.add(Extensions.ViewContainersRegistry, ( new ViewContainersRegistryImpl()));\nvar ViewContentGroups;\n( (function(ViewContentGroups) {\n    ViewContentGroups[\"Open\"] = \"2_open\";\n    ViewContentGroups[\"Debug\"] = \"4_debug\";\n    ViewContentGroups[\"SCM\"] = \"5_scm\";\n    ViewContentGroups[\"More\"] = \"9_more\";\n})(ViewContentGroups || (ViewContentGroups = {})));\nfunction compareViewContentDescriptors(a, b) {\n    const aGroup = a.group ?? ViewContentGroups.More;\n    const bGroup = b.group ?? ViewContentGroups.More;\n    if (aGroup !== bGroup) {\n        return aGroup.localeCompare(bGroup);\n    }\n    return (a.order ?? 5) - (b.order ?? 5);\n}\nclass ViewsRegistry extends Disposable {\n    constructor() {\n        super(...arguments);\n        this._onViewsRegistered = this._register(( new Emitter()));\n        this.onViewsRegistered = this._onViewsRegistered.event;\n        this._onViewsDeregistered = this._register(( new Emitter()));\n        this.onViewsDeregistered = this._onViewsDeregistered.event;\n        this._onDidChangeContainer = this._register(( new Emitter()));\n        this.onDidChangeContainer = this._onDidChangeContainer.event;\n        this._onDidChangeViewWelcomeContent = this._register(( new Emitter()));\n        this.onDidChangeViewWelcomeContent = this._onDidChangeViewWelcomeContent.event;\n        this._viewContainers = [];\n        this._views = ( new Map());\n        this._viewWelcomeContents = ( new SetMap());\n    }\n    registerViews(views, viewContainer) {\n        this.registerViews2([{ views, viewContainer }]);\n    }\n    registerViews2(views) {\n        views.forEach(({ views, viewContainer }) => this.addViews(views, viewContainer));\n        this._onViewsRegistered.fire(views);\n    }\n    deregisterViews(viewDescriptors, viewContainer) {\n        const views = this.removeViews(viewDescriptors, viewContainer);\n        if (views.length) {\n            this._onViewsDeregistered.fire({ views, viewContainer });\n        }\n    }\n    moveViews(viewsToMove, viewContainer) {\n        for (const container of ( this._views.keys())) {\n            if (container !== viewContainer) {\n                const views = this.removeViews(viewsToMove, container);\n                if (views.length) {\n                    this.addViews(views, viewContainer);\n                    this._onDidChangeContainer.fire({ views, from: container, to: viewContainer });\n                }\n            }\n        }\n    }\n    getViews(loc) {\n        return this._views.get(loc) || [];\n    }\n    getView(id) {\n        for (const viewContainer of this._viewContainers) {\n            const viewDescriptor = (this._views.get(viewContainer) || []).filter(v => v.id === id)[0];\n            if (viewDescriptor) {\n                return viewDescriptor;\n            }\n        }\n        return null;\n    }\n    getViewContainer(viewId) {\n        for (const viewContainer of this._viewContainers) {\n            const viewDescriptor = (this._views.get(viewContainer) || []).filter(v => v.id === viewId)[0];\n            if (viewDescriptor) {\n                return viewContainer;\n            }\n        }\n        return null;\n    }\n    registerViewWelcomeContent(id, viewContent) {\n        this._viewWelcomeContents.add(id, viewContent);\n        this._onDidChangeViewWelcomeContent.fire(id);\n        return toDisposable(() => {\n            this._viewWelcomeContents.delete(id, viewContent);\n            this._onDidChangeViewWelcomeContent.fire(id);\n        });\n    }\n    registerViewWelcomeContent2(id, viewContentMap) {\n        const disposables = ( new Map());\n        for (const [key, content] of viewContentMap) {\n            this._viewWelcomeContents.add(id, content);\n            disposables.set(key, toDisposable(() => {\n                this._viewWelcomeContents.delete(id, content);\n                this._onDidChangeViewWelcomeContent.fire(id);\n            }));\n        }\n        this._onDidChangeViewWelcomeContent.fire(id);\n        return disposables;\n    }\n    getViewWelcomeContent(id) {\n        const result = [];\n        this._viewWelcomeContents.forEach(id, descriptor => result.push(descriptor));\n        return result.sort(compareViewContentDescriptors);\n    }\n    addViews(viewDescriptors, viewContainer) {\n        let views = this._views.get(viewContainer);\n        if (!views) {\n            views = [];\n            this._views.set(viewContainer, views);\n            this._viewContainers.push(viewContainer);\n        }\n        for (const viewDescriptor of viewDescriptors) {\n            if (this.getView(viewDescriptor.id) !== null) {\n                throw new Error(localize('duplicateId', \"A view with id '{0}' is already registered\", viewDescriptor.id));\n            }\n            views.push(viewDescriptor);\n        }\n    }\n    removeViews(viewDescriptors, viewContainer) {\n        const views = this._views.get(viewContainer);\n        if (!views) {\n            return [];\n        }\n        const viewsToDeregister = [];\n        const remaningViews = [];\n        for (const view of views) {\n            if (!viewDescriptors.includes(view)) {\n                remaningViews.push(view);\n            }\n            else {\n                viewsToDeregister.push(view);\n            }\n        }\n        if (viewsToDeregister.length) {\n            if (remaningViews.length) {\n                this._views.set(viewContainer, remaningViews);\n            }\n            else {\n                this._views.delete(viewContainer);\n                this._viewContainers.splice(this._viewContainers.indexOf(viewContainer), 1);\n            }\n        }\n        return viewsToDeregister;\n    }\n}\nRegistry.add(Extensions.ViewsRegistry, ( new ViewsRegistry()));\nconst IViewsService = ( createDecorator('viewsService'));\nconst IViewDescriptorService = ( createDecorator('viewDescriptorService'));\nvar ViewVisibilityState;\n( (function(ViewVisibilityState) {\n    ViewVisibilityState[ViewVisibilityState[\"Default\"] = 0] = \"Default\";\n    ViewVisibilityState[ViewVisibilityState[\"Expand\"] = 1] = \"Expand\";\n})(ViewVisibilityState || (ViewVisibilityState = {})));\nvar TreeItemCollapsibleState;\n( (function(TreeItemCollapsibleState) {\n    TreeItemCollapsibleState[TreeItemCollapsibleState[\"None\"] = 0] = \"None\";\n    TreeItemCollapsibleState[TreeItemCollapsibleState[\"Collapsed\"] = 1] = \"Collapsed\";\n    TreeItemCollapsibleState[TreeItemCollapsibleState[\"Expanded\"] = 2] = \"Expanded\";\n})(TreeItemCollapsibleState || (TreeItemCollapsibleState = {})));\nclass ResolvableTreeItem {\n    constructor(treeItem, resolve) {\n        this.resolved = false;\n        this._hasResolve = false;\n        mixin(this, treeItem);\n        this._hasResolve = !!resolve;\n        this.resolve = async (token) => {\n            if (resolve && !this.resolved) {\n                const resolvedItem = await resolve(token);\n                if (resolvedItem) {\n                    this.tooltip = this.tooltip ?? resolvedItem.tooltip;\n                    this.command = this.command ?? resolvedItem.command;\n                }\n            }\n            if (!token.isCancellationRequested) {\n                this.resolved = true;\n            }\n        };\n    }\n    get hasResolve() {\n        return this._hasResolve;\n    }\n    resetResolve() {\n        this.resolved = false;\n    }\n    asTreeItem() {\n        return {\n            handle: this.handle,\n            parentHandle: this.parentHandle,\n            collapsibleState: this.collapsibleState,\n            label: this.label,\n            description: this.description,\n            icon: this.icon,\n            iconDark: this.iconDark,\n            themeIcon: this.themeIcon,\n            resourceUri: this.resourceUri,\n            tooltip: this.tooltip,\n            contextValue: this.contextValue,\n            command: this.command,\n            children: this.children,\n            accessibilityInformation: this.accessibilityInformation\n        };\n    }\n}\nclass NoTreeViewError extends Error {\n    constructor(treeViewId) {\n        super(( localize(\n            'treeView.notRegistered',\n            'No tree view with id \\'{0}\\' registered.',\n            treeViewId\n        )));\n        this.name = 'NoTreeViewError';\n    }\n    static is(err) {\n        return err.name === 'NoTreeViewError';\n    }\n}\nexport { Extensions, IViewDescriptorService, IViewsService, NoTreeViewError, ResolvableTreeItem, TreeItemCollapsibleState, ViewContainerLocation, ViewContainerLocationToString, ViewContainerLocations, ViewContentGroups, ViewVisibilityState, defaultViewIcon };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IHistoryService = ( createDecorator('historyService'));\nvar GoFilter;\n( (function(GoFilter) {\n    GoFilter[GoFilter[\"NONE\"] = 0] = \"NONE\";\n    GoFilter[GoFilter[\"EDITS\"] = 1] = \"EDITS\";\n    GoFilter[GoFilter[\"NAVIGATION\"] = 2] = \"NAVIGATION\";\n})(GoFilter || (GoFilter = {})));\nvar GoScope;\n( (function(GoScope) {\n    GoScope[GoScope[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    GoScope[GoScope[\"EDITOR_GROUP\"] = 1] = \"EDITOR_GROUP\";\n    GoScope[GoScope[\"EDITOR\"] = 2] = \"EDITOR\";\n})(GoScope || (GoScope = {})));\nexport { GoFilter, GoScope, IHistoryService };\n", "import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ContextKeyExpr, RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nconst CustomExecutionSupportedContext = ( new RawContextKey('customExecutionSupported', false, ( nls.localize(\n 'tasks.customExecutionSupported',\n \"Whether CustomExecution tasks are supported. Consider using in the when clause of a \\'taskDefinition\\' contribution.\"\n))));\nconst ShellExecutionSupportedContext = ( new RawContextKey('shellExecutionSupported', false, ( nls.localize(\n 'tasks.shellExecutionSupported',\n \"Whether ShellExecution tasks are supported. Consider using in the when clause of a \\'taskDefinition\\' contribution.\"\n))));\nconst ProcessExecutionSupportedContext = ( new RawContextKey('processExecutionSupported', false, ( nls.localize(\n 'tasks.processExecutionSupported',\n \"Whether ProcessExecution tasks are supported. Consider using in the when clause of a \\'taskDefinition\\' contribution.\"\n))));\nconst TaskExecutionSupportedContext = ( ContextKeyExpr.or(( ContextKeyExpr.and(ShellExecutionSupportedContext, ProcessExecutionSupportedContext)), CustomExecutionSupportedContext));\nconst ITaskService = ( createDecorator('taskService'));\nexport { CustomExecutionSupportedContext, ITaskService, ProcessExecutionSupportedContext, ShellExecutionSupportedContext, TaskExecutionSupportedContext };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IConfigurationResolverService = ( createDecorator('configurationResolverService'));\nvar VariableKind;\n( (function(VariableKind) {\n    VariableKind[\"Unknown\"] = \"unknown\";\n    VariableKind[\"Env\"] = \"env\";\n    VariableKind[\"Config\"] = \"config\";\n    VariableKind[\"Command\"] = \"command\";\n    VariableKind[\"Input\"] = \"input\";\n    VariableKind[\"ExtensionInstallFolder\"] = \"extensionInstallFolder\";\n    VariableKind[\"WorkspaceFolder\"] = \"workspaceFolder\";\n    VariableKind[\"Cwd\"] = \"cwd\";\n    VariableKind[\"WorkspaceFolderBasename\"] = \"workspaceFolderBasename\";\n    VariableKind[\"UserHome\"] = \"userHome\";\n    VariableKind[\"LineNumber\"] = \"lineNumber\";\n    VariableKind[\"SelectedText\"] = \"selectedText\";\n    VariableKind[\"File\"] = \"file\";\n    VariableKind[\"FileWorkspaceFolder\"] = \"fileWorkspaceFolder\";\n    VariableKind[\"RelativeFile\"] = \"relativeFile\";\n    VariableKind[\"RelativeFileDirname\"] = \"relativeFileDirname\";\n    VariableKind[\"FileDirname\"] = \"fileDirname\";\n    VariableKind[\"FileExtname\"] = \"fileExtname\";\n    VariableKind[\"FileBasename\"] = \"fileBasename\";\n    VariableKind[\"FileBasenameNoExtension\"] = \"fileBasenameNoExtension\";\n    VariableKind[\"FileDirnameBasename\"] = \"fileDirnameBasename\";\n    VariableKind[\"ExecPath\"] = \"execPath\";\n    VariableKind[\"ExecInstallFolder\"] = \"execInstallFolder\";\n    VariableKind[\"PathSeparator\"] = \"pathSeparator\";\n})(VariableKind || (VariableKind = {})));\nclass VariableError extends Error {\n    constructor(variable, message) {\n        super(message);\n        this.variable = variable;\n    }\n}\nexport { IConfigurationResolverService, VariableError, VariableKind };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { IRemoteAgentService } from '../../remote/common/remoteAgentService.js';\nimport { AbstractPathService } from '../common/pathService.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { IWorkbenchEnvironmentService } from '../../environment/common/environmentService.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { firstOrDefault } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { dirname } from 'monaco-editor/esm/vs/base/common/resources.js';\nlet BrowserPathService = class BrowserPathService extends AbstractPathService {\n    constructor(remoteAgentService, environmentService, contextService) {\n        super(guessLocalUserHome(environmentService, contextService), remoteAgentService, environmentService, contextService);\n    }\n};\nBrowserPathService = ( __decorate([\n    ( __param(0, IRemoteAgentService)),\n    ( __param(1, IWorkbenchEnvironmentService)),\n    ( __param(2, IWorkspaceContextService))\n], BrowserPathService));\nfunction guessLocalUserHome(environmentService, contextService) {\n    const workspace = contextService.getWorkspace();\n    const firstFolder = firstOrDefault(workspace.folders);\n    if (firstFolder) {\n        return firstFolder.uri;\n    }\n    if (workspace.configuration) {\n        return dirname(workspace.configuration);\n    }\n    return ( URI.from({\n        scheme: AbstractPathService.findDefaultUriScheme(environmentService, contextService),\n        authority: environmentService.remoteAuthority,\n        path: '/'\n    }));\n}\nexport { BrowserPathService };\n", "import { mapArrayOrNot } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport * as glob from 'monaco-editor/esm/vs/base/common/glob.js';\nimport * as objects from 'monaco-editor/esm/vs/base/common/objects.js';\nimport * as extpath from 'monaco-editor/esm/vs/base/common/extpath.js';\nimport { getNLines } from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport * as path from 'monaco-editor/esm/vs/base/common/path.js';\nimport { isCancellationError } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { isThenable } from 'monaco-editor/esm/vs/base/common/async.js';\nconst VIEWLET_ID = 'workbench.view.search';\nconst VIEW_ID = 'workbench.view.search';\nconst SEARCH_EXCLUDE_CONFIG = 'search.exclude';\nconst SEARCH_ELIDED_PREFIX = '⟪ ';\nconst SEARCH_ELIDED_SUFFIX = ' characters skipped ⟫';\nconst SEARCH_ELIDED_MIN_LEN = (SEARCH_ELIDED_PREFIX.length + SEARCH_ELIDED_SUFFIX.length + 5) * 2;\nconst ISearchService = ( createDecorator('searchService'));\nfunction resultIsMatch(result) {\n    return !!result.preview;\n}\nfunction isFileMatch(p) {\n    return !!p.resource;\n}\nfunction isProgressMessage(p) {\n    return !!p.message;\n}\nclass FileMatch {\n    constructor(resource) {\n        this.resource = resource;\n        this.results = [];\n    }\n}\nclass TextSearchMatch {\n    constructor(text, range, previewOptions, webviewIndex) {\n        this.ranges = range;\n        this.webviewIndex = webviewIndex;\n        const ranges = Array.isArray(range) ? range : [range];\n        if (previewOptions && previewOptions.matchLines === 1 && isSingleLineRangeList(ranges)) {\n            text = getNLines(text, previewOptions.matchLines);\n            let result = '';\n            let shift = 0;\n            let lastEnd = 0;\n            const leadingChars = Math.floor(previewOptions.charsPerLine / 5);\n            const matches = [];\n            for (const range of ranges) {\n                const previewStart = Math.max(range.startColumn - leadingChars, 0);\n                const previewEnd = range.startColumn + previewOptions.charsPerLine;\n                if (previewStart > lastEnd + leadingChars + SEARCH_ELIDED_MIN_LEN) {\n                    const elision = SEARCH_ELIDED_PREFIX + (previewStart - lastEnd) + SEARCH_ELIDED_SUFFIX;\n                    result += elision + text.slice(previewStart, previewEnd);\n                    shift += previewStart - (lastEnd + elision.length);\n                }\n                else {\n                    result += text.slice(lastEnd, previewEnd);\n                }\n                matches.push(( new OneLineRange(0, range.startColumn - shift, range.endColumn - shift)));\n                lastEnd = previewEnd;\n            }\n            this.preview = { text: result, matches: Array.isArray(this.ranges) ? matches : matches[0] };\n        }\n        else {\n            const firstMatchLine = Array.isArray(range) ? range[0].startLineNumber : range.startLineNumber;\n            this.preview = {\n                text,\n                matches: mapArrayOrNot(range, r => ( new SearchRange(\n                    r.startLineNumber - firstMatchLine,\n                    r.startColumn,\n                    r.endLineNumber - firstMatchLine,\n                    r.endColumn\n                )))\n            };\n        }\n    }\n}\nfunction isSingleLineRangeList(ranges) {\n    const line = ranges[0].startLineNumber;\n    for (const r of ranges) {\n        if (r.startLineNumber !== line || r.endLineNumber !== line) {\n            return false;\n        }\n    }\n    return true;\n}\nclass SearchRange {\n    constructor(startLineNumber, startColumn, endLineNumber, endColumn) {\n        this.startLineNumber = startLineNumber;\n        this.startColumn = startColumn;\n        this.endLineNumber = endLineNumber;\n        this.endColumn = endColumn;\n    }\n}\nclass OneLineRange extends SearchRange {\n    constructor(lineNumber, startColumn, endColumn) {\n        super(lineNumber, startColumn, lineNumber, endColumn);\n    }\n}\nfunction getExcludes(configuration, includeSearchExcludes = true) {\n    const fileExcludes = configuration && configuration.files && configuration.files.exclude;\n    const searchExcludes = includeSearchExcludes && configuration && configuration.search && configuration.search.exclude;\n    if (!fileExcludes && !searchExcludes) {\n        return undefined;\n    }\n    if (!fileExcludes || !searchExcludes) {\n        return fileExcludes || searchExcludes;\n    }\n    let allExcludes = Object.create(null);\n    allExcludes = objects.mixin(allExcludes, objects.deepClone(fileExcludes));\n    allExcludes = objects.mixin(allExcludes, objects.deepClone(searchExcludes), true);\n    return allExcludes;\n}\nfunction pathIncludedInQuery(queryProps, fsPath) {\n    if (queryProps.excludePattern && glob.match(queryProps.excludePattern, fsPath)) {\n        return false;\n    }\n    if (queryProps.includePattern || queryProps.usingSearchPaths) {\n        if (queryProps.includePattern && glob.match(queryProps.includePattern, fsPath)) {\n            return true;\n        }\n        if (queryProps.usingSearchPaths) {\n            return !!queryProps.folderQueries && ( queryProps.folderQueries.some(fq => {\n                const searchPath = fq.folder.fsPath;\n                if (extpath.isEqualOrParent(fsPath, searchPath)) {\n                    const relPath = path.relative(searchPath, fsPath);\n                    return !fq.includePattern || !!glob.match(fq.includePattern, relPath);\n                }\n                else {\n                    return false;\n                }\n            }));\n        }\n        return false;\n    }\n    return true;\n}\nvar SearchErrorCode;\n( (function(SearchErrorCode) {\n    SearchErrorCode[SearchErrorCode[\"unknownEncoding\"] = 1] = \"unknownEncoding\";\n    SearchErrorCode[SearchErrorCode[\"regexParseError\"] = 2] = \"regexParseError\";\n    SearchErrorCode[SearchErrorCode[\"globParseError\"] = 3] = \"globParseError\";\n    SearchErrorCode[SearchErrorCode[\"invalidLiteral\"] = 4] = \"invalidLiteral\";\n    SearchErrorCode[SearchErrorCode[\"rgProcessError\"] = 5] = \"rgProcessError\";\n    SearchErrorCode[SearchErrorCode[\"other\"] = 6] = \"other\";\n    SearchErrorCode[SearchErrorCode[\"canceled\"] = 7] = \"canceled\";\n})(SearchErrorCode || (SearchErrorCode = {})));\nclass SearchError extends Error {\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\nfunction deserializeSearchError(error) {\n    const errorMsg = error.message;\n    if (isCancellationError(error)) {\n        return ( new SearchError(errorMsg, SearchErrorCode.canceled));\n    }\n    try {\n        const details = JSON.parse(errorMsg);\n        return ( new SearchError(details.message, details.code));\n    }\n    catch (e) {\n        return ( new SearchError(errorMsg, SearchErrorCode.other));\n    }\n}\nfunction resolvePatternsForProvider(globalPattern, folderPattern) {\n    const merged = {\n        ...(globalPattern || {}),\n        ...(folderPattern || {})\n    };\n    return ( Object.keys(merged))\n        .filter(key => {\n        const value = merged[key];\n        return typeof value === 'boolean' && value;\n    });\n}\nclass QueryGlobTester {\n    constructor(config, folderQuery) {\n        this._parsedIncludeExpression = null;\n        this._excludeExpression = {\n            ...(config.excludePattern || {}),\n            ...(folderQuery.excludePattern || {})\n        };\n        this._parsedExcludeExpression = glob.parse(this._excludeExpression);\n        let includeExpression = config.includePattern;\n        if (folderQuery.includePattern) {\n            if (includeExpression) {\n                includeExpression = {\n                    ...includeExpression,\n                    ...folderQuery.includePattern\n                };\n            }\n            else {\n                includeExpression = folderQuery.includePattern;\n            }\n        }\n        if (includeExpression) {\n            this._parsedIncludeExpression = glob.parse(includeExpression);\n        }\n    }\n    matchesExcludesSync(testPath, basename, hasSibling) {\n        if (this._parsedExcludeExpression && this._parsedExcludeExpression(testPath, basename, hasSibling)) {\n            return true;\n        }\n        return false;\n    }\n    includedInQuerySync(testPath, basename, hasSibling) {\n        if (this._parsedExcludeExpression && this._parsedExcludeExpression(testPath, basename, hasSibling)) {\n            return false;\n        }\n        if (this._parsedIncludeExpression && !this._parsedIncludeExpression(testPath, basename, hasSibling)) {\n            return false;\n        }\n        return true;\n    }\n    includedInQuery(testPath, basename, hasSibling) {\n        const excluded = this._parsedExcludeExpression(testPath, basename, hasSibling);\n        const isIncluded = () => {\n            return this._parsedIncludeExpression ?\n                !!(this._parsedIncludeExpression(testPath, basename, hasSibling)) :\n                true;\n        };\n        if (isThenable(excluded)) {\n            return excluded.then(excluded => {\n                if (excluded) {\n                    return false;\n                }\n                return isIncluded();\n            });\n        }\n        return isIncluded();\n    }\n    hasSiblingExcludeClauses() {\n        return hasSiblingClauses(this._excludeExpression);\n    }\n}\nfunction hasSiblingClauses(pattern) {\n    for (const key in pattern) {\n        if (typeof pattern[key] !== 'boolean') {\n            return true;\n        }\n    }\n    return false;\n}\nfunction hasSiblingPromiseFn(siblingsFn) {\n    if (!siblingsFn) {\n        return undefined;\n    }\n    let siblings;\n    return (name) => {\n        if (!siblings) {\n            siblings = (siblingsFn() || Promise.resolve([]))\n                .then(list => list ? listToMap(list) : {});\n        }\n        return siblings.then(map => !!map[name]);\n    };\n}\nfunction hasSiblingFn(siblingsFn) {\n    if (!siblingsFn) {\n        return undefined;\n    }\n    let siblings;\n    return (name) => {\n        if (!siblings) {\n            const list = siblingsFn();\n            siblings = list ? listToMap(list) : {};\n        }\n        return !!siblings[name];\n    };\n}\nfunction listToMap(list) {\n    const map = {};\n    for (const key of list) {\n        map[key] = true;\n    }\n    return map;\n}\nexport { FileMatch, ISearchService, OneLineRange, QueryGlobTester, SEARCH_EXCLUDE_CONFIG, SearchError, SearchErrorCode, SearchRange, TextSearchMatch, VIEWLET_ID, VIEW_ID, deserializeSearchError, getExcludes, hasSiblingFn, hasSiblingPromiseFn, isFileMatch, isProgressMessage, pathIncludedInQuery, resolvePatternsForProvider, resultIsMatch };\n", "import { getErrorMessage } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { CONTEXT_LOG_LEVEL, LogLevelToString, LogLevel } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nconst IRequestService = ( createDecorator('requestService'));\nclass LoggableHeaders {\n    constructor(original) {\n        this.original = original;\n    }\n    toJSON() {\n        if (!this.headers) {\n            const headers = Object.create(null);\n            for (const key in this.original) {\n                if (key.toLowerCase() === 'authorization' || key.toLowerCase() === 'proxy-authorization') {\n                    headers[key] = '*****';\n                }\n                else {\n                    headers[key] = this.original[key];\n                }\n            }\n            this.headers = headers;\n        }\n        return this.headers;\n    }\n}\nclass AbstractRequestService extends Disposable {\n    constructor(loggerService) {\n        super();\n        this.counter = 0;\n        this.logger = loggerService.createLogger('network', {\n            name: ( localize('request', \"Network Requests\")),\n            when: ( CONTEXT_LOG_LEVEL.isEqualTo(LogLevelToString(LogLevel.Trace))).serialize()\n        });\n    }\n    async logAndRequest(stack, options, request) {\n        const prefix = `${stack} #${++this.counter}: ${options.url}`;\n        this.logger.trace(`${prefix} - begin`, options.type, ( new LoggableHeaders(options.headers ?? {})));\n        try {\n            const result = await request();\n            this.logger.trace(`${prefix} - end`, options.type, result.res.statusCode, result.res.headers);\n            return result;\n        }\n        catch (error) {\n            this.logger.error(`${prefix} - error`, options.type, getErrorMessage(error));\n            throw error;\n        }\n    }\n}\nexport { AbstractRequestService, IRequestService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IWorkspaceEditingService = ( createDecorator('workspaceEditingService'));\nexport { IWorkspaceEditingService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ITimerService = ( createDecorator('timerService'));\nexport { ITimerService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst VIEWLET_ID = 'workbench.view.extensions';\nconst IExtensionsWorkbenchService = ( createDecorator('extensionsWorkbenchService'));\nconst TOGGLE_IGNORE_EXTENSION_ACTION_ID = 'workbench.extensions.action.toggleIgnoreExtension';\nconst SELECT_INSTALL_VSIX_EXTENSION_COMMAND_ID = 'workbench.extensions.action.installVSIX';\nconst LIST_WORKSPACE_UNSUPPORTED_EXTENSIONS_COMMAND_ID = 'workbench.extensions.action.listWorkspaceUnsupportedExtensions';\nconst THEME_ACTIONS_GROUP = '_theme_';\nconst INSTALL_ACTIONS_GROUP = '0_install';\nexport { IExtensionsWorkbenchService, INSTALL_ACTIONS_GROUP, LIST_WORKSPACE_UNSUPPORTED_EXTENSIONS_COMMAND_ID, SELECT_INSTALL_VSIX_EXTENSION_COMMAND_ID, THEME_ACTIONS_GROUP, TOGGLE_IGNORE_EXTENSION_ACTION_ID, VIEWLET_ID };\n", "import { refineServiceDecorator, createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IExtensionManagementService } from '../../../../platform/extensionManagement/common/extensionManagement.js';\nconst IProfileAwareExtensionManagementService = refineServiceDecorator(IExtensionManagementService);\nconst IExtensionManagementServerService = ( createDecorator('extensionManagementServerService'));\nconst IWorkbenchExtensionManagementService = refineServiceDecorator(IProfileAwareExtensionManagementService);\nconst IWorkbenchExtensionEnablementService = ( createDecorator('extensionEnablementService'));\nexport { IExtensionManagementServerService, IProfileAwareExtensionManagementService, IWorkbenchExtensionEnablementService, IWorkbenchExtensionManagementService };\n", "import { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ITunnelService = ( createDecorator('tunnelService'));\nvar TunnelProtocol;\n( (function(TunnelProtocol) {\n    TunnelProtocol[\"Http\"] = \"http\";\n    TunnelProtocol[\"Https\"] = \"https\";\n})(TunnelProtocol || (TunnelProtocol = {})));\nvar TunnelPrivacyId;\n( (function(TunnelPrivacyId) {\n    TunnelPrivacyId[\"ConstantPrivate\"] = \"constantPrivate\";\n    TunnelPrivacyId[\"Private\"] = \"private\";\n    TunnelPrivacyId[\"Public\"] = \"public\";\n})(TunnelPrivacyId || (TunnelPrivacyId = {})));\nvar ProvidedOnAutoForward;\n( (function(ProvidedOnAutoForward) {\n    ProvidedOnAutoForward[ProvidedOnAutoForward[\"Notify\"] = 1] = \"Notify\";\n    ProvidedOnAutoForward[ProvidedOnAutoForward[\"OpenBrowser\"] = 2] = \"OpenBrowser\";\n    ProvidedOnAutoForward[ProvidedOnAutoForward[\"OpenPreview\"] = 3] = \"OpenPreview\";\n    ProvidedOnAutoForward[ProvidedOnAutoForward[\"Silent\"] = 4] = \"Silent\";\n    ProvidedOnAutoForward[ProvidedOnAutoForward[\"Ignore\"] = 5] = \"Ignore\";\n    ProvidedOnAutoForward[ProvidedOnAutoForward[\"OpenBrowserOnce\"] = 6] = \"OpenBrowserOnce\";\n})(ProvidedOnAutoForward || (ProvidedOnAutoForward = {})));\nfunction extractLocalHostUriMetaDataForPortMapping(uri) {\n    if (uri.scheme !== 'http' && uri.scheme !== 'https') {\n        return undefined;\n    }\n    const localhostMatch = /^(localhost|127\\.0\\.0\\.1|0\\.0\\.0\\.0):(\\d+)$/.exec(uri.authority);\n    if (!localhostMatch) {\n        return undefined;\n    }\n    return {\n        address: localhostMatch[1],\n        port: +localhostMatch[2],\n    };\n}\nconst LOCALHOST_ADDRESSES = ['localhost', '127.0.0.1', '0:0:0:0:0:0:0:1', '::1'];\nfunction isLocalhost(host) {\n    return LOCALHOST_ADDRESSES.indexOf(host) >= 0;\n}\nconst ALL_INTERFACES_ADDRESSES = ['0.0.0.0', '0:0:0:0:0:0:0:0', '::'];\nfunction isAllInterfaces(host) {\n    return ALL_INTERFACES_ADDRESSES.indexOf(host) >= 0;\n}\nclass DisposableTunnel {\n    constructor(remoteAddress, localAddress, _dispose) {\n        this.remoteAddress = remoteAddress;\n        this.localAddress = localAddress;\n        this._dispose = _dispose;\n        this._onDispose = ( new Emitter());\n        this.onDidDispose = this._onDispose.event;\n    }\n    dispose() {\n        this._onDispose.fire();\n        return this._dispose();\n    }\n}\nexport { ALL_INTERFACES_ADDRESSES, DisposableTunnel, ITunnelService, LOCALHOST_ADDRESSES, ProvidedOnAutoForward, TunnelPrivacyId, TunnelProtocol, extractLocalHostUriMetaDataForPortMapping, isAllInterfaces, isLocalhost };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IWorkingCopyBackupService = ( createDecorator('workingCopyBackupService'));\nexport { IWorkingCopyBackupService };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { RawContextKey, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { AutoSaveConfiguration, FILES_READONLY_INCLUDE_CONFIG, FILES_READONLY_EXCLUDE_CONFIG, HotExitConfiguration, hasReadonlyCapability, IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { equals } from 'monaco-editor/esm/vs/base/common/objects.js';\nimport { isWeb } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { ResourceGlobMatcher } from '../../../common/resources.js';\nimport { IdleValue } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { IEnvironmentService } from 'monaco-editor/esm/vs/platform/environment/common/environment.js';\nimport { ResourceMap } from 'monaco-editor/esm/vs/base/common/map.js';\nvar FilesConfigurationService_1;\nconst AutoSaveAfterShortDelayContext = ( new RawContextKey('autoSaveAfterShortDelayContext', false, true));\nconst IFilesConfigurationService = ( createDecorator('filesConfigurationService'));\nlet FilesConfigurationService = class FilesConfigurationService extends Disposable {\n    static { FilesConfigurationService_1 = this; }\n    static { this.DEFAULT_AUTO_SAVE_MODE = isWeb ? AutoSaveConfiguration.AFTER_DELAY : AutoSaveConfiguration.OFF; }\n    static { this.READONLY_MESSAGES = {\n        providerReadonly: { value: ( localize(\n            'providerReadonly',\n            \"Editor is read-only because the file system of the file is read-only.\"\n        )), isTrusted: true },\n        sessionReadonly: { value: ( localize(\n            { key: 'sessionReadonly', comment: ['Please do not translate the word \"command\", it is part of our internal syntax which must not change', '{Locked=\"](command:{0})\"}'] },\n            \"Editor is read-only because the file was set read-only in this session. [Click here](command:{0}) to set writeable.\",\n            'workbench.action.files.setActiveEditorWriteableInSession'\n        )), isTrusted: true },\n        configuredReadonly: { value: ( localize(\n            { key: 'configuredReadonly', comment: ['Please do not translate the word \"command\", it is part of our internal syntax which must not change', '{Locked=\"](command:{0})\"}'] },\n            \"Editor is read-only because the file was set read-only via settings. [Click here](command:{0}) to configure.\",\n            `workbench.action.openSettings?${encodeURIComponent('[\"files.readonly\"]')}`\n        )), isTrusted: true },\n        fileLocked: { value: ( localize(\n            { key: 'fileLocked', comment: ['Please do not translate the word \"command\", it is part of our internal syntax which must not change', '{Locked=\"](command:{0})\"}'] },\n            \"Editor is read-only because of file permissions. [Click here](command:{0}) to set writeable anyway.\",\n            'workbench.action.files.setActiveEditorWriteableInSession'\n        )), isTrusted: true },\n        fileReadonly: { value: ( localize('fileReadonly', \"Editor is read-only because the file is read-only.\")), isTrusted: true }\n    }; }\n    constructor(contextKeyService, configurationService, contextService, environmentService, uriIdentityService, fileService) {\n        super();\n        this.configurationService = configurationService;\n        this.contextService = contextService;\n        this.environmentService = environmentService;\n        this.uriIdentityService = uriIdentityService;\n        this.fileService = fileService;\n        this._onAutoSaveConfigurationChange = this._register(( new Emitter()));\n        this.onAutoSaveConfigurationChange = this._onAutoSaveConfigurationChange.event;\n        this._onFilesAssociationChange = this._register(( new Emitter()));\n        this.onFilesAssociationChange = this._onFilesAssociationChange.event;\n        this._onReadonlyConfigurationChange = this._register(( new Emitter()));\n        this.onReadonlyChange = this._onReadonlyConfigurationChange.event;\n        this.readonlyIncludeMatcher = this._register(( new IdleValue(() => this.createReadonlyMatcher(FILES_READONLY_INCLUDE_CONFIG))));\n        this.readonlyExcludeMatcher = this._register(( new IdleValue(() => this.createReadonlyMatcher(FILES_READONLY_EXCLUDE_CONFIG))));\n        this.sessionReadonlyOverrides = ( new ResourceMap(resource => this.uriIdentityService.extUri.getComparisonKey(resource)));\n        this.autoSaveAfterShortDelayContext = AutoSaveAfterShortDelayContext.bindTo(contextKeyService);\n        const configuration = configurationService.getValue();\n        this.currentFilesAssociationConfig = configuration?.files?.associations;\n        this.currentHotExitConfig = configuration?.files?.hotExit || HotExitConfiguration.ON_EXIT;\n        this.onFilesConfigurationChange(configuration);\n        this.registerListeners();\n    }\n    createReadonlyMatcher(config) {\n        const matcher = this._register(( new ResourceGlobMatcher(\n            resource => this.configurationService.getValue(config, { resource }),\n            event => event.affectsConfiguration(config),\n            this.contextService,\n            this.configurationService\n        )));\n        this._register(matcher.onExpressionChange(() => this._onReadonlyConfigurationChange.fire()));\n        return matcher;\n    }\n    isReadonly(resource, stat) {\n        const provider = this.fileService.getProvider(resource.scheme);\n        if (provider && hasReadonlyCapability(provider)) {\n            return provider.readOnlyMessage ?? FilesConfigurationService_1.READONLY_MESSAGES.providerReadonly;\n        }\n        const sessionReadonlyOverride = this.sessionReadonlyOverrides.get(resource);\n        if (typeof sessionReadonlyOverride === 'boolean') {\n            return sessionReadonlyOverride === true ? FilesConfigurationService_1.READONLY_MESSAGES.sessionReadonly : false;\n        }\n        if (this.uriIdentityService.extUri.isEqualOrParent(resource, this.environmentService.userRoamingDataHome) ||\n            this.uriIdentityService.extUri.isEqual(resource, this.contextService.getWorkspace().configuration ?? undefined)) {\n            return false;\n        }\n        if (this.readonlyIncludeMatcher.value.matches(resource)) {\n            return !this.readonlyExcludeMatcher.value.matches(resource) ? FilesConfigurationService_1.READONLY_MESSAGES.configuredReadonly : false;\n        }\n        if (this.configuredReadonlyFromPermissions && stat?.locked) {\n            return FilesConfigurationService_1.READONLY_MESSAGES.fileLocked;\n        }\n        if (stat?.readonly) {\n            return FilesConfigurationService_1.READONLY_MESSAGES.fileReadonly;\n        }\n        return false;\n    }\n    async updateReadonly(resource, readonly) {\n        if (readonly === 'toggle') {\n            let stat = undefined;\n            try {\n                stat = await this.fileService.resolve(resource, { resolveMetadata: true });\n            }\n            catch (error) {\n            }\n            readonly = !this.isReadonly(resource, stat);\n        }\n        if (readonly === 'reset') {\n            this.sessionReadonlyOverrides.delete(resource);\n        }\n        else {\n            this.sessionReadonlyOverrides.set(resource, readonly);\n        }\n        this._onReadonlyConfigurationChange.fire();\n    }\n    registerListeners() {\n        this._register(this.configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('files')) {\n                this.onFilesConfigurationChange(this.configurationService.getValue());\n            }\n        }));\n    }\n    onFilesConfigurationChange(configuration) {\n        const autoSaveMode = configuration?.files?.autoSave || FilesConfigurationService_1.DEFAULT_AUTO_SAVE_MODE;\n        switch (autoSaveMode) {\n            case AutoSaveConfiguration.AFTER_DELAY:\n                this.configuredAutoSaveDelay = configuration?.files?.autoSaveDelay;\n                this.configuredAutoSaveOnFocusChange = false;\n                this.configuredAutoSaveOnWindowChange = false;\n                break;\n            case AutoSaveConfiguration.ON_FOCUS_CHANGE:\n                this.configuredAutoSaveDelay = undefined;\n                this.configuredAutoSaveOnFocusChange = true;\n                this.configuredAutoSaveOnWindowChange = false;\n                break;\n            case AutoSaveConfiguration.ON_WINDOW_CHANGE:\n                this.configuredAutoSaveDelay = undefined;\n                this.configuredAutoSaveOnFocusChange = false;\n                this.configuredAutoSaveOnWindowChange = true;\n                break;\n            default:\n                this.configuredAutoSaveDelay = undefined;\n                this.configuredAutoSaveOnFocusChange = false;\n                this.configuredAutoSaveOnWindowChange = false;\n                break;\n        }\n        this.autoSaveAfterShortDelayContext.set(this.getAutoSaveMode() === 1 );\n        this._onAutoSaveConfigurationChange.fire(this.getAutoSaveConfiguration());\n        const filesAssociation = configuration?.files?.associations;\n        if (!equals(this.currentFilesAssociationConfig, filesAssociation)) {\n            this.currentFilesAssociationConfig = filesAssociation;\n            this._onFilesAssociationChange.fire();\n        }\n        const hotExitMode = configuration?.files?.hotExit;\n        if (hotExitMode === HotExitConfiguration.OFF || hotExitMode === HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE) {\n            this.currentHotExitConfig = hotExitMode;\n        }\n        else {\n            this.currentHotExitConfig = HotExitConfiguration.ON_EXIT;\n        }\n        const readonlyFromPermissions = Boolean(configuration?.files?.readonlyFromPermissions);\n        if (readonlyFromPermissions !== Boolean(this.configuredReadonlyFromPermissions)) {\n            this.configuredReadonlyFromPermissions = readonlyFromPermissions;\n            this._onReadonlyConfigurationChange.fire();\n        }\n    }\n    getAutoSaveMode() {\n        if (this.configuredAutoSaveOnFocusChange) {\n            return 3 ;\n        }\n        if (this.configuredAutoSaveOnWindowChange) {\n            return 4 ;\n        }\n        if (typeof this.configuredAutoSaveDelay === 'number' && this.configuredAutoSaveDelay >= 0) {\n            return this.configuredAutoSaveDelay <= 1000 ? 1  : 2 ;\n        }\n        return 0 ;\n    }\n    getAutoSaveConfiguration() {\n        return {\n            autoSaveDelay: typeof this.configuredAutoSaveDelay === 'number' && this.configuredAutoSaveDelay >= 0 ? this.configuredAutoSaveDelay : undefined,\n            autoSaveFocusChange: !!this.configuredAutoSaveOnFocusChange,\n            autoSaveApplicationChange: !!this.configuredAutoSaveOnWindowChange\n        };\n    }\n    async toggleAutoSave() {\n        const currentSetting = this.configurationService.getValue('files.autoSave');\n        let newAutoSaveValue;\n        if (( [AutoSaveConfiguration.AFTER_DELAY, AutoSaveConfiguration.ON_FOCUS_CHANGE, AutoSaveConfiguration.ON_WINDOW_CHANGE].some(setting => setting === currentSetting))) {\n            newAutoSaveValue = AutoSaveConfiguration.OFF;\n        }\n        else {\n            newAutoSaveValue = AutoSaveConfiguration.AFTER_DELAY;\n        }\n        return this.configurationService.updateValue('files.autoSave', newAutoSaveValue);\n    }\n    get isHotExitEnabled() {\n        if (this.contextService.getWorkspace().transient) {\n            return false;\n        }\n        return this.currentHotExitConfig !== HotExitConfiguration.OFF;\n    }\n    get hotExitConfiguration() {\n        return this.currentHotExitConfig;\n    }\n    preventSaveConflicts(resource, language) {\n        return this.configurationService.getValue('files.saveConflictResolution', { resource, overrideIdentifier: language }) !== 'overwriteFileOnDisk';\n    }\n};\nFilesConfigurationService = FilesConfigurationService_1 = ( __decorate([\n    ( __param(0, IContextKeyService)),\n    ( __param(1, IConfigurationService)),\n    ( __param(2, IWorkspaceContextService)),\n    ( __param(3, IEnvironmentService)),\n    ( __param(4, IUriIdentityService)),\n    ( __param(5, IFileService))\n], FilesConfigurationService));\nexport { AutoSaveAfterShortDelayContext, FilesConfigurationService, IFilesConfigurationService };\n", "import { __decorate, __param } from '../../../../../external/tslib/tslib.es6.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { equals } from 'monaco-editor/esm/vs/base/common/objects.js';\nimport { isAbsolute } from 'monaco-editor/esm/vs/base/common/path.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { relativePath } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { parse } from 'monaco-editor/esm/vs/base/common/glob.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { ResourceSet } from 'monaco-editor/esm/vs/base/common/map.js';\nimport { getDriveLetter } from 'monaco-editor/esm/vs/base/common/extpath.js';\nvar ResourceGlobMatcher_1;\nlet ResourceGlobMatcher = class ResourceGlobMatcher extends Disposable {\n    static { ResourceGlobMatcher_1 = this; }\n    static { this.NO_FOLDER = null; }\n    constructor(getExpression, shouldUpdate, contextService, configurationService) {\n        super();\n        this.getExpression = getExpression;\n        this.shouldUpdate = shouldUpdate;\n        this.contextService = contextService;\n        this.configurationService = configurationService;\n        this._onExpressionChange = this._register(( new Emitter()));\n        this.onExpressionChange = this._onExpressionChange.event;\n        this.mapFolderToParsedExpression = ( new Map());\n        this.mapFolderToConfiguredExpression = ( new Map());\n        this.updateExpressions(false);\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.configurationService.onDidChangeConfiguration(e => {\n            if (this.shouldUpdate(e)) {\n                this.updateExpressions(true);\n            }\n        }));\n        this._register(this.contextService.onDidChangeWorkspaceFolders(() => this.updateExpressions(true)));\n    }\n    updateExpressions(fromEvent) {\n        let changed = false;\n        for (const folder of this.contextService.getWorkspace().folders) {\n            const folderUriStr = ( folder.uri.toString());\n            const newExpression = this.doGetExpression(folder.uri);\n            const currentExpression = this.mapFolderToConfiguredExpression.get(folderUriStr);\n            if (newExpression) {\n                if (!currentExpression || !equals(currentExpression.expression, newExpression.expression)) {\n                    changed = true;\n                    this.mapFolderToParsedExpression.set(folderUriStr, parse(newExpression.expression));\n                    this.mapFolderToConfiguredExpression.set(folderUriStr, newExpression);\n                }\n            }\n            else {\n                if (currentExpression) {\n                    changed = true;\n                    this.mapFolderToParsedExpression.delete(folderUriStr);\n                    this.mapFolderToConfiguredExpression.delete(folderUriStr);\n                }\n            }\n        }\n        const foldersMap = ( new ResourceSet(( this.contextService.getWorkspace().folders.map(folder => folder.uri))));\n        for (const [folder] of this.mapFolderToConfiguredExpression) {\n            if (folder === ResourceGlobMatcher_1.NO_FOLDER) {\n                continue;\n            }\n            if (!( foldersMap.has(( URI.parse(folder))))) {\n                this.mapFolderToParsedExpression.delete(folder);\n                this.mapFolderToConfiguredExpression.delete(folder);\n                changed = true;\n            }\n        }\n        const globalNewExpression = this.doGetExpression(undefined);\n        const globalCurrentExpression = this.mapFolderToConfiguredExpression.get(ResourceGlobMatcher_1.NO_FOLDER);\n        if (globalNewExpression) {\n            if (!globalCurrentExpression || !equals(globalCurrentExpression.expression, globalNewExpression.expression)) {\n                changed = true;\n                this.mapFolderToParsedExpression.set(ResourceGlobMatcher_1.NO_FOLDER, parse(globalNewExpression.expression));\n                this.mapFolderToConfiguredExpression.set(ResourceGlobMatcher_1.NO_FOLDER, globalNewExpression);\n            }\n        }\n        else {\n            if (globalCurrentExpression) {\n                changed = true;\n                this.mapFolderToParsedExpression.delete(ResourceGlobMatcher_1.NO_FOLDER);\n                this.mapFolderToConfiguredExpression.delete(ResourceGlobMatcher_1.NO_FOLDER);\n            }\n        }\n        if (fromEvent && changed) {\n            this._onExpressionChange.fire();\n        }\n    }\n    doGetExpression(resource) {\n        const expression = this.getExpression(resource);\n        if (!expression) {\n            return undefined;\n        }\n        const keys = ( Object.keys(expression));\n        if (keys.length === 0) {\n            return undefined;\n        }\n        let hasAbsolutePath = false;\n        const massagedExpression = Object.create(null);\n        for (const key of keys) {\n            if (!hasAbsolutePath) {\n                hasAbsolutePath = isAbsolute(key);\n            }\n            let massagedKey = key;\n            const driveLetter = getDriveLetter(massagedKey, true );\n            if (driveLetter) {\n                const driveLetterLower = driveLetter.toLowerCase();\n                if (driveLetter !== driveLetter.toLowerCase()) {\n                    massagedKey = `${driveLetterLower}${massagedKey.substring(1)}`;\n                }\n            }\n            massagedExpression[massagedKey] = expression[key];\n        }\n        return {\n            expression: massagedExpression,\n            hasAbsolutePath\n        };\n    }\n    matches(resource, hasSibling) {\n        if (this.mapFolderToParsedExpression.size === 0) {\n            return false;\n        }\n        const folder = this.contextService.getWorkspaceFolder(resource);\n        let expressionForFolder;\n        let expressionConfigForFolder;\n        if (folder && ( this.mapFolderToParsedExpression.has(( folder.uri.toString())))) {\n            expressionForFolder = this.mapFolderToParsedExpression.get(( folder.uri.toString()));\n            expressionConfigForFolder = this.mapFolderToConfiguredExpression.get(( folder.uri.toString()));\n        }\n        else {\n            expressionForFolder = this.mapFolderToParsedExpression.get(ResourceGlobMatcher_1.NO_FOLDER);\n            expressionConfigForFolder = this.mapFolderToConfiguredExpression.get(ResourceGlobMatcher_1.NO_FOLDER);\n        }\n        if (!expressionForFolder) {\n            return false;\n        }\n        let resourcePathToMatch;\n        if (folder) {\n            resourcePathToMatch = relativePath(folder.uri, resource);\n        }\n        else {\n            resourcePathToMatch = this.uriToPath(resource);\n        }\n        if (typeof resourcePathToMatch === 'string' && !!expressionForFolder(resourcePathToMatch, undefined, hasSibling)) {\n            return true;\n        }\n        if (resourcePathToMatch !== this.uriToPath(resource) && expressionConfigForFolder?.hasAbsolutePath) {\n            return !!expressionForFolder(this.uriToPath(resource), undefined, hasSibling);\n        }\n        return false;\n    }\n    uriToPath(uri) {\n        if (uri.scheme === Schemas.file) {\n            return uri.fsPath;\n        }\n        return uri.path;\n    }\n};\nResourceGlobMatcher = ResourceGlobMatcher_1 = ( __decorate([\n    ( __param(2, IWorkspaceContextService)),\n    ( __param(3, IConfigurationService))\n], ResourceGlobMatcher));\nexport { ResourceGlobMatcher };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { createDecorator, IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { UntitledTextEditorModel } from './untitledTextEditorModel.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { Emitter, Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { ResourceMap } from 'monaco-editor/esm/vs/base/common/map.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { Disposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nvar UntitledTextEditorService_1;\nconst IUntitledTextEditorService = ( (createDecorator('untitledTextEditorService')));\nlet UntitledTextEditorService = class UntitledTextEditorService extends Disposable {\n    static { UntitledTextEditorService_1 = this; }\n    static { this.UNTITLED_WITHOUT_ASSOCIATED_RESOURCE_REGEX = /Untitled-\\d+/; }\n    constructor(instantiationService, configurationService) {\n        super();\n        this.instantiationService = instantiationService;\n        this.configurationService = configurationService;\n        this._onDidChangeDirty = this._register(( (new Emitter())));\n        this.onDidChangeDirty = this._onDidChangeDirty.event;\n        this._onDidChangeEncoding = this._register(( (new Emitter())));\n        this.onDidChangeEncoding = this._onDidChangeEncoding.event;\n        this._onWillDispose = this._register(( (new Emitter())));\n        this.onWillDispose = this._onWillDispose.event;\n        this._onDidChangeLabel = this._register(( (new Emitter())));\n        this.onDidChangeLabel = this._onDidChangeLabel.event;\n        this.mapResourceToModel = ( (new ResourceMap()));\n    }\n    get(resource) {\n        return this.mapResourceToModel.get(resource);\n    }\n    getValue(resource) {\n        return this.get(resource)?.textEditorModel?.getValue();\n    }\n    async resolve(options) {\n        const model = this.doCreateOrGet(options);\n        await model.resolve();\n        return model;\n    }\n    create(options) {\n        return this.doCreateOrGet(options);\n    }\n    doCreateOrGet(options = Object.create(null)) {\n        const massagedOptions = this.massageOptions(options);\n        if (massagedOptions.untitledResource && ( (this.mapResourceToModel.has(massagedOptions.untitledResource)))) {\n            return this.mapResourceToModel.get(massagedOptions.untitledResource);\n        }\n        return this.doCreate(massagedOptions);\n    }\n    massageOptions(options) {\n        const massagedOptions = Object.create(null);\n        if (options.associatedResource) {\n            massagedOptions.untitledResource = ( (URI.from({\n                scheme: Schemas.untitled,\n                authority: options.associatedResource.authority,\n                fragment: options.associatedResource.fragment,\n                path: options.associatedResource.path,\n                query: options.associatedResource.query\n            })));\n            massagedOptions.associatedResource = options.associatedResource;\n        }\n        else {\n            if (options.untitledResource?.scheme === Schemas.untitled) {\n                massagedOptions.untitledResource = options.untitledResource;\n            }\n        }\n        if (options.languageId) {\n            massagedOptions.languageId = options.languageId;\n        }\n        else if (!massagedOptions.associatedResource) {\n            const configuration = this.configurationService.getValue();\n            if (configuration.files?.defaultLanguage) {\n                massagedOptions.languageId = configuration.files.defaultLanguage;\n            }\n        }\n        massagedOptions.encoding = options.encoding;\n        massagedOptions.initialValue = options.initialValue;\n        return massagedOptions;\n    }\n    doCreate(options) {\n        let untitledResource = options.untitledResource;\n        if (!untitledResource) {\n            let counter = 1;\n            do {\n                untitledResource = ( ( URI.from({ scheme: Schemas.untitled, path: `Untitled-${counter}` })));\n                counter++;\n            } while (( (this.mapResourceToModel.has(untitledResource))));\n        }\n        const model = this._register(this.instantiationService.createInstance(UntitledTextEditorModel, untitledResource, !!options.associatedResource, options.initialValue, options.languageId, options.encoding));\n        this.registerModel(model);\n        return model;\n    }\n    registerModel(model) {\n        const modelListeners = ( (new DisposableStore()));\n        modelListeners.add(model.onDidChangeDirty(() => this._onDidChangeDirty.fire(model)));\n        modelListeners.add(model.onDidChangeName(() => this._onDidChangeLabel.fire(model)));\n        modelListeners.add(model.onDidChangeEncoding(() => this._onDidChangeEncoding.fire(model)));\n        modelListeners.add(model.onWillDispose(() => this._onWillDispose.fire(model)));\n        Event.once(model.onWillDispose)(() => {\n            this.mapResourceToModel.delete(model.resource);\n            modelListeners.dispose();\n        });\n        this.mapResourceToModel.set(model.resource, model);\n        if (model.isDirty()) {\n            this._onDidChangeDirty.fire(model);\n        }\n    }\n    isUntitledWithAssociatedResource(resource) {\n        return resource.scheme === Schemas.untitled && resource.path.length > 1 && !UntitledTextEditorService_1.UNTITLED_WITHOUT_ASSOCIATED_RESOURCE_REGEX.test(resource.path);\n    }\n};\nUntitledTextEditorService = UntitledTextEditorService_1 = ( (__decorate([\n    ( (__param(0, IInstantiationService))),\n    ( (__param(1, IConfigurationService)))\n], UntitledTextEditorService)));\nexport { IUntitledTextEditorService, UntitledTextEditorService };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { BaseTextEditorModel } from '../../../common/editor/textEditorModel.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { IWorkingCopyBackupService } from '../../workingCopy/common/workingCopyBackup.js';\nimport { ITextResourceConfigurationService } from 'monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js';\nimport { createTextBufferFactoryFromStream } from 'monaco-editor/esm/vs/editor/common/model/textModel.js';\nimport { IWorkingCopyService } from '../../workingCopy/common/workingCopyService.js';\nimport { NO_TYPE_ID } from '../../workingCopy/common/workingCopy.js';\nimport { ITextFileService } from '../../textfile/common/textfiles.js';\nimport { assertIsDefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { ensureValidWordDefinition } from 'monaco-editor/esm/vs/editor/common/core/wordHelper.js';\nimport { IEditorService } from '../../editor/common/editorService.js';\nimport { getCharContainingOffset } from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { UTF8 } from '../../textfile/common/encoding.js';\nimport { bufferToReadable, VSBuffer, bufferToStream } from 'monaco-editor/esm/vs/base/common/buffer.js';\nimport { ILanguageDetectionService } from '../../languageDetection/common/languageDetectionWorkerService.js';\nimport { IAccessibilityService } from 'monaco-editor/esm/vs/platform/accessibility/common/accessibility.js';\nvar UntitledTextEditorModel_1;\nlet UntitledTextEditorModel = class UntitledTextEditorModel extends BaseTextEditorModel {\n    static { UntitledTextEditorModel_1 = this; }\n    static { this.FIRST_LINE_NAME_MAX_LENGTH = 40; }\n    static { this.FIRST_LINE_NAME_CANDIDATE_MAX_LENGTH = UntitledTextEditorModel_1.FIRST_LINE_NAME_MAX_LENGTH * 10; }\n    static { this.ACTIVE_EDITOR_LANGUAGE_ID = '${activeEditorLanguage}'; }\n    get name() {\n        if (this.configuredLabelFormat === 'content' && !this.hasAssociatedFilePath && this.cachedModelFirstLineWords) {\n            return this.cachedModelFirstLineWords;\n        }\n        return this.labelService.getUriBasenameLabel(this.resource);\n    }\n    constructor(resource, hasAssociatedFilePath, initialValue, preferredLanguageId, preferredEncoding, languageService, modelService, workingCopyBackupService, textResourceConfigurationService, workingCopyService, textFileService, labelService, editorService, languageDetectionService, accessibilityService) {\n        super(modelService, languageService, languageDetectionService, accessibilityService);\n        this.resource = resource;\n        this.hasAssociatedFilePath = hasAssociatedFilePath;\n        this.initialValue = initialValue;\n        this.preferredLanguageId = preferredLanguageId;\n        this.preferredEncoding = preferredEncoding;\n        this.workingCopyBackupService = workingCopyBackupService;\n        this.textResourceConfigurationService = textResourceConfigurationService;\n        this.workingCopyService = workingCopyService;\n        this.textFileService = textFileService;\n        this.labelService = labelService;\n        this.editorService = editorService;\n        this._onDidChangeContent = this._register(( new Emitter()));\n        this.onDidChangeContent = this._onDidChangeContent.event;\n        this._onDidChangeName = this._register(( new Emitter()));\n        this.onDidChangeName = this._onDidChangeName.event;\n        this._onDidChangeDirty = this._register(( new Emitter()));\n        this.onDidChangeDirty = this._onDidChangeDirty.event;\n        this._onDidChangeEncoding = this._register(( new Emitter()));\n        this.onDidChangeEncoding = this._onDidChangeEncoding.event;\n        this._onDidSave = this._register(( new Emitter()));\n        this.onDidSave = this._onDidSave.event;\n        this._onDidRevert = this._register(( new Emitter()));\n        this.onDidRevert = this._onDidRevert.event;\n        this.typeId = NO_TYPE_ID;\n        this.capabilities = 2 ;\n        this.configuredLabelFormat = 'content';\n        this.cachedModelFirstLineWords = undefined;\n        this.dirty = this.hasAssociatedFilePath || !!this.initialValue;\n        this._register(this.workingCopyService.registerWorkingCopy(this));\n        if (preferredLanguageId) {\n            this.setLanguageId(preferredLanguageId);\n        }\n        this.onConfigurationChange(undefined, false);\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.textResourceConfigurationService.onDidChangeConfiguration(e => this.onConfigurationChange(e, true)));\n    }\n    onConfigurationChange(e, fromEvent) {\n        if (!e || e.affectsConfiguration(this.resource, 'files.encoding')) {\n            const configuredEncoding = this.textResourceConfigurationService.getValue(this.resource, 'files.encoding');\n            if (this.configuredEncoding !== configuredEncoding && typeof configuredEncoding === 'string') {\n                this.configuredEncoding = configuredEncoding;\n                if (fromEvent && !this.preferredEncoding) {\n                    this._onDidChangeEncoding.fire();\n                }\n            }\n        }\n        if (!e || e.affectsConfiguration(this.resource, 'workbench.editor.untitled.labelFormat')) {\n            const configuredLabelFormat = this.textResourceConfigurationService.getValue(this.resource, 'workbench.editor.untitled.labelFormat');\n            if (this.configuredLabelFormat !== configuredLabelFormat && (configuredLabelFormat === 'content' || configuredLabelFormat === 'name')) {\n                this.configuredLabelFormat = configuredLabelFormat;\n                if (fromEvent) {\n                    this._onDidChangeName.fire();\n                }\n            }\n        }\n    }\n    setLanguageId(languageId, source) {\n        const actualLanguage = languageId === UntitledTextEditorModel_1.ACTIVE_EDITOR_LANGUAGE_ID\n            ? this.editorService.activeTextEditorLanguageId\n            : languageId;\n        this.preferredLanguageId = actualLanguage;\n        if (actualLanguage) {\n            super.setLanguageId(actualLanguage, source);\n        }\n    }\n    getLanguageId() {\n        if (this.textEditorModel) {\n            return this.textEditorModel.getLanguageId();\n        }\n        return this.preferredLanguageId;\n    }\n    getEncoding() {\n        return this.preferredEncoding || this.configuredEncoding;\n    }\n    async setEncoding(encoding) {\n        const oldEncoding = this.getEncoding();\n        this.preferredEncoding = encoding;\n        if (oldEncoding !== this.preferredEncoding) {\n            this._onDidChangeEncoding.fire();\n        }\n    }\n    isDirty() {\n        return this.dirty;\n    }\n    isModified() {\n        return this.isDirty();\n    }\n    setDirty(dirty) {\n        if (this.dirty === dirty) {\n            return;\n        }\n        this.dirty = dirty;\n        this._onDidChangeDirty.fire();\n    }\n    async save(options) {\n        const target = await this.textFileService.save(this.resource, options);\n        if (target) {\n            this._onDidSave.fire({ reason: options?.reason, source: options?.source });\n        }\n        return !!target;\n    }\n    async revert() {\n        this.setDirty(false);\n        this._onDidRevert.fire();\n        this.dispose();\n    }\n    async backup(token) {\n        let content = undefined;\n        if (this.isResolved()) {\n            content = await this.textFileService.getEncodedReadable(this.resource, this.createSnapshot() ?? undefined, { encoding: UTF8 });\n        }\n        else if (typeof this.initialValue === 'string') {\n            content = bufferToReadable(VSBuffer.fromString(this.initialValue));\n        }\n        return { content };\n    }\n    async resolve() {\n        let createdUntitledModel = false;\n        let hasBackup = false;\n        if (!this.textEditorModel) {\n            let untitledContents;\n            const backup = await this.workingCopyBackupService.resolve(this);\n            if (backup) {\n                untitledContents = backup.value;\n                hasBackup = true;\n            }\n            else {\n                untitledContents = bufferToStream(VSBuffer.fromString(this.initialValue || ''));\n            }\n            const untitledContentsFactory = await createTextBufferFactoryFromStream(await this.textFileService.getDecodedStream(this.resource, untitledContents, { encoding: UTF8 }));\n            this.createTextEditorModel(untitledContentsFactory, this.resource, this.preferredLanguageId);\n            createdUntitledModel = true;\n        }\n        else {\n            this.updateTextEditorModel(undefined, this.preferredLanguageId);\n        }\n        const textEditorModel = assertIsDefined(this.textEditorModel);\n        this.installModelListeners(textEditorModel);\n        if (createdUntitledModel) {\n            if (hasBackup || this.initialValue) {\n                this.updateNameFromFirstLine(textEditorModel);\n            }\n            this.setDirty(this.hasAssociatedFilePath || !!hasBackup || !!this.initialValue);\n            if (hasBackup || this.initialValue) {\n                this._onDidChangeContent.fire();\n            }\n        }\n        return super.resolve();\n    }\n    installModelListeners(model) {\n        this._register(model.onDidChangeContent(e => this.onModelContentChanged(model, e)));\n        this._register(model.onDidChangeLanguage(() => this.onConfigurationChange(undefined, true)));\n        super.installModelListeners(model);\n    }\n    onModelContentChanged(textEditorModel, e) {\n        if (!this.hasAssociatedFilePath && textEditorModel.getLineCount() === 1 && textEditorModel.getLineContent(1) === '') {\n            this.setDirty(false);\n        }\n        else {\n            this.setDirty(true);\n        }\n        if (( e.changes.some(\n            change => (change.range.startLineNumber === 1 || change.range.endLineNumber === 1) && change.range.startColumn <= UntitledTextEditorModel_1.FIRST_LINE_NAME_CANDIDATE_MAX_LENGTH\n        ))) {\n            this.updateNameFromFirstLine(textEditorModel);\n        }\n        this._onDidChangeContent.fire();\n        this.autoDetectLanguage();\n    }\n    updateNameFromFirstLine(textEditorModel) {\n        if (this.hasAssociatedFilePath) {\n            return;\n        }\n        let modelFirstWordsCandidate = undefined;\n        let firstLineText = textEditorModel\n            .getValueInRange({\n            startLineNumber: 1,\n            endLineNumber: 1,\n            startColumn: 1,\n            endColumn: UntitledTextEditorModel_1.FIRST_LINE_NAME_CANDIDATE_MAX_LENGTH + 1\n        })\n            .trim().replace(/\\s+/g, ' ')\n            .replace(/\\u202E/g, '');\n        firstLineText = firstLineText.substr(0, getCharContainingOffset(\n        firstLineText, UntitledTextEditorModel_1.FIRST_LINE_NAME_MAX_LENGTH)[0]);\n        if (firstLineText && ensureValidWordDefinition().exec(firstLineText)) {\n            modelFirstWordsCandidate = firstLineText;\n        }\n        if (modelFirstWordsCandidate !== this.cachedModelFirstLineWords) {\n            this.cachedModelFirstLineWords = modelFirstWordsCandidate;\n            this._onDidChangeName.fire();\n        }\n    }\n    isReadonly() {\n        return false;\n    }\n};\nUntitledTextEditorModel = UntitledTextEditorModel_1 = ( __decorate([\n    ( __param(5, ILanguageService)),\n    ( __param(6, IModelService)),\n    ( __param(7, IWorkingCopyBackupService)),\n    ( __param(8, ITextResourceConfigurationService)),\n    ( __param(9, IWorkingCopyService)),\n    ( __param(10, ITextFileService)),\n    ( __param(11, ILabelService)),\n    ( __param(12, IEditorService)),\n    ( __param(13, ILanguageDetectionService)),\n    ( __param(14, IAccessibilityService))\n], UntitledTextEditorModel));\nexport { UntitledTextEditorModel };\n", "import { __decorate, __param } from '../../../../../../external/tslib/tslib.es6.js';\nimport { EditorModel } from './editorModel.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { MutableDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { PLAINTEXT_LANGUAGE_ID } from 'monaco-editor/esm/vs/editor/common/languages/modesRegistry.js';\nimport { LanguageDetectionLanguageEventSource, ILanguageDetectionService } from '../../services/languageDetection/common/languageDetectionWorkerService.js';\nimport { ThrottledDelayer } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { IAccessibilityService } from 'monaco-editor/esm/vs/platform/accessibility/common/accessibility.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nvar BaseTextEditorModel_1;\nlet BaseTextEditorModel = class BaseTextEditorModel extends EditorModel {\n    static { BaseTextEditorModel_1 = this; }\n    static { this.AUTO_DETECT_LANGUAGE_THROTTLE_DELAY = 600; }\n    constructor(modelService, languageService, languageDetectionService, accessibilityService, textEditorModelHandle) {\n        super();\n        this.modelService = modelService;\n        this.languageService = languageService;\n        this.languageDetectionService = languageDetectionService;\n        this.accessibilityService = accessibilityService;\n        this.textEditorModelHandle = undefined;\n        this.modelDisposeListener = this._register(( new MutableDisposable()));\n        this.autoDetectLanguageThrottler = this._register(( new ThrottledDelayer(BaseTextEditorModel_1.AUTO_DETECT_LANGUAGE_THROTTLE_DELAY)));\n        this._hasLanguageSetExplicitly = false;\n        if (textEditorModelHandle) {\n            this.handleExistingModel(textEditorModelHandle);\n        }\n    }\n    handleExistingModel(textEditorModelHandle) {\n        const model = this.modelService.getModel(textEditorModelHandle);\n        if (!model) {\n            throw new Error(`Document with resource ${textEditorModelHandle.toString(true)} does not exist`);\n        }\n        this.textEditorModelHandle = textEditorModelHandle;\n        this.registerModelDisposeListener(model);\n    }\n    registerModelDisposeListener(model) {\n        this.modelDisposeListener.value = model.onWillDispose(() => {\n            this.textEditorModelHandle = undefined;\n            this.dispose();\n        });\n    }\n    get textEditorModel() {\n        return this.textEditorModelHandle ? this.modelService.getModel(this.textEditorModelHandle) : null;\n    }\n    isReadonly() {\n        return true;\n    }\n    get hasLanguageSetExplicitly() { return this._hasLanguageSetExplicitly; }\n    setLanguageId(languageId, source) {\n        this._hasLanguageSetExplicitly = true;\n        this.setLanguageIdInternal(languageId, source);\n    }\n    setLanguageIdInternal(languageId, source) {\n        if (!this.isResolved()) {\n            return;\n        }\n        if (!languageId || languageId === this.textEditorModel.getLanguageId()) {\n            return;\n        }\n        this.textEditorModel.setLanguage(this.languageService.createById(languageId), source);\n    }\n    installModelListeners(model) {\n        const disposable = this._register(model.onDidChangeLanguage((e) => {\n            if (e.source === LanguageDetectionLanguageEventSource) {\n                return;\n            }\n            this._hasLanguageSetExplicitly = true;\n            disposable.dispose();\n        }));\n    }\n    getLanguageId() {\n        return this.textEditorModel?.getLanguageId();\n    }\n    autoDetectLanguage() {\n        return this.autoDetectLanguageThrottler.trigger(() => this.doAutoDetectLanguage());\n    }\n    async doAutoDetectLanguage() {\n        if (this.hasLanguageSetExplicitly ||\n            !this.textEditorModelHandle ||\n            !this.languageDetectionService.isEnabledForLanguage(this.getLanguageId() ?? PLAINTEXT_LANGUAGE_ID)\n        ) {\n            return;\n        }\n        const lang = await this.languageDetectionService.detectLanguage(this.textEditorModelHandle);\n        const prevLang = this.getLanguageId();\n        if (lang && lang !== prevLang && !this.isDisposed()) {\n            this.setLanguageIdInternal(lang, LanguageDetectionLanguageEventSource);\n            const languageName = this.languageService.getLanguageName(lang);\n            this.accessibilityService.alert(( localize(\n                'languageAutoDetected',\n                \"Language {0} was automatically detected and set as the language mode.\",\n                languageName ?? lang\n            )));\n        }\n    }\n    createTextEditorModel(value, resource, preferredLanguageId) {\n        const firstLineText = this.getFirstLineText(value);\n        const languageSelection = this.getOrCreateLanguage(resource, this.languageService, preferredLanguageId, firstLineText);\n        return this.doCreateTextEditorModel(value, languageSelection, resource);\n    }\n    doCreateTextEditorModel(value, languageSelection, resource) {\n        let model = resource && this.modelService.getModel(resource);\n        if (!model) {\n            model = this.modelService.createModel(value, languageSelection, resource);\n            this.createdEditorModel = true;\n            this.registerModelDisposeListener(model);\n        }\n        else {\n            this.updateTextEditorModel(value, languageSelection.languageId);\n        }\n        this.textEditorModelHandle = model.uri;\n        return model;\n    }\n    getFirstLineText(value) {\n        const textBufferFactory = value;\n        if (typeof textBufferFactory.getFirstLineText === 'function') {\n            return textBufferFactory.getFirstLineText(1000 );\n        }\n        const textSnapshot = value;\n        return textSnapshot.getLineContent(1).substr(0, 1000 );\n    }\n    getOrCreateLanguage(resource, languageService, preferredLanguage, firstLineText) {\n        if (!preferredLanguage || preferredLanguage === PLAINTEXT_LANGUAGE_ID) {\n            return languageService.createByFilepathOrFirstLine(resource ?? null, firstLineText);\n        }\n        return languageService.createById(preferredLanguage);\n    }\n    updateTextEditorModel(newValue, preferredLanguageId) {\n        if (!this.isResolved()) {\n            return;\n        }\n        if (newValue) {\n            this.modelService.updateModel(this.textEditorModel, newValue);\n        }\n        if (preferredLanguageId && preferredLanguageId !== PLAINTEXT_LANGUAGE_ID && this.textEditorModel.getLanguageId() !== preferredLanguageId) {\n            this.textEditorModel.setLanguage(this.languageService.createById(preferredLanguageId));\n        }\n    }\n    createSnapshot() {\n        if (!this.textEditorModel) {\n            return null;\n        }\n        return this.textEditorModel.createSnapshot(true );\n    }\n    isResolved() {\n        return !!this.textEditorModelHandle;\n    }\n    dispose() {\n        this.modelDisposeListener.dispose();\n        if (this.textEditorModelHandle && this.createdEditorModel) {\n            this.modelService.destroyModel(this.textEditorModelHandle);\n        }\n        this.textEditorModelHandle = undefined;\n        this.createdEditorModel = false;\n        super.dispose();\n    }\n};\nBaseTextEditorModel = BaseTextEditorModel_1 = ( __decorate([\n    ( __param(0, IModelService)),\n    ( __param(1, ILanguageService)),\n    ( __param(2, ILanguageDetectionService)),\n    ( __param(3, IAccessibilityService))\n], BaseTextEditorModel));\nexport { BaseTextEditorModel };\n", "import { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nclass EditorModel extends Disposable {\n    constructor() {\n        super(...arguments);\n        this._onWillDispose = this._register(( new Emitter()));\n        this.onWillDispose = this._onWillDispose.event;\n        this.disposed = false;\n        this.resolved = false;\n    }\n    async resolve() {\n        this.resolved = true;\n    }\n    isResolved() {\n        return this.resolved;\n    }\n    isDisposed() {\n        return this.disposed;\n    }\n    dispose() {\n        this.disposed = true;\n        this._onWillDispose.fire();\n        super.dispose();\n    }\n}\nexport { EditorModel };\n", "const NO_TYPE_ID = '';\nexport { NO_TYPE_ID };\n", "import { newWriteableStream, listenStream } from 'monaco-editor/esm/vs/base/common/stream.js';\nimport { VSBuffer } from 'monaco-editor/esm/vs/base/common/buffer.js';\nimport { CancellationTokenSource } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nconst UTF8 = 'utf8';\nconst UTF8_with_bom = 'utf8bom';\nconst UTF16be = 'utf16be';\nconst UTF16le = 'utf16le';\nconst UTF16be_BOM = [0xFE, 0xFF];\nconst UTF16le_BOM = [0xFF, 0xFE];\nconst UTF8_BOM = [0xEF, 0xBB, 0xBF];\nconst ZERO_BYTE_DETECTION_BUFFER_MAX_LEN = 512;\nconst NO_ENCODING_GUESS_MIN_BYTES = 512;\nconst AUTO_ENCODING_GUESS_MIN_BYTES = 512 * 8;\nconst AUTO_ENCODING_GUESS_MAX_BYTES = 512 * 128;\nclass DecodeStreamError extends Error {\n    constructor(message, decodeStreamErrorKind) {\n        super(message);\n        this.decodeStreamErrorKind = decodeStreamErrorKind;\n    }\n}\nclass DecoderStream {\n    static async create(encoding) {\n        let decoder = undefined;\n        if (encoding !== UTF8) {\n            const iconv = await import('../../../../../../../override/iconv.js').then(module => module.default ?? module);\n            decoder = iconv.getDecoder(toNodeEncoding(encoding));\n        }\n        else {\n            const utf8TextDecoder = ( new TextDecoder());\n            decoder = {\n                write(buffer) {\n                    return utf8TextDecoder.decode(buffer, {\n                        stream: true\n                    });\n                },\n                end() {\n                    return utf8TextDecoder.decode();\n                }\n            };\n        }\n        return ( new DecoderStream(decoder));\n    }\n    constructor(iconvLiteDecoder) {\n        this.iconvLiteDecoder = iconvLiteDecoder;\n    }\n    write(buffer) {\n        return this.iconvLiteDecoder.write(buffer);\n    }\n    end() {\n        return this.iconvLiteDecoder.end();\n    }\n}\nfunction toDecodeStream(source, options) {\n    const minBytesRequiredForDetection = options.minBytesRequiredForDetection ?? options.guessEncoding ? AUTO_ENCODING_GUESS_MIN_BYTES : NO_ENCODING_GUESS_MIN_BYTES;\n    return ( new Promise((resolve, reject) => {\n        const target = newWriteableStream(strings => strings.join(''));\n        const bufferedChunks = [];\n        let bytesBuffered = 0;\n        let decoder = undefined;\n        const cts = ( new CancellationTokenSource());\n        const createDecoder = async () => {\n            try {\n                const detected = await detectEncodingFromBuffer({\n                    buffer: VSBuffer.concat(bufferedChunks),\n                    bytesRead: bytesBuffered\n                }, options.guessEncoding);\n                if (detected.seemsBinary && options.acceptTextOnly) {\n                    throw new DecodeStreamError('Stream is binary but only text is accepted for decoding', 1 );\n                }\n                detected.encoding = await options.overwriteEncoding(detected.encoding);\n                decoder = await DecoderStream.create(detected.encoding);\n                const decoded = decoder.write(VSBuffer.concat(bufferedChunks).buffer);\n                target.write(decoded);\n                bufferedChunks.length = 0;\n                bytesBuffered = 0;\n                resolve({\n                    stream: target,\n                    detected\n                });\n            }\n            catch (error) {\n                cts.cancel();\n                target.destroy();\n                reject(error);\n            }\n        };\n        listenStream(source, {\n            onData: async (chunk) => {\n                if (decoder) {\n                    target.write(decoder.write(chunk.buffer));\n                }\n                else {\n                    bufferedChunks.push(chunk);\n                    bytesBuffered += chunk.byteLength;\n                    if (bytesBuffered >= minBytesRequiredForDetection) {\n                        source.pause();\n                        await createDecoder();\n                        setTimeout(() => source.resume());\n                    }\n                }\n            },\n            onError: error => target.error(error),\n            onEnd: async () => {\n                if (!decoder) {\n                    await createDecoder();\n                }\n                target.end(decoder?.end());\n            }\n        }, cts.token);\n    }));\n}\nasync function toEncodeReadable(readable, encoding, options) {\n    const iconv = await import('../../../../../../../override/iconv.js').then(module => module.default ?? module);\n    const encoder = iconv.getEncoder(toNodeEncoding(encoding), options);\n    let bytesWritten = false;\n    let done = false;\n    return {\n        read() {\n            if (done) {\n                return null;\n            }\n            const chunk = readable.read();\n            if (typeof chunk !== 'string') {\n                done = true;\n                if (!bytesWritten && options?.addBOM) {\n                    switch (encoding) {\n                        case UTF8:\n                        case UTF8_with_bom:\n                            return VSBuffer.wrap(Uint8Array.from(UTF8_BOM));\n                        case UTF16be:\n                            return VSBuffer.wrap(Uint8Array.from(UTF16be_BOM));\n                        case UTF16le:\n                            return VSBuffer.wrap(Uint8Array.from(UTF16le_BOM));\n                    }\n                }\n                const leftovers = encoder.end();\n                if (leftovers && leftovers.length > 0) {\n                    bytesWritten = true;\n                    return VSBuffer.wrap(leftovers);\n                }\n                return null;\n            }\n            bytesWritten = true;\n            return VSBuffer.wrap(encoder.write(chunk));\n        }\n    };\n}\nasync function encodingExists(encoding) {\n    const iconv = await import('../../../../../../../override/iconv.js').then(module => module.default ?? module);\n    return iconv.encodingExists(toNodeEncoding(encoding));\n}\nfunction toNodeEncoding(enc) {\n    if (enc === UTF8_with_bom || enc === null) {\n        return UTF8;\n    }\n    return enc;\n}\nfunction detectEncodingByBOMFromBuffer(buffer, bytesRead) {\n    if (!buffer || bytesRead < UTF16be_BOM.length) {\n        return null;\n    }\n    const b0 = buffer.readUInt8(0);\n    const b1 = buffer.readUInt8(1);\n    if (b0 === UTF16be_BOM[0] && b1 === UTF16be_BOM[1]) {\n        return UTF16be;\n    }\n    if (b0 === UTF16le_BOM[0] && b1 === UTF16le_BOM[1]) {\n        return UTF16le;\n    }\n    if (bytesRead < UTF8_BOM.length) {\n        return null;\n    }\n    const b2 = buffer.readUInt8(2);\n    if (b0 === UTF8_BOM[0] && b1 === UTF8_BOM[1] && b2 === UTF8_BOM[2]) {\n        return UTF8_with_bom;\n    }\n    return null;\n}\nconst IGNORE_ENCODINGS = ['ascii', 'utf-16', 'utf-32'];\nasync function guessEncodingByBuffer(buffer) {\n    const jschardet = await import('../../../../../../../override/jschardet.js').then(module => module.default ?? module);\n    const limitedBuffer = buffer.slice(0, AUTO_ENCODING_GUESS_MAX_BYTES);\n    const binaryString = encodeLatin1(limitedBuffer.buffer);\n    const guessed = jschardet.detect(binaryString);\n    if (!guessed || !guessed.encoding) {\n        return null;\n    }\n    const enc = guessed.encoding.toLowerCase();\n    if (0 <= IGNORE_ENCODINGS.indexOf(enc)) {\n        return null;\n    }\n    return toIconvLiteEncoding(guessed.encoding);\n}\nconst JSCHARDET_TO_ICONV_ENCODINGS = {\n    'ibm866': 'cp866',\n    'big5': 'cp950'\n};\nfunction toIconvLiteEncoding(encodingName) {\n    const normalizedEncodingName = encodingName.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n    const mapped = JSCHARDET_TO_ICONV_ENCODINGS[normalizedEncodingName];\n    return mapped || normalizedEncodingName;\n}\nfunction encodeLatin1(buffer) {\n    let result = '';\n    for (let i = 0; i < buffer.length; i++) {\n        result += String.fromCharCode(buffer[i]);\n    }\n    return result;\n}\nfunction detectEncodingFromBuffer({ buffer, bytesRead }, autoGuessEncoding) {\n    let encoding = detectEncodingByBOMFromBuffer(buffer, bytesRead);\n    let seemsBinary = false;\n    if (encoding !== UTF16be && encoding !== UTF16le && buffer) {\n        let couldBeUTF16LE = true;\n        let couldBeUTF16BE = true;\n        let containsZeroByte = false;\n        for (let i = 0; i < bytesRead && i < ZERO_BYTE_DETECTION_BUFFER_MAX_LEN; i++) {\n            const isEndian = (i % 2 === 1);\n            const isZeroByte = (buffer.readUInt8(i) === 0);\n            if (isZeroByte) {\n                containsZeroByte = true;\n            }\n            if (couldBeUTF16LE && (isEndian && !isZeroByte || !isEndian && isZeroByte)) {\n                couldBeUTF16LE = false;\n            }\n            if (couldBeUTF16BE && (isEndian && isZeroByte || !isEndian && !isZeroByte)) {\n                couldBeUTF16BE = false;\n            }\n            if (isZeroByte && !couldBeUTF16LE && !couldBeUTF16BE) {\n                break;\n            }\n        }\n        if (containsZeroByte) {\n            if (couldBeUTF16LE) {\n                encoding = UTF16le;\n            }\n            else if (couldBeUTF16BE) {\n                encoding = UTF16be;\n            }\n            else {\n                seemsBinary = true;\n            }\n        }\n    }\n    if (autoGuessEncoding && !seemsBinary && !encoding && buffer) {\n        return guessEncodingByBuffer(buffer.slice(0, bytesRead)).then(guessedEncoding => {\n            return {\n                seemsBinary: false,\n                encoding: guessedEncoding\n            };\n        });\n    }\n    return { seemsBinary, encoding };\n}\nconst SUPPORTED_ENCODINGS = {\n    utf8: {\n        labelLong: 'UTF-8',\n        labelShort: 'UTF-8',\n        order: 1,\n        alias: 'utf8bom'\n    },\n    utf8bom: {\n        labelLong: 'UTF-8 with BOM',\n        labelShort: 'UTF-8 with BOM',\n        encodeOnly: true,\n        order: 2,\n        alias: 'utf8'\n    },\n    utf16le: {\n        labelLong: 'UTF-16 LE',\n        labelShort: 'UTF-16 LE',\n        order: 3\n    },\n    utf16be: {\n        labelLong: 'UTF-16 BE',\n        labelShort: 'UTF-16 BE',\n        order: 4\n    },\n    windows1252: {\n        labelLong: 'Western (Windows 1252)',\n        labelShort: 'Windows 1252',\n        order: 5\n    },\n    iso88591: {\n        labelLong: 'Western (ISO 8859-1)',\n        labelShort: 'ISO 8859-1',\n        order: 6\n    },\n    iso88593: {\n        labelLong: 'Western (ISO 8859-3)',\n        labelShort: 'ISO 8859-3',\n        order: 7\n    },\n    iso885915: {\n        labelLong: 'Western (ISO 8859-15)',\n        labelShort: 'ISO 8859-15',\n        order: 8\n    },\n    macroman: {\n        labelLong: 'Western (Mac Roman)',\n        labelShort: 'Mac Roman',\n        order: 9\n    },\n    cp437: {\n        labelLong: 'DOS (CP 437)',\n        labelShort: 'CP437',\n        order: 10\n    },\n    windows1256: {\n        labelLong: 'Arabic (Windows 1256)',\n        labelShort: 'Windows 1256',\n        order: 11\n    },\n    iso88596: {\n        labelLong: 'Arabic (ISO 8859-6)',\n        labelShort: 'ISO 8859-6',\n        order: 12\n    },\n    windows1257: {\n        labelLong: 'Baltic (Windows 1257)',\n        labelShort: 'Windows 1257',\n        order: 13\n    },\n    iso88594: {\n        labelLong: 'Baltic (ISO 8859-4)',\n        labelShort: 'ISO 8859-4',\n        order: 14\n    },\n    iso885914: {\n        labelLong: 'Celtic (ISO 8859-14)',\n        labelShort: 'ISO 8859-14',\n        order: 15\n    },\n    windows1250: {\n        labelLong: 'Central European (Windows 1250)',\n        labelShort: 'Windows 1250',\n        order: 16\n    },\n    iso88592: {\n        labelLong: 'Central European (ISO 8859-2)',\n        labelShort: 'ISO 8859-2',\n        order: 17\n    },\n    cp852: {\n        labelLong: 'Central European (CP 852)',\n        labelShort: 'CP 852',\n        order: 18\n    },\n    windows1251: {\n        labelLong: 'Cyrillic (Windows 1251)',\n        labelShort: 'Windows 1251',\n        order: 19\n    },\n    cp866: {\n        labelLong: 'Cyrillic (CP 866)',\n        labelShort: 'CP 866',\n        order: 20\n    },\n    iso88595: {\n        labelLong: 'Cyrillic (ISO 8859-5)',\n        labelShort: 'ISO 8859-5',\n        order: 21\n    },\n    koi8r: {\n        labelLong: 'Cyrillic (KOI8-R)',\n        labelShort: 'KOI8-R',\n        order: 22\n    },\n    koi8u: {\n        labelLong: 'Cyrillic (KOI8-U)',\n        labelShort: 'KOI8-U',\n        order: 23\n    },\n    iso885913: {\n        labelLong: 'Estonian (ISO 8859-13)',\n        labelShort: 'ISO 8859-13',\n        order: 24\n    },\n    windows1253: {\n        labelLong: 'Greek (Windows 1253)',\n        labelShort: 'Windows 1253',\n        order: 25\n    },\n    iso88597: {\n        labelLong: 'Greek (ISO 8859-7)',\n        labelShort: 'ISO 8859-7',\n        order: 26\n    },\n    windows1255: {\n        labelLong: 'Hebrew (Windows 1255)',\n        labelShort: 'Windows 1255',\n        order: 27\n    },\n    iso88598: {\n        labelLong: 'Hebrew (ISO 8859-8)',\n        labelShort: 'ISO 8859-8',\n        order: 28\n    },\n    iso885910: {\n        labelLong: 'Nordic (ISO 8859-10)',\n        labelShort: 'ISO 8859-10',\n        order: 29\n    },\n    iso885916: {\n        labelLong: 'Romanian (ISO 8859-16)',\n        labelShort: 'ISO 8859-16',\n        order: 30\n    },\n    windows1254: {\n        labelLong: 'Turkish (Windows 1254)',\n        labelShort: 'Windows 1254',\n        order: 31\n    },\n    iso88599: {\n        labelLong: 'Turkish (ISO 8859-9)',\n        labelShort: 'ISO 8859-9',\n        order: 32\n    },\n    windows1258: {\n        labelLong: 'Vietnamese (Windows 1258)',\n        labelShort: 'Windows 1258',\n        order: 33\n    },\n    gbk: {\n        labelLong: 'Simplified Chinese (GBK)',\n        labelShort: 'GBK',\n        order: 34\n    },\n    gb18030: {\n        labelLong: 'Simplified Chinese (GB18030)',\n        labelShort: 'GB18030',\n        order: 35\n    },\n    cp950: {\n        labelLong: 'Traditional Chinese (Big5)',\n        labelShort: 'Big5',\n        order: 36\n    },\n    big5hkscs: {\n        labelLong: 'Traditional Chinese (Big5-HKSCS)',\n        labelShort: 'Big5-HKSCS',\n        order: 37\n    },\n    shiftjis: {\n        labelLong: 'Japanese (Shift JIS)',\n        labelShort: 'Shift JIS',\n        order: 38\n    },\n    eucjp: {\n        labelLong: 'Japanese (EUC-JP)',\n        labelShort: 'EUC-JP',\n        order: 39\n    },\n    euckr: {\n        labelLong: 'Korean (EUC-KR)',\n        labelShort: 'EUC-KR',\n        order: 40\n    },\n    windows874: {\n        labelLong: 'Thai (Windows 874)',\n        labelShort: 'Windows 874',\n        order: 41\n    },\n    iso885911: {\n        labelLong: 'Latin/Thai (ISO 8859-11)',\n        labelShort: 'ISO 8859-11',\n        order: 42\n    },\n    koi8ru: {\n        labelLong: 'Cyrillic (KOI8-RU)',\n        labelShort: 'KOI8-RU',\n        order: 43\n    },\n    koi8t: {\n        labelLong: 'Tajik (KOI8-T)',\n        labelShort: 'KOI8-T',\n        order: 44\n    },\n    gb2312: {\n        labelLong: 'Simplified Chinese (GB 2312)',\n        labelShort: 'GB 2312',\n        order: 45\n    },\n    cp865: {\n        labelLong: 'Nordic DOS (CP 865)',\n        labelShort: 'CP 865',\n        order: 46\n    },\n    cp850: {\n        labelLong: 'Western European DOS (CP 850)',\n        labelShort: 'CP 850',\n        order: 47\n    }\n};\nexport { DecodeStreamError, SUPPORTED_ENCODINGS, UTF16be, UTF16be_BOM, UTF16le, UTF16le_BOM, UTF8, UTF8_BOM, UTF8_with_bom, detectEncodingByBOMFromBuffer, detectEncodingFromBuffer, encodingExists, toDecodeStream, toEncodeReadable, toNodeEncoding };\n", "var ConfirmResult;\n( (function(ConfirmResult) {\n    ConfirmResult[ConfirmResult[\"SAVE\"] = 0] = \"SAVE\";\n    ConfirmResult[ConfirmResult[\"DONT_SAVE\"] = 1] = \"DONT_SAVE\";\n    ConfirmResult[ConfirmResult[\"CANCEL\"] = 2] = \"CANCEL\";\n})(ConfirmResult || (ConfirmResult = {})));\nexport { ConfirmResult };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IElevatedFileService = ( createDecorator('elevatedFileService'));\nexport { IElevatedFileService };\n", "class BrowserElevatedFileService {\n    isSupported(resource) {\n        return false;\n    }\n    async writeFileElevated(resource, value, options) {\n        throw new Error('Unsupported');\n    }\n}\nexport { BrowserElevatedFileService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IDecorationsService = ( createDecorator('IFileDecorationsService'));\nexport { IDecorationsService };\n", "import { __decorate, __param } from '../../../../../../external/tslib/tslib.es6.js';\nimport { request } from '../../../base/parts/request/browser/request.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ILoggerService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { AbstractRequestService } from '../common/request.js';\nlet RequestService = class RequestService extends AbstractRequestService {\n    constructor(configurationService, loggerService) {\n        super(loggerService);\n        this.configurationService = configurationService;\n    }\n    async request(options, token) {\n        if (!options.proxyAuthorization) {\n            options.proxyAuthorization = this.configurationService.getValue('http.proxyAuthorization');\n        }\n        return this.logAndRequest('browser', options, () => request(options, token));\n    }\n    async resolveProxy(url) {\n        return undefined;\n    }\n};\nRequestService = ( __decorate([\n    ( __param(0, IConfigurationService)),\n    ( __param(1, ILoggerService))\n], RequestService));\nexport { RequestService };\n", "import { bufferToStream, VSBuffer } from 'monaco-editor/esm/vs/base/common/buffer.js';\nimport { canceled } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { OfflineError } from '../common/request.js';\nfunction request(options, token) {\n    if (options.proxyAuthorization) {\n        options.headers = {\n            ...(options.headers || {}),\n            'Proxy-Authorization': options.proxyAuthorization\n        };\n    }\n    const xhr = ( new XMLHttpRequest());\n    return ( new Promise((resolve, reject) => {\n        xhr.open(options.type || 'GET', options.url || '', true, options.user, options.password);\n        setRequestHeaders(xhr, options);\n        xhr.responseType = 'arraybuffer';\n        xhr.onerror = e => reject(navigator.onLine ? ( new Error(xhr.statusText && ('XHR failed: ' + xhr.statusText) || 'XHR failed')) : ( new OfflineError()));\n        xhr.onload = (e) => {\n            resolve({\n                res: {\n                    statusCode: xhr.status,\n                    headers: getResponseHeaders(xhr)\n                },\n                stream: bufferToStream(VSBuffer.wrap(( new Uint8Array(xhr.response))))\n            });\n        };\n        xhr.ontimeout = e => reject(( new Error(`XHR timeout: ${options.timeout}ms`)));\n        if (options.timeout) {\n            xhr.timeout = options.timeout;\n        }\n        xhr.send(options.data);\n        token.onCancellationRequested(() => {\n            xhr.abort();\n            reject(canceled());\n        });\n    }));\n}\nfunction setRequestHeaders(xhr, options) {\n    if (options.headers) {\n        outer: for (const k in options.headers) {\n            switch (k) {\n                case 'User-Agent':\n                case 'Accept-Encoding':\n                case 'Content-Length':\n                    continue outer;\n            }\n            xhr.setRequestHeader(k, options.headers[k]);\n        }\n    }\n}\nfunction getResponseHeaders(xhr) {\n    const headers = Object.create(null);\n    for (const line of xhr.getAllResponseHeaders().split(/\\r\\n|\\n|\\r/g)) {\n        if (line) {\n            const idx = line.indexOf(':');\n            headers[line.substr(0, idx).trim().toLowerCase()] = line.substr(idx + 1).trim();\n        }\n    }\n    return headers;\n}\nexport { request };\n", "const offlineName = 'Offline';\nclass OfflineError extends Error {\n    constructor() {\n        super(offlineName);\n        this.name = this.message;\n    }\n}\nexport { OfflineError };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { joinPath } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { coalesce } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { deepClone, equals } from 'monaco-editor/esm/vs/base/common/objects.js';\nimport { ResourceQueue, Promises } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { ResourceMap } from 'monaco-editor/esm/vs/base/common/map.js';\nimport { isReadableStream, peekStream } from 'monaco-editor/esm/vs/base/common/stream.js';\nimport { VSBuffer, prefixedBufferStream, prefixedBufferReadable, bufferToStream, streamToBuffer, readableToBuffer } from 'monaco-editor/esm/vs/base/common/buffer.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { hash } from 'monaco-editor/esm/vs/base/common/hash.js';\nimport { isEmptyObject } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { NO_TYPE_ID } from './workingCopy.js';\nvar WorkingCopyBackupServiceImpl_1;\nclass WorkingCopyBackupsModel {\n    static async create(backupRoot, fileService) {\n        const model = ( (new WorkingCopyBackupsModel(backupRoot, fileService)));\n        await model.resolve();\n        return model;\n    }\n    constructor(backupRoot, fileService) {\n        this.backupRoot = backupRoot;\n        this.fileService = fileService;\n        this.cache = ( (new ResourceMap()));\n    }\n    async resolve() {\n        try {\n            const backupRootStat = await this.fileService.resolve(this.backupRoot);\n            if (backupRootStat.children) {\n                await Promises.settled(( (backupRootStat.children\n                    .filter(child => child.isDirectory)\n                    .map(async (backupSchemaFolder) => {\n                    const backupSchemaFolderStat = await this.fileService.resolve(backupSchemaFolder.resource);\n                    if (backupSchemaFolderStat.children) {\n                        for (const backupForSchema of backupSchemaFolderStat.children) {\n                            if (!backupForSchema.isDirectory) {\n                                this.add(backupForSchema.resource);\n                            }\n                        }\n                    }\n                }))));\n            }\n        }\n        catch (error) {\n        }\n    }\n    add(resource, versionId = 0, meta) {\n        this.cache.set(resource, {\n            versionId,\n            meta: deepClone(meta)\n        });\n    }\n    update(resource, meta) {\n        const entry = this.cache.get(resource);\n        if (entry) {\n            entry.meta = deepClone(meta);\n        }\n    }\n    count() {\n        return this.cache.size;\n    }\n    has(resource, versionId, meta) {\n        const entry = this.cache.get(resource);\n        if (!entry) {\n            return false;\n        }\n        if (typeof versionId === 'number' && versionId !== entry.versionId) {\n            return false;\n        }\n        if (meta && !equals(meta, entry.meta)) {\n            return false;\n        }\n        return true;\n    }\n    get() {\n        return Array.from(( (this.cache.keys())));\n    }\n    remove(resource) {\n        this.cache.delete(resource);\n    }\n    clear() {\n        this.cache.clear();\n    }\n}\nlet WorkingCopyBackupServiceImpl = class WorkingCopyBackupServiceImpl extends Disposable {\n    static { WorkingCopyBackupServiceImpl_1 = this; }\n    static { this.PREAMBLE_END_MARKER = '\\n'; }\n    static { this.PREAMBLE_END_MARKER_CHARCODE = '\\n'.charCodeAt(0); }\n    static { this.PREAMBLE_META_SEPARATOR = ' '; }\n    static { this.PREAMBLE_MAX_LENGTH = 10000; }\n    constructor(backupWorkspaceHome, fileService, logService) {\n        super();\n        this.backupWorkspaceHome = backupWorkspaceHome;\n        this.fileService = fileService;\n        this.logService = logService;\n        this.ioOperationQueues = this._register(( (new ResourceQueue())));\n        this.model = undefined;\n        this.initialize(backupWorkspaceHome);\n    }\n    initialize(backupWorkspaceResource) {\n        this.backupWorkspaceHome = backupWorkspaceResource;\n        this.ready = this.doInitialize();\n    }\n    async doInitialize() {\n        this.model = await WorkingCopyBackupsModel.create(this.backupWorkspaceHome, this.fileService);\n        return this.model;\n    }\n    async hasBackups() {\n        const model = await this.ready;\n        await this.joinBackups();\n        return model.count() > 0;\n    }\n    hasBackupSync(identifier, versionId, meta) {\n        if (!this.model) {\n            return false;\n        }\n        const backupResource = this.toBackupResource(identifier);\n        return (\n             (this.model.has(backupResource, versionId, meta))\n        );\n    }\n    async backup(identifier, content, versionId, meta, token) {\n        const model = await this.ready;\n        if (token?.isCancellationRequested) {\n            return;\n        }\n        const backupResource = this.toBackupResource(identifier);\n        if (( (model.has(backupResource, versionId, meta)))) {\n            return;\n        }\n        return this.ioOperationQueues.queueFor(backupResource).queue(async () => {\n            if (token?.isCancellationRequested) {\n                return;\n            }\n            if (( (model.has(backupResource, versionId, meta)))) {\n                return;\n            }\n            let preamble = this.createPreamble(identifier, meta);\n            if (preamble.length >= WorkingCopyBackupServiceImpl_1.PREAMBLE_MAX_LENGTH) {\n                preamble = this.createPreamble(identifier);\n            }\n            const preambleBuffer = VSBuffer.fromString(preamble);\n            let backupBuffer;\n            if (isReadableStream(content)) {\n                backupBuffer = prefixedBufferStream(preambleBuffer, content);\n            }\n            else if (content) {\n                backupBuffer = prefixedBufferReadable(preambleBuffer, content);\n            }\n            else {\n                backupBuffer = VSBuffer.concat([preambleBuffer, VSBuffer.fromString('')]);\n            }\n            await this.fileService.writeFile(backupResource, backupBuffer);\n            model.add(backupResource, versionId, meta);\n        });\n    }\n    createPreamble(identifier, meta) {\n        return `${( ( identifier.resource.toString()))}${WorkingCopyBackupServiceImpl_1.PREAMBLE_META_SEPARATOR}${JSON.stringify({ ...meta, typeId: identifier.typeId })}${WorkingCopyBackupServiceImpl_1.PREAMBLE_END_MARKER}`;\n    }\n    async discardBackups(filter) {\n        const model = await this.ready;\n        const except = filter?.except;\n        if (Array.isArray(except) && except.length > 0) {\n            const exceptMap = ( (new ResourceMap()));\n            for (const exceptWorkingCopy of except) {\n                exceptMap.set(this.toBackupResource(exceptWorkingCopy), true);\n            }\n            await Promises.settled(( (model.get().map(async (backupResource) => {\n                if (!( (exceptMap.has(backupResource)))) {\n                    await this.doDiscardBackup(backupResource);\n                }\n            }))));\n        }\n        else {\n            await this.deleteIgnoreFileNotFound(this.backupWorkspaceHome);\n            model.clear();\n        }\n    }\n    discardBackup(identifier, token) {\n        const backupResource = this.toBackupResource(identifier);\n        return this.doDiscardBackup(backupResource, token);\n    }\n    async doDiscardBackup(backupResource, token) {\n        const model = await this.ready;\n        if (token?.isCancellationRequested) {\n            return;\n        }\n        return this.ioOperationQueues.queueFor(backupResource).queue(async () => {\n            if (token?.isCancellationRequested) {\n                return;\n            }\n            await this.deleteIgnoreFileNotFound(backupResource);\n            model.remove(backupResource);\n        });\n    }\n    async deleteIgnoreFileNotFound(backupResource) {\n        try {\n            await this.fileService.del(backupResource, { recursive: true });\n        }\n        catch (error) {\n            if (error.fileOperationResult !== 1 ) {\n                throw error;\n            }\n        }\n    }\n    async getBackups() {\n        const model = await this.ready;\n        await this.joinBackups();\n        const backups = await Promise.all(( (model.get().map(backupResource => this.resolveIdentifier(backupResource, model)))));\n        return coalesce(backups);\n    }\n    async resolveIdentifier(backupResource, model) {\n        let res = undefined;\n        await this.ioOperationQueues.queueFor(backupResource).queue(async () => {\n            if (!( (model.has(backupResource)))) {\n                return;\n            }\n            const backupPreamble = await this.readToMatchingString(backupResource, WorkingCopyBackupServiceImpl_1.PREAMBLE_END_MARKER, WorkingCopyBackupServiceImpl_1.PREAMBLE_MAX_LENGTH);\n            if (!backupPreamble) {\n                return;\n            }\n            const metaStartIndex = backupPreamble.indexOf(WorkingCopyBackupServiceImpl_1.PREAMBLE_META_SEPARATOR);\n            let resourcePreamble;\n            let metaPreamble;\n            if (metaStartIndex > 0) {\n                resourcePreamble = backupPreamble.substring(0, metaStartIndex);\n                metaPreamble = backupPreamble.substr(metaStartIndex + 1);\n            }\n            else {\n                resourcePreamble = backupPreamble;\n                metaPreamble = undefined;\n            }\n            const { typeId, meta } = this.parsePreambleMeta(metaPreamble);\n            model.update(backupResource, meta);\n            res = {\n                typeId: typeId ?? NO_TYPE_ID,\n                resource: ( (URI.parse(resourcePreamble)))\n            };\n        });\n        return res;\n    }\n    async readToMatchingString(backupResource, matchingString, maximumBytesToRead) {\n        const contents = ( ((await this.fileService.readFile(backupResource, { length: maximumBytesToRead })).value.toString()));\n        const matchingStringIndex = contents.indexOf(matchingString);\n        if (matchingStringIndex >= 0) {\n            return contents.substr(0, matchingStringIndex);\n        }\n        return undefined;\n    }\n    async resolve(identifier) {\n        const backupResource = this.toBackupResource(identifier);\n        const model = await this.ready;\n        let res = undefined;\n        await this.ioOperationQueues.queueFor(backupResource).queue(async () => {\n            if (!( (model.has(backupResource)))) {\n                return;\n            }\n            const backupStream = await this.fileService.readFileStream(backupResource);\n            const peekedBackupStream = await peekStream(backupStream.value, 1);\n            const firstBackupChunk = VSBuffer.concat(peekedBackupStream.buffer);\n            const preambleEndIndex = firstBackupChunk.buffer.indexOf(WorkingCopyBackupServiceImpl_1.PREAMBLE_END_MARKER_CHARCODE);\n            if (preambleEndIndex === -1) {\n                this.logService.trace(`Backup: Could not find meta end marker in ${backupResource}. The file is probably corrupt (filesize: ${backupStream.size}).`);\n                return undefined;\n            }\n            const preambelRaw = ( (firstBackupChunk.slice(0, preambleEndIndex).toString()));\n            let meta;\n            const metaStartIndex = preambelRaw.indexOf(WorkingCopyBackupServiceImpl_1.PREAMBLE_META_SEPARATOR);\n            if (metaStartIndex !== -1) {\n                meta = this.parsePreambleMeta(preambelRaw.substr(metaStartIndex + 1)).meta;\n            }\n            model.update(backupResource, meta);\n            const firstBackupChunkWithoutPreamble = firstBackupChunk.slice(preambleEndIndex + 1);\n            let value;\n            if (peekedBackupStream.ended) {\n                value = bufferToStream(firstBackupChunkWithoutPreamble);\n            }\n            else {\n                value = prefixedBufferStream(firstBackupChunkWithoutPreamble, peekedBackupStream.stream);\n            }\n            res = { value, meta };\n        });\n        return res;\n    }\n    parsePreambleMeta(preambleMetaRaw) {\n        let typeId = undefined;\n        let meta = undefined;\n        if (preambleMetaRaw) {\n            try {\n                meta = JSON.parse(preambleMetaRaw);\n                typeId = meta?.typeId;\n                if (typeof meta?.typeId === 'string') {\n                    delete meta.typeId;\n                    if (isEmptyObject(meta)) {\n                        meta = undefined;\n                    }\n                }\n            }\n            catch (error) {\n            }\n        }\n        return { typeId, meta };\n    }\n    toBackupResource(identifier) {\n        return joinPath(this.backupWorkspaceHome, identifier.resource.scheme, hashIdentifier(identifier));\n    }\n    joinBackups() {\n        return this.ioOperationQueues.whenDrained();\n    }\n};\nWorkingCopyBackupServiceImpl = WorkingCopyBackupServiceImpl_1 = ( (__decorate([\n    ( (__param(1, IFileService))),\n    ( (__param(2, ILogService)))\n], WorkingCopyBackupServiceImpl)));\nclass InMemoryWorkingCopyBackupService {\n    constructor() {\n        this.backups = ( (new ResourceMap()));\n    }\n    async hasBackups() {\n        return this.backups.size > 0;\n    }\n    hasBackupSync(identifier, versionId) {\n        const backupResource = this.toBackupResource(identifier);\n        return (\n             (this.backups.has(backupResource))\n        );\n    }\n    async backup(identifier, content, versionId, meta, token) {\n        const backupResource = this.toBackupResource(identifier);\n        this.backups.set(backupResource, {\n            typeId: identifier.typeId,\n            content: content instanceof VSBuffer ? content : content ? isReadableStream(content) ? await streamToBuffer(content) : readableToBuffer(content) : VSBuffer.fromString(''),\n            meta\n        });\n    }\n    async resolve(identifier) {\n        const backupResource = this.toBackupResource(identifier);\n        const backup = this.backups.get(backupResource);\n        if (backup) {\n            return { value: bufferToStream(backup.content), meta: backup.meta };\n        }\n        return undefined;\n    }\n    async getBackups() {\n        return (\n             (Array.from(this.backups.entries()).map(([resource, backup]) => ({ typeId: backup.typeId, resource })))\n        );\n    }\n    async discardBackup(identifier) {\n        this.backups.delete(this.toBackupResource(identifier));\n    }\n    async discardBackups(filter) {\n        const except = filter?.except;\n        if (Array.isArray(except) && except.length > 0) {\n            const exceptMap = ( (new ResourceMap()));\n            for (const exceptWorkingCopy of except) {\n                exceptMap.set(this.toBackupResource(exceptWorkingCopy), true);\n            }\n            for (const backup of await this.getBackups()) {\n                if (!( (exceptMap.has(this.toBackupResource(backup))))) {\n                    await this.discardBackup(backup);\n                }\n            }\n        }\n        else {\n            this.backups.clear();\n        }\n    }\n    toBackupResource(identifier) {\n        return (\n             (URI.from({ scheme: Schemas.inMemory, path: hashIdentifier(identifier) }))\n        );\n    }\n    async joinBackups() {\n        return;\n    }\n}\nfunction hashIdentifier(identifier) {\n    let resource;\n    if (identifier.typeId.length > 0) {\n        const typeIdHash = hashString(identifier.typeId);\n        if (identifier.resource.path) {\n            resource = joinPath(identifier.resource, typeIdHash);\n        }\n        else {\n            resource = identifier.resource.with({ path: typeIdHash });\n        }\n    }\n    else {\n        resource = identifier.resource;\n    }\n    return hashPath(resource);\n}\nfunction hashPath(resource) {\n    const str = resource.scheme === Schemas.file || resource.scheme === Schemas.untitled ? resource.fsPath : ( (resource.toString()));\n    return hashString(str);\n}\nfunction hashString(str) {\n    return (\n         (hash(str).toString(16))\n    );\n}\nexport { InMemoryWorkingCopyBackupService, WorkingCopyBackupsModel, hashIdentifier };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { AbstractTextFileService } from './textFileService.js';\nimport { IWorkbenchEnvironmentService } from '../../environment/common/environmentService.js';\nimport { ICodeEditorService } from 'monaco-editor/esm/vs/editor/browser/services/codeEditorService.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { ITextResourceConfigurationService } from 'monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js';\nimport '../../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { IElevatedFileService } from '../../files/common/elevatedFileService.js';\nimport { IFilesConfigurationService } from '../../filesConfiguration/common/filesConfigurationService.js';\nimport { ILifecycleService } from '../../lifecycle/common/lifecycle.js';\nimport { IPathService } from '../../path/common/pathService.js';\nimport { IUntitledTextEditorService } from '../../untitled/common/untitledTextEditorService.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { IWorkingCopyFileService } from '../../workingCopy/common/workingCopyFileService.js';\nimport { IDecorationsService } from '../../decorations/common/decorations.js';\nimport { IDialogService, IFileDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nlet BrowserTextFileService = class BrowserTextFileService extends AbstractTextFileService {\n    constructor(fileService, untitledTextEditorService, lifecycleService, instantiationService, modelService, environmentService, dialogService, fileDialogService, textResourceConfigurationService, filesConfigurationService, codeEditorService, pathService, workingCopyFileService, uriIdentityService, languageService, elevatedFileService, logService, decorationsService) {\n        super(fileService, untitledTextEditorService, lifecycleService, instantiationService, modelService, environmentService, dialogService, fileDialogService, textResourceConfigurationService, filesConfigurationService, codeEditorService, pathService, workingCopyFileService, uriIdentityService, languageService, logService, elevatedFileService, decorationsService);\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.lifecycleService.onBeforeShutdown(event => event.veto(this.onBeforeShutdown(), 'veto.textFiles')));\n    }\n    onBeforeShutdown() {\n        if (( this.files.models.some(model => model.hasState(2 )))) {\n            return true;\n        }\n        return false;\n    }\n};\nBrowserTextFileService = ( __decorate([\n    ( __param(0, IFileService)),\n    ( __param(1, IUntitledTextEditorService)),\n    ( __param(2, ILifecycleService)),\n    ( __param(3, IInstantiationService)),\n    ( __param(4, IModelService)),\n    ( __param(5, IWorkbenchEnvironmentService)),\n    ( __param(6, IDialogService)),\n    ( __param(7, IFileDialogService)),\n    ( __param(8, ITextResourceConfigurationService)),\n    ( __param(9, IFilesConfigurationService)),\n    ( __param(10, ICodeEditorService)),\n    ( __param(11, IPathService)),\n    ( __param(12, IWorkingCopyFileService)),\n    ( __param(13, IUriIdentityService)),\n    ( __param(14, ILanguageService)),\n    ( __param(15, IElevatedFileService)),\n    ( __param(16, ILogService)),\n    ( __param(17, IDecorationsService))\n], BrowserTextFileService));\nexport { BrowserTextFileService };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { TextFileOperationError, toBufferOrReadable, stringToSnapshot } from '../common/textfiles.js';\nimport { SaveSourceRegistry } from '../../../common/editor.js';\nimport { ILifecycleService } from '../../lifecycle/common/lifecycle.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { extname } from 'monaco-editor/esm/vs/base/common/path.js';\nimport { IWorkbenchEnvironmentService } from '../../environment/common/environmentService.js';\nimport { IUntitledTextEditorService } from '../../untitled/common/untitledTextEditorService.js';\nimport { UntitledTextEditorModel } from '../../untitled/common/untitledTextEditorModel.js';\nimport { TextFileEditorModelManager } from '../common/textFileEditorModelManager.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { createTextBufferFactoryFromStream, createTextBufferFactoryFromSnapshot } from 'monaco-editor/esm/vs/editor/common/model/textModel.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { isEqual, toLocalResource, basename, dirname, joinPath, extname as extname$1 } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport '../../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { bufferToStream } from 'monaco-editor/esm/vs/base/common/buffer.js';\nimport { ITextResourceConfigurationService } from 'monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js';\nimport { PLAINTEXT_LANGUAGE_ID } from 'monaco-editor/esm/vs/editor/common/languages/modesRegistry.js';\nimport { IFilesConfigurationService } from '../../filesConfiguration/common/filesConfigurationService.js';\nimport { BaseTextEditorModel } from '../../../common/editor/textEditorModel.js';\nimport { ICodeEditorService } from 'monaco-editor/esm/vs/editor/browser/services/codeEditorService.js';\nimport { IPathService } from '../../path/common/pathService.js';\nimport { IWorkingCopyFileService } from '../../workingCopy/common/workingCopyFileService.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { WORKSPACE_EXTENSION, IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { UTF8, toEncodeReadable, toDecodeStream, UTF16be, UTF16le, UTF8_with_bom, encodingExists } from '../common/encoding.js';\nimport { consumeStream } from 'monaco-editor/esm/vs/base/common/stream.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { CancellationToken, CancellationTokenSource } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { IElevatedFileService } from '../../files/common/elevatedFileService.js';\nimport { IDecorationsService } from '../../decorations/common/decorations.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { listErrorForeground } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { firstOrDefault } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { IDialogService, IFileDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nvar AbstractTextFileService_1;\nlet AbstractTextFileService = class AbstractTextFileService extends Disposable {\n    static { AbstractTextFileService_1 = this; }\n    static { this.TEXTFILE_SAVE_CREATE_SOURCE = SaveSourceRegistry.registerSource('textFileCreate.source', ( localize('textFileCreate.source', \"File Created\"))); }\n    static { this.TEXTFILE_SAVE_REPLACE_SOURCE = SaveSourceRegistry.registerSource('textFileOverwrite.source', ( localize('textFileOverwrite.source', \"File Replaced\"))); }\n    constructor(fileService, untitledTextEditorService, lifecycleService, instantiationService, modelService, environmentService, dialogService, fileDialogService, textResourceConfigurationService, filesConfigurationService, codeEditorService, pathService, workingCopyFileService, uriIdentityService, languageService, logService, elevatedFileService, decorationsService) {\n        super();\n        this.fileService = fileService;\n        this.untitledTextEditorService = untitledTextEditorService;\n        this.lifecycleService = lifecycleService;\n        this.instantiationService = instantiationService;\n        this.modelService = modelService;\n        this.environmentService = environmentService;\n        this.dialogService = dialogService;\n        this.fileDialogService = fileDialogService;\n        this.textResourceConfigurationService = textResourceConfigurationService;\n        this.filesConfigurationService = filesConfigurationService;\n        this.codeEditorService = codeEditorService;\n        this.pathService = pathService;\n        this.workingCopyFileService = workingCopyFileService;\n        this.uriIdentityService = uriIdentityService;\n        this.languageService = languageService;\n        this.logService = logService;\n        this.elevatedFileService = elevatedFileService;\n        this.decorationsService = decorationsService;\n        this.files = this._register(this.instantiationService.createInstance(TextFileEditorModelManager));\n        this.untitled = this.untitledTextEditorService;\n        this.provideDecorations();\n    }\n    provideDecorations() {\n        const provider = this._register(new (class extends Disposable {\n            constructor(files) {\n                super();\n                this.files = files;\n                this.label = ( localize('textFileModelDecorations', \"Text File Model Decorations\"));\n                this._onDidChange = this._register(( new Emitter()));\n                this.onDidChange = this._onDidChange.event;\n                this.registerListeners();\n            }\n            registerListeners() {\n                this._register(this.files.onDidResolve(({ model }) => {\n                    if (model.isReadonly() || model.hasState(4 )) {\n                        this._onDidChange.fire([model.resource]);\n                    }\n                }));\n                this._register(this.files.onDidRemove(modelUri => this._onDidChange.fire([modelUri])));\n                this._register(this.files.onDidChangeReadonly(model => this._onDidChange.fire([model.resource])));\n                this._register(this.files.onDidChangeOrphaned(model => this._onDidChange.fire([model.resource])));\n            }\n            provideDecorations(uri) {\n                const model = this.files.get(uri);\n                if (!model || model.isDisposed()) {\n                    return undefined;\n                }\n                const isReadonly = model.isReadonly();\n                const isOrphaned = model.hasState(4 );\n                if (isReadonly && isOrphaned) {\n                    return {\n                        color: listErrorForeground,\n                        letter: Codicon.lockSmall,\n                        strikethrough: true,\n                        tooltip: ( localize('readonlyAndDeleted', \"Deleted, Read-only\")),\n                    };\n                }\n                else if (isReadonly) {\n                    return {\n                        letter: Codicon.lockSmall,\n                        tooltip: ( localize('readonly', \"Read-only\")),\n                    };\n                }\n                else if (isOrphaned) {\n                    return {\n                        color: listErrorForeground,\n                        strikethrough: true,\n                        tooltip: ( localize('deleted', \"Deleted\")),\n                    };\n                }\n                return undefined;\n            }\n        })(this.files));\n        this._register(this.decorationsService.registerDecorationsProvider(provider));\n    }\n    get encoding() {\n        if (!this._encoding) {\n            this._encoding = this._register(this.instantiationService.createInstance(EncodingOracle));\n        }\n        return this._encoding;\n    }\n    async read(resource, options) {\n        const [bufferStream, decoder] = await this.doRead(resource, {\n            ...options,\n            preferUnbuffered: true\n        });\n        return {\n            ...bufferStream,\n            encoding: decoder.detected.encoding || UTF8,\n            value: await consumeStream(decoder.stream, strings => strings.join(''))\n        };\n    }\n    async readStream(resource, options) {\n        const [bufferStream, decoder] = await this.doRead(resource, options);\n        return {\n            ...bufferStream,\n            encoding: decoder.detected.encoding || UTF8,\n            value: await createTextBufferFactoryFromStream(decoder.stream)\n        };\n    }\n    async doRead(resource, options) {\n        const cts = ( new CancellationTokenSource());\n        let bufferStream;\n        if (options?.preferUnbuffered) {\n            const content = await this.fileService.readFile(resource, options, cts.token);\n            bufferStream = {\n                ...content,\n                value: bufferToStream(content.value)\n            };\n        }\n        else {\n            bufferStream = await this.fileService.readFileStream(resource, options, cts.token);\n        }\n        try {\n            const decoder = await this.doGetDecodedStream(resource, bufferStream.value, options);\n            return [bufferStream, decoder];\n        }\n        catch (error) {\n            cts.dispose(true);\n            if (error.decodeStreamErrorKind === 1 ) {\n                throw new TextFileOperationError(localize('fileBinaryError', \"File seems to be binary and cannot be opened as text\"), 0 , options);\n            }\n            else {\n                throw error;\n            }\n        }\n    }\n    async create(operations, undoInfo) {\n        const operationsWithContents = await Promise.all(( operations.map(async (operation) => {\n            const contents = await this.getEncodedReadable(operation.resource, operation.value);\n            return {\n                resource: operation.resource,\n                contents,\n                overwrite: operation.options?.overwrite\n            };\n        })));\n        return this.workingCopyFileService.create(operationsWithContents, CancellationToken.None, undoInfo);\n    }\n    async write(resource, value, options) {\n        const readable = await this.getEncodedReadable(resource, value, options);\n        if (options?.writeElevated && this.elevatedFileService.isSupported(resource)) {\n            return this.elevatedFileService.writeFileElevated(resource, readable, options);\n        }\n        return this.fileService.writeFile(resource, readable, options);\n    }\n    async getEncodedReadable(resource, value, options) {\n        const { encoding, addBOM } = await this.encoding.getWriteEncoding(resource, options);\n        if (encoding === UTF8 && !addBOM) {\n            return typeof value === 'undefined'\n                ? undefined\n                : toBufferOrReadable(value);\n        }\n        value = value || '';\n        const snapshot = typeof value === 'string' ? stringToSnapshot(value) : value;\n        return toEncodeReadable(snapshot, encoding, { addBOM });\n    }\n    async getDecodedStream(resource, value, options) {\n        return (await this.doGetDecodedStream(resource, value, options)).stream;\n    }\n    doGetDecodedStream(resource, stream, options) {\n        return toDecodeStream(stream, {\n            acceptTextOnly: options?.acceptTextOnly ?? false,\n            guessEncoding: options?.autoGuessEncoding || this.textResourceConfigurationService.getValue(resource, 'files.autoGuessEncoding'),\n            overwriteEncoding: async (detectedEncoding) => {\n                const { encoding } = await this.encoding.getPreferredReadEncoding(resource, options, detectedEncoding ?? undefined);\n                return encoding;\n            }\n        });\n    }\n    async save(resource, options) {\n        if (resource.scheme === Schemas.untitled) {\n            const model = this.untitled.get(resource);\n            if (model) {\n                let targetUri;\n                if (model.hasAssociatedFilePath) {\n                    targetUri = await this.suggestSavePath(resource);\n                }\n                else {\n                    targetUri = await this.fileDialogService.pickFileToSave(await this.suggestSavePath(resource), options?.availableFileSystems);\n                }\n                if (targetUri) {\n                    return this.saveAs(resource, targetUri, options);\n                }\n            }\n        }\n        else {\n            const model = this.files.get(resource);\n            if (model) {\n                return (await model.save(options)) ? resource : undefined;\n            }\n        }\n        return undefined;\n    }\n    async saveAs(source, target, options) {\n        if (!target) {\n            target = await this.fileDialogService.pickFileToSave(await this.suggestSavePath(options?.suggestedTarget ?? source), options?.availableFileSystems);\n        }\n        if (!target) {\n            return;\n        }\n        if (isEqual(source, target)) {\n            return this.save(source, { ...options, force: true  });\n        }\n        if (this.fileService.hasProvider(source) && this.uriIdentityService.extUri.isEqual(source, target) && (await this.fileService.exists(source))) {\n            await this.workingCopyFileService.move([{ file: { source, target } }], CancellationToken.None);\n            const success = await this.save(source, options);\n            if (!success) {\n                await this.save(target, options);\n            }\n            return target;\n        }\n        return this.doSaveAs(source, target, options);\n    }\n    async doSaveAs(source, target, options) {\n        let success = false;\n        const textFileModel = this.files.get(source);\n        if (textFileModel?.isResolved()) {\n            success = await this.doSaveAsTextFile(textFileModel, source, target, options);\n        }\n        else if (this.fileService.hasProvider(source)) {\n            await this.fileService.copy(source, target, true);\n            success = true;\n        }\n        else {\n            const textModel = this.modelService.getModel(source);\n            if (textModel) {\n                success = await this.doSaveAsTextFile(textModel, source, target, options);\n            }\n        }\n        if (!success) {\n            return undefined;\n        }\n        try {\n            await this.revert(source);\n        }\n        catch (error) {\n            this.logService.error(error);\n        }\n        return target;\n    }\n    async doSaveAsTextFile(sourceModel, source, target, options) {\n        let sourceModelEncoding = undefined;\n        const sourceModelWithEncodingSupport = sourceModel;\n        if (typeof sourceModelWithEncodingSupport.getEncoding === 'function') {\n            sourceModelEncoding = sourceModelWithEncodingSupport.getEncoding();\n        }\n        let targetExists = false;\n        let targetModel = this.files.get(target);\n        if (targetModel?.isResolved()) {\n            targetExists = true;\n        }\n        else {\n            targetExists = await this.fileService.exists(target);\n            if (!targetExists) {\n                await this.create([{ resource: target, value: '' }]);\n            }\n            try {\n                targetModel = await this.files.resolve(target, { encoding: sourceModelEncoding });\n            }\n            catch (error) {\n                if (targetExists) {\n                    if (error.textFileOperationResult === 0  ||\n                        error.fileOperationResult === 7 ) {\n                        await this.fileService.del(target);\n                        return this.doSaveAsTextFile(sourceModel, source, target, options);\n                    }\n                }\n                throw error;\n            }\n        }\n        let write;\n        if (sourceModel instanceof UntitledTextEditorModel && sourceModel.hasAssociatedFilePath && targetExists && this.uriIdentityService.extUri.isEqual(target, toLocalResource(sourceModel.resource, this.environmentService.remoteAuthority, this.pathService.defaultUriScheme))) {\n            write = await this.confirmOverwrite(target);\n        }\n        else {\n            write = true;\n        }\n        if (!write) {\n            return false;\n        }\n        let sourceTextModel = undefined;\n        if (sourceModel instanceof BaseTextEditorModel) {\n            if (sourceModel.isResolved()) {\n                sourceTextModel = sourceModel.textEditorModel ?? undefined;\n            }\n        }\n        else {\n            sourceTextModel = sourceModel;\n        }\n        let targetTextModel = undefined;\n        if (targetModel.isResolved()) {\n            targetTextModel = targetModel.textEditorModel;\n        }\n        if (sourceTextModel && targetTextModel) {\n            targetModel.updatePreferredEncoding(sourceModelEncoding);\n            this.modelService.updateModel(targetTextModel, createTextBufferFactoryFromSnapshot(sourceTextModel.createSnapshot()));\n            const sourceLanguageId = sourceTextModel.getLanguageId();\n            const targetLanguageId = targetTextModel.getLanguageId();\n            if (sourceLanguageId !== PLAINTEXT_LANGUAGE_ID && targetLanguageId === PLAINTEXT_LANGUAGE_ID) {\n                targetTextModel.setLanguage(sourceLanguageId);\n            }\n            const sourceTransientProperties = this.codeEditorService.getTransientModelProperties(sourceTextModel);\n            if (sourceTransientProperties) {\n                for (const [key, value] of sourceTransientProperties) {\n                    this.codeEditorService.setTransientModelProperty(targetTextModel, key, value);\n                }\n            }\n        }\n        if (!options?.source) {\n            options = {\n                ...options,\n                source: targetExists ? AbstractTextFileService_1.TEXTFILE_SAVE_REPLACE_SOURCE : AbstractTextFileService_1.TEXTFILE_SAVE_CREATE_SOURCE\n            };\n        }\n        return targetModel.save(options);\n    }\n    async confirmOverwrite(resource) {\n        const { confirmed } = await this.dialogService.confirm({\n            type: 'warning',\n            message: ( localize(\n                'confirmOverwrite',\n                \"'{0}' already exists. Do you want to replace it?\",\n                basename(resource)\n            )),\n            detail: ( localize(\n                'irreversible',\n                \"A file or folder with the name '{0}' already exists in the folder '{1}'. Replacing it will overwrite its current contents.\",\n                basename(resource),\n                basename(dirname(resource))\n            )),\n            primaryButton: ( localize(\n                { key: 'replaceButtonLabel', comment: ['&& denotes a mnemonic'] },\n                \"&&Replace\"\n            )),\n        });\n        return confirmed;\n    }\n    async suggestSavePath(resource) {\n        if (this.fileService.hasProvider(resource)) {\n            return resource;\n        }\n        const remoteAuthority = this.environmentService.remoteAuthority;\n        const defaultFilePath = await this.fileDialogService.defaultFilePath();\n        let suggestedFilename = undefined;\n        if (resource.scheme === Schemas.untitled) {\n            const model = this.untitled.get(resource);\n            if (model) {\n                if (model.hasAssociatedFilePath) {\n                    return toLocalResource(resource, remoteAuthority, this.pathService.defaultUriScheme);\n                }\n                let nameCandidate;\n                if (await this.pathService.hasValidBasename(joinPath(defaultFilePath, model.name), model.name)) {\n                    nameCandidate = model.name;\n                }\n                else {\n                    nameCandidate = basename(resource);\n                }\n                const languageId = model.getLanguageId();\n                if (languageId && languageId !== PLAINTEXT_LANGUAGE_ID) {\n                    suggestedFilename = this.suggestFilename(languageId, nameCandidate);\n                }\n                else {\n                    suggestedFilename = nameCandidate;\n                }\n            }\n        }\n        if (!suggestedFilename) {\n            suggestedFilename = basename(resource);\n        }\n        return joinPath(defaultFilePath, suggestedFilename);\n    }\n    suggestFilename(languageId, untitledName) {\n        const languageName = this.languageService.getLanguageName(languageId);\n        if (!languageName) {\n            return untitledName;\n        }\n        const untitledExtension = extname(untitledName);\n        const extensions = this.languageService.getExtensions(languageId);\n        if (extensions.includes(untitledExtension)) {\n            return untitledName;\n        }\n        const primaryExtension = firstOrDefault(extensions);\n        if (primaryExtension) {\n            if (untitledExtension) {\n                return `${untitledName.substring(0, untitledName.indexOf(untitledExtension))}${primaryExtension}`;\n            }\n            return `${untitledName}${primaryExtension}`;\n        }\n        const filenames = this.languageService.getFilenames(languageId);\n        if (filenames.includes(untitledName)) {\n            return untitledName;\n        }\n        return firstOrDefault(filenames) ?? untitledName;\n    }\n    async revert(resource, options) {\n        if (resource.scheme === Schemas.untitled) {\n            const model = this.untitled.get(resource);\n            if (model) {\n                return model.revert(options);\n            }\n        }\n        else {\n            const model = this.files.get(resource);\n            if (model && (model.isDirty() || options?.force)) {\n                return model.revert(options);\n            }\n        }\n    }\n    isDirty(resource) {\n        const model = resource.scheme === Schemas.untitled ? this.untitled.get(resource) : this.files.get(resource);\n        if (model) {\n            return model.isDirty();\n        }\n        return false;\n    }\n};\nAbstractTextFileService = AbstractTextFileService_1 = ( __decorate([\n    ( __param(0, IFileService)),\n    ( __param(1, IUntitledTextEditorService)),\n    ( __param(2, ILifecycleService)),\n    ( __param(3, IInstantiationService)),\n    ( __param(4, IModelService)),\n    ( __param(5, IWorkbenchEnvironmentService)),\n    ( __param(6, IDialogService)),\n    ( __param(7, IFileDialogService)),\n    ( __param(8, ITextResourceConfigurationService)),\n    ( __param(9, IFilesConfigurationService)),\n    ( __param(10, ICodeEditorService)),\n    ( __param(11, IPathService)),\n    ( __param(12, IWorkingCopyFileService)),\n    ( __param(13, IUriIdentityService)),\n    ( __param(14, ILanguageService)),\n    ( __param(15, ILogService)),\n    ( __param(16, IElevatedFileService)),\n    ( __param(17, IDecorationsService))\n], AbstractTextFileService));\nlet EncodingOracle = class EncodingOracle extends Disposable {\n    get encodingOverrides() { return this._encodingOverrides; }\n    set encodingOverrides(value) { this._encodingOverrides = value; }\n    constructor(textResourceConfigurationService, environmentService, contextService, uriIdentityService) {\n        super();\n        this.textResourceConfigurationService = textResourceConfigurationService;\n        this.environmentService = environmentService;\n        this.contextService = contextService;\n        this.uriIdentityService = uriIdentityService;\n        this._encodingOverrides = this.getDefaultEncodingOverrides();\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.contextService.onDidChangeWorkspaceFolders(() => this.encodingOverrides = this.getDefaultEncodingOverrides()));\n    }\n    getDefaultEncodingOverrides() {\n        const defaultEncodingOverrides = [];\n        defaultEncodingOverrides.push({ parent: this.environmentService.userRoamingDataHome, encoding: UTF8 });\n        defaultEncodingOverrides.push({ extension: WORKSPACE_EXTENSION, encoding: UTF8 });\n        defaultEncodingOverrides.push({ parent: this.environmentService.untitledWorkspacesHome, encoding: UTF8 });\n        this.contextService.getWorkspace().folders.forEach(folder => {\n            defaultEncodingOverrides.push({ parent: joinPath(folder.uri, '.vscode'), encoding: UTF8 });\n        });\n        return defaultEncodingOverrides;\n    }\n    async getWriteEncoding(resource, options) {\n        const { encoding, hasBOM } = await this.getPreferredWriteEncoding(resource, options ? options.encoding : undefined);\n        return { encoding, addBOM: hasBOM };\n    }\n    async getPreferredWriteEncoding(resource, preferredEncoding) {\n        const resourceEncoding = await this.getEncodingForResource(resource, preferredEncoding);\n        return {\n            encoding: resourceEncoding,\n            hasBOM: resourceEncoding === UTF16be || resourceEncoding === UTF16le || resourceEncoding === UTF8_with_bom\n        };\n    }\n    async getPreferredReadEncoding(resource, options, detectedEncoding) {\n        let preferredEncoding;\n        if (options?.encoding) {\n            if (detectedEncoding === UTF8_with_bom && options.encoding === UTF8) {\n                preferredEncoding = UTF8_with_bom;\n            }\n            else {\n                preferredEncoding = options.encoding;\n            }\n        }\n        else if (typeof detectedEncoding === 'string') {\n            preferredEncoding = detectedEncoding;\n        }\n        else if (this.textResourceConfigurationService.getValue(resource, 'files.encoding') === UTF8_with_bom) {\n            preferredEncoding = UTF8;\n        }\n        const encoding = await this.getEncodingForResource(resource, preferredEncoding);\n        return {\n            encoding,\n            hasBOM: encoding === UTF16be || encoding === UTF16le || encoding === UTF8_with_bom\n        };\n    }\n    async getEncodingForResource(resource, preferredEncoding) {\n        let fileEncoding;\n        const override = this.getEncodingOverride(resource);\n        if (override) {\n            fileEncoding = override;\n        }\n        else if (preferredEncoding) {\n            fileEncoding = preferredEncoding;\n        }\n        else {\n            fileEncoding = this.textResourceConfigurationService.getValue(resource, 'files.encoding');\n        }\n        if (fileEncoding !== UTF8) {\n            if (!fileEncoding || !(await encodingExists(fileEncoding))) {\n                fileEncoding = UTF8;\n            }\n        }\n        return fileEncoding;\n    }\n    getEncodingOverride(resource) {\n        if (this.encodingOverrides?.length) {\n            for (const override of this.encodingOverrides) {\n                if (override.parent && this.uriIdentityService.extUri.isEqualOrParent(resource, override.parent)) {\n                    return override.encoding;\n                }\n                if (override.extension && extname$1(resource) === `.${override.extension}`) {\n                    return override.encoding;\n                }\n            }\n        }\n        return undefined;\n    }\n};\nEncodingOracle = ( __decorate([\n    ( __param(0, ITextResourceConfigurationService)),\n    ( __param(1, IWorkbenchEnvironmentService)),\n    ( __param(2, IWorkspaceContextService)),\n    ( __param(3, IUriIdentityService))\n], EncodingOracle));\nexport { AbstractTextFileService, EncodingOracle };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { toErrorMessage } from 'monaco-editor/esm/vs/base/common/errorMessage.js';\nimport { Emitter, Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { TextFileEditorModel } from './textFileEditorModel.js';\nimport { Disposable, dispose, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ResourceMap } from 'monaco-editor/esm/vs/base/common/map.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { ResourceQueue, Promises } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { onUnexpectedError } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { TextFileSaveParticipant } from './textFileSaveParticipant.js';\nimport { INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { IWorkingCopyFileService } from '../../workingCopy/common/workingCopyFileService.js';\nimport { joinPath, extname } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { createTextBufferFactoryFromSnapshot } from 'monaco-editor/esm/vs/editor/common/model/textModel.js';\nimport { PLAINTEXT_LANGUAGE_ID, PLAINTEXT_EXTENSION } from 'monaco-editor/esm/vs/editor/common/languages/modesRegistry.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nlet TextFileEditorModelManager = class TextFileEditorModelManager extends Disposable {\n    get models() {\n        return [...( this.mapResourceToModel.values())];\n    }\n    constructor(instantiationService, fileService, notificationService, workingCopyFileService, uriIdentityService) {\n        super();\n        this.instantiationService = instantiationService;\n        this.fileService = fileService;\n        this.notificationService = notificationService;\n        this.workingCopyFileService = workingCopyFileService;\n        this.uriIdentityService = uriIdentityService;\n        this._onDidCreate = this._register(( new Emitter()));\n        this.onDidCreate = this._onDidCreate.event;\n        this._onDidResolve = this._register(( new Emitter()));\n        this.onDidResolve = this._onDidResolve.event;\n        this._onDidRemove = this._register(( new Emitter()));\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidChangeDirty = this._register(( new Emitter()));\n        this.onDidChangeDirty = this._onDidChangeDirty.event;\n        this._onDidChangeReadonly = this._register(( new Emitter()));\n        this.onDidChangeReadonly = this._onDidChangeReadonly.event;\n        this._onDidChangeOrphaned = this._register(( new Emitter()));\n        this.onDidChangeOrphaned = this._onDidChangeOrphaned.event;\n        this._onDidSaveError = this._register(( new Emitter()));\n        this.onDidSaveError = this._onDidSaveError.event;\n        this._onDidSave = this._register(( new Emitter()));\n        this.onDidSave = this._onDidSave.event;\n        this._onDidRevert = this._register(( new Emitter()));\n        this.onDidRevert = this._onDidRevert.event;\n        this._onDidChangeEncoding = this._register(( new Emitter()));\n        this.onDidChangeEncoding = this._onDidChangeEncoding.event;\n        this.mapResourceToModel = ( new ResourceMap());\n        this.mapResourceToModelListeners = ( new ResourceMap());\n        this.mapResourceToDisposeListener = ( new ResourceMap());\n        this.mapResourceToPendingModelResolvers = ( new ResourceMap());\n        this.modelResolveQueue = this._register(( new ResourceQueue()));\n        this.saveErrorHandler = (() => {\n            const notificationService = this.notificationService;\n            return {\n                onSaveError(error, model) {\n                    notificationService.error(( localize(\n                        { key: 'genericSaveError', comment: ['{0} is the resource that failed to save and {1} the error message'] },\n                        \"Failed to save '{0}': {1}\",\n                        model.name,\n                        toErrorMessage(error, false)\n                    )));\n                }\n            };\n        })();\n        this.mapCorrelationIdToModelsToRestore = ( new Map());\n        this.saveParticipants = this._register(this.instantiationService.createInstance(TextFileSaveParticipant));\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.fileService.onDidFilesChange(e => this.onDidFilesChange(e)));\n        this._register(this.fileService.onDidChangeFileSystemProviderCapabilities(e => this.onDidChangeFileSystemProviderCapabilities(e)));\n        this._register(this.fileService.onDidChangeFileSystemProviderRegistrations(e => this.onDidChangeFileSystemProviderRegistrations(e)));\n        this._register(this.workingCopyFileService.onWillRunWorkingCopyFileOperation(e => this.onWillRunWorkingCopyFileOperation(e)));\n        this._register(this.workingCopyFileService.onDidFailWorkingCopyFileOperation(e => this.onDidFailWorkingCopyFileOperation(e)));\n        this._register(this.workingCopyFileService.onDidRunWorkingCopyFileOperation(e => this.onDidRunWorkingCopyFileOperation(e)));\n    }\n    onDidFilesChange(e) {\n        for (const model of this.models) {\n            if (model.isDirty()) {\n                continue;\n            }\n            if (e.contains(model.resource, 0 , 1 )) {\n                this.queueModelReload(model);\n            }\n        }\n    }\n    onDidChangeFileSystemProviderCapabilities(e) {\n        this.queueModelReloads(e.scheme);\n    }\n    onDidChangeFileSystemProviderRegistrations(e) {\n        if (!e.added) {\n            return;\n        }\n        this.queueModelReloads(e.scheme);\n    }\n    queueModelReloads(scheme) {\n        for (const model of this.models) {\n            if (model.isDirty()) {\n                continue;\n            }\n            if (scheme === model.resource.scheme) {\n                this.queueModelReload(model);\n            }\n        }\n    }\n    queueModelReload(model) {\n        const queue = this.modelResolveQueue.queueFor(model.resource);\n        if (queue.size <= 1) {\n            queue.queue(async () => {\n                try {\n                    await this.reload(model);\n                }\n                catch (error) {\n                    onUnexpectedError(error);\n                }\n            });\n        }\n    }\n    onWillRunWorkingCopyFileOperation(e) {\n        if (e.operation === 2  || e.operation === 3 ) {\n            const modelsToRestore = [];\n            for (const { source, target } of e.files) {\n                if (source) {\n                    if (this.uriIdentityService.extUri.isEqual(source, target)) {\n                        continue;\n                    }\n                    const sourceModels = [];\n                    for (const model of this.models) {\n                        if (this.uriIdentityService.extUri.isEqualOrParent(model.resource, source)) {\n                            sourceModels.push(model);\n                        }\n                    }\n                    for (const sourceModel of sourceModels) {\n                        const sourceModelResource = sourceModel.resource;\n                        let targetModelResource;\n                        if (this.uriIdentityService.extUri.isEqual(sourceModelResource, source)) {\n                            targetModelResource = target;\n                        }\n                        else {\n                            targetModelResource = joinPath(target, sourceModelResource.path.substr(source.path.length + 1));\n                        }\n                        modelsToRestore.push({\n                            source: sourceModelResource,\n                            target: targetModelResource,\n                            languageId: sourceModel.getLanguageId(),\n                            encoding: sourceModel.getEncoding(),\n                            snapshot: sourceModel.isDirty() ? sourceModel.createSnapshot() : undefined\n                        });\n                    }\n                }\n            }\n            this.mapCorrelationIdToModelsToRestore.set(e.correlationId, modelsToRestore);\n        }\n    }\n    onDidFailWorkingCopyFileOperation(e) {\n        if (((e.operation === 2  || e.operation === 3) )) {\n            const modelsToRestore = this.mapCorrelationIdToModelsToRestore.get(e.correlationId);\n            if (modelsToRestore) {\n                this.mapCorrelationIdToModelsToRestore.delete(e.correlationId);\n                modelsToRestore.forEach(model => {\n                    if (model.snapshot) {\n                        this.get(model.source)?.setDirty(true);\n                    }\n                });\n            }\n        }\n    }\n    onDidRunWorkingCopyFileOperation(e) {\n        switch (e.operation) {\n            case 0 :\n                e.waitUntil((async () => {\n                    for (const { target } of e.files) {\n                        const model = this.get(target);\n                        if (model && !model.isDisposed()) {\n                            await model.revert();\n                        }\n                    }\n                })());\n                break;\n            case 2 :\n            case 3 :\n                e.waitUntil((async () => {\n                    const modelsToRestore = this.mapCorrelationIdToModelsToRestore.get(e.correlationId);\n                    if (modelsToRestore) {\n                        this.mapCorrelationIdToModelsToRestore.delete(e.correlationId);\n                        await Promises.settled(( modelsToRestore.map(async (modelToRestore) => {\n                            const restoredModel = await this.resolve(modelToRestore.target, {\n                                reload: { async: false },\n                                contents: modelToRestore.snapshot ? createTextBufferFactoryFromSnapshot(modelToRestore.snapshot) : undefined,\n                                encoding: modelToRestore.encoding\n                            });\n                            if (modelToRestore.languageId &&\n                                modelToRestore.languageId !== PLAINTEXT_LANGUAGE_ID &&\n                                restoredModel.getLanguageId() === PLAINTEXT_LANGUAGE_ID &&\n                                extname(modelToRestore.target) !== PLAINTEXT_EXTENSION) {\n                                restoredModel.updateTextEditorModel(undefined, modelToRestore.languageId);\n                            }\n                        })));\n                    }\n                })());\n                break;\n        }\n    }\n    get(resource) {\n        return this.mapResourceToModel.get(resource);\n    }\n    has(resource) {\n        return ( this.mapResourceToModel.has(resource));\n    }\n    async reload(model) {\n        await this.joinPendingResolves(model.resource);\n        if (model.isDirty() || model.isDisposed() || !( this.has(model.resource))) {\n            return;\n        }\n        await this.doResolve(model, { reload: { async: false } });\n    }\n    async resolve(resource, options) {\n        const pendingResolve = this.joinPendingResolves(resource);\n        if (pendingResolve) {\n            await pendingResolve;\n        }\n        return this.doResolve(resource, options);\n    }\n    async doResolve(resourceOrModel, options) {\n        let model;\n        let resource;\n        if (URI.isUri(resourceOrModel)) {\n            resource = resourceOrModel;\n            model = this.get(resource);\n        }\n        else {\n            resource = resourceOrModel.resource;\n            model = resourceOrModel;\n        }\n        let modelResolve;\n        let didCreateModel = false;\n        if (model) {\n            if (options?.contents) {\n                modelResolve = model.resolve(options);\n            }\n            else if (options?.reload) {\n                if (options.reload.async) {\n                    modelResolve = Promise.resolve();\n                    (async () => {\n                        try {\n                            await model.resolve(options);\n                        }\n                        catch (error) {\n                            onUnexpectedError(error);\n                        }\n                    })();\n                }\n                else {\n                    modelResolve = model.resolve(options);\n                }\n            }\n            else {\n                modelResolve = Promise.resolve();\n            }\n        }\n        else {\n            didCreateModel = true;\n            const newModel = model = this.instantiationService.createInstance(TextFileEditorModel, resource, options ? options.encoding : undefined, options ? options.languageId : undefined);\n            modelResolve = model.resolve(options);\n            this.registerModel(newModel);\n        }\n        this.mapResourceToPendingModelResolvers.set(resource, modelResolve);\n        this.add(resource, model);\n        if (didCreateModel) {\n            this._onDidCreate.fire(model);\n            if (model.isDirty()) {\n                this._onDidChangeDirty.fire(model);\n            }\n        }\n        try {\n            await modelResolve;\n        }\n        catch (error) {\n            if (didCreateModel) {\n                model.dispose();\n            }\n            throw error;\n        }\n        finally {\n            this.mapResourceToPendingModelResolvers.delete(resource);\n        }\n        if (options?.languageId) {\n            model.setLanguageId(options.languageId);\n        }\n        if (didCreateModel && model.isDirty()) {\n            this._onDidChangeDirty.fire(model);\n        }\n        return model;\n    }\n    joinPendingResolves(resource) {\n        const pendingModelResolve = this.mapResourceToPendingModelResolvers.get(resource);\n        if (!pendingModelResolve) {\n            return;\n        }\n        return this.doJoinPendingResolves(resource);\n    }\n    async doJoinPendingResolves(resource) {\n        let currentModelCopyResolve;\n        while (( this.mapResourceToPendingModelResolvers.has(resource))) {\n            const nextPendingModelResolve = this.mapResourceToPendingModelResolvers.get(resource);\n            if (nextPendingModelResolve === currentModelCopyResolve) {\n                return;\n            }\n            currentModelCopyResolve = nextPendingModelResolve;\n            try {\n                await nextPendingModelResolve;\n            }\n            catch (error) {\n            }\n        }\n    }\n    registerModel(model) {\n        const modelListeners = ( new DisposableStore());\n        modelListeners.add(model.onDidResolve(reason => this._onDidResolve.fire({ model, reason })));\n        modelListeners.add(model.onDidChangeDirty(() => this._onDidChangeDirty.fire(model)));\n        modelListeners.add(model.onDidChangeReadonly(() => this._onDidChangeReadonly.fire(model)));\n        modelListeners.add(model.onDidChangeOrphaned(() => this._onDidChangeOrphaned.fire(model)));\n        modelListeners.add(model.onDidSaveError(() => this._onDidSaveError.fire(model)));\n        modelListeners.add(model.onDidSave(e => this._onDidSave.fire({ model, ...e })));\n        modelListeners.add(model.onDidRevert(() => this._onDidRevert.fire(model)));\n        modelListeners.add(model.onDidChangeEncoding(() => this._onDidChangeEncoding.fire(model)));\n        this.mapResourceToModelListeners.set(model.resource, modelListeners);\n    }\n    add(resource, model) {\n        const knownModel = this.mapResourceToModel.get(resource);\n        if (knownModel === model) {\n            return;\n        }\n        const disposeListener = this.mapResourceToDisposeListener.get(resource);\n        disposeListener?.dispose();\n        this.mapResourceToModel.set(resource, model);\n        this.mapResourceToDisposeListener.set(resource, model.onWillDispose(() => this.remove(resource)));\n    }\n    remove(resource) {\n        const removed = this.mapResourceToModel.delete(resource);\n        const disposeListener = this.mapResourceToDisposeListener.get(resource);\n        if (disposeListener) {\n            dispose(disposeListener);\n            this.mapResourceToDisposeListener.delete(resource);\n        }\n        const modelListener = this.mapResourceToModelListeners.get(resource);\n        if (modelListener) {\n            dispose(modelListener);\n            this.mapResourceToModelListeners.delete(resource);\n        }\n        if (removed) {\n            this._onDidRemove.fire(resource);\n        }\n    }\n    addSaveParticipant(participant) {\n        return this.saveParticipants.addSaveParticipant(participant);\n    }\n    runSaveParticipants(model, context, token) {\n        return this.saveParticipants.participate(model, context, token);\n    }\n    canDispose(model) {\n        if (model.isDisposed() ||\n            (!( this.mapResourceToPendingModelResolvers.has(model.resource)) && !model.isDirty())) {\n            return true;\n        }\n        return this.doCanDispose(model);\n    }\n    async doCanDispose(model) {\n        const pendingResolve = this.joinPendingResolves(model.resource);\n        if (pendingResolve) {\n            await pendingResolve;\n            return this.canDispose(model);\n        }\n        if (model.isDirty()) {\n            await Event.toPromise(model.onDidChangeDirty);\n            return this.canDispose(model);\n        }\n        return true;\n    }\n    dispose() {\n        super.dispose();\n        this.mapResourceToModel.clear();\n        this.mapResourceToPendingModelResolvers.clear();\n        dispose(( this.mapResourceToDisposeListener.values()));\n        this.mapResourceToDisposeListener.clear();\n        dispose(( this.mapResourceToModelListeners.values()));\n        this.mapResourceToModelListeners.clear();\n    }\n};\nTextFileEditorModelManager = ( __decorate([\n    ( __param(0, IInstantiationService)),\n    ( __param(1, IFileService)),\n    ( __param(2, INotificationService)),\n    ( __param(3, IWorkingCopyFileService)),\n    ( __param(4, IUriIdentityService))\n], TextFileEditorModelManager));\nexport { TextFileEditorModelManager };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { mark } from 'monaco-editor/esm/vs/base/common/performance.js';\nimport { assertIsDefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { ITextFileService } from './textfiles.js';\nimport { SaveSourceRegistry } from '../../../common/editor.js';\nimport { BaseTextEditorModel } from '../../../common/editor/textEditorModel.js';\nimport { IWorkingCopyBackupService } from '../../workingCopy/common/workingCopyBackup.js';\nimport { ETAG_DISABLED, NotModifiedSinceFileOperationError, IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { TaskSequentializer, timeout } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { basename } from 'monaco-editor/esm/vs/base/common/path.js';\nimport { IWorkingCopyService } from '../../workingCopy/common/workingCopyService.js';\nimport { NO_TYPE_ID } from '../../workingCopy/common/workingCopy.js';\nimport { IFilesConfigurationService } from '../../filesConfiguration/common/filesConfigurationService.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { CancellationTokenSource } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { UTF8, UTF8_with_bom, UTF16be, UTF16le } from './encoding.js';\nimport { createTextBufferFactoryFromStream } from 'monaco-editor/esm/vs/editor/common/model/textModel.js';\nimport { ILanguageDetectionService } from '../../languageDetection/common/languageDetectionWorkerService.js';\nimport { IPathService } from '../../path/common/pathService.js';\nimport { extUri } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { IAccessibilityService } from 'monaco-editor/esm/vs/platform/accessibility/common/accessibility.js';\nimport { PLAINTEXT_LANGUAGE_ID } from 'monaco-editor/esm/vs/editor/common/languages/modesRegistry.js';\nimport { IExtensionService } from '../../extensions/common/extensions.js';\nvar TextFileEditorModel_1;\nlet TextFileEditorModel = class TextFileEditorModel extends BaseTextEditorModel {\n    static { TextFileEditorModel_1 = this; }\n    static { this.TEXTFILE_SAVE_ENCODING_SOURCE = SaveSourceRegistry.registerSource('textFileEncoding.source', ( (localize('textFileCreate.source', \"File Encoding Changed\")))); }\n    static { this.UNDO_REDO_SAVE_PARTICIPANTS_AUTO_SAVE_THROTTLE_THRESHOLD = 500; }\n    constructor(resource, preferredEncoding,\n    preferredLanguageId, languageService, modelService, fileService, textFileService, workingCopyBackupService, logService, workingCopyService, filesConfigurationService, labelService, languageDetectionService, accessibilityService, pathService, extensionService) {\n        super(modelService, languageService, languageDetectionService, accessibilityService);\n        this.resource = resource;\n        this.preferredEncoding = preferredEncoding;\n        this.preferredLanguageId = preferredLanguageId;\n        this.fileService = fileService;\n        this.textFileService = textFileService;\n        this.workingCopyBackupService = workingCopyBackupService;\n        this.logService = logService;\n        this.workingCopyService = workingCopyService;\n        this.filesConfigurationService = filesConfigurationService;\n        this.labelService = labelService;\n        this.pathService = pathService;\n        this.extensionService = extensionService;\n        this._onDidChangeContent = this._register(( (new Emitter())));\n        this.onDidChangeContent = this._onDidChangeContent.event;\n        this._onDidResolve = this._register(( (new Emitter())));\n        this.onDidResolve = this._onDidResolve.event;\n        this._onDidChangeDirty = this._register(( (new Emitter())));\n        this.onDidChangeDirty = this._onDidChangeDirty.event;\n        this._onDidSaveError = this._register(( (new Emitter())));\n        this.onDidSaveError = this._onDidSaveError.event;\n        this._onDidSave = this._register(( (new Emitter())));\n        this.onDidSave = this._onDidSave.event;\n        this._onDidRevert = this._register(( (new Emitter())));\n        this.onDidRevert = this._onDidRevert.event;\n        this._onDidChangeEncoding = this._register(( (new Emitter())));\n        this.onDidChangeEncoding = this._onDidChangeEncoding.event;\n        this._onDidChangeOrphaned = this._register(( (new Emitter())));\n        this.onDidChangeOrphaned = this._onDidChangeOrphaned.event;\n        this._onDidChangeReadonly = this._register(( (new Emitter())));\n        this.onDidChangeReadonly = this._onDidChangeReadonly.event;\n        this.typeId = NO_TYPE_ID;\n        this.capabilities = 0 ;\n        this.name = basename(this.labelService.getUriLabel(this.resource));\n        this.resourceHasExtension = !!extUri.extname(this.resource);\n        this.versionId = 0;\n        this.ignoreDirtyOnModelContentChange = false;\n        this.ignoreSaveFromSaveParticipants = false;\n        this.lastModelContentChangeFromUndoRedo = undefined;\n        this.saveSequentializer = ( (new TaskSequentializer()));\n        this.dirty = false;\n        this.inConflictMode = false;\n        this.inOrphanMode = false;\n        this.inErrorMode = false;\n        this.hasEncodingSetExplicitly = false;\n        this._register(this.workingCopyService.registerWorkingCopy(this));\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.fileService.onDidFilesChange(e => this.onDidFilesChange(e)));\n        this._register(this.filesConfigurationService.onFilesAssociationChange(() => this.onFilesAssociationChange()));\n        this._register(this.filesConfigurationService.onReadonlyChange(() => this._onDidChangeReadonly.fire()));\n    }\n    async onDidFilesChange(e) {\n        let fileEventImpactsModel = false;\n        let newInOrphanModeGuess;\n        if (this.inOrphanMode) {\n            const modelFileAdded = e.contains(this.resource, 1 );\n            if (modelFileAdded) {\n                newInOrphanModeGuess = false;\n                fileEventImpactsModel = true;\n            }\n        }\n        else {\n            const modelFileDeleted = e.contains(this.resource, 2 );\n            if (modelFileDeleted) {\n                newInOrphanModeGuess = true;\n                fileEventImpactsModel = true;\n            }\n        }\n        if (fileEventImpactsModel && this.inOrphanMode !== newInOrphanModeGuess) {\n            let newInOrphanModeValidated = false;\n            if (newInOrphanModeGuess) {\n                await timeout(100);\n                if (this.isDisposed()) {\n                    newInOrphanModeValidated = true;\n                }\n                else {\n                    const exists = await this.fileService.exists(this.resource);\n                    newInOrphanModeValidated = !exists;\n                }\n            }\n            if (this.inOrphanMode !== newInOrphanModeValidated && !this.isDisposed()) {\n                this.setOrphaned(newInOrphanModeValidated);\n            }\n        }\n    }\n    setOrphaned(orphaned) {\n        if (this.inOrphanMode !== orphaned) {\n            this.inOrphanMode = orphaned;\n            this._onDidChangeOrphaned.fire();\n        }\n    }\n    onFilesAssociationChange() {\n        if (!this.isResolved()) {\n            return;\n        }\n        const firstLineText = this.getFirstLineText(this.textEditorModel);\n        const languageSelection = this.getOrCreateLanguage(this.resource, this.languageService, this.preferredLanguageId, firstLineText);\n        this.textEditorModel.setLanguage(languageSelection);\n    }\n    setLanguageId(languageId, source) {\n        super.setLanguageId(languageId, source);\n        this.preferredLanguageId = languageId;\n    }\n    async backup(token) {\n        let meta = undefined;\n        if (this.lastResolvedFileStat) {\n            meta = {\n                mtime: this.lastResolvedFileStat.mtime,\n                ctime: this.lastResolvedFileStat.ctime,\n                size: this.lastResolvedFileStat.size,\n                etag: this.lastResolvedFileStat.etag,\n                orphaned: this.inOrphanMode\n            };\n        }\n        const content = await this.textFileService.getEncodedReadable(this.resource, this.createSnapshot() ?? undefined, { encoding: UTF8 });\n        return { meta, content };\n    }\n    async revert(options) {\n        if (!this.isResolved()) {\n            return;\n        }\n        const wasDirty = this.dirty;\n        const undo = this.doSetDirty(false);\n        const softUndo = options?.soft;\n        if (!softUndo) {\n            try {\n                await this.forceResolveFromFile();\n            }\n            catch (error) {\n                if (error.fileOperationResult !== 1 ) {\n                    undo();\n                    throw error;\n                }\n            }\n        }\n        this._onDidRevert.fire();\n        if (wasDirty) {\n            this._onDidChangeDirty.fire();\n        }\n    }\n    async resolve(options) {\n        this.trace('resolve() - enter');\n        mark('code/willResolveTextFileEditorModel');\n        if (this.isDisposed()) {\n            this.trace('resolve() - exit - without resolving because model is disposed');\n            return;\n        }\n        if (!options?.contents && (this.dirty || this.saveSequentializer.isRunning())) {\n            this.trace('resolve() - exit - without resolving because model is dirty or being saved');\n            return;\n        }\n        await this.doResolve(options);\n        mark('code/didResolveTextFileEditorModel');\n    }\n    async doResolve(options) {\n        if (options?.contents) {\n            return this.resolveFromBuffer(options.contents, options);\n        }\n        const isNewModel = !this.isResolved();\n        if (isNewModel) {\n            const resolvedFromBackup = await this.resolveFromBackup(options);\n            if (resolvedFromBackup) {\n                return;\n            }\n        }\n        return this.resolveFromFile(options);\n    }\n    async resolveFromBuffer(buffer, options) {\n        this.trace('resolveFromBuffer()');\n        let mtime;\n        let ctime;\n        let size;\n        let etag;\n        try {\n            const metadata = await this.fileService.stat(this.resource);\n            mtime = metadata.mtime;\n            ctime = metadata.ctime;\n            size = metadata.size;\n            etag = metadata.etag;\n            this.setOrphaned(false);\n        }\n        catch (error) {\n            mtime = Date.now();\n            ctime = Date.now();\n            size = 0;\n            etag = ETAG_DISABLED;\n            this.setOrphaned(error.fileOperationResult === 1 );\n        }\n        const preferredEncoding = await this.textFileService.encoding.getPreferredWriteEncoding(this.resource, this.preferredEncoding);\n        this.resolveFromContent({\n            resource: this.resource,\n            name: this.name,\n            mtime,\n            ctime,\n            size,\n            etag,\n            value: buffer,\n            encoding: preferredEncoding.encoding,\n            readonly: false,\n            locked: false\n        }, true , options);\n    }\n    async resolveFromBackup(options) {\n        const backup = await this.workingCopyBackupService.resolve(this);\n        let encoding = UTF8;\n        if (backup) {\n            encoding = (await this.textFileService.encoding.getPreferredWriteEncoding(this.resource, this.preferredEncoding)).encoding;\n        }\n        const isNewModel = !this.isResolved();\n        if (!isNewModel) {\n            this.trace('resolveFromBackup() - exit - without resolving because previously new model got created meanwhile');\n            return true;\n        }\n        if (backup) {\n            await this.doResolveFromBackup(backup, encoding, options);\n            return true;\n        }\n        return false;\n    }\n    async doResolveFromBackup(backup, encoding, options) {\n        this.trace('doResolveFromBackup()');\n        this.resolveFromContent({\n            resource: this.resource,\n            name: this.name,\n            mtime: backup.meta ? backup.meta.mtime : Date.now(),\n            ctime: backup.meta ? backup.meta.ctime : Date.now(),\n            size: backup.meta ? backup.meta.size : 0,\n            etag: backup.meta ? backup.meta.etag : ETAG_DISABLED,\n            value: await createTextBufferFactoryFromStream(await this.textFileService.getDecodedStream(this.resource, backup.value, { encoding: UTF8 })),\n            encoding,\n            readonly: false,\n            locked: false\n        }, true , options);\n        if (backup.meta?.orphaned) {\n            this.setOrphaned(true);\n        }\n    }\n    async resolveFromFile(options) {\n        this.trace('resolveFromFile()');\n        const forceReadFromFile = options?.forceReadFromFile;\n        const allowBinary = this.isResolved()  || options?.allowBinary;\n        let etag;\n        if (forceReadFromFile) {\n            etag = ETAG_DISABLED;\n        }\n        else if (this.lastResolvedFileStat) {\n            etag = this.lastResolvedFileStat.etag;\n        }\n        const currentVersionId = this.versionId;\n        try {\n            const content = await this.textFileService.readStream(this.resource, {\n                acceptTextOnly: !allowBinary,\n                etag, encoding: this.preferredEncoding,\n                limits: options?.limits\n            });\n            this.setOrphaned(false);\n            if (currentVersionId !== this.versionId) {\n                this.trace('resolveFromFile() - exit - without resolving because model content changed');\n                return;\n            }\n            return this.resolveFromContent(content, false , options);\n        }\n        catch (error) {\n            const result = error.fileOperationResult;\n            this.setOrphaned(result === 1 );\n            if (this.isResolved() && result === 2 ) {\n                if (error instanceof NotModifiedSinceFileOperationError) {\n                    this.updateLastResolvedFileStat(error.stat);\n                }\n                return;\n            }\n            if (this.isResolved() && result === 1  && !forceReadFromFile) {\n                return;\n            }\n            throw error;\n        }\n    }\n    resolveFromContent(content, dirty, options) {\n        this.trace('resolveFromContent() - enter');\n        if (this.isDisposed()) {\n            this.trace('resolveFromContent() - exit - because model is disposed');\n            return;\n        }\n        this.updateLastResolvedFileStat({\n            resource: this.resource,\n            name: content.name,\n            mtime: content.mtime,\n            ctime: content.ctime,\n            size: content.size,\n            etag: content.etag,\n            readonly: content.readonly,\n            locked: content.locked,\n            isFile: true,\n            isDirectory: false,\n            isSymbolicLink: false,\n            children: undefined\n        });\n        const oldEncoding = this.contentEncoding;\n        this.contentEncoding = content.encoding;\n        if (this.preferredEncoding) {\n            this.updatePreferredEncoding(this.contentEncoding);\n        }\n        else if (oldEncoding !== this.contentEncoding) {\n            this._onDidChangeEncoding.fire();\n        }\n        if (this.textEditorModel) {\n            this.doUpdateTextModel(content.value);\n        }\n        else {\n            this.doCreateTextModel(content.resource, content.value);\n        }\n        this.setDirty(!!dirty);\n        this._onDidResolve.fire(options?.reason ?? 3 );\n    }\n    doCreateTextModel(resource, value) {\n        this.trace('doCreateTextModel()');\n        const textModel = this.createTextEditorModel(value, resource, this.preferredLanguageId);\n        this.installModelListeners(textModel);\n        this.autoDetectLanguage();\n    }\n    doUpdateTextModel(value) {\n        this.trace('doUpdateTextModel()');\n        this.ignoreDirtyOnModelContentChange = true;\n        try {\n            this.updateTextEditorModel(value, this.preferredLanguageId);\n        }\n        finally {\n            this.ignoreDirtyOnModelContentChange = false;\n        }\n    }\n    installModelListeners(model) {\n        this._register(model.onDidChangeContent(e => this.onModelContentChanged(model, e.isUndoing || e.isRedoing)));\n        this._register(model.onDidChangeLanguage(() => this.onMaybeShouldChangeEncoding()));\n        super.installModelListeners(model);\n    }\n    onModelContentChanged(model, isUndoingOrRedoing) {\n        this.trace(`onModelContentChanged() - enter`);\n        this.versionId++;\n        this.trace(`onModelContentChanged() - new versionId ${this.versionId}`);\n        if (isUndoingOrRedoing) {\n            this.lastModelContentChangeFromUndoRedo = Date.now();\n        }\n        if (!this.ignoreDirtyOnModelContentChange && !this.isReadonly()) {\n            if (model.getAlternativeVersionId() === this.bufferSavedVersionId) {\n                this.trace('onModelContentChanged() - model content changed back to last saved version');\n                const wasDirty = this.dirty;\n                this.setDirty(false);\n                if (wasDirty) {\n                    this._onDidRevert.fire();\n                }\n            }\n            else {\n                this.trace('onModelContentChanged() - model content changed and marked as dirty');\n                this.setDirty(true);\n            }\n        }\n        this._onDidChangeContent.fire();\n        this.autoDetectLanguage();\n    }\n    async autoDetectLanguage() {\n        await this.extensionService?.whenInstalledExtensionsRegistered();\n        const languageId = this.getLanguageId();\n        if (this.resource.scheme === this.pathService.defaultUriScheme &&\n            (!languageId || languageId === PLAINTEXT_LANGUAGE_ID) &&\n            !this.resourceHasExtension\n        ) {\n            return super.autoDetectLanguage();\n        }\n    }\n    async forceResolveFromFile() {\n        if (this.isDisposed()) {\n            return;\n        }\n        await this.textFileService.files.resolve(this.resource, {\n            reload: { async: false },\n            forceReadFromFile: true\n        });\n    }\n    isDirty() {\n        return this.dirty;\n    }\n    isModified() {\n        return this.isDirty();\n    }\n    setDirty(dirty) {\n        if (!this.isResolved()) {\n            return;\n        }\n        const wasDirty = this.dirty;\n        this.doSetDirty(dirty);\n        if (dirty !== wasDirty) {\n            this._onDidChangeDirty.fire();\n        }\n    }\n    doSetDirty(dirty) {\n        const wasDirty = this.dirty;\n        const wasInConflictMode = this.inConflictMode;\n        const wasInErrorMode = this.inErrorMode;\n        const oldBufferSavedVersionId = this.bufferSavedVersionId;\n        if (!dirty) {\n            this.dirty = false;\n            this.inConflictMode = false;\n            this.inErrorMode = false;\n            this.updateSavedVersionId();\n        }\n        else {\n            this.dirty = true;\n        }\n        return () => {\n            this.dirty = wasDirty;\n            this.inConflictMode = wasInConflictMode;\n            this.inErrorMode = wasInErrorMode;\n            this.bufferSavedVersionId = oldBufferSavedVersionId;\n        };\n    }\n    async save(options = Object.create(null)) {\n        if (!this.isResolved()) {\n            return false;\n        }\n        if (this.isReadonly()) {\n            this.trace('save() - ignoring request for readonly resource');\n            return false;\n        }\n        if ((this.hasState(3 ) || this.hasState(5 )) &&\n            ((options.reason === 2  || options.reason === 3  || options.reason === 4) )) {\n            this.trace('save() - ignoring auto save request for model that is in conflict or error');\n            return false;\n        }\n        this.trace('save() - enter');\n        await this.doSave(options);\n        this.trace('save() - exit');\n        return this.hasState(0 );\n    }\n    async doSave(options) {\n        if (typeof options.reason !== 'number') {\n            options.reason = 1 ;\n        }\n        let versionId = this.versionId;\n        this.trace(`doSave(${versionId}) - enter with versionId ${versionId}`);\n        if (this.ignoreSaveFromSaveParticipants) {\n            this.trace(`doSave(${versionId}) - exit - refusing to save() recursively from save participant`);\n            return;\n        }\n        if (this.saveSequentializer.isRunning(versionId)) {\n            this.trace(`doSave(${versionId}) - exit - found a running save for versionId ${versionId}`);\n            return this.saveSequentializer.running;\n        }\n        if (!options.force && !this.dirty) {\n            this.trace(`doSave(${versionId}) - exit - because not dirty and/or versionId is different (this.isDirty: ${this.dirty}, this.versionId: ${this.versionId})`);\n            return;\n        }\n        if (this.saveSequentializer.isRunning()) {\n            this.trace(`doSave(${versionId}) - exit - because busy saving`);\n            this.saveSequentializer.cancelRunning();\n            return this.saveSequentializer.queue(() => this.doSave(options));\n        }\n        if (this.isResolved()) {\n            this.textEditorModel.pushStackElement();\n        }\n        const saveCancellation = ( (new CancellationTokenSource()));\n        return this.saveSequentializer.run(versionId, (async () => {\n            if (this.isResolved() && !options.skipSaveParticipants) {\n                try {\n                    if (options.reason === 2  && typeof this.lastModelContentChangeFromUndoRedo === 'number') {\n                        const timeFromUndoRedoToSave = Date.now() - this.lastModelContentChangeFromUndoRedo;\n                        if (timeFromUndoRedoToSave < TextFileEditorModel_1.UNDO_REDO_SAVE_PARTICIPANTS_AUTO_SAVE_THROTTLE_THRESHOLD) {\n                            await timeout(TextFileEditorModel_1.UNDO_REDO_SAVE_PARTICIPANTS_AUTO_SAVE_THROTTLE_THRESHOLD - timeFromUndoRedoToSave);\n                        }\n                    }\n                    if (!saveCancellation.token.isCancellationRequested) {\n                        this.ignoreSaveFromSaveParticipants = true;\n                        try {\n                            await this.textFileService.files.runSaveParticipants(this, { reason: options.reason ?? 1  }, saveCancellation.token);\n                        }\n                        finally {\n                            this.ignoreSaveFromSaveParticipants = false;\n                        }\n                    }\n                }\n                catch (error) {\n                    this.logService.error(`[text file model] runSaveParticipants(${versionId}) - resulted in an error: ${( ( error.toString()))}`, ( (this.resource.toString())));\n                }\n            }\n            if (saveCancellation.token.isCancellationRequested) {\n                return;\n            }\n            else {\n                saveCancellation.dispose();\n            }\n            if (this.isDisposed()) {\n                return;\n            }\n            if (!this.isResolved()) {\n                return;\n            }\n            versionId = this.versionId;\n            this.inErrorMode = false;\n            this.trace(`doSave(${versionId}) - before write()`);\n            const lastResolvedFileStat = assertIsDefined(this.lastResolvedFileStat);\n            const resolvedTextFileEditorModel = this;\n            return this.saveSequentializer.run(versionId, (async () => {\n                try {\n                    const stat = await this.textFileService.write(lastResolvedFileStat.resource, resolvedTextFileEditorModel.createSnapshot(), {\n                        mtime: lastResolvedFileStat.mtime,\n                        encoding: this.getEncoding(),\n                        etag: (options.ignoreModifiedSince || !this.filesConfigurationService.preventSaveConflicts(lastResolvedFileStat.resource, resolvedTextFileEditorModel.getLanguageId())) ? ETAG_DISABLED : lastResolvedFileStat.etag,\n                        unlock: options.writeUnlock,\n                        writeElevated: options.writeElevated\n                    });\n                    this.handleSaveSuccess(stat, versionId, options);\n                }\n                catch (error) {\n                    this.handleSaveError(error, versionId, options);\n                }\n            })());\n        })(), () => saveCancellation.cancel());\n    }\n    handleSaveSuccess(stat, versionId, options) {\n        this.updateLastResolvedFileStat(stat);\n        if (versionId === this.versionId) {\n            this.trace(`handleSaveSuccess(${versionId}) - setting dirty to false because versionId did not change`);\n            this.setDirty(false);\n        }\n        else {\n            this.trace(`handleSaveSuccess(${versionId}) - not setting dirty to false because versionId did change meanwhile`);\n        }\n        this.setOrphaned(false);\n        this._onDidSave.fire({ reason: options.reason, stat, source: options.source });\n    }\n    handleSaveError(error, versionId, options) {\n        (options.ignoreErrorHandler ? this.logService.trace : this.logService.error).apply(this.logService, [`[text file model] handleSaveError(${versionId}) - exit - resulted in a save error: ${( ( error.toString()))}`, ( (this.resource.toString()))]);\n        if (options.ignoreErrorHandler) {\n            throw error;\n        }\n        this.setDirty(true);\n        this.inErrorMode = true;\n        if (error.fileOperationResult === 3 ) {\n            this.inConflictMode = true;\n        }\n        this.textFileService.files.saveErrorHandler.onSaveError(error, this);\n        this._onDidSaveError.fire();\n    }\n    updateSavedVersionId() {\n        if (this.isResolved()) {\n            this.bufferSavedVersionId = this.textEditorModel.getAlternativeVersionId();\n        }\n    }\n    updateLastResolvedFileStat(newFileStat) {\n        const oldReadonly = this.isReadonly();\n        if (!this.lastResolvedFileStat) {\n            this.lastResolvedFileStat = newFileStat;\n        }\n        else if (this.lastResolvedFileStat.mtime <= newFileStat.mtime) {\n            this.lastResolvedFileStat = newFileStat;\n        }\n        if (this.isReadonly() !== oldReadonly) {\n            this._onDidChangeReadonly.fire();\n        }\n    }\n    hasState(state) {\n        switch (state) {\n            case 3 :\n                return this.inConflictMode;\n            case 1 :\n                return this.dirty;\n            case 5 :\n                return this.inErrorMode;\n            case 4 :\n                return this.inOrphanMode;\n            case 2 :\n                return this.saveSequentializer.isRunning();\n            case 0 :\n                return !this.dirty;\n        }\n    }\n    async joinState(state) {\n        return this.saveSequentializer.running;\n    }\n    getLanguageId() {\n        if (this.textEditorModel) {\n            return this.textEditorModel.getLanguageId();\n        }\n        return this.preferredLanguageId;\n    }\n    async onMaybeShouldChangeEncoding() {\n        if (this.hasEncodingSetExplicitly) {\n            this.trace('onMaybeShouldChangeEncoding() - ignoring because encoding was set explicitly');\n            return;\n        }\n        if (this.contentEncoding === UTF8_with_bom || this.contentEncoding === UTF16be || this.contentEncoding === UTF16le) {\n            this.trace('onMaybeShouldChangeEncoding() - ignoring because content encoding has a BOM');\n            return;\n        }\n        const { encoding } = await this.textFileService.encoding.getPreferredReadEncoding(this.resource);\n        if (typeof encoding !== 'string' || !this.isNewEncoding(encoding)) {\n            this.trace(`onMaybeShouldChangeEncoding() - ignoring because preferred encoding ${encoding} is not new`);\n            return;\n        }\n        if (this.isDirty()) {\n            this.trace('onMaybeShouldChangeEncoding() - ignoring because model is dirty');\n            return;\n        }\n        this.logService.info(`Adjusting encoding based on configured language override to '${encoding}' for ${( ( this.resource.toString(true)))}.`);\n        return this.setEncodingInternal(encoding, 1 );\n    }\n    setEncoding(encoding, mode) {\n        this.hasEncodingSetExplicitly = true;\n        return this.setEncodingInternal(encoding, mode);\n    }\n    async setEncodingInternal(encoding, mode) {\n        if (mode === 0 ) {\n            this.updatePreferredEncoding(encoding);\n            if (!this.isDirty()) {\n                this.versionId++;\n                this.setDirty(true);\n            }\n            if (!this.inConflictMode) {\n                await this.save({ source: TextFileEditorModel_1.TEXTFILE_SAVE_ENCODING_SOURCE });\n            }\n        }\n        else {\n            if (!this.isNewEncoding(encoding)) {\n                return;\n            }\n            if (this.isDirty() && !this.inConflictMode) {\n                await this.save();\n            }\n            this.updatePreferredEncoding(encoding);\n            await this.forceResolveFromFile();\n        }\n    }\n    updatePreferredEncoding(encoding) {\n        if (!this.isNewEncoding(encoding)) {\n            return;\n        }\n        this.preferredEncoding = encoding;\n        this._onDidChangeEncoding.fire();\n    }\n    isNewEncoding(encoding) {\n        if (this.preferredEncoding === encoding) {\n            return false;\n        }\n        if (!this.preferredEncoding && this.contentEncoding === encoding) {\n            return false;\n        }\n        return true;\n    }\n    getEncoding() {\n        return this.preferredEncoding || this.contentEncoding;\n    }\n    trace(msg) {\n        this.logService.trace(`[text file model] ${msg}`, ( (this.resource.toString())));\n    }\n    isResolved() {\n        return !!this.textEditorModel;\n    }\n    isReadonly() {\n        return this.filesConfigurationService.isReadonly(this.resource, this.lastResolvedFileStat);\n    }\n    dispose() {\n        this.trace('dispose()');\n        this.inConflictMode = false;\n        this.inOrphanMode = false;\n        this.inErrorMode = false;\n        super.dispose();\n    }\n};\nTextFileEditorModel = TextFileEditorModel_1 = ( (__decorate([\n    ( (__param(3, ILanguageService))),\n    ( (__param(4, IModelService))),\n    ( (__param(5, IFileService))),\n    ( (__param(6, ITextFileService))),\n    ( (__param(7, IWorkingCopyBackupService))),\n    ( (__param(8, ILogService))),\n    ( (__param(9, IWorkingCopyService))),\n    ( (__param(10, IFilesConfigurationService))),\n    ( (__param(11, ILabelService))),\n    ( (__param(12, ILanguageDetectionService))),\n    ( (__param(13, IAccessibilityService))),\n    ( (__param(14, IPathService))),\n    ( (__param(15, IExtensionService)))\n], TextFileEditorModel)));\nexport { TextFileEditorModel };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { raceCancellation } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { CancellationTokenSource } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { IProgressService } from 'monaco-editor/esm/vs/platform/progress/common/progress.js';\nimport { Disposable, toDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { insert } from 'monaco-editor/esm/vs/base/common/arrays.js';\nlet TextFileSaveParticipant = class TextFileSaveParticipant extends Disposable {\n    constructor(progressService, logService) {\n        super();\n        this.progressService = progressService;\n        this.logService = logService;\n        this.saveParticipants = [];\n    }\n    addSaveParticipant(participant) {\n        const remove = insert(this.saveParticipants, participant);\n        return toDisposable(() => remove());\n    }\n    participate(model, context, token) {\n        const cts = ( new CancellationTokenSource(token));\n        return this.progressService.withProgress({\n            title: ( localize('saveParticipants', \"Saving '{0}'\", model.name)),\n            location: 15 ,\n            cancellable: true,\n            delay: model.isDirty() ? 3000 : 5000\n        }, async (progress) => {\n            model.textEditorModel?.pushStackElement();\n            for (const saveParticipant of this.saveParticipants) {\n                if (cts.token.isCancellationRequested || !model.textEditorModel ) {\n                    break;\n                }\n                try {\n                    const promise = saveParticipant.participate(model, context, progress, cts.token);\n                    await raceCancellation(promise, cts.token);\n                }\n                catch (err) {\n                    this.logService.error(err);\n                }\n            }\n            model.textEditorModel?.pushStackElement();\n        }, () => {\n            cts.cancel();\n        }).finally(() => {\n            cts.dispose();\n        });\n    }\n    dispose() {\n        this.saveParticipants.splice(0, this.saveParticipants.length);\n        super.dispose();\n    }\n};\nTextFileSaveParticipant = ( __decorate([\n    ( __param(0, IProgressService)),\n    ( __param(1, ILogService))\n], TextFileSaveParticipant));\nexport { TextFileSaveParticipant };\n", "import { basename } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport Severity from 'monaco-editor/esm/vs/base/common/severity.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IDialogService = ( createDecorator('dialogService'));\nvar DialogKind;\n( (function(DialogKind) {\n    DialogKind[DialogKind[\"Confirmation\"] = 1] = \"Confirmation\";\n    DialogKind[DialogKind[\"Prompt\"] = 2] = \"Prompt\";\n    DialogKind[DialogKind[\"Input\"] = 3] = \"Input\";\n})(DialogKind || (DialogKind = {})));\nclass AbstractDialogHandler {\n    getConfirmationButtons(dialog) {\n        return this.getButtons(dialog, DialogKind.Confirmation);\n    }\n    getPromptButtons(dialog) {\n        return this.getButtons(dialog, DialogKind.Prompt);\n    }\n    getInputButtons(dialog) {\n        return this.getButtons(dialog, DialogKind.Input);\n    }\n    getButtons(dialog, kind) {\n        const buttons = [];\n        switch (kind) {\n            case DialogKind.Confirmation: {\n                const confirmationDialog = dialog;\n                if (confirmationDialog.primaryButton) {\n                    buttons.push(confirmationDialog.primaryButton);\n                }\n                else {\n                    buttons.push(( localize({ key: 'yesButton', comment: ['&& denotes a mnemonic'] }, \"&&Yes\")));\n                }\n                if (confirmationDialog.cancelButton) {\n                    buttons.push(confirmationDialog.cancelButton);\n                }\n                else {\n                    buttons.push(( localize('cancelButton', \"Cancel\")));\n                }\n                break;\n            }\n            case DialogKind.Prompt: {\n                const promptDialog = dialog;\n                if (Array.isArray(promptDialog.buttons) && promptDialog.buttons.length > 0) {\n                    buttons.push(...( promptDialog.buttons.map(button => button.label)));\n                }\n                if (promptDialog.cancelButton) {\n                    if (promptDialog.cancelButton === true) {\n                        buttons.push(( localize('cancelButton', \"Cancel\")));\n                    }\n                    else if (typeof promptDialog.cancelButton === 'string') {\n                        buttons.push(promptDialog.cancelButton);\n                    }\n                    else {\n                        if (promptDialog.cancelButton.label) {\n                            buttons.push(promptDialog.cancelButton.label);\n                        }\n                        else {\n                            buttons.push(( localize('cancelButton', \"Cancel\")));\n                        }\n                    }\n                }\n                if (buttons.length === 0) {\n                    buttons.push(( localize({ key: 'okButton', comment: ['&& denotes a mnemonic'] }, \"&&OK\")));\n                }\n                break;\n            }\n            case DialogKind.Input: {\n                const inputDialog = dialog;\n                if (inputDialog.primaryButton) {\n                    buttons.push(inputDialog.primaryButton);\n                }\n                else {\n                    buttons.push(( localize({ key: 'okButton', comment: ['&& denotes a mnemonic'] }, \"&&OK\")));\n                }\n                if (inputDialog.cancelButton) {\n                    buttons.push(inputDialog.cancelButton);\n                }\n                else {\n                    buttons.push(( localize('cancelButton', \"Cancel\")));\n                }\n                break;\n            }\n        }\n        return buttons;\n    }\n    getDialogType(type) {\n        if (typeof type === 'string') {\n            return type;\n        }\n        if (typeof type === 'number') {\n            return (type === Severity.Info) ? 'info' : (type === Severity.Error) ? 'error' : (type === Severity.Warning) ? 'warning' : 'none';\n        }\n        return undefined;\n    }\n    async getPromptResult(prompt, buttonIndex, checkboxChecked) {\n        const promptButtons = [...(prompt.buttons ?? [])];\n        if (prompt.cancelButton && typeof prompt.cancelButton !== 'string' && typeof prompt.cancelButton !== 'boolean') {\n            promptButtons.push(prompt.cancelButton);\n        }\n        const result = await promptButtons[buttonIndex]?.run({ checkboxChecked });\n        return { result, checkboxChecked };\n    }\n}\nconst IFileDialogService = ( createDecorator('fileDialogService'));\nconst MAX_CONFIRM_FILES = 10;\nfunction getFileNamesMessage(fileNamesOrResources) {\n    const message = [];\n    message.push(...( fileNamesOrResources.slice(0, MAX_CONFIRM_FILES).map(\n        fileNameOrResource => typeof fileNameOrResource === 'string' ? fileNameOrResource : basename(fileNameOrResource)\n    )));\n    if (fileNamesOrResources.length > MAX_CONFIRM_FILES) {\n        if (fileNamesOrResources.length - MAX_CONFIRM_FILES === 1) {\n            message.push(( localize('moreFile', \"...1 additional file not shown\")));\n        }\n        else {\n            message.push(( localize(\n                'moreFiles',\n                \"...{0} additional files not shown\",\n                fileNamesOrResources.length - MAX_CONFIRM_FILES\n            )));\n        }\n    }\n    message.push('');\n    return message.join('\\n');\n}\nexport { AbstractDialogHandler, IDialogService, IFileDialogService, getFileNamesMessage };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { DebounceEmitter, Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { TernarySearchTree } from 'monaco-editor/esm/vs/base/common/ternarySearchTree.js';\nimport { toDisposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { isThenable } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { LinkedList } from 'monaco-editor/esm/vs/base/common/linkedList.js';\nimport { createCSSRule, asCSSPropertyValue, removeCSSRulesContainingSelector, createStyleSheet } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { isFalsyOrWhitespace } from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { isCancellationError } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { CancellationTokenSource } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { hash } from 'monaco-editor/esm/vs/base/common/hash.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { distinct, asArray } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { asCssVariable } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { getIconRegistry } from 'monaco-editor/esm/vs/platform/theme/common/iconRegistry.js';\nclass DecorationRule {\n    static keyOf(data) {\n        if (Array.isArray(data)) {\n            return ( data.map(DecorationRule.keyOf)).join(',');\n        }\n        else {\n            const { color, letter } = data;\n            if (ThemeIcon.isThemeIcon(letter)) {\n                return `${color}+${letter.id}`;\n            }\n            else {\n                return `${color}/${letter}`;\n            }\n        }\n    }\n    static { this._classNamesPrefix = 'monaco-decoration'; }\n    constructor(themeService, data, key) {\n        this.themeService = themeService;\n        this._refCounter = 0;\n        this.data = data;\n        const suffix = ( hash(key).toString(36));\n        this.itemColorClassName = `${DecorationRule._classNamesPrefix}-itemColor-${suffix}`;\n        this.itemBadgeClassName = `${DecorationRule._classNamesPrefix}-itemBadge-${suffix}`;\n        this.bubbleBadgeClassName = `${DecorationRule._classNamesPrefix}-bubbleBadge-${suffix}`;\n        this.iconBadgeClassName = `${DecorationRule._classNamesPrefix}-iconBadge-${suffix}`;\n    }\n    acquire() {\n        this._refCounter += 1;\n    }\n    release() {\n        return --this._refCounter === 0;\n    }\n    appendCSSRules(element) {\n        if (!Array.isArray(this.data)) {\n            this._appendForOne(this.data, element);\n        }\n        else {\n            this._appendForMany(this.data, element);\n        }\n    }\n    _appendForOne(data, element) {\n        const { color, letter } = data;\n        createCSSRule(`.${this.itemColorClassName}`, `color: ${getColor(color)};`, element);\n        if (ThemeIcon.isThemeIcon(letter)) {\n            this._createIconCSSRule(letter, color, element);\n        }\n        else if (letter) {\n            createCSSRule(`.${this.itemBadgeClassName}::after`, `content: \"${letter}\"; color: ${getColor(color)};`, element);\n        }\n    }\n    _appendForMany(data, element) {\n        const { color } = data[0];\n        createCSSRule(`.${this.itemColorClassName}`, `color: ${getColor(color)};`, element);\n        const letters = [];\n        let icon;\n        for (const d of data) {\n            if (ThemeIcon.isThemeIcon(d.letter)) {\n                icon = d.letter;\n                break;\n            }\n            else if (d.letter) {\n                letters.push(d.letter);\n            }\n        }\n        if (icon) {\n            this._createIconCSSRule(icon, color, element);\n        }\n        else {\n            if (letters.length) {\n                createCSSRule(`.${this.itemBadgeClassName}::after`, `content: \"${letters.join(', ')}\"; color: ${getColor(color)};`, element);\n            }\n            createCSSRule(`.${this.bubbleBadgeClassName}::after`, `content: \"\\uea71\"; color: ${getColor(color)}; font-family: codicon; font-size: 14px; margin-right: 14px; opacity: 0.4;`, element);\n        }\n    }\n    _createIconCSSRule(icon, color, element) {\n        const modifier = ThemeIcon.getModifier(icon);\n        if (modifier) {\n            icon = ThemeIcon.modify(icon, undefined);\n        }\n        const iconContribution = getIconRegistry().getIcon(icon.id);\n        if (!iconContribution) {\n            return;\n        }\n        const definition = this.themeService.getProductIconTheme().getIcon(iconContribution);\n        if (!definition) {\n            return;\n        }\n        createCSSRule(`.${this.iconBadgeClassName}::after`, `content: '${definition.fontCharacter}';\n\t\t\tcolor: ${icon.color ? getColor(icon.color.id) : getColor(color)};\n\t\t\tfont-family: ${asCSSPropertyValue(definition.font?.id ?? 'codicon')};\n\t\t\tfont-size: 16px;\n\t\t\tmargin-right: 14px;\n\t\t\tfont-weight: normal;\n\t\t\t${modifier === 'spin' ? 'animation: codicon-spin 1.5s steps(30) infinite' : ''};\n\t\t\t`, element);\n    }\n    removeCSSRules(element) {\n        removeCSSRulesContainingSelector(this.itemColorClassName, element);\n        removeCSSRulesContainingSelector(this.itemBadgeClassName, element);\n        removeCSSRulesContainingSelector(this.bubbleBadgeClassName, element);\n        removeCSSRulesContainingSelector(this.iconBadgeClassName, element);\n    }\n}\nclass DecorationStyles {\n    constructor(_themeService) {\n        this._themeService = _themeService;\n        this._styleElement = createStyleSheet();\n        this._decorationRules = ( new Map());\n        this._dispoables = ( new DisposableStore());\n    }\n    dispose() {\n        this._dispoables.dispose();\n        this._styleElement.remove();\n    }\n    asDecoration(data, onlyChildren) {\n        data.sort((a, b) => (b.weight || 0) - (a.weight || 0));\n        const key = DecorationRule.keyOf(data);\n        let rule = this._decorationRules.get(key);\n        if (!rule) {\n            rule = ( new DecorationRule(this._themeService, data, key));\n            this._decorationRules.set(key, rule);\n            rule.appendCSSRules(this._styleElement);\n        }\n        rule.acquire();\n        const labelClassName = rule.itemColorClassName;\n        let badgeClassName = rule.itemBadgeClassName;\n        const iconClassName = rule.iconBadgeClassName;\n        let tooltip = distinct(( data.filter(d => !isFalsyOrWhitespace(d.tooltip)).map(d => d.tooltip))).join(' • ');\n        const strikethrough = ( data.some(d => d.strikethrough));\n        if (onlyChildren) {\n            badgeClassName = rule.bubbleBadgeClassName;\n            tooltip = ( localize('bubbleTitle', \"Contains emphasized items\"));\n        }\n        return {\n            labelClassName,\n            badgeClassName,\n            iconClassName,\n            strikethrough,\n            tooltip,\n            dispose: () => {\n                if (rule?.release()) {\n                    this._decorationRules.delete(key);\n                    rule.removeCSSRules(this._styleElement);\n                    rule = undefined;\n                }\n            }\n        };\n    }\n}\nclass FileDecorationChangeEvent {\n    constructor(all) {\n        this._data = TernarySearchTree.forUris(_uri => true);\n        this._data.fill(true, asArray(all));\n    }\n    affectsResource(uri) {\n        return this._data.hasElementOrSubtree(uri);\n    }\n}\nclass DecorationDataRequest {\n    constructor(source, thenable) {\n        this.source = source;\n        this.thenable = thenable;\n    }\n}\nfunction getColor(color) {\n    return color ? asCssVariable(color) : 'inherit';\n}\nlet DecorationsService = class DecorationsService {\n    constructor(uriIdentityService, themeService) {\n        this._onDidChangeDecorationsDelayed = ( new DebounceEmitter({ merge: all => all.flat() }));\n        this._onDidChangeDecorations = ( new Emitter());\n        this.onDidChangeDecorations = this._onDidChangeDecorations.event;\n        this._provider = ( new LinkedList());\n        this._decorationStyles = ( new DecorationStyles(themeService));\n        this._data = TernarySearchTree.forUris(key => uriIdentityService.extUri.ignorePathCasing(key));\n        this._onDidChangeDecorationsDelayed.event(event => { this._onDidChangeDecorations.fire(( new FileDecorationChangeEvent(event))); });\n    }\n    dispose() {\n        this._onDidChangeDecorations.dispose();\n        this._onDidChangeDecorationsDelayed.dispose();\n    }\n    registerDecorationsProvider(provider) {\n        const rm = this._provider.unshift(provider);\n        this._onDidChangeDecorations.fire({\n            affectsResource() { return true; }\n        });\n        const removeAll = () => {\n            const uris = [];\n            for (const [uri, map] of this._data) {\n                if (map.delete(provider)) {\n                    uris.push(uri);\n                }\n            }\n            if (uris.length > 0) {\n                this._onDidChangeDecorationsDelayed.fire(uris);\n            }\n        };\n        const listener = provider.onDidChange(uris => {\n            if (!uris) {\n                removeAll();\n            }\n            else {\n                for (const uri of uris) {\n                    const map = this._ensureEntry(uri);\n                    this._fetchData(map, uri, provider);\n                }\n            }\n        });\n        return toDisposable(() => {\n            rm();\n            listener.dispose();\n            removeAll();\n        });\n    }\n    _ensureEntry(uri) {\n        let map = this._data.get(uri);\n        if (!map) {\n            map = ( new Map());\n            this._data.set(uri, map);\n        }\n        return map;\n    }\n    getDecoration(uri, includeChildren) {\n        const all = [];\n        let containsChildren = false;\n        const map = this._ensureEntry(uri);\n        for (const provider of this._provider) {\n            let data = map.get(provider);\n            if (data === undefined) {\n                data = this._fetchData(map, uri, provider);\n            }\n            if (data && !(data instanceof DecorationDataRequest)) {\n                all.push(data);\n            }\n        }\n        if (includeChildren) {\n            const iter = this._data.findSuperstr(uri);\n            if (iter) {\n                for (const tuple of iter) {\n                    for (const data of ( tuple[1].values())) {\n                        if (data && !(data instanceof DecorationDataRequest)) {\n                            if (data.bubble) {\n                                all.push(data);\n                                containsChildren = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return all.length === 0\n            ? undefined\n            : this._decorationStyles.asDecoration(all, containsChildren);\n    }\n    _fetchData(map, uri, provider) {\n        const pendingRequest = map.get(provider);\n        if (pendingRequest instanceof DecorationDataRequest) {\n            pendingRequest.source.cancel();\n            map.delete(provider);\n        }\n        const source = ( new CancellationTokenSource());\n        const dataOrThenable = provider.provideDecorations(uri, source.token);\n        if (!isThenable(dataOrThenable)) {\n            return this._keepItem(map, provider, uri, dataOrThenable);\n        }\n        else {\n            const request = ( new DecorationDataRequest(source, Promise.resolve(dataOrThenable).then(data => {\n                if (map.get(provider) === request) {\n                    this._keepItem(map, provider, uri, data);\n                }\n            }).catch(err => {\n                if (!isCancellationError(err) && map.get(provider) === request) {\n                    map.delete(provider);\n                }\n            })));\n            map.set(provider, request);\n            return null;\n        }\n    }\n    _keepItem(map, provider, uri, data) {\n        const deco = data ? data : null;\n        const old = map.get(provider);\n        map.set(provider, deco);\n        if (deco || old) {\n            this._onDidChangeDecorationsDelayed.fire(uri);\n        }\n        return deco;\n    }\n};\nDecorationsService = ( __decorate([\n    ( __param(0, IUriIdentityService)),\n    ( __param(1, IThemeService))\n], DecorationsService));\nexport { DecorationsService };\n", "import { __decorate, __param } from '../../../../../../external/tslib/tslib.es6.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { ExtUri, normalizePath } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { SkipList } from '../../../base/common/skipList.js';\nimport { Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nclass Entry {\n    static { this._clock = 0; }\n    constructor(uri) {\n        this.uri = uri;\n        this.time = Entry._clock++;\n    }\n    touch() {\n        this.time = Entry._clock++;\n        return this;\n    }\n}\nlet UriIdentityService = class UriIdentityService {\n    constructor(_fileService) {\n        this._fileService = _fileService;\n        this._dispooables = ( new DisposableStore());\n        this._limit = 2 ** 16;\n        const schemeIgnoresPathCasingCache = ( new Map());\n        const ignorePathCasing = (uri) => {\n            let ignorePathCasing = schemeIgnoresPathCasingCache.get(uri.scheme);\n            if (ignorePathCasing === undefined) {\n                ignorePathCasing = _fileService.hasProvider(uri) && !this._fileService.hasCapability(uri, 1024 );\n                schemeIgnoresPathCasingCache.set(uri.scheme, ignorePathCasing);\n            }\n            return ignorePathCasing;\n        };\n        this._dispooables.add(Event.any(_fileService.onDidChangeFileSystemProviderRegistrations, _fileService.onDidChangeFileSystemProviderCapabilities)(e => {\n            schemeIgnoresPathCasingCache.delete(e.scheme);\n        }));\n        this.extUri = ( new ExtUri(ignorePathCasing));\n        this._canonicalUris = ( new SkipList((a, b) => this.extUri.compare(a, b, true), this._limit));\n    }\n    dispose() {\n        this._dispooables.dispose();\n        this._canonicalUris.clear();\n    }\n    asCanonicalUri(uri) {\n        if (this._fileService.hasProvider(uri)) {\n            uri = normalizePath(uri);\n        }\n        const item = this._canonicalUris.get(uri);\n        if (item) {\n            return item.touch().uri.with({ fragment: uri.fragment });\n        }\n        this._canonicalUris.set(uri, ( new Entry(uri)));\n        this._checkTrim();\n        return uri;\n    }\n    _checkTrim() {\n        if (this._canonicalUris.size < this._limit) {\n            return;\n        }\n        const entries = [...this._canonicalUris.entries()].sort((a, b) => {\n            if (a[1].time < b[1].time) {\n                return 1;\n            }\n            else if (a[1].time > b[1].time) {\n                return -1;\n            }\n            else {\n                return 0;\n            }\n        });\n        Entry._clock = 0;\n        this._canonicalUris.clear();\n        const newSize = this._limit * 0.5;\n        for (let i = 0; i < newSize; i++) {\n            this._canonicalUris.set(entries[i][0], entries[i][1].touch());\n        }\n    }\n};\nUriIdentityService = ( __decorate([\n    ( __param(0, IFileService))\n], UriIdentityService));\nexport { UriIdentityService };\n", "var _a;\nclass Node {\n    constructor(level, key, value) {\n        this.level = level;\n        this.key = key;\n        this.value = value;\n        this.forward = [];\n    }\n}\nconst NIL = undefined;\nclass SkipList {\n    constructor(comparator, capacity = 2 ** 16) {\n        this.comparator = comparator;\n        this[_a] = 'SkipList';\n        this._level = 0;\n        this._size = 0;\n        this._maxLevel = Math.max(1, Math.log2(capacity) | 0);\n        this._header = ( new Node(this._maxLevel, NIL, NIL));\n    }\n    get size() {\n        return this._size;\n    }\n    clear() {\n        this._header = ( new Node(this._maxLevel, NIL, NIL));\n    }\n    has(key) {\n        return Boolean(SkipList._search(this, key, this.comparator));\n    }\n    get(key) {\n        return SkipList._search(this, key, this.comparator)?.value;\n    }\n    set(key, value) {\n        if (SkipList._insert(this, key, value, this.comparator)) {\n            this._size += 1;\n        }\n        return this;\n    }\n    delete(key) {\n        const didDelete = SkipList._delete(this, key, this.comparator);\n        if (didDelete) {\n            this._size -= 1;\n        }\n        return didDelete;\n    }\n    forEach(callbackfn, thisArg) {\n        let node = this._header.forward[0];\n        while (node) {\n            callbackfn.call(thisArg, node.value, node.key, this);\n            node = node.forward[0];\n        }\n    }\n    [(_a = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.entries();\n    }\n    *entries() {\n        let node = this._header.forward[0];\n        while (node) {\n            yield [node.key, node.value];\n            node = node.forward[0];\n        }\n    }\n    *keys() {\n        let node = this._header.forward[0];\n        while (node) {\n            yield node.key;\n            node = node.forward[0];\n        }\n    }\n    *values() {\n        let node = this._header.forward[0];\n        while (node) {\n            yield node.value;\n            node = node.forward[0];\n        }\n    }\n    toString() {\n        let result = '[SkipList]:';\n        let node = this._header.forward[0];\n        while (node) {\n            result += `node(${node.key}, ${node.value}, lvl:${node.level})`;\n            node = node.forward[0];\n        }\n        return result;\n    }\n    static _search(list, searchKey, comparator) {\n        let x = list._header;\n        for (let i = list._level - 1; i >= 0; i--) {\n            while (x.forward[i] && comparator(x.forward[i].key, searchKey) < 0) {\n                x = x.forward[i];\n            }\n        }\n        x = x.forward[0];\n        if (x && comparator(x.key, searchKey) === 0) {\n            return x;\n        }\n        return undefined;\n    }\n    static _insert(list, searchKey, value, comparator) {\n        const update = [];\n        let x = list._header;\n        for (let i = list._level - 1; i >= 0; i--) {\n            while (x.forward[i] && comparator(x.forward[i].key, searchKey) < 0) {\n                x = x.forward[i];\n            }\n            update[i] = x;\n        }\n        x = x.forward[0];\n        if (x && comparator(x.key, searchKey) === 0) {\n            x.value = value;\n            return false;\n        }\n        else {\n            const lvl = SkipList._randomLevel(list);\n            if (lvl > list._level) {\n                for (let i = list._level; i < lvl; i++) {\n                    update[i] = list._header;\n                }\n                list._level = lvl;\n            }\n            x = ( new Node(lvl, searchKey, value));\n            for (let i = 0; i < lvl; i++) {\n                x.forward[i] = update[i].forward[i];\n                update[i].forward[i] = x;\n            }\n            return true;\n        }\n    }\n    static _randomLevel(list, p = 0.5) {\n        let lvl = 1;\n        while (Math.random() < p && lvl < list._maxLevel) {\n            lvl += 1;\n        }\n        return lvl;\n    }\n    static _delete(list, searchKey, comparator) {\n        const update = [];\n        let x = list._header;\n        for (let i = list._level - 1; i >= 0; i--) {\n            while (x.forward[i] && comparator(x.forward[i].key, searchKey) < 0) {\n                x = x.forward[i];\n            }\n            update[i] = x;\n        }\n        x = x.forward[0];\n        if (!x || comparator(x.key, searchKey) !== 0) {\n            return false;\n        }\n        for (let i = 0; i < list._level; i++) {\n            if (update[i].forward[i] !== x) {\n                break;\n            }\n            update[i].forward[i] = x.forward[i];\n        }\n        while (list._level > 0 && list._header.forward[list._level - 1] === NIL) {\n            list._level -= 1;\n        }\n        return true;\n    }\n}\nexport { SkipList };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IJSONEditingService = ( createDecorator('jsonEditingService'));\nclass JSONEditingError extends Error {\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\nexport { IJSONEditingService, JSONEditingError };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport * as json from 'monaco-editor/esm/vs/base/common/json.js';\nimport { setProperty } from '../../../../base/common/jsonEdit.js';\nimport { Queue } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { EditOperation } from 'monaco-editor/esm/vs/editor/common/core/editOperation.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { Selection } from 'monaco-editor/esm/vs/editor/common/core/selection.js';\nimport { ITextFileService } from '../../textfile/common/textfiles.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { ITextModelService } from 'monaco-editor/esm/vs/editor/common/services/resolverService.js';\nimport { JSONEditingError } from './jsonEditing.js';\nlet JSONEditingService = class JSONEditingService {\n    constructor(fileService, textModelResolverService, textFileService) {\n        this.fileService = fileService;\n        this.textModelResolverService = textModelResolverService;\n        this.textFileService = textFileService;\n        this.queue = ( new Queue());\n    }\n    write(resource, values) {\n        return Promise.resolve(this.queue.queue(() => this.doWriteConfiguration(resource, values)));\n    }\n    async doWriteConfiguration(resource, values) {\n        const reference = await this.resolveAndValidate(resource, true);\n        try {\n            await this.writeToBuffer(reference.object.textEditorModel, values);\n        }\n        finally {\n            reference.dispose();\n        }\n    }\n    async writeToBuffer(model, values) {\n        let hasEdits = false;\n        for (const value of values) {\n            const edit = this.getEdits(model, value)[0];\n            hasEdits = !!edit && this.applyEditsToBuffer(edit, model);\n        }\n        if (hasEdits) {\n            return this.textFileService.save(model.uri);\n        }\n    }\n    applyEditsToBuffer(edit, model) {\n        const startPosition = model.getPositionAt(edit.offset);\n        const endPosition = model.getPositionAt(edit.offset + edit.length);\n        const range = ( new Range(\n            startPosition.lineNumber,\n            startPosition.column,\n            endPosition.lineNumber,\n            endPosition.column\n        ));\n        const currentText = model.getValueInRange(range);\n        if (edit.content !== currentText) {\n            const editOperation = currentText ? EditOperation.replace(range, edit.content) : EditOperation.insert(startPosition, edit.content);\n            model.pushEditOperations([( new Selection(\n                startPosition.lineNumber,\n                startPosition.column,\n                startPosition.lineNumber,\n                startPosition.column\n            ))], [editOperation], () => []);\n            return true;\n        }\n        return false;\n    }\n    getEdits(model, configurationValue) {\n        const { tabSize, insertSpaces } = model.getOptions();\n        const eol = model.getEOL();\n        const { path, value } = configurationValue;\n        if (!path.length) {\n            const content = JSON.stringify(value, null, insertSpaces ? ' '.repeat(tabSize) : '\\t');\n            return [{\n                    content,\n                    length: content.length,\n                    offset: 0\n                }];\n        }\n        return setProperty(model.getValue(), path, value, { tabSize, insertSpaces, eol });\n    }\n    async resolveModelReference(resource) {\n        const exists = await this.fileService.exists(resource);\n        if (!exists) {\n            await this.textFileService.write(resource, '{}', { encoding: 'utf8' });\n        }\n        return this.textModelResolverService.createModelReference(resource);\n    }\n    hasParseErrors(model) {\n        const parseErrors = [];\n        json.parse(model.getValue(), parseErrors, { allowTrailingComma: true, allowEmptyContent: true });\n        return parseErrors.length > 0;\n    }\n    async resolveAndValidate(resource, checkDirty) {\n        const reference = await this.resolveModelReference(resource);\n        const model = reference.object.textEditorModel;\n        if (this.hasParseErrors(model)) {\n            reference.dispose();\n            return this.reject(0 );\n        }\n        return reference;\n    }\n    reject(code) {\n        const message = this.toErrorMessage(code);\n        return Promise.reject(( new JSONEditingError(message, code)));\n    }\n    toErrorMessage(error) {\n        switch (error) {\n            case 0 : {\n                return ( nls.localize(\n                    'errorInvalidFile',\n                    \"Unable to write into the file. Please open the file to correct errors/warnings in the file and try again.\"\n                ));\n            }\n        }\n    }\n};\nJSONEditingService = ( __decorate([\n    ( __param(0, IFileService)),\n    ( __param(1, ITextModelService)),\n    ( __param(2, ITextFileService))\n], JSONEditingService));\nexport { JSONEditingService };\n", "import { createScanner } from 'monaco-editor/esm/vs/base/common/json.js';\nfunction format(documentText, range, options) {\n    let initialIndentLevel;\n    let formatText;\n    let formatTextStart;\n    let rangeStart;\n    let rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        let endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    const eol = getEOL(options, documentText);\n    let lineBreak = false;\n    let indentLevel = 0;\n    let indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    const scanner = createScanner(formatText, false);\n    let hasError = false;\n    function newLineAndIndent() {\n        return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    function scanNext() {\n        let token = scanner.scan();\n        lineBreak = false;\n        while (token === 15  || token === 14 ) {\n            lineBreak = lineBreak || (token === 14 );\n            token = scanner.scan();\n        }\n        hasError = token === 16  || scanner.getTokenError() !== 0 ;\n        return token;\n    }\n    const editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    let firstToken = scanNext();\n    if (firstToken !== 17 ) {\n        const firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        const initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 ) {\n        let firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        let secondToken = scanNext();\n        let replaceContent = '';\n        while (!lineBreak && (secondToken === 12  || secondToken === 13 )) {\n            const commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            replaceContent = secondToken === 12  ? newLineAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 ) {\n            if (firstToken !== 1 ) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else if (secondToken === 4 ) {\n            if (firstToken !== 3 ) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 :\n                case 1 :\n                    indentLevel++;\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 5 :\n                case 12 :\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 13 :\n                    if (lineBreak) {\n                        replaceContent = newLineAndIndent();\n                    }\n                    else {\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 6 :\n                    replaceContent = ' ';\n                    break;\n                case 10 :\n                    if (secondToken === 6 ) {\n                        replaceContent = '';\n                        break;\n                    }\n                case 7 :\n                case 8 :\n                case 9 :\n                case 11 :\n                case 2 :\n                case 4 :\n                    if (secondToken === 12  || secondToken === 13 ) {\n                        replaceContent = ' ';\n                    }\n                    else if (secondToken !== 5  && secondToken !== 17 ) {\n                        hasError = true;\n                    }\n                    break;\n                case 16 :\n                    hasError = true;\n                    break;\n            }\n            if (lineBreak && (secondToken === 12  || secondToken === 13 )) {\n                replaceContent = newLineAndIndent();\n            }\n        }\n        const secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    let result = '';\n    for (let i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, options) {\n    let i = 0;\n    let nChars = 0;\n    const tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        const ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (let i = 0; i < text.length; i++) {\n        const ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nfunction isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\nexport { format, getEOL, isEOL };\n", "import { parseTree, findNodeAtLocation } from 'monaco-editor/esm/vs/base/common/json.js';\nimport { isEOL, format } from './jsonFormatter.js';\nfunction removeProperty(text, path, formattingOptions) {\n    return setProperty(text, path, undefined, formattingOptions);\n}\nfunction setProperty(text, originalPath, value, formattingOptions, getInsertionIndex) {\n    const path = originalPath.slice();\n    const errors = [];\n    const root = parseTree(text, errors);\n    let parent = undefined;\n    let lastSegment = undefined;\n    while (path.length > 0) {\n        lastSegment = path.pop();\n        parent = findNodeAtLocation(root, path);\n        if (parent === undefined && value !== undefined) {\n            if (typeof lastSegment === 'string') {\n                value = { [lastSegment]: value };\n            }\n            else {\n                value = [value];\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (!parent) {\n        if (value === undefined) {\n            throw new Error('Can not delete in empty document');\n        }\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n    }\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n        const existing = findNodeAtLocation(parent, [lastSegment]);\n        if (existing !== undefined) {\n            if (value === undefined) {\n                if (!existing.parent) {\n                    throw new Error('Malformed AST');\n                }\n                const propertyIndex = parent.children.indexOf(existing.parent);\n                let removeBegin;\n                let removeEnd = existing.parent.offset + existing.parent.length;\n                if (propertyIndex > 0) {\n                    const previous = parent.children[propertyIndex - 1];\n                    removeBegin = previous.offset + previous.length;\n                }\n                else {\n                    removeBegin = parent.offset + 1;\n                    if (parent.children.length > 1) {\n                        const next = parent.children[1];\n                        removeEnd = next.offset;\n                    }\n                }\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n            }\n            else {\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n            }\n        }\n        else {\n            if (value === undefined) {\n                return [];\n            }\n            const newProperty = `${JSON.stringify(lastSegment)}: ${JSON.stringify(value)}`;\n            const index = getInsertionIndex ? getInsertionIndex(( parent.children.map(p => p.children[0].value))) : parent.children.length;\n            let edit;\n            if (index > 0) {\n                const previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            else if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n    }\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n        if (value !== undefined) {\n            const newProperty = `${JSON.stringify(value)}`;\n            let edit;\n            if (parent.children.length === 0 || lastSegment === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: parent.children.length === 0 ? newProperty : newProperty + ',' };\n            }\n            else {\n                const index = lastSegment === -1 || lastSegment > parent.children.length ? parent.children.length : lastSegment;\n                const previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n        else {\n            const removalIndex = lastSegment;\n            const toRemove = parent.children[removalIndex];\n            let edit;\n            if (parent.children.length === 1) {\n                edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n            }\n            else if (parent.children.length - 1 === removalIndex) {\n                const previous = parent.children[removalIndex - 1];\n                const offset = previous.offset + previous.length;\n                const parentEndOffset = parent.offset + parent.length;\n                edit = { offset, length: parentEndOffset - 2 - offset, content: '' };\n            }\n            else {\n                edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n    }\n    else {\n        throw new Error(`Can not add ${typeof lastSegment !== 'number' ? 'index' : 'property'} to parent of type ${parent.type}`);\n    }\n}\nfunction withFormatting(text, edit, formattingOptions) {\n    let newText = applyEdit(text, edit);\n    let begin = edit.offset;\n    let end = edit.offset + edit.content.length;\n    if (edit.length === 0 || edit.content.length === 0) {\n        while (begin > 0 && !isEOL(newText, begin - 1)) {\n            begin--;\n        }\n        while (end < newText.length && !isEOL(newText, end)) {\n            end++;\n        }\n    }\n    const edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n    for (let i = edits.length - 1; i >= 0; i--) {\n        const curr = edits[i];\n        newText = applyEdit(newText, curr);\n        begin = Math.min(begin, curr.offset);\n        end = Math.max(end, curr.offset + curr.length);\n        end += curr.content.length - curr.length;\n    }\n    const editLength = text.length - (newText.length - end) - begin;\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\nfunction applyEdit(text, edit) {\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\nfunction applyEdits(text, edits) {\n    const sortedEdits = edits.slice(0).sort((a, b) => {\n        const diff = a.offset - b.offset;\n        if (diff === 0) {\n            return a.length - b.length;\n        }\n        return diff;\n    });\n    let lastModifiedOffset = text.length;\n    for (let i = sortedEdits.length - 1; i >= 0; i--) {\n        const e = sortedEdits[i];\n        if (e.offset + e.length <= lastModifiedOffset) {\n            text = applyEdit(text, e);\n        }\n        else {\n            throw new Error('Overlapping edit');\n        }\n        lastModifiedOffset = e.offset;\n    }\n    return text;\n}\nexport { applyEdit, applyEdits, removeProperty, setProperty, withFormatting };\n", "import { isUNC, toSlashes } from 'monaco-editor/esm/vs/base/common/extpath.js';\nimport * as json from 'monaco-editor/esm/vs/base/common/json.js';\nimport { setProperty, applyEdits, removeProperty } from '../../../base/common/jsonEdit.js';\nimport { normalizeDriveLetter } from 'monaco-editor/esm/vs/base/common/labels.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { posix, isAbsolute } from 'monaco-editor/esm/vs/base/common/path.js';\nimport { isWindows, isLinux, isMacintosh } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { isEqualAuthority } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { getRemoteAuthority } from 'monaco-editor/esm/vs/platform/remote/common/remoteHosts.js';\nimport { WorkspaceFolder } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nconst IWorkspacesService = ( (createDecorator('workspacesService')));\nfunction isRecentWorkspace(curr) {\n    return curr.hasOwnProperty('workspace');\n}\nfunction isRecentFolder(curr) {\n    return curr.hasOwnProperty('folderUri');\n}\nfunction isRecentFile(curr) {\n    return curr.hasOwnProperty('fileUri');\n}\nfunction isStoredWorkspaceFolder(obj) {\n    return isRawFileWorkspaceFolder(obj) || isRawUriWorkspaceFolder(obj);\n}\nfunction isRawFileWorkspaceFolder(obj) {\n    const candidate = obj;\n    return typeof candidate?.path === 'string' && (!candidate.name || typeof candidate.name === 'string');\n}\nfunction isRawUriWorkspaceFolder(obj) {\n    const candidate = obj;\n    return typeof candidate?.uri === 'string' && (!candidate.name || typeof candidate.name === 'string');\n}\nfunction getStoredWorkspaceFolder(folderURI, forceAbsolute, folderName, targetConfigFolderURI, extUri) {\n    if (folderURI.scheme !== targetConfigFolderURI.scheme) {\n        return { name: folderName, uri: ( (folderURI.toString(true))) };\n    }\n    let folderPath = !forceAbsolute ? extUri.relativePath(targetConfigFolderURI, folderURI) : undefined;\n    if (folderPath !== undefined) {\n        if (folderPath.length === 0) {\n            folderPath = '.';\n        }\n        else {\n            if (isWindows) {\n                folderPath = massagePathForWindows(folderPath);\n            }\n        }\n    }\n    else {\n        if (folderURI.scheme === Schemas.file) {\n            folderPath = folderURI.fsPath;\n            if (isWindows) {\n                folderPath = massagePathForWindows(folderPath);\n            }\n        }\n        else if (!extUri.isEqualAuthority(folderURI.authority, targetConfigFolderURI.authority)) {\n            return { name: folderName, uri: ( (folderURI.toString(true))) };\n        }\n        else {\n            folderPath = folderURI.path;\n        }\n    }\n    return { name: folderName, path: folderPath };\n}\nfunction massagePathForWindows(folderPath) {\n    folderPath = normalizeDriveLetter(folderPath);\n    if (!isUNC(folderPath)) {\n        folderPath = toSlashes(folderPath);\n    }\n    return folderPath;\n}\nfunction toWorkspaceFolders(configuredFolders, workspaceConfigFile, extUri) {\n    const result = [];\n    const seen = ( (new Set()));\n    const relativeTo = extUri.dirname(workspaceConfigFile);\n    for (const configuredFolder of configuredFolders) {\n        let uri = undefined;\n        if (isRawFileWorkspaceFolder(configuredFolder)) {\n            if (configuredFolder.path) {\n                uri = extUri.resolvePath(relativeTo, configuredFolder.path);\n            }\n        }\n        else if (isRawUriWorkspaceFolder(configuredFolder)) {\n            try {\n                uri = ( (URI.parse(configuredFolder.uri)));\n                if (uri.path[0] !== posix.sep) {\n                    uri = uri.with({ path: posix.sep + uri.path });\n                }\n            }\n            catch (e) {\n                console.warn(e);\n            }\n        }\n        if (uri) {\n            const comparisonKey = extUri.getComparisonKey(uri);\n            if (!( (seen.has(comparisonKey)))) {\n                seen.add(comparisonKey);\n                const name = configuredFolder.name || extUri.basenameOrAuthority(uri);\n                result.push(( (new WorkspaceFolder({ uri, name, index: result.length }, configuredFolder))));\n            }\n        }\n    }\n    return result;\n}\nfunction rewriteWorkspaceFileForNewLocation(rawWorkspaceContents, configPathURI, isFromUntitledWorkspace, targetConfigPathURI, extUri) {\n    const storedWorkspace = doParseStoredWorkspace(configPathURI, rawWorkspaceContents);\n    const sourceConfigFolder = extUri.dirname(configPathURI);\n    const targetConfigFolder = extUri.dirname(targetConfigPathURI);\n    const rewrittenFolders = [];\n    for (const folder of storedWorkspace.folders) {\n        const folderURI = isRawFileWorkspaceFolder(folder) ? extUri.resolvePath(sourceConfigFolder, folder.path) : ( (URI.parse(folder.uri)));\n        let absolute;\n        if (isFromUntitledWorkspace) {\n            absolute = false;\n        }\n        else {\n            absolute = !isRawFileWorkspaceFolder(folder) || isAbsolute(folder.path);\n        }\n        rewrittenFolders.push(getStoredWorkspaceFolder(folderURI, absolute, folder.name, targetConfigFolder, extUri));\n    }\n    const formattingOptions = { insertSpaces: false, tabSize: 4, eol: (isLinux || isMacintosh) ? '\\n' : '\\r\\n' };\n    const edits = setProperty(rawWorkspaceContents, ['folders'], rewrittenFolders, formattingOptions);\n    let newContent = applyEdits(rawWorkspaceContents, edits);\n    if (isEqualAuthority(storedWorkspace.remoteAuthority, getRemoteAuthority(targetConfigPathURI))) {\n        newContent = applyEdits(newContent, removeProperty(newContent, ['remoteAuthority'], formattingOptions));\n    }\n    return newContent;\n}\nfunction doParseStoredWorkspace(path, contents) {\n    const storedWorkspace = json.parse(contents);\n    if (storedWorkspace && Array.isArray(storedWorkspace.folders)) {\n        storedWorkspace.folders = storedWorkspace.folders.filter(folder => isStoredWorkspaceFolder(folder));\n    }\n    else {\n        throw new Error(`${path} looks like an invalid workspace file.`);\n    }\n    return storedWorkspace;\n}\nfunction isSerializedRecentWorkspace(data) {\n    return data.workspace && typeof data.workspace === 'object' && typeof data.workspace.id === 'string' && typeof data.workspace.configPath === 'string';\n}\nfunction isSerializedRecentFolder(data) {\n    return typeof data.folderUri === 'string';\n}\nfunction isSerializedRecentFile(data) {\n    return typeof data.fileUri === 'string';\n}\nfunction restoreRecentlyOpened(data, logService) {\n    const result = { workspaces: [], files: [] };\n    if (data) {\n        const restoreGracefully = function (entries, onEntry) {\n            for (let i = 0; i < entries.length; i++) {\n                try {\n                    onEntry(entries[i], i);\n                }\n                catch (e) {\n                    logService.warn(`Error restoring recent entry ${JSON.stringify(entries[i])}: ${( ( e.toString()))}. Skip entry.`);\n                }\n            }\n        };\n        const storedRecents = data;\n        if (Array.isArray(storedRecents.entries)) {\n            restoreGracefully(storedRecents.entries, entry => {\n                const label = entry.label;\n                const remoteAuthority = entry.remoteAuthority;\n                if (isSerializedRecentWorkspace(entry)) {\n                    result.workspaces.push({ label, remoteAuthority, workspace: { id: entry.workspace.id, configPath: ( (URI.parse(entry.workspace.configPath))) } });\n                }\n                else if (isSerializedRecentFolder(entry)) {\n                    result.workspaces.push({ label, remoteAuthority, folderUri: ( (URI.parse(entry.folderUri))) });\n                }\n                else if (isSerializedRecentFile(entry)) {\n                    result.files.push({ label, remoteAuthority, fileUri: ( (URI.parse(entry.fileUri))) });\n                }\n            });\n        }\n    }\n    return result;\n}\nfunction toStoreData(recents) {\n    const serialized = { entries: [] };\n    for (const recent of recents.workspaces) {\n        if (isRecentFolder(recent)) {\n            serialized.entries.push({ folderUri: ( (recent.folderUri.toString())), label: recent.label, remoteAuthority: recent.remoteAuthority });\n        }\n        else {\n            serialized.entries.push({ workspace: { id: recent.workspace.id, configPath: ( (recent.workspace.configPath.toString())) }, label: recent.label, remoteAuthority: recent.remoteAuthority });\n        }\n    }\n    for (const recent of recents.files) {\n        serialized.entries.push({ fileUri: ( (recent.fileUri.toString())), label: recent.label, remoteAuthority: recent.remoteAuthority });\n    }\n    return serialized;\n}\nexport { IWorkspacesService, getStoredWorkspaceFolder, isRecentFile, isRecentFolder, isRecentWorkspace, isStoredWorkspaceFolder, restoreRecentlyOpened, rewriteWorkspaceFileForNewLocation, toStoreData, toWorkspaceFolders };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { ResourceMap } from 'monaco-editor/esm/vs/base/common/map.js';\nimport { createDecorator, IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { EditorExtensions, DEFAULT_EDITOR_ASSOCIATION, isResourceMergeEditorInput, isResourceDiffEditorInput, isResourceSideBySideEditorInput } from '../../../common/editor.js';\nimport { IUntitledTextEditorService } from '../../untitled/common/untitledTextEditorService.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { DiffEditorInput } from '../../../common/editor/diffEditorInput.js';\nimport { SideBySideEditorInput } from '../../../common/editor/sideBySideEditorInput.js';\nimport { TextResourceEditorInput } from '../../../common/editor/textResourceEditorInput.js';\nimport { UntitledTextEditorInput } from '../../untitled/common/untitledTextEditorInput.js';\nimport { basename } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { RegisteredEditorPriority, IEditorResolverService } from '../../editor/common/editorResolverService.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nconst ITextEditorService = ( createDecorator('textEditorService'));\nlet TextEditorService = class TextEditorService extends Disposable {\n    constructor(untitledTextEditorService, instantiationService, uriIdentityService, fileService, editorResolverService) {\n        super();\n        this.untitledTextEditorService = untitledTextEditorService;\n        this.instantiationService = instantiationService;\n        this.uriIdentityService = uriIdentityService;\n        this.fileService = fileService;\n        this.editorResolverService = editorResolverService;\n        this.editorInputCache = ( new ResourceMap());\n        this.fileEditorFactory = ( Registry.as(EditorExtensions.EditorFactory)).getFileEditorFactory();\n        this.registerDefaultEditor();\n    }\n    registerDefaultEditor() {\n        this._register(this.editorResolverService.registerEditor('*', {\n            id: DEFAULT_EDITOR_ASSOCIATION.id,\n            label: DEFAULT_EDITOR_ASSOCIATION.displayName,\n            detail: DEFAULT_EDITOR_ASSOCIATION.providerDisplayName,\n            priority: RegisteredEditorPriority.builtin\n        }, {}, {\n            createEditorInput: editor => ({ editor: this.createTextEditor(editor) }),\n            createUntitledEditorInput: untitledEditor => ({ editor: this.createTextEditor(untitledEditor) }),\n            createDiffEditorInput: diffEditor => ({ editor: this.createTextEditor(diffEditor) })\n        }));\n    }\n    async resolveTextEditor(input) {\n        return this.createTextEditor(input);\n    }\n    createTextEditor(input) {\n        if (isResourceMergeEditorInput(input)) {\n            return this.createTextEditor(input.result);\n        }\n        if (isResourceDiffEditorInput(input)) {\n            const original = this.createTextEditor(input.original);\n            const modified = this.createTextEditor(input.modified);\n            return this.instantiationService.createInstance(DiffEditorInput, input.label, input.description, original, modified, undefined);\n        }\n        if (isResourceSideBySideEditorInput(input)) {\n            const primary = this.createTextEditor(input.primary);\n            const secondary = this.createTextEditor(input.secondary);\n            return this.instantiationService.createInstance(SideBySideEditorInput, input.label, input.description, secondary, primary);\n        }\n        const untitledInput = input;\n        if (untitledInput.forceUntitled || !untitledInput.resource || (untitledInput.resource.scheme === Schemas.untitled)) {\n            const untitledOptions = {\n                languageId: untitledInput.languageId,\n                initialValue: untitledInput.contents,\n                encoding: untitledInput.encoding\n            };\n            let untitledModel;\n            if (untitledInput.resource?.scheme === Schemas.untitled) {\n                untitledModel = this.untitledTextEditorService.create({ untitledResource: untitledInput.resource, ...untitledOptions });\n            }\n            else {\n                untitledModel = this.untitledTextEditorService.create({ associatedResource: untitledInput.resource, ...untitledOptions });\n            }\n            return this.createOrGetCached(untitledModel.resource, () => {\n                const input = this.instantiationService.createInstance(UntitledTextEditorInput, untitledModel);\n                Event.once(input.onWillDispose)(() => untitledModel.dispose());\n                return input;\n            });\n        }\n        const textResourceEditorInput = input;\n        if (textResourceEditorInput.resource instanceof URI) {\n            const label = textResourceEditorInput.label || basename(textResourceEditorInput.resource);\n            const preferredResource = textResourceEditorInput.resource;\n            const canonicalResource = this.uriIdentityService.asCanonicalUri(preferredResource);\n            return this.createOrGetCached(canonicalResource, () => {\n                if (textResourceEditorInput.forceFile || this.fileService.hasProvider(canonicalResource)) {\n                    return this.fileEditorFactory.createFileEditor(canonicalResource, preferredResource, textResourceEditorInput.label, textResourceEditorInput.description, textResourceEditorInput.encoding, textResourceEditorInput.languageId, textResourceEditorInput.contents, this.instantiationService);\n                }\n                return this.instantiationService.createInstance(TextResourceEditorInput, canonicalResource, textResourceEditorInput.label, textResourceEditorInput.description, textResourceEditorInput.languageId, textResourceEditorInput.contents);\n            }, cachedInput => {\n                if (cachedInput instanceof UntitledTextEditorInput) {\n                    return;\n                }\n                else if (!(cachedInput instanceof TextResourceEditorInput)) {\n                    cachedInput.setPreferredResource(preferredResource);\n                    if (textResourceEditorInput.label) {\n                        cachedInput.setPreferredName(textResourceEditorInput.label);\n                    }\n                    if (textResourceEditorInput.description) {\n                        cachedInput.setPreferredDescription(textResourceEditorInput.description);\n                    }\n                    if (textResourceEditorInput.encoding) {\n                        cachedInput.setPreferredEncoding(textResourceEditorInput.encoding);\n                    }\n                    if (textResourceEditorInput.languageId) {\n                        cachedInput.setPreferredLanguageId(textResourceEditorInput.languageId);\n                    }\n                    if (typeof textResourceEditorInput.contents === 'string') {\n                        cachedInput.setPreferredContents(textResourceEditorInput.contents);\n                    }\n                }\n                else {\n                    if (label) {\n                        cachedInput.setName(label);\n                    }\n                    if (textResourceEditorInput.description) {\n                        cachedInput.setDescription(textResourceEditorInput.description);\n                    }\n                    if (textResourceEditorInput.languageId) {\n                        cachedInput.setPreferredLanguageId(textResourceEditorInput.languageId);\n                    }\n                    if (typeof textResourceEditorInput.contents === 'string') {\n                        cachedInput.setPreferredContents(textResourceEditorInput.contents);\n                    }\n                }\n            });\n        }\n        throw new Error(`ITextEditorService: Unable to create texteditor from ${JSON.stringify(input)}`);\n    }\n    createOrGetCached(resource, factoryFn, cachedFn) {\n        let input = this.editorInputCache.get(resource);\n        if (input) {\n            cachedFn?.(input);\n            return input;\n        }\n        input = factoryFn();\n        this.editorInputCache.set(resource, input);\n        Event.once(input.onWillDispose)(() => this.editorInputCache.delete(resource));\n        return input;\n    }\n};\nTextEditorService = ( __decorate([\n    ( __param(0, IUntitledTextEditorService)),\n    ( __param(1, IInstantiationService)),\n    ( __param(2, IUriIdentityService)),\n    ( __param(3, IFileService)),\n    ( __param(4, IEditorResolverService))\n], TextEditorService));\nexport { ITextEditorService, TextEditorService };\n", "import { __decorate, __param } from '../../../../../../external/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { SideBySideEditorInput } from './sideBySideEditorInput.js';\nimport { BINARY_DIFF_EDITOR_ID, TEXT_DIFF_EDITOR_ID, isResourceDiffEditorInput } from '../editor.js';\nimport { BaseTextEditorModel } from './textEditorModel.js';\nimport { DiffEditorModel } from './diffEditorModel.js';\nimport { TextDiffEditorModel } from './textDiffEditorModel.js';\nimport { IEditorService } from '../../services/editor/common/editorService.js';\nimport { shorten } from 'monaco-editor/esm/vs/base/common/labels.js';\nvar DiffEditorInput_1;\nlet DiffEditorInput = class DiffEditorInput extends SideBySideEditorInput {\n    static { DiffEditorInput_1 = this; }\n    static { this.ID = 'workbench.editors.diffEditorInput'; }\n    get typeId() {\n        return DiffEditorInput_1.ID;\n    }\n    get editorId() {\n        return this.modified.editorId === this.original.editorId ? this.modified.editorId : undefined;\n    }\n    get capabilities() {\n        let capabilities = super.capabilities;\n        if (this.labels.forceDescription) {\n            capabilities |= 64 ;\n        }\n        return capabilities;\n    }\n    constructor(preferredName, preferredDescription, original, modified, forceOpenAsBinary, editorService) {\n        super(preferredName, preferredDescription, original, modified, editorService);\n        this.original = original;\n        this.modified = modified;\n        this.forceOpenAsBinary = forceOpenAsBinary;\n        this.cachedModel = undefined;\n        this.labels = this.computeLabels();\n    }\n    computeLabels() {\n        let name;\n        let forceDescription = false;\n        if (this.preferredName) {\n            name = this.preferredName;\n        }\n        else {\n            const originalName = this.original.getName();\n            const modifiedName = this.modified.getName();\n            name = ( localize('sideBySideLabels', \"{0} ↔ {1}\", originalName, modifiedName));\n            forceDescription = originalName === modifiedName;\n        }\n        let shortDescription;\n        let mediumDescription;\n        let longDescription;\n        if (this.preferredDescription) {\n            shortDescription = this.preferredDescription;\n            mediumDescription = this.preferredDescription;\n            longDescription = this.preferredDescription;\n        }\n        else {\n            shortDescription = this.computeLabel(this.original.getDescription(0 ), this.modified.getDescription(0 ));\n            longDescription = this.computeLabel(this.original.getDescription(2 ), this.modified.getDescription(2 ));\n            const originalMediumDescription = this.original.getDescription(1 );\n            const modifiedMediumDescription = this.modified.getDescription(1 );\n            if ((typeof originalMediumDescription === 'string' && typeof modifiedMediumDescription === 'string') &&\n                (originalMediumDescription || modifiedMediumDescription)\n            ) {\n                const [shortenedOriginalMediumDescription, shortenedModifiedMediumDescription] = shorten([originalMediumDescription, modifiedMediumDescription]);\n                mediumDescription = this.computeLabel(shortenedOriginalMediumDescription, shortenedModifiedMediumDescription);\n            }\n        }\n        const shortTitle = this.computeLabel(this.original.getTitle(0 ) ?? this.original.getName(), this.modified.getTitle(0 ) ?? this.modified.getName(), ' ↔ ');\n        const mediumTitle = this.computeLabel(this.original.getTitle(1 ) ?? this.original.getName(), this.modified.getTitle(1 ) ?? this.modified.getName(), ' ↔ ');\n        const longTitle = this.computeLabel(this.original.getTitle(2 ) ?? this.original.getName(), this.modified.getTitle(2 ) ?? this.modified.getName(), ' ↔ ');\n        return { name, shortDescription, mediumDescription, longDescription, forceDescription, shortTitle, mediumTitle, longTitle };\n    }\n    computeLabel(originalLabel, modifiedLabel, separator = ' - ') {\n        if (!originalLabel || !modifiedLabel) {\n            return undefined;\n        }\n        if (originalLabel === modifiedLabel) {\n            return modifiedLabel;\n        }\n        return `${originalLabel}${separator}${modifiedLabel}`;\n    }\n    getName() {\n        return this.labels.name;\n    }\n    getDescription(verbosity = 1 ) {\n        switch (verbosity) {\n            case 0 :\n                return this.labels.shortDescription;\n            case 2 :\n                return this.labels.longDescription;\n            case 1 :\n            default:\n                return this.labels.mediumDescription;\n        }\n    }\n    getTitle(verbosity) {\n        switch (verbosity) {\n            case 0 :\n                return this.labels.shortTitle;\n            case 2 :\n                return this.labels.longTitle;\n            default:\n            case 1 :\n                return this.labels.mediumTitle;\n        }\n    }\n    async resolve(options) {\n        const resolvedModel = await this.createModel(options);\n        this.cachedModel?.dispose();\n        this.cachedModel = resolvedModel;\n        return this.cachedModel;\n    }\n    prefersEditorPane(editorPanes) {\n        if (this.forceOpenAsBinary) {\n            return editorPanes.find(editorPane => editorPane.typeId === BINARY_DIFF_EDITOR_ID);\n        }\n        return editorPanes.find(editorPane => editorPane.typeId === TEXT_DIFF_EDITOR_ID);\n    }\n    async createModel(options) {\n        const [originalEditorModel, modifiedEditorModel] = await Promise.all([\n            this.original.resolve(options),\n            this.modified.resolve(options)\n        ]);\n        if (modifiedEditorModel instanceof BaseTextEditorModel && originalEditorModel instanceof BaseTextEditorModel) {\n            return ( new TextDiffEditorModel(originalEditorModel, modifiedEditorModel));\n        }\n        return ( new DiffEditorModel(originalEditorModel ?? undefined, modifiedEditorModel ?? undefined));\n    }\n    toUntyped(options) {\n        const untyped = super.toUntyped(options);\n        if (untyped) {\n            return {\n                ...untyped,\n                modified: untyped.primary,\n                original: untyped.secondary\n            };\n        }\n        return undefined;\n    }\n    matches(otherInput) {\n        if (this === otherInput) {\n            return true;\n        }\n        if (otherInput instanceof DiffEditorInput_1) {\n            return this.modified.matches(otherInput.modified) && this.original.matches(otherInput.original) && otherInput.forceOpenAsBinary === this.forceOpenAsBinary;\n        }\n        if (isResourceDiffEditorInput(otherInput)) {\n            return this.modified.matches(otherInput.modified) && this.original.matches(otherInput.original);\n        }\n        return false;\n    }\n    dispose() {\n        if (this.cachedModel) {\n            this.cachedModel.dispose();\n            this.cachedModel = undefined;\n        }\n        super.dispose();\n    }\n};\nDiffEditorInput = DiffEditorInput_1 = ( __decorate([\n    ( __param(5, IEditorService))\n], DiffEditorInput));\nexport { DiffEditorInput };\n", "import { __decorate, __param } from '../../../../../../external/tslib/tslib.es6.js';\nimport { Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { isResourceDiffEditorInput, isResourceSideBySideEditorInput, isResourceMergeEditorInput, isEditorInput, findViewStateForEditor, isResourceEditorInput, isDiffEditorInput } from '../editor.js';\nimport { EditorInput } from './editorInput.js';\nimport { IEditorService } from '../../services/editor/common/editorService.js';\nvar SideBySideEditorInput_1;\nlet SideBySideEditorInput = class SideBySideEditorInput extends EditorInput {\n    static { SideBySideEditorInput_1 = this; }\n    static { this.ID = 'workbench.editorinputs.sidebysideEditorInput'; }\n    get typeId() {\n        return SideBySideEditorInput_1.ID;\n    }\n    get capabilities() {\n        let capabilities = this.primary.capabilities;\n        capabilities &= ~32 ;\n        if (this.secondary.hasCapability(16 )) {\n            capabilities |= 16 ;\n        }\n        if (this.secondary.hasCapability(8 )) {\n            capabilities |= 8 ;\n        }\n        capabilities |= 256 ;\n        return capabilities;\n    }\n    get resource() {\n        if (this.hasIdenticalSides) {\n            return this.primary.resource;\n        }\n        return undefined;\n    }\n    constructor(preferredName, preferredDescription, secondary, primary, editorService) {\n        super();\n        this.preferredName = preferredName;\n        this.preferredDescription = preferredDescription;\n        this.secondary = secondary;\n        this.primary = primary;\n        this.editorService = editorService;\n        this.hasIdenticalSides = this.primary.matches(this.secondary);\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(Event.once(Event.any(this.primary.onWillDispose, this.secondary.onWillDispose))(() => {\n            if (!this.isDisposed()) {\n                this.dispose();\n            }\n        }));\n        this._register(this.primary.onDidChangeDirty(() => this._onDidChangeDirty.fire()));\n        this._register(this.primary.onDidChangeCapabilities(() => this._onDidChangeCapabilities.fire()));\n        this._register(this.secondary.onDidChangeCapabilities(() => this._onDidChangeCapabilities.fire()));\n        this._register(this.primary.onDidChangeLabel(() => this._onDidChangeLabel.fire()));\n        this._register(this.secondary.onDidChangeLabel(() => this._onDidChangeLabel.fire()));\n    }\n    getName() {\n        const preferredName = this.getPreferredName();\n        if (preferredName) {\n            return preferredName;\n        }\n        if (this.hasIdenticalSides) {\n            return this.primary.getName();\n        }\n        return ( localize(\n            'sideBySideLabels',\n            \"{0} - {1}\",\n            this.secondary.getName(),\n            this.primary.getName()\n        ));\n    }\n    getPreferredName() {\n        return this.preferredName;\n    }\n    getDescription(verbosity) {\n        const preferredDescription = this.getPreferredDescription();\n        if (preferredDescription) {\n            return preferredDescription;\n        }\n        if (this.hasIdenticalSides) {\n            return this.primary.getDescription(verbosity);\n        }\n        return super.getDescription(verbosity);\n    }\n    getPreferredDescription() {\n        return this.preferredDescription;\n    }\n    getTitle(verbosity) {\n        if (this.hasIdenticalSides) {\n            return this.primary.getTitle(verbosity) ?? this.getName();\n        }\n        return super.getTitle(verbosity);\n    }\n    getLabelExtraClasses() {\n        if (this.hasIdenticalSides) {\n            return this.primary.getLabelExtraClasses();\n        }\n        return super.getLabelExtraClasses();\n    }\n    getAriaLabel() {\n        if (this.hasIdenticalSides) {\n            return this.primary.getAriaLabel();\n        }\n        return super.getAriaLabel();\n    }\n    getTelemetryDescriptor() {\n        const descriptor = this.primary.getTelemetryDescriptor();\n        return { ...descriptor, ...super.getTelemetryDescriptor() };\n    }\n    isDirty() {\n        return this.primary.isDirty();\n    }\n    isSaving() {\n        return this.primary.isSaving();\n    }\n    async save(group, options) {\n        const primarySaveResult = await this.primary.save(group, options);\n        return this.saveResultToEditor(primarySaveResult);\n    }\n    async saveAs(group, options) {\n        const primarySaveResult = await this.primary.saveAs(group, options);\n        return this.saveResultToEditor(primarySaveResult);\n    }\n    saveResultToEditor(primarySaveResult) {\n        if (!primarySaveResult || !this.hasIdenticalSides) {\n            return primarySaveResult;\n        }\n        if (this.primary.matches(primarySaveResult)) {\n            return this;\n        }\n        if (primarySaveResult instanceof EditorInput) {\n            return ( new SideBySideEditorInput_1(\n                this.preferredName,\n                this.preferredDescription,\n                primarySaveResult,\n                primarySaveResult,\n                this.editorService\n            ));\n        }\n        if (!isResourceDiffEditorInput(primarySaveResult) && !isResourceSideBySideEditorInput(primarySaveResult) && !isResourceMergeEditorInput(primarySaveResult)) {\n            return {\n                primary: primarySaveResult,\n                secondary: primarySaveResult,\n                label: this.preferredName,\n                description: this.preferredDescription\n            };\n        }\n        return undefined;\n    }\n    revert(group, options) {\n        return this.primary.revert(group, options);\n    }\n    async rename(group, target) {\n        if (!this.hasIdenticalSides) {\n            return;\n        }\n        const renameResult = await this.primary.rename(group, target);\n        if (!renameResult) {\n            return undefined;\n        }\n        if (isEditorInput(renameResult.editor)) {\n            return {\n                editor: ( new SideBySideEditorInput_1(\n                    this.preferredName,\n                    this.preferredDescription,\n                    renameResult.editor,\n                    renameResult.editor,\n                    this.editorService\n                )),\n                options: {\n                    ...renameResult.options,\n                    viewState: findViewStateForEditor(this, group, this.editorService)\n                }\n            };\n        }\n        if (isResourceEditorInput(renameResult.editor)) {\n            return {\n                editor: {\n                    label: this.preferredName,\n                    description: this.preferredDescription,\n                    primary: renameResult.editor,\n                    secondary: renameResult.editor,\n                    options: {\n                        ...renameResult.options,\n                        viewState: findViewStateForEditor(this, group, this.editorService)\n                    }\n                }\n            };\n        }\n        return undefined;\n    }\n    isReadonly() {\n        return this.primary.isReadonly();\n    }\n    toUntyped(options) {\n        const primaryResourceEditorInput = this.primary.toUntyped(options);\n        const secondaryResourceEditorInput = this.secondary.toUntyped(options);\n        if (primaryResourceEditorInput && secondaryResourceEditorInput &&\n            !isResourceDiffEditorInput(primaryResourceEditorInput) && !isResourceDiffEditorInput(secondaryResourceEditorInput) &&\n            !isResourceSideBySideEditorInput(primaryResourceEditorInput) && !isResourceSideBySideEditorInput(secondaryResourceEditorInput) &&\n            !isResourceMergeEditorInput(primaryResourceEditorInput) && !isResourceMergeEditorInput(secondaryResourceEditorInput)) {\n            const untypedInput = {\n                label: this.preferredName,\n                description: this.preferredDescription,\n                primary: primaryResourceEditorInput,\n                secondary: secondaryResourceEditorInput\n            };\n            if (typeof options?.preserveViewState === 'number') {\n                untypedInput.options = {\n                    viewState: findViewStateForEditor(this, options.preserveViewState, this.editorService)\n                };\n            }\n            return untypedInput;\n        }\n        return undefined;\n    }\n    matches(otherInput) {\n        if (this === otherInput) {\n            return true;\n        }\n        if (isDiffEditorInput(otherInput) || isResourceDiffEditorInput(otherInput)) {\n            return false;\n        }\n        if (otherInput instanceof SideBySideEditorInput_1) {\n            return this.primary.matches(otherInput.primary) && this.secondary.matches(otherInput.secondary);\n        }\n        if (isResourceSideBySideEditorInput(otherInput)) {\n            return this.primary.matches(otherInput.primary) && this.secondary.matches(otherInput.secondary);\n        }\n        return false;\n    }\n};\nSideBySideEditorInput = SideBySideEditorInput_1 = ( __decorate([\n    ( __param(4, IEditorService))\n], SideBySideEditorInput));\nexport { SideBySideEditorInput };\n", "import { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { firstOrDefault } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { AbstractEditorInput, isEditorInput, EditorResourceAccessor } from '../editor.js';\nimport { isEqual } from 'monaco-editor/esm/vs/base/common/resources.js';\nclass EditorInput extends AbstractEditorInput {\n    constructor() {\n        super(...arguments);\n        this._onDidChangeDirty = this._register(( new Emitter()));\n        this._onDidChangeLabel = this._register(( new Emitter()));\n        this._onDidChangeCapabilities = this._register(( new Emitter()));\n        this._onWillDispose = this._register(( new Emitter()));\n        this.onDidChangeDirty = this._onDidChangeDirty.event;\n        this.onDidChangeLabel = this._onDidChangeLabel.event;\n        this.onDidChangeCapabilities = this._onDidChangeCapabilities.event;\n        this.onWillDispose = this._onWillDispose.event;\n        this.disposed = false;\n    }\n    get editorId() {\n        return undefined;\n    }\n    get capabilities() {\n        return 2 ;\n    }\n    hasCapability(capability) {\n        if (capability === 0 ) {\n            return this.capabilities === 0 ;\n        }\n        return (this.capabilities & capability) !== 0;\n    }\n    isReadonly() {\n        return this.hasCapability(2 );\n    }\n    getName() {\n        return `Editor ${this.typeId}`;\n    }\n    getDescription(verbosity) {\n        return undefined;\n    }\n    getTitle(verbosity) {\n        return this.getName();\n    }\n    getLabelExtraClasses() {\n        return [];\n    }\n    getAriaLabel() {\n        return this.getTitle(0 );\n    }\n    getTelemetryDescriptor() {\n        return { typeId: this.typeId };\n    }\n    isDirty() {\n        return false;\n    }\n    isModified() {\n        return this.isDirty();\n    }\n    isSaving() {\n        return false;\n    }\n    async resolve(options) {\n        return null;\n    }\n    async save(group, options) {\n        return this;\n    }\n    async saveAs(group, options) {\n        return this;\n    }\n    async revert(group, options) { }\n    async rename(group, target) {\n        return undefined;\n    }\n    copy() {\n        return this;\n    }\n    matches(otherInput) {\n        if (isEditorInput(otherInput)) {\n            return this === otherInput;\n        }\n        const otherInputEditorId = otherInput.options?.override;\n        if (this.editorId !== otherInputEditorId && otherInputEditorId !== undefined && this.editorId !== undefined) {\n            return false;\n        }\n        return isEqual(this.resource, EditorResourceAccessor.getCanonicalUri(otherInput));\n    }\n    prefersEditorPane(editorPanes) {\n        return firstOrDefault(editorPanes);\n    }\n    toUntyped(options) {\n        return undefined;\n    }\n    isDisposed() {\n        return this.disposed;\n    }\n    dispose() {\n        if (!this.disposed) {\n            this.disposed = true;\n            this._onWillDispose.fire();\n        }\n        super.dispose();\n    }\n}\nexport { EditorInput };\n", "import { EditorModel } from './editorModel.js';\nclass DiffEditorModel extends EditorModel {\n    get originalModel() { return this._originalModel; }\n    get modifiedModel() { return this._modifiedModel; }\n    constructor(originalModel, modifiedModel) {\n        super();\n        this._originalModel = originalModel;\n        this._modifiedModel = modifiedModel;\n    }\n    async resolve() {\n        await Promise.all([\n            this._originalModel?.resolve(),\n            this._modifiedModel?.resolve()\n        ]);\n    }\n    isResolved() {\n        return !!(this.originalModel?.isResolved() && this.modifiedModel?.isResolved());\n    }\n    dispose() {\n        super.dispose();\n    }\n}\nexport { DiffEditorModel };\n", "import { DiffEditorModel } from './diffEditorModel.js';\nclass TextDiffEditorModel extends DiffEditorModel {\n    get originalModel() { return this._originalModel; }\n    get modifiedModel() { return this._modifiedModel; }\n    get textDiffEditorModel() { return this._textDiffEditorModel; }\n    constructor(originalModel, modifiedModel) {\n        super(originalModel, modifiedModel);\n        this._textDiffEditorModel = undefined;\n        this._originalModel = originalModel;\n        this._modifiedModel = modifiedModel;\n        this.updateTextDiffEditorModel();\n    }\n    async resolve() {\n        await super.resolve();\n        this.updateTextDiffEditorModel();\n    }\n    updateTextDiffEditorModel() {\n        if (this.originalModel?.isResolved() && this.modifiedModel?.isResolved()) {\n            if (!this._textDiffEditorModel) {\n                this._textDiffEditorModel = {\n                    original: this.originalModel.textEditorModel,\n                    modified: this.modifiedModel.textEditorModel\n                };\n            }\n            else {\n                this._textDiffEditorModel.original = this.originalModel.textEditorModel;\n                this._textDiffEditorModel.modified = this.modifiedModel.textEditorModel;\n            }\n        }\n    }\n    isResolved() {\n        return !!this._textDiffEditorModel;\n    }\n    isReadonly() {\n        return !!this.modifiedModel && this.modifiedModel.isReadonly();\n    }\n    dispose() {\n        this._textDiffEditorModel = undefined;\n        super.dispose();\n    }\n}\nexport { TextDiffEditorModel };\n", "import { __decorate, __param } from '../../../../../../external/tslib/tslib.es6.js';\nimport { DEFAULT_EDITOR_ASSOCIATION, isResourceEditorInput } from '../editor.js';\nimport { AbstractResourceEditorInput } from './resourceEditorInput.js';\nimport { ITextFileService } from '../../services/textfile/common/textfiles.js';\nimport { IEditorService } from '../../services/editor/common/editorService.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { isEqual } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { ITextModelService } from 'monaco-editor/esm/vs/editor/common/services/resolverService.js';\nimport { TextResourceEditorModel } from './textResourceEditorModel.js';\nimport { createTextBufferFactory } from 'monaco-editor/esm/vs/editor/common/model/textModel.js';\nimport { IFilesConfigurationService } from '../../services/filesConfiguration/common/filesConfigurationService.js';\nvar TextResourceEditorInput_1;\nlet AbstractTextResourceEditorInput = class AbstractTextResourceEditorInput extends AbstractResourceEditorInput {\n    constructor(resource, preferredResource, editorService, textFileService, labelService, fileService, filesConfigurationService) {\n        super(resource, preferredResource, labelService, fileService, filesConfigurationService);\n        this.editorService = editorService;\n        this.textFileService = textFileService;\n    }\n    save(group, options) {\n        if (this.resource.scheme !== Schemas.untitled && !this.fileService.hasProvider(this.resource)) {\n            return this.saveAs(group, options);\n        }\n        return this.doSave(options, false, group);\n    }\n    saveAs(group, options) {\n        return this.doSave(options, true, group);\n    }\n    async doSave(options, saveAs, group) {\n        let target;\n        if (saveAs) {\n            target = await this.textFileService.saveAs(this.resource, undefined, { ...options, suggestedTarget: this.preferredResource });\n        }\n        else {\n            target = await this.textFileService.save(this.resource, options);\n        }\n        if (!target) {\n            return undefined;\n        }\n        return { resource: target };\n    }\n    async revert(group, options) {\n        await this.textFileService.revert(this.resource, options);\n    }\n};\nAbstractTextResourceEditorInput = ( __decorate([\n    ( __param(2, IEditorService)),\n    ( __param(3, ITextFileService)),\n    ( __param(4, ILabelService)),\n    ( __param(5, IFileService)),\n    ( __param(6, IFilesConfigurationService))\n], AbstractTextResourceEditorInput));\nlet TextResourceEditorInput = class TextResourceEditorInput extends AbstractTextResourceEditorInput {\n    static { TextResourceEditorInput_1 = this; }\n    static { this.ID = 'workbench.editors.resourceEditorInput'; }\n    get typeId() {\n        return TextResourceEditorInput_1.ID;\n    }\n    get editorId() {\n        return DEFAULT_EDITOR_ASSOCIATION.id;\n    }\n    constructor(resource, name, description, preferredLanguageId, preferredContents, textModelResolverService, textFileService, editorService, fileService, labelService, filesConfigurationService) {\n        super(resource, undefined, editorService, textFileService, labelService, fileService, filesConfigurationService);\n        this.name = name;\n        this.description = description;\n        this.preferredLanguageId = preferredLanguageId;\n        this.preferredContents = preferredContents;\n        this.textModelResolverService = textModelResolverService;\n        this.cachedModel = undefined;\n        this.modelReference = undefined;\n    }\n    getName() {\n        return this.name || super.getName();\n    }\n    setName(name) {\n        if (this.name !== name) {\n            this.name = name;\n            this._onDidChangeLabel.fire();\n        }\n    }\n    getDescription() {\n        return this.description;\n    }\n    setDescription(description) {\n        if (this.description !== description) {\n            this.description = description;\n            this._onDidChangeLabel.fire();\n        }\n    }\n    setLanguageId(languageId, source) {\n        this.setPreferredLanguageId(languageId);\n        this.cachedModel?.setLanguageId(languageId, source);\n    }\n    setPreferredLanguageId(languageId) {\n        this.preferredLanguageId = languageId;\n    }\n    setPreferredContents(contents) {\n        this.preferredContents = contents;\n    }\n    async resolve() {\n        const preferredContents = this.preferredContents;\n        const preferredLanguageId = this.preferredLanguageId;\n        this.preferredContents = undefined;\n        this.preferredLanguageId = undefined;\n        if (!this.modelReference) {\n            this.modelReference = this.textModelResolverService.createModelReference(this.resource);\n        }\n        const ref = await this.modelReference;\n        const model = ref.object;\n        if (!(model instanceof TextResourceEditorModel)) {\n            ref.dispose();\n            this.modelReference = undefined;\n            throw new Error(`Unexpected model for TextResourceEditorInput: ${this.resource}`);\n        }\n        this.cachedModel = model;\n        if (typeof preferredContents === 'string' || typeof preferredLanguageId === 'string') {\n            model.updateTextEditorModel(typeof preferredContents === 'string' ? createTextBufferFactory(preferredContents) : undefined, preferredLanguageId);\n        }\n        return model;\n    }\n    matches(otherInput) {\n        if (this === otherInput) {\n            return true;\n        }\n        if (otherInput instanceof TextResourceEditorInput_1) {\n            return isEqual(otherInput.resource, this.resource);\n        }\n        if (isResourceEditorInput(otherInput)) {\n            return super.matches(otherInput);\n        }\n        return false;\n    }\n    dispose() {\n        if (this.modelReference) {\n            this.modelReference.then(ref => ref.dispose());\n            this.modelReference = undefined;\n        }\n        this.cachedModel = undefined;\n        super.dispose();\n    }\n};\nTextResourceEditorInput = TextResourceEditorInput_1 = ( __decorate([\n    ( __param(5, ITextModelService)),\n    ( __param(6, ITextFileService)),\n    ( __param(7, IEditorService)),\n    ( __param(8, IFileService)),\n    ( __param(9, ILabelService)),\n    ( __param(10, IFilesConfigurationService))\n], TextResourceEditorInput));\nexport { AbstractTextResourceEditorInput, TextResourceEditorInput };\n", "import { __decorate, __param } from '../../../../../../external/tslib/tslib.es6.js';\nimport { EditorInput } from './editorInput.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { isEqual, dirname } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { IFilesConfigurationService } from '../../services/filesConfiguration/common/filesConfigurationService.js';\nlet AbstractResourceEditorInput = class AbstractResourceEditorInput extends EditorInput {\n    get capabilities() {\n        let capabilities = 32 ;\n        if (this.fileService.hasProvider(this.resource)) {\n            if (this.filesConfigurationService.isReadonly(this.resource)) {\n                capabilities |= 2 ;\n            }\n        }\n        else {\n            capabilities |= 4 ;\n        }\n        if (!((capabilities & 2) )) {\n            capabilities |= 128 ;\n        }\n        return capabilities;\n    }\n    get preferredResource() { return this._preferredResource; }\n    constructor(resource, preferredResource, labelService, fileService, filesConfigurationService) {\n        super();\n        this.resource = resource;\n        this.labelService = labelService;\n        this.fileService = fileService;\n        this.filesConfigurationService = filesConfigurationService;\n        this._name = undefined;\n        this._shortDescription = undefined;\n        this._mediumDescription = undefined;\n        this._longDescription = undefined;\n        this._shortTitle = undefined;\n        this._mediumTitle = undefined;\n        this._longTitle = undefined;\n        this._preferredResource = preferredResource || resource;\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.labelService.onDidChangeFormatters(e => this.onLabelEvent(e.scheme)));\n        this._register(this.fileService.onDidChangeFileSystemProviderRegistrations(e => this.onLabelEvent(e.scheme)));\n        this._register(this.fileService.onDidChangeFileSystemProviderCapabilities(e => this.onLabelEvent(e.scheme)));\n    }\n    onLabelEvent(scheme) {\n        if (scheme === this._preferredResource.scheme) {\n            this.updateLabel();\n        }\n    }\n    updateLabel() {\n        this._name = undefined;\n        this._shortDescription = undefined;\n        this._mediumDescription = undefined;\n        this._longDescription = undefined;\n        this._shortTitle = undefined;\n        this._mediumTitle = undefined;\n        this._longTitle = undefined;\n        this._onDidChangeLabel.fire();\n    }\n    setPreferredResource(preferredResource) {\n        if (!isEqual(preferredResource, this._preferredResource)) {\n            this._preferredResource = preferredResource;\n            this.updateLabel();\n        }\n    }\n    getName() {\n        if (typeof this._name !== 'string') {\n            this._name = this.labelService.getUriBasenameLabel(this._preferredResource);\n        }\n        return this._name;\n    }\n    getDescription(verbosity = 1 ) {\n        switch (verbosity) {\n            case 0 :\n                return this.shortDescription;\n            case 2 :\n                return this.longDescription;\n            case 1 :\n            default:\n                return this.mediumDescription;\n        }\n    }\n    get shortDescription() {\n        if (typeof this._shortDescription !== 'string') {\n            this._shortDescription = this.labelService.getUriBasenameLabel(dirname(this._preferredResource));\n        }\n        return this._shortDescription;\n    }\n    get mediumDescription() {\n        if (typeof this._mediumDescription !== 'string') {\n            this._mediumDescription = this.labelService.getUriLabel(dirname(this._preferredResource), { relative: true });\n        }\n        return this._mediumDescription;\n    }\n    get longDescription() {\n        if (typeof this._longDescription !== 'string') {\n            this._longDescription = this.labelService.getUriLabel(dirname(this._preferredResource));\n        }\n        return this._longDescription;\n    }\n    get shortTitle() {\n        if (typeof this._shortTitle !== 'string') {\n            this._shortTitle = this.getName();\n        }\n        return this._shortTitle;\n    }\n    get mediumTitle() {\n        if (typeof this._mediumTitle !== 'string') {\n            this._mediumTitle = this.labelService.getUriLabel(this._preferredResource, { relative: true });\n        }\n        return this._mediumTitle;\n    }\n    get longTitle() {\n        if (typeof this._longTitle !== 'string') {\n            this._longTitle = this.labelService.getUriLabel(this._preferredResource);\n        }\n        return this._longTitle;\n    }\n    getTitle(verbosity) {\n        switch (verbosity) {\n            case 0 :\n                return this.shortTitle;\n            case 2 :\n                return this.longTitle;\n            default:\n            case 1 :\n                return this.mediumTitle;\n        }\n    }\n    isReadonly() {\n        return this.filesConfigurationService.isReadonly(this.resource);\n    }\n};\nAbstractResourceEditorInput = ( __decorate([\n    ( __param(2, ILabelService)),\n    ( __param(3, IFileService)),\n    ( __param(4, IFilesConfigurationService))\n], AbstractResourceEditorInput));\nexport { AbstractResourceEditorInput };\n", "import { __decorate, __param } from '../../../../../../external/tslib/tslib.es6.js';\nimport { BaseTextEditorModel } from './textEditorModel.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { ILanguageDetectionService } from '../../services/languageDetection/common/languageDetectionWorkerService.js';\nimport { IAccessibilityService } from 'monaco-editor/esm/vs/platform/accessibility/common/accessibility.js';\nlet TextResourceEditorModel = class TextResourceEditorModel extends BaseTextEditorModel {\n    constructor(resource, languageService, modelService, languageDetectionService, accessibilityService) {\n        super(modelService, languageService, languageDetectionService, accessibilityService, resource);\n    }\n    dispose() {\n        if (this.textEditorModelHandle) {\n            this.modelService.destroyModel(this.textEditorModelHandle);\n        }\n        super.dispose();\n    }\n};\nTextResourceEditorModel = ( __decorate([\n    ( __param(1, ILanguageService)),\n    ( __param(2, IModelService)),\n    ( __param(3, ILanguageDetectionService)),\n    ( __param(4, IAccessibilityService))\n], TextResourceEditorModel));\nexport { TextResourceEditorModel };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { DEFAULT_EDITOR_ASSOCIATION, findViewStateForEditor, isUntitledResourceEditorInput } from '../../../common/editor.js';\nimport { AbstractTextResourceEditorInput } from '../../../common/editor/textResourceEditorInput.js';\nimport { ITextFileService } from '../../textfile/common/textfiles.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { IEditorService } from '../../editor/common/editorService.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { toLocalResource, isEqual } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { IWorkbenchEnvironmentService } from '../../environment/common/environmentService.js';\nimport { IPathService } from '../../path/common/pathService.js';\nimport { IFilesConfigurationService } from '../../filesConfiguration/common/filesConfigurationService.js';\nvar UntitledTextEditorInput_1;\nlet UntitledTextEditorInput = class UntitledTextEditorInput extends AbstractTextResourceEditorInput {\n    static { UntitledTextEditorInput_1 = this; }\n    static { this.ID = 'workbench.editors.untitledEditorInput'; }\n    get typeId() {\n        return UntitledTextEditorInput_1.ID;\n    }\n    get editorId() {\n        return DEFAULT_EDITOR_ASSOCIATION.id;\n    }\n    constructor(model, textFileService, labelService, editorService, fileService, environmentService, pathService, filesConfigurationService) {\n        super(model.resource, undefined, editorService, textFileService, labelService, fileService, filesConfigurationService);\n        this.model = model;\n        this.environmentService = environmentService;\n        this.pathService = pathService;\n        this.modelResolve = undefined;\n        this.registerModelListeners(model);\n    }\n    registerModelListeners(model) {\n        this._register(model.onDidChangeDirty(() => this._onDidChangeDirty.fire()));\n        this._register(model.onDidChangeName(() => this._onDidChangeLabel.fire()));\n        this._register(model.onDidRevert(() => this.dispose()));\n    }\n    getName() {\n        return this.model.name;\n    }\n    getDescription(verbosity = 1 ) {\n        if (!this.model.hasAssociatedFilePath) {\n            const descriptionCandidate = this.resource.path;\n            if (descriptionCandidate !== this.getName()) {\n                return descriptionCandidate;\n            }\n            return undefined;\n        }\n        return super.getDescription(verbosity);\n    }\n    getTitle(verbosity) {\n        if (!this.model.hasAssociatedFilePath) {\n            const name = this.getName();\n            const description = this.getDescription();\n            if (description && description !== name) {\n                return `${name} • ${description}`;\n            }\n            return name;\n        }\n        return super.getTitle(verbosity);\n    }\n    isDirty() {\n        return this.model.isDirty();\n    }\n    getEncoding() {\n        return this.model.getEncoding();\n    }\n    setEncoding(encoding, mode ) {\n        return this.model.setEncoding(encoding);\n    }\n    setLanguageId(languageId, source) {\n        this.model.setLanguageId(languageId, source);\n    }\n    getLanguageId() {\n        return this.model.getLanguageId();\n    }\n    async resolve() {\n        if (!this.modelResolve) {\n            this.modelResolve = this.model.resolve();\n        }\n        await this.modelResolve;\n        return this.model;\n    }\n    toUntyped(options) {\n        const untypedInput = {\n            resource: this.model.hasAssociatedFilePath ? toLocalResource(this.model.resource, this.environmentService.remoteAuthority, this.pathService.defaultUriScheme) : this.resource,\n            forceUntitled: true,\n            options: {\n                override: this.editorId\n            }\n        };\n        if (typeof options?.preserveViewState === 'number') {\n            untypedInput.encoding = this.getEncoding();\n            untypedInput.languageId = this.getLanguageId();\n            untypedInput.contents = this.model.isModified() ? this.model.textEditorModel?.getValue() : undefined;\n            untypedInput.options.viewState = findViewStateForEditor(this, options.preserveViewState, this.editorService);\n            if (typeof untypedInput.contents === 'string' && !this.model.hasAssociatedFilePath) {\n                untypedInput.resource = undefined;\n            }\n        }\n        return untypedInput;\n    }\n    matches(otherInput) {\n        if (this === otherInput) {\n            return true;\n        }\n        if (otherInput instanceof UntitledTextEditorInput_1) {\n            return isEqual(otherInput.resource, this.resource);\n        }\n        if (isUntitledResourceEditorInput(otherInput)) {\n            return super.matches(otherInput);\n        }\n        return false;\n    }\n    dispose() {\n        this.modelResolve = undefined;\n        super.dispose();\n    }\n};\nUntitledTextEditorInput = UntitledTextEditorInput_1 = ( __decorate([\n    ( __param(1, ITextFileService)),\n    ( __param(2, ILabelService)),\n    ( __param(3, IEditorService)),\n    ( __param(4, IFileService)),\n    ( __param(5, IWorkbenchEnvironmentService)),\n    ( __param(6, IPathService)),\n    ( __param(7, IFilesConfigurationService))\n], UntitledTextEditorInput));\nexport { UntitledTextEditorInput };\n", "import * as glob from 'monaco-editor/esm/vs/base/common/glob.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { posix } from 'monaco-editor/esm/vs/base/common/path.js';\nimport { basename } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { workbenchConfigurationNodeBase } from '../../../common/configuration.js';\nimport { Extensions } from 'monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nconst IEditorResolverService = ( createDecorator('editorResolverService'));\nconst editorsAssociationsSettingId = 'workbench.editorAssociations';\nconst configurationRegistry = ( Registry.as(Extensions.Configuration));\nconst editorAssociationsConfigurationNode = {\n    ...workbenchConfigurationNodeBase,\n    properties: {\n        'workbench.editorAssociations': {\n            type: 'object',\n            markdownDescription: ( localize(\n                'editor.editorAssociations',\n                \"Configure [glob patterns](https://aka.ms/vscode-glob-patterns) to editors (for example `\\\"*.hex\\\": \\\"hexEditor.hexedit\\\"`). These have precedence over the default behavior.\"\n            )),\n            additionalProperties: {\n                type: 'string'\n            }\n        }\n    }\n};\nconfigurationRegistry.registerConfiguration(editorAssociationsConfigurationNode);\nvar RegisteredEditorPriority;\n( (function(RegisteredEditorPriority) {\n    RegisteredEditorPriority[\"builtin\"] = \"builtin\";\n    RegisteredEditorPriority[\"option\"] = \"option\";\n    RegisteredEditorPriority[\"exclusive\"] = \"exclusive\";\n    RegisteredEditorPriority[\"default\"] = \"default\";\n})(RegisteredEditorPriority || (RegisteredEditorPriority = {})));\nfunction priorityToRank(priority) {\n    switch (priority) {\n        case RegisteredEditorPriority.exclusive:\n            return 5;\n        case RegisteredEditorPriority.default:\n            return 4;\n        case RegisteredEditorPriority.builtin:\n            return 3;\n        case RegisteredEditorPriority.option:\n        default:\n            return 1;\n    }\n}\nfunction globMatchesResource(globPattern, resource) {\n    const excludedSchemes = ( new Set([\n        Schemas.extension,\n        Schemas.webviewPanel,\n        Schemas.vscodeWorkspaceTrust,\n        Schemas.vscodeSettings\n    ]));\n    if (( excludedSchemes.has(resource.scheme))) {\n        return false;\n    }\n    const matchOnPath = typeof globPattern === 'string' && globPattern.indexOf(posix.sep) >= 0;\n    const target = matchOnPath ? `${resource.scheme}:${resource.path}` : basename(resource);\n    return glob.match(typeof globPattern === 'string' ? globPattern.toLowerCase() : globPattern, target.toLowerCase());\n}\nexport { IEditorResolverService, RegisteredEditorPriority, editorsAssociationsSettingId, globMatchesResource, priorityToRank };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Barrier } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { LifecyclePhaseToString } from './lifecycle.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { mark } from 'monaco-editor/esm/vs/base/common/performance.js';\nimport { WillSaveStateReason, IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nvar AbstractLifecycleService_1;\nlet AbstractLifecycleService = class AbstractLifecycleService extends Disposable {\n    static { AbstractLifecycleService_1 = this; }\n    static { this.LAST_SHUTDOWN_REASON_KEY = 'lifecyle.lastShutdownReason'; }\n    get startupKind() { return this._startupKind; }\n    get phase() { return this._phase; }\n    constructor(logService, storageService) {\n        super();\n        this.logService = logService;\n        this.storageService = storageService;\n        this._onBeforeShutdown = this._register(( new Emitter()));\n        this.onBeforeShutdown = this._onBeforeShutdown.event;\n        this._onWillShutdown = this._register(( new Emitter()));\n        this.onWillShutdown = this._onWillShutdown.event;\n        this._onDidShutdown = this._register(( new Emitter()));\n        this.onDidShutdown = this._onDidShutdown.event;\n        this._onBeforeShutdownError = this._register(( new Emitter()));\n        this.onBeforeShutdownError = this._onBeforeShutdownError.event;\n        this._onShutdownVeto = this._register(( new Emitter()));\n        this.onShutdownVeto = this._onShutdownVeto.event;\n        this._phase = 1 ;\n        this.phaseWhen = ( new Map());\n        this._startupKind = this.resolveStartupKind();\n        this.storageService.onWillSaveState(e => {\n            if (e.reason === WillSaveStateReason.SHUTDOWN) {\n                this.storageService.store(AbstractLifecycleService_1.LAST_SHUTDOWN_REASON_KEY, this.shutdownReason, 1 , 1 );\n            }\n        });\n    }\n    resolveStartupKind() {\n        const lastShutdownReason = this.storageService.getNumber(AbstractLifecycleService_1.LAST_SHUTDOWN_REASON_KEY, 1 );\n        this.storageService.remove(AbstractLifecycleService_1.LAST_SHUTDOWN_REASON_KEY, 1 );\n        let startupKind;\n        switch (lastShutdownReason) {\n            case 3 :\n                startupKind = 3 ;\n                break;\n            case 4 :\n                startupKind = 4 ;\n                break;\n            default:\n                startupKind = 1 ;\n        }\n        this.logService.trace(`[lifecycle] starting up (startup kind: ${startupKind})`);\n        return startupKind;\n    }\n    set phase(value) {\n        if (value < this.phase) {\n            throw new Error('Lifecycle cannot go backwards');\n        }\n        if (this._phase === value) {\n            return;\n        }\n        this.logService.trace(`lifecycle: phase changed (value: ${value})`);\n        this._phase = value;\n        mark(`code/LifecyclePhase/${LifecyclePhaseToString(value)}`);\n        const barrier = this.phaseWhen.get(this._phase);\n        if (barrier) {\n            barrier.open();\n            this.phaseWhen.delete(this._phase);\n        }\n    }\n    async when(phase) {\n        if (phase <= this._phase) {\n            return;\n        }\n        let barrier = this.phaseWhen.get(phase);\n        if (!barrier) {\n            barrier = ( new Barrier());\n            this.phaseWhen.set(phase, barrier);\n        }\n        await barrier.wait();\n    }\n};\nAbstractLifecycleService = AbstractLifecycleService_1 = ( __decorate([\n    ( __param(0, ILogService)),\n    ( __param(1, IStorageService))\n], AbstractLifecycleService));\nexport { AbstractLifecycleService };\n", "import { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst OUTPUT_MIME = 'text/x-code-output';\nconst OUTPUT_SCHEME = 'output';\nconst OUTPUT_MODE_ID = 'Log';\nconst LOG_MIME = 'text/x-code-log-output';\nconst LOG_SCHEME = 'log';\nconst LOG_MODE_ID = 'log';\nconst OUTPUT_VIEW_ID = 'workbench.panel.output';\nconst CONTEXT_IN_OUTPUT = ( new RawContextKey('inOutput', false));\nconst CONTEXT_ACTIVE_LOG_OUTPUT = ( new RawContextKey('activeLogOutput', false));\nconst CONTEXT_OUTPUT_SCROLL_LOCK = ( new RawContextKey(`outputView.scrollLock`, false));\nconst IOutputService = ( createDecorator('outputService'));\nvar OutputChannelUpdateMode;\n( (function(OutputChannelUpdateMode) {\n    OutputChannelUpdateMode[OutputChannelUpdateMode[\"Append\"] = 1] = \"Append\";\n    OutputChannelUpdateMode[OutputChannelUpdateMode[\"Replace\"] = 2] = \"Replace\";\n    OutputChannelUpdateMode[OutputChannelUpdateMode[\"Clear\"] = 3] = \"Clear\";\n})(OutputChannelUpdateMode || (OutputChannelUpdateMode = {})));\nconst Extensions = {\n    OutputChannels: 'workbench.contributions.outputChannels'\n};\nclass OutputChannelRegistry {\n    constructor() {\n        this.channels = ( new Map());\n        this._onDidRegisterChannel = ( new Emitter());\n        this.onDidRegisterChannel = this._onDidRegisterChannel.event;\n        this._onDidRemoveChannel = ( new Emitter());\n        this.onDidRemoveChannel = this._onDidRemoveChannel.event;\n    }\n    registerChannel(descriptor) {\n        if (!( this.channels.has(descriptor.id))) {\n            this.channels.set(descriptor.id, descriptor);\n            this._onDidRegisterChannel.fire(descriptor.id);\n        }\n    }\n    getChannels() {\n        const result = [];\n        this.channels.forEach(value => result.push(value));\n        return result;\n    }\n    getChannel(id) {\n        return this.channels.get(id);\n    }\n    removeChannel(id) {\n        this.channels.delete(id);\n        this._onDidRemoveChannel.fire(id);\n    }\n}\nRegistry.add(Extensions.OutputChannels, ( new OutputChannelRegistry()));\nconst ACTIVE_OUTPUT_CHANNEL_CONTEXT = ( new RawContextKey('activeOutputChannel', ''));\nexport { ACTIVE_OUTPUT_CHANNEL_CONTEXT, CONTEXT_ACTIVE_LOG_OUTPUT, CONTEXT_IN_OUTPUT, CONTEXT_OUTPUT_SCROLL_LOCK, Extensions, IOutputService, LOG_MIME, LOG_MODE_ID, LOG_SCHEME, OUTPUT_MIME, OUTPUT_MODE_ID, OUTPUT_SCHEME, OUTPUT_VIEW_ID, OutputChannelUpdateMode };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { Emitter, Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { Disposable, dispose } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { ACTIVE_OUTPUT_CHANNEL_CONTEXT, CONTEXT_ACTIVE_LOG_OUTPUT, OUTPUT_SCHEME, OUTPUT_VIEW_ID, Extensions, LOG_MIME, OUTPUT_MIME, LOG_SCHEME, IOutputService } from '../../../services/output/common/output.js';\nimport { OutputLinkProvider } from './outputLinkProvider.js';\nimport { ITextModelService } from 'monaco-editor/esm/vs/editor/common/services/resolverService.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { ILifecycleService } from '../../../services/lifecycle/common/lifecycle.js';\nimport { IViewsService } from '../../../common/views.js';\nimport { IOutputChannelModelService } from '../common/outputChannelModelService.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nconst OUTPUT_ACTIVE_CHANNEL_KEY = 'output.activechannel';\nlet OutputChannel = class OutputChannel extends Disposable {\n    constructor(outputChannelDescriptor, outputChannelModelService, languageService) {\n        super();\n        this.outputChannelDescriptor = outputChannelDescriptor;\n        this.scrollLock = false;\n        this.id = outputChannelDescriptor.id;\n        this.label = outputChannelDescriptor.label;\n        this.uri = ( URI.from({ scheme: OUTPUT_SCHEME, path: this.id }));\n        this.model = this._register(outputChannelModelService.createOutputChannelModel(this.id, this.uri, outputChannelDescriptor.languageId ? languageService.createById(outputChannelDescriptor.languageId) : languageService.createByMimeType(outputChannelDescriptor.log ? LOG_MIME : OUTPUT_MIME), outputChannelDescriptor.file));\n    }\n    append(output) {\n        this.model.append(output);\n    }\n    update(mode, till) {\n        this.model.update(mode, till, true);\n    }\n    clear() {\n        this.model.clear();\n    }\n    replace(value) {\n        this.model.replace(value);\n    }\n};\nOutputChannel = ( __decorate([\n    ( __param(1, IOutputChannelModelService)),\n    ( __param(2, ILanguageService))\n], OutputChannel));\nlet OutputService = class OutputService extends Disposable {\n    constructor(storageService, instantiationService, textModelResolverService, logService, lifecycleService, viewsService, contextKeyService) {\n        super();\n        this.storageService = storageService;\n        this.instantiationService = instantiationService;\n        this.logService = logService;\n        this.lifecycleService = lifecycleService;\n        this.viewsService = viewsService;\n        this.channels = ( new Map());\n        this._onActiveOutputChannel = this._register(( new Emitter()));\n        this.onActiveOutputChannel = this._onActiveOutputChannel.event;\n        this.activeChannelIdInStorage = this.storageService.get(OUTPUT_ACTIVE_CHANNEL_KEY, 1 , '');\n        this.activeOutputChannelContext = ACTIVE_OUTPUT_CHANNEL_CONTEXT.bindTo(contextKeyService);\n        this.activeOutputChannelContext.set(this.activeChannelIdInStorage);\n        this._register(this.onActiveOutputChannel(channel => this.activeOutputChannelContext.set(channel)));\n        this.activeLogOutputChannelContext = CONTEXT_ACTIVE_LOG_OUTPUT.bindTo(contextKeyService);\n        textModelResolverService.registerTextModelContentProvider(OUTPUT_SCHEME, this);\n        instantiationService.createInstance(OutputLinkProvider);\n        const registry = ( Registry.as(Extensions.OutputChannels));\n        for (const channelIdentifier of registry.getChannels()) {\n            this.onDidRegisterChannel(channelIdentifier.id);\n        }\n        this._register(registry.onDidRegisterChannel(this.onDidRegisterChannel, this));\n        if (!this.activeChannel) {\n            const channels = this.getChannelDescriptors();\n            this.setActiveChannel(channels && channels.length > 0 ? this.getChannel(channels[0].id) : undefined);\n        }\n        this._register(Event.filter(this.viewsService.onDidChangeViewVisibility, e => e.id === OUTPUT_VIEW_ID && e.visible)(() => {\n            if (this.activeChannel) {\n                this.viewsService.getActiveViewWithId(OUTPUT_VIEW_ID)?.showChannel(this.activeChannel, true);\n            }\n        }));\n        this._register(this.lifecycleService.onDidShutdown(() => this.dispose()));\n    }\n    provideTextContent(resource) {\n        const channel = this.getChannel(resource.path);\n        if (channel) {\n            return channel.model.loadModel();\n        }\n        return null;\n    }\n    async showChannel(id, preserveFocus) {\n        const channel = this.getChannel(id);\n        if (this.activeChannel?.id !== channel?.id) {\n            this.setActiveChannel(channel);\n            this._onActiveOutputChannel.fire(id);\n        }\n        const outputView = await this.viewsService.openView(OUTPUT_VIEW_ID, !preserveFocus);\n        if (outputView && channel) {\n            outputView.showChannel(channel, !!preserveFocus);\n        }\n    }\n    getChannel(id) {\n        return this.channels.get(id);\n    }\n    getChannelDescriptor(id) {\n        return ( Registry.as(Extensions.OutputChannels)).getChannel(id);\n    }\n    getChannelDescriptors() {\n        return ( Registry.as(Extensions.OutputChannels)).getChannels();\n    }\n    getActiveChannel() {\n        return this.activeChannel;\n    }\n    async onDidRegisterChannel(channelId) {\n        const channel = this.createChannel(channelId);\n        this.channels.set(channelId, channel);\n        if (!this.activeChannel || this.activeChannelIdInStorage === channelId) {\n            this.setActiveChannel(channel);\n            this._onActiveOutputChannel.fire(channelId);\n            const outputView = this.viewsService.getActiveViewWithId(OUTPUT_VIEW_ID);\n            outputView?.showChannel(channel, true);\n        }\n    }\n    createChannel(id) {\n        const channelDisposables = [];\n        const channel = this.instantiateChannel(id);\n        channel.model.onDispose(() => {\n            if (this.activeChannel === channel) {\n                const channels = this.getChannelDescriptors();\n                const channel = channels.length ? this.getChannel(channels[0].id) : undefined;\n                if (channel && this.viewsService.isViewVisible(OUTPUT_VIEW_ID)) {\n                    this.showChannel(channel.id);\n                }\n                else {\n                    this.setActiveChannel(undefined);\n                }\n            }\n            ( Registry.as(Extensions.OutputChannels)).removeChannel(id);\n            dispose(channelDisposables);\n        }, channelDisposables);\n        return channel;\n    }\n    instantiateChannel(id) {\n        const channelData = ( Registry.as(Extensions.OutputChannels)).getChannel(id);\n        if (!channelData) {\n            this.logService.error(`Channel '${id}' is not registered yet`);\n            throw new Error(`Channel '${id}' is not registered yet`);\n        }\n        return this.instantiationService.createInstance(OutputChannel, channelData);\n    }\n    setActiveChannel(channel) {\n        this.activeChannel = channel;\n        this.activeLogOutputChannelContext.set(!!channel?.outputChannelDescriptor?.file && channel?.outputChannelDescriptor?.log);\n        if (this.activeChannel) {\n            this.storageService.store(OUTPUT_ACTIVE_CHANNEL_KEY, this.activeChannel.id, 1 , 1 );\n        }\n        else {\n            this.storageService.remove(OUTPUT_ACTIVE_CHANNEL_KEY, 1 );\n        }\n    }\n};\nOutputService = ( __decorate([\n    ( __param(0, IStorageService)),\n    ( __param(1, IInstantiationService)),\n    ( __param(2, ITextModelService)),\n    ( __param(3, ILogService)),\n    ( __param(4, ILifecycleService)),\n    ( __param(5, IViewsService)),\n    ( __param(6, IContextKeyService))\n], OutputService));\nlet LogContentProvider = class LogContentProvider {\n    constructor(outputService, outputChannelModelService, languageService) {\n        this.outputService = outputService;\n        this.outputChannelModelService = outputChannelModelService;\n        this.languageService = languageService;\n        this.channelModels = ( new Map());\n    }\n    provideTextContent(resource) {\n        if (resource.scheme === LOG_SCHEME) {\n            const channelModel = this.getChannelModel(resource);\n            if (channelModel) {\n                return channelModel.loadModel();\n            }\n        }\n        return null;\n    }\n    getChannelModel(resource) {\n        const channelId = resource.path;\n        let channelModel = this.channelModels.get(channelId);\n        if (!channelModel) {\n            const channelDisposables = [];\n            const outputChannelDescriptor = this.outputService.getChannelDescriptors().filter(({ id }) => id === channelId)[0];\n            if (outputChannelDescriptor && outputChannelDescriptor.file) {\n                channelModel = this.outputChannelModelService.createOutputChannelModel(channelId, resource, outputChannelDescriptor.languageId ? this.languageService.createById(outputChannelDescriptor.languageId) : this.languageService.createByMimeType(outputChannelDescriptor.log ? LOG_MIME : OUTPUT_MIME), outputChannelDescriptor.file);\n                channelModel.onDispose(() => dispose(channelDisposables), channelDisposables);\n                this.channelModels.set(channelId, channelModel);\n            }\n        }\n        return channelModel;\n    }\n};\nLogContentProvider = ( __decorate([\n    ( __param(0, IOutputService)),\n    ( __param(1, IOutputChannelModelService)),\n    ( __param(2, ILanguageService))\n], LogContentProvider));\nexport { LogContentProvider, OutputService };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { RunOnceScheduler } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { OUTPUT_MODE_ID, LOG_MODE_ID } from '../../../services/output/common/output.js';\nimport { createWebWorker } from 'monaco-editor/esm/vs/editor/browser/services/webWorker.js';\nimport { dispose } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { ILanguageConfigurationService } from 'monaco-editor/esm/vs/editor/common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from 'monaco-editor/esm/vs/editor/common/services/languageFeatures.js';\nvar OutputLinkProvider_1;\nlet OutputLinkProvider = class OutputLinkProvider {\n    static { OutputLinkProvider_1 = this; }\n    static { this.DISPOSE_WORKER_TIME = 3 * 60 * 1000; }\n    constructor(contextService, modelService, languageConfigurationService, languageFeaturesService) {\n        this.contextService = contextService;\n        this.modelService = modelService;\n        this.languageConfigurationService = languageConfigurationService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.disposeWorkerScheduler = ( new RunOnceScheduler(() => this.disposeWorker(), OutputLinkProvider_1.DISPOSE_WORKER_TIME));\n        this.registerListeners();\n        this.updateLinkProviderWorker();\n    }\n    registerListeners() {\n        this.contextService.onDidChangeWorkspaceFolders(() => this.updateLinkProviderWorker());\n    }\n    updateLinkProviderWorker() {\n        const folders = this.contextService.getWorkspace().folders;\n        if (folders.length > 0) {\n            if (!this.linkProviderRegistration) {\n                this.linkProviderRegistration = this.languageFeaturesService.linkProvider.register([{ language: OUTPUT_MODE_ID, scheme: '*' }, { language: LOG_MODE_ID, scheme: '*' }], {\n                    provideLinks: async (model) => {\n                        const links = await this.provideLinks(model.uri);\n                        return links && { links };\n                    }\n                });\n            }\n        }\n        else {\n            dispose(this.linkProviderRegistration);\n            this.linkProviderRegistration = undefined;\n        }\n        this.disposeWorker();\n        this.disposeWorkerScheduler.cancel();\n    }\n    getOrCreateWorker() {\n        this.disposeWorkerScheduler.schedule();\n        if (!this.worker) {\n            const createData = {\n                workspaceFolders: ( this.contextService.getWorkspace().folders.map(folder => ( folder.uri.toString())))\n            };\n            this.worker = createWebWorker(this.modelService, this.languageConfigurationService, {\n                moduleId: 'vs/workbench/contrib/output/common/outputLinkComputer',\n                createData,\n                label: 'outputLinkComputer'\n            });\n        }\n        return this.worker;\n    }\n    async provideLinks(modelUri) {\n        const linkComputer = await this.getOrCreateWorker().withSyncedResources([modelUri]);\n        return linkComputer.computeLinks(( modelUri.toString()));\n    }\n    disposeWorker() {\n        if (this.worker) {\n            this.worker.dispose();\n            this.worker = undefined;\n        }\n    }\n};\nOutputLinkProvider = OutputLinkProvider_1 = ( __decorate([\n    ( __param(0, IWorkspaceContextService)),\n    ( __param(1, IModelService)),\n    ( __param(2, ILanguageConfigurationService)),\n    ( __param(3, ILanguageFeaturesService))\n], OutputLinkProvider));\nexport { OutputLinkProvider };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { createDecorator, IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { toLocalISOString } from '../../../../base/common/date.js';\nimport { joinPath } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { FileOutputChannelModel, DelegatedOutputChannelModel } from './outputChannelModel.js';\nconst IOutputChannelModelService = ( createDecorator('outputChannelModelService'));\nlet OutputChannelModelService = class OutputChannelModelService {\n    constructor(fileService, instantiationService, environmentService) {\n        this.fileService = fileService;\n        this.instantiationService = instantiationService;\n        this._outputDir = null;\n        this.outputLocation = joinPath(environmentService.windowLogsPath, `output_${toLocalISOString(( new Date())).replace(/-|:|\\.\\d+Z$/g, '')}`);\n    }\n    createOutputChannelModel(id, modelUri, language, file) {\n        return file ? this.instantiationService.createInstance(FileOutputChannelModel, modelUri, language, file) : this.instantiationService.createInstance(DelegatedOutputChannelModel, id, modelUri, language, this.outputDir);\n    }\n    get outputDir() {\n        if (!this._outputDir) {\n            this._outputDir = this.fileService.createFolder(this.outputLocation).then(() => this.outputLocation);\n        }\n        return this._outputDir;\n    }\n};\nOutputChannelModelService = ( __decorate([\n    ( __param(0, IFileService)),\n    ( __param(1, IInstantiationService)),\n    ( __param(2, IWorkbenchEnvironmentService))\n], OutputChannelModelService));\nexport { IOutputChannelModelService, OutputChannelModelService };\n", "import { localize } from 'monaco-editor/esm/vs/nls.js';\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst month = day * 30;\nconst year = day * 365;\nfunction fromNow(date, appendAgoLabel, useFullTimeWords, disallowNow) {\n    if (typeof date !== 'number') {\n        date = date.getTime();\n    }\n    const seconds = Math.round((( new Date()).getTime() - date) / 1000);\n    if (seconds < -30) {\n        return ( localize('date.fromNow.in', 'in {0}', fromNow(( new Date()).getTime() + seconds * 1000, false)));\n    }\n    if (!disallowNow && seconds < 30) {\n        return ( localize('date.fromNow.now', 'now'));\n    }\n    let value;\n    if (seconds < minute) {\n        value = seconds;\n        if (appendAgoLabel) {\n            if (value === 1) {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.seconds.singular.ago.fullWord', '{0} second ago', value))\n                    : ( localize('date.fromNow.seconds.singular.ago', '{0} sec ago', value));\n            }\n            else {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.seconds.plural.ago.fullWord', '{0} seconds ago', value))\n                    : ( localize('date.fromNow.seconds.plural.ago', '{0} secs ago', value));\n            }\n        }\n        else {\n            if (value === 1) {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.seconds.singular.fullWord', '{0} second', value))\n                    : ( localize('date.fromNow.seconds.singular', '{0} sec', value));\n            }\n            else {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.seconds.plural.fullWord', '{0} seconds', value))\n                    : ( localize('date.fromNow.seconds.plural', '{0} secs', value));\n            }\n        }\n    }\n    if (seconds < hour) {\n        value = Math.floor(seconds / minute);\n        if (appendAgoLabel) {\n            if (value === 1) {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.minutes.singular.ago.fullWord', '{0} minute ago', value))\n                    : ( localize('date.fromNow.minutes.singular.ago', '{0} min ago', value));\n            }\n            else {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.minutes.plural.ago.fullWord', '{0} minutes ago', value))\n                    : ( localize('date.fromNow.minutes.plural.ago', '{0} mins ago', value));\n            }\n        }\n        else {\n            if (value === 1) {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.minutes.singular.fullWord', '{0} minute', value))\n                    : ( localize('date.fromNow.minutes.singular', '{0} min', value));\n            }\n            else {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.minutes.plural.fullWord', '{0} minutes', value))\n                    : ( localize('date.fromNow.minutes.plural', '{0} mins', value));\n            }\n        }\n    }\n    if (seconds < day) {\n        value = Math.floor(seconds / hour);\n        if (appendAgoLabel) {\n            if (value === 1) {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.hours.singular.ago.fullWord', '{0} hour ago', value))\n                    : ( localize('date.fromNow.hours.singular.ago', '{0} hr ago', value));\n            }\n            else {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.hours.plural.ago.fullWord', '{0} hours ago', value))\n                    : ( localize('date.fromNow.hours.plural.ago', '{0} hrs ago', value));\n            }\n        }\n        else {\n            if (value === 1) {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.hours.singular.fullWord', '{0} hour', value))\n                    : ( localize('date.fromNow.hours.singular', '{0} hr', value));\n            }\n            else {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.hours.plural.fullWord', '{0} hours', value))\n                    : ( localize('date.fromNow.hours.plural', '{0} hrs', value));\n            }\n        }\n    }\n    if (seconds < week) {\n        value = Math.floor(seconds / day);\n        if (appendAgoLabel) {\n            return value === 1\n                ? ( localize('date.fromNow.days.singular.ago', '{0} day ago', value))\n                : ( localize('date.fromNow.days.plural.ago', '{0} days ago', value));\n        }\n        else {\n            return value === 1\n                ? ( localize('date.fromNow.days.singular', '{0} day', value))\n                : ( localize('date.fromNow.days.plural', '{0} days', value));\n        }\n    }\n    if (seconds < month) {\n        value = Math.floor(seconds / week);\n        if (appendAgoLabel) {\n            if (value === 1) {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.weeks.singular.ago.fullWord', '{0} week ago', value))\n                    : ( localize('date.fromNow.weeks.singular.ago', '{0} wk ago', value));\n            }\n            else {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.weeks.plural.ago.fullWord', '{0} weeks ago', value))\n                    : ( localize('date.fromNow.weeks.plural.ago', '{0} wks ago', value));\n            }\n        }\n        else {\n            if (value === 1) {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.weeks.singular.fullWord', '{0} week', value))\n                    : ( localize('date.fromNow.weeks.singular', '{0} wk', value));\n            }\n            else {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.weeks.plural.fullWord', '{0} weeks', value))\n                    : ( localize('date.fromNow.weeks.plural', '{0} wks', value));\n            }\n        }\n    }\n    if (seconds < year) {\n        value = Math.floor(seconds / month);\n        if (appendAgoLabel) {\n            if (value === 1) {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.months.singular.ago.fullWord', '{0} month ago', value))\n                    : ( localize('date.fromNow.months.singular.ago', '{0} mo ago', value));\n            }\n            else {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.months.plural.ago.fullWord', '{0} months ago', value))\n                    : ( localize('date.fromNow.months.plural.ago', '{0} mos ago', value));\n            }\n        }\n        else {\n            if (value === 1) {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.months.singular.fullWord', '{0} month', value))\n                    : ( localize('date.fromNow.months.singular', '{0} mo', value));\n            }\n            else {\n                return useFullTimeWords\n                    ? ( localize('date.fromNow.months.plural.fullWord', '{0} months', value))\n                    : ( localize('date.fromNow.months.plural', '{0} mos', value));\n            }\n        }\n    }\n    value = Math.floor(seconds / year);\n    if (appendAgoLabel) {\n        if (value === 1) {\n            return useFullTimeWords\n                ? ( localize('date.fromNow.years.singular.ago.fullWord', '{0} year ago', value))\n                : ( localize('date.fromNow.years.singular.ago', '{0} yr ago', value));\n        }\n        else {\n            return useFullTimeWords\n                ? ( localize('date.fromNow.years.plural.ago.fullWord', '{0} years ago', value))\n                : ( localize('date.fromNow.years.plural.ago', '{0} yrs ago', value));\n        }\n    }\n    else {\n        if (value === 1) {\n            return useFullTimeWords\n                ? ( localize('date.fromNow.years.singular.fullWord', '{0} year', value))\n                : ( localize('date.fromNow.years.singular', '{0} yr', value));\n        }\n        else {\n            return useFullTimeWords\n                ? ( localize('date.fromNow.years.plural.fullWord', '{0} years', value))\n                : ( localize('date.fromNow.years.plural', '{0} yrs', value));\n        }\n    }\n}\nfunction toLocalISOString(date) {\n    return date.getFullYear() +\n        '-' + String(date.getMonth() + 1).padStart(2, '0') +\n        '-' + String(date.getDate()).padStart(2, '0') +\n        'T' + String(date.getHours()).padStart(2, '0') +\n        ':' + String(date.getMinutes()).padStart(2, '0') +\n        ':' + String(date.getSeconds()).padStart(2, '0') +\n        '.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n        'Z';\n}\nexport { fromNow, toLocalISOString };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport * as resources from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { IEditorWorkerService } from 'monaco-editor/esm/vs/editor/common/services/editorWorker.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { ThrottledDelayer, Promises } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { Disposable, MutableDisposable, toDisposable, dispose } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { isNumber } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { EditOperation } from 'monaco-editor/esm/vs/editor/common/core/editOperation.js';\nimport { Position } from 'monaco-editor/esm/vs/editor/common/core/position.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { VSBuffer } from 'monaco-editor/esm/vs/base/common/buffer.js';\nimport { ILogService, ILoggerService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { CancellationTokenSource } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { OutputChannelUpdateMode } from '../../../services/output/common/output.js';\nimport { isCancellationError } from 'monaco-editor/esm/vs/base/common/errors.js';\nclass OutputFileListener extends Disposable {\n    constructor(file, fileService, logService) {\n        super();\n        this.file = file;\n        this.fileService = fileService;\n        this.logService = logService;\n        this._onDidContentChange = ( new Emitter());\n        this.onDidContentChange = this._onDidContentChange.event;\n        this.watching = false;\n        this.syncDelayer = ( new ThrottledDelayer(500));\n    }\n    watch(eTag) {\n        if (!this.watching) {\n            this.etag = eTag;\n            this.poll();\n            this.logService.trace('Started polling', ( this.file.toString()));\n            this.watching = true;\n        }\n    }\n    poll() {\n        const loop = () => this.doWatch().then(() => this.poll());\n        this.syncDelayer.trigger(loop).catch(error => {\n            if (!isCancellationError(error)) {\n                throw error;\n            }\n        });\n    }\n    async doWatch() {\n        const stat = await this.fileService.stat(this.file);\n        if (stat.etag !== this.etag) {\n            this.etag = stat.etag;\n            this._onDidContentChange.fire(stat.size);\n        }\n    }\n    unwatch() {\n        if (this.watching) {\n            this.syncDelayer.cancel();\n            this.watching = false;\n            this.logService.trace('Stopped polling', ( this.file.toString()));\n        }\n    }\n    dispose() {\n        this.unwatch();\n        super.dispose();\n    }\n}\nlet FileOutputChannelModel = class FileOutputChannelModel extends Disposable {\n    constructor(modelUri, language, file, fileService, modelService, logService, editorWorkerService) {\n        super();\n        this.modelUri = modelUri;\n        this.language = language;\n        this.file = file;\n        this.fileService = fileService;\n        this.modelService = modelService;\n        this.editorWorkerService = editorWorkerService;\n        this._onDispose = this._register(( new Emitter()));\n        this.onDispose = this._onDispose.event;\n        this.etag = '';\n        this.loadModelPromise = null;\n        this.model = null;\n        this.modelUpdateInProgress = false;\n        this.modelUpdateCancellationSource = this._register(( new MutableDisposable()));\n        this.appendThrottler = this._register(( new ThrottledDelayer(300)));\n        this.startOffset = 0;\n        this.endOffset = 0;\n        this.fileHandler = this._register(( new OutputFileListener(this.file, this.fileService, logService)));\n        this._register(this.fileHandler.onDidContentChange(size => this.onDidContentChange(size)));\n        this._register(toDisposable(() => this.fileHandler.unwatch()));\n    }\n    append(message) {\n        throw new Error('Not supported');\n    }\n    replace(message) {\n        throw new Error('Not supported');\n    }\n    clear() {\n        this.update(OutputChannelUpdateMode.Clear, this.endOffset, true);\n    }\n    update(mode, till, immediate) {\n        const loadModelPromise = this.loadModelPromise ? this.loadModelPromise : Promise.resolve();\n        loadModelPromise.then(() => this.doUpdate(mode, till, immediate));\n    }\n    loadModel() {\n        this.loadModelPromise = Promises.withAsyncBody(async (c, e) => {\n            try {\n                let content = '';\n                if (await this.fileService.exists(this.file)) {\n                    const fileContent = await this.fileService.readFile(this.file, { position: this.startOffset });\n                    this.endOffset = this.startOffset + fileContent.value.byteLength;\n                    this.etag = fileContent.etag;\n                    content = ( fileContent.value.toString());\n                }\n                else {\n                    this.startOffset = 0;\n                    this.endOffset = 0;\n                }\n                c(this.createModel(content));\n            }\n            catch (error) {\n                e(error);\n            }\n        });\n        return this.loadModelPromise;\n    }\n    createModel(content) {\n        if (this.model) {\n            this.model.setValue(content);\n        }\n        else {\n            this.model = this.modelService.createModel(content, this.language, this.modelUri);\n            this.fileHandler.watch(this.etag);\n            const disposable = this.model.onWillDispose(() => {\n                this.cancelModelUpdate();\n                this.fileHandler.unwatch();\n                this.model = null;\n                dispose(disposable);\n            });\n        }\n        return this.model;\n    }\n    doUpdate(mode, till, immediate) {\n        if (mode === OutputChannelUpdateMode.Clear || mode === OutputChannelUpdateMode.Replace) {\n            this.startOffset = this.endOffset = isNumber(till) ? till : this.endOffset;\n            this.cancelModelUpdate();\n        }\n        if (!this.model) {\n            return;\n        }\n        this.modelUpdateInProgress = true;\n        if (!this.modelUpdateCancellationSource.value) {\n            this.modelUpdateCancellationSource.value = ( new CancellationTokenSource());\n        }\n        const token = this.modelUpdateCancellationSource.value.token;\n        if (mode === OutputChannelUpdateMode.Clear) {\n            this.clearContent(this.model);\n        }\n        else if (mode === OutputChannelUpdateMode.Replace) {\n            this.replacePromise = this.replaceContent(this.model, token).finally(() => this.replacePromise = undefined);\n        }\n        else {\n            this.appendContent(this.model, immediate, token);\n        }\n    }\n    clearContent(model) {\n        this.doUpdateModel(model, [EditOperation.delete(model.getFullModelRange())], VSBuffer.fromString(''));\n    }\n    appendContent(model, immediate, token) {\n        this.appendThrottler.trigger(async () => {\n            if (token.isCancellationRequested) {\n                return;\n            }\n            if (this.replacePromise) {\n                try {\n                    await this.replacePromise;\n                }\n                catch (e) {  }\n                if (token.isCancellationRequested) {\n                    return;\n                }\n            }\n            const contentToAppend = await this.getContentToUpdate();\n            if (token.isCancellationRequested) {\n                return;\n            }\n            const lastLine = model.getLineCount();\n            const lastLineMaxColumn = model.getLineMaxColumn(lastLine);\n            const edits = [EditOperation.insert(( new Position(lastLine, lastLineMaxColumn)), ( contentToAppend.toString()))];\n            this.doUpdateModel(model, edits, contentToAppend);\n        }, immediate ? 0 : undefined).catch(error => {\n            if (!isCancellationError(error)) {\n                throw error;\n            }\n        });\n    }\n    async replaceContent(model, token) {\n        const contentToReplace = await this.getContentToUpdate();\n        if (token.isCancellationRequested) {\n            return;\n        }\n        const edits = await this.getReplaceEdits(model, ( contentToReplace.toString()));\n        if (token.isCancellationRequested) {\n            return;\n        }\n        this.doUpdateModel(model, edits, contentToReplace);\n    }\n    async getReplaceEdits(model, contentToReplace) {\n        if (!contentToReplace) {\n            return [EditOperation.delete(model.getFullModelRange())];\n        }\n        if (contentToReplace !== model.getValue()) {\n            const edits = await this.editorWorkerService.computeMoreMinimalEdits(model.uri, [{ text: ( contentToReplace.toString()), range: model.getFullModelRange() }]);\n            if (edits?.length) {\n                return ( edits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\n            }\n        }\n        return [];\n    }\n    doUpdateModel(model, edits, content) {\n        if (edits.length) {\n            model.applyEdits(edits);\n        }\n        this.endOffset = this.endOffset + content.byteLength;\n        this.modelUpdateInProgress = false;\n    }\n    cancelModelUpdate() {\n        this.modelUpdateCancellationSource.value?.cancel();\n        this.modelUpdateCancellationSource.value = undefined;\n        this.appendThrottler.cancel();\n        this.replacePromise = undefined;\n        this.modelUpdateInProgress = false;\n    }\n    async getContentToUpdate() {\n        const content = await this.fileService.readFile(this.file, { position: this.endOffset });\n        this.etag = content.etag;\n        return content.value;\n    }\n    onDidContentChange(size) {\n        if (this.model) {\n            if (!this.modelUpdateInProgress) {\n                if (isNumber(size) && this.endOffset > size) {\n                    this.update(OutputChannelUpdateMode.Clear, 0, true);\n                }\n            }\n            this.update(OutputChannelUpdateMode.Append, undefined, false );\n        }\n    }\n    isVisible() {\n        return !!this.model;\n    }\n    dispose() {\n        this._onDispose.fire();\n        super.dispose();\n    }\n};\nFileOutputChannelModel = ( __decorate([\n    ( __param(3, IFileService)),\n    ( __param(4, IModelService)),\n    ( __param(5, ILogService)),\n    ( __param(6, IEditorWorkerService))\n], FileOutputChannelModel));\nlet OutputChannelBackedByFile = class OutputChannelBackedByFile extends FileOutputChannelModel {\n    constructor(id, modelUri, language, file, fileService, modelService, loggerService, logService, editorWorkerService) {\n        super(modelUri, language, file, fileService, modelService, logService, editorWorkerService);\n        this.logger = loggerService.createLogger(file, { logLevel: 'always', donotRotate: true, donotUseFormatters: true, hidden: true });\n        this._offset = 0;\n    }\n    append(message) {\n        this.write(message);\n        this.update(OutputChannelUpdateMode.Append, undefined, this.isVisible());\n    }\n    replace(message) {\n        const till = this._offset;\n        this.write(message);\n        this.update(OutputChannelUpdateMode.Replace, till, true);\n    }\n    write(content) {\n        this._offset += VSBuffer.fromString(content).byteLength;\n        this.logger.info(content);\n        if (this.isVisible()) {\n            this.logger.flush();\n        }\n    }\n};\nOutputChannelBackedByFile = ( __decorate([\n    ( __param(4, IFileService)),\n    ( __param(5, IModelService)),\n    ( __param(6, ILoggerService)),\n    ( __param(7, ILogService)),\n    ( __param(8, IEditorWorkerService))\n], OutputChannelBackedByFile));\nlet DelegatedOutputChannelModel = class DelegatedOutputChannelModel extends Disposable {\n    constructor(id, modelUri, language, outputDir, instantiationService, fileService) {\n        super();\n        this.instantiationService = instantiationService;\n        this.fileService = fileService;\n        this._onDispose = this._register(( new Emitter()));\n        this.onDispose = this._onDispose.event;\n        this.outputChannelModel = this.createOutputChannelModel(id, modelUri, language, outputDir);\n    }\n    async createOutputChannelModel(id, modelUri, language, outputDirPromise) {\n        const outputDir = await outputDirPromise;\n        const file = resources.joinPath(outputDir, `${id.replace(/[\\\\/:\\*\\?\"<>\\|]/g, '')}.log`);\n        await this.fileService.createFile(file);\n        const outputChannelModel = this._register(this.instantiationService.createInstance(OutputChannelBackedByFile, id, modelUri, language, file));\n        this._register(outputChannelModel.onDispose(() => this._onDispose.fire()));\n        return outputChannelModel;\n    }\n    append(output) {\n        this.outputChannelModel.then(outputChannelModel => outputChannelModel.append(output));\n    }\n    update(mode, till, immediate) {\n        this.outputChannelModel.then(outputChannelModel => outputChannelModel.update(mode, till, immediate));\n    }\n    loadModel() {\n        return this.outputChannelModel.then(outputChannelModel => outputChannelModel.loadModel());\n    }\n    clear() {\n        this.outputChannelModel.then(outputChannelModel => outputChannelModel.clear());\n    }\n    replace(value) {\n        this.outputChannelModel.then(outputChannelModel => outputChannelModel.replace(value));\n    }\n};\nDelegatedOutputChannelModel = ( __decorate([\n    ( __param(4, IInstantiationService)),\n    ( __param(5, IFileService))\n], DelegatedOutputChannelModel));\nexport { DelegatedOutputChannelModel, FileOutputChannelModel };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IHoverService = ( createDecorator('hoverService'));\nexport { IHoverService };\n", "import { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { OpenEditor } from '../common/files.js';\nimport { EditorResourceAccessor, SideBySideEditor } from '../../../common/editor.js';\nimport { List } from 'monaco-editor/esm/vs/base/browser/ui/list/listWidget.js';\nimport { ExplorerItem } from '../common/explorerModel.js';\nimport { coalesce } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { AsyncDataTree } from 'monaco-editor/esm/vs/base/browser/ui/tree/asyncDataTree.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IExplorerService = ( createDecorator('explorerService'));\nfunction getFocus(listService) {\n    const list = listService.lastFocusedList;\n    if (list?.getHTMLElement() === document.activeElement) {\n        let focus;\n        if (list instanceof List) {\n            const focused = list.getFocusedElements();\n            if (focused.length) {\n                focus = focused[0];\n            }\n        }\n        else if (list instanceof AsyncDataTree) {\n            const focused = list.getFocus();\n            if (focused.length) {\n                focus = focused[0];\n            }\n        }\n        return focus;\n    }\n    return undefined;\n}\nfunction getResourceForCommand(resource, listService, editorService) {\n    if (URI.isUri(resource)) {\n        return resource;\n    }\n    const focus = getFocus(listService);\n    if (focus instanceof ExplorerItem) {\n        return focus.resource;\n    }\n    else if (focus instanceof OpenEditor) {\n        return focus.getResource();\n    }\n    return EditorResourceAccessor.getOriginalUri(editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n}\nfunction getMultiSelectedResources(resource, listService, editorService, explorerService) {\n    const list = listService.lastFocusedList;\n    if (list?.getHTMLElement() === document.activeElement) {\n        if (list instanceof AsyncDataTree && list.getFocus().every(item => item instanceof ExplorerItem)) {\n            const context = explorerService.getContext(true, true);\n            if (context.length) {\n                return ( context.map(c => c.resource));\n            }\n        }\n        if (list instanceof List) {\n            const selection = coalesce(( list.getSelectedElements().filter(s => s instanceof OpenEditor).map((oe) => oe.getResource())));\n            const focusedElements = list.getFocusedElements();\n            const focus = focusedElements.length ? focusedElements[0] : undefined;\n            let mainUriStr = undefined;\n            if (URI.isUri(resource)) {\n                mainUriStr = ( resource.toString());\n            }\n            else if (focus instanceof OpenEditor) {\n                const focusedResource = focus.getResource();\n                mainUriStr = focusedResource ? ( focusedResource.toString()) : undefined;\n            }\n            if (( selection.some(s => ( s.toString()) === mainUriStr))) {\n                return selection;\n            }\n        }\n    }\n    const result = getResourceForCommand(resource, listService, editorService);\n    return !!result ? [result] : [];\n}\nfunction getOpenEditorsViewMultiSelection(listService, editorGroupService) {\n    const list = listService.lastFocusedList;\n    if (list?.getHTMLElement() === document.activeElement) {\n        if (list instanceof List) {\n            const selection = coalesce(list.getSelectedElements().filter(s => s instanceof OpenEditor));\n            const focusedElements = list.getFocusedElements();\n            const focus = focusedElements.length ? focusedElements[0] : undefined;\n            let mainEditor = undefined;\n            if (focus instanceof OpenEditor) {\n                mainEditor = focus;\n            }\n            if (( selection.some(s => s === mainEditor))) {\n                return selection;\n            }\n            return mainEditor ? [mainEditor] : undefined;\n        }\n    }\n    return undefined;\n}\nexport { IExplorerService, getMultiSelectedResources, getOpenEditorsViewMultiSelection, getResourceForCommand };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { EditorResourceAccessor, SideBySideEditor } from '../../../common/editor.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { ContextKeyExpr, RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { Disposable, MutableDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { ITextFileService } from '../../../services/textfile/common/textfiles.js';\nimport { InputFocusedContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkeys.js';\nimport { once } from 'monaco-editor/esm/vs/base/common/functional.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nvar TextFileContentProvider_1;\nconst VIEWLET_ID = 'workbench.view.explorer';\nconst VIEW_ID = 'workbench.explorer.fileView';\nconst ExplorerViewletVisibleContext = ( new RawContextKey(\n    'explorerViewletVisible',\n    true,\n    { type: 'boolean', description: ( localize('explorerViewletVisible', \"True when the EXPLORER viewlet is visible.\")) }\n));\nconst FoldersViewVisibleContext = ( new RawContextKey('foldersViewVisible', true, { type: 'boolean', description: ( localize(\n    'foldersViewVisible',\n    \"True when the FOLDERS view (the file tree within the explorer view container) is visible.\"\n)) }));\nconst ExplorerFolderContext = ( new RawContextKey(\n    'explorerResourceIsFolder',\n    false,\n    { type: 'boolean', description: ( localize(\n        'explorerResourceIsFolder',\n        \"True when the focused item in the EXPLORER is a folder.\"\n    )) }\n));\nconst ExplorerResourceReadonlyContext = ( new RawContextKey(\n    'explorerResourceReadonly',\n    false,\n    { type: 'boolean', description: ( localize(\n        'explorerResourceReadonly',\n        \"True when the focused item in the EXPLORER is read-only.\"\n    )) }\n));\nconst ExplorerResourceNotReadonlyContext = ( ExplorerResourceReadonlyContext.toNegated());\nconst ExplorerResourceAvailableEditorIdsContext = ( new RawContextKey('explorerResourceAvailableEditorIds', ''));\nconst ExplorerRootContext = ( new RawContextKey(\n    'explorerResourceIsRoot',\n    false,\n    { type: 'boolean', description: ( localize(\n        'explorerResourceIsRoot',\n        \"True when the focused item in the EXPLORER is a root folder.\"\n    )) }\n));\nconst ExplorerResourceCut = ( new RawContextKey(\n    'explorerResourceCut',\n    false,\n    { type: 'boolean', description: ( localize(\n        'explorerResourceCut',\n        \"True when an item in the EXPLORER has been cut for cut and paste.\"\n    )) }\n));\nconst ExplorerResourceMoveableToTrash = ( new RawContextKey(\n    'explorerResourceMoveableToTrash',\n    false,\n    { type: 'boolean', description: ( localize(\n        'explorerResourceMoveableToTrash',\n        \"True when the focused item in the EXPLORER can be moved to trash.\"\n    )) }\n));\nconst FilesExplorerFocusedContext = ( new RawContextKey('filesExplorerFocus', true, { type: 'boolean', description: ( localize('filesExplorerFocus', \"True when the focus is inside the EXPLORER view.\")) }));\nconst OpenEditorsFocusedContext = ( new RawContextKey('openEditorsFocus', true, { type: 'boolean', description: ( localize('openEditorsFocus', \"True when the focus is inside the OPEN EDITORS view.\")) }));\nconst ExplorerFocusedContext = ( new RawContextKey(\n    'explorerViewletFocus',\n    true,\n    { type: 'boolean', description: ( localize(\n        'explorerViewletFocus',\n        \"True when the focus is inside the EXPLORER viewlet.\"\n    )) }\n));\nconst ExplorerCompressedFocusContext = ( new RawContextKey(\n    'explorerViewletCompressedFocus',\n    true,\n    { type: 'boolean', description: ( localize(\n        'explorerViewletCompressedFocus',\n        \"True when the focused item in the EXPLORER view is a compact item.\"\n    )) }\n));\nconst ExplorerCompressedFirstFocusContext = ( new RawContextKey(\n    'explorerViewletCompressedFirstFocus',\n    true,\n    { type: 'boolean', description: ( localize(\n        'explorerViewletCompressedFirstFocus',\n        \"True when the focus is inside a compact item's first part in the EXPLORER view.\"\n    )) }\n));\nconst ExplorerCompressedLastFocusContext = ( new RawContextKey(\n    'explorerViewletCompressedLastFocus',\n    true,\n    { type: 'boolean', description: ( localize(\n        'explorerViewletCompressedLastFocus',\n        \"True when the focus is inside a compact item's last part in the EXPLORER view.\"\n    )) }\n));\nconst ViewHasSomeCollapsibleRootItemContext = ( new RawContextKey(\n    'viewHasSomeCollapsibleItem',\n    false,\n    { type: 'boolean', description: ( localize(\n        'viewHasSomeCollapsibleItem',\n        \"True when a workspace in the EXPLORER view has some collapsible root child.\"\n    )) }\n));\nconst FilesExplorerFocusCondition = ( ContextKeyExpr.and(\n    FoldersViewVisibleContext,\n    FilesExplorerFocusedContext,\n    ContextKeyExpr.not(InputFocusedContextKey)\n));\nconst ExplorerFocusCondition = ( ContextKeyExpr.and(\n    FoldersViewVisibleContext,\n    ExplorerFocusedContext,\n    ContextKeyExpr.not(InputFocusedContextKey)\n));\nconst TEXT_FILE_EDITOR_ID = 'workbench.editors.files.textFileEditor';\nconst FILE_EDITOR_INPUT_ID = 'workbench.editors.files.fileEditorInput';\nconst BINARY_FILE_EDITOR_ID = 'workbench.editors.files.binaryFileEditor';\nconst BINARY_TEXT_FILE_MODE = 'code-text-binary';\nlet TextFileContentProvider = TextFileContentProvider_1 = class TextFileContentProvider extends Disposable {\n    constructor(textFileService, fileService, languageService, modelService) {\n        super();\n        this.textFileService = textFileService;\n        this.fileService = fileService;\n        this.languageService = languageService;\n        this.modelService = modelService;\n        this.fileWatcherDisposable = this._register(( new MutableDisposable()));\n    }\n    static async open(resource, scheme, label, editorService, options) {\n        await editorService.openEditor({\n            original: { resource: TextFileContentProvider_1.resourceToTextFile(scheme, resource) },\n            modified: { resource },\n            label,\n            options\n        });\n    }\n    static resourceToTextFile(scheme, resource) {\n        return resource.with({ scheme, query: JSON.stringify({ scheme: resource.scheme, query: resource.query }) });\n    }\n    static textFileToResource(resource) {\n        const { scheme, query } = JSON.parse(resource.query);\n        return resource.with({ scheme, query });\n    }\n    async provideTextContent(resource) {\n        if (!resource.query) {\n            return null;\n        }\n        const savedFileResource = TextFileContentProvider_1.textFileToResource(resource);\n        const codeEditorModel = await this.resolveEditorModel(resource);\n        if (!this.fileWatcherDisposable.value) {\n            this.fileWatcherDisposable.value = this.fileService.onDidFilesChange(changes => {\n                if (changes.contains(savedFileResource, 0 )) {\n                    this.resolveEditorModel(resource, false );\n                }\n            });\n            if (codeEditorModel) {\n                once(codeEditorModel.onWillDispose)(() => this.fileWatcherDisposable.clear());\n            }\n        }\n        return codeEditorModel;\n    }\n    async resolveEditorModel(resource, createAsNeeded = true) {\n        const savedFileResource = TextFileContentProvider_1.textFileToResource(resource);\n        const content = await this.textFileService.readStream(savedFileResource);\n        let codeEditorModel = this.modelService.getModel(resource);\n        if (codeEditorModel) {\n            this.modelService.updateModel(codeEditorModel, content.value);\n        }\n        else if (createAsNeeded) {\n            const textFileModel = this.modelService.getModel(savedFileResource);\n            let languageSelector;\n            if (textFileModel) {\n                languageSelector = this.languageService.createById(textFileModel.getLanguageId());\n            }\n            else {\n                languageSelector = this.languageService.createByFilepathOrFirstLine(savedFileResource);\n            }\n            codeEditorModel = this.modelService.createModel(content.value, languageSelector, resource);\n        }\n        return codeEditorModel;\n    }\n};\nTextFileContentProvider = TextFileContentProvider_1 = ( __decorate([\n    ( __param(0, ITextFileService)),\n    ( __param(1, IFileService)),\n    ( __param(2, ILanguageService)),\n    ( __param(3, IModelService))\n], TextFileContentProvider));\nclass OpenEditor {\n    static { this.COUNTER = 0; }\n    constructor(_editor, _group) {\n        this._editor = _editor;\n        this._group = _group;\n        this.id = OpenEditor.COUNTER++;\n    }\n    get editor() {\n        return this._editor;\n    }\n    get group() {\n        return this._group;\n    }\n    get groupId() {\n        return this._group.id;\n    }\n    getId() {\n        return `openeditor:${this.groupId}:${this.id}`;\n    }\n    isPreview() {\n        return !this._group.isPinned(this.editor);\n    }\n    isSticky() {\n        return this._group.isSticky(this.editor);\n    }\n    getResource() {\n        return EditorResourceAccessor.getOriginalUri(this.editor, { supportSideBySide: SideBySideEditor.PRIMARY });\n    }\n}\nexport { BINARY_FILE_EDITOR_ID, BINARY_TEXT_FILE_MODE, ExplorerCompressedFirstFocusContext, ExplorerCompressedFocusContext, ExplorerCompressedLastFocusContext, ExplorerFocusCondition, ExplorerFocusedContext, ExplorerFolderContext, ExplorerResourceAvailableEditorIdsContext, ExplorerResourceCut, ExplorerResourceMoveableToTrash, ExplorerResourceNotReadonlyContext, ExplorerResourceReadonlyContext, ExplorerRootContext, ExplorerViewletVisibleContext, FILE_EDITOR_INPUT_ID, FilesExplorerFocusCondition, FilesExplorerFocusedContext, FoldersViewVisibleContext, OpenEditor, OpenEditorsFocusedContext, TEXT_FILE_EDITOR_ID, TextFileContentProvider, VIEWLET_ID, VIEW_ID, ViewHasSomeCollapsibleRootItemContext };\n", "import { __decorate } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { isEqual } from 'monaco-editor/esm/vs/base/common/extpath.js';\nimport { posix } from 'monaco-editor/esm/vs/base/common/path.js';\nimport { ResourceMap } from 'monaco-editor/esm/vs/base/common/map.js';\nimport { equalsIgnoreCase, startsWithIgnoreCase, rtrim } from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { coalesce } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { dispose } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { memoize } from 'monaco-editor/esm/vs/base/common/decorators.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { basenameOrAuthority, isEqualOrParent, joinPath } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { ExplorerFileNestingTrie } from './explorerFileNestingTrie.js';\nimport { assertIsDefined } from 'monaco-editor/esm/vs/base/common/types.js';\nclass ExplorerModel {\n    constructor(contextService, uriIdentityService, fileService, configService, filesConfigService) {\n        this.contextService = contextService;\n        this.uriIdentityService = uriIdentityService;\n        this._onDidChangeRoots = ( new Emitter());\n        const setRoots = () => this._roots = ( this.contextService.getWorkspace().folders\n            .map(folder => ( new ExplorerItem(\n            folder.uri,\n            fileService,\n            configService,\n            filesConfigService,\n            undefined,\n            true,\n            false,\n            false,\n            false,\n            folder.name\n        ))));\n        setRoots();\n        this._listener = this.contextService.onDidChangeWorkspaceFolders(() => {\n            setRoots();\n            this._onDidChangeRoots.fire();\n        });\n    }\n    get roots() {\n        return this._roots;\n    }\n    get onDidChangeRoots() {\n        return this._onDidChangeRoots.event;\n    }\n    findAll(resource) {\n        return coalesce(( this.roots.map(root => root.find(resource))));\n    }\n    findClosest(resource) {\n        const folder = this.contextService.getWorkspaceFolder(resource);\n        if (folder) {\n            const root = this.roots.find(r => this.uriIdentityService.extUri.isEqual(r.resource, folder.uri));\n            if (root) {\n                return root.find(resource);\n            }\n        }\n        return null;\n    }\n    dispose() {\n        dispose(this._listener);\n    }\n}\nclass ExplorerItem {\n    constructor(resource, fileService, configService, filesConfigService, _parent, _isDirectory, _isSymbolicLink, _readonly, _locked, _name = basenameOrAuthority(resource), _mtime, _unknown = false) {\n        this.resource = resource;\n        this.fileService = fileService;\n        this.configService = configService;\n        this.filesConfigService = filesConfigService;\n        this._parent = _parent;\n        this._isDirectory = _isDirectory;\n        this._isSymbolicLink = _isSymbolicLink;\n        this._readonly = _readonly;\n        this._locked = _locked;\n        this._name = _name;\n        this._mtime = _mtime;\n        this._unknown = _unknown;\n        this.error = undefined;\n        this._isExcluded = false;\n        this._isDirectoryResolved = false;\n    }\n    get isExcluded() {\n        if (this._isExcluded) {\n            return true;\n        }\n        if (!this._parent) {\n            return false;\n        }\n        return this._parent.isExcluded;\n    }\n    set isExcluded(value) {\n        this._isExcluded = value;\n    }\n    hasChildren(filter) {\n        if (this.hasNests) {\n            return this.nestedChildren?.some(c => filter(c)) ?? false;\n        }\n        else {\n            return this.isDirectory;\n        }\n    }\n    get hasNests() {\n        return !!(this.nestedChildren?.length);\n    }\n    get isDirectoryResolved() {\n        return this._isDirectoryResolved;\n    }\n    get isSymbolicLink() {\n        return !!this._isSymbolicLink;\n    }\n    get isDirectory() {\n        return !!this._isDirectory;\n    }\n    get isReadonly() {\n        return this.filesConfigService.isReadonly(this.resource, { resource: this.resource, name: this.name, readonly: this._readonly, locked: this._locked });\n    }\n    get mtime() {\n        return this._mtime;\n    }\n    get name() {\n        return this._name;\n    }\n    get isUnknown() {\n        return this._unknown;\n    }\n    get parent() {\n        return this._parent;\n    }\n    get root() {\n        if (!this._parent) {\n            return this;\n        }\n        return this._parent.root;\n    }\n    get children() {\n        return ( new Map());\n    }\n    updateName(value) {\n        this._parent?.removeChild(this);\n        this._name = value;\n        this._parent?.addChild(this);\n    }\n    getId() {\n        return ( this.root.resource.toString()) + '::' + ( this.resource.toString());\n    }\n    toString() {\n        return `ExplorerItem: ${this.name}`;\n    }\n    get isRoot() {\n        return this === this.root;\n    }\n    static create(fileService, configService, filesConfigService, raw, parent, resolveTo) {\n        const stat = ( new ExplorerItem(\n            raw.resource,\n            fileService,\n            configService,\n            filesConfigService,\n            parent,\n            raw.isDirectory,\n            raw.isSymbolicLink,\n            raw.readonly,\n            raw.locked,\n            raw.name,\n            raw.mtime,\n            !raw.isFile && !raw.isDirectory\n        ));\n        if (stat.isDirectory) {\n            stat._isDirectoryResolved = !!raw.children || (!!resolveTo && ( resolveTo.some((r) => {\n                return isEqualOrParent(r, stat.resource);\n            })));\n            if (raw.children) {\n                for (let i = 0, len = raw.children.length; i < len; i++) {\n                    const child = ExplorerItem.create(fileService, configService, filesConfigService, raw.children[i], stat, resolveTo);\n                    stat.addChild(child);\n                }\n            }\n        }\n        return stat;\n    }\n    static mergeLocalWithDisk(disk, local) {\n        if (( disk.resource.toString()) !== ( local.resource.toString())) {\n            return;\n        }\n        const mergingDirectories = disk.isDirectory || local.isDirectory;\n        if (mergingDirectories && local._isDirectoryResolved && !disk._isDirectoryResolved) {\n            return;\n        }\n        local.resource = disk.resource;\n        if (!local.isRoot) {\n            local.updateName(disk.name);\n        }\n        local._isDirectory = disk.isDirectory;\n        local._mtime = disk.mtime;\n        local._isDirectoryResolved = disk._isDirectoryResolved;\n        local._isSymbolicLink = disk.isSymbolicLink;\n        local.error = disk.error;\n        if (mergingDirectories && disk._isDirectoryResolved) {\n            const oldLocalChildren = ( new ResourceMap());\n            local.children.forEach(child => {\n                oldLocalChildren.set(child.resource, child);\n            });\n            local.children.clear();\n            disk.children.forEach(diskChild => {\n                const formerLocalChild = oldLocalChildren.get(diskChild.resource);\n                if (formerLocalChild) {\n                    ExplorerItem.mergeLocalWithDisk(diskChild, formerLocalChild);\n                    local.addChild(formerLocalChild);\n                    oldLocalChildren.delete(diskChild.resource);\n                }\n                else {\n                    local.addChild(diskChild);\n                }\n            });\n            oldLocalChildren.forEach(oldChild => {\n                if (oldChild instanceof NewExplorerItem) {\n                    local.addChild(oldChild);\n                }\n            });\n        }\n    }\n    addChild(child) {\n        child._parent = this;\n        child.updateResource(false);\n        this.children.set(this.getPlatformAwareName(child.name), child);\n    }\n    getChild(name) {\n        return this.children.get(this.getPlatformAwareName(name));\n    }\n    fetchChildren(sortOrder) {\n        const nestingConfig = this.configService.getValue({ resource: this.root.resource }).explorer.fileNesting;\n        if (nestingConfig.enabled && this.nestedChildren) {\n            return this.nestedChildren;\n        }\n        return (async () => {\n            if (!this._isDirectoryResolved) {\n                const resolveMetadata = sortOrder === \"modified\" ;\n                this.error = undefined;\n                try {\n                    const stat = await this.fileService.resolve(this.resource, { resolveSingleChildDescendants: true, resolveMetadata });\n                    const resolved = ExplorerItem.create(this.fileService, this.configService, this.filesConfigService, stat, this);\n                    ExplorerItem.mergeLocalWithDisk(resolved, this);\n                }\n                catch (e) {\n                    this.error = e;\n                    throw e;\n                }\n                this._isDirectoryResolved = true;\n            }\n            const items = [];\n            if (nestingConfig.enabled) {\n                const fileChildren = [];\n                const dirChildren = [];\n                for (const child of this.children.entries()) {\n                    child[1].nestedParent = undefined;\n                    if (child[1].isDirectory) {\n                        dirChildren.push(child);\n                    }\n                    else {\n                        fileChildren.push(child);\n                    }\n                }\n                const nested = this.fileNester.nest(( fileChildren.map(([name]) => name)), this.getPlatformAwareName(this.name));\n                for (const [fileEntryName, fileEntryItem] of fileChildren) {\n                    const nestedItems = nested.get(fileEntryName);\n                    if (nestedItems !== undefined) {\n                        fileEntryItem.nestedChildren = [];\n                        for (const name of ( nestedItems.keys())) {\n                            const child = assertIsDefined(this.children.get(name));\n                            fileEntryItem.nestedChildren.push(child);\n                            child.nestedParent = fileEntryItem;\n                        }\n                        items.push(fileEntryItem);\n                    }\n                    else {\n                        fileEntryItem.nestedChildren = undefined;\n                    }\n                }\n                for (const [_, dirEntryItem] of ( dirChildren.values())) {\n                    items.push(dirEntryItem);\n                }\n            }\n            else {\n                this.children.forEach(child => {\n                    items.push(child);\n                });\n            }\n            return items;\n        })();\n    }\n    get fileNester() {\n        if (!this.root._fileNester) {\n            const nestingConfig = this.configService.getValue({ resource: this.root.resource }).explorer.fileNesting;\n            const patterns = ( Object.entries(nestingConfig.patterns)\n                .filter(entry => typeof (entry[0]) === 'string' && typeof (entry[1]) === 'string' && entry[0] && entry[1])\n                .map(([parentPattern, childrenPatterns]) => [\n                this.getPlatformAwareName(parentPattern.trim()),\n                ( childrenPatterns.split(',').map(p => this.getPlatformAwareName(p.trim().replace(/\\u200b/g, '').trim())))\n                    .filter(p => p !== '')\n            ]));\n            this.root._fileNester = ( new ExplorerFileNestingTrie(patterns));\n        }\n        return this.root._fileNester;\n    }\n    removeChild(child) {\n        this.nestedChildren = undefined;\n        this.children.delete(this.getPlatformAwareName(child.name));\n    }\n    forgetChildren() {\n        this.children.clear();\n        this.nestedChildren = undefined;\n        this._isDirectoryResolved = false;\n        this._fileNester = undefined;\n    }\n    getPlatformAwareName(name) {\n        return this.fileService.hasCapability(this.resource, 1024 ) ? name : name.toLowerCase();\n    }\n    move(newParent) {\n        this.nestedParent?.removeChild(this);\n        this._parent?.removeChild(this);\n        newParent.removeChild(this);\n        newParent.addChild(this);\n        this.updateResource(true);\n    }\n    updateResource(recursive) {\n        if (this._parent) {\n            this.resource = joinPath(this._parent.resource, this.name);\n        }\n        if (recursive) {\n            if (this.isDirectory) {\n                this.children.forEach(child => {\n                    child.updateResource(true);\n                });\n            }\n        }\n    }\n    rename(renamedStat) {\n        this.updateName(renamedStat.name);\n        this._mtime = renamedStat.mtime;\n        this.updateResource(true);\n    }\n    find(resource) {\n        const ignoreCase = !this.fileService.hasCapability(resource, 1024 );\n        if (resource && this.resource.scheme === resource.scheme && equalsIgnoreCase(this.resource.authority, resource.authority) &&\n            (ignoreCase ? startsWithIgnoreCase(resource.path, this.resource.path) : resource.path.startsWith(this.resource.path))) {\n            return this.findByPath(rtrim(resource.path, posix.sep), this.resource.path.length, ignoreCase);\n        }\n        return null;\n    }\n    findByPath(path, index, ignoreCase) {\n        if (isEqual(rtrim(this.resource.path, posix.sep), path, ignoreCase)) {\n            return this;\n        }\n        if (this.isDirectory) {\n            while (index < path.length && path[index] === posix.sep) {\n                index++;\n            }\n            let indexOfNextSep = path.indexOf(posix.sep, index);\n            if (indexOfNextSep === -1) {\n                indexOfNextSep = path.length;\n            }\n            const name = path.substring(index, indexOfNextSep);\n            const child = this.children.get(this.getPlatformAwareName(name));\n            if (child) {\n                return child.findByPath(path, indexOfNextSep, ignoreCase);\n            }\n        }\n        return null;\n    }\n}\nExplorerItem.__decorator = ( __decorate([\n    memoize\n], ExplorerItem.prototype, \"children\", null));\nclass NewExplorerItem extends ExplorerItem {\n    constructor(fileService, configService, filesConfigService, parent, isDirectory) {\n        super(URI.file(''), fileService, configService, filesConfigService, parent, isDirectory);\n        this._isDirectoryResolved = true;\n    }\n}\nexport { ExplorerItem, ExplorerModel, NewExplorerItem };\n", "class ExplorerFileNestingTrie {\n    constructor(config) {\n        this.root = ( new PreTrie());\n        for (const [parentPattern, childPatterns] of config) {\n            for (const childPattern of childPatterns) {\n                this.root.add(parentPattern, childPattern);\n            }\n        }\n    }\n    toString() {\n        return ( this.root.toString());\n    }\n    getAttributes(filename, dirname) {\n        const lastDot = filename.lastIndexOf('.');\n        if (lastDot < 1) {\n            return {\n                dirname,\n                basename: filename,\n                extname: ''\n            };\n        }\n        else {\n            return {\n                dirname,\n                basename: filename.substring(0, lastDot),\n                extname: filename.substring(lastDot + 1)\n            };\n        }\n    }\n    nest(files, dirname) {\n        const parentFinder = ( new PreTrie());\n        for (const potentialParent of files) {\n            const attributes = this.getAttributes(potentialParent, dirname);\n            const children = this.root.get(potentialParent, attributes);\n            for (const child of children) {\n                parentFinder.add(child, potentialParent);\n            }\n        }\n        const findAllRootAncestors = (file, seen = ( new Set())) => {\n            if (( seen.has(file))) {\n                return [];\n            }\n            seen.add(file);\n            const attributes = this.getAttributes(file, dirname);\n            const ancestors = parentFinder.get(file, attributes);\n            if (ancestors.length === 0) {\n                return [file];\n            }\n            if (ancestors.length === 1 && ancestors[0] === file) {\n                return [file];\n            }\n            return ancestors.flatMap(a => findAllRootAncestors(a, seen));\n        };\n        const result = ( new Map());\n        for (const file of files) {\n            let ancestors = findAllRootAncestors(file);\n            if (ancestors.length === 0) {\n                ancestors = [file];\n            }\n            for (const ancestor of ancestors) {\n                let existing = result.get(ancestor);\n                if (!existing) {\n                    result.set(ancestor, existing = ( new Set()));\n                }\n                if (file !== ancestor) {\n                    existing.add(file);\n                }\n            }\n        }\n        return result;\n    }\n}\nclass PreTrie {\n    constructor() {\n        this.value = ( new SufTrie());\n        this.map = ( new Map());\n    }\n    add(key, value) {\n        if (key === '') {\n            this.value.add(key, value);\n        }\n        else if (key[0] === '*') {\n            this.value.add(key, value);\n        }\n        else {\n            const head = key[0];\n            const rest = key.slice(1);\n            let existing = this.map.get(head);\n            if (!existing) {\n                this.map.set(head, existing = ( new PreTrie()));\n            }\n            existing.add(rest, value);\n        }\n    }\n    get(key, attributes) {\n        const results = [];\n        results.push(...this.value.get(key, attributes));\n        const head = key[0];\n        const rest = key.slice(1);\n        const existing = this.map.get(head);\n        if (existing) {\n            results.push(...existing.get(rest, attributes));\n        }\n        return results;\n    }\n    toString(indentation = '') {\n        const lines = [];\n        if (this.value.hasItems) {\n            lines.push('* => \\n' + ( this.value.toString(indentation + '  ')));\n        }\n        return ( lines.map(l => indentation + l)).join('\\n');\n    }\n}\nclass SufTrie {\n    constructor() {\n        this.star = [];\n        this.epsilon = [];\n        this.map = ( new Map());\n        this.hasItems = false;\n    }\n    add(key, value) {\n        this.hasItems = true;\n        if (key === '*') {\n            this.star.push(( new SubstitutionString(value)));\n        }\n        else if (key === '') {\n            this.epsilon.push(( new SubstitutionString(value)));\n        }\n        else {\n            const tail = key[key.length - 1];\n            const rest = key.slice(0, key.length - 1);\n            if (tail === '*') {\n                throw Error('Unexpected star in SufTrie key: ' + key);\n            }\n            else {\n                let existing = this.map.get(tail);\n                if (!existing) {\n                    this.map.set(tail, existing = ( new SufTrie()));\n                }\n                existing.add(rest, value);\n            }\n        }\n    }\n    get(key, attributes) {\n        const results = [];\n        if (key === '') {\n            results.push(...( this.epsilon.map(ss => ss.substitute(attributes))));\n        }\n        if (this.star.length) {\n            results.push(...( this.star.map(ss => ss.substitute(attributes, key))));\n        }\n        const tail = key[key.length - 1];\n        const rest = key.slice(0, key.length - 1);\n        const existing = this.map.get(tail);\n        if (existing) {\n            results.push(...existing.get(rest, attributes));\n        }\n        return results;\n    }\n    toString(indentation = '') {\n        const lines = [];\n        if (this.star.length) {\n            lines.push('* => ' + this.star.join('; '));\n        }\n        if (this.epsilon.length) {\n            lines.push('ε => ' + this.epsilon.join('; '));\n        }\n        return ( lines.map(l => indentation + l)).join('\\n');\n    }\n}\nconst substitutionStringTokenizer = /\\$[({](capture|basename|dirname|extname)[)}]/g;\nclass SubstitutionString {\n    constructor(pattern) {\n        this.tokens = [];\n        substitutionStringTokenizer.lastIndex = 0;\n        let token;\n        let lastIndex = 0;\n        while (token = substitutionStringTokenizer.exec(pattern)) {\n            const prefix = pattern.slice(lastIndex, token.index);\n            this.tokens.push(prefix);\n            const type = token[1];\n            switch (type) {\n                case \"basename\" :\n                case \"dirname\" :\n                case \"extname\" :\n                case \"capture\" :\n                    this.tokens.push({ capture: type });\n                    break;\n                default: throw Error('unknown substitution type: ' + type);\n            }\n            lastIndex = token.index + token[0].length;\n        }\n        if (lastIndex !== pattern.length) {\n            const suffix = pattern.slice(lastIndex, pattern.length);\n            this.tokens.push(suffix);\n        }\n    }\n    substitute(attributes, capture) {\n        return ( this.tokens.map(t => {\n            if (typeof t === 'string') {\n                return t;\n            }\n            switch (t.capture) {\n                case \"basename\" : return attributes.basename;\n                case \"dirname\" : return attributes.dirname;\n                case \"extname\" : return attributes.extname;\n                case \"capture\" : return capture || '';\n            }\n        })).join('');\n    }\n}\nexport { ExplorerFileNestingTrie, PreTrie, SufTrie };\n", "import { __decorate, __param } from '../../../../../../external/tslib/tslib.es6.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { adoptToGalleryExtensionId, areSameExtensions, getExtensionId } from './extensionManagementUtil.js';\nimport { IProductService } from 'monaco-editor/esm/vs/platform/product/common/productService.js';\nimport { distinct } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { isString } from 'monaco-editor/esm/vs/base/common/types.js';\nvar ExtensionStorageService_1;\nconst IExtensionStorageService = ( createDecorator('IExtensionStorageService'));\nconst EXTENSION_KEYS_ID_VERSION_REGEX = /^extensionKeys\\/([^.]+\\..+)@(\\d+\\.\\d+\\.\\d+(-.*)?)$/;\nlet ExtensionStorageService = class ExtensionStorageService extends Disposable {\n    static { ExtensionStorageService_1 = this; }\n    static { this.LARGE_STATE_WARNING_THRESHOLD = 512 * 1024; }\n    static toKey(extension) {\n        return `extensionKeys/${adoptToGalleryExtensionId(extension.id)}@${extension.version}`;\n    }\n    static fromKey(key) {\n        const matches = EXTENSION_KEYS_ID_VERSION_REGEX.exec(key);\n        if (matches && matches[1]) {\n            return { id: matches[1], version: matches[2] };\n        }\n        return undefined;\n    }\n    static async removeOutdatedExtensionVersions(extensionManagementService, storageService) {\n        const extensions = await extensionManagementService.getInstalled();\n        const extensionVersionsToRemove = [];\n        for (const [id, versions] of ExtensionStorageService_1.readAllExtensionsWithKeysForSync(storageService)) {\n            const extensionVersion = extensions.find(e => areSameExtensions(e.identifier, { id }))?.manifest.version;\n            for (const version of versions) {\n                if (extensionVersion !== version) {\n                    extensionVersionsToRemove.push(ExtensionStorageService_1.toKey({ id, version }));\n                }\n            }\n        }\n        for (const key of extensionVersionsToRemove) {\n            storageService.remove(key, 0 );\n        }\n    }\n    static readAllExtensionsWithKeysForSync(storageService) {\n        const extensionsWithKeysForSync = ( new Map());\n        const keys = ( storageService.keys(0, 1 ));\n        for (const key of keys) {\n            const extensionIdWithVersion = ExtensionStorageService_1.fromKey(key);\n            if (extensionIdWithVersion) {\n                let versions = extensionsWithKeysForSync.get(extensionIdWithVersion.id.toLowerCase());\n                if (!versions) {\n                    extensionsWithKeysForSync.set(extensionIdWithVersion.id.toLowerCase(), versions = []);\n                }\n                versions.push(extensionIdWithVersion.version);\n            }\n        }\n        return extensionsWithKeysForSync;\n    }\n    constructor(storageService, productService, logService) {\n        super();\n        this.storageService = storageService;\n        this.productService = productService;\n        this.logService = logService;\n        this._onDidChangeExtensionStorageToSync = this._register(( new Emitter()));\n        this.onDidChangeExtensionStorageToSync = this._onDidChangeExtensionStorageToSync.event;\n        this.extensionsWithKeysForSync = ExtensionStorageService_1.readAllExtensionsWithKeysForSync(storageService);\n        this._register(this.storageService.onDidChangeValue(0 , undefined, this._register(( new DisposableStore())))(e => this.onDidChangeStorageValue(e)));\n    }\n    onDidChangeStorageValue(e) {\n        if (( this.extensionsWithKeysForSync.has(e.key.toLowerCase()))) {\n            this._onDidChangeExtensionStorageToSync.fire();\n            return;\n        }\n        const extensionIdWithVersion = ExtensionStorageService_1.fromKey(e.key);\n        if (extensionIdWithVersion) {\n            if (this.storageService.get(e.key, 0 ) === undefined) {\n                this.extensionsWithKeysForSync.delete(extensionIdWithVersion.id.toLowerCase());\n            }\n            else {\n                let versions = this.extensionsWithKeysForSync.get(extensionIdWithVersion.id.toLowerCase());\n                if (!versions) {\n                    this.extensionsWithKeysForSync.set(extensionIdWithVersion.id.toLowerCase(), versions = []);\n                }\n                versions.push(extensionIdWithVersion.version);\n                this._onDidChangeExtensionStorageToSync.fire();\n            }\n            return;\n        }\n    }\n    getExtensionId(extension) {\n        if (isString(extension)) {\n            return extension;\n        }\n        const publisher = extension.manifest ? extension.manifest.publisher : extension.publisher;\n        const name = extension.manifest ? extension.manifest.name : extension.name;\n        return getExtensionId(publisher, name);\n    }\n    getExtensionState(extension, global) {\n        const extensionId = this.getExtensionId(extension);\n        const jsonValue = this.getExtensionStateRaw(extension, global);\n        if (jsonValue) {\n            try {\n                return JSON.parse(jsonValue);\n            }\n            catch (error) {\n                this.logService.error(`[mainThreadStorage] unexpected error parsing storage contents (extensionId: ${extensionId}, global: ${global}): ${error}`);\n            }\n        }\n        return undefined;\n    }\n    getExtensionStateRaw(extension, global) {\n        const extensionId = this.getExtensionId(extension);\n        const rawState = this.storageService.get(extensionId, global ? 0  : 1 );\n        if (rawState && rawState?.length > ExtensionStorageService_1.LARGE_STATE_WARNING_THRESHOLD) {\n            this.logService.warn(`[mainThreadStorage] large extension state detected (extensionId: ${extensionId}, global: ${global}): ${rawState.length / 1024}kb. Consider to use 'storageUri' or 'globalStorageUri' to store this data on disk instead.`);\n        }\n        return rawState;\n    }\n    setExtensionState(extension, state, global) {\n        const extensionId = this.getExtensionId(extension);\n        if (state === undefined) {\n            this.storageService.remove(extensionId, global ? 0  : 1 );\n        }\n        else {\n            this.storageService.store(extensionId, JSON.stringify(state), global ? 0  : 1 , 1 );\n        }\n    }\n    setKeysForSync(extensionIdWithVersion, keys) {\n        this.storageService.store(ExtensionStorageService_1.toKey(extensionIdWithVersion), JSON.stringify(keys), 0 , 1 );\n    }\n    getKeysForSync(extensionIdWithVersion) {\n        const extensionKeysForSyncFromProduct = this.productService.extensionSyncedKeys?.[extensionIdWithVersion.id.toLowerCase()];\n        const extensionKeysForSyncFromStorageValue = this.storageService.get(ExtensionStorageService_1.toKey(extensionIdWithVersion), 0 );\n        const extensionKeysForSyncFromStorage = extensionKeysForSyncFromStorageValue ? JSON.parse(extensionKeysForSyncFromStorageValue) : undefined;\n        return extensionKeysForSyncFromStorage && extensionKeysForSyncFromProduct\n            ? distinct([...extensionKeysForSyncFromStorage, ...extensionKeysForSyncFromProduct])\n            : (extensionKeysForSyncFromStorage || extensionKeysForSyncFromProduct);\n    }\n    addToMigrationList(from, to) {\n        if (from !== to) {\n            const migrationList = this.migrationList.filter(entry => !entry.includes(from) && !entry.includes(to));\n            migrationList.push([from, to]);\n            this.migrationList = migrationList;\n        }\n    }\n    getSourceExtensionToMigrate(toExtensionId) {\n        const entry = this.migrationList.find(([, to]) => toExtensionId === to);\n        return entry ? entry[0] : undefined;\n    }\n    get migrationList() {\n        const value = this.storageService.get('extensionStorage.migrationList', -1 , '[]');\n        try {\n            const migrationList = JSON.parse(value);\n            if (Array.isArray(migrationList)) {\n                return migrationList;\n            }\n        }\n        catch (error) {  }\n        return [];\n    }\n    set migrationList(migrationList) {\n        if (migrationList.length) {\n            this.storageService.store('extensionStorage.migrationList', JSON.stringify(migrationList), -1 , 1 );\n        }\n        else {\n            this.storageService.remove('extensionStorage.migrationList', -1 );\n        }\n    }\n};\nExtensionStorageService = ExtensionStorageService_1 = ( __decorate([\n    ( __param(0, IStorageService)),\n    ( __param(1, IProductService)),\n    ( __param(2, ILogService))\n], ExtensionStorageService));\nexport { ExtensionStorageService, IExtensionStorageService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nfunction getLocale(extension) {\n    return extension.tags.find(t => t.startsWith('lp-'))?.split('lp-')[1];\n}\nconst ILanguagePackService = ( createDecorator('languagePackService'));\nexport { ILanguagePackService, getLocale };\n", "class TreeviewsService {\n    constructor() {\n        this._renderedElements = ( new Map());\n    }\n    getRenderedTreeElement(node) {\n        if (( this._renderedElements.has(node))) {\n            return this._renderedElements.get(node);\n        }\n        return undefined;\n    }\n    addRenderedTreeItemElement(node, element) {\n        this._renderedElements.set(node, element);\n    }\n    removeRenderedTreeItemElement(node) {\n        if (( this._renderedElements.has(node))) {\n            this._renderedElements.delete(node);\n        }\n    }\n}\nexport { TreeviewsService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ITreeViewsService = ( createDecorator('treeViewsService'));\nexport { ITreeViewsService };\n", "import { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { Extensions } from 'monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nconst IBreadcrumbsService = ( createDecorator('IEditorBreadcrumbsService'));\nclass BreadcrumbsService {\n    constructor() {\n        this._map = ( new Map());\n    }\n    register(group, widget) {\n        if (( this._map.has(group))) {\n            throw new Error(`group (${group}) has already a widget`);\n        }\n        this._map.set(group, widget);\n        return {\n            dispose: () => this._map.delete(group)\n        };\n    }\n    getWidget(group) {\n        return this._map.get(group);\n    }\n}\nclass BreadcrumbsConfig {\n    constructor() {\n    }\n    static { this.IsEnabled = BreadcrumbsConfig._stub('breadcrumbs.enabled'); }\n    static { this.UseQuickPick = BreadcrumbsConfig._stub('breadcrumbs.useQuickPick'); }\n    static { this.FilePath = BreadcrumbsConfig._stub('breadcrumbs.filePath'); }\n    static { this.SymbolPath = BreadcrumbsConfig._stub('breadcrumbs.symbolPath'); }\n    static { this.SymbolSortOrder = BreadcrumbsConfig._stub('breadcrumbs.symbolSortOrder'); }\n    static { this.Icons = BreadcrumbsConfig._stub('breadcrumbs.icons'); }\n    static { this.TitleScrollbarSizing = BreadcrumbsConfig._stub('workbench.editor.titleScrollbarSizing'); }\n    static { this.FileExcludes = BreadcrumbsConfig._stub('files.exclude'); }\n    static _stub(name) {\n        return {\n            bindTo(service) {\n                const onDidChange = ( new Emitter());\n                const listener = service.onDidChangeConfiguration(e => {\n                    if (e.affectsConfiguration(name)) {\n                        onDidChange.fire(undefined);\n                    }\n                });\n                return new (class {\n                    constructor() {\n                        this.name = name;\n                        this.onDidChange = onDidChange.event;\n                    }\n                    getValue(overrides) {\n                        if (overrides) {\n                            return service.getValue(name, overrides);\n                        }\n                        else {\n                            return service.getValue(name);\n                        }\n                    }\n                    updateValue(newValue, overrides) {\n                        if (overrides) {\n                            return service.updateValue(name, newValue, overrides);\n                        }\n                        else {\n                            return service.updateValue(name, newValue);\n                        }\n                    }\n                    dispose() {\n                        listener.dispose();\n                        onDidChange.dispose();\n                    }\n                });\n            }\n        };\n    }\n}\n( Registry.as(Extensions.Configuration)).registerConfiguration({\n    id: 'breadcrumbs',\n    title: ( localize('title', \"Breadcrumb Navigation\")),\n    order: 101,\n    type: 'object',\n    properties: {\n        'breadcrumbs.enabled': {\n            description: ( localize('enabled', \"Enable/disable navigation breadcrumbs.\")),\n            type: 'boolean',\n            default: true\n        },\n        'breadcrumbs.filePath': {\n            description: ( localize(\n                'filepath',\n                \"Controls whether and how file paths are shown in the breadcrumbs view.\"\n            )),\n            type: 'string',\n            default: 'on',\n            enum: ['on', 'off', 'last'],\n            enumDescriptions: [\n                ( localize('filepath.on', \"Show the file path in the breadcrumbs view.\")),\n                ( localize('filepath.off', \"Do not show the file path in the breadcrumbs view.\")),\n                ( localize(\n                    'filepath.last',\n                    \"Only show the last element of the file path in the breadcrumbs view.\"\n                )),\n            ]\n        },\n        'breadcrumbs.symbolPath': {\n            description: ( localize(\n                'symbolpath',\n                \"Controls whether and how symbols are shown in the breadcrumbs view.\"\n            )),\n            type: 'string',\n            default: 'on',\n            enum: ['on', 'off', 'last'],\n            enumDescriptions: [\n                ( localize('symbolpath.on', \"Show all symbols in the breadcrumbs view.\")),\n                ( localize('symbolpath.off', \"Do not show symbols in the breadcrumbs view.\")),\n                ( localize('symbolpath.last', \"Only show the current symbol in the breadcrumbs view.\")),\n            ]\n        },\n        'breadcrumbs.symbolSortOrder': {\n            description: ( localize(\n                'symbolSortOrder',\n                \"Controls how symbols are sorted in the breadcrumbs outline view.\"\n            )),\n            type: 'string',\n            default: 'position',\n            scope: 5 ,\n            enum: ['position', 'name', 'type'],\n            enumDescriptions: [\n                ( localize('symbolSortOrder.position', \"Show symbol outline in file position order.\")),\n                ( localize('symbolSortOrder.name', \"Show symbol outline in alphabetical order.\")),\n                ( localize('symbolSortOrder.type', \"Show symbol outline in symbol type order.\")),\n            ]\n        },\n        'breadcrumbs.icons': {\n            description: ( localize('icons', \"Render breadcrumb items with icons.\")),\n            type: 'boolean',\n            default: true\n        },\n        'breadcrumbs.showFiles': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize('filteredTypes.file', \"When enabled breadcrumbs show `file`-symbols.\"))\n        },\n        'breadcrumbs.showModules': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize('filteredTypes.module', \"When enabled breadcrumbs show `module`-symbols.\"))\n        },\n        'breadcrumbs.showNamespaces': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize(\n                'filteredTypes.namespace',\n                \"When enabled breadcrumbs show `namespace`-symbols.\"\n            ))\n        },\n        'breadcrumbs.showPackages': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize(\n                'filteredTypes.package',\n                \"When enabled breadcrumbs show `package`-symbols.\"\n            ))\n        },\n        'breadcrumbs.showClasses': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize('filteredTypes.class', \"When enabled breadcrumbs show `class`-symbols.\"))\n        },\n        'breadcrumbs.showMethods': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize('filteredTypes.method', \"When enabled breadcrumbs show `method`-symbols.\"))\n        },\n        'breadcrumbs.showProperties': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize(\n                'filteredTypes.property',\n                \"When enabled breadcrumbs show `property`-symbols.\"\n            ))\n        },\n        'breadcrumbs.showFields': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize('filteredTypes.field', \"When enabled breadcrumbs show `field`-symbols.\"))\n        },\n        'breadcrumbs.showConstructors': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize(\n                'filteredTypes.constructor',\n                \"When enabled breadcrumbs show `constructor`-symbols.\"\n            ))\n        },\n        'breadcrumbs.showEnums': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize('filteredTypes.enum', \"When enabled breadcrumbs show `enum`-symbols.\"))\n        },\n        'breadcrumbs.showInterfaces': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize(\n                'filteredTypes.interface',\n                \"When enabled breadcrumbs show `interface`-symbols.\"\n            ))\n        },\n        'breadcrumbs.showFunctions': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize(\n                'filteredTypes.function',\n                \"When enabled breadcrumbs show `function`-symbols.\"\n            ))\n        },\n        'breadcrumbs.showVariables': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize(\n                'filteredTypes.variable',\n                \"When enabled breadcrumbs show `variable`-symbols.\"\n            ))\n        },\n        'breadcrumbs.showConstants': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize(\n                'filteredTypes.constant',\n                \"When enabled breadcrumbs show `constant`-symbols.\"\n            ))\n        },\n        'breadcrumbs.showStrings': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize('filteredTypes.string', \"When enabled breadcrumbs show `string`-symbols.\"))\n        },\n        'breadcrumbs.showNumbers': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize('filteredTypes.number', \"When enabled breadcrumbs show `number`-symbols.\"))\n        },\n        'breadcrumbs.showBooleans': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize(\n                'filteredTypes.boolean',\n                \"When enabled breadcrumbs show `boolean`-symbols.\"\n            ))\n        },\n        'breadcrumbs.showArrays': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize('filteredTypes.array', \"When enabled breadcrumbs show `array`-symbols.\"))\n        },\n        'breadcrumbs.showObjects': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize('filteredTypes.object', \"When enabled breadcrumbs show `object`-symbols.\"))\n        },\n        'breadcrumbs.showKeys': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize('filteredTypes.key', \"When enabled breadcrumbs show `key`-symbols.\"))\n        },\n        'breadcrumbs.showNull': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize('filteredTypes.null', \"When enabled breadcrumbs show `null`-symbols.\"))\n        },\n        'breadcrumbs.showEnumMembers': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize(\n                'filteredTypes.enumMember',\n                \"When enabled breadcrumbs show `enumMember`-symbols.\"\n            ))\n        },\n        'breadcrumbs.showStructs': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize('filteredTypes.struct', \"When enabled breadcrumbs show `struct`-symbols.\"))\n        },\n        'breadcrumbs.showEvents': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize('filteredTypes.event', \"When enabled breadcrumbs show `event`-symbols.\"))\n        },\n        'breadcrumbs.showOperators': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize(\n                'filteredTypes.operator',\n                \"When enabled breadcrumbs show `operator`-symbols.\"\n            ))\n        },\n        'breadcrumbs.showTypeParameters': {\n            type: 'boolean',\n            default: true,\n            scope: 5 ,\n            markdownDescription: ( localize(\n                'filteredTypes.typeParameter',\n                \"When enabled breadcrumbs show `typeParameter`-symbols.\"\n            ))\n        }\n    }\n});\nexport { BreadcrumbsConfig, BreadcrumbsService, IBreadcrumbsService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IOutlineService = ( createDecorator('IOutlineService'));\nexport { IOutlineService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst State = {\n    Uninitialized: { type: \"uninitialized\"  },\n    Disabled: (reason) => ({ type: \"disabled\" , reason }),\n    Idle: (updateType, error) => ({ type: \"idle\" , updateType, error }),\n    CheckingForUpdates: (explicit) => ({ type: \"checking for updates\" , explicit }),\n    AvailableForDownload: (update) => ({ type: \"available for download\" , update }),\n    Downloading: (update) => ({ type: \"downloading\" , update }),\n    Downloaded: (update) => ({ type: \"downloaded\" , update }),\n    Updating: (update) => ({ type: \"updating\" , update }),\n    Ready: (update) => ({ type: \"ready\" , update }),\n};\nconst IUpdateService = ( createDecorator('updateService'));\nexport { IUpdateService, State };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IStatusbarService = ( createDecorator('statusbarService'));\nfunction isStatusbarEntryLocation(thing) {\n    const candidate = thing;\n    return typeof candidate?.id === 'string' && typeof candidate.alignment === 'number';\n}\nfunction isStatusbarEntryPriority(thing) {\n    const candidate = thing;\n    return (typeof candidate?.primary === 'number' || isStatusbarEntryLocation(candidate?.primary)) && typeof candidate?.secondary === 'number';\n}\nconst ShowTooltipCommand = {\n    id: 'statusBar.entry.showTooltip',\n    title: ''\n};\nconst StatusbarEntryKinds = ['standard', 'warning', 'error', 'prominent', 'remote', 'offline'];\nexport { IStatusbarService, ShowTooltipCommand, StatusbarEntryKinds, isStatusbarEntryLocation, isStatusbarEntryPriority };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ITerminalService = ( createDecorator('terminalService'));\nconst ITerminalEditorService = ( createDecorator('terminalEditorService'));\nconst ITerminalGroupService = ( createDecorator('terminalGroupService'));\nconst ITerminalInstanceService = ( createDecorator('terminalInstanceService'));\nconst terminalEditorId = 'terminalEditor';\nexport { ITerminalEditorService, ITerminalGroupService, ITerminalInstanceService, ITerminalService, terminalEditorId };\n", "import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst TERMINAL_VIEW_ID = 'terminal';\nconst TERMINAL_CREATION_COMMANDS = ['workbench.action.terminal.toggleTerminal', 'workbench.action.terminal.new', 'workbench.action.togglePanel', 'workbench.action.terminal.focus'];\nconst TERMINAL_CONFIG_SECTION = 'terminal.integrated';\nconst DEFAULT_LETTER_SPACING = 0;\nconst MINIMUM_LETTER_SPACING = -5;\nconst DEFAULT_LINE_HEIGHT = 1;\nconst MINIMUM_FONT_WEIGHT = 1;\nconst MAXIMUM_FONT_WEIGHT = 1000;\nconst DEFAULT_FONT_WEIGHT = 'normal';\nconst DEFAULT_BOLD_FONT_WEIGHT = 'bold';\nconst SUGGESTIONS_FONT_WEIGHT = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\nconst ITerminalProfileResolverService = ( createDecorator('terminalProfileResolverService'));\nconst ITerminalProfileService = ( createDecorator('terminalProfileService'));\nconst DEFAULT_LOCAL_ECHO_EXCLUDE = ['vim', 'vi', 'nano', 'tmux'];\nconst DEFAULT_COMMANDS_TO_SKIP_SHELL = [\n    \"workbench.action.terminal.clearSelection\" ,\n    \"workbench.action.terminal.clear\" ,\n    \"workbench.action.terminal.copyAndClearSelection\" ,\n    \"workbench.action.terminal.copySelection\" ,\n    \"workbench.action.terminal.copySelectionAsHtml\" ,\n    \"workbench.action.terminal.copyLastCommandOutput\" ,\n    \"workbench.action.terminal.deleteToLineStart\" ,\n    \"workbench.action.terminal.deleteWordLeft\" ,\n    \"workbench.action.terminal.deleteWordRight\" ,\n    \"workbench.action.terminal.focusFind\" ,\n    \"workbench.action.terminal.hideFind\" ,\n    \"workbench.action.terminal.findNext\" ,\n    \"workbench.action.terminal.findPrevious\" ,\n    \"workbench.action.terminal.goToRecentDirectory\" ,\n    \"workbench.action.terminal.toggleFindRegex\" ,\n    \"workbench.action.terminal.toggleFindWholeWord\" ,\n    \"workbench.action.terminal.toggleFindCaseSensitive\" ,\n    \"workbench.action.terminal.focusNextPane\" ,\n    \"workbench.action.terminal.focusNext\" ,\n    \"workbench.action.terminal.focusPreviousPane\" ,\n    \"workbench.action.terminal.focusPrevious\" ,\n    \"workbench.action.terminal.focus\" ,\n    \"workbench.action.terminal.sizeToContentWidth\" ,\n    \"workbench.action.terminal.kill\" ,\n    \"workbench.action.terminal.killEditor\" ,\n    \"workbench.action.terminal.moveToEditor\" ,\n    \"workbench.action.terminal.moveToLineEnd\" ,\n    \"workbench.action.terminal.moveToLineStart\" ,\n    \"workbench.action.terminal.moveToTerminalPanel\" ,\n    \"workbench.action.terminal.newInActiveWorkspace\" ,\n    \"workbench.action.terminal.new\" ,\n    \"workbench.action.terminal.paste\" ,\n    \"workbench.action.terminal.pasteSelection\" ,\n    \"workbench.action.terminal.resizePaneDown\" ,\n    \"workbench.action.terminal.resizePaneLeft\" ,\n    \"workbench.action.terminal.resizePaneRight\" ,\n    \"workbench.action.terminal.resizePaneUp\" ,\n    \"workbench.action.terminal.runActiveFile\" ,\n    \"workbench.action.terminal.runSelectedText\" ,\n    \"workbench.action.terminal.runRecentCommand\" ,\n    \"workbench.action.terminal.scrollDown\" ,\n    \"workbench.action.terminal.scrollDownPage\" ,\n    \"workbench.action.terminal.scrollToBottom\" ,\n    \"workbench.action.terminal.scrollToNextCommand\" ,\n    \"workbench.action.terminal.scrollToPreviousCommand\" ,\n    \"workbench.action.terminal.scrollToTop\" ,\n    \"workbench.action.terminal.scrollUp\" ,\n    \"workbench.action.terminal.scrollUpPage\" ,\n    \"workbench.action.terminal.sendSequence\" ,\n    \"workbench.action.terminal.selectAll\" ,\n    \"workbench.action.terminal.selectToNextCommand\" ,\n    \"workbench.action.terminal.selectToNextLine\" ,\n    \"workbench.action.terminal.selectToPreviousCommand\" ,\n    \"workbench.action.terminal.selectToPreviousLine\" ,\n    \"workbench.action.terminal.splitInActiveWorkspace\" ,\n    \"workbench.action.terminal.split\" ,\n    \"workbench.action.terminal.toggleTerminal\" ,\n    \"workbench.action.terminal.selectPrevSuggestion\" ,\n    \"workbench.action.terminal.selectPrevPageSuggestion\" ,\n    \"workbench.action.terminal.selectNextSuggestion\" ,\n    \"workbench.action.terminal.selectNextPageSuggestion\" ,\n    \"workbench.action.terminal.acceptSelectedSuggestion\" ,\n    \"workbench.action.terminal.hideSuggestWidget\" ,\n    \"workbench.action.terminal.focusHover\" ,\n    \"workbench.action.terminal.focusAccessibleBuffer\" ,\n    \"editor.action.accessibilityHelp\" ,\n    'editor.action.toggleTabFocusMode',\n    'notifications.hideList',\n    'notifications.hideToasts',\n    'workbench.action.closeQuickOpen',\n    'workbench.action.quickOpen',\n    'workbench.action.quickOpenPreviousEditor',\n    'workbench.action.showCommands',\n    'workbench.action.tasks.build',\n    'workbench.action.tasks.restartTask',\n    'workbench.action.tasks.runTask',\n    'workbench.action.tasks.reRunTask',\n    'workbench.action.tasks.showLog',\n    'workbench.action.tasks.showTasks',\n    'workbench.action.tasks.terminate',\n    'workbench.action.tasks.test',\n    'workbench.action.toggleFullScreen',\n    'workbench.action.terminal.focusAtIndex1',\n    'workbench.action.terminal.focusAtIndex2',\n    'workbench.action.terminal.focusAtIndex3',\n    'workbench.action.terminal.focusAtIndex4',\n    'workbench.action.terminal.focusAtIndex5',\n    'workbench.action.terminal.focusAtIndex6',\n    'workbench.action.terminal.focusAtIndex7',\n    'workbench.action.terminal.focusAtIndex8',\n    'workbench.action.terminal.focusAtIndex9',\n    'workbench.action.focusSecondEditorGroup',\n    'workbench.action.focusThirdEditorGroup',\n    'workbench.action.focusFourthEditorGroup',\n    'workbench.action.focusFifthEditorGroup',\n    'workbench.action.focusSixthEditorGroup',\n    'workbench.action.focusSeventhEditorGroup',\n    'workbench.action.focusEighthEditorGroup',\n    'workbench.action.focusNextPart',\n    'workbench.action.focusPreviousPart',\n    'workbench.action.nextPanelView',\n    'workbench.action.previousPanelView',\n    'workbench.action.nextSideBarView',\n    'workbench.action.previousSideBarView',\n    'workbench.action.debug.start',\n    'workbench.action.debug.stop',\n    'workbench.action.debug.run',\n    'workbench.action.debug.restart',\n    'workbench.action.debug.continue',\n    'workbench.action.debug.pause',\n    'workbench.action.debug.stepInto',\n    'workbench.action.debug.stepOut',\n    'workbench.action.debug.stepOver',\n    'workbench.action.nextEditor',\n    'workbench.action.previousEditor',\n    'workbench.action.nextEditorInGroup',\n    'workbench.action.previousEditorInGroup',\n    'workbench.action.openNextRecentlyUsedEditor',\n    'workbench.action.openPreviousRecentlyUsedEditor',\n    'workbench.action.openNextRecentlyUsedEditorInGroup',\n    'workbench.action.openPreviousRecentlyUsedEditorInGroup',\n    'workbench.action.quickOpenPreviousRecentlyUsedEditor',\n    'workbench.action.quickOpenLeastRecentlyUsedEditor',\n    'workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup',\n    'workbench.action.quickOpenLeastRecentlyUsedEditorInGroup',\n    'workbench.action.focusActiveEditorGroup',\n    'workbench.action.focusFirstEditorGroup',\n    'workbench.action.focusLastEditorGroup',\n    'workbench.action.firstEditorInGroup',\n    'workbench.action.lastEditorInGroup',\n    'workbench.action.navigateUp',\n    'workbench.action.navigateDown',\n    'workbench.action.navigateRight',\n    'workbench.action.navigateLeft',\n    'workbench.action.togglePanel',\n    'workbench.action.quickOpenView',\n    'workbench.action.toggleMaximizedPanel',\n    'notification.acceptPrimaryAction',\n    'runCommands'\n];\nconst terminalContributionsDescriptor = {\n    extensionPoint: 'terminal',\n    defaultExtensionKind: ['workspace'],\n    activationEventsGenerator: (contribs, result) => {\n        for (const contrib of contribs) {\n            for (const profileContrib of (contrib.profiles ?? [])) {\n                result.push(`onTerminalProfile:${profileContrib.id}`);\n            }\n        }\n    },\n    jsonSchema: {\n        description: ( nls.localize(\n            'vscode.extension.contributes.terminal',\n            'Contributes terminal functionality.'\n        )),\n        type: 'object',\n        properties: {\n            profiles: {\n                type: 'array',\n                description: ( nls.localize(\n                    'vscode.extension.contributes.terminal.profiles',\n                    \"Defines additional terminal profiles that the user can create.\"\n                )),\n                items: {\n                    type: 'object',\n                    required: ['id', 'title'],\n                    defaultSnippets: [{\n                            body: {\n                                id: '$1',\n                                title: '$2'\n                            }\n                        }],\n                    properties: {\n                        id: {\n                            description: ( nls.localize(\n                                'vscode.extension.contributes.terminal.profiles.id',\n                                \"The ID of the terminal profile provider.\"\n                            )),\n                            type: 'string',\n                        },\n                        title: {\n                            description: ( nls.localize(\n                                'vscode.extension.contributes.terminal.profiles.title',\n                                \"Title for this terminal profile.\"\n                            )),\n                            type: 'string',\n                        },\n                        icon: {\n                            description: ( nls.localize(\n                                'vscode.extension.contributes.terminal.types.icon',\n                                \"A codicon, URI, or light and dark URIs to associate with this terminal type.\"\n                            )),\n                            anyOf: [{\n                                    type: 'string',\n                                },\n                                {\n                                    type: 'object',\n                                    properties: {\n                                        light: {\n                                            description: ( nls.localize(\n                                                'vscode.extension.contributes.terminal.types.icon.light',\n                                                'Icon path when a light theme is used'\n                                            )),\n                                            type: 'string'\n                                        },\n                                        dark: {\n                                            description: ( nls.localize(\n                                                'vscode.extension.contributes.terminal.types.icon.dark',\n                                                'Icon path when a dark theme is used'\n                                            )),\n                                            type: 'string'\n                                        }\n                                    }\n                                }]\n                        },\n                    },\n                },\n            },\n        },\n    },\n};\nexport { DEFAULT_BOLD_FONT_WEIGHT, DEFAULT_COMMANDS_TO_SKIP_SHELL, DEFAULT_FONT_WEIGHT, DEFAULT_LETTER_SPACING, DEFAULT_LINE_HEIGHT, DEFAULT_LOCAL_ECHO_EXCLUDE, ITerminalProfileResolverService, ITerminalProfileService, MAXIMUM_FONT_WEIGHT, MINIMUM_FONT_WEIGHT, MINIMUM_LETTER_SPACING, SUGGESTIONS_FONT_WEIGHT, TERMINAL_CONFIG_SECTION, TERMINAL_CREATION_COMMANDS, TERMINAL_VIEW_ID, terminalContributionsDescriptor };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nconst terminalTabFocusModeContextKey = ( new RawContextKey('terminalTabFocusMode', false, true));\nvar TitleEventSource;\n( (function(TitleEventSource) {\n    TitleEventSource[TitleEventSource[\"Api\"] = 0] = \"Api\";\n    TitleEventSource[TitleEventSource[\"Process\"] = 1] = \"Process\";\n    TitleEventSource[TitleEventSource[\"Sequence\"] = 2] = \"Sequence\";\n    TitleEventSource[TitleEventSource[\"Config\"] = 3] = \"Config\";\n})(TitleEventSource || (TitleEventSource = {})));\nvar TerminalLocation;\n( (function(TerminalLocation) {\n    TerminalLocation[TerminalLocation[\"Panel\"] = 1] = \"Panel\";\n    TerminalLocation[TerminalLocation[\"Editor\"] = 2] = \"Editor\";\n})(TerminalLocation || (TerminalLocation = {})));\nvar TerminalExitReason;\n( (function(TerminalExitReason) {\n    TerminalExitReason[TerminalExitReason[\"Unknown\"] = 0] = \"Unknown\";\n    TerminalExitReason[TerminalExitReason[\"Shutdown\"] = 1] = \"Shutdown\";\n    TerminalExitReason[TerminalExitReason[\"Process\"] = 2] = \"Process\";\n    TerminalExitReason[TerminalExitReason[\"User\"] = 3] = \"User\";\n    TerminalExitReason[TerminalExitReason[\"Extension\"] = 4] = \"Extension\";\n})(TerminalExitReason || (TerminalExitReason = {})));\nconst TerminalExtensions = {\n    Backend: 'workbench.contributions.terminal.processBackend'\n};\nclass TerminalBackendRegistry {\n    constructor() {\n        this._backends = ( new Map());\n    }\n    get backends() { return this._backends; }\n    registerTerminalBackend(backend) {\n        const key = this._sanitizeRemoteAuthority(backend.remoteAuthority);\n        if (( this._backends.has(key))) {\n            throw new Error(`A terminal backend with remote authority '${key}' was already registered.`);\n        }\n        this._backends.set(key, backend);\n    }\n    getTerminalBackend(remoteAuthority) {\n        return this._backends.get(this._sanitizeRemoteAuthority(remoteAuthority));\n    }\n    _sanitizeRemoteAuthority(remoteAuthority) {\n        return remoteAuthority?.toLowerCase() ?? '';\n    }\n}\nRegistry.add(TerminalExtensions.Backend, ( new TerminalBackendRegistry()));\nconst ITerminalLogService = ( createDecorator('terminalLogService'));\nexport { ITerminalLogService, TerminalExitReason, TerminalExtensions, TerminalLocation, TitleEventSource, terminalTabFocusModeContextKey };\n", "import { ExtensionsRegistry } from '../../../services/extensions/common/extensionsRegistry.js';\nimport { terminalContributionsDescriptor } from './terminal.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nconst terminalsExtPoint = ( ExtensionsRegistry.registerExtensionPoint(terminalContributionsDescriptor));\nconst ITerminalContributionService = ( createDecorator('terminalContributionsService'));\nclass TerminalContributionService {\n    get terminalProfiles() { return this._terminalProfiles; }\n    constructor() {\n        this._terminalProfiles = [];\n        terminalsExtPoint.setHandler(contributions => {\n            this._terminalProfiles = ( contributions.map(c => {\n                return c.value?.profiles?.filter(p => hasValidTerminalIcon(p)).map(e => {\n                    return { ...e, extensionIdentifier: c.description.identifier.value };\n                }) || [];\n            })).flat();\n        });\n    }\n}\nfunction hasValidTerminalIcon(profile) {\n    return !profile.icon ||\n        (typeof profile.icon === 'string' ||\n            URI.isUri(profile.icon) ||\n            ('light' in profile.icon && 'dark' in profile.icon &&\n                URI.isUri(profile.icon.light) && URI.isUri(profile.icon.dark)));\n}\nexport { ITerminalContributionService, TerminalContributionService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ITerminalLinkProviderService = ( createDecorator('terminalLinkProviderService'));\nexport { ITerminalLinkProviderService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IEnvironmentVariableService = ( createDecorator('environmentVariableService'));\nexport { IEnvironmentVariableService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ITerminalQuickFixService = ( createDecorator('terminalQuickFixService'));\nvar TerminalQuickFixType;\n( (function(TerminalQuickFixType) {\n    TerminalQuickFixType[TerminalQuickFixType[\"TerminalCommand\"] = 0] = \"TerminalCommand\";\n    TerminalQuickFixType[TerminalQuickFixType[\"Opener\"] = 1] = \"Opener\";\n    TerminalQuickFixType[TerminalQuickFixType[\"Port\"] = 2] = \"Port\";\n    TerminalQuickFixType[TerminalQuickFixType[\"VscodeCommand\"] = 3] = \"VscodeCommand\";\n})(TerminalQuickFixType || (TerminalQuickFixType = {})));\nexport { ITerminalQuickFixService, TerminalQuickFixType };\n", "import { RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IPreferencesSearchService = ( createDecorator('preferencesSearchService'));\nconst SETTINGS_EDITOR_COMMAND_CLEAR_SEARCH_RESULTS = 'settings.action.clearSearchResults';\nconst SETTINGS_EDITOR_COMMAND_SHOW_CONTEXT_MENU = 'settings.action.showContextMenu';\nconst SETTINGS_EDITOR_COMMAND_SUGGEST_FILTERS = 'settings.action.suggestFilters';\nconst CONTEXT_SETTINGS_EDITOR = ( new RawContextKey('inSettingsEditor', false));\nconst CONTEXT_SETTINGS_JSON_EDITOR = ( new RawContextKey('inSettingsJSONEditor', false));\nconst CONTEXT_SETTINGS_SEARCH_FOCUS = ( new RawContextKey('inSettingsSearch', false));\nconst CONTEXT_TOC_ROW_FOCUS = ( new RawContextKey('settingsTocRowFocus', false));\nconst CONTEXT_SETTINGS_ROW_FOCUS = ( new RawContextKey('settingRowFocus', false));\nconst CONTEXT_KEYBINDINGS_EDITOR = ( new RawContextKey('inKeybindings', false));\nconst CONTEXT_KEYBINDINGS_SEARCH_FOCUS = ( new RawContextKey('inKeybindingsSearch', false));\nconst CONTEXT_KEYBINDING_FOCUS = ( new RawContextKey('keybindingFocus', false));\nconst CONTEXT_WHEN_FOCUS = ( new RawContextKey('whenFocus', false));\nconst KEYBINDINGS_EDITOR_COMMAND_SEARCH = 'keybindings.editor.searchKeybindings';\nconst KEYBINDINGS_EDITOR_COMMAND_CLEAR_SEARCH_RESULTS = 'keybindings.editor.clearSearchResults';\nconst KEYBINDINGS_EDITOR_COMMAND_CLEAR_SEARCH_HISTORY = 'keybindings.editor.clearSearchHistory';\nconst KEYBINDINGS_EDITOR_COMMAND_RECORD_SEARCH_KEYS = 'keybindings.editor.recordSearchKeys';\nconst KEYBINDINGS_EDITOR_COMMAND_SORTBY_PRECEDENCE = 'keybindings.editor.toggleSortByPrecedence';\nconst KEYBINDINGS_EDITOR_COMMAND_DEFINE = 'keybindings.editor.defineKeybinding';\nconst KEYBINDINGS_EDITOR_COMMAND_ADD = 'keybindings.editor.addKeybinding';\nconst KEYBINDINGS_EDITOR_COMMAND_DEFINE_WHEN = 'keybindings.editor.defineWhenExpression';\nconst KEYBINDINGS_EDITOR_COMMAND_ACCEPT_WHEN = 'keybindings.editor.acceptWhenExpression';\nconst KEYBINDINGS_EDITOR_COMMAND_REJECT_WHEN = 'keybindings.editor.rejectWhenExpression';\nconst KEYBINDINGS_EDITOR_COMMAND_REMOVE = 'keybindings.editor.removeKeybinding';\nconst KEYBINDINGS_EDITOR_COMMAND_RESET = 'keybindings.editor.resetKeybinding';\nconst KEYBINDINGS_EDITOR_COMMAND_COPY = 'keybindings.editor.copyKeybindingEntry';\nconst KEYBINDINGS_EDITOR_COMMAND_COPY_COMMAND = 'keybindings.editor.copyCommandKeybindingEntry';\nconst KEYBINDINGS_EDITOR_COMMAND_COPY_COMMAND_TITLE = 'keybindings.editor.copyCommandTitle';\nconst KEYBINDINGS_EDITOR_COMMAND_SHOW_SIMILAR = 'keybindings.editor.showConflicts';\nconst KEYBINDINGS_EDITOR_COMMAND_FOCUS_KEYBINDINGS = 'keybindings.editor.focusKeybindings';\nconst KEYBINDINGS_EDITOR_SHOW_DEFAULT_KEYBINDINGS = 'keybindings.editor.showDefaultKeybindings';\nconst KEYBINDINGS_EDITOR_SHOW_USER_KEYBINDINGS = 'keybindings.editor.showUserKeybindings';\nconst KEYBINDINGS_EDITOR_SHOW_EXTENSION_KEYBINDINGS = 'keybindings.editor.showExtensionKeybindings';\nconst MODIFIED_SETTING_TAG = 'modified';\nconst EXTENSION_SETTING_TAG = 'ext:';\nconst FEATURE_SETTING_TAG = 'feature:';\nconst ID_SETTING_TAG = 'id:';\nconst LANGUAGE_SETTING_TAG = 'lang:';\nconst GENERAL_TAG_SETTING_TAG = 'tag:';\nconst POLICY_SETTING_TAG = 'hasPolicy';\nconst WORKSPACE_TRUST_SETTING_TAG = 'workspaceTrust';\nconst REQUIRE_TRUSTED_WORKSPACE_SETTING_TAG = 'requireTrustedWorkspace';\nlet cachedExtensionToggleData;\nasync function getExperimentalExtensionToggleData(workbenchAssignmentService, environmentService, productService) {\n    if (cachedExtensionToggleData) {\n        return cachedExtensionToggleData;\n    }\n    const isTreatment = await workbenchAssignmentService.getTreatment('ExtensionToggleSettings');\n    if ((isTreatment || !environmentService.isBuilt) && productService.extensionRecommendations && productService.commonlyUsedSettings) {\n        const settingsEditorRecommendedExtensions = {};\n        ( Object.keys(productService.extensionRecommendations)).forEach(extensionId => {\n            const extensionInfo = productService.extensionRecommendations[extensionId];\n            if (extensionInfo.onSettingsEditorOpen) {\n                settingsEditorRecommendedExtensions[extensionId] = extensionInfo;\n            }\n        });\n        cachedExtensionToggleData = {\n            settingsEditorRecommendedExtensions,\n            commonlyUsed: productService.commonlyUsedSettings\n        };\n        return cachedExtensionToggleData;\n    }\n    return undefined;\n}\nexport { CONTEXT_KEYBINDINGS_EDITOR, CONTEXT_KEYBINDINGS_SEARCH_FOCUS, CONTEXT_KEYBINDING_FOCUS, CONTEXT_SETTINGS_EDITOR, CONTEXT_SETTINGS_JSON_EDITOR, CONTEXT_SETTINGS_ROW_FOCUS, CONTEXT_SETTINGS_SEARCH_FOCUS, CONTEXT_TOC_ROW_FOCUS, CONTEXT_WHEN_FOCUS, EXTENSION_SETTING_TAG, FEATURE_SETTING_TAG, GENERAL_TAG_SETTING_TAG, ID_SETTING_TAG, IPreferencesSearchService, KEYBINDINGS_EDITOR_COMMAND_ACCEPT_WHEN, KEYBINDINGS_EDITOR_COMMAND_ADD, KEYBINDINGS_EDITOR_COMMAND_CLEAR_SEARCH_HISTORY, KEYBINDINGS_EDITOR_COMMAND_CLEAR_SEARCH_RESULTS, KEYBINDINGS_EDITOR_COMMAND_COPY, KEYBINDINGS_EDITOR_COMMAND_COPY_COMMAND, KEYBINDINGS_EDITOR_COMMAND_COPY_COMMAND_TITLE, KEYBINDINGS_EDITOR_COMMAND_DEFINE, KEYBINDINGS_EDITOR_COMMAND_DEFINE_WHEN, KEYBINDINGS_EDITOR_COMMAND_FOCUS_KEYBINDINGS, KEYBINDINGS_EDITOR_COMMAND_RECORD_SEARCH_KEYS, KEYBINDINGS_EDITOR_COMMAND_REJECT_WHEN, KEYBINDINGS_EDITOR_COMMAND_REMOVE, KEYBINDINGS_EDITOR_COMMAND_RESET, KEYBINDINGS_EDITOR_COMMAND_SEARCH, KEYBINDINGS_EDITOR_COMMAND_SHOW_SIMILAR, KEYBINDINGS_EDITOR_COMMAND_SORTBY_PRECEDENCE, KEYBINDINGS_EDITOR_SHOW_DEFAULT_KEYBINDINGS, KEYBINDINGS_EDITOR_SHOW_EXTENSION_KEYBINDINGS, KEYBINDINGS_EDITOR_SHOW_USER_KEYBINDINGS, LANGUAGE_SETTING_TAG, MODIFIED_SETTING_TAG, POLICY_SETTING_TAG, REQUIRE_TRUSTED_WORKSPACE_SETTING_TAG, SETTINGS_EDITOR_COMMAND_CLEAR_SEARCH_RESULTS, SETTINGS_EDITOR_COMMAND_SHOW_CONTEXT_MENU, SETTINGS_EDITOR_COMMAND_SUGGEST_FILTERS, WORKSPACE_TRUST_SETTING_TAG, getExperimentalExtensionToggleData };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { registerIcon } from 'monaco-editor/esm/vs/platform/theme/common/iconRegistry.js';\nconst IUserDataSyncWorkbenchService = ( createDecorator('IUserDataSyncWorkbenchService'));\nregisterIcon('settings-sync-view-icon', Codicon.sync, ( localize('syncViewIcon', 'View icon of the Settings Sync view.')));\nexport { IUserDataSyncWorkbenchService };\n", "import { distinct } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { Extensions } from 'monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nfunction getDisallowedIgnoredSettings() {\n    const allSettings = ( Registry.as(Extensions.Configuration)).getConfigurationProperties();\n    return ( Object.keys(allSettings)).filter(setting => !!allSettings[setting].disallowSyncIgnore);\n}\nfunction getDefaultIgnoredSettings() {\n    const allSettings = ( Registry.as(Extensions.Configuration)).getConfigurationProperties();\n    const ignoreSyncSettings = ( Object.keys(allSettings)).filter(setting => !!allSettings[setting].ignoreSync);\n    const machineSettings = ( Object.keys(allSettings)).filter(setting => allSettings[setting].scope === 2  || allSettings[setting].scope === 6 );\n    const disallowedSettings = getDisallowedIgnoredSettings();\n    return distinct([...ignoreSyncSettings, ...machineSettings, ...disallowedSettings]);\n}\nconst IUserDataSyncEnablementService = ( createDecorator('IUserDataSyncEnablementService'));\nconst IUserDataSyncService = ( createDecorator('IUserDataSyncService'));\nexport { IUserDataSyncEnablementService, IUserDataSyncService, getDefaultIgnoredSettings, getDisallowedIgnoredSettings };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { Queue } from 'monaco-editor/esm/vs/base/common/async.js';\nimport * as json from 'monaco-editor/esm/vs/base/common/json.js';\nimport * as objects from 'monaco-editor/esm/vs/base/common/objects.js';\nimport { setProperty } from '../../../../base/common/jsonEdit.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { EditOperation } from 'monaco-editor/esm/vs/editor/common/core/editOperation.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { Selection } from 'monaco-editor/esm/vs/editor/common/core/selection.js';\nimport { ITextModelService } from 'monaco-editor/esm/vs/editor/common/services/resolverService.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ITextFileService } from '../../textfile/common/textfiles.js';\nimport { IUserDataProfileService } from '../../userDataProfile/common/userDataProfile.js';\nconst IKeybindingEditingService = ( createDecorator('keybindingEditingService'));\nlet KeybindingsEditingService = class KeybindingsEditingService extends Disposable {\n    constructor(textModelResolverService, textFileService, fileService, configurationService, userDataProfileService) {\n        super();\n        this.textModelResolverService = textModelResolverService;\n        this.textFileService = textFileService;\n        this.fileService = fileService;\n        this.configurationService = configurationService;\n        this.userDataProfileService = userDataProfileService;\n        this.queue = ( new Queue());\n    }\n    addKeybinding(keybindingItem, key, when) {\n        return this.queue.queue(() => this.doEditKeybinding(keybindingItem, key, when, true));\n    }\n    editKeybinding(keybindingItem, key, when) {\n        return this.queue.queue(() => this.doEditKeybinding(keybindingItem, key, when, false));\n    }\n    resetKeybinding(keybindingItem) {\n        return this.queue.queue(() => this.doResetKeybinding(keybindingItem));\n    }\n    removeKeybinding(keybindingItem) {\n        return this.queue.queue(() => this.doRemoveKeybinding(keybindingItem));\n    }\n    async doEditKeybinding(keybindingItem, key, when, add) {\n        const reference = await this.resolveAndValidate();\n        const model = reference.object.textEditorModel;\n        if (add) {\n            this.updateKeybinding(keybindingItem, key, when, model, -1);\n        }\n        else {\n            const userKeybindingEntries = json.parse(model.getValue());\n            const userKeybindingEntryIndex = this.findUserKeybindingEntryIndex(keybindingItem, userKeybindingEntries);\n            this.updateKeybinding(keybindingItem, key, when, model, userKeybindingEntryIndex);\n            if (keybindingItem.isDefault && keybindingItem.resolvedKeybinding) {\n                this.removeDefaultKeybinding(keybindingItem, model);\n            }\n        }\n        try {\n            await this.save();\n        }\n        finally {\n            reference.dispose();\n        }\n    }\n    doRemoveKeybinding(keybindingItem) {\n        return this.resolveAndValidate()\n            .then(reference => {\n            const model = reference.object.textEditorModel;\n            if (keybindingItem.isDefault) {\n                this.removeDefaultKeybinding(keybindingItem, model);\n            }\n            else {\n                this.removeUserKeybinding(keybindingItem, model);\n            }\n            return this.save().finally(() => reference.dispose());\n        });\n    }\n    doResetKeybinding(keybindingItem) {\n        return this.resolveAndValidate()\n            .then(reference => {\n            const model = reference.object.textEditorModel;\n            if (!keybindingItem.isDefault) {\n                this.removeUserKeybinding(keybindingItem, model);\n                this.removeUnassignedDefaultKeybinding(keybindingItem, model);\n            }\n            return this.save().finally(() => reference.dispose());\n        });\n    }\n    save() {\n        return this.textFileService.save(this.userDataProfileService.currentProfile.keybindingsResource);\n    }\n    updateKeybinding(keybindingItem, newKey, when, model, userKeybindingEntryIndex) {\n        const { tabSize, insertSpaces } = model.getOptions();\n        const eol = model.getEOL();\n        if (userKeybindingEntryIndex !== -1) {\n            this.applyEditsToBuffer(setProperty(model.getValue(), [userKeybindingEntryIndex, 'key'], newKey, { tabSize, insertSpaces, eol })[0], model);\n            const edits = setProperty(model.getValue(), [userKeybindingEntryIndex, 'when'], when, { tabSize, insertSpaces, eol });\n            if (edits.length > 0) {\n                this.applyEditsToBuffer(edits[0], model);\n            }\n        }\n        else {\n            this.applyEditsToBuffer(setProperty(model.getValue(), [-1], this.asObject(newKey, keybindingItem.command, when, false), { tabSize, insertSpaces, eol })[0], model);\n        }\n    }\n    removeUserKeybinding(keybindingItem, model) {\n        const { tabSize, insertSpaces } = model.getOptions();\n        const eol = model.getEOL();\n        const userKeybindingEntries = json.parse(model.getValue());\n        const userKeybindingEntryIndex = this.findUserKeybindingEntryIndex(keybindingItem, userKeybindingEntries);\n        if (userKeybindingEntryIndex !== -1) {\n            this.applyEditsToBuffer(setProperty(model.getValue(), [userKeybindingEntryIndex], undefined, { tabSize, insertSpaces, eol })[0], model);\n        }\n    }\n    removeDefaultKeybinding(keybindingItem, model) {\n        const { tabSize, insertSpaces } = model.getOptions();\n        const eol = model.getEOL();\n        const key = keybindingItem.resolvedKeybinding ? keybindingItem.resolvedKeybinding.getUserSettingsLabel() : null;\n        if (key) {\n            const entry = this.asObject(key, keybindingItem.command, keybindingItem.when ? keybindingItem.when.serialize() : undefined, true);\n            const userKeybindingEntries = json.parse(model.getValue());\n            if (userKeybindingEntries.every(e => !this.areSame(e, entry))) {\n                this.applyEditsToBuffer(setProperty(model.getValue(), [-1], entry, { tabSize, insertSpaces, eol })[0], model);\n            }\n        }\n    }\n    removeUnassignedDefaultKeybinding(keybindingItem, model) {\n        const { tabSize, insertSpaces } = model.getOptions();\n        const eol = model.getEOL();\n        const userKeybindingEntries = json.parse(model.getValue());\n        const indices = this.findUnassignedDefaultKeybindingEntryIndex(keybindingItem, userKeybindingEntries).reverse();\n        for (const index of indices) {\n            this.applyEditsToBuffer(setProperty(model.getValue(), [index], undefined, { tabSize, insertSpaces, eol })[0], model);\n        }\n    }\n    findUserKeybindingEntryIndex(keybindingItem, userKeybindingEntries) {\n        for (let index = 0; index < userKeybindingEntries.length; index++) {\n            const keybinding = userKeybindingEntries[index];\n            if (keybinding.command === keybindingItem.command) {\n                if (!keybinding.when && !keybindingItem.when) {\n                    return index;\n                }\n                if (keybinding.when && keybindingItem.when) {\n                    const contextKeyExpr = ContextKeyExpr.deserialize(keybinding.when);\n                    if (contextKeyExpr && contextKeyExpr.serialize() === keybindingItem.when.serialize()) {\n                        return index;\n                    }\n                }\n            }\n        }\n        return -1;\n    }\n    findUnassignedDefaultKeybindingEntryIndex(keybindingItem, userKeybindingEntries) {\n        const indices = [];\n        for (let index = 0; index < userKeybindingEntries.length; index++) {\n            if (userKeybindingEntries[index].command === `-${keybindingItem.command}`) {\n                indices.push(index);\n            }\n        }\n        return indices;\n    }\n    asObject(key, command, when, negate) {\n        const object = { key };\n        if (command) {\n            object['command'] = negate ? `-${command}` : command;\n        }\n        if (when) {\n            object['when'] = when;\n        }\n        return object;\n    }\n    areSame(a, b) {\n        if (a.command !== b.command) {\n            return false;\n        }\n        if (a.key !== b.key) {\n            return false;\n        }\n        const whenA = ContextKeyExpr.deserialize(a.when);\n        const whenB = ContextKeyExpr.deserialize(b.when);\n        if ((whenA && !whenB) || (!whenA && whenB)) {\n            return false;\n        }\n        if (whenA && whenB && !whenA.equals(whenB)) {\n            return false;\n        }\n        if (!objects.equals(a.args, b.args)) {\n            return false;\n        }\n        return true;\n    }\n    applyEditsToBuffer(edit, model) {\n        const startPosition = model.getPositionAt(edit.offset);\n        const endPosition = model.getPositionAt(edit.offset + edit.length);\n        const range = ( new Range(\n            startPosition.lineNumber,\n            startPosition.column,\n            endPosition.lineNumber,\n            endPosition.column\n        ));\n        const currentText = model.getValueInRange(range);\n        const editOperation = currentText ? EditOperation.replace(range, edit.content) : EditOperation.insert(startPosition, edit.content);\n        model.pushEditOperations([( new Selection(\n            startPosition.lineNumber,\n            startPosition.column,\n            startPosition.lineNumber,\n            startPosition.column\n        ))], [editOperation], () => []);\n    }\n    resolveModelReference() {\n        return this.fileService.exists(this.userDataProfileService.currentProfile.keybindingsResource)\n            .then(exists => {\n            const EOL = this.configurationService.getValue('files', { overrideIdentifier: 'json' })['eol'];\n            const result = exists ? Promise.resolve(null) : this.textFileService.write(this.userDataProfileService.currentProfile.keybindingsResource, this.getEmptyContent(EOL), { encoding: 'utf8' });\n            return result.then(() => this.textModelResolverService.createModelReference(this.userDataProfileService.currentProfile.keybindingsResource));\n        });\n    }\n    resolveAndValidate() {\n        if (this.textFileService.isDirty(this.userDataProfileService.currentProfile.keybindingsResource)) {\n            return Promise.reject(( new Error(( localize(\n                'errorKeybindingsFileDirty',\n                \"Unable to write because the keybindings configuration file has unsaved changes. Please save it first and then try again.\"\n            )))));\n        }\n        return this.resolveModelReference()\n            .then(reference => {\n            const model = reference.object.textEditorModel;\n            const EOL = model.getEOL();\n            if (model.getValue()) {\n                const parsed = this.parse(model);\n                if (parsed.parseErrors.length) {\n                    reference.dispose();\n                    return Promise.reject(( new Error(( localize(\n                        'parseErrors',\n                        \"Unable to write to the keybindings configuration file. Please open it to correct errors/warnings in the file and try again.\"\n                    )))));\n                }\n                if (parsed.result) {\n                    if (!Array.isArray(parsed.result)) {\n                        reference.dispose();\n                        return Promise.reject(( new Error(( localize(\n                            'errorInvalidConfiguration',\n                            \"Unable to write to the keybindings configuration file. It has an object which is not of type Array. Please open the file to clean up and try again.\"\n                        )))));\n                    }\n                }\n                else {\n                    const content = EOL + '[]';\n                    this.applyEditsToBuffer({ content, length: content.length, offset: model.getValue().length }, model);\n                }\n            }\n            else {\n                const content = this.getEmptyContent(EOL);\n                this.applyEditsToBuffer({ content, length: content.length, offset: 0 }, model);\n            }\n            return reference;\n        });\n    }\n    parse(model) {\n        const parseErrors = [];\n        const result = json.parse(model.getValue(), parseErrors, { allowTrailingComma: true, allowEmptyContent: true });\n        return { result, parseErrors };\n    }\n    getEmptyContent(EOL) {\n        return '// ' + ( localize(\n            'emptyKeybindingsHeader',\n            \"Place your key bindings in this file to override the defaults\"\n        )) + EOL + '[]';\n    }\n};\nKeybindingsEditingService = ( __decorate([\n    ( __param(0, ITextModelService)),\n    ( __param(1, ITextFileService)),\n    ( __param(2, IFileService)),\n    ( __param(3, IConfigurationService)),\n    ( __param(4, IUserDataProfileService))\n], KeybindingsEditingService));\nexport { IKeybindingEditingService, KeybindingsEditingService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst INotebookService = ( createDecorator('notebookService'));\nclass SimpleNotebookProviderInfo {\n    constructor(viewType, serializer, extensionData) {\n        this.viewType = viewType;\n        this.serializer = serializer;\n        this.extensionData = extensionData;\n    }\n}\nexport { INotebookService, SimpleNotebookProviderInfo };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { isEmptyObject } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nvar SearchHistoryService_1;\nconst ISearchHistoryService = ( createDecorator('searchHistoryService'));\nlet SearchHistoryService = class SearchHistoryService {\n    static { SearchHistoryService_1 = this; }\n    static { this.SEARCH_HISTORY_KEY = 'workbench.search.history'; }\n    constructor(storageService) {\n        this.storageService = storageService;\n        this._onDidClearHistory = ( new Emitter());\n        this.onDidClearHistory = this._onDidClearHistory.event;\n    }\n    clearHistory() {\n        this.storageService.remove(SearchHistoryService_1.SEARCH_HISTORY_KEY, 1 );\n        this._onDidClearHistory.fire();\n    }\n    load() {\n        let result;\n        const raw = this.storageService.get(SearchHistoryService_1.SEARCH_HISTORY_KEY, 1 );\n        if (raw) {\n            try {\n                result = JSON.parse(raw);\n            }\n            catch (e) {\n            }\n        }\n        return result || {};\n    }\n    save(history) {\n        if (isEmptyObject(history)) {\n            this.storageService.remove(SearchHistoryService_1.SEARCH_HISTORY_KEY, 1 );\n        }\n        else {\n            this.storageService.store(SearchHistoryService_1.SEARCH_HISTORY_KEY, JSON.stringify(history), 1 , 0 );\n        }\n    }\n};\nSearchHistoryService = SearchHistoryService_1 = ( __decorate([\n    ( __param(0, IStorageService))\n], SearchHistoryService));\nexport { ISearchHistoryService, SearchHistoryService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IReplaceService = ( createDecorator('replaceService'));\nexport { IReplaceService };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { RunOnceScheduler } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { comparePaths, compareFileNames, compareFileExtensions } from 'monaco-editor/esm/vs/base/common/comparers.js';\nimport { memoize } from 'monaco-editor/esm/vs/base/common/decorators.js';\nimport * as errors from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { Emitter, PauseableEmitter, Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Lazy } from 'monaco-editor/esm/vs/base/common/lazy.js';\nimport { Disposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { ResourceMap } from 'monaco-editor/esm/vs/base/common/map.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { lcut } from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { TernarySearchTree } from 'monaco-editor/esm/vs/base/common/ternarySearchTree.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { OverviewRulerLane, MinimapPosition, FindMatch } from 'monaco-editor/esm/vs/editor/common/model.js';\nimport { ModelDecorationOptions } from 'monaco-editor/esm/vs/editor/common/model/textModel.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { createDecorator, IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { overviewRulerFindMatchForeground, minimapFindMatch } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { FindMatchDecorationModel } from '../../../../../../../override/vs/workbench/contrib/notebook/browser/contrib/find/findMatchDecorationModel.js';\nimport { NotebookEditorWidget } from '../../../../../../../override/vs/workbench/contrib/notebook/browser/notebookEditorWidget.js';\nimport { INotebookEditorService } from '../../notebook/browser/services/notebookEditorService.js';\nimport { NotebookCellsChangeType } from '../../notebook/common/notebookCommon.js';\nimport { IReplaceService } from './replace.js';\nimport { isIFileMatchWithCells, rawCellPrefix, contentMatchesToTextSearchMatches, webviewMatchesToTextSearchMatches, CellSearchModel } from './searchNotebookHelpers.js';\nimport { INotebookSearchService } from '../common/notebookSearch.js';\nimport { ReplacePattern } from '../../../services/search/common/replace.js';\nimport { OneLineRange, resultIsMatch, ISearchService } from '../../../services/search/common/search.js';\nimport { editorMatchesToTextSearchResults, addContextToEditorMatches } from '../../../services/search/common/searchHelpers.js';\nvar FileMatch_1, FolderMatch_1, RangeHighlightDecorations_1;\nclass Match {\n    static { this.MAX_PREVIEW_CHARS = 250; }\n    constructor(_parent, _fullPreviewLines, _fullPreviewRange, _documentRange) {\n        this._parent = _parent;\n        this._fullPreviewLines = _fullPreviewLines;\n        this._oneLinePreviewText = _fullPreviewLines[_fullPreviewRange.startLineNumber];\n        const adjustedEndCol = _fullPreviewRange.startLineNumber === _fullPreviewRange.endLineNumber ?\n            _fullPreviewRange.endColumn :\n            this._oneLinePreviewText.length;\n        this._rangeInPreviewText = ( new OneLineRange(1, _fullPreviewRange.startColumn + 1, adjustedEndCol + 1));\n        this._range = ( new Range(\n            _documentRange.startLineNumber + 1,\n            _documentRange.startColumn + 1,\n            _documentRange.endLineNumber + 1,\n            _documentRange.endColumn + 1\n        ));\n        this._fullPreviewRange = _fullPreviewRange;\n        this._id = this._parent.id() + '>' + this._range + this.getMatchString();\n    }\n    id() {\n        return this._id;\n    }\n    parent() {\n        return this._parent;\n    }\n    text() {\n        return this._oneLinePreviewText;\n    }\n    range() {\n        return this._range;\n    }\n    preview() {\n        let before = this._oneLinePreviewText.substring(0, this._rangeInPreviewText.startColumn - 1), inside = this.getMatchString(), after = this._oneLinePreviewText.substring(this._rangeInPreviewText.endColumn - 1);\n        before = lcut(before, 26);\n        before = before.trimStart();\n        let charsRemaining = Match.MAX_PREVIEW_CHARS - before.length;\n        inside = inside.substr(0, charsRemaining);\n        charsRemaining -= inside.length;\n        after = after.substr(0, charsRemaining);\n        return {\n            before,\n            inside,\n            after,\n        };\n    }\n    get replaceString() {\n        const searchModel = this.parent().parent().searchModel;\n        if (!searchModel.replacePattern) {\n            throw new Error('searchModel.replacePattern must be set before accessing replaceString');\n        }\n        const fullMatchText = this.fullMatchText();\n        let replaceString = searchModel.replacePattern.getReplaceString(fullMatchText, searchModel.preserveCase);\n        if (replaceString !== null) {\n            return replaceString;\n        }\n        const fullMatchTextWithoutCR = fullMatchText.replace(/\\r\\n/g, '\\n');\n        if (fullMatchTextWithoutCR !== fullMatchText) {\n            replaceString = searchModel.replacePattern.getReplaceString(fullMatchTextWithoutCR, searchModel.preserveCase);\n            if (replaceString !== null) {\n                return replaceString;\n            }\n        }\n        const contextMatchTextWithSurroundingContent = this.fullMatchText(true);\n        replaceString = searchModel.replacePattern.getReplaceString(contextMatchTextWithSurroundingContent, searchModel.preserveCase);\n        if (replaceString !== null) {\n            return replaceString;\n        }\n        const contextMatchTextWithoutCR = contextMatchTextWithSurroundingContent.replace(/\\r\\n/g, '\\n');\n        if (contextMatchTextWithoutCR !== contextMatchTextWithSurroundingContent) {\n            replaceString = searchModel.replacePattern.getReplaceString(contextMatchTextWithoutCR, searchModel.preserveCase);\n            if (replaceString !== null) {\n                return replaceString;\n            }\n        }\n        return searchModel.replacePattern.pattern;\n    }\n    fullMatchText(includeSurrounding = false) {\n        let thisMatchPreviewLines;\n        if (includeSurrounding) {\n            thisMatchPreviewLines = this._fullPreviewLines;\n        }\n        else {\n            thisMatchPreviewLines = this._fullPreviewLines.slice(this._fullPreviewRange.startLineNumber, this._fullPreviewRange.endLineNumber + 1);\n            thisMatchPreviewLines[thisMatchPreviewLines.length - 1] = thisMatchPreviewLines[thisMatchPreviewLines.length - 1].slice(0, this._fullPreviewRange.endColumn);\n            thisMatchPreviewLines[0] = thisMatchPreviewLines[0].slice(this._fullPreviewRange.startColumn);\n        }\n        return thisMatchPreviewLines.join('\\n');\n    }\n    rangeInPreview() {\n        return {\n            ...this._fullPreviewRange,\n            startColumn: this._fullPreviewRange.startColumn + 1,\n            endColumn: this._fullPreviewRange.endColumn + 1\n        };\n    }\n    fullPreviewLines() {\n        return this._fullPreviewLines.slice(this._fullPreviewRange.startLineNumber, this._fullPreviewRange.endLineNumber + 1);\n    }\n    getMatchString() {\n        return this._oneLinePreviewText.substring(this._rangeInPreviewText.startColumn - 1, this._rangeInPreviewText.endColumn - 1);\n    }\n}\nMatch.__decorator = ( __decorate([\n    memoize\n], Match.prototype, \"preview\", null));\nclass CellMatch {\n    constructor(_parent, _cell, _cellIndex) {\n        this._parent = _parent;\n        this._cell = _cell;\n        this._cellIndex = _cellIndex;\n        this._contentMatches = ( new Map());\n        this._webviewMatches = ( new Map());\n        this._context = ( new Map());\n    }\n    get context() {\n        return ( new Map(this._context));\n    }\n    matches() {\n        return [...( this._contentMatches.values()), ...( this._webviewMatches.values())];\n    }\n    get contentMatches() {\n        return Array.from(( this._contentMatches.values()));\n    }\n    get webviewMatches() {\n        return Array.from(( this._webviewMatches.values()));\n    }\n    remove(matches) {\n        if (!Array.isArray(matches)) {\n            matches = [matches];\n        }\n        for (const match of matches) {\n            this._contentMatches.delete(match.id());\n            this._webviewMatches.delete(match.id());\n        }\n    }\n    clearAllMatches() {\n        this._contentMatches.clear();\n        this._webviewMatches.clear();\n    }\n    addContentMatches(textSearchMatches) {\n        const contentMatches = textSearchMatchesToNotebookMatches();\n        contentMatches.forEach((match) => {\n            this._contentMatches.set(match.id(), match);\n        });\n        this.addContext(textSearchMatches);\n    }\n    addContext(textSearchMatches) {\n        if (this.cell instanceof CellSearchModel) {\n            return;\n        }\n        this.cell.resolveTextModel().then((textModel) => {\n            const textResultsWithContext = addContextToEditorMatches(textSearchMatches, textModel, this.parent.parent().query);\n            const contexts = textResultsWithContext.filter((result => !resultIsMatch(result)));\n            ( contexts.map(context => ({ ...context, lineNumber: context.lineNumber + 1 })))\n                .forEach((context) => { this._context.set(context.lineNumber, context.text); });\n        });\n    }\n    addWebviewMatches(textSearchMatches) {\n        const webviewMatches = textSearchMatchesToNotebookMatches();\n        webviewMatches.forEach((match) => {\n            this._webviewMatches.set(match.id(), match);\n        });\n    }\n    setCellModel(cell) {\n        this._cell = cell;\n    }\n    get parent() {\n        return this._parent;\n    }\n    get id() {\n        return this._cell.id;\n    }\n    get cellIndex() {\n        return this._cellIndex;\n    }\n    get cell() {\n        return this._cell;\n    }\n}\nclass MatchInNotebook extends Match {\n    constructor(_cellParent, _fullPreviewLines, _fullPreviewRange, _documentRange, webviewIndex) {\n        super(_cellParent.parent, _fullPreviewLines, _fullPreviewRange, _documentRange);\n        this._cellParent = _cellParent;\n        this._id = this._parent.id() + '>' + this._cellParent.cellIndex + (webviewIndex ? '_' + webviewIndex : '') + '_' + this.notebookMatchTypeString() + this._range + this.getMatchString();\n        this._webviewIndex = webviewIndex;\n    }\n    parent() {\n        return this._cellParent.parent;\n    }\n    get cellParent() {\n        return this._cellParent;\n    }\n    notebookMatchTypeString() {\n        return this.isWebviewMatch() ? 'webview' : 'content';\n    }\n    isWebviewMatch() {\n        return this._webviewIndex !== undefined;\n    }\n    get cellIndex() {\n        return this._cellParent.cellIndex;\n    }\n    get webviewIndex() {\n        return this._webviewIndex;\n    }\n    get cell() {\n        return this._cellParent.cell;\n    }\n}\nlet FileMatch = class FileMatch extends Disposable {\n    static { FileMatch_1 = this; }\n    static { this._CURRENT_FIND_MATCH = ModelDecorationOptions.register({\n        description: 'search-current-find-match',\n        stickiness: 1 ,\n        zIndex: 13,\n        className: 'currentFindMatch',\n        overviewRuler: {\n            color: themeColorFromId(overviewRulerFindMatchForeground),\n            position: OverviewRulerLane.Center\n        },\n        minimap: {\n            color: themeColorFromId(minimapFindMatch),\n            position: MinimapPosition.Inline\n        }\n    }); }\n    static { this._FIND_MATCH = ModelDecorationOptions.register({\n        description: 'search-find-match',\n        stickiness: 1 ,\n        className: 'findMatch',\n        overviewRuler: {\n            color: themeColorFromId(overviewRulerFindMatchForeground),\n            position: OverviewRulerLane.Center\n        },\n        minimap: {\n            color: themeColorFromId(minimapFindMatch),\n            position: MinimapPosition.Inline\n        }\n    }); }\n    static getDecorationOption(selected) {\n        return (selected ? FileMatch_1._CURRENT_FIND_MATCH : FileMatch_1._FIND_MATCH);\n    }\n    get context() {\n        return ( new Map(this._context));\n    }\n    get cellContext() {\n        const cellContext = ( new Map());\n        this._cellMatches.forEach(cellMatch => {\n            cellContext.set(cellMatch.id, cellMatch.context);\n        });\n        return cellContext;\n    }\n    constructor(_query, _previewOptions, _maxResults, _parent, rawMatch, _closestRoot, searchInstanceID, modelService, replaceService, labelService, notebookEditorService) {\n        super();\n        this._query = _query;\n        this._previewOptions = _previewOptions;\n        this._maxResults = _maxResults;\n        this._parent = _parent;\n        this.rawMatch = rawMatch;\n        this._closestRoot = _closestRoot;\n        this.searchInstanceID = searchInstanceID;\n        this.modelService = modelService;\n        this.replaceService = replaceService;\n        this.labelService = labelService;\n        this.notebookEditorService = notebookEditorService;\n        this._onChange = this._register(( new Emitter()));\n        this.onChange = this._onChange.event;\n        this._onDispose = this._register(( new Emitter()));\n        this.onDispose = this._onDispose.event;\n        this._model = null;\n        this._modelListener = null;\n        this._selectedMatch = null;\n        this._modelDecorations = [];\n        this._context = ( new Map());\n        this._notebookEditorWidget = null;\n        this._editorWidgetListener = null;\n        this.replaceQ = Promise.resolve();\n        this._resource = this.rawMatch.resource;\n        this._textMatches = ( new Map());\n        this._removedTextMatches = ( new Set());\n        this._updateScheduler = ( new RunOnceScheduler(this.updateMatchesForModel.bind(this), 250));\n        this._name = ( new Lazy(() => labelService.getUriBasenameLabel(this.resource)));\n        this._cellMatches = ( new Map());\n        this._notebookUpdateScheduler = ( new RunOnceScheduler(this.updateMatchesForEditorWidget.bind(this), 250));\n        this.createMatches();\n    }\n    addWebviewMatchesToCell(cellID, webviewMatches) {\n        const cellMatch = this.getCellMatch(cellID);\n        if (cellMatch !== undefined) {\n            cellMatch.addWebviewMatches(webviewMatches);\n        }\n    }\n    addContentMatchesToCell(cellID, contentMatches) {\n        const cellMatch = this.getCellMatch(cellID);\n        if (cellMatch !== undefined) {\n            cellMatch.addContentMatches(contentMatches);\n        }\n    }\n    getCellMatch(cellID) {\n        return this._cellMatches.get(cellID);\n    }\n    addCellMatch(rawCell) {\n        const cellMatch = ( new CellMatch(this, rawCell.cell, rawCell.index));\n        this._cellMatches.set(cellMatch.id, cellMatch);\n        this.addWebviewMatchesToCell(rawCell.cell.id, rawCell.webviewResults);\n        this.addContentMatchesToCell(rawCell.cell.id, rawCell.contentResults);\n    }\n    get closestRoot() {\n        return this._closestRoot;\n    }\n    hasWebviewMatches() {\n        return ( this.matches().some(m => m instanceof MatchInNotebook && m.isWebviewMatch()));\n    }\n    createMatches() {\n        const model = this.modelService.getModel(this._resource);\n        if (model) {\n            this.bindModel(model);\n            this.updateMatchesForModel();\n        }\n        else {\n            const notebookEditorWidgetBorrow = this.notebookEditorService.retrieveExistingWidgetFromURI(this.resource);\n            if (notebookEditorWidgetBorrow?.value) {\n                this.bindNotebookEditorWidget(notebookEditorWidgetBorrow.value);\n            }\n            if (this.rawMatch.results) {\n                this.rawMatch.results\n                    .filter(resultIsMatch)\n                    .forEach(rawMatch => {\n                    textSearchResultToMatches(rawMatch, this)\n                        .forEach(m => this.add(m));\n                });\n            }\n            if (isIFileMatchWithCells(this.rawMatch)) {\n                this.rawMatch.cellResults?.forEach(cell => this.addCellMatch(cell));\n                this.setNotebookFindMatchDecorationsUsingCellMatches(this.cellMatches());\n                this._onChange.fire({ forceUpdateModel: true });\n            }\n            this.addContext(this.rawMatch.results);\n        }\n    }\n    bindModel(model) {\n        this._model = model;\n        this._modelListener = this._model.onDidChangeContent(() => {\n            this._updateScheduler.schedule();\n        });\n        this._model.onWillDispose(() => this.onModelWillDispose());\n        this.updateHighlights();\n    }\n    onModelWillDispose() {\n        this.updateMatchesForModel();\n        this.unbindModel();\n    }\n    unbindModel() {\n        if (this._model) {\n            this._updateScheduler.cancel();\n            this._model.changeDecorations((accessor) => {\n                this._modelDecorations = accessor.deltaDecorations(this._modelDecorations, []);\n            });\n            this._model = null;\n            this._modelListener.dispose();\n        }\n    }\n    updateMatchesForModel() {\n        if (!this._model) {\n            return;\n        }\n        this._textMatches = ( new Map());\n        const wordSeparators = this._query.isWordMatch && this._query.wordSeparators ? this._query.wordSeparators : null;\n        const matches = this._model\n            .findMatches(this._query.pattern, this._model.getFullModelRange(), !!this._query.isRegExp, !!this._query.isCaseSensitive, wordSeparators, false, this._maxResults ?? Number.MAX_SAFE_INTEGER);\n        this.updateMatches(matches, true, this._model);\n    }\n    async updatesMatchesForLineAfterReplace(lineNumber, modelChange) {\n        if (!this._model) {\n            return;\n        }\n        const range = {\n            startLineNumber: lineNumber,\n            startColumn: this._model.getLineMinColumn(lineNumber),\n            endLineNumber: lineNumber,\n            endColumn: this._model.getLineMaxColumn(lineNumber)\n        };\n        const oldMatches = Array.from(( this._textMatches.values())).filter(match => match.range().startLineNumber === lineNumber);\n        oldMatches.forEach(match => this._textMatches.delete(match.id()));\n        const wordSeparators = this._query.isWordMatch && this._query.wordSeparators ? this._query.wordSeparators : null;\n        const matches = this._model.findMatches(this._query.pattern, range, !!this._query.isRegExp, !!this._query.isCaseSensitive, wordSeparators, false, this._maxResults ?? Number.MAX_SAFE_INTEGER);\n        this.updateMatches(matches, modelChange, this._model);\n    }\n    updateMatches(matches, modelChange, model) {\n        const textSearchResults = editorMatchesToTextSearchResults(matches, model, this._previewOptions);\n        textSearchResults.forEach(textSearchResult => {\n            textSearchResultToMatches(textSearchResult, this).forEach(match => {\n                if (!( this._removedTextMatches.has(match.id()))) {\n                    this.add(match);\n                    if (this.isMatchSelected(match)) {\n                        this._selectedMatch = match;\n                    }\n                }\n            });\n        });\n        this.addContext(( addContextToEditorMatches(textSearchResults, model, this.parent().parent().query)\n            .filter((result => !resultIsMatch(result)))\n            .map(context => ({ ...context, lineNumber: context.lineNumber + 1 }))));\n        this._onChange.fire({ forceUpdateModel: modelChange });\n        this.updateHighlights();\n    }\n    updateHighlights() {\n        if (!this._model) {\n            return;\n        }\n        this._model.changeDecorations((accessor) => {\n            const newDecorations = (this.parent().showHighlights\n                ? ( this.matches().map(match => ({\n                    range: match.range(),\n                    options: FileMatch_1.getDecorationOption(this.isMatchSelected(match))\n                })))\n                : []);\n            this._modelDecorations = accessor.deltaDecorations(this._modelDecorations, newDecorations);\n        });\n    }\n    id() {\n        return ( this.resource.toString());\n    }\n    parent() {\n        return this._parent;\n    }\n    matches() {\n        const cellMatches = Array.from(( this._cellMatches.values())).flatMap((e) => e.matches());\n        return [...( this._textMatches.values()), ...cellMatches];\n    }\n    textMatches() {\n        return Array.from(( this._textMatches.values()));\n    }\n    cellMatches() {\n        return Array.from(( this._cellMatches.values()));\n    }\n    remove(matches) {\n        if (!Array.isArray(matches)) {\n            matches = [matches];\n        }\n        for (const match of matches) {\n            this.removeMatch(match);\n            this._removedTextMatches.add(match.id());\n        }\n        this._onChange.fire({ didRemove: true });\n    }\n    async replace(toReplace) {\n        return this.replaceQ = this.replaceQ.finally(async () => {\n            await this.replaceService.replace(toReplace);\n            await this.updatesMatchesForLineAfterReplace(toReplace.range().startLineNumber, false);\n        });\n    }\n    setSelectedMatch(match) {\n        if (match) {\n            if (!this.isMatchSelected(match) && match instanceof MatchInNotebook) {\n                this._selectedMatch = match;\n                return;\n            }\n            if (!( this._textMatches.has(match.id()))) {\n                return;\n            }\n            if (this.isMatchSelected(match)) {\n                return;\n            }\n        }\n        this._selectedMatch = match;\n        this.updateHighlights();\n    }\n    getSelectedMatch() {\n        return this._selectedMatch;\n    }\n    isMatchSelected(match) {\n        return !!this._selectedMatch && this._selectedMatch.id() === match.id();\n    }\n    count() {\n        return this.matches().length;\n    }\n    get resource() {\n        return this._resource;\n    }\n    name() {\n        return this._name.value;\n    }\n    addContext(results) {\n        if (!results) {\n            return;\n        }\n        const contexts = results\n            .filter((result => !resultIsMatch(result)));\n        return contexts.forEach(context => this._context.set(context.lineNumber, context.text));\n    }\n    add(match, trigger) {\n        this._textMatches.set(match.id(), match);\n        if (trigger) {\n            this._onChange.fire({ forceUpdateModel: true });\n        }\n    }\n    removeMatch(match) {\n        if (match instanceof MatchInNotebook) {\n            match.cellParent.remove(match);\n            if (match.cellParent.matches().length === 0) {\n                this._cellMatches.delete(match.cellParent.id);\n            }\n        }\n        else {\n            this._textMatches.delete(match.id());\n        }\n        if (this.isMatchSelected(match)) {\n            this.setSelectedMatch(null);\n            this._findMatchDecorationModel?.clearCurrentFindMatchDecoration();\n        }\n        else {\n            this.updateHighlights();\n        }\n        if (match instanceof MatchInNotebook) {\n            this.setNotebookFindMatchDecorationsUsingCellMatches(this.cellMatches());\n        }\n    }\n    async resolveFileStat(fileService) {\n        this._fileStat = await fileService.stat(this.resource).catch(() => undefined);\n    }\n    get fileStat() {\n        return this._fileStat;\n    }\n    set fileStat(stat) {\n        this._fileStat = stat;\n    }\n    dispose() {\n        this.setSelectedMatch(null);\n        this.unbindModel();\n        this.unbindNotebookEditorWidget();\n        this._onDispose.fire();\n        super.dispose();\n    }\n    hasOnlyReadOnlyMatches() {\n        return this.matches().every(match => (match instanceof MatchInNotebook && match.isWebviewMatch()));\n    }\n    bindNotebookEditorWidget(widget) {\n        if (this._notebookEditorWidget === widget) {\n            return;\n        }\n        this._notebookEditorWidget = widget;\n        this._editorWidgetListener = this._notebookEditorWidget.textModel?.onDidChangeContent((e) => {\n            if (!( e.rawEvents.some(\n                event => event.kind === NotebookCellsChangeType.ChangeCellContent || event.kind === NotebookCellsChangeType.ModelChange\n            ))) {\n                return;\n            }\n            this._notebookUpdateScheduler.schedule();\n        }) ?? null;\n        this._addNotebookHighlights();\n    }\n    unbindNotebookEditorWidget(widget) {\n        if (widget && this._notebookEditorWidget !== widget) {\n            return;\n        }\n        if (this._notebookEditorWidget) {\n            this._notebookUpdateScheduler.cancel();\n            this._editorWidgetListener?.dispose();\n        }\n        this._removeNotebookHighlights();\n        this._notebookEditorWidget = null;\n    }\n    updateNotebookHighlights() {\n        if (this.parent().showHighlights) {\n            this._addNotebookHighlights();\n            this.setNotebookFindMatchDecorationsUsingCellMatches(Array.from(( this._cellMatches.values())));\n        }\n        else {\n            this._removeNotebookHighlights();\n        }\n    }\n    _addNotebookHighlights() {\n        if (!this._notebookEditorWidget) {\n            return;\n        }\n        this._findMatchDecorationModel?.stopWebviewFind();\n        this._findMatchDecorationModel?.dispose();\n        this._findMatchDecorationModel = ( new FindMatchDecorationModel(this._notebookEditorWidget, this.searchInstanceID));\n        if (this._selectedMatch instanceof MatchInNotebook) {\n            this.highlightCurrentFindMatchDecoration(this._selectedMatch);\n        }\n    }\n    _removeNotebookHighlights() {\n        if (this._findMatchDecorationModel) {\n            this._findMatchDecorationModel?.stopWebviewFind();\n            this._findMatchDecorationModel?.dispose();\n            this._findMatchDecorationModel = undefined;\n        }\n    }\n    updateNotebookMatches(matches, modelChange) {\n        if (!this._notebookEditorWidget) {\n            return;\n        }\n        const oldCellMatches = ( new Map(this._cellMatches));\n        if (this._notebookEditorWidget.getId() !== this._lastEditorWidgetIdForUpdate) {\n            this._cellMatches.clear();\n            this._lastEditorWidgetIdForUpdate = this._notebookEditorWidget.getId();\n        }\n        matches.forEach(match => {\n            let existingCell = this._cellMatches.get(match.cell.id);\n            if (this._notebookEditorWidget && !existingCell) {\n                const index = this._notebookEditorWidget.getCellIndex(match.cell);\n                const existingRawCell = oldCellMatches.get(`${rawCellPrefix}${index}`);\n                if (existingRawCell) {\n                    existingRawCell.setCellModel(match.cell);\n                    existingRawCell.clearAllMatches();\n                    existingCell = existingRawCell;\n                }\n            }\n            const cell = existingCell ?? ( new CellMatch(this, match.cell, match.index));\n            cell.addContentMatches(contentMatchesToTextSearchMatches(match.contentMatches, match.cell));\n            cell.addWebviewMatches(webviewMatchesToTextSearchMatches(match.webviewMatches));\n            this._cellMatches.set(cell.id, cell);\n        });\n        this._findMatchDecorationModel?.setAllFindMatchesDecorations(matches);\n        if (this._selectedMatch instanceof MatchInNotebook) {\n            this.highlightCurrentFindMatchDecoration(this._selectedMatch);\n        }\n        this._onChange.fire({ forceUpdateModel: modelChange });\n    }\n    setNotebookFindMatchDecorationsUsingCellMatches(cells) {\n        if (!this._findMatchDecorationModel) {\n            return;\n        }\n        const cellFindMatch = ( cells.map((cell) => {\n            const webviewMatches = ( cell.webviewMatches.map(match => {\n                return {\n                    index: match.webviewIndex,\n                };\n            }));\n            const findMatches = ( cell.contentMatches.map(match => {\n                return ( new FindMatch(match.range(), [match.text()]));\n            }));\n            return {\n                cell: cell.cell,\n                index: cell.cellIndex,\n                contentMatches: findMatches,\n                webviewMatches: webviewMatches\n            };\n        }));\n        try {\n            this._findMatchDecorationModel.setAllFindMatchesDecorations(cellFindMatch);\n        }\n        catch (e) {\n        }\n    }\n    async updateMatchesForEditorWidget() {\n        if (!this._notebookEditorWidget) {\n            return;\n        }\n        this._textMatches = ( new Map());\n        const wordSeparators = this._query.isWordMatch && this._query.wordSeparators ? this._query.wordSeparators : null;\n        const allMatches = await this._notebookEditorWidget\n            .find(this._query.pattern, {\n            regex: this._query.isRegExp,\n            wholeWord: this._query.isWordMatch,\n            caseSensitive: this._query.isCaseSensitive,\n            wordSeparators: wordSeparators ?? undefined,\n            includeMarkupInput: this._query.notebookInfo?.isInNotebookMarkdownInput,\n            includeMarkupPreview: this._query.notebookInfo?.isInNotebookMarkdownPreview,\n            includeCodeInput: this._query.notebookInfo?.isInNotebookCellInput,\n            includeOutput: this._query.notebookInfo?.isInNotebookCellOutput,\n        }, CancellationToken.None, false, true, this.searchInstanceID);\n        this.updateNotebookMatches(allMatches, true);\n    }\n    async showMatch(match) {\n        const offset = await this.highlightCurrentFindMatchDecoration(match);\n        this.setSelectedMatch(match);\n        this.revealCellRange(match, offset);\n    }\n    async highlightCurrentFindMatchDecoration(match) {\n        if (!this._findMatchDecorationModel || match.cell instanceof CellSearchModel) {\n            return null;\n        }\n        if (match.webviewIndex === undefined) {\n            return this._findMatchDecorationModel.highlightCurrentFindMatchDecorationInCell(match.cell, match.range());\n        }\n        else {\n            return this._findMatchDecorationModel.highlightCurrentFindMatchDecorationInWebview(match.cell, match.webviewIndex);\n        }\n    }\n    revealCellRange(match, outputOffset) {\n        if (!this._notebookEditorWidget || match.cell instanceof CellSearchModel) {\n            return;\n        }\n        if (match.webviewIndex !== undefined) {\n            const index = this._notebookEditorWidget.getCellIndex(match.cell);\n            if (index !== undefined) {\n                this._notebookEditorWidget.revealCellOffsetInCenterAsync(match.cell, outputOffset ?? 0);\n            }\n        }\n        else {\n            match.cell.updateEditState(match.cell.getEditState(), 'focusNotebookCell');\n            this._notebookEditorWidget.setCellEditorSelection(match.cell, match.range());\n            this._notebookEditorWidget.revealRangeInCenterIfOutsideViewportAsync(match.cell, match.range());\n        }\n    }\n};\nFileMatch = FileMatch_1 = ( __decorate([\n    ( __param(7, IModelService)),\n    ( __param(8, IReplaceService)),\n    ( __param(9, ILabelService)),\n    ( __param(10, INotebookEditorService))\n], FileMatch));\nlet FolderMatch = FolderMatch_1 = class FolderMatch extends Disposable {\n    constructor(_resource, _id, _index, _query, _parent, _searchResult, _closestRoot, replaceService, instantiationService, labelService, uriIdentityService) {\n        super();\n        this._resource = _resource;\n        this._id = _id;\n        this._index = _index;\n        this._query = _query;\n        this._parent = _parent;\n        this._searchResult = _searchResult;\n        this._closestRoot = _closestRoot;\n        this.replaceService = replaceService;\n        this.instantiationService = instantiationService;\n        this.uriIdentityService = uriIdentityService;\n        this._onChange = this._register(( new Emitter()));\n        this.onChange = this._onChange.event;\n        this._onDispose = this._register(( new Emitter()));\n        this.onDispose = this._onDispose.event;\n        this._replacingAll = false;\n        this._fileMatches = ( new ResourceMap());\n        this._folderMatches = ( new ResourceMap());\n        this._folderMatchesMap = TernarySearchTree.forUris(key => this.uriIdentityService.extUri.ignorePathCasing(key));\n        this._unDisposedFileMatches = ( new ResourceMap());\n        this._unDisposedFolderMatches = ( new ResourceMap());\n        this._name = ( new Lazy(() => this.resource ? labelService.getUriBasenameLabel(this.resource) : ''));\n    }\n    get searchModel() {\n        return this._searchResult.searchModel;\n    }\n    get showHighlights() {\n        return this._parent.showHighlights;\n    }\n    get closestRoot() {\n        return this._closestRoot;\n    }\n    set replacingAll(b) {\n        this._replacingAll = b;\n    }\n    id() {\n        return this._id;\n    }\n    get resource() {\n        return this._resource;\n    }\n    index() {\n        return this._index;\n    }\n    name() {\n        return this._name.value;\n    }\n    parent() {\n        return this._parent;\n    }\n    bindModel(model) {\n        const fileMatch = this._fileMatches.get(model.uri);\n        if (fileMatch) {\n            fileMatch.bindModel(model);\n        }\n        else {\n            const folderMatch = this.getFolderMatch(model.uri);\n            const match = folderMatch?.getDownstreamFileMatch(model.uri);\n            match?.bindModel(model);\n        }\n    }\n    async bindNotebookEditorWidget(editor, resource) {\n        const fileMatch = this._fileMatches.get(resource);\n        if (fileMatch) {\n            fileMatch.bindNotebookEditorWidget(editor);\n            await fileMatch.updateMatchesForEditorWidget();\n        }\n        else {\n            const folderMatches = this.folderMatchesIterator();\n            for (const elem of folderMatches) {\n                await elem.bindNotebookEditorWidget(editor, resource);\n            }\n        }\n    }\n    unbindNotebookEditorWidget(editor, resource) {\n        const fileMatch = this._fileMatches.get(resource);\n        if (fileMatch) {\n            fileMatch.unbindNotebookEditorWidget(editor);\n        }\n        else {\n            const folderMatches = this.folderMatchesIterator();\n            for (const elem of folderMatches) {\n                elem.unbindNotebookEditorWidget(editor, resource);\n            }\n        }\n    }\n    createIntermediateFolderMatch(resource, id, index, query, baseWorkspaceFolder) {\n        const folderMatch = this.instantiationService.createInstance(FolderMatchWithResource, resource, id, index, query, this, this._searchResult, baseWorkspaceFolder);\n        this.configureIntermediateMatch(folderMatch);\n        this.doAddFolder(folderMatch);\n        return folderMatch;\n    }\n    configureIntermediateMatch(folderMatch) {\n        const disposable = folderMatch.onChange((event) => this.onFolderChange(folderMatch, event));\n        folderMatch.onDispose(() => disposable.dispose());\n    }\n    clear(clearingAll = false) {\n        const changed = this.allDownstreamFileMatches();\n        this.disposeMatches();\n        this._onChange.fire({ elements: changed, removed: true, added: false, clearingAll });\n    }\n    remove(matches) {\n        if (!Array.isArray(matches)) {\n            matches = [matches];\n        }\n        const allMatches = getFileMatches(matches);\n        this.doRemoveFile(allMatches);\n    }\n    async replace(match) {\n        return this.replaceService.replace([match]).then(() => {\n            this.doRemoveFile([match], true, true, true);\n        });\n    }\n    replaceAll() {\n        const matches = this.matches();\n        return this.batchReplace(matches);\n    }\n    matches() {\n        return [...this.fileMatchesIterator(), ...this.folderMatchesIterator()];\n    }\n    fileMatchesIterator() {\n        return ( this._fileMatches.values());\n    }\n    folderMatchesIterator() {\n        return ( this._folderMatches.values());\n    }\n    isEmpty() {\n        return (this.fileCount() + this.folderCount()) === 0;\n    }\n    getDownstreamFileMatch(uri) {\n        const directChildFileMatch = this._fileMatches.get(uri);\n        if (directChildFileMatch) {\n            return directChildFileMatch;\n        }\n        const folderMatch = this.getFolderMatch(uri);\n        const match = folderMatch?.getDownstreamFileMatch(uri);\n        if (match) {\n            return match;\n        }\n        return null;\n    }\n    allDownstreamFileMatches() {\n        let recursiveChildren = [];\n        const iterator = this.folderMatchesIterator();\n        for (const elem of iterator) {\n            recursiveChildren = recursiveChildren.concat(elem.allDownstreamFileMatches());\n        }\n        return [...this.fileMatchesIterator(), ...recursiveChildren];\n    }\n    fileCount() {\n        return this._fileMatches.size;\n    }\n    folderCount() {\n        return this._folderMatches.size;\n    }\n    count() {\n        return this.fileCount() + this.folderCount();\n    }\n    recursiveFileCount() {\n        return this.allDownstreamFileMatches().length;\n    }\n    recursiveMatchCount() {\n        return this.allDownstreamFileMatches().reduce((prev, match) => prev + match.count(), 0);\n    }\n    get query() {\n        return this._query;\n    }\n    addFileMatch(raw, silent, searchInstanceID) {\n        const added = [];\n        const updated = [];\n        raw.forEach(rawFileMatch => {\n            const existingFileMatch = this.getDownstreamFileMatch(rawFileMatch.resource);\n            if (existingFileMatch) {\n                if (rawFileMatch.results) {\n                    rawFileMatch\n                        .results\n                        .filter(resultIsMatch)\n                        .forEach(m => {\n                        textSearchResultToMatches(m, existingFileMatch)\n                            .forEach(m => existingFileMatch.add(m));\n                    });\n                }\n                if (isIFileMatchWithCells(rawFileMatch)) {\n                    rawFileMatch.cellResults?.forEach(rawCellMatch => {\n                        const existingCellMatch = existingFileMatch.getCellMatch(rawCellMatch.cell.id);\n                        if (existingCellMatch) {\n                            existingCellMatch.addContentMatches(rawCellMatch.contentResults);\n                            existingCellMatch.addWebviewMatches(rawCellMatch.webviewResults);\n                        }\n                        else {\n                            existingFileMatch.addCellMatch(rawCellMatch);\n                        }\n                    });\n                }\n                updated.push(existingFileMatch);\n                existingFileMatch.addContext(rawFileMatch.results);\n            }\n            else {\n                if (this instanceof FolderMatchWorkspaceRoot || this instanceof FolderMatchNoRoot) {\n                    const fileMatch = this.createAndConfigureFileMatch(rawFileMatch, searchInstanceID);\n                    added.push(fileMatch);\n                }\n            }\n        });\n        const elements = [...added, ...updated];\n        if (!silent && elements.length) {\n            this._onChange.fire({ elements, added: !!added.length });\n        }\n    }\n    doAddFile(fileMatch) {\n        this._fileMatches.set(fileMatch.resource, fileMatch);\n        if (( this._unDisposedFileMatches.has(fileMatch.resource))) {\n            this._unDisposedFileMatches.delete(fileMatch.resource);\n        }\n    }\n    hasOnlyReadOnlyMatches() {\n        return Array.from(( this._fileMatches.values())).every(fm => fm.hasOnlyReadOnlyMatches());\n    }\n    uriHasParent(parent, child) {\n        return this.uriIdentityService.extUri.isEqualOrParent(child, parent) && !this.uriIdentityService.extUri.isEqual(child, parent);\n    }\n    isInParentChain(folderMatch) {\n        let matchItem = this;\n        while (matchItem instanceof FolderMatch_1) {\n            if (matchItem.id() === folderMatch.id()) {\n                return true;\n            }\n            matchItem = matchItem.parent();\n        }\n        return false;\n    }\n    getFolderMatch(resource) {\n        const folderMatch = this._folderMatchesMap.findSubstr(resource);\n        return folderMatch;\n    }\n    doAddFolder(folderMatch) {\n        if (this instanceof FolderMatchWithResource && !this.uriHasParent(this.resource, folderMatch.resource)) {\n            throw Error(`${folderMatch.resource} does not belong as a child of ${this.resource}`);\n        }\n        else if (this.isInParentChain(folderMatch)) {\n            throw Error(`${folderMatch.resource} is a parent of ${this.resource}`);\n        }\n        this._folderMatches.set(folderMatch.resource, folderMatch);\n        this._folderMatchesMap.set(folderMatch.resource, folderMatch);\n        if (( this._unDisposedFolderMatches.has(folderMatch.resource))) {\n            this._unDisposedFolderMatches.delete(folderMatch.resource);\n        }\n    }\n    async batchReplace(matches) {\n        const allMatches = getFileMatches(matches);\n        await this.replaceService.replace(allMatches);\n        this.doRemoveFile(allMatches, true, true, true);\n    }\n    onFileChange(fileMatch, removed = false) {\n        let added = false;\n        if (!( this._fileMatches.has(fileMatch.resource))) {\n            this.doAddFile(fileMatch);\n            added = true;\n        }\n        if (fileMatch.count() === 0) {\n            this.doRemoveFile([fileMatch], false, false);\n            added = false;\n            removed = true;\n        }\n        if (!this._replacingAll) {\n            this._onChange.fire({ elements: [fileMatch], added: added, removed: removed });\n        }\n    }\n    onFolderChange(folderMatch, event) {\n        if (!( this._folderMatches.has(folderMatch.resource))) {\n            this.doAddFolder(folderMatch);\n        }\n        if (folderMatch.isEmpty()) {\n            this._folderMatches.delete(folderMatch.resource);\n            folderMatch.dispose();\n        }\n        this._onChange.fire(event);\n    }\n    doRemoveFile(fileMatches, dispose = true, trigger = true, keepReadonly = false) {\n        const removed = [];\n        for (const match of fileMatches) {\n            if (this._fileMatches.get(match.resource)) {\n                if (keepReadonly && match.hasWebviewMatches()) {\n                    continue;\n                }\n                this._fileMatches.delete(match.resource);\n                if (dispose) {\n                    match.dispose();\n                }\n                else {\n                    this._unDisposedFileMatches.set(match.resource, match);\n                }\n                removed.push(match);\n            }\n            else {\n                const folder = this.getFolderMatch(match.resource);\n                if (folder) {\n                    folder.doRemoveFile([match], dispose, trigger);\n                }\n                else {\n                    throw Error(`FileMatch ${match.resource} is not located within FolderMatch ${this.resource}`);\n                }\n            }\n        }\n        if (trigger) {\n            this._onChange.fire({ elements: removed, removed: true });\n        }\n    }\n    disposeMatches() {\n        [...( this._fileMatches.values())].forEach((fileMatch) => fileMatch.dispose());\n        [...( this._folderMatches.values())].forEach((folderMatch) => folderMatch.disposeMatches());\n        [...( this._unDisposedFileMatches.values())].forEach((fileMatch) => fileMatch.dispose());\n        [...( this._unDisposedFolderMatches.values())].forEach((folderMatch) => folderMatch.disposeMatches());\n        this._fileMatches.clear();\n        this._folderMatches.clear();\n        this._unDisposedFileMatches.clear();\n        this._unDisposedFolderMatches.clear();\n    }\n    dispose() {\n        this.disposeMatches();\n        this._onDispose.fire();\n        super.dispose();\n    }\n};\nFolderMatch = FolderMatch_1 = ( __decorate([\n    ( __param(7, IReplaceService)),\n    ( __param(8, IInstantiationService)),\n    ( __param(9, ILabelService)),\n    ( __param(10, IUriIdentityService))\n], FolderMatch));\nlet FolderMatchWithResource = class FolderMatchWithResource extends FolderMatch {\n    constructor(_resource, _id, _index, _query, _parent, _searchResult, _closestRoot, replaceService, instantiationService, labelService, uriIdentityService) {\n        super(_resource, _id, _index, _query, _parent, _searchResult, _closestRoot, replaceService, instantiationService, labelService, uriIdentityService);\n        this._normalizedResource = ( new Lazy(\n            () => this.uriIdentityService.extUri.removeTrailingPathSeparator(this.uriIdentityService.extUri.normalizePath(this.resource))\n        ));\n    }\n    get resource() {\n        return this._resource;\n    }\n    get normalizedResource() {\n        return this._normalizedResource.value;\n    }\n};\nFolderMatchWithResource = ( __decorate([\n    ( __param(7, IReplaceService)),\n    ( __param(8, IInstantiationService)),\n    ( __param(9, ILabelService)),\n    ( __param(10, IUriIdentityService))\n], FolderMatchWithResource));\nlet FolderMatchWorkspaceRoot = class FolderMatchWorkspaceRoot extends FolderMatchWithResource {\n    constructor(_resource, _id, _index, _query, _parent, replaceService, instantiationService, labelService, uriIdentityService) {\n        super(_resource, _id, _index, _query, _parent, _parent, null, replaceService, instantiationService, labelService, uriIdentityService);\n    }\n    normalizedUriParent(uri) {\n        return this.uriIdentityService.extUri.normalizePath(this.uriIdentityService.extUri.dirname(uri));\n    }\n    uriEquals(uri1, ur2) {\n        return this.uriIdentityService.extUri.isEqual(uri1, ur2);\n    }\n    createFileMatch(query, previewOptions, maxResults, parent, rawFileMatch, closestRoot, searchInstanceID) {\n        const fileMatch = this.instantiationService.createInstance(FileMatch, query, previewOptions, maxResults, parent, rawFileMatch, closestRoot, searchInstanceID);\n        parent.doAddFile(fileMatch);\n        const disposable = fileMatch.onChange(({ didRemove }) => parent.onFileChange(fileMatch, didRemove));\n        fileMatch.onDispose(() => disposable.dispose());\n        return fileMatch;\n    }\n    createAndConfigureFileMatch(rawFileMatch, searchInstanceID) {\n        if (!this.uriHasParent(this.resource, rawFileMatch.resource)) {\n            throw Error(`${rawFileMatch.resource} is not a descendant of ${this.resource}`);\n        }\n        const fileMatchParentParts = [];\n        let uri = this.normalizedUriParent(rawFileMatch.resource);\n        while (!this.uriEquals(this.normalizedResource, uri)) {\n            fileMatchParentParts.unshift(uri);\n            const prevUri = uri;\n            uri = this.uriIdentityService.extUri.removeTrailingPathSeparator(this.normalizedUriParent(uri));\n            if (this.uriEquals(prevUri, uri)) {\n                throw Error(`${rawFileMatch.resource} is not correctly configured as a child of ${this.normalizedResource}`);\n            }\n        }\n        const root = this.closestRoot ?? this;\n        let parent = this;\n        for (let i = 0; i < fileMatchParentParts.length; i++) {\n            let folderMatch = parent.getFolderMatch(fileMatchParentParts[i]);\n            if (!folderMatch) {\n                folderMatch = parent.createIntermediateFolderMatch(fileMatchParentParts[i], ( fileMatchParentParts[i].toString()), -1, this._query, root);\n            }\n            parent = folderMatch;\n        }\n        return this.createFileMatch(this._query.contentPattern, this._query.previewOptions, this._query.maxResults, parent, rawFileMatch, root, searchInstanceID);\n    }\n};\nFolderMatchWorkspaceRoot = ( __decorate([\n    ( __param(5, IReplaceService)),\n    ( __param(6, IInstantiationService)),\n    ( __param(7, ILabelService)),\n    ( __param(8, IUriIdentityService))\n], FolderMatchWorkspaceRoot));\nlet FolderMatchNoRoot = class FolderMatchNoRoot extends FolderMatch {\n    constructor(_id, _index, _query, _parent, replaceService, instantiationService, labelService, uriIdentityService) {\n        super(null, _id, _index, _query, _parent, _parent, null, replaceService, instantiationService, labelService, uriIdentityService);\n    }\n    createAndConfigureFileMatch(rawFileMatch, searchInstanceID) {\n        const fileMatch = this.instantiationService.createInstance(FileMatch, this._query.contentPattern, this._query.previewOptions, this._query.maxResults, this, rawFileMatch, null, searchInstanceID);\n        this.doAddFile(fileMatch);\n        const disposable = fileMatch.onChange(({ didRemove }) => this.onFileChange(fileMatch, didRemove));\n        fileMatch.onDispose(() => disposable.dispose());\n        return fileMatch;\n    }\n};\nFolderMatchNoRoot = ( __decorate([\n    ( __param(4, IReplaceService)),\n    ( __param(5, IInstantiationService)),\n    ( __param(6, ILabelService)),\n    ( __param(7, IUriIdentityService))\n], FolderMatchNoRoot));\nlet elemAIndex = -1;\nlet elemBIndex = -1;\nfunction searchMatchComparer(elementA, elementB, sortOrder = \"default\" ) {\n    if (elementA instanceof FileMatch && elementB instanceof FolderMatch) {\n        return 1;\n    }\n    if (elementB instanceof FileMatch && elementA instanceof FolderMatch) {\n        return -1;\n    }\n    if (elementA instanceof FolderMatch && elementB instanceof FolderMatch) {\n        elemAIndex = elementA.index();\n        elemBIndex = elementB.index();\n        if (elemAIndex !== -1 && elemBIndex !== -1) {\n            return elemAIndex - elemBIndex;\n        }\n        switch (sortOrder) {\n            case \"countDescending\" :\n                return elementB.count() - elementA.count();\n            case \"countAscending\" :\n                return elementA.count() - elementB.count();\n            case \"type\" :\n                return compareFileExtensions(elementA.name(), elementB.name());\n            case \"fileNames\" :\n                return compareFileNames(elementA.name(), elementB.name());\n            default:\n                if (!elementA.resource || !elementB.resource) {\n                    return 0;\n                }\n                return comparePaths(elementA.resource.fsPath, elementB.resource.fsPath) || compareFileNames(elementA.name(), elementB.name());\n        }\n    }\n    if (elementA instanceof FileMatch && elementB instanceof FileMatch) {\n        switch (sortOrder) {\n            case \"countDescending\" :\n                return elementB.count() - elementA.count();\n            case \"countAscending\" :\n                return elementA.count() - elementB.count();\n            case \"type\" :\n                return compareFileExtensions(elementA.name(), elementB.name());\n            case \"fileNames\" :\n                return compareFileNames(elementA.name(), elementB.name());\n            case \"modified\" : {\n                const fileStatA = elementA.fileStat;\n                const fileStatB = elementB.fileStat;\n                if (fileStatA && fileStatB) {\n                    return fileStatB.mtime - fileStatA.mtime;\n                }\n            }\n            default:\n                return comparePaths(elementA.resource.fsPath, elementB.resource.fsPath) || compareFileNames(elementA.name(), elementB.name());\n        }\n    }\n    if (elementA instanceof MatchInNotebook && elementB instanceof MatchInNotebook) {\n        return compareNotebookPos(elementA, elementB);\n    }\n    if (elementA instanceof Match && elementB instanceof Match) {\n        return Range.compareRangesUsingStarts(elementA.range(), elementB.range());\n    }\n    return 0;\n}\nfunction compareNotebookPos(match1, match2) {\n    if (match1.cellIndex === match2.cellIndex) {\n        if (match1.webviewIndex !== undefined && match2.webviewIndex !== undefined) {\n            return match1.webviewIndex - match2.webviewIndex;\n        }\n        else if (match1.webviewIndex === undefined && match2.webviewIndex === undefined) {\n            return Range.compareRangesUsingStarts(match1.range(), match2.range());\n        }\n        else {\n            if (match1.webviewIndex !== undefined) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n    }\n    else if (match1.cellIndex < match2.cellIndex) {\n        return -1;\n    }\n    else {\n        return 1;\n    }\n}\nfunction searchComparer(elementA, elementB, sortOrder = \"default\" ) {\n    const elemAParents = createParentList(elementA);\n    const elemBParents = createParentList(elementB);\n    let i = elemAParents.length - 1;\n    let j = elemBParents.length - 1;\n    while (i >= 0 && j >= 0) {\n        if (elemAParents[i].id() !== elemBParents[j].id()) {\n            return searchMatchComparer(elemAParents[i], elemBParents[j], sortOrder);\n        }\n        i--;\n        j--;\n    }\n    const elemAAtEnd = i === 0;\n    const elemBAtEnd = j === 0;\n    if (elemAAtEnd && !elemBAtEnd) {\n        return 1;\n    }\n    else if (!elemAAtEnd && elemBAtEnd) {\n        return -1;\n    }\n    return 0;\n}\nfunction createParentList(element) {\n    const parentArray = [];\n    let currElement = element;\n    while (!(currElement instanceof SearchResult)) {\n        parentArray.push(currElement);\n        currElement = currElement.parent();\n    }\n    return parentArray;\n}\nlet SearchResult = class SearchResult extends Disposable {\n    constructor(searchModel, replaceService, instantiationService, modelService, uriIdentityService, notebookEditorService) {\n        super();\n        this.searchModel = searchModel;\n        this.replaceService = replaceService;\n        this.instantiationService = instantiationService;\n        this.modelService = modelService;\n        this.uriIdentityService = uriIdentityService;\n        this.notebookEditorService = notebookEditorService;\n        this._onChange = this._register(( new PauseableEmitter({\n            merge: mergeSearchResultEvents\n        })));\n        this.onChange = this._onChange.event;\n        this._folderMatches = [];\n        this._otherFilesMatch = null;\n        this._folderMatchesMap = TernarySearchTree.forUris(key => this.uriIdentityService.extUri.ignorePathCasing(key));\n        this._showHighlights = false;\n        this._query = null;\n        this.disposePastResults = () => { };\n        this._isDirty = false;\n        this._rangeHighlightDecorations = this.instantiationService.createInstance(RangeHighlightDecorations);\n        this._register(this.modelService.onModelAdded(model => this.onModelAdded(model)));\n        this._register(this.notebookEditorService.onDidAddNotebookEditor(widget => {\n            if (widget instanceof NotebookEditorWidget) {\n                this.onDidAddNotebookEditorWidget(widget);\n            }\n        }));\n        this._register(this.onChange(e => {\n            if (e.removed) {\n                this._isDirty = !this.isEmpty();\n            }\n        }));\n    }\n    async batchReplace(elementsToReplace) {\n        try {\n            this._onChange.pause();\n            await Promise.all(( elementsToReplace.map(async (elem) => {\n                const parent = elem.parent();\n                if ((parent instanceof FolderMatch || parent instanceof FileMatch) && arrayContainsElementOrParent(parent, elementsToReplace)) {\n                    return;\n                }\n                if (elem instanceof FileMatch) {\n                    await elem.parent().replace(elem);\n                }\n                else if (elem instanceof Match) {\n                    await elem.parent().replace(elem);\n                }\n                else if (elem instanceof FolderMatch) {\n                    await elem.replaceAll();\n                }\n            })));\n        }\n        finally {\n            this._onChange.resume();\n        }\n    }\n    batchRemove(elementsToRemove) {\n        const removedElems = [];\n        try {\n            this._onChange.pause();\n            elementsToRemove.forEach((currentElement) => {\n                if (!arrayContainsElementOrParent(currentElement, removedElems)) {\n                    currentElement.parent().remove(currentElement);\n                    removedElems.push(currentElement);\n                }\n            });\n        }\n        finally {\n            this._onChange.resume();\n        }\n    }\n    get isDirty() {\n        return this._isDirty;\n    }\n    get query() {\n        return this._query;\n    }\n    set query(query) {\n        const oldFolderMatches = this.folderMatches();\n        ( new Promise(resolve => this.disposePastResults = resolve))\n            .then(() => oldFolderMatches.forEach(match => match.clear()))\n            .then(() => oldFolderMatches.forEach(match => match.dispose()))\n            .then(() => this._isDirty = false);\n        this._rangeHighlightDecorations.removeHighlightRange();\n        this._folderMatchesMap = TernarySearchTree.forUris(key => this.uriIdentityService.extUri.ignorePathCasing(key));\n        if (!query) {\n            return;\n        }\n        this._folderMatches = ( ( (query && query.folderQueries || [])\n            .map(fq => fq.folder))\n            .map((resource, index) => this._createBaseFolderMatch(resource, ( resource.toString()), index, query)));\n        this._folderMatches.forEach(fm => this._folderMatchesMap.set(fm.resource, fm));\n        this._otherFilesMatch = this._createBaseFolderMatch(null, 'otherFiles', this._folderMatches.length + 1, query);\n        this._query = query;\n    }\n    onDidAddNotebookEditorWidget(widget) {\n        this._onWillChangeModelListener?.dispose();\n        this._onWillChangeModelListener = widget.onWillChangeModel((model) => {\n            if (model) {\n                this.onNotebookEditorWidgetRemoved(widget, model?.uri);\n            }\n        });\n        this._onDidChangeModelListener?.dispose();\n        this._onDidChangeModelListener = widget.onDidAttachViewModel(() => {\n            if (widget.hasModel()) {\n                this.onNotebookEditorWidgetAdded(widget, widget.textModel.uri);\n            }\n        });\n    }\n    onModelAdded(model) {\n        const folderMatch = this._folderMatchesMap.findSubstr(model.uri);\n        folderMatch?.bindModel(model);\n    }\n    async onNotebookEditorWidgetAdded(editor, resource) {\n        const folderMatch = this._folderMatchesMap.findSubstr(resource);\n        await folderMatch?.bindNotebookEditorWidget(editor, resource);\n    }\n    onNotebookEditorWidgetRemoved(editor, resource) {\n        const folderMatch = this._folderMatchesMap.findSubstr(resource);\n        folderMatch?.unbindNotebookEditorWidget(editor, resource);\n    }\n    _createBaseFolderMatch(resource, id, index, query) {\n        let folderMatch;\n        if (resource) {\n            folderMatch = this.instantiationService.createInstance(FolderMatchWorkspaceRoot, resource, id, index, query, this);\n        }\n        else {\n            folderMatch = this.instantiationService.createInstance(FolderMatchNoRoot, id, index, query, this);\n        }\n        const disposable = folderMatch.onChange((event) => this._onChange.fire(event));\n        folderMatch.onDispose(() => disposable.dispose());\n        return folderMatch;\n    }\n    add(allRaw, searchInstanceID, silent = false) {\n        const { byFolder, other } = this.groupFilesByFolder(allRaw);\n        byFolder.forEach(raw => {\n            if (!raw.length) {\n                return;\n            }\n            const folderMatch = this.getFolderMatch(raw[0].resource);\n            folderMatch?.addFileMatch(raw, silent, searchInstanceID);\n        });\n        this._otherFilesMatch?.addFileMatch(other, silent, searchInstanceID);\n        this.disposePastResults();\n    }\n    clear() {\n        this.folderMatches().forEach((folderMatch) => folderMatch.clear(true));\n        this.disposeMatches();\n        this._folderMatches = [];\n        this._otherFilesMatch = null;\n    }\n    remove(matches) {\n        if (!Array.isArray(matches)) {\n            matches = [matches];\n        }\n        matches.forEach(m => {\n            if (m instanceof FolderMatch) {\n                m.clear();\n            }\n        });\n        const fileMatches = matches.filter(m => m instanceof FileMatch);\n        const { byFolder, other } = this.groupFilesByFolder(fileMatches);\n        byFolder.forEach(matches => {\n            if (!matches.length) {\n                return;\n            }\n            this.getFolderMatch(matches[0].resource).remove(matches);\n        });\n        if (other.length) {\n            this.getFolderMatch(other[0].resource).remove(other);\n        }\n    }\n    replace(match) {\n        return this.getFolderMatch(match.resource).replace(match);\n    }\n    replaceAll(progress) {\n        this.replacingAll = true;\n        const promise = this.replaceService.replace(this.matches(), progress);\n        return promise.then(() => {\n            this.replacingAll = false;\n            this.clear();\n        }, () => {\n            this.replacingAll = false;\n        });\n    }\n    folderMatches() {\n        return this._otherFilesMatch ?\n            [\n                ...this._folderMatches,\n                this._otherFilesMatch\n            ] :\n            [\n                ...this._folderMatches\n            ];\n    }\n    matches() {\n        const matches = [];\n        this.folderMatches().forEach(folderMatch => {\n            matches.push(folderMatch.allDownstreamFileMatches());\n        });\n        return [].concat(...matches);\n    }\n    isEmpty() {\n        return this.folderMatches().every((folderMatch) => folderMatch.isEmpty());\n    }\n    fileCount() {\n        return this.folderMatches().reduce((prev, match) => prev + match.recursiveFileCount(), 0);\n    }\n    count() {\n        return this.matches().reduce((prev, match) => prev + match.count(), 0);\n    }\n    get showHighlights() {\n        return this._showHighlights;\n    }\n    toggleHighlights(value) {\n        if (this._showHighlights === value) {\n            return;\n        }\n        this._showHighlights = value;\n        let selectedMatch = null;\n        this.matches().forEach((fileMatch) => {\n            fileMatch.updateHighlights();\n            fileMatch.updateNotebookHighlights();\n            if (!selectedMatch) {\n                selectedMatch = fileMatch.getSelectedMatch();\n            }\n        });\n        if (this._showHighlights && selectedMatch) {\n            this._rangeHighlightDecorations.highlightRange(selectedMatch.parent().resource, selectedMatch.range());\n        }\n        else {\n            this._rangeHighlightDecorations.removeHighlightRange();\n        }\n    }\n    get rangeHighlightDecorations() {\n        return this._rangeHighlightDecorations;\n    }\n    getFolderMatch(resource) {\n        const folderMatch = this._folderMatchesMap.findSubstr(resource);\n        return folderMatch ? folderMatch : this._otherFilesMatch;\n    }\n    set replacingAll(running) {\n        this.folderMatches().forEach((folderMatch) => {\n            folderMatch.replacingAll = running;\n        });\n    }\n    groupFilesByFolder(fileMatches) {\n        const rawPerFolder = ( new ResourceMap());\n        const otherFileMatches = [];\n        this._folderMatches.forEach(fm => rawPerFolder.set(fm.resource, []));\n        fileMatches.forEach(rawFileMatch => {\n            const folderMatch = this.getFolderMatch(rawFileMatch.resource);\n            if (!folderMatch) {\n                return;\n            }\n            const resource = folderMatch.resource;\n            if (resource) {\n                rawPerFolder.get(resource).push(rawFileMatch);\n            }\n            else {\n                otherFileMatches.push(rawFileMatch);\n            }\n        });\n        return {\n            byFolder: rawPerFolder,\n            other: otherFileMatches\n        };\n    }\n    disposeMatches() {\n        this.folderMatches().forEach(folderMatch => folderMatch.dispose());\n        this._folderMatches = [];\n        this._folderMatchesMap = TernarySearchTree.forUris(key => this.uriIdentityService.extUri.ignorePathCasing(key));\n        this._rangeHighlightDecorations.removeHighlightRange();\n    }\n    dispose() {\n        this._onWillChangeModelListener?.dispose();\n        this._onDidChangeModelListener?.dispose();\n        this.disposePastResults();\n        this.disposeMatches();\n        this._rangeHighlightDecorations.dispose();\n        super.dispose();\n    }\n};\nSearchResult = ( __decorate([\n    ( __param(1, IReplaceService)),\n    ( __param(2, IInstantiationService)),\n    ( __param(3, IModelService)),\n    ( __param(4, IUriIdentityService)),\n    ( __param(5, INotebookEditorService))\n], SearchResult));\nlet SearchModel = class SearchModel extends Disposable {\n    constructor(searchService, telemetryService, configurationService, instantiationService, logService, notebookSearchService) {\n        super();\n        this.searchService = searchService;\n        this.telemetryService = telemetryService;\n        this.configurationService = configurationService;\n        this.instantiationService = instantiationService;\n        this.logService = logService;\n        this.notebookSearchService = notebookSearchService;\n        this._searchQuery = null;\n        this._replaceActive = false;\n        this._replaceString = null;\n        this._replacePattern = null;\n        this._preserveCase = false;\n        this._startStreamDelay = Promise.resolve();\n        this._resultQueue = [];\n        this._onReplaceTermChanged = this._register(( new Emitter()));\n        this.onReplaceTermChanged = this._onReplaceTermChanged.event;\n        this._onSearchResultChanged = this._register(( new PauseableEmitter({\n            merge: mergeSearchResultEvents\n        })));\n        this.onSearchResultChanged = this._onSearchResultChanged.event;\n        this.currentCancelTokenSource = null;\n        this.searchCancelledForNewSearch = false;\n        this._searchResult = this.instantiationService.createInstance(SearchResult, this);\n        this._searchResultChangedListener = this._register(this._searchResult.onChange((e) => this._onSearchResultChanged.fire(e)));\n    }\n    isReplaceActive() {\n        return this._replaceActive;\n    }\n    set replaceActive(replaceActive) {\n        this._replaceActive = replaceActive;\n    }\n    get replacePattern() {\n        return this._replacePattern;\n    }\n    get replaceString() {\n        return this._replaceString || '';\n    }\n    set preserveCase(value) {\n        this._preserveCase = value;\n    }\n    get preserveCase() {\n        return this._preserveCase;\n    }\n    set replaceString(replaceString) {\n        this._replaceString = replaceString;\n        if (this._searchQuery) {\n            this._replacePattern = ( new ReplacePattern(replaceString, this._searchQuery.contentPattern));\n        }\n        this._onReplaceTermChanged.fire();\n    }\n    get searchResult() {\n        return this._searchResult;\n    }\n    set searchResult(searchResult) {\n        this._searchResult.dispose();\n        this._searchResultChangedListener.dispose();\n        this._searchResult = searchResult;\n        this._searchResult.searchModel = this;\n        this._searchResultChangedListener = this._register(this._searchResult.onChange((e) => this._onSearchResultChanged.fire(e)));\n    }\n    doSearch(query, progressEmitter, searchQuery, searchInstanceID, onProgress, callerToken) {\n        const asyncGenerateOnProgress = async (p) => {\n            progressEmitter.fire();\n            this.onSearchProgress(p, searchInstanceID, false);\n            onProgress?.(p);\n        };\n        const syncGenerateOnProgress = (p) => {\n            progressEmitter.fire();\n            this.onSearchProgress(p, searchInstanceID, true);\n            onProgress?.(p);\n        };\n        const tokenSource = this.currentCancelTokenSource = ( new CancellationTokenSource(callerToken));\n        const notebookResult = this.notebookSearchService.notebookSearch(query, tokenSource.token, searchInstanceID, asyncGenerateOnProgress);\n        const textResult = this.searchService.textSearchSplitSyncAsync(searchQuery, this.currentCancelTokenSource.token, asyncGenerateOnProgress, notebookResult.openFilesToScan, notebookResult.allScannedFiles);\n        const syncResults = textResult.syncResults.results;\n        syncResults.forEach(p => { if (p) {\n            syncGenerateOnProgress(p);\n        } });\n        const getAsyncResults = async () => {\n            const searchStart = Date.now();\n            const allClosedEditorResults = await textResult.asyncResults;\n            const resolvedNotebookResults = await notebookResult.completeData;\n            tokenSource.dispose();\n            const searchLength = Date.now() - searchStart;\n            const resolvedResult = {\n                results: [...allClosedEditorResults.results, ...resolvedNotebookResults.results],\n                messages: [...allClosedEditorResults.messages, ...resolvedNotebookResults.messages],\n                limitHit: allClosedEditorResults.limitHit || resolvedNotebookResults.limitHit,\n                exit: allClosedEditorResults.exit,\n                stats: allClosedEditorResults.stats,\n            };\n            this.logService.trace(`whole search time | ${searchLength}ms`);\n            return resolvedResult;\n        };\n        return {\n            asyncResults: getAsyncResults(),\n            syncResults\n        };\n    }\n    search(query, onProgress, callerToken) {\n        this.cancelSearch(true);\n        this._searchQuery = query;\n        if (!this.searchConfig.searchOnType) {\n            this.searchResult.clear();\n        }\n        const searchInstanceID = ( Date.now().toString());\n        this._searchResult.query = this._searchQuery;\n        const progressEmitter = ( new Emitter());\n        this._replacePattern = ( new ReplacePattern(this.replaceString, this._searchQuery.contentPattern));\n        this._startStreamDelay = ( new Promise(resolve => setTimeout(resolve, this.searchConfig.searchOnType ? 150 : 0)));\n        const req = this.doSearch(query, progressEmitter, this._searchQuery, searchInstanceID, onProgress, callerToken);\n        const asyncResults = req.asyncResults;\n        const syncResults = req.syncResults;\n        if (onProgress) {\n            syncResults.forEach(p => {\n                if (p) {\n                    onProgress(p);\n                }\n            });\n        }\n        const start = Date.now();\n        Promise.race([asyncResults, Event.toPromise(progressEmitter.event)]).finally(() => {\n            this.telemetryService.publicLog('searchResultsFirstRender', { duration: Date.now() - start });\n        });\n        try {\n            return {\n                asyncResults: asyncResults.then(value => {\n                    this.onSearchCompleted(value, Date.now() - start, searchInstanceID);\n                    return value;\n                }, e => {\n                    this.onSearchError(e, Date.now() - start);\n                    throw e;\n                }),\n                syncResults\n            };\n        }\n        finally {\n            this.telemetryService.publicLog('searchResultsFinished', { duration: Date.now() - start });\n        }\n    }\n    onSearchCompleted(completed, duration, searchInstanceID) {\n        if (!this._searchQuery) {\n            throw new Error('onSearchCompleted must be called after a search is started');\n        }\n        this._searchResult.add(this._resultQueue, searchInstanceID);\n        this._resultQueue.length = 0;\n        const options = Object.assign({}, this._searchQuery.contentPattern);\n        delete options.pattern;\n        const stats = completed && completed.stats;\n        const fileSchemeOnly = this._searchQuery.folderQueries.every(fq => fq.folder.scheme === Schemas.file);\n        const otherSchemeOnly = this._searchQuery.folderQueries.every(fq => fq.folder.scheme !== Schemas.file);\n        const scheme = fileSchemeOnly ? Schemas.file :\n            otherSchemeOnly ? 'other' :\n                'mixed';\n        this.telemetryService.publicLog('searchResultsShown', {\n            count: this._searchResult.count(),\n            fileCount: this._searchResult.fileCount(),\n            options,\n            duration,\n            type: stats && stats.type,\n            scheme,\n            searchOnTypeEnabled: this.searchConfig.searchOnType\n        });\n        return completed;\n    }\n    onSearchError(e, duration) {\n        if (errors.isCancellationError(e)) {\n            this.onSearchCompleted(this.searchCancelledForNewSearch\n                ? { exit: 1 , results: [], messages: [] }\n                : null, duration, '');\n            this.searchCancelledForNewSearch = false;\n        }\n    }\n    onSearchProgress(p, searchInstanceID, sync = true) {\n        if (p.resource) {\n            this._resultQueue.push(p);\n            if (sync) {\n                if (this._resultQueue.length) {\n                    this._searchResult.add(this._resultQueue, searchInstanceID, true);\n                    this._resultQueue.length = 0;\n                }\n            }\n            else {\n                this._startStreamDelay.then(() => {\n                    if (this._resultQueue.length) {\n                        this._searchResult.add(this._resultQueue, searchInstanceID, true);\n                        this._resultQueue.length = 0;\n                    }\n                });\n            }\n        }\n    }\n    get searchConfig() {\n        return this.configurationService.getValue('search');\n    }\n    cancelSearch(cancelledForNewSearch = false) {\n        if (this.currentCancelTokenSource) {\n            this.searchCancelledForNewSearch = cancelledForNewSearch;\n            this.currentCancelTokenSource.cancel();\n            return true;\n        }\n        return false;\n    }\n    dispose() {\n        this.cancelSearch();\n        this.searchResult.dispose();\n        super.dispose();\n    }\n    transferSearchResult(other) {\n        other.searchResult = this._searchResult;\n        this._searchResult = this.instantiationService.createInstance(SearchResult, this);\n    }\n};\nSearchModel = ( __decorate([\n    ( __param(0, ISearchService)),\n    ( __param(1, ITelemetryService)),\n    ( __param(2, IConfigurationService)),\n    ( __param(3, IInstantiationService)),\n    ( __param(4, ILogService)),\n    ( __param(5, INotebookSearchService))\n], SearchModel));\nlet SearchViewModelWorkbenchService = class SearchViewModelWorkbenchService {\n    constructor(instantiationService) {\n        this.instantiationService = instantiationService;\n        this._searchModel = null;\n    }\n    get searchModel() {\n        if (!this._searchModel) {\n            this._searchModel = this.instantiationService.createInstance(SearchModel);\n        }\n        return this._searchModel;\n    }\n};\nSearchViewModelWorkbenchService = ( __decorate([\n    ( __param(0, IInstantiationService))\n], SearchViewModelWorkbenchService));\nconst ISearchViewModelWorkbenchService = ( createDecorator('searchViewModelWorkbenchService'));\nlet RangeHighlightDecorations = class RangeHighlightDecorations {\n    static { RangeHighlightDecorations_1 = this; }\n    constructor(_modelService) {\n        this._modelService = _modelService;\n        this._decorationId = null;\n        this._model = null;\n        this._modelDisposables = ( new DisposableStore());\n    }\n    removeHighlightRange() {\n        if (this._model && this._decorationId) {\n            const decorationId = this._decorationId;\n            this._model.changeDecorations((accessor) => {\n                accessor.removeDecoration(decorationId);\n            });\n        }\n        this._decorationId = null;\n    }\n    highlightRange(resource, range, ownerId = 0) {\n        let model;\n        if (URI.isUri(resource)) {\n            model = this._modelService.getModel(resource);\n        }\n        else {\n            model = resource;\n        }\n        if (model) {\n            this.doHighlightRange(model, range);\n        }\n    }\n    doHighlightRange(model, range) {\n        this.removeHighlightRange();\n        model.changeDecorations((accessor) => {\n            this._decorationId = accessor.addDecoration(range, RangeHighlightDecorations_1._RANGE_HIGHLIGHT_DECORATION);\n        });\n        this.setModel(model);\n    }\n    setModel(model) {\n        if (this._model !== model) {\n            this.clearModelListeners();\n            this._model = model;\n            this._modelDisposables.add(this._model.onDidChangeDecorations((e) => {\n                this.clearModelListeners();\n                this.removeHighlightRange();\n                this._model = null;\n            }));\n            this._modelDisposables.add(this._model.onWillDispose(() => {\n                this.clearModelListeners();\n                this.removeHighlightRange();\n                this._model = null;\n            }));\n        }\n    }\n    clearModelListeners() {\n        this._modelDisposables.clear();\n    }\n    dispose() {\n        if (this._model) {\n            this.removeHighlightRange();\n            this._modelDisposables.dispose();\n            this._model = null;\n        }\n    }\n    static { this._RANGE_HIGHLIGHT_DECORATION = ModelDecorationOptions.register({\n        description: 'search-range-highlight',\n        stickiness: 1 ,\n        className: 'rangeHighlight',\n        isWholeLine: true\n    }); }\n};\nRangeHighlightDecorations = RangeHighlightDecorations_1 = ( __decorate([\n    ( __param(0, IModelService))\n], RangeHighlightDecorations));\nfunction textSearchResultToMatches(rawMatch, fileMatch) {\n    const previewLines = rawMatch.preview.text.split('\\n');\n    if (Array.isArray(rawMatch.ranges)) {\n        return ( rawMatch.ranges.map((r, i) => {\n            const previewRange = rawMatch.preview.matches[i];\n            return ( new Match(fileMatch, previewLines, previewRange, r));\n        }));\n    }\n    else {\n        const previewRange = rawMatch.preview.matches;\n        const match = ( new Match(fileMatch, previewLines, previewRange, rawMatch.ranges));\n        return [match];\n    }\n}\nfunction textSearchMatchesToNotebookMatches(textSearchMatches, cell) {\n    const notebookMatches = [];\n    return notebookMatches;\n}\nfunction arrayContainsElementOrParent(element, testArray) {\n    do {\n        if (testArray.includes(element)) {\n            return true;\n        }\n    } while (!(element.parent() instanceof SearchResult) && (element = element.parent()));\n    return false;\n}\nfunction getFileMatches(matches) {\n    const folderMatches = [];\n    const fileMatches = [];\n    matches.forEach((e) => {\n        if (e instanceof FileMatch) {\n            fileMatches.push(e);\n        }\n        else {\n            folderMatches.push(e);\n        }\n    });\n    return fileMatches.concat(( folderMatches.map(e => e.allDownstreamFileMatches())).flat());\n}\nfunction mergeSearchResultEvents(events) {\n    const retEvent = {\n        elements: [],\n        added: false,\n        removed: false,\n    };\n    events.forEach((e) => {\n        if (e.added) {\n            retEvent.added = true;\n        }\n        if (e.removed) {\n            retEvent.removed = true;\n        }\n        retEvent.elements = retEvent.elements.concat(e.elements);\n    });\n    return retEvent;\n}\nexport { CellMatch, FileMatch, FolderMatch, FolderMatchNoRoot, FolderMatchWithResource, FolderMatchWorkspaceRoot, ISearchViewModelWorkbenchService, Match, MatchInNotebook, RangeHighlightDecorations, SearchModel, SearchResult, SearchViewModelWorkbenchService, arrayContainsElementOrParent, compareNotebookPos, searchComparer, searchMatchComparer, textSearchMatchesToNotebookMatches };\n", "class FindMatchDecorationModel {}\nexport { FindMatchDecorationModel };\n", "class NotebookEditorWidget {}\nexport { NotebookEditorWidget };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst INotebookEditorService = ( createDecorator('INotebookEditorWidgetService'));\nexport { INotebookEditorService };\n", "import { TextSearchMatch } from '../../../services/search/common/search.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { PieceTreeTextBufferBuilder } from 'monaco-editor/esm/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder.js';\nimport { SearchParams } from 'monaco-editor/esm/vs/editor/common/model/textModelSearch.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nfunction isIFileMatchWithCells(object) {\n    return 'cellResults' in object;\n}\nfunction contentMatchesToTextSearchMatches(contentMatches, cell) {\n    return genericCellMatchesToTextSearchMatches(contentMatches, cell instanceof CellSearchModel ? cell.inputTextBuffer : cell.textBuffer);\n}\nfunction genericCellMatchesToTextSearchMatches(contentMatches, buffer, cell) {\n    let previousEndLine = -1;\n    const contextGroupings = [];\n    let currentContextGrouping = [];\n    contentMatches.forEach((match) => {\n        if (match.range.startLineNumber !== previousEndLine) {\n            if (currentContextGrouping.length > 0) {\n                contextGroupings.push([...currentContextGrouping]);\n                currentContextGrouping = [];\n            }\n        }\n        currentContextGrouping.push(match);\n        previousEndLine = match.range.endLineNumber;\n    });\n    if (currentContextGrouping.length > 0) {\n        contextGroupings.push([...currentContextGrouping]);\n    }\n    const textSearchResults = ( contextGroupings.map((grouping) => {\n        const lineTexts = [];\n        const firstLine = grouping[0].range.startLineNumber;\n        const lastLine = grouping[grouping.length - 1].range.endLineNumber;\n        for (let i = firstLine; i <= lastLine; i++) {\n            lineTexts.push(buffer.getLineContent(i));\n        }\n        return ( new TextSearchMatch(lineTexts.join('\\n') + '\\n', ( grouping.map(m => ( new Range(\n            m.range.startLineNumber - 1,\n            m.range.startColumn - 1,\n            m.range.endLineNumber - 1,\n            m.range.endColumn - 1\n        ))))));\n    }));\n    return textSearchResults;\n}\nfunction webviewMatchesToTextSearchMatches(webviewMatches) {\n    return ( webviewMatches\n        .map(rawMatch => (rawMatch.searchPreviewInfo) ?\n        ( new TextSearchMatch(rawMatch.searchPreviewInfo.line, ( new Range(\n            0,\n            rawMatch.searchPreviewInfo.range.start,\n            0,\n            rawMatch.searchPreviewInfo.range.end\n        )), undefined, rawMatch.index)) : undefined)).filter((e) => !!e);\n}\nconst rawCellPrefix = 'rawCell#';\nclass CellSearchModel extends Disposable {\n    constructor(_source, _inputTextBuffer, _outputs, _uri, _cellIndex) {\n        super();\n        this._source = _source;\n        this._inputTextBuffer = _inputTextBuffer;\n        this._outputs = _outputs;\n        this._uri = _uri;\n        this._cellIndex = _cellIndex;\n        this._outputTextBuffers = undefined;\n    }\n    get id() {\n        return `${rawCellPrefix}${this._cellIndex}`;\n    }\n    get uri() {\n        return this._uri;\n    }\n    _getFullModelRange(buffer) {\n        const lineCount = buffer.getLineCount();\n        return ( new Range(1, 1, lineCount, this._getLineMaxColumn(buffer, lineCount)));\n    }\n    _getLineMaxColumn(buffer, lineNumber) {\n        if (lineNumber < 1 || lineNumber > buffer.getLineCount()) {\n            throw new Error('Illegal value for lineNumber');\n        }\n        return buffer.getLineLength(lineNumber) + 1;\n    }\n    get inputTextBuffer() {\n        if (!this._inputTextBuffer) {\n            const builder = ( new PieceTreeTextBufferBuilder());\n            builder.acceptChunk(this._source);\n            const bufferFactory = builder.finish(true);\n            const { textBuffer, disposable } = bufferFactory.create(1 );\n            this._inputTextBuffer = textBuffer;\n            this._register(disposable);\n        }\n        return this._inputTextBuffer;\n    }\n    get outputTextBuffers() {\n        if (!this._outputTextBuffers) {\n            this._outputTextBuffers = ( this._outputs.map((output) => {\n                const builder = ( new PieceTreeTextBufferBuilder());\n                builder.acceptChunk(( output.data.toString()));\n                const bufferFactory = builder.finish(true);\n                const { textBuffer, disposable } = bufferFactory.create(1 );\n                this._register(disposable);\n                return textBuffer;\n            }));\n        }\n        return this._outputTextBuffers;\n    }\n    findInInputs(target) {\n        const searchParams = ( new SearchParams(target, false, false, null));\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return [];\n        }\n        const fullInputRange = this._getFullModelRange(this.inputTextBuffer);\n        return this.inputTextBuffer.findMatchesLineByLine(fullInputRange, searchData, true, 5000);\n    }\n    findInOutputs(target) {\n        const searchParams = ( new SearchParams(target, false, false, null));\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return [];\n        }\n        return ( this.outputTextBuffers.map(buffer => {\n            const matches = buffer.findMatchesLineByLine(this._getFullModelRange(buffer), searchData, true, 5000);\n            if (matches.length === 0) {\n                return undefined;\n            }\n            return {\n                textBuffer: buffer,\n                matches\n            };\n        })).filter((item) => !!item);\n    }\n}\nexport { CellSearchModel, contentMatchesToTextSearchMatches, genericCellMatchesToTextSearchMatches, isIFileMatchWithCells, rawCellPrefix, webviewMatchesToTextSearchMatches };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst INotebookSearchService = ( createDecorator('notebookSearchService'));\nexport { INotebookSearchService };\n", "import * as strings from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { buildReplaceStringWithCasePreserved } from 'monaco-editor/esm/vs/base/common/search.js';\nclass ReplacePattern {\n    constructor(replaceString, arg2, arg3) {\n        this._hasParameters = false;\n        this._replacePattern = replaceString;\n        let searchPatternInfo;\n        let parseParameters;\n        if (typeof arg2 === 'boolean') {\n            parseParameters = arg2;\n            this._regExp = arg3;\n        }\n        else {\n            searchPatternInfo = arg2;\n            parseParameters = !!searchPatternInfo.isRegExp;\n            this._regExp = strings.createRegExp(searchPatternInfo.pattern, !!searchPatternInfo.isRegExp, { matchCase: searchPatternInfo.isCaseSensitive, wholeWord: searchPatternInfo.isWordMatch, multiline: searchPatternInfo.isMultiline, global: false, unicode: true });\n        }\n        if (parseParameters) {\n            this.parseReplaceString(replaceString);\n        }\n        if (this._regExp.global) {\n            this._regExp = strings.createRegExp(this._regExp.source, true, { matchCase: !this._regExp.ignoreCase, wholeWord: false, multiline: this._regExp.multiline, global: false });\n        }\n        this._caseOpsRegExp = ( new RegExp(/([\\s\\S]*?)((?:\\\\[uUlL])+?|)(\\$[0-9]+)([\\s\\S]*?)/g));\n    }\n    get hasParameters() {\n        return this._hasParameters;\n    }\n    get pattern() {\n        return this._replacePattern;\n    }\n    get regExp() {\n        return this._regExp;\n    }\n    getReplaceString(text, preserveCase) {\n        this._regExp.lastIndex = 0;\n        const match = this._regExp.exec(text);\n        if (match) {\n            if (this.hasParameters) {\n                const replaceString = this.replaceWithCaseOperations(text, this._regExp, this.buildReplaceString(match, preserveCase));\n                if (match[0] === text) {\n                    return replaceString;\n                }\n                return replaceString.substr(match.index, match[0].length - (text.length - replaceString.length));\n            }\n            return this.buildReplaceString(match, preserveCase);\n        }\n        return null;\n    }\n    replaceWithCaseOperations(text, regex, replaceString) {\n        if (!/\\\\[uUlL]/.test(replaceString)) {\n            return text.replace(regex, replaceString);\n        }\n        const firstMatch = regex.exec(text);\n        if (firstMatch === null) {\n            return text.replace(regex, replaceString);\n        }\n        let patMatch;\n        let newReplaceString = '';\n        let lastIndex = 0;\n        let lastMatch = '';\n        while ((patMatch = this._caseOpsRegExp.exec(replaceString)) !== null) {\n            lastIndex = patMatch.index;\n            const fullMatch = patMatch[0];\n            lastMatch = fullMatch;\n            let caseOps = patMatch[2];\n            const money = patMatch[3];\n            if (!caseOps) {\n                newReplaceString += fullMatch;\n                continue;\n            }\n            const replacement = firstMatch[parseInt(money.slice(1))];\n            if (!replacement) {\n                newReplaceString += fullMatch;\n                continue;\n            }\n            const replacementLen = replacement.length;\n            newReplaceString += patMatch[1];\n            caseOps = caseOps.replace(/\\\\/g, '');\n            let i = 0;\n            for (; i < caseOps.length; i++) {\n                switch (caseOps[i]) {\n                    case 'U':\n                        newReplaceString += replacement.slice(i).toUpperCase();\n                        i = replacementLen;\n                        break;\n                    case 'u':\n                        newReplaceString += replacement[i].toUpperCase();\n                        break;\n                    case 'L':\n                        newReplaceString += replacement.slice(i).toLowerCase();\n                        i = replacementLen;\n                        break;\n                    case 'l':\n                        newReplaceString += replacement[i].toLowerCase();\n                        break;\n                }\n            }\n            if (i < replacementLen) {\n                newReplaceString += replacement.slice(i);\n            }\n            newReplaceString += patMatch[4];\n        }\n        newReplaceString += replaceString.slice(lastIndex + lastMatch.length);\n        return text.replace(regex, newReplaceString);\n    }\n    buildReplaceString(matches, preserveCase) {\n        if (preserveCase) {\n            return buildReplaceStringWithCasePreserved(matches, this._replacePattern);\n        }\n        else {\n            return this._replacePattern;\n        }\n    }\n    parseReplaceString(replaceString) {\n        if (!replaceString || replaceString.length === 0) {\n            return;\n        }\n        let substrFrom = 0, result = '';\n        for (let i = 0, len = replaceString.length; i < len; i++) {\n            const chCode = replaceString.charCodeAt(i);\n            if (chCode === 92 ) {\n                i++;\n                if (i >= len) {\n                    break;\n                }\n                const nextChCode = replaceString.charCodeAt(i);\n                let replaceWithCharacter = null;\n                switch (nextChCode) {\n                    case 92 :\n                        replaceWithCharacter = '\\\\';\n                        break;\n                    case 110 :\n                        replaceWithCharacter = '\\n';\n                        break;\n                    case 116 :\n                        replaceWithCharacter = '\\t';\n                        break;\n                }\n                if (replaceWithCharacter) {\n                    result += replaceString.substring(substrFrom, i - 1) + replaceWithCharacter;\n                    substrFrom = i + 1;\n                }\n            }\n            if (chCode === 36 ) {\n                i++;\n                if (i >= len) {\n                    break;\n                }\n                const nextChCode = replaceString.charCodeAt(i);\n                let replaceWithCharacter = null;\n                switch (nextChCode) {\n                    case 48 :\n                        replaceWithCharacter = '$&';\n                        this._hasParameters = true;\n                        break;\n                    case 96 :\n                    case 39 :\n                        this._hasParameters = true;\n                        break;\n                    default: {\n                        if (!this.between(nextChCode, 49 , 57 )) {\n                            break;\n                        }\n                        if (i === replaceString.length - 1) {\n                            this._hasParameters = true;\n                            break;\n                        }\n                        let charCode = replaceString.charCodeAt(++i);\n                        if (!this.between(charCode, 48 , 57 )) {\n                            this._hasParameters = true;\n                            --i;\n                            break;\n                        }\n                        if (i === replaceString.length - 1) {\n                            this._hasParameters = true;\n                            break;\n                        }\n                        charCode = replaceString.charCodeAt(++i);\n                        if (!this.between(charCode, 48 , 57 )) {\n                            this._hasParameters = true;\n                            --i;\n                            break;\n                        }\n                        break;\n                    }\n                }\n                if (replaceWithCharacter) {\n                    result += replaceString.substring(substrFrom, i - 1) + replaceWithCharacter;\n                    substrFrom = i + 1;\n                }\n            }\n        }\n        if (substrFrom === 0) {\n            return;\n        }\n        this._replacePattern = result + replaceString.substring(substrFrom);\n    }\n    between(value, from, to) {\n        return from <= value && value <= to;\n    }\n}\nexport { ReplacePattern };\n", "import { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { TextSearchMatch } from './search.js';\nfunction editorMatchToTextSearchResult(matches, model, previewOptions) {\n    const firstLine = matches[0].range.startLineNumber;\n    const lastLine = matches[matches.length - 1].range.endLineNumber;\n    const lineTexts = [];\n    for (let i = firstLine; i <= lastLine; i++) {\n        lineTexts.push(model.getLineContent(i));\n    }\n    return ( new TextSearchMatch(lineTexts.join('\\n') + '\\n', ( matches.map(m => ( new Range(\n        m.range.startLineNumber - 1,\n        m.range.startColumn - 1,\n        m.range.endLineNumber - 1,\n        m.range.endColumn - 1\n    )))), previewOptions));\n}\nfunction editorMatchesToTextSearchResults(matches, model, previewOptions) {\n    let previousEndLine = -1;\n    const groupedMatches = [];\n    let currentMatches = [];\n    matches.forEach((match) => {\n        if (match.range.startLineNumber !== previousEndLine) {\n            currentMatches = [];\n            groupedMatches.push(currentMatches);\n        }\n        currentMatches.push(match);\n        previousEndLine = match.range.endLineNumber;\n    });\n    return ( groupedMatches.map(sameLineMatches => {\n        return editorMatchToTextSearchResult(sameLineMatches, model, previewOptions);\n    }));\n}\nfunction addContextToEditorMatches(matches, model, query) {\n    const results = [];\n    let prevLine = -1;\n    for (let i = 0; i < matches.length; i++) {\n        const { start: matchStartLine, end: matchEndLine } = getMatchStartEnd(matches[i]);\n        if (typeof query.beforeContext === 'number' && query.beforeContext > 0) {\n            const beforeContextStartLine = Math.max(prevLine + 1, matchStartLine - query.beforeContext);\n            for (let b = beforeContextStartLine; b < matchStartLine; b++) {\n                results.push({\n                    text: model.getLineContent(b + 1),\n                    lineNumber: b\n                });\n            }\n        }\n        results.push(matches[i]);\n        const nextMatch = matches[i + 1];\n        const nextMatchStartLine = nextMatch ? getMatchStartEnd(nextMatch).start : Number.MAX_VALUE;\n        if (typeof query.afterContext === 'number' && query.afterContext > 0) {\n            const afterContextToLine = Math.min(nextMatchStartLine - 1, matchEndLine + query.afterContext, model.getLineCount() - 1);\n            for (let a = matchEndLine + 1; a <= afterContextToLine; a++) {\n                results.push({\n                    text: model.getLineContent(a + 1),\n                    lineNumber: a\n                });\n            }\n        }\n        prevLine = matchEndLine;\n    }\n    return results;\n}\nfunction getMatchStartEnd(match) {\n    const matchRanges = match.ranges;\n    const matchStartLine = Array.isArray(matchRanges) ? matchRanges[0].startLineNumber : matchRanges.startLineNumber;\n    const matchEndLine = Array.isArray(matchRanges) ? matchRanges[matchRanges.length - 1].endLineNumber : matchRanges.endLineNumber;\n    return {\n        start: matchStartLine,\n        end: matchEndLine\n    };\n}\nexport { addContextToEditorMatches, editorMatchesToTextSearchResults };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst INotebookEditorModelResolverService = ( createDecorator('INotebookModelResolverService'));\nexport { INotebookEditorModelResolverService };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Disposable, toDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IEditorService } from '../../editor/common/editorService.js';\nconst IWorkingCopyEditorService = ( createDecorator('workingCopyEditorService'));\nlet WorkingCopyEditorService = class WorkingCopyEditorService extends Disposable {\n    constructor(editorService) {\n        super();\n        this.editorService = editorService;\n        this._onDidRegisterHandler = this._register(( new Emitter()));\n        this.onDidRegisterHandler = this._onDidRegisterHandler.event;\n        this.handlers = ( new Set());\n    }\n    registerHandler(handler) {\n        this.handlers.add(handler);\n        this._onDidRegisterHandler.fire(handler);\n        return toDisposable(() => this.handlers.delete(handler));\n    }\n    findEditor(workingCopy) {\n        for (const editorIdentifier of this.editorService.getEditors(0 )) {\n            if (this.isOpen(workingCopy, editorIdentifier.editor)) {\n                return editorIdentifier;\n            }\n        }\n        return undefined;\n    }\n    isOpen(workingCopy, editor) {\n        for (const handler of this.handlers) {\n            if (handler.isOpen(workingCopy, editor)) {\n                return true;\n            }\n        }\n        return false;\n    }\n};\nWorkingCopyEditorService = ( __decorate([\n    ( __param(0, IEditorService))\n], WorkingCopyEditorService));\nexport { IWorkingCopyEditorService, WorkingCopyEditorService };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { RunOnceScheduler, runWhenIdle } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable, toDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { createDecorator, IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { userActivityRegistry } from './userActivityRegistry.js';\nconst IUserActivityService = ( createDecorator('IUserActivityService'));\nlet UserActivityService = class UserActivityService extends Disposable {\n    constructor(instantiationService) {\n        super();\n        this.markInactive = this._register(( new RunOnceScheduler(() => {\n            this.isActive = false;\n            this.changeEmitter.fire(false);\n        }, 10000)));\n        this.changeEmitter = this._register(( new Emitter()));\n        this.active = 0;\n        this.isActive = true;\n        this.onDidChangeIsActive = this.changeEmitter.event;\n        this._register(runWhenIdle(() => userActivityRegistry.take(this, instantiationService)));\n    }\n    markActive() {\n        if (++this.active === 1) {\n            this.isActive = true;\n            this.changeEmitter.fire(true);\n            this.markInactive.cancel();\n        }\n        return toDisposable(() => {\n            if (--this.active === 0) {\n                this.markInactive.schedule();\n            }\n        });\n    }\n};\nUserActivityService = ( __decorate([\n    ( __param(0, IInstantiationService))\n], UserActivityService));\nexport { IUserActivityService, UserActivityService };\n", "class UserActivityRegistry {\n    constructor() {\n        this.todo = [];\n        this.add = (ctor) => {\n            this.todo.push(ctor);\n        };\n    }\n    take(userActivityService, instantiation) {\n        this.add = ctor => instantiation.createInstance(ctor, userActivityService);\n        this.todo.forEach(this.add);\n        this.todo = [];\n    }\n}\nconst userActivityRegistry = ( new UserActivityRegistry());\nexport { userActivityRegistry };\n", "class CanonicalUriService {\n    constructor() {\n        this._providers = ( new Map());\n    }\n    registerCanonicalUriProvider(provider) {\n        this._providers.set(provider.scheme, provider);\n        return {\n            dispose: () => this._providers.delete(provider.scheme)\n        };\n    }\n    async provideCanonicalUri(uri, targetScheme, token) {\n        const provider = this._providers.get(uri.scheme);\n        if (provider) {\n            return provider.provideCanonicalUri(uri, targetScheme, token);\n        }\n        return undefined;\n    }\n}\nexport { CanonicalUriService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ICanonicalUriService = ( createDecorator('canonicalUriIdentityService'));\nexport { ICanonicalUriService };\n", "import { __decorate, __param } from '../../../../../../external/tslib/tslib.es6.js';\nimport { toDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IStatusbarService } from '../../services/statusbar/browser/statusbar.js';\nimport { getCodiconAriaLabel } from 'monaco-editor/esm/vs/base/common/iconLabels.js';\nimport { hash } from 'monaco-editor/esm/vs/base/common/hash.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { registerSingleton } from 'monaco-editor/esm/vs/platform/instantiation/common/extensions.js';\nimport { STATUS_BAR_WARNING_ITEM_BACKGROUND, STATUS_BAR_ERROR_ITEM_BACKGROUND } from '../../common/theme.js';\nconst IExtensionStatusBarItemService = ( createDecorator('IExtensionStatusBarItemService'));\nlet ExtensionStatusBarItemService = class ExtensionStatusBarItemService {\n    constructor(_statusbarService) {\n        this._statusbarService = _statusbarService;\n        this._entries = ( new Map());\n        this._onDidChange = ( new Emitter());\n        this.onDidChange = this._onDidChange.event;\n    }\n    dispose() {\n        this._entries.forEach(entry => entry.accessor.dispose());\n        this._entries.clear();\n        this._onDidChange.dispose();\n    }\n    setOrUpdateEntry(entryId, id, extensionId, name, text, tooltip, command, color, backgroundColor, alignLeft, priority, accessibilityInformation) {\n        let ariaLabel;\n        let role = undefined;\n        if (accessibilityInformation) {\n            ariaLabel = accessibilityInformation.label;\n            role = accessibilityInformation.role;\n        }\n        else {\n            ariaLabel = getCodiconAriaLabel(text);\n            if (tooltip) {\n                const tooltipString = typeof tooltip === 'string' ? tooltip : tooltip.value;\n                ariaLabel += `, ${tooltipString}`;\n            }\n        }\n        let kind = undefined;\n        switch (backgroundColor?.id) {\n            case STATUS_BAR_ERROR_ITEM_BACKGROUND:\n            case STATUS_BAR_WARNING_ITEM_BACKGROUND:\n                kind = backgroundColor.id === STATUS_BAR_ERROR_ITEM_BACKGROUND ? 'error' : 'warning';\n                color = undefined;\n                backgroundColor = undefined;\n        }\n        const entry = { name, text, tooltip, command, color, backgroundColor, ariaLabel, role, kind };\n        if (typeof priority === 'undefined') {\n            priority = 0;\n        }\n        let alignment = alignLeft ? 0  : 1 ;\n        const existingEntry = this._entries.get(entryId);\n        if (existingEntry) {\n            alignment = existingEntry.alignment;\n            priority = existingEntry.priority;\n        }\n        if (!existingEntry) {\n            let entryPriority;\n            if (typeof extensionId === 'string') {\n                entryPriority = { primary: priority, secondary: hash(extensionId) };\n            }\n            else {\n                entryPriority = priority;\n            }\n            const accessor = this._statusbarService.addEntry(entry, id, alignment, entryPriority);\n            this._entries.set(entryId, {\n                accessor,\n                entry,\n                alignment,\n                priority,\n                disposable: toDisposable(() => {\n                    accessor.dispose();\n                    this._entries.delete(entryId);\n                    this._onDidChange.fire({ removed: entryId });\n                })\n            });\n            this._onDidChange.fire({ added: [entryId, { entry, alignment, priority }] });\n            return 0 ;\n        }\n        else {\n            existingEntry.accessor.update(entry);\n            existingEntry.entry = entry;\n            return 1 ;\n        }\n    }\n    unsetEntry(entryId) {\n        this._entries.get(entryId)?.disposable.dispose();\n        this._entries.delete(entryId);\n    }\n    getEntries() {\n        return this._entries.entries();\n    }\n};\nExtensionStatusBarItemService = ( __decorate([\n    ( __param(0, IStatusbarService))\n], ExtensionStatusBarItemService));\nregisterSingleton(IExtensionStatusBarItemService, ExtensionStatusBarItemService, 1 );\nexport { ExtensionStatusBarItemService, IExtensionStatusBarItemService };\n", "import { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { registerColor, editorBackground, transparent, contrastBorder, treeIndentGuidesStroke, focusBorder, editorWidgetForeground, editorWidgetBackground, editorForeground, inputBorder, listActiveSelectionBackground, darken, listActiveSelectionForeground, editorInfoForeground, activeContrastBorder, errorForeground, editorWarningForeground, toolbarHoverBackground, widgetBorder, textLinkForeground, lighten, editorErrorForeground } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { Color } from 'monaco-editor/esm/vs/base/common/color.js';\nimport { ColorScheme } from 'monaco-editor/esm/vs/platform/theme/common/theme.js';\nfunction WORKBENCH_BACKGROUND(theme) {\n    switch (theme.type) {\n        case ColorScheme.LIGHT:\n            return ( Color.fromHex('#F3F3F3'));\n        case ColorScheme.HIGH_CONTRAST_LIGHT:\n            return ( Color.fromHex('#FFFFFF'));\n        case ColorScheme.HIGH_CONTRAST_DARK:\n            return ( Color.fromHex('#000000'));\n        default:\n            return ( Color.fromHex('#252526'));\n    }\n}\nconst TAB_ACTIVE_BACKGROUND = registerColor('tab.activeBackground', {\n    dark: editorBackground,\n    light: editorBackground,\n    hcDark: editorBackground,\n    hcLight: editorBackground\n}, ( localize(\n    'tabActiveBackground',\n    \"Active tab background color in an active group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_UNFOCUSED_ACTIVE_BACKGROUND = registerColor('tab.unfocusedActiveBackground', {\n    dark: TAB_ACTIVE_BACKGROUND,\n    light: TAB_ACTIVE_BACKGROUND,\n    hcDark: TAB_ACTIVE_BACKGROUND,\n    hcLight: TAB_ACTIVE_BACKGROUND,\n}, ( localize(\n    'tabUnfocusedActiveBackground',\n    \"Active tab background color in an unfocused group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_INACTIVE_BACKGROUND = registerColor('tab.inactiveBackground', {\n    dark: '#2D2D2D',\n    light: '#ECECEC',\n    hcDark: null,\n    hcLight: null,\n}, ( localize(\n    'tabInactiveBackground',\n    \"Inactive tab background color in an active group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_UNFOCUSED_INACTIVE_BACKGROUND = registerColor('tab.unfocusedInactiveBackground', {\n    dark: TAB_INACTIVE_BACKGROUND,\n    light: TAB_INACTIVE_BACKGROUND,\n    hcDark: TAB_INACTIVE_BACKGROUND,\n    hcLight: TAB_INACTIVE_BACKGROUND\n}, ( localize(\n    'tabUnfocusedInactiveBackground',\n    \"Inactive tab background color in an unfocused group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_ACTIVE_FOREGROUND = registerColor('tab.activeForeground', {\n    dark: Color.white,\n    light: '#333333',\n    hcDark: Color.white,\n    hcLight: '#292929'\n}, ( localize(\n    'tabActiveForeground',\n    \"Active tab foreground color in an active group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_INACTIVE_FOREGROUND = registerColor('tab.inactiveForeground', {\n    dark: ( transparent(TAB_ACTIVE_FOREGROUND, 0.5)),\n    light: ( transparent(TAB_ACTIVE_FOREGROUND, 0.7)),\n    hcDark: Color.white,\n    hcLight: '#292929'\n}, ( localize(\n    'tabInactiveForeground',\n    \"Inactive tab foreground color in an active group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_UNFOCUSED_ACTIVE_FOREGROUND = registerColor('tab.unfocusedActiveForeground', {\n    dark: ( transparent(TAB_ACTIVE_FOREGROUND, 0.5)),\n    light: ( transparent(TAB_ACTIVE_FOREGROUND, 0.7)),\n    hcDark: Color.white,\n    hcLight: '#292929'\n}, ( localize(\n    'tabUnfocusedActiveForeground',\n    \"Active tab foreground color in an unfocused group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_UNFOCUSED_INACTIVE_FOREGROUND = registerColor('tab.unfocusedInactiveForeground', {\n    dark: ( transparent(TAB_INACTIVE_FOREGROUND, 0.5)),\n    light: ( transparent(TAB_INACTIVE_FOREGROUND, 0.5)),\n    hcDark: Color.white,\n    hcLight: '#292929'\n}, ( localize(\n    'tabUnfocusedInactiveForeground',\n    \"Inactive tab foreground color in an unfocused group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_HOVER_BACKGROUND = registerColor('tab.hoverBackground', {\n    dark: null,\n    light: null,\n    hcDark: null,\n    hcLight: null\n}, ( localize(\n    'tabHoverBackground',\n    \"Tab background color when hovering. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_UNFOCUSED_HOVER_BACKGROUND = registerColor('tab.unfocusedHoverBackground', {\n    dark: ( transparent(TAB_HOVER_BACKGROUND, 0.5)),\n    light: ( transparent(TAB_HOVER_BACKGROUND, 0.7)),\n    hcDark: null,\n    hcLight: null\n}, ( localize(\n    'tabUnfocusedHoverBackground',\n    \"Tab background color in an unfocused group when hovering. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_HOVER_FOREGROUND = registerColor('tab.hoverForeground', {\n    dark: null,\n    light: null,\n    hcDark: null,\n    hcLight: null,\n}, ( localize(\n    'tabHoverForeground',\n    \"Tab foreground color when hovering. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_UNFOCUSED_HOVER_FOREGROUND = registerColor('tab.unfocusedHoverForeground', {\n    dark: ( transparent(TAB_HOVER_FOREGROUND, 0.5)),\n    light: ( transparent(TAB_HOVER_FOREGROUND, 0.5)),\n    hcDark: null,\n    hcLight: null\n}, ( localize(\n    'tabUnfocusedHoverForeground',\n    \"Tab foreground color in an unfocused group when hovering. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_BORDER = registerColor('tab.border', {\n    dark: '#252526',\n    light: '#F3F3F3',\n    hcDark: contrastBorder,\n    hcLight: contrastBorder,\n}, ( localize(\n    'tabBorder',\n    \"Border to separate tabs from each other. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_LAST_PINNED_BORDER = registerColor('tab.lastPinnedBorder', {\n    dark: treeIndentGuidesStroke,\n    light: treeIndentGuidesStroke,\n    hcDark: contrastBorder,\n    hcLight: contrastBorder\n}, ( localize(\n    'lastPinnedTabBorder',\n    \"Border to separate pinned tabs from other tabs. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_ACTIVE_BORDER = registerColor('tab.activeBorder', {\n    dark: null,\n    light: null,\n    hcDark: null,\n    hcLight: null\n}, ( localize(\n    'tabActiveBorder',\n    \"Border on the bottom of an active tab. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_UNFOCUSED_ACTIVE_BORDER = registerColor('tab.unfocusedActiveBorder', {\n    dark: ( transparent(TAB_ACTIVE_BORDER, 0.5)),\n    light: ( transparent(TAB_ACTIVE_BORDER, 0.7)),\n    hcDark: null,\n    hcLight: null\n}, ( localize(\n    'tabActiveUnfocusedBorder',\n    \"Border on the bottom of an active tab in an unfocused group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_ACTIVE_BORDER_TOP = registerColor('tab.activeBorderTop', {\n    dark: null,\n    light: null,\n    hcDark: null,\n    hcLight: '#B5200D'\n}, ( localize(\n    'tabActiveBorderTop',\n    \"Border to the top of an active tab. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_UNFOCUSED_ACTIVE_BORDER_TOP = registerColor('tab.unfocusedActiveBorderTop', {\n    dark: ( transparent(TAB_ACTIVE_BORDER_TOP, 0.5)),\n    light: ( transparent(TAB_ACTIVE_BORDER_TOP, 0.7)),\n    hcDark: null,\n    hcLight: '#B5200D'\n}, ( localize(\n    'tabActiveUnfocusedBorderTop',\n    \"Border to the top of an active tab in an unfocused group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_HOVER_BORDER = registerColor('tab.hoverBorder', {\n    dark: null,\n    light: null,\n    hcDark: null,\n    hcLight: null\n}, ( localize(\n    'tabHoverBorder',\n    \"Border to highlight tabs when hovering. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_UNFOCUSED_HOVER_BORDER = registerColor('tab.unfocusedHoverBorder', {\n    dark: ( transparent(TAB_HOVER_BORDER, 0.5)),\n    light: ( transparent(TAB_HOVER_BORDER, 0.7)),\n    hcDark: null,\n    hcLight: contrastBorder\n}, ( localize(\n    'tabUnfocusedHoverBorder',\n    \"Border to highlight tabs in an unfocused group when hovering. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_ACTIVE_MODIFIED_BORDER = registerColor('tab.activeModifiedBorder', {\n    dark: '#3399CC',\n    light: '#33AAEE',\n    hcDark: null,\n    hcLight: contrastBorder\n}, ( localize(\n    'tabActiveModifiedBorder',\n    \"Border on the top of modified active tabs in an active group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_INACTIVE_MODIFIED_BORDER = registerColor('tab.inactiveModifiedBorder', {\n    dark: ( transparent(TAB_ACTIVE_MODIFIED_BORDER, 0.5)),\n    light: ( transparent(TAB_ACTIVE_MODIFIED_BORDER, 0.5)),\n    hcDark: Color.white,\n    hcLight: contrastBorder\n}, ( localize(\n    'tabInactiveModifiedBorder',\n    \"Border on the top of modified inactive tabs in an active group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_UNFOCUSED_ACTIVE_MODIFIED_BORDER = registerColor('tab.unfocusedActiveModifiedBorder', {\n    dark: ( transparent(TAB_ACTIVE_MODIFIED_BORDER, 0.5)),\n    light: ( transparent(TAB_ACTIVE_MODIFIED_BORDER, 0.7)),\n    hcDark: Color.white,\n    hcLight: contrastBorder\n}, ( localize(\n    'unfocusedActiveModifiedBorder',\n    \"Border on the top of modified active tabs in an unfocused group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst TAB_UNFOCUSED_INACTIVE_MODIFIED_BORDER = registerColor('tab.unfocusedInactiveModifiedBorder', {\n    dark: ( transparent(TAB_INACTIVE_MODIFIED_BORDER, 0.5)),\n    light: ( transparent(TAB_INACTIVE_MODIFIED_BORDER, 0.5)),\n    hcDark: Color.white,\n    hcLight: contrastBorder\n}, ( localize(\n    'unfocusedINactiveModifiedBorder',\n    \"Border on the top of modified inactive tabs in an unfocused group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.\"\n)));\nconst EDITOR_PANE_BACKGROUND = registerColor('editorPane.background', {\n    dark: editorBackground,\n    light: editorBackground,\n    hcDark: editorBackground,\n    hcLight: editorBackground\n}, ( localize(\n    'editorPaneBackground',\n    \"Background color of the editor pane visible on the left and right side of the centered editor layout.\"\n)));\nconst EDITOR_GROUP_EMPTY_BACKGROUND = registerColor('editorGroup.emptyBackground', {\n    dark: null,\n    light: null,\n    hcDark: null,\n    hcLight: null\n}, ( localize(\n    'editorGroupEmptyBackground',\n    \"Background color of an empty editor group. Editor groups are the containers of editors.\"\n)));\nregisterColor('editorGroup.focusedEmptyBorder', {\n    dark: null,\n    light: null,\n    hcDark: focusBorder,\n    hcLight: focusBorder\n}, ( localize(\n    'editorGroupFocusedEmptyBorder',\n    \"Border color of an empty editor group that is focused. Editor groups are the containers of editors.\"\n)));\nconst EDITOR_GROUP_HEADER_TABS_BACKGROUND = registerColor('editorGroupHeader.tabsBackground', {\n    dark: '#252526',\n    light: '#F3F3F3',\n    hcDark: null,\n    hcLight: null\n}, ( localize(\n    'tabsContainerBackground',\n    \"Background color of the editor group title header when tabs are enabled. Editor groups are the containers of editors.\"\n)));\nconst EDITOR_GROUP_HEADER_TABS_BORDER = registerColor('editorGroupHeader.tabsBorder', {\n    dark: null,\n    light: null,\n    hcDark: null,\n    hcLight: null\n}, ( localize(\n    'tabsContainerBorder',\n    \"Border color of the editor group title header when tabs are enabled. Editor groups are the containers of editors.\"\n)));\nconst EDITOR_GROUP_HEADER_NO_TABS_BACKGROUND = registerColor('editorGroupHeader.noTabsBackground', {\n    dark: editorBackground,\n    light: editorBackground,\n    hcDark: editorBackground,\n    hcLight: editorBackground\n}, ( localize(\n    'editorGroupHeaderBackground',\n    \"Background color of the editor group title header when tabs are disabled (`\\\"workbench.editor.showTabs\\\": false`). Editor groups are the containers of editors.\"\n)));\nconst EDITOR_GROUP_HEADER_BORDER = registerColor('editorGroupHeader.border', {\n    dark: null,\n    light: null,\n    hcDark: contrastBorder,\n    hcLight: contrastBorder\n}, ( localize(\n    'editorTitleContainerBorder',\n    \"Border color of the editor group title header. Editor groups are the containers of editors.\"\n)));\nconst EDITOR_GROUP_BORDER = registerColor('editorGroup.border', {\n    dark: '#444444',\n    light: '#E7E7E7',\n    hcDark: contrastBorder,\n    hcLight: contrastBorder\n}, ( localize(\n    'editorGroupBorder',\n    \"Color to separate multiple editor groups from each other. Editor groups are the containers of editors.\"\n)));\nconst EDITOR_DRAG_AND_DROP_BACKGROUND = registerColor('editorGroup.dropBackground', {\n    dark: ( ( Color.fromHex('#53595D')).transparent(0.5)),\n    light: ( ( Color.fromHex('#2677CB')).transparent(0.18)),\n    hcDark: null,\n    hcLight: ( ( Color.fromHex('#0F4A85')).transparent(0.50))\n}, ( localize(\n    'editorDragAndDropBackground',\n    \"Background color when dragging editors around. The color should have transparency so that the editor contents can still shine through.\"\n)));\nconst EDITOR_DROP_INTO_PROMPT_FOREGROUND = registerColor('editorGroup.dropIntoPromptForeground', {\n    dark: editorWidgetForeground,\n    light: editorWidgetForeground,\n    hcDark: editorWidgetForeground,\n    hcLight: editorWidgetForeground\n}, ( localize(\n    'editorDropIntoPromptForeground',\n    \"Foreground color of text shown over editors when dragging files. This text informs the user that they can hold shift to drop into the editor.\"\n)));\nconst EDITOR_DROP_INTO_PROMPT_BACKGROUND = registerColor('editorGroup.dropIntoPromptBackground', {\n    dark: editorWidgetBackground,\n    light: editorWidgetBackground,\n    hcDark: editorWidgetBackground,\n    hcLight: editorWidgetBackground\n}, ( localize(\n    'editorDropIntoPromptBackground',\n    \"Background color of text shown over editors when dragging files. This text informs the user that they can hold shift to drop into the editor.\"\n)));\nconst EDITOR_DROP_INTO_PROMPT_BORDER = registerColor('editorGroup.dropIntoPromptBorder', {\n    dark: null,\n    light: null,\n    hcDark: contrastBorder,\n    hcLight: contrastBorder\n}, ( localize(\n    'editorDropIntoPromptBorder',\n    \"Border color of text shown over editors when dragging files. This text informs the user that they can hold shift to drop into the editor.\"\n)));\nconst SIDE_BY_SIDE_EDITOR_HORIZONTAL_BORDER = registerColor('sideBySideEditor.horizontalBorder', {\n    dark: EDITOR_GROUP_BORDER,\n    light: EDITOR_GROUP_BORDER,\n    hcDark: EDITOR_GROUP_BORDER,\n    hcLight: EDITOR_GROUP_BORDER\n}, ( localize(\n    'sideBySideEditor.horizontalBorder',\n    \"Color to separate two editors from each other when shown side by side in an editor group from top to bottom.\"\n)));\nconst SIDE_BY_SIDE_EDITOR_VERTICAL_BORDER = registerColor('sideBySideEditor.verticalBorder', {\n    dark: EDITOR_GROUP_BORDER,\n    light: EDITOR_GROUP_BORDER,\n    hcDark: EDITOR_GROUP_BORDER,\n    hcLight: EDITOR_GROUP_BORDER\n}, ( localize(\n    'sideBySideEditor.verticalBorder',\n    \"Color to separate two editors from each other when shown side by side in an editor group from left to right.\"\n)));\nconst PANEL_BACKGROUND = registerColor('panel.background', {\n    dark: editorBackground,\n    light: editorBackground,\n    hcDark: editorBackground,\n    hcLight: editorBackground\n}, ( localize(\n    'panelBackground',\n    \"Panel background color. Panels are shown below the editor area and contain views like output and integrated terminal.\"\n)));\nconst PANEL_BORDER = registerColor('panel.border', {\n    dark: ( ( Color.fromHex('#808080')).transparent(0.35)),\n    light: ( ( Color.fromHex('#808080')).transparent(0.35)),\n    hcDark: contrastBorder,\n    hcLight: contrastBorder\n}, ( localize(\n    'panelBorder',\n    \"Panel border color to separate the panel from the editor. Panels are shown below the editor area and contain views like output and integrated terminal.\"\n)));\nconst PANEL_ACTIVE_TITLE_FOREGROUND = registerColor('panelTitle.activeForeground', {\n    dark: '#E7E7E7',\n    light: '#424242',\n    hcDark: Color.white,\n    hcLight: editorForeground\n}, ( localize(\n    'panelActiveTitleForeground',\n    \"Title color for the active panel. Panels are shown below the editor area and contain views like output and integrated terminal.\"\n)));\nconst PANEL_INACTIVE_TITLE_FOREGROUND = registerColor('panelTitle.inactiveForeground', {\n    dark: ( transparent(PANEL_ACTIVE_TITLE_FOREGROUND, 0.6)),\n    light: ( transparent(PANEL_ACTIVE_TITLE_FOREGROUND, 0.75)),\n    hcDark: Color.white,\n    hcLight: editorForeground\n}, ( localize(\n    'panelInactiveTitleForeground',\n    \"Title color for the inactive panel. Panels are shown below the editor area and contain views like output and integrated terminal.\"\n)));\nconst PANEL_ACTIVE_TITLE_BORDER = registerColor('panelTitle.activeBorder', {\n    dark: PANEL_ACTIVE_TITLE_FOREGROUND,\n    light: PANEL_ACTIVE_TITLE_FOREGROUND,\n    hcDark: contrastBorder,\n    hcLight: '#B5200D'\n}, ( localize(\n    'panelActiveTitleBorder',\n    \"Border color for the active panel title. Panels are shown below the editor area and contain views like output and integrated terminal.\"\n)));\nregisterColor('panelInput.border', {\n    dark: inputBorder,\n    light: ( Color.fromHex('#ddd')),\n    hcDark: inputBorder,\n    hcLight: inputBorder\n}, ( localize('panelInputBorder', \"Input box border for inputs in the panel.\")));\nconst PANEL_DRAG_AND_DROP_BORDER = registerColor('panel.dropBorder', {\n    dark: PANEL_ACTIVE_TITLE_FOREGROUND,\n    light: PANEL_ACTIVE_TITLE_FOREGROUND,\n    hcDark: PANEL_ACTIVE_TITLE_FOREGROUND,\n    hcLight: PANEL_ACTIVE_TITLE_FOREGROUND\n}, ( localize(\n    'panelDragAndDropBorder',\n    \"Drag and drop feedback color for the panel titles. Panels are shown below the editor area and contain views like output and integrated terminal.\"\n)));\nconst PANEL_SECTION_DRAG_AND_DROP_BACKGROUND = registerColor('panelSection.dropBackground', {\n    dark: EDITOR_DRAG_AND_DROP_BACKGROUND,\n    light: EDITOR_DRAG_AND_DROP_BACKGROUND,\n    hcDark: EDITOR_DRAG_AND_DROP_BACKGROUND,\n    hcLight: EDITOR_DRAG_AND_DROP_BACKGROUND\n}, ( localize(\n    'panelSectionDragAndDropBackground',\n    \"Drag and drop feedback color for the panel sections. The color should have transparency so that the panel sections can still shine through. Panels are shown below the editor area and contain views like output and integrated terminal. Panel sections are views nested within the panels.\"\n)));\nconst PANEL_SECTION_HEADER_BACKGROUND = registerColor('panelSectionHeader.background', {\n    dark: ( ( Color.fromHex('#808080')).transparent(0.2)),\n    light: ( ( Color.fromHex('#808080')).transparent(0.2)),\n    hcDark: null,\n    hcLight: null,\n}, ( localize(\n    'panelSectionHeaderBackground',\n    \"Panel section header background color. Panels are shown below the editor area and contain views like output and integrated terminal. Panel sections are views nested within the panels.\"\n)));\nconst PANEL_SECTION_HEADER_FOREGROUND = registerColor('panelSectionHeader.foreground', {\n    dark: null,\n    light: null,\n    hcDark: null,\n    hcLight: null\n}, ( localize(\n    'panelSectionHeaderForeground',\n    \"Panel section header foreground color. Panels are shown below the editor area and contain views like output and integrated terminal. Panel sections are views nested within the panels.\"\n)));\nconst PANEL_SECTION_HEADER_BORDER = registerColor('panelSectionHeader.border', {\n    dark: contrastBorder,\n    light: contrastBorder,\n    hcDark: contrastBorder,\n    hcLight: contrastBorder\n}, ( localize(\n    'panelSectionHeaderBorder',\n    \"Panel section header border color used when multiple views are stacked vertically in the panel. Panels are shown below the editor area and contain views like output and integrated terminal. Panel sections are views nested within the panels.\"\n)));\nconst PANEL_SECTION_BORDER = registerColor('panelSection.border', {\n    dark: PANEL_BORDER,\n    light: PANEL_BORDER,\n    hcDark: PANEL_BORDER,\n    hcLight: PANEL_BORDER\n}, ( localize(\n    'panelSectionBorder',\n    \"Panel section border color used when multiple views are stacked horizontally in the panel. Panels are shown below the editor area and contain views like output and integrated terminal. Panel sections are views nested within the panels.\"\n)));\nregisterColor('banner.background', {\n    dark: listActiveSelectionBackground,\n    light: ( darken(listActiveSelectionBackground, 0.3)),\n    hcDark: listActiveSelectionBackground,\n    hcLight: listActiveSelectionBackground\n}, ( localize(\n    'banner.background',\n    \"Banner background color. The banner is shown under the title bar of the window.\"\n)));\nregisterColor('banner.foreground', {\n    dark: listActiveSelectionForeground,\n    light: listActiveSelectionForeground,\n    hcDark: listActiveSelectionForeground,\n    hcLight: listActiveSelectionForeground\n}, ( localize(\n    'banner.foreground',\n    \"Banner foreground color. The banner is shown under the title bar of the window.\"\n)));\nregisterColor('banner.iconForeground', {\n    dark: editorInfoForeground,\n    light: editorInfoForeground,\n    hcDark: editorInfoForeground,\n    hcLight: editorInfoForeground\n}, ( localize(\n    'banner.iconForeground',\n    \"Banner icon color. The banner is shown under the title bar of the window.\"\n)));\nconst STATUS_BAR_FOREGROUND = registerColor('statusBar.foreground', {\n    dark: '#FFFFFF',\n    light: '#FFFFFF',\n    hcDark: '#FFFFFF',\n    hcLight: editorForeground\n}, ( localize(\n    'statusBarForeground',\n    \"Status bar foreground color when a workspace or folder is opened. The status bar is shown in the bottom of the window.\"\n)));\nconst STATUS_BAR_NO_FOLDER_FOREGROUND = registerColor('statusBar.noFolderForeground', {\n    dark: STATUS_BAR_FOREGROUND,\n    light: STATUS_BAR_FOREGROUND,\n    hcDark: STATUS_BAR_FOREGROUND,\n    hcLight: STATUS_BAR_FOREGROUND\n}, ( localize(\n    'statusBarNoFolderForeground',\n    \"Status bar foreground color when no folder is opened. The status bar is shown in the bottom of the window.\"\n)));\nconst STATUS_BAR_BACKGROUND = registerColor('statusBar.background', {\n    dark: '#007ACC',\n    light: '#007ACC',\n    hcDark: null,\n    hcLight: null,\n}, ( localize(\n    'statusBarBackground',\n    \"Status bar background color when a workspace or folder is opened. The status bar is shown in the bottom of the window.\"\n)));\nconst STATUS_BAR_NO_FOLDER_BACKGROUND = registerColor('statusBar.noFolderBackground', {\n    dark: '#68217A',\n    light: '#68217A',\n    hcDark: null,\n    hcLight: null,\n}, ( localize(\n    'statusBarNoFolderBackground',\n    \"Status bar background color when no folder is opened. The status bar is shown in the bottom of the window.\"\n)));\nconst STATUS_BAR_BORDER = registerColor('statusBar.border', {\n    dark: null,\n    light: null,\n    hcDark: contrastBorder,\n    hcLight: contrastBorder\n}, ( localize(\n    'statusBarBorder',\n    \"Status bar border color separating to the sidebar and editor. The status bar is shown in the bottom of the window.\"\n)));\nconst STATUS_BAR_FOCUS_BORDER = registerColor('statusBar.focusBorder', {\n    dark: STATUS_BAR_FOREGROUND,\n    light: STATUS_BAR_FOREGROUND,\n    hcDark: null,\n    hcLight: STATUS_BAR_FOREGROUND\n}, ( localize(\n    'statusBarFocusBorder',\n    \"Status bar border color when focused on keyboard navigation. The status bar is shown in the bottom of the window.\"\n)));\nconst STATUS_BAR_NO_FOLDER_BORDER = registerColor('statusBar.noFolderBorder', {\n    dark: STATUS_BAR_BORDER,\n    light: STATUS_BAR_BORDER,\n    hcDark: STATUS_BAR_BORDER,\n    hcLight: STATUS_BAR_BORDER\n}, ( localize(\n    'statusBarNoFolderBorder',\n    \"Status bar border color separating to the sidebar and editor when no folder is opened. The status bar is shown in the bottom of the window.\"\n)));\nregisterColor('statusBarItem.activeBackground', {\n    dark: ( Color.white.transparent(0.18)),\n    light: ( Color.white.transparent(0.18)),\n    hcDark: ( Color.white.transparent(0.18)),\n    hcLight: ( Color.black.transparent(0.18))\n}, ( localize(\n    'statusBarItemActiveBackground',\n    \"Status bar item background color when clicking. The status bar is shown in the bottom of the window.\"\n)));\nconst STATUS_BAR_ITEM_FOCUS_BORDER = registerColor('statusBarItem.focusBorder', {\n    dark: STATUS_BAR_FOREGROUND,\n    light: STATUS_BAR_FOREGROUND,\n    hcDark: null,\n    hcLight: activeContrastBorder\n}, ( localize(\n    'statusBarItemFocusBorder',\n    \"Status bar item border color when focused on keyboard navigation. The status bar is shown in the bottom of the window.\"\n)));\nconst STATUS_BAR_ITEM_HOVER_BACKGROUND = registerColor('statusBarItem.hoverBackground', {\n    dark: ( Color.white.transparent(0.12)),\n    light: ( Color.white.transparent(0.12)),\n    hcDark: ( Color.white.transparent(0.12)),\n    hcLight: ( Color.black.transparent(0.12))\n}, ( localize(\n    'statusBarItemHoverBackground',\n    \"Status bar item background color when hovering. The status bar is shown in the bottom of the window.\"\n)));\nconst STATUS_BAR_ITEM_HOVER_FOREGROUND = registerColor('statusBarItem.hoverForeground', {\n    dark: STATUS_BAR_FOREGROUND,\n    light: STATUS_BAR_FOREGROUND,\n    hcDark: STATUS_BAR_FOREGROUND,\n    hcLight: STATUS_BAR_FOREGROUND\n}, ( localize(\n    'statusBarItemHoverForeground',\n    \"Status bar item foreground color when hovering. The status bar is shown in the bottom of the window.\"\n)));\nconst STATUS_BAR_ITEM_COMPACT_HOVER_BACKGROUND = registerColor('statusBarItem.compactHoverBackground', {\n    dark: ( Color.white.transparent(0.20)),\n    light: ( Color.white.transparent(0.20)),\n    hcDark: ( Color.white.transparent(0.20)),\n    hcLight: ( Color.black.transparent(0.20))\n}, ( localize(\n    'statusBarItemCompactHoverBackground',\n    \"Status bar item background color when hovering an item that contains two hovers. The status bar is shown in the bottom of the window.\"\n)));\nregisterColor('statusBarItem.prominentForeground', {\n    dark: STATUS_BAR_FOREGROUND,\n    light: STATUS_BAR_FOREGROUND,\n    hcDark: STATUS_BAR_FOREGROUND,\n    hcLight: STATUS_BAR_FOREGROUND\n}, ( localize(\n    'statusBarProminentItemForeground',\n    \"Status bar prominent items foreground color. Prominent items stand out from other status bar entries to indicate importance. The status bar is shown in the bottom of the window.\"\n)));\nregisterColor('statusBarItem.prominentBackground', {\n    dark: ( Color.black.transparent(0.5)),\n    light: ( Color.black.transparent(0.5)),\n    hcDark: ( Color.black.transparent(0.5)),\n    hcLight: ( Color.black.transparent(0.5)),\n}, ( localize(\n    'statusBarProminentItemBackground',\n    \"Status bar prominent items background color. Prominent items stand out from other status bar entries to indicate importance. The status bar is shown in the bottom of the window.\"\n)));\nregisterColor('statusBarItem.prominentHoverForeground', {\n    dark: STATUS_BAR_ITEM_HOVER_FOREGROUND,\n    light: STATUS_BAR_ITEM_HOVER_FOREGROUND,\n    hcDark: STATUS_BAR_ITEM_HOVER_FOREGROUND,\n    hcLight: STATUS_BAR_ITEM_HOVER_FOREGROUND\n}, ( localize(\n    'statusBarProminentItemHoverForeground',\n    \"Status bar prominent items foreground color when hovering. Prominent items stand out from other status bar entries to indicate importance. The status bar is shown in the bottom of the window.\"\n)));\nregisterColor('statusBarItem.prominentHoverBackground', {\n    dark: ( Color.black.transparent(0.3)),\n    light: ( Color.black.transparent(0.3)),\n    hcDark: ( Color.black.transparent(0.3)),\n    hcLight: null\n}, ( localize(\n    'statusBarProminentItemHoverBackground',\n    \"Status bar prominent items background color when hovering. Prominent items stand out from other status bar entries to indicate importance. The status bar is shown in the bottom of the window.\"\n)));\nconst STATUS_BAR_ERROR_ITEM_BACKGROUND = registerColor('statusBarItem.errorBackground', {\n    dark: ( darken(errorForeground, .4)),\n    light: ( darken(errorForeground, .4)),\n    hcDark: null,\n    hcLight: '#B5200D'\n}, ( localize(\n    'statusBarErrorItemBackground',\n    \"Status bar error items background color. Error items stand out from other status bar entries to indicate error conditions. The status bar is shown in the bottom of the window.\"\n)));\nregisterColor('statusBarItem.errorForeground', {\n    dark: Color.white,\n    light: Color.white,\n    hcDark: Color.white,\n    hcLight: Color.white\n}, ( localize(\n    'statusBarErrorItemForeground',\n    \"Status bar error items foreground color. Error items stand out from other status bar entries to indicate error conditions. The status bar is shown in the bottom of the window.\"\n)));\nregisterColor('statusBarItem.errorHoverForeground', {\n    dark: STATUS_BAR_ITEM_HOVER_FOREGROUND,\n    light: STATUS_BAR_ITEM_HOVER_FOREGROUND,\n    hcDark: STATUS_BAR_ITEM_HOVER_FOREGROUND,\n    hcLight: STATUS_BAR_ITEM_HOVER_FOREGROUND\n}, ( localize(\n    'statusBarErrorItemHoverForeground',\n    \"Status bar error items foreground color when hovering. Error items stand out from other status bar entries to indicate error conditions. The status bar is shown in the bottom of the window.\"\n)));\nregisterColor('statusBarItem.errorHoverBackground', {\n    dark: STATUS_BAR_ITEM_HOVER_BACKGROUND,\n    light: STATUS_BAR_ITEM_HOVER_BACKGROUND,\n    hcDark: STATUS_BAR_ITEM_HOVER_BACKGROUND,\n    hcLight: STATUS_BAR_ITEM_HOVER_BACKGROUND\n}, ( localize(\n    'statusBarErrorItemHoverBackground',\n    \"Status bar error items background color when hovering. Error items stand out from other status bar entries to indicate error conditions. The status bar is shown in the bottom of the window.\"\n)));\nconst STATUS_BAR_WARNING_ITEM_BACKGROUND = registerColor('statusBarItem.warningBackground', {\n    dark: ( darken(editorWarningForeground, .4)),\n    light: ( darken(editorWarningForeground, .4)),\n    hcDark: null,\n    hcLight: '#895503'\n}, ( localize(\n    'statusBarWarningItemBackground',\n    \"Status bar warning items background color. Warning items stand out from other status bar entries to indicate warning conditions. The status bar is shown in the bottom of the window.\"\n)));\nregisterColor('statusBarItem.warningForeground', {\n    dark: Color.white,\n    light: Color.white,\n    hcDark: Color.white,\n    hcLight: Color.white\n}, ( localize(\n    'statusBarWarningItemForeground',\n    \"Status bar warning items foreground color. Warning items stand out from other status bar entries to indicate warning conditions. The status bar is shown in the bottom of the window.\"\n)));\nregisterColor('statusBarItem.warningHoverForeground', {\n    dark: STATUS_BAR_ITEM_HOVER_FOREGROUND,\n    light: STATUS_BAR_ITEM_HOVER_FOREGROUND,\n    hcDark: STATUS_BAR_ITEM_HOVER_FOREGROUND,\n    hcLight: STATUS_BAR_ITEM_HOVER_FOREGROUND\n}, ( localize(\n    'statusBarWarningItemHoverForeground',\n    \"Status bar warning items foreground color when hovering. Warning items stand out from other status bar entries to indicate warning conditions. The status bar is shown in the bottom of the window.\"\n)));\nregisterColor('statusBarItem.warningHoverBackground', {\n    dark: STATUS_BAR_ITEM_HOVER_BACKGROUND,\n    light: STATUS_BAR_ITEM_HOVER_BACKGROUND,\n    hcDark: STATUS_BAR_ITEM_HOVER_BACKGROUND,\n    hcLight: STATUS_BAR_ITEM_HOVER_BACKGROUND\n}, ( localize(\n    'statusBarWarningItemHoverBackground',\n    \"Status bar warning items background color when hovering. Warning items stand out from other status bar entries to indicate warning conditions. The status bar is shown in the bottom of the window.\"\n)));\nconst ACTIVITY_BAR_BACKGROUND = registerColor('activityBar.background', {\n    dark: '#333333',\n    light: '#2C2C2C',\n    hcDark: '#000000',\n    hcLight: '#FFFFFF'\n}, ( localize(\n    'activityBarBackground',\n    \"Activity bar background color. The activity bar is showing on the far left or right and allows to switch between views of the side bar.\"\n)));\nconst ACTIVITY_BAR_FOREGROUND = registerColor('activityBar.foreground', {\n    dark: Color.white,\n    light: Color.white,\n    hcDark: Color.white,\n    hcLight: editorForeground\n}, ( localize(\n    'activityBarForeground',\n    \"Activity bar item foreground color when it is active. The activity bar is showing on the far left or right and allows to switch between views of the side bar.\"\n)));\nconst ACTIVITY_BAR_INACTIVE_FOREGROUND = registerColor('activityBar.inactiveForeground', {\n    dark: ( transparent(ACTIVITY_BAR_FOREGROUND, 0.4)),\n    light: ( transparent(ACTIVITY_BAR_FOREGROUND, 0.4)),\n    hcDark: Color.white,\n    hcLight: editorForeground\n}, ( localize(\n    'activityBarInActiveForeground',\n    \"Activity bar item foreground color when it is inactive. The activity bar is showing on the far left or right and allows to switch between views of the side bar.\"\n)));\nconst ACTIVITY_BAR_BORDER = registerColor('activityBar.border', {\n    dark: null,\n    light: null,\n    hcDark: contrastBorder,\n    hcLight: contrastBorder\n}, ( localize(\n    'activityBarBorder',\n    \"Activity bar border color separating to the side bar. The activity bar is showing on the far left or right and allows to switch between views of the side bar.\"\n)));\nconst ACTIVITY_BAR_ACTIVE_BORDER = registerColor('activityBar.activeBorder', {\n    dark: ACTIVITY_BAR_FOREGROUND,\n    light: ACTIVITY_BAR_FOREGROUND,\n    hcDark: null,\n    hcLight: contrastBorder\n}, ( localize(\n    'activityBarActiveBorder',\n    \"Activity bar border color for the active item. The activity bar is showing on the far left or right and allows to switch between views of the side bar.\"\n)));\nconst ACTIVITY_BAR_ACTIVE_FOCUS_BORDER = registerColor('activityBar.activeFocusBorder', {\n    dark: null,\n    light: null,\n    hcDark: null,\n    hcLight: '#B5200D'\n}, ( localize(\n    'activityBarActiveFocusBorder',\n    \"Activity bar focus border color for the active item. The activity bar is showing on the far left or right and allows to switch between views of the side bar.\"\n)));\nconst ACTIVITY_BAR_ACTIVE_BACKGROUND = registerColor('activityBar.activeBackground', {\n    dark: null,\n    light: null,\n    hcDark: null,\n    hcLight: null\n}, ( localize(\n    'activityBarActiveBackground',\n    \"Activity bar background color for the active item. The activity bar is showing on the far left or right and allows to switch between views of the side bar.\"\n)));\nconst ACTIVITY_BAR_DRAG_AND_DROP_BORDER = registerColor('activityBar.dropBorder', {\n    dark: ACTIVITY_BAR_FOREGROUND,\n    light: ACTIVITY_BAR_FOREGROUND,\n    hcDark: null,\n    hcLight: null,\n}, ( localize(\n    'activityBarDragAndDropBorder',\n    \"Drag and drop feedback color for the activity bar items. The activity bar is showing on the far left or right and allows to switch between views of the side bar.\"\n)));\nconst ACTIVITY_BAR_BADGE_BACKGROUND = registerColor('activityBarBadge.background', {\n    dark: '#007ACC',\n    light: '#007ACC',\n    hcDark: '#000000',\n    hcLight: '#0F4A85'\n}, ( localize(\n    'activityBarBadgeBackground',\n    \"Activity notification badge background color. The activity bar is showing on the far left or right and allows to switch between views of the side bar.\"\n)));\nconst ACTIVITY_BAR_BADGE_FOREGROUND = registerColor('activityBarBadge.foreground', {\n    dark: Color.white,\n    light: Color.white,\n    hcDark: Color.white,\n    hcLight: Color.white\n}, ( localize(\n    'activityBarBadgeForeground',\n    \"Activity notification badge foreground color. The activity bar is showing on the far left or right and allows to switch between views of the side bar.\"\n)));\nregisterColor('profileBadge.background', {\n    dark: '#4D4D4D',\n    light: '#C4C4C4',\n    hcDark: Color.white,\n    hcLight: Color.black\n}, ( localize(\n    'profileBadgeBackground',\n    \"Profile badge background color. The profile badge shows on top of the settings gear icon in the activity bar.\"\n)));\nregisterColor('profileBadge.foreground', {\n    dark: Color.white,\n    light: '#333333',\n    hcDark: Color.black,\n    hcLight: Color.white\n}, ( localize(\n    'profileBadgeForeground',\n    \"Profile badge foreground color. The profile badge shows on top of the settings gear icon in the activity bar.\"\n)));\nconst STATUS_BAR_REMOTE_ITEM_BACKGROUND = registerColor('statusBarItem.remoteBackground', {\n    dark: ACTIVITY_BAR_BADGE_BACKGROUND,\n    light: ACTIVITY_BAR_BADGE_BACKGROUND,\n    hcDark: ACTIVITY_BAR_BADGE_BACKGROUND,\n    hcLight: ACTIVITY_BAR_BADGE_BACKGROUND\n}, ( localize(\n    'statusBarItemHostBackground',\n    \"Background color for the remote indicator on the status bar.\"\n)));\nconst STATUS_BAR_REMOTE_ITEM_FOREGROUND = registerColor('statusBarItem.remoteForeground', {\n    dark: ACTIVITY_BAR_BADGE_FOREGROUND,\n    light: ACTIVITY_BAR_BADGE_FOREGROUND,\n    hcDark: ACTIVITY_BAR_BADGE_FOREGROUND,\n    hcLight: ACTIVITY_BAR_BADGE_FOREGROUND\n}, ( localize(\n    'statusBarItemHostForeground',\n    \"Foreground color for the remote indicator on the status bar.\"\n)));\nregisterColor('statusBarItem.remoteHoverForeground', {\n    dark: STATUS_BAR_ITEM_HOVER_FOREGROUND,\n    light: STATUS_BAR_ITEM_HOVER_FOREGROUND,\n    hcDark: STATUS_BAR_ITEM_HOVER_FOREGROUND,\n    hcLight: STATUS_BAR_ITEM_HOVER_FOREGROUND\n}, ( localize(\n    'statusBarRemoteItemHoverForeground',\n    \"Foreground color for the remote indicator on the status bar when hovering.\"\n)));\nregisterColor('statusBarItem.remoteHoverBackground', {\n    dark: STATUS_BAR_ITEM_HOVER_BACKGROUND,\n    light: STATUS_BAR_ITEM_HOVER_BACKGROUND,\n    hcDark: STATUS_BAR_ITEM_HOVER_BACKGROUND,\n    hcLight: null\n}, ( localize(\n    'statusBarRemoteItemHoverBackground',\n    \"Background color for the remote indicator on the status bar when hovering.\"\n)));\nregisterColor('statusBarItem.offlineBackground', {\n    dark: '#6c1717',\n    light: '#6c1717',\n    hcDark: '#6c1717',\n    hcLight: '#6c1717'\n}, ( localize(\n    'statusBarItemOfflineBackground',\n    \"Status bar item background color when the workbench is offline.\"\n)));\nregisterColor('statusBarItem.offlineForeground', {\n    dark: STATUS_BAR_REMOTE_ITEM_FOREGROUND,\n    light: STATUS_BAR_REMOTE_ITEM_FOREGROUND,\n    hcDark: STATUS_BAR_REMOTE_ITEM_FOREGROUND,\n    hcLight: STATUS_BAR_REMOTE_ITEM_FOREGROUND\n}, ( localize(\n    'statusBarItemOfflineForeground',\n    \"Status bar item foreground color when the workbench is offline.\"\n)));\nregisterColor('statusBarItem.offlineHoverForeground', {\n    dark: STATUS_BAR_ITEM_HOVER_FOREGROUND,\n    light: STATUS_BAR_ITEM_HOVER_FOREGROUND,\n    hcDark: STATUS_BAR_ITEM_HOVER_FOREGROUND,\n    hcLight: STATUS_BAR_ITEM_HOVER_FOREGROUND\n}, ( localize(\n    'statusBarOfflineItemHoverForeground',\n    \"Status bar item foreground hover color when the workbench is offline.\"\n)));\nregisterColor('statusBarItem.offlineHoverBackground', {\n    dark: STATUS_BAR_ITEM_HOVER_BACKGROUND,\n    light: STATUS_BAR_ITEM_HOVER_BACKGROUND,\n    hcDark: STATUS_BAR_ITEM_HOVER_BACKGROUND,\n    hcLight: null\n}, ( localize(\n    'statusBarOfflineItemHoverBackground',\n    \"Status bar item background hover color when the workbench is offline.\"\n)));\nregisterColor('extensionBadge.remoteBackground', {\n    dark: ACTIVITY_BAR_BADGE_BACKGROUND,\n    light: ACTIVITY_BAR_BADGE_BACKGROUND,\n    hcDark: ACTIVITY_BAR_BADGE_BACKGROUND,\n    hcLight: ACTIVITY_BAR_BADGE_BACKGROUND\n}, ( localize(\n    'extensionBadge.remoteBackground',\n    \"Background color for the remote badge in the extensions view.\"\n)));\nregisterColor('extensionBadge.remoteForeground', {\n    dark: ACTIVITY_BAR_BADGE_FOREGROUND,\n    light: ACTIVITY_BAR_BADGE_FOREGROUND,\n    hcDark: ACTIVITY_BAR_BADGE_FOREGROUND,\n    hcLight: ACTIVITY_BAR_BADGE_FOREGROUND\n}, ( localize(\n    'extensionBadge.remoteForeground',\n    \"Foreground color for the remote badge in the extensions view.\"\n)));\nconst SIDE_BAR_BACKGROUND = registerColor('sideBar.background', {\n    dark: '#252526',\n    light: '#F3F3F3',\n    hcDark: '#000000',\n    hcLight: '#FFFFFF'\n}, ( localize(\n    'sideBarBackground',\n    \"Side bar background color. The side bar is the container for views like explorer and search.\"\n)));\nconst SIDE_BAR_FOREGROUND = registerColor('sideBar.foreground', {\n    dark: null,\n    light: null,\n    hcDark: null,\n    hcLight: null\n}, ( localize(\n    'sideBarForeground',\n    \"Side bar foreground color. The side bar is the container for views like explorer and search.\"\n)));\nconst SIDE_BAR_BORDER = registerColor('sideBar.border', {\n    dark: null,\n    light: null,\n    hcDark: contrastBorder,\n    hcLight: contrastBorder\n}, ( localize(\n    'sideBarBorder',\n    \"Side bar border color on the side separating to the editor. The side bar is the container for views like explorer and search.\"\n)));\nconst SIDE_BAR_TITLE_FOREGROUND = registerColor('sideBarTitle.foreground', {\n    dark: SIDE_BAR_FOREGROUND,\n    light: SIDE_BAR_FOREGROUND,\n    hcDark: SIDE_BAR_FOREGROUND,\n    hcLight: SIDE_BAR_FOREGROUND\n}, ( localize(\n    'sideBarTitleForeground',\n    \"Side bar title foreground color. The side bar is the container for views like explorer and search.\"\n)));\nconst SIDE_BAR_DRAG_AND_DROP_BACKGROUND = registerColor('sideBar.dropBackground', {\n    dark: EDITOR_DRAG_AND_DROP_BACKGROUND,\n    light: EDITOR_DRAG_AND_DROP_BACKGROUND,\n    hcDark: EDITOR_DRAG_AND_DROP_BACKGROUND,\n    hcLight: EDITOR_DRAG_AND_DROP_BACKGROUND\n}, ( localize(\n    'sideBarDragAndDropBackground',\n    \"Drag and drop feedback color for the side bar sections. The color should have transparency so that the side bar sections can still shine through. The side bar is the container for views like explorer and search. Side bar sections are views nested within the side bar.\"\n)));\nconst SIDE_BAR_SECTION_HEADER_BACKGROUND = registerColor('sideBarSectionHeader.background', {\n    dark: ( ( Color.fromHex('#808080')).transparent(0.2)),\n    light: ( ( Color.fromHex('#808080')).transparent(0.2)),\n    hcDark: null,\n    hcLight: null\n}, ( localize(\n    'sideBarSectionHeaderBackground',\n    \"Side bar section header background color. The side bar is the container for views like explorer and search. Side bar sections are views nested within the side bar.\"\n)));\nconst SIDE_BAR_SECTION_HEADER_FOREGROUND = registerColor('sideBarSectionHeader.foreground', {\n    dark: SIDE_BAR_FOREGROUND,\n    light: SIDE_BAR_FOREGROUND,\n    hcDark: SIDE_BAR_FOREGROUND,\n    hcLight: SIDE_BAR_FOREGROUND\n}, ( localize(\n    'sideBarSectionHeaderForeground',\n    \"Side bar section header foreground color. The side bar is the container for views like explorer and search. Side bar sections are views nested within the side bar.\"\n)));\nconst SIDE_BAR_SECTION_HEADER_BORDER = registerColor('sideBarSectionHeader.border', {\n    dark: contrastBorder,\n    light: contrastBorder,\n    hcDark: contrastBorder,\n    hcLight: contrastBorder\n}, ( localize(\n    'sideBarSectionHeaderBorder',\n    \"Side bar section header border color. The side bar is the container for views like explorer and search. Side bar sections are views nested within the side bar.\"\n)));\nconst TITLE_BAR_ACTIVE_FOREGROUND = registerColor('titleBar.activeForeground', {\n    dark: '#CCCCCC',\n    light: '#333333',\n    hcDark: '#FFFFFF',\n    hcLight: '#292929'\n}, ( localize(\n    'titleBarActiveForeground',\n    \"Title bar foreground when the window is active.\"\n)));\nconst TITLE_BAR_INACTIVE_FOREGROUND = registerColor('titleBar.inactiveForeground', {\n    dark: ( transparent(TITLE_BAR_ACTIVE_FOREGROUND, 0.6)),\n    light: ( transparent(TITLE_BAR_ACTIVE_FOREGROUND, 0.6)),\n    hcDark: null,\n    hcLight: '#292929'\n}, ( localize(\n    'titleBarInactiveForeground',\n    \"Title bar foreground when the window is inactive.\"\n)));\nconst TITLE_BAR_ACTIVE_BACKGROUND = registerColor('titleBar.activeBackground', {\n    dark: '#3C3C3C',\n    light: '#DDDDDD',\n    hcDark: '#000000',\n    hcLight: '#FFFFFF'\n}, ( localize(\n    'titleBarActiveBackground',\n    \"Title bar background when the window is active.\"\n)));\nconst TITLE_BAR_INACTIVE_BACKGROUND = registerColor('titleBar.inactiveBackground', {\n    dark: ( transparent(TITLE_BAR_ACTIVE_BACKGROUND, 0.6)),\n    light: ( transparent(TITLE_BAR_ACTIVE_BACKGROUND, 0.6)),\n    hcDark: null,\n    hcLight: null,\n}, ( localize(\n    'titleBarInactiveBackground',\n    \"Title bar background when the window is inactive.\"\n)));\nconst TITLE_BAR_BORDER = registerColor('titleBar.border', {\n    dark: null,\n    light: null,\n    hcDark: contrastBorder,\n    hcLight: contrastBorder\n}, ( localize('titleBarBorder', \"Title bar border color.\")));\nconst MENUBAR_SELECTION_FOREGROUND = registerColor('menubar.selectionForeground', {\n    dark: TITLE_BAR_ACTIVE_FOREGROUND,\n    light: TITLE_BAR_ACTIVE_FOREGROUND,\n    hcDark: TITLE_BAR_ACTIVE_FOREGROUND,\n    hcLight: TITLE_BAR_ACTIVE_FOREGROUND,\n}, ( localize(\n    'menubarSelectionForeground',\n    \"Foreground color of the selected menu item in the menubar.\"\n)));\nconst MENUBAR_SELECTION_BACKGROUND = registerColor('menubar.selectionBackground', {\n    dark: toolbarHoverBackground,\n    light: toolbarHoverBackground,\n    hcDark: null,\n    hcLight: null,\n}, ( localize(\n    'menubarSelectionBackground',\n    \"Background color of the selected menu item in the menubar.\"\n)));\nregisterColor('menubar.selectionBorder', {\n    dark: null,\n    light: null,\n    hcDark: activeContrastBorder,\n    hcLight: activeContrastBorder,\n}, ( localize(\n    'menubarSelectionBorder',\n    \"Border color of the selected menu item in the menubar.\"\n)));\nconst NOTIFICATIONS_CENTER_BORDER = registerColor('notificationCenter.border', {\n    dark: widgetBorder,\n    light: widgetBorder,\n    hcDark: contrastBorder,\n    hcLight: contrastBorder\n}, ( localize(\n    'notificationCenterBorder',\n    \"Notifications center border color. Notifications slide in from the bottom right of the window.\"\n)));\nconst NOTIFICATIONS_TOAST_BORDER = registerColor('notificationToast.border', {\n    dark: widgetBorder,\n    light: widgetBorder,\n    hcDark: contrastBorder,\n    hcLight: contrastBorder\n}, ( localize(\n    'notificationToastBorder',\n    \"Notification toast border color. Notifications slide in from the bottom right of the window.\"\n)));\nregisterColor('notifications.foreground', {\n    dark: editorWidgetForeground,\n    light: editorWidgetForeground,\n    hcDark: editorWidgetForeground,\n    hcLight: editorWidgetForeground\n}, ( localize(\n    'notificationsForeground',\n    \"Notifications foreground color. Notifications slide in from the bottom right of the window.\"\n)));\nconst NOTIFICATIONS_BACKGROUND = registerColor('notifications.background', {\n    dark: editorWidgetBackground,\n    light: editorWidgetBackground,\n    hcDark: editorWidgetBackground,\n    hcLight: editorWidgetBackground\n}, ( localize(\n    'notificationsBackground',\n    \"Notifications background color. Notifications slide in from the bottom right of the window.\"\n)));\nregisterColor('notificationLink.foreground', {\n    dark: textLinkForeground,\n    light: textLinkForeground,\n    hcDark: textLinkForeground,\n    hcLight: textLinkForeground\n}, ( localize(\n    'notificationsLink',\n    \"Notification links foreground color. Notifications slide in from the bottom right of the window.\"\n)));\nconst NOTIFICATIONS_CENTER_HEADER_FOREGROUND = registerColor('notificationCenterHeader.foreground', {\n    dark: null,\n    light: null,\n    hcDark: null,\n    hcLight: null\n}, ( localize(\n    'notificationCenterHeaderForeground',\n    \"Notifications center header foreground color. Notifications slide in from the bottom right of the window.\"\n)));\nconst NOTIFICATIONS_CENTER_HEADER_BACKGROUND = registerColor('notificationCenterHeader.background', {\n    dark: ( lighten(NOTIFICATIONS_BACKGROUND, 0.3)),\n    light: ( darken(NOTIFICATIONS_BACKGROUND, 0.05)),\n    hcDark: NOTIFICATIONS_BACKGROUND,\n    hcLight: NOTIFICATIONS_BACKGROUND\n}, ( localize(\n    'notificationCenterHeaderBackground',\n    \"Notifications center header background color. Notifications slide in from the bottom right of the window.\"\n)));\nregisterColor('notifications.border', {\n    dark: NOTIFICATIONS_CENTER_HEADER_BACKGROUND,\n    light: NOTIFICATIONS_CENTER_HEADER_BACKGROUND,\n    hcDark: NOTIFICATIONS_CENTER_HEADER_BACKGROUND,\n    hcLight: NOTIFICATIONS_CENTER_HEADER_BACKGROUND\n}, ( localize(\n    'notificationsBorder',\n    \"Notifications border color separating from other notifications in the notifications center. Notifications slide in from the bottom right of the window.\"\n)));\nregisterColor('notificationsErrorIcon.foreground', {\n    dark: editorErrorForeground,\n    light: editorErrorForeground,\n    hcDark: editorErrorForeground,\n    hcLight: editorErrorForeground\n}, ( localize(\n    'notificationsErrorIconForeground',\n    \"The color used for the icon of error notifications. Notifications slide in from the bottom right of the window.\"\n)));\nregisterColor('notificationsWarningIcon.foreground', {\n    dark: editorWarningForeground,\n    light: editorWarningForeground,\n    hcDark: editorWarningForeground,\n    hcLight: editorWarningForeground\n}, ( localize(\n    'notificationsWarningIconForeground',\n    \"The color used for the icon of warning notifications. Notifications slide in from the bottom right of the window.\"\n)));\nregisterColor('notificationsInfoIcon.foreground', {\n    dark: editorInfoForeground,\n    light: editorInfoForeground,\n    hcDark: editorInfoForeground,\n    hcLight: editorInfoForeground\n}, ( localize(\n    'notificationsInfoIconForeground',\n    \"The color used for the icon of info notifications. Notifications slide in from the bottom right of the window.\"\n)));\nregisterColor('window.activeBorder', {\n    dark: null,\n    light: null,\n    hcDark: contrastBorder,\n    hcLight: contrastBorder\n}, ( localize(\n    'windowActiveBorder',\n    \"The color used for the border of the window when it is active. Only supported in the macOS and Linux desktop client when using the custom title bar.\"\n)));\nregisterColor('window.inactiveBorder', {\n    dark: null,\n    light: null,\n    hcDark: contrastBorder,\n    hcLight: contrastBorder\n}, ( localize(\n    'windowInactiveBorder',\n    \"The color used for the border of the window when it is inactive. Only supported in the macOS and Linux desktop client when using the custom title bar.\"\n)));\nexport { ACTIVITY_BAR_ACTIVE_BACKGROUND, ACTIVITY_BAR_ACTIVE_BORDER, ACTIVITY_BAR_ACTIVE_FOCUS_BORDER, ACTIVITY_BAR_BACKGROUND, ACTIVITY_BAR_BADGE_BACKGROUND, ACTIVITY_BAR_BADGE_FOREGROUND, ACTIVITY_BAR_BORDER, ACTIVITY_BAR_DRAG_AND_DROP_BORDER, ACTIVITY_BAR_FOREGROUND, ACTIVITY_BAR_INACTIVE_FOREGROUND, EDITOR_DRAG_AND_DROP_BACKGROUND, EDITOR_DROP_INTO_PROMPT_BACKGROUND, EDITOR_DROP_INTO_PROMPT_BORDER, EDITOR_DROP_INTO_PROMPT_FOREGROUND, EDITOR_GROUP_BORDER, EDITOR_GROUP_EMPTY_BACKGROUND, EDITOR_GROUP_HEADER_BORDER, EDITOR_GROUP_HEADER_NO_TABS_BACKGROUND, EDITOR_GROUP_HEADER_TABS_BACKGROUND, EDITOR_GROUP_HEADER_TABS_BORDER, EDITOR_PANE_BACKGROUND, MENUBAR_SELECTION_BACKGROUND, MENUBAR_SELECTION_FOREGROUND, NOTIFICATIONS_BACKGROUND, NOTIFICATIONS_CENTER_BORDER, NOTIFICATIONS_CENTER_HEADER_BACKGROUND, NOTIFICATIONS_CENTER_HEADER_FOREGROUND, NOTIFICATIONS_TOAST_BORDER, PANEL_ACTIVE_TITLE_BORDER, PANEL_ACTIVE_TITLE_FOREGROUND, PANEL_BACKGROUND, PANEL_BORDER, PANEL_DRAG_AND_DROP_BORDER, PANEL_INACTIVE_TITLE_FOREGROUND, PANEL_SECTION_BORDER, PANEL_SECTION_DRAG_AND_DROP_BACKGROUND, PANEL_SECTION_HEADER_BACKGROUND, PANEL_SECTION_HEADER_BORDER, PANEL_SECTION_HEADER_FOREGROUND, SIDE_BAR_BACKGROUND, SIDE_BAR_BORDER, SIDE_BAR_DRAG_AND_DROP_BACKGROUND, SIDE_BAR_FOREGROUND, SIDE_BAR_SECTION_HEADER_BACKGROUND, SIDE_BAR_SECTION_HEADER_BORDER, SIDE_BAR_SECTION_HEADER_FOREGROUND, SIDE_BAR_TITLE_FOREGROUND, SIDE_BY_SIDE_EDITOR_HORIZONTAL_BORDER, SIDE_BY_SIDE_EDITOR_VERTICAL_BORDER, STATUS_BAR_BACKGROUND, STATUS_BAR_BORDER, STATUS_BAR_ERROR_ITEM_BACKGROUND, STATUS_BAR_FOCUS_BORDER, STATUS_BAR_FOREGROUND, STATUS_BAR_ITEM_COMPACT_HOVER_BACKGROUND, STATUS_BAR_ITEM_FOCUS_BORDER, STATUS_BAR_ITEM_HOVER_BACKGROUND, STATUS_BAR_ITEM_HOVER_FOREGROUND, STATUS_BAR_NO_FOLDER_BACKGROUND, STATUS_BAR_NO_FOLDER_BORDER, STATUS_BAR_NO_FOLDER_FOREGROUND, STATUS_BAR_REMOTE_ITEM_BACKGROUND, STATUS_BAR_REMOTE_ITEM_FOREGROUND, STATUS_BAR_WARNING_ITEM_BACKGROUND, TAB_ACTIVE_BACKGROUND, TAB_ACTIVE_BORDER, TAB_ACTIVE_BORDER_TOP, TAB_ACTIVE_FOREGROUND, TAB_ACTIVE_MODIFIED_BORDER, TAB_BORDER, TAB_HOVER_BACKGROUND, TAB_HOVER_BORDER, TAB_HOVER_FOREGROUND, TAB_INACTIVE_BACKGROUND, TAB_INACTIVE_FOREGROUND, TAB_INACTIVE_MODIFIED_BORDER, TAB_LAST_PINNED_BORDER, TAB_UNFOCUSED_ACTIVE_BACKGROUND, TAB_UNFOCUSED_ACTIVE_BORDER, TAB_UNFOCUSED_ACTIVE_BORDER_TOP, TAB_UNFOCUSED_ACTIVE_FOREGROUND, TAB_UNFOCUSED_ACTIVE_MODIFIED_BORDER, TAB_UNFOCUSED_HOVER_BACKGROUND, TAB_UNFOCUSED_HOVER_BORDER, TAB_UNFOCUSED_HOVER_FOREGROUND, TAB_UNFOCUSED_INACTIVE_BACKGROUND, TAB_UNFOCUSED_INACTIVE_FOREGROUND, TAB_UNFOCUSED_INACTIVE_MODIFIED_BORDER, TITLE_BAR_ACTIVE_BACKGROUND, TITLE_BAR_ACTIVE_FOREGROUND, TITLE_BAR_BORDER, TITLE_BAR_INACTIVE_BACKGROUND, TITLE_BAR_INACTIVE_FOREGROUND, WORKBENCH_BACKGROUND };\n", "import { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { workbenchConfigurationNodeBase } from '../../../common/configuration.js';\nimport { Extensions } from 'monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js';\nconst IWorkbenchAssignmentService = ( createDecorator('WorkbenchAssignmentService'));\nconst registry = ( Registry.as(Extensions.Configuration));\nregistry.registerConfiguration({\n    ...workbenchConfigurationNodeBase,\n    'properties': {\n        'workbench.enableExperiments': {\n            'type': 'boolean',\n            'description': ( localize(\n                'workbench.enableExperiments',\n                \"Fetches experiments to run from a Microsoft online service.\"\n            )),\n            'default': true,\n            'scope': 1 ,\n            'restricted': true,\n            'tags': ['usesOnlineServices']\n        }\n    }\n});\nexport { IWorkbenchAssignmentService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IChatService = ( createDecorator('IChatService'));\nexport { IChatService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IEmbedderTerminalService = ( createDecorator('embedderTerminalService'));\nexport { IEmbedderTerminalService };\n", "import { distinct } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { globMatchesResource, RegisteredEditorPriority, priorityToRank } from '../../../services/editor/common/editorResolverService.js';\nconst ICustomEditorService = ( createDecorator('customEditorService'));\nconst CONTEXT_ACTIVE_CUSTOM_EDITOR_ID = ( new RawContextKey('activeCustomEditorId', '', {\n    type: 'string',\n    description: ( nls.localize(\n        'context.customEditor',\n        \"The viewType of the currently active custom editor.\"\n    )),\n}));\nconst CONTEXT_FOCUSED_CUSTOM_EDITOR_IS_EDITABLE = ( new RawContextKey('focusedCustomEditorIsEditable', false));\nclass CustomEditorInfo {\n    constructor(descriptor) {\n        this.id = descriptor.id;\n        this.displayName = descriptor.displayName;\n        this.providerDisplayName = descriptor.providerDisplayName;\n        this.priority = descriptor.priority;\n        this.selector = descriptor.selector;\n    }\n    matches(resource) {\n        return ( this.selector.some(\n            selector => selector.filenamePattern && globMatchesResource(selector.filenamePattern, resource)\n        ));\n    }\n}\nclass CustomEditorInfoCollection {\n    constructor(editors) {\n        this.allEditors = distinct(editors, editor => editor.id);\n    }\n    get length() { return this.allEditors.length; }\n    get defaultEditor() {\n        return this.allEditors.find(editor => {\n            switch (editor.priority) {\n                case RegisteredEditorPriority.default:\n                case RegisteredEditorPriority.builtin:\n                    return this.allEditors.every(otherEditor => otherEditor === editor || isLowerPriority(otherEditor, editor));\n                default:\n                    return false;\n            }\n        });\n    }\n    get bestAvailableEditor() {\n        const editors = Array.from(this.allEditors).sort((a, b) => {\n            return priorityToRank(a.priority) - priorityToRank(b.priority);\n        });\n        return editors[0];\n    }\n}\nfunction isLowerPriority(otherEditor, editor) {\n    return priorityToRank(otherEditor.priority) < priorityToRank(editor.priority);\n}\nexport { CONTEXT_ACTIVE_CUSTOM_EDITOR_ID, CONTEXT_FOCUSED_CUSTOM_EDITOR_IS_EDITABLE, CustomEditorInfo, CustomEditorInfoCollection, ICustomEditorService };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { createCancelablePromise, DeferredPromise } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { CancellationTokenSource } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { memoize } from 'monaco-editor/esm/vs/base/common/decorators.js';\nimport { isCancellationError } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Iterable } from 'monaco-editor/esm/vs/base/common/iterator.js';\nimport { Disposable, toDisposable, combinedDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { EditorActivation } from 'monaco-editor/esm/vs/platform/editor/common/editor.js';\nimport { createDecorator, IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { DiffEditorInput } from '../../../common/editor/diffEditorInput.js';\nimport { IWebviewService } from '../../webview/browser/webview.js';\nimport { CONTEXT_ACTIVE_WEBVIEW_PANEL_ID } from './webviewEditor.js';\nimport { WebviewIconManager } from './webviewIconManager.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { WebviewInput } from './webviewEditorInput.js';\nconst IWebviewWorkbenchService = ( createDecorator('webviewEditorService'));\nfunction canRevive(reviver, webview) {\n    return reviver.canResolve(webview);\n}\nlet LazilyResolvedWebviewEditorInput = class LazilyResolvedWebviewEditorInput extends WebviewInput {\n    constructor(init, webview, _webviewWorkbenchService) {\n        super(init, webview, _webviewWorkbenchService.iconManager);\n        this._webviewWorkbenchService = _webviewWorkbenchService;\n        this._resolved = false;\n    }\n    dispose() {\n        super.dispose();\n        this._resolvePromise?.cancel();\n        this._resolvePromise = undefined;\n    }\n    async resolve() {\n        if (!this._resolved) {\n            this._resolved = true;\n            this._resolvePromise = createCancelablePromise(token => this._webviewWorkbenchService.resolveWebview(this, token));\n            try {\n                await this._resolvePromise;\n            }\n            catch (e) {\n                if (!isCancellationError(e)) {\n                    throw e;\n                }\n            }\n        }\n        return super.resolve();\n    }\n    transfer(other) {\n        if (!super.transfer(other)) {\n            return;\n        }\n        other._resolved = this._resolved;\n        return other;\n    }\n};\nLazilyResolvedWebviewEditorInput.__decorator = ( __decorate([\n    memoize\n], LazilyResolvedWebviewEditorInput.prototype, \"resolve\", null));\nLazilyResolvedWebviewEditorInput = ( __decorate([\n    ( __param(2, IWebviewWorkbenchService))\n], LazilyResolvedWebviewEditorInput));\nclass RevivalPool {\n    constructor() {\n        this._awaitingRevival = [];\n    }\n    enqueueForRestoration(input, token) {\n        const promise = ( new DeferredPromise());\n        const remove = () => {\n            const index = this._awaitingRevival.findIndex(entry => input === entry.input);\n            if (index >= 0) {\n                this._awaitingRevival.splice(index, 1);\n            }\n        };\n        const disposable = combinedDisposable(input.webview.onDidDispose(remove), token.onCancellationRequested(() => {\n            remove();\n            promise.cancel();\n        }));\n        this._awaitingRevival.push({ input, promise, disposable });\n        return promise.p;\n    }\n    reviveFor(reviver, token) {\n        const toRevive = this._awaitingRevival.filter(({ input }) => canRevive(reviver, input));\n        this._awaitingRevival = this._awaitingRevival.filter(({ input }) => !canRevive(reviver, input));\n        for (const { input, promise: resolve, disposable } of toRevive) {\n            reviver.resolveWebview(input, token).then(x => resolve.complete(x), err => resolve.error(err)).finally(() => {\n                disposable.dispose();\n            });\n        }\n    }\n}\nlet WebviewEditorService = class WebviewEditorService extends Disposable {\n    constructor(contextKeyService, _editorService, _instantiationService, _webviewService) {\n        super();\n        this._editorService = _editorService;\n        this._instantiationService = _instantiationService;\n        this._webviewService = _webviewService;\n        this._revivers = ( new Set());\n        this._revivalPool = ( new RevivalPool());\n        this._onDidChangeActiveWebviewEditor = this._register(( new Emitter()));\n        this.onDidChangeActiveWebviewEditor = this._onDidChangeActiveWebviewEditor.event;\n        this._activeWebviewPanelIdContext = CONTEXT_ACTIVE_WEBVIEW_PANEL_ID.bindTo(contextKeyService);\n        this._iconManager = this._register(this._instantiationService.createInstance(WebviewIconManager));\n        this._register(_editorService.onDidActiveEditorChange(() => {\n            this.updateActiveWebview();\n        }));\n        this._register(_webviewService.onDidChangeActiveWebview(() => {\n            this.updateActiveWebview();\n        }));\n        this.updateActiveWebview();\n    }\n    get iconManager() {\n        return this._iconManager;\n    }\n    updateActiveWebview() {\n        const activeInput = this._editorService.activeEditor;\n        let newActiveWebview;\n        if (activeInput instanceof WebviewInput) {\n            newActiveWebview = activeInput;\n        }\n        else if (activeInput instanceof DiffEditorInput) {\n            if (activeInput.primary instanceof WebviewInput && activeInput.primary.webview === this._webviewService.activeWebview) {\n                newActiveWebview = activeInput.primary;\n            }\n            else if (activeInput.secondary instanceof WebviewInput && activeInput.secondary.webview === this._webviewService.activeWebview) {\n                newActiveWebview = activeInput.secondary;\n            }\n        }\n        if (newActiveWebview) {\n            this._activeWebviewPanelIdContext.set(newActiveWebview.webview.providedViewType ?? '');\n        }\n        else {\n            this._activeWebviewPanelIdContext.reset();\n        }\n        if (newActiveWebview !== this._activeWebview) {\n            this._activeWebview = newActiveWebview;\n            this._onDidChangeActiveWebviewEditor.fire(newActiveWebview);\n        }\n    }\n    openWebview(webviewInitInfo, viewType, title, showOptions) {\n        const webview = this._webviewService.createWebviewOverlay(webviewInitInfo);\n        const webviewInput = this._instantiationService.createInstance(WebviewInput, { viewType, name: title, providedId: webviewInitInfo.providedViewType }, webview, this.iconManager);\n        this._editorService.openEditor(webviewInput, {\n            pinned: true,\n            preserveFocus: showOptions.preserveFocus,\n            activation: showOptions.preserveFocus ? EditorActivation.RESTORE : undefined\n        }, showOptions.group);\n        return webviewInput;\n    }\n    revealWebview(webview, group, preserveFocus) {\n        const topLevelEditor = this.findTopLevelEditorForWebview(webview);\n        this._editorService.openEditor(topLevelEditor, {\n            preserveFocus,\n            activation: preserveFocus ? EditorActivation.RESTORE : undefined\n        }, group);\n    }\n    findTopLevelEditorForWebview(webview) {\n        for (const editor of this._editorService.editors) {\n            if (editor === webview) {\n                return editor;\n            }\n            if (editor instanceof DiffEditorInput) {\n                if (webview === editor.primary || webview === editor.secondary) {\n                    return editor;\n                }\n            }\n        }\n        return webview;\n    }\n    openRevivedWebview(options) {\n        const webview = this._webviewService.createWebviewOverlay(options.webviewInitInfo);\n        webview.state = options.state;\n        const webviewInput = this._instantiationService.createInstance(LazilyResolvedWebviewEditorInput, { viewType: options.viewType, providedId: options.webviewInitInfo.providedViewType, name: options.title }, webview);\n        webviewInput.iconPath = options.iconPath;\n        if (typeof options.group === 'number') {\n            webviewInput.updateGroup(options.group);\n        }\n        return webviewInput;\n    }\n    registerResolver(reviver) {\n        this._revivers.add(reviver);\n        const cts = ( new CancellationTokenSource());\n        this._revivalPool.reviveFor(reviver, cts.token);\n        return toDisposable(() => {\n            this._revivers.delete(reviver);\n            cts.dispose(true);\n        });\n    }\n    shouldPersist(webview) {\n        if (webview instanceof LazilyResolvedWebviewEditorInput) {\n            return true;\n        }\n        return ( Iterable.some(( this._revivers.values()), reviver => canRevive(reviver, webview)));\n    }\n    async tryRevive(webview, token) {\n        for (const reviver of ( this._revivers.values())) {\n            if (canRevive(reviver, webview)) {\n                await reviver.resolveWebview(webview, token);\n                return true;\n            }\n        }\n        return false;\n    }\n    async resolveWebview(webview, token) {\n        const didRevive = await this.tryRevive(webview, token);\n        if (!didRevive && !token.isCancellationRequested) {\n            return this._revivalPool.enqueueForRestoration(webview, token);\n        }\n    }\n    setIcons(id, iconPath) {\n        this._iconManager.setIcons(id, iconPath);\n    }\n};\nWebviewEditorService = ( __decorate([\n    ( __param(0, IContextKeyService)),\n    ( __param(1, IEditorService)),\n    ( __param(2, IInstantiationService)),\n    ( __param(3, IWebviewService))\n], WebviewEditorService));\nexport { IWebviewWorkbenchService, LazilyResolvedWebviewEditorInput, WebviewEditorService };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { equals } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { isEqual } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { generateUuid } from 'monaco-editor/esm/vs/base/common/uuid.js';\nimport { RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { Memento } from '../../../common/memento.js';\nconst KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_VISIBLE = ( new RawContextKey('webviewFindWidgetVisible', false));\nconst KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_FOCUSED = ( new RawContextKey('webviewFindWidgetFocused', false));\nconst KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_ENABLED = ( new RawContextKey('webviewFindWidgetEnabled', false));\nconst IWebviewService = ( createDecorator('webviewService'));\nfunction areWebviewContentOptionsEqual(a, b) {\n    return (a.allowMultipleAPIAcquire === b.allowMultipleAPIAcquire\n        && a.allowScripts === b.allowScripts\n        && a.allowForms === b.allowForms\n        && equals(a.localResourceRoots, b.localResourceRoots, isEqual)\n        && equals(a.portMapping, b.portMapping, (a, b) => a.extensionHostPort === b.extensionHostPort && a.webviewPort === b.webviewPort)\n        && areEnableCommandUrisEqual(a, b));\n}\nfunction areEnableCommandUrisEqual(a, b) {\n    if (a.enableCommandUris === b.enableCommandUris) {\n        return true;\n    }\n    if (Array.isArray(a.enableCommandUris) && Array.isArray(b.enableCommandUris)) {\n        return equals(a.enableCommandUris, b.enableCommandUris);\n    }\n    return false;\n}\nlet WebviewOriginStore = class WebviewOriginStore {\n    constructor(rootStorageKey, storageService) {\n        this._memento = ( new Memento(rootStorageKey, storageService));\n        this._state = this._memento.getMemento(-1 , 1 );\n    }\n    getOrigin(viewType, additionalKey) {\n        const key = this._getKey(viewType, additionalKey);\n        const existing = this._state[key];\n        if (existing && typeof existing === 'string') {\n            return existing;\n        }\n        const newOrigin = generateUuid();\n        this._state[key] = newOrigin;\n        this._memento.saveMemento();\n        return newOrigin;\n    }\n    _getKey(viewType, additionalKey) {\n        return JSON.stringify({ viewType, key: additionalKey });\n    }\n};\nWebviewOriginStore = ( __decorate([\n    ( __param(1, IStorageService))\n], WebviewOriginStore));\nlet ExtensionKeyedWebviewOriginStore = class ExtensionKeyedWebviewOriginStore {\n    constructor(rootStorageKey, storageService) {\n        this._store = ( new WebviewOriginStore(rootStorageKey, storageService));\n    }\n    getOrigin(viewType, extId) {\n        return this._store.getOrigin(viewType, extId.value);\n    }\n};\nExtensionKeyedWebviewOriginStore = ( __decorate([\n    ( __param(1, IStorageService))\n], ExtensionKeyedWebviewOriginStore));\nexport { ExtensionKeyedWebviewOriginStore, IWebviewService, KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_ENABLED, KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_FOCUSED, KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_VISIBLE, WebviewOriginStore, areWebviewContentOptionsEqual };\n", "import { isEmptyObject } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { onUnexpectedError } from 'monaco-editor/esm/vs/base/common/errors.js';\nclass Memento {\n    static { this.applicationMementos = ( new Map()); }\n    static { this.profileMementos = ( new Map()); }\n    static { this.workspaceMementos = ( new Map()); }\n    static { this.COMMON_PREFIX = 'memento/'; }\n    constructor(id, storageService) {\n        this.storageService = storageService;\n        this.id = Memento.COMMON_PREFIX + id;\n    }\n    getMemento(scope, target) {\n        switch (scope) {\n            case 1 : {\n                let workspaceMemento = Memento.workspaceMementos.get(this.id);\n                if (!workspaceMemento) {\n                    workspaceMemento = ( new ScopedMemento(this.id, scope, target, this.storageService));\n                    Memento.workspaceMementos.set(this.id, workspaceMemento);\n                }\n                return workspaceMemento.getMemento();\n            }\n            case 0 : {\n                let profileMemento = Memento.profileMementos.get(this.id);\n                if (!profileMemento) {\n                    profileMemento = ( new ScopedMemento(this.id, scope, target, this.storageService));\n                    Memento.profileMementos.set(this.id, profileMemento);\n                }\n                return profileMemento.getMemento();\n            }\n            case -1 : {\n                let applicationMemento = Memento.applicationMementos.get(this.id);\n                if (!applicationMemento) {\n                    applicationMemento = ( new ScopedMemento(this.id, scope, target, this.storageService));\n                    Memento.applicationMementos.set(this.id, applicationMemento);\n                }\n                return applicationMemento.getMemento();\n            }\n        }\n    }\n    saveMemento() {\n        Memento.workspaceMementos.get(this.id)?.save();\n        Memento.profileMementos.get(this.id)?.save();\n        Memento.applicationMementos.get(this.id)?.save();\n    }\n    static clear(scope) {\n        switch (scope) {\n            case 1 :\n                Memento.workspaceMementos.clear();\n                break;\n            case 0 :\n                Memento.profileMementos.clear();\n                break;\n            case -1 :\n                Memento.applicationMementos.clear();\n                break;\n        }\n    }\n}\nclass ScopedMemento {\n    constructor(id, scope, target, storageService) {\n        this.id = id;\n        this.scope = scope;\n        this.target = target;\n        this.storageService = storageService;\n        this.mementoObj = this.load();\n    }\n    getMemento() {\n        return this.mementoObj;\n    }\n    load() {\n        const memento = this.storageService.get(this.id, this.scope);\n        if (memento) {\n            try {\n                return JSON.parse(memento);\n            }\n            catch (error) {\n                onUnexpectedError(`[memento]: failed to parse contents: ${error} (id: ${this.id}, scope: ${this.scope}, contents: ${memento})`);\n            }\n        }\n        return {};\n    }\n    save() {\n        if (!isEmptyObject(this.mementoObj)) {\n            this.storageService.store(this.id, JSON.stringify(this.mementoObj), this.scope, this.target);\n        }\n        else {\n            this.storageService.remove(this.id, this.scope);\n        }\n    }\n}\nexport { Memento };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { Emitter, Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { DisposableStore, MutableDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { isWeb } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { generateUuid } from 'monaco-editor/esm/vs/base/common/uuid.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { IContextKeyService, RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { EditorPane } from '../../../browser/parts/editor/editorPane.js';\nimport { WebviewWindowDragMonitor } from '../../webview/browser/webviewWindowDragMonitor.js';\nimport { WebviewInput } from './webviewEditorInput.js';\nimport { IEditorDropService } from '../../../services/editor/browser/editorDropService.js';\nimport { IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { IWorkbenchLayoutService } from '../../../services/layout/browser/layoutService.js';\nvar WebviewEditor_1;\nconst CONTEXT_ACTIVE_WEBVIEW_PANEL_ID = ( new RawContextKey('activeWebviewPanelId', '', {\n    type: 'string',\n    description: ( nls.localize(\n        'context.activeWebviewId',\n        \"The viewType of the currently active webview panel.\"\n    )),\n}));\nlet WebviewEditor = class WebviewEditor extends EditorPane {\n    static { WebviewEditor_1 = this; }\n    static { this.ID = 'WebviewEditor'; }\n    get onDidFocus() { return this._onDidFocusWebview.event; }\n    constructor(telemetryService, themeService, storageService, editorGroupsService, _editorService, _workbenchLayoutService, _editorDropService, _hostService, _contextKeyService) {\n        super(WebviewEditor_1.ID, telemetryService, themeService, storageService);\n        this._editorService = _editorService;\n        this._workbenchLayoutService = _workbenchLayoutService;\n        this._editorDropService = _editorDropService;\n        this._hostService = _hostService;\n        this._contextKeyService = _contextKeyService;\n        this._visible = false;\n        this._isDisposed = false;\n        this._webviewVisibleDisposables = this._register(( new DisposableStore()));\n        this._onFocusWindowHandler = this._register(( new MutableDisposable()));\n        this._onDidFocusWebview = this._register(( new Emitter()));\n        this._scopedContextKeyService = this._register(( new MutableDisposable()));\n        this._register(Event.any(editorGroupsService.onDidScroll, editorGroupsService.onDidAddGroup, editorGroupsService.onDidRemoveGroup, editorGroupsService.onDidMoveGroup)(() => {\n            if (this.webview && this._visible) {\n                this.synchronizeWebviewContainerDimensions(this.webview);\n            }\n        }));\n    }\n    get webview() {\n        return this.input instanceof WebviewInput ? this.input.webview : undefined;\n    }\n    get scopedContextKeyService() {\n        return this._scopedContextKeyService.value;\n    }\n    createEditor(parent) {\n        const element = document.createElement('div');\n        this._element = element;\n        this._element.id = `webview-editor-element-${generateUuid()}`;\n        parent.appendChild(element);\n        this._scopedContextKeyService.value = this._contextKeyService.createScoped(element);\n    }\n    dispose() {\n        this._isDisposed = true;\n        this._element?.remove();\n        this._element = undefined;\n        super.dispose();\n    }\n    layout(dimension) {\n        this._dimension = dimension;\n        if (this.webview && this._visible) {\n            this.synchronizeWebviewContainerDimensions(this.webview, dimension);\n        }\n    }\n    focus() {\n        super.focus();\n        if (!this._onFocusWindowHandler.value && !isWeb) {\n            this._onFocusWindowHandler.value = this._hostService.onDidChangeFocus(focused => {\n                if (focused && this._editorService.activeEditorPane === this && this._workbenchLayoutService.hasFocus(\"workbench.parts.editor\" )) {\n                    this.focus();\n                }\n            });\n        }\n        this.webview?.focus();\n    }\n    setEditorVisible(visible, group) {\n        this._visible = visible;\n        if (this.input instanceof WebviewInput && this.webview) {\n            if (visible) {\n                this.claimWebview(this.input);\n            }\n            else {\n                this.webview.release(this);\n            }\n        }\n        super.setEditorVisible(visible, group);\n    }\n    clearInput() {\n        if (this.webview) {\n            this.webview.release(this);\n            this._webviewVisibleDisposables.clear();\n        }\n        super.clearInput();\n    }\n    async setInput(input, options, context, token) {\n        if (this.input && input.matches(this.input)) {\n            return;\n        }\n        const alreadyOwnsWebview = input instanceof WebviewInput && input.webview === this.webview;\n        if (this.webview && !alreadyOwnsWebview) {\n            this.webview.release(this);\n        }\n        await super.setInput(input, options, context, token);\n        await input.resolve(options);\n        if (token.isCancellationRequested || this._isDisposed) {\n            return;\n        }\n        if (input instanceof WebviewInput) {\n            if (this.group) {\n                input.updateGroup(this.group.id);\n            }\n            if (!alreadyOwnsWebview) {\n                this.claimWebview(input);\n            }\n            if (this._dimension) {\n                this.layout(this._dimension);\n            }\n        }\n    }\n    claimWebview(input) {\n        input.webview.claim(this, this.scopedContextKeyService);\n        if (this._element) {\n            this._element.setAttribute('aria-flowto', input.webview.container.id);\n            dom.setParentFlowTo(input.webview.container, this._element);\n        }\n        this._webviewVisibleDisposables.clear();\n        this._webviewVisibleDisposables.add(this._editorDropService.createEditorDropTarget(input.webview.container, {\n            containsGroup: (group) => this.group?.id === group.id\n        }));\n        this._webviewVisibleDisposables.add(( new WebviewWindowDragMonitor(() => this.webview)));\n        this.synchronizeWebviewContainerDimensions(input.webview);\n        this._webviewVisibleDisposables.add(this.trackFocus(input.webview));\n    }\n    synchronizeWebviewContainerDimensions(webview, dimension) {\n        if (!this._element?.isConnected) {\n            return;\n        }\n        const rootContainer = this._workbenchLayoutService.getContainer(\"workbench.parts.editor\" );\n        webview.layoutWebviewOverElement(this._element.parentElement, dimension, rootContainer);\n    }\n    trackFocus(webview) {\n        const store = ( new DisposableStore());\n        const webviewContentFocusTracker = dom.trackFocus(webview.container);\n        store.add(webviewContentFocusTracker);\n        store.add(webviewContentFocusTracker.onDidFocus(() => this._onDidFocusWebview.fire()));\n        store.add(webview.onDidFocus(() => this._onDidFocusWebview.fire()));\n        return store;\n    }\n};\nWebviewEditor = WebviewEditor_1 = ( __decorate([\n    ( __param(0, ITelemetryService)),\n    ( __param(1, IThemeService)),\n    ( __param(2, IStorageService)),\n    ( __param(3, IEditorGroupsService)),\n    ( __param(4, IEditorService)),\n    ( __param(5, IWorkbenchLayoutService)),\n    ( __param(6, IEditorDropService)),\n    ( __param(7, IHostService)),\n    ( __param(8, IContextKeyService))\n], WebviewEditor));\nexport { CONTEXT_ACTIVE_WEBVIEW_PANEL_ID, WebviewEditor };\n", "import { ActionRunner } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport { Component } from '../common/component.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { trackFocus } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { assertIsDefined } from 'monaco-editor/esm/vs/base/common/types.js';\nclass Composite extends Component {\n    get onDidFocus() {\n        if (!this._onDidFocus) {\n            this._onDidFocus = this.registerFocusTrackEvents().onDidFocus;\n        }\n        return this._onDidFocus.event;\n    }\n    fireOnDidFocus() {\n        this._onDidFocus?.fire();\n    }\n    get onDidBlur() {\n        if (!this._onDidBlur) {\n            this._onDidBlur = this.registerFocusTrackEvents().onDidBlur;\n        }\n        return this._onDidBlur.event;\n    }\n    hasFocus() {\n        return this._hasFocus;\n    }\n    registerFocusTrackEvents() {\n        const container = assertIsDefined(this.getContainer());\n        const focusTracker = this._register(trackFocus(container));\n        const onDidFocus = this._onDidFocus = this._register(( new Emitter()));\n        this._register(focusTracker.onDidFocus(() => {\n            this._hasFocus = true;\n            onDidFocus.fire();\n        }));\n        const onDidBlur = this._onDidBlur = this._register(( new Emitter()));\n        this._register(focusTracker.onDidBlur(() => {\n            this._hasFocus = false;\n            onDidBlur.fire();\n        }));\n        return { onDidFocus, onDidBlur };\n    }\n    get telemetryService() { return this._telemetryService; }\n    constructor(id, telemetryService, themeService, storageService) {\n        super(id, themeService, storageService);\n        this._onTitleAreaUpdate = this._register(( new Emitter()));\n        this.onTitleAreaUpdate = this._onTitleAreaUpdate.event;\n        this._hasFocus = false;\n        this._telemetryService = telemetryService;\n        this.visible = false;\n    }\n    getTitle() {\n        return undefined;\n    }\n    create(parent) {\n        this.parent = parent;\n    }\n    getContainer() {\n        return this.parent;\n    }\n    setVisible(visible) {\n        if (this.visible !== !!visible) {\n            this.visible = visible;\n        }\n    }\n    focus() {\n    }\n    updateStyles() {\n        super.updateStyles();\n    }\n    getMenuIds() {\n        return [];\n    }\n    getActions() {\n        return [];\n    }\n    getSecondaryActions() {\n        return [];\n    }\n    getContextMenuActions() {\n        return [];\n    }\n    getActionViewItem(action) {\n        return undefined;\n    }\n    getActionsContext() {\n        return null;\n    }\n    getActionRunner() {\n        if (!this.actionRunner) {\n            this.actionRunner = this._register(( new ActionRunner()));\n        }\n        return this.actionRunner;\n    }\n    updateTitleArea() {\n        this._onTitleAreaUpdate.fire();\n    }\n    isVisible() {\n        return this.visible;\n    }\n    getControl() {\n        return undefined;\n    }\n}\nclass CompositeDescriptor {\n    constructor(ctor, id, name, cssClass, order, requestedIndex) {\n        this.ctor = ctor;\n        this.id = id;\n        this.name = name;\n        this.cssClass = cssClass;\n        this.order = order;\n        this.requestedIndex = requestedIndex;\n    }\n    instantiate(instantiationService) {\n        return instantiationService.createInstance(this.ctor);\n    }\n}\nclass CompositeRegistry extends Disposable {\n    constructor() {\n        super(...arguments);\n        this._onDidRegister = this._register(( new Emitter()));\n        this.onDidRegister = this._onDidRegister.event;\n        this._onDidDeregister = this._register(( new Emitter()));\n        this.onDidDeregister = this._onDidDeregister.event;\n        this.composites = [];\n    }\n    registerComposite(descriptor) {\n        if (this.compositeById(descriptor.id)) {\n            return;\n        }\n        this.composites.push(descriptor);\n        this._onDidRegister.fire(descriptor);\n    }\n    deregisterComposite(id) {\n        const descriptor = this.compositeById(id);\n        if (!descriptor) {\n            return;\n        }\n        this.composites.splice(this.composites.indexOf(descriptor), 1);\n        this._onDidDeregister.fire(descriptor);\n    }\n    getComposite(id) {\n        return this.compositeById(id);\n    }\n    getComposites() {\n        return this.composites.slice(0);\n    }\n    compositeById(id) {\n        return this.composites.find(composite => composite.id === id);\n    }\n}\nexport { Composite, CompositeDescriptor, CompositeRegistry };\n", "import { Memento } from './memento.js';\nimport { Themable } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nclass Component extends Themable {\n    constructor(id, themeService, storageService) {\n        super(themeService);\n        this.id = id;\n        this.id = id;\n        this.memento = ( new Memento(this.id, storageService));\n        this._register(storageService.onWillSaveState(() => {\n            this.saveState();\n            this.memento.saveMemento();\n        }));\n    }\n    getId() {\n        return this.id;\n    }\n    getMemento(scope, target) {\n        return this.memento.getMemento(scope, target);\n    }\n    saveState() {\n    }\n}\nexport { Component };\n", "import { Composite } from '../../composite.js';\nimport { isEditorInput } from '../../../common/editor.js';\nimport { LRUCache } from 'monaco-editor/esm/vs/base/common/map.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { Event, Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { isEmptyObject } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { DEFAULT_EDITOR_MIN_DIMENSIONS, DEFAULT_EDITOR_MAX_DIMENSIONS } from './editor.js';\nimport { isEqual, joinPath } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { indexOfPath } from 'monaco-editor/esm/vs/base/common/extpath.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nclass EditorPane extends Composite {\n    static { this.EDITOR_MEMENTOS = ( new Map()); }\n    get minimumWidth() { return DEFAULT_EDITOR_MIN_DIMENSIONS.width; }\n    get maximumWidth() { return DEFAULT_EDITOR_MAX_DIMENSIONS.width; }\n    get minimumHeight() { return DEFAULT_EDITOR_MIN_DIMENSIONS.height; }\n    get maximumHeight() { return DEFAULT_EDITOR_MAX_DIMENSIONS.height; }\n    get input() { return this._input; }\n    get options() { return this._options; }\n    get group() { return this._group; }\n    get scopedContextKeyService() { return undefined; }\n    constructor(id, telemetryService, themeService, storageService) {\n        super(id, telemetryService, themeService, storageService);\n        this.onDidChangeSizeConstraints = Event.None;\n        this._onDidChangeControl = this._register(( new Emitter()));\n        this.onDidChangeControl = this._onDidChangeControl.event;\n    }\n    create(parent) {\n        super.create(parent);\n        this.createEditor(parent);\n    }\n    async setInput(input, options, context, token) {\n        this._input = input;\n        this._options = options;\n    }\n    clearInput() {\n        this._input = undefined;\n        this._options = undefined;\n    }\n    setOptions(options) {\n        this._options = options;\n    }\n    setVisible(visible, group) {\n        super.setVisible(visible);\n        this.setEditorVisible(visible, group);\n    }\n    setEditorVisible(visible, group) {\n        this._group = group;\n    }\n    setBoundarySashes(_sashes) {\n    }\n    getEditorMemento(editorGroupService, configurationService, key, limit = 10) {\n        const mementoKey = `${this.getId()}${key}`;\n        let editorMemento = EditorPane.EDITOR_MEMENTOS.get(mementoKey);\n        if (!editorMemento) {\n            editorMemento = this._register(( new EditorMemento(\n                this.getId(),\n                key,\n                this.getMemento(1 , 1 ),\n                limit,\n                editorGroupService,\n                configurationService\n            )));\n            EditorPane.EDITOR_MEMENTOS.set(mementoKey, editorMemento);\n        }\n        return editorMemento;\n    }\n    getViewState() {\n        return undefined;\n    }\n    saveState() {\n        for (const [, editorMemento] of EditorPane.EDITOR_MEMENTOS) {\n            if (editorMemento.id === this.getId()) {\n                editorMemento.saveState();\n            }\n        }\n        super.saveState();\n    }\n    dispose() {\n        this._input = undefined;\n        this._options = undefined;\n        super.dispose();\n    }\n}\nclass EditorMemento extends Disposable {\n    static { this.SHARED_EDITOR_STATE = -1; }\n    constructor(id, key, memento, limit, editorGroupService, configurationService) {\n        super();\n        this.id = id;\n        this.key = key;\n        this.memento = memento;\n        this.limit = limit;\n        this.editorGroupService = editorGroupService;\n        this.configurationService = configurationService;\n        this.cleanedUp = false;\n        this.shareEditorState = false;\n        this.updateConfiguration(undefined);\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.configurationService.onDidChangeConfiguration(e => this.updateConfiguration(e)));\n    }\n    updateConfiguration(e) {\n        if (!e || e.affectsConfiguration(undefined, 'workbench.editor.sharedViewState')) {\n            this.shareEditorState = this.configurationService.getValue(undefined, 'workbench.editor.sharedViewState') === true;\n        }\n    }\n    saveEditorState(group, resourceOrEditor, state) {\n        const resource = this.doGetResource(resourceOrEditor);\n        if (!resource || !group) {\n            return;\n        }\n        const cache = this.doLoad();\n        let mementosForResource = cache.get(( resource.toString()));\n        if (!mementosForResource) {\n            mementosForResource = Object.create(null);\n            cache.set(( resource.toString()), mementosForResource);\n        }\n        mementosForResource[group.id] = state;\n        if (this.shareEditorState) {\n            mementosForResource[EditorMemento.SHARED_EDITOR_STATE] = state;\n        }\n        if (isEditorInput(resourceOrEditor)) {\n            this.clearEditorStateOnDispose(resource, resourceOrEditor);\n        }\n    }\n    loadEditorState(group, resourceOrEditor) {\n        const resource = this.doGetResource(resourceOrEditor);\n        if (!resource || !group) {\n            return;\n        }\n        const cache = this.doLoad();\n        const mementosForResource = cache.get(( resource.toString()));\n        if (mementosForResource) {\n            const mementoForResourceAndGroup = mementosForResource[group.id];\n            if (mementoForResourceAndGroup) {\n                return mementoForResourceAndGroup;\n            }\n            if (this.shareEditorState) {\n                return mementosForResource[EditorMemento.SHARED_EDITOR_STATE];\n            }\n        }\n        return undefined;\n    }\n    clearEditorState(resourceOrEditor, group) {\n        if (isEditorInput(resourceOrEditor)) {\n            this.editorDisposables?.delete(resourceOrEditor);\n        }\n        const resource = this.doGetResource(resourceOrEditor);\n        if (resource) {\n            const cache = this.doLoad();\n            if (group) {\n                const mementosForResource = cache.get(( resource.toString()));\n                if (mementosForResource) {\n                    delete mementosForResource[group.id];\n                    if (isEmptyObject(mementosForResource)) {\n                        cache.delete(( resource.toString()));\n                    }\n                }\n            }\n            else {\n                cache.delete(( resource.toString()));\n            }\n        }\n    }\n    clearEditorStateOnDispose(resource, editor) {\n        if (!this.editorDisposables) {\n            this.editorDisposables = ( new Map());\n        }\n        if (!( this.editorDisposables.has(editor))) {\n            this.editorDisposables.set(editor, Event.once(editor.onWillDispose)(() => {\n                this.clearEditorState(resource);\n                this.editorDisposables?.delete(editor);\n            }));\n        }\n    }\n    moveEditorState(source, target, comparer) {\n        const cache = this.doLoad();\n        const cacheKeys = [...( cache.keys())];\n        for (const cacheKey of cacheKeys) {\n            const resource = ( URI.parse(cacheKey));\n            if (!comparer.isEqualOrParent(resource, source)) {\n                continue;\n            }\n            let targetResource;\n            if (isEqual(source, resource)) {\n                targetResource = target;\n            }\n            else {\n                const index = indexOfPath(resource.path, source.path);\n                targetResource = joinPath(target, resource.path.substr(index + source.path.length + 1));\n            }\n            const value = cache.get(cacheKey, 0 );\n            if (value) {\n                cache.delete(cacheKey);\n                cache.set(( targetResource.toString()), value);\n            }\n        }\n    }\n    doGetResource(resourceOrEditor) {\n        if (isEditorInput(resourceOrEditor)) {\n            return resourceOrEditor.resource;\n        }\n        return resourceOrEditor;\n    }\n    doLoad() {\n        if (!this.cache) {\n            this.cache = ( new LRUCache(this.limit));\n            const rawEditorMemento = this.memento[this.key];\n            if (Array.isArray(rawEditorMemento)) {\n                this.cache.fromJSON(rawEditorMemento);\n            }\n        }\n        return this.cache;\n    }\n    saveState() {\n        const cache = this.doLoad();\n        if (!this.cleanedUp) {\n            this.cleanUp();\n            this.cleanedUp = true;\n        }\n        this.memento[this.key] = cache.toJSON();\n    }\n    cleanUp() {\n        const cache = this.doLoad();\n        const entries = [...cache.entries()];\n        for (const [resource, mapGroupToMementos] of entries) {\n            for (const group of ( Object.keys(mapGroupToMementos))) {\n                const groupId = Number(group);\n                if (groupId === EditorMemento.SHARED_EDITOR_STATE && this.shareEditorState) {\n                    continue;\n                }\n                if (!this.editorGroupService.getGroup(groupId)) {\n                    delete mapGroupToMementos[groupId];\n                    if (isEmptyObject(mapGroupToMementos)) {\n                        cache.delete(resource);\n                    }\n                }\n            }\n        }\n    }\n}\nexport { EditorMemento, EditorPane };\n", "import { Dimension } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { isObject } from 'monaco-editor/esm/vs/base/common/types.js';\nconst DEFAULT_EDITOR_MIN_DIMENSIONS = ( new Dimension(220, 70));\nconst DEFAULT_EDITOR_MAX_DIMENSIONS = ( new Dimension(Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY));\nconst DEFAULT_EDITOR_PART_OPTIONS = {\n    showTabs: true,\n    highlightModifiedTabs: false,\n    tabCloseButton: 'right',\n    tabSizing: 'fit',\n    tabSizingFixedMinWidth: 50,\n    tabSizingFixedMaxWidth: 160,\n    pinnedTabSizing: 'normal',\n    preventPinnedEditorClose: 'keyboardAndMouse',\n    titleScrollbarSizing: 'default',\n    focusRecentEditorAfterClose: true,\n    showIcons: true,\n    hasIcons: true,\n    enablePreview: true,\n    openPositioning: 'right',\n    openSideBySideDirection: 'right',\n    closeEmptyGroups: true,\n    labelFormat: 'default',\n    splitSizing: 'auto',\n    splitOnDragAndDrop: true,\n    centeredLayoutFixedWidth: false,\n    doubleClickTabToToggleEditorGroupSizes: true,\n};\nfunction impactsEditorPartOptions(event) {\n    return event.affectsConfiguration('workbench.editor') || event.affectsConfiguration('workbench.iconTheme');\n}\nfunction getEditorPartOptions(configurationService, themeService) {\n    const options = {\n        ...DEFAULT_EDITOR_PART_OPTIONS,\n        hasIcons: themeService.getFileIconTheme().hasFileIcons\n    };\n    const config = configurationService.getValue();\n    if (config?.workbench?.editor) {\n        Object.assign(options, config.workbench.editor);\n        if (isObject(config.workbench.editor.autoLockGroups)) {\n            options.autoLockGroups = ( new Set());\n            for (const [editorId, enablement] of Object.entries(config.workbench.editor.autoLockGroups)) {\n                if (enablement === true) {\n                    options.autoLockGroups.add(editorId);\n                }\n            }\n        }\n        else {\n            options.autoLockGroups = undefined;\n        }\n    }\n    return options;\n}\nfunction fillActiveEditorViewState(group, expectedActiveEditor, presetOptions) {\n    if (!expectedActiveEditor || !group.activeEditor || expectedActiveEditor.matches(group.activeEditor)) {\n        const options = {\n            ...presetOptions,\n            viewState: group.activeEditorPane?.getViewState()\n        };\n        return options;\n    }\n    return presetOptions || Object.create(null);\n}\nexport { DEFAULT_EDITOR_MAX_DIMENSIONS, DEFAULT_EDITOR_MIN_DIMENSIONS, DEFAULT_EDITOR_PART_OPTIONS, fillActiveEditorViewState, getEditorPartOptions, impactsEditorPartOptions };\n", "import * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nclass WebviewWindowDragMonitor extends Disposable {\n    constructor(getWebview) {\n        super();\n        this._register(dom.addDisposableListener(window, dom.EventType.DRAG_START, () => {\n            getWebview()?.windowDidDragStart();\n        }));\n        const onDragEnd = () => {\n            getWebview()?.windowDidDragEnd();\n        };\n        this._register(dom.addDisposableListener(window, dom.EventType.DRAG_END, onDragEnd));\n        this._register(dom.addDisposableListener(window, dom.EventType.MOUSE_MOVE, currentEvent => {\n            if (currentEvent.buttons === 0) {\n                onDragEnd();\n            }\n        }));\n    }\n}\nexport { WebviewWindowDragMonitor };\n", "import { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { generateUuid } from 'monaco-editor/esm/vs/base/common/uuid.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nclass WebviewInput extends EditorInput {\n    static { this.typeId = 'workbench.editors.webviewInput'; }\n    get typeId() {\n        return WebviewInput.typeId;\n    }\n    get editorId() {\n        return this.viewType;\n    }\n    get capabilities() {\n        return 2  | 8  | 128 ;\n    }\n    get resource() {\n        return ( URI.from({\n            scheme: Schemas.webviewPanel,\n            path: `webview-panel/webview-${this._resourceId}`\n        }));\n    }\n    constructor(init, webview, _iconManager) {\n        super();\n        this._iconManager = _iconManager;\n        this._resourceId = generateUuid();\n        this._hasTransfered = false;\n        this.viewType = init.viewType;\n        this.providedId = init.providedId;\n        this._name = init.name;\n        this._webview = webview;\n    }\n    dispose() {\n        if (!this.isDisposed()) {\n            if (!this._hasTransfered) {\n                this._webview?.dispose();\n            }\n        }\n        super.dispose();\n    }\n    getName() {\n        return this._name;\n    }\n    getTitle(_verbosity) {\n        return this.getName();\n    }\n    getDescription() {\n        return undefined;\n    }\n    setName(value) {\n        this._name = value;\n        this.webview.setTitle(value);\n        this._onDidChangeLabel.fire();\n    }\n    get webview() {\n        return this._webview;\n    }\n    get extension() {\n        return this.webview.extension;\n    }\n    get iconPath() {\n        return this._iconPath;\n    }\n    set iconPath(value) {\n        this._iconPath = value;\n        this._iconManager.setIcons(this._resourceId, value);\n    }\n    matches(other) {\n        return super.matches(other) || other === this;\n    }\n    get group() {\n        return this._group;\n    }\n    updateGroup(group) {\n        this._group = group;\n    }\n    transfer(other) {\n        if (this._hasTransfered) {\n            return undefined;\n        }\n        this._hasTransfered = true;\n        other._webview = this._webview;\n        return other;\n    }\n}\nexport { WebviewInput };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IEditorDropService = ( createDecorator('editorDropService'));\nexport { IEditorDropService };\n", "import { refineServiceDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ILayoutService } from 'monaco-editor/esm/vs/platform/layout/browser/layoutService.js';\nconst IWorkbenchLayoutService = refineServiceDecorator(ILayoutService);\nvar Parts;\n( (function(Parts) {\n    Parts[\"TITLEBAR_PART\"] = \"workbench.parts.titlebar\";\n    Parts[\"BANNER_PART\"] = \"workbench.parts.banner\";\n    Parts[\"ACTIVITYBAR_PART\"] = \"workbench.parts.activitybar\";\n    Parts[\"SIDEBAR_PART\"] = \"workbench.parts.sidebar\";\n    Parts[\"PANEL_PART\"] = \"workbench.parts.panel\";\n    Parts[\"AUXILIARYBAR_PART\"] = \"workbench.parts.auxiliarybar\";\n    Parts[\"EDITOR_PART\"] = \"workbench.parts.editor\";\n    Parts[\"STATUSBAR_PART\"] = \"workbench.parts.statusbar\";\n})(Parts || (Parts = {})));\nfunction positionToString(position) {\n    switch (position) {\n        case 0 : return 'left';\n        case 1 : return 'right';\n        case 2 : return 'bottom';\n        default: return 'bottom';\n    }\n}\nexport { IWorkbenchLayoutService, Parts, positionToString };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ILifecycleService } from '../../../services/lifecycle/common/lifecycle.js';\nlet WebviewIconManager = class WebviewIconManager {\n    constructor(_lifecycleService, _configService) {\n        this._lifecycleService = _lifecycleService;\n        this._configService = _configService;\n        this._icons = ( new Map());\n        this._configService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('workbench.iconTheme')) {\n                this.updateStyleSheet();\n            }\n        });\n    }\n    dispose() {\n        this._styleElement?.remove();\n        this._styleElement = undefined;\n    }\n    get styleElement() {\n        if (!this._styleElement) {\n            this._styleElement = dom.createStyleSheet();\n            this._styleElement.className = 'webview-icons';\n        }\n        return this._styleElement;\n    }\n    setIcons(webviewId, iconPath) {\n        if (iconPath) {\n            this._icons.set(webviewId, iconPath);\n        }\n        else {\n            this._icons.delete(webviewId);\n        }\n        this.updateStyleSheet();\n    }\n    async updateStyleSheet() {\n        await this._lifecycleService.when(1 );\n        const cssRules = [];\n        if (this._configService.getValue('workbench.iconTheme') !== null) {\n            for (const [key, value] of this._icons) {\n                const webviewSelector = `.show-file-icons .webview-${key}-name-file-icon::before`;\n                try {\n                    cssRules.push(`.monaco-workbench.vs ${webviewSelector}, .monaco-workbench.hc-light ${webviewSelector} { content: \"\"; background-image: ${dom.asCSSUrl(value.light)}; }`, `.monaco-workbench.vs-dark ${webviewSelector}, .monaco-workbench.hc-black ${webviewSelector} { content: \"\"; background-image: ${dom.asCSSUrl(value.dark)}; }`);\n                }\n                catch {\n                }\n            }\n        }\n        this.styleElement.textContent = cssRules.join('\\n');\n    }\n};\nWebviewIconManager = ( __decorate([\n    ( __param(0, ILifecycleService)),\n    ( __param(1, IConfigurationService))\n], WebviewIconManager));\nexport { WebviewIconManager };\n", "import { CancellationToken } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable, toDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IWebviewViewService = ( createDecorator('webviewViewService'));\nclass WebviewViewService extends Disposable {\n    constructor() {\n        super(...arguments);\n        this._resolvers = ( new Map());\n        this._awaitingRevival = ( new Map());\n        this._onNewResolverRegistered = this._register(( new Emitter()));\n        this.onNewResolverRegistered = this._onNewResolverRegistered.event;\n    }\n    register(viewType, resolver) {\n        if (( this._resolvers.has(viewType))) {\n            throw new Error(`View resolver already registered for ${viewType}`);\n        }\n        this._resolvers.set(viewType, resolver);\n        this._onNewResolverRegistered.fire({ viewType: viewType });\n        const pending = this._awaitingRevival.get(viewType);\n        if (pending) {\n            resolver.resolve(pending.webview, CancellationToken.None).then(() => {\n                this._awaitingRevival.delete(viewType);\n                pending.resolve();\n            });\n        }\n        return toDisposable(() => {\n            this._resolvers.delete(viewType);\n        });\n    }\n    resolve(viewType, webview, cancellation) {\n        const resolver = this._resolvers.get(viewType);\n        if (!resolver) {\n            if (( this._awaitingRevival.has(viewType))) {\n                throw new Error('View already awaiting revival');\n            }\n            let resolve;\n            const p = ( new Promise(r => resolve = r));\n            this._awaitingRevival.set(viewType, { webview, resolve: resolve });\n            return p;\n        }\n        return resolver.resolve(webview, cancellation);\n    }\n}\nexport { IWebviewViewService, WebviewViewService };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { firstOrDefault } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { Iterable } from 'monaco-editor/esm/vs/base/common/iterator.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { LinkedList } from 'monaco-editor/esm/vs/base/common/linkedList.js';\nimport { isWeb } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport * as languages from 'monaco-editor/esm/vs/editor/common/languages.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { IQuickInputService } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { defaultExternalUriOpenerId, externalUriOpenersSettingId } from './configuration.js';\nimport { testUrlMatchesGlob } from '../../url/common/urlGlob.js';\nimport { IPreferencesService } from '../../../services/preferences/common/preferences.js';\nconst IExternalUriOpenerService = ( createDecorator('externalUriOpenerService'));\nlet ExternalUriOpenerService = class ExternalUriOpenerService extends Disposable {\n    constructor(openerService, configurationService, logService, preferencesService, quickInputService) {\n        super();\n        this.configurationService = configurationService;\n        this.logService = logService;\n        this.preferencesService = preferencesService;\n        this.quickInputService = quickInputService;\n        this._providers = ( new LinkedList());\n        this._register(openerService.registerExternalOpener(this));\n    }\n    registerExternalOpenerProvider(provider) {\n        const remove = this._providers.push(provider);\n        return { dispose: remove };\n    }\n    async getOpeners(targetUri, allowOptional, ctx, token) {\n        const allOpeners = await this.getAllOpenersForUri(targetUri);\n        if (allOpeners.size === 0) {\n            return [];\n        }\n        if (ctx.preferredOpenerId) {\n            if (ctx.preferredOpenerId === defaultExternalUriOpenerId) {\n                return [];\n            }\n            const preferredOpener = allOpeners.get(ctx.preferredOpenerId);\n            if (preferredOpener) {\n                return [preferredOpener];\n            }\n        }\n        const configuredOpener = this.getConfiguredOpenerForUri(allOpeners, targetUri);\n        if (configuredOpener) {\n            return configuredOpener === defaultExternalUriOpenerId ? [] : [configuredOpener];\n        }\n        const validOpeners = [];\n        await Promise.all(( Array.from(( allOpeners.values())).map(async (opener) => {\n            let priority;\n            try {\n                priority = await opener.canOpen(ctx.sourceUri, token);\n            }\n            catch (e) {\n                this.logService.error(e);\n                return;\n            }\n            switch (priority) {\n                case languages.ExternalUriOpenerPriority.Option:\n                case languages.ExternalUriOpenerPriority.Default:\n                case languages.ExternalUriOpenerPriority.Preferred:\n                    validOpeners.push({ opener, priority });\n                    break;\n            }\n        })));\n        if (validOpeners.length === 0) {\n            return [];\n        }\n        const preferred = firstOrDefault(validOpeners.filter(x => x.priority === languages.ExternalUriOpenerPriority.Preferred));\n        if (preferred) {\n            return [preferred.opener];\n        }\n        if (!allowOptional && validOpeners.every(x => x.priority === languages.ExternalUriOpenerPriority.Option)) {\n            return [];\n        }\n        return ( validOpeners.map(value => value.opener));\n    }\n    async openExternal(href, ctx, token) {\n        const targetUri = typeof href === 'string' ? ( URI.parse(href)) : href;\n        const allOpeners = await this.getOpeners(targetUri, false, ctx, token);\n        if (allOpeners.length === 0) {\n            return false;\n        }\n        else if (allOpeners.length === 1) {\n            return allOpeners[0].openExternalUri(targetUri, ctx, token);\n        }\n        return this.showOpenerPrompt(allOpeners, targetUri, ctx, token);\n    }\n    async getOpener(targetUri, ctx, token) {\n        const allOpeners = await this.getOpeners(targetUri, true, ctx, token);\n        if (allOpeners.length >= 1) {\n            return allOpeners[0];\n        }\n        return undefined;\n    }\n    async getAllOpenersForUri(targetUri) {\n        const allOpeners = ( new Map());\n        await Promise.all(( Iterable.map(this._providers, async (provider) => {\n            for await (const opener of provider.getOpeners(targetUri)) {\n                allOpeners.set(opener.id, opener);\n            }\n        })));\n        return allOpeners;\n    }\n    getConfiguredOpenerForUri(openers, targetUri) {\n        const config = this.configurationService.getValue(externalUriOpenersSettingId) || {};\n        for (const [uriGlob, id] of Object.entries(config)) {\n            if (testUrlMatchesGlob(targetUri, uriGlob)) {\n                if (id === defaultExternalUriOpenerId) {\n                    return 'default';\n                }\n                const entry = openers.get(id);\n                if (entry) {\n                    return entry;\n                }\n            }\n        }\n        return undefined;\n    }\n    async showOpenerPrompt(openers, targetUri, ctx, token) {\n        const items = ( openers.map((opener) => {\n            return {\n                label: opener.label,\n                opener: opener\n            };\n        }));\n        items.push({\n            label: isWeb\n                ? ( nls.localize('selectOpenerDefaultLabel.web', 'Open in new browser window'))\n                : ( nls.localize('selectOpenerDefaultLabel', 'Open in default browser')),\n            opener: undefined\n        }, { type: 'separator' }, {\n            label: ( nls.localize('selectOpenerConfigureTitle', \"Configure default opener...\")),\n            opener: 'configureDefault'\n        });\n        const picked = await this.quickInputService.pick(items, {\n            placeHolder: ( nls.localize(\n                'selectOpenerPlaceHolder',\n                \"How would you like to open: {0}\",\n                ( targetUri.toString())\n            ))\n        });\n        if (!picked) {\n            return true;\n        }\n        if (typeof picked.opener === 'undefined') {\n            return false;\n        }\n        else if (picked.opener === 'configureDefault') {\n            await this.preferencesService.openUserSettings({\n                jsonEditor: true,\n                revealSetting: { key: externalUriOpenersSettingId, edit: true }\n            });\n            return true;\n        }\n        else {\n            return picked.opener.openExternalUri(targetUri, ctx, token);\n        }\n    }\n};\nExternalUriOpenerService = ( __decorate([\n    ( __param(0, IOpenerService)),\n    ( __param(1, IConfigurationService)),\n    ( __param(2, ILogService)),\n    ( __param(3, IPreferencesService)),\n    ( __param(4, IQuickInputService))\n], ExternalUriOpenerService));\nexport { ExternalUriOpenerService, IExternalUriOpenerService };\n", "import { Extensions } from 'monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js';\nimport { workbenchConfigurationNodeBase } from '../../../common/configuration.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nconst defaultExternalUriOpenerId = 'default';\nconst externalUriOpenersSettingId = 'workbench.externalUriOpeners';\nconst externalUriOpenerIdSchemaAddition = {\n    type: 'string',\n    enum: []\n};\nconst exampleUriPatterns = `\n- \\`https://microsoft.com\\`: Matches this specific domain using https\n- \\`https://microsoft.com:8080\\`: Matches this specific domain on this port using https\n- \\`https://microsoft.com:*\\`: Matches this specific domain on any port using https\n- \\`https://microsoft.com/foo\\`: Matches \\`https://microsoft.com/foo\\` and \\`https://microsoft.com/foo/bar\\`, but not \\`https://microsoft.com/foobar\\` or \\`https://microsoft.com/bar\\`\n- \\`https://*.microsoft.com\\`: Match all domains ending in \\`microsoft.com\\` using https\n- \\`microsoft.com\\`: Match this specific domain using either http or https\n- \\`*.microsoft.com\\`: Match all domains ending in \\`microsoft.com\\` using either http or https\n- \\`http://192.168.0.1\\`: Matches this specific IP using http\n- \\`http://192.168.0.*\\`: Matches all IP's with this prefix using http\n- \\`*\\`: Match all domains using either http or https`;\nconst externalUriOpenersConfigurationNode = {\n    ...workbenchConfigurationNodeBase,\n    properties: {\n        [externalUriOpenersSettingId]: {\n            type: 'object',\n            markdownDescription: ( nls.localize(\n                'externalUriOpeners',\n                \"Configure the opener to use for external URIs (http, https).\"\n            )),\n            defaultSnippets: [{\n                    body: {\n                        'example.com': '$1'\n                    }\n                }],\n            additionalProperties: {\n                anyOf: [\n                    {\n                        type: 'string',\n                        markdownDescription: ( nls.localize(\n                            'externalUriOpeners.uri',\n                            \"Map URI pattern to an opener id.\\nExample patterns: \\n{0}\",\n                            exampleUriPatterns\n                        )),\n                    },\n                    {\n                        type: 'string',\n                        markdownDescription: ( nls.localize(\n                            'externalUriOpeners.uri',\n                            \"Map URI pattern to an opener id.\\nExample patterns: \\n{0}\",\n                            exampleUriPatterns\n                        )),\n                        enum: [defaultExternalUriOpenerId],\n                        enumDescriptions: [( nls.localize('externalUriOpeners.defaultId', \"Open using VS Code's standard opener.\"))],\n                    },\n                    externalUriOpenerIdSchemaAddition\n                ]\n            }\n        }\n    }\n};\nfunction updateContributedOpeners(enumValues, enumDescriptions) {\n    externalUriOpenerIdSchemaAddition.enum = enumValues;\n    externalUriOpenerIdSchemaAddition.enumDescriptions = enumDescriptions;\n    ( Registry.as(Extensions.Configuration))\n        .notifyConfigurationSchemaUpdated(externalUriOpenersConfigurationNode);\n}\nexport { defaultExternalUriOpenerId, externalUriOpenersConfigurationNode, externalUriOpenersSettingId, updateContributedOpeners };\n", "const testUrlMatchesGlob = (uri, globUrl) => {\n    let url = ( uri.with({ query: null, fragment: null }).toString(true));\n    const normalize = (url) => url.replace(/\\/+$/, '');\n    globUrl = normalize(globUrl);\n    url = normalize(url);\n    const memo = ( Array.from({ length: url.length + 1 }).map(() => ( Array.from({ length: globUrl.length + 1 }).map(() => undefined))));\n    if (/^[^./:]*:\\/\\//.test(globUrl)) {\n        return doUrlMatch(memo, url, globUrl, 0, 0);\n    }\n    const scheme = /^(https?):\\/\\//.exec(url)?.[1];\n    if (scheme) {\n        return doUrlMatch(memo, url, `${scheme}://${globUrl}`, 0, 0);\n    }\n    return false;\n};\nconst doUrlMatch = (memo, url, globUrl, urlOffset, globUrlOffset) => {\n    if (memo[urlOffset]?.[globUrlOffset] !== undefined) {\n        return memo[urlOffset][globUrlOffset];\n    }\n    const options = [];\n    if (urlOffset === url.length) {\n        return globUrlOffset === globUrl.length;\n    }\n    if (globUrlOffset === globUrl.length) {\n        const remaining = url.slice(urlOffset);\n        return remaining[0] === '/';\n    }\n    if (url[urlOffset] === globUrl[globUrlOffset]) {\n        options.push(doUrlMatch(memo, url, globUrl, urlOffset + 1, globUrlOffset + 1));\n    }\n    if (globUrl[globUrlOffset] + globUrl[globUrlOffset + 1] === '*.') {\n        if (!['/', ':'].includes(url[urlOffset])) {\n            options.push(doUrlMatch(memo, url, globUrl, urlOffset + 1, globUrlOffset));\n        }\n        options.push(doUrlMatch(memo, url, globUrl, urlOffset, globUrlOffset + 2));\n    }\n    if (globUrl[globUrlOffset] === '*') {\n        if (urlOffset + 1 === url.length) {\n            options.push(doUrlMatch(memo, url, globUrl, urlOffset + 1, globUrlOffset + 1));\n        }\n        else {\n            options.push(doUrlMatch(memo, url, globUrl, urlOffset + 1, globUrlOffset));\n        }\n        options.push(doUrlMatch(memo, url, globUrl, urlOffset, globUrlOffset + 1));\n    }\n    if (globUrl[globUrlOffset] + globUrl[globUrlOffset + 1] === ':*') {\n        if (url[urlOffset] === ':') {\n            let endPortIndex = urlOffset + 1;\n            do {\n                endPortIndex++;\n            } while (/[0-9]/.test(url[endPortIndex]));\n            options.push(doUrlMatch(memo, url, globUrl, endPortIndex, globUrlOffset + 2));\n        }\n        else {\n            options.push(doUrlMatch(memo, url, globUrl, urlOffset, globUrlOffset + 2));\n        }\n    }\n    return (memo[urlOffset][globUrlOffset] = ( options.some(a => a === true)));\n};\nexport { testUrlMatchesGlob };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ExtensionIdentifierMap, ALL_EXTENSION_KINDS } from 'monaco-editor/esm/vs/platform/extensions/common/extensions.js';\nimport { ExtensionsRegistry } from './extensionsRegistry.js';\nimport { getGalleryExtensionId } from '../../../../platform/extensionManagement/common/extensionManagementUtil.js';\nimport { isNonEmptyArray } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { IProductService } from 'monaco-editor/esm/vs/platform/product/common/productService.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { WORKSPACE_TRUST_EXTENSION_SUPPORT } from '../../workspaces/common/workspaceTrust.js';\nimport { isBoolean } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { IWorkspaceTrustEnablementService } from 'monaco-editor/esm/vs/platform/workspace/common/workspaceTrust.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { isWeb } from 'monaco-editor/esm/vs/base/common/platform.js';\nconst IExtensionManifestPropertiesService = ( createDecorator('extensionManifestPropertiesService'));\nlet ExtensionManifestPropertiesService = class ExtensionManifestPropertiesService extends Disposable {\n    constructor(productService, configurationService, workspaceTrustEnablementService, logService) {\n        super();\n        this.productService = productService;\n        this.configurationService = configurationService;\n        this.workspaceTrustEnablementService = workspaceTrustEnablementService;\n        this.logService = logService;\n        this._extensionPointExtensionKindsMap = null;\n        this._productExtensionKindsMap = null;\n        this._configuredExtensionKindsMap = null;\n        this._productVirtualWorkspaceSupportMap = null;\n        this._configuredVirtualWorkspaceSupportMap = null;\n        this._configuredExtensionWorkspaceTrustRequestMap = ( new ExtensionIdentifierMap());\n        const configuredExtensionWorkspaceTrustRequests = configurationService.inspect(WORKSPACE_TRUST_EXTENSION_SUPPORT).userValue || {};\n        for (const id of ( Object.keys(configuredExtensionWorkspaceTrustRequests))) {\n            this._configuredExtensionWorkspaceTrustRequestMap.set(id, configuredExtensionWorkspaceTrustRequests[id]);\n        }\n        this._productExtensionWorkspaceTrustRequestMap = ( new Map());\n        if (productService.extensionUntrustedWorkspaceSupport) {\n            for (const id of ( Object.keys(productService.extensionUntrustedWorkspaceSupport))) {\n                this._productExtensionWorkspaceTrustRequestMap.set(id, productService.extensionUntrustedWorkspaceSupport[id]);\n            }\n        }\n    }\n    prefersExecuteOnUI(manifest) {\n        const extensionKind = this.getExtensionKind(manifest);\n        return (extensionKind.length > 0 && extensionKind[0] === 'ui');\n    }\n    prefersExecuteOnWorkspace(manifest) {\n        const extensionKind = this.getExtensionKind(manifest);\n        return (extensionKind.length > 0 && extensionKind[0] === 'workspace');\n    }\n    prefersExecuteOnWeb(manifest) {\n        const extensionKind = this.getExtensionKind(manifest);\n        return (extensionKind.length > 0 && extensionKind[0] === 'web');\n    }\n    canExecuteOnUI(manifest) {\n        const extensionKind = this.getExtensionKind(manifest);\n        return ( extensionKind.some(kind => kind === 'ui'));\n    }\n    canExecuteOnWorkspace(manifest) {\n        const extensionKind = this.getExtensionKind(manifest);\n        return ( extensionKind.some(kind => kind === 'workspace'));\n    }\n    canExecuteOnWeb(manifest) {\n        const extensionKind = this.getExtensionKind(manifest);\n        return ( extensionKind.some(kind => kind === 'web'));\n    }\n    getExtensionKind(manifest) {\n        const deducedExtensionKind = this.deduceExtensionKind(manifest);\n        const configuredExtensionKind = this.getConfiguredExtensionKind(manifest);\n        if (configuredExtensionKind && configuredExtensionKind.length > 0) {\n            const result = [];\n            for (const extensionKind of configuredExtensionKind) {\n                if (extensionKind !== '-web') {\n                    result.push(extensionKind);\n                }\n            }\n            if (configuredExtensionKind.includes('-web') && !result.length) {\n                result.push('ui');\n                result.push('workspace');\n            }\n            if (isWeb && !configuredExtensionKind.includes('-web') && !configuredExtensionKind.includes('web') && deducedExtensionKind.includes('web')) {\n                result.push('web');\n            }\n            return result;\n        }\n        return deducedExtensionKind;\n    }\n    getUserConfiguredExtensionKind(extensionIdentifier) {\n        if (this._configuredExtensionKindsMap === null) {\n            const configuredExtensionKindsMap = ( new ExtensionIdentifierMap());\n            const configuredExtensionKinds = this.configurationService.getValue('remote.extensionKind') || {};\n            for (const id of ( Object.keys(configuredExtensionKinds))) {\n                configuredExtensionKindsMap.set(id, configuredExtensionKinds[id]);\n            }\n            this._configuredExtensionKindsMap = configuredExtensionKindsMap;\n        }\n        const userConfiguredExtensionKind = this._configuredExtensionKindsMap.get(extensionIdentifier.id);\n        return userConfiguredExtensionKind ? this.toArray(userConfiguredExtensionKind) : undefined;\n    }\n    getExtensionUntrustedWorkspaceSupportType(manifest) {\n        if (!this.workspaceTrustEnablementService.isWorkspaceTrustEnabled() || !manifest.main) {\n            return true;\n        }\n        const configuredWorkspaceTrustRequest = this.getConfiguredExtensionWorkspaceTrustRequest(manifest);\n        const productWorkspaceTrustRequest = this.getProductExtensionWorkspaceTrustRequest(manifest);\n        if (configuredWorkspaceTrustRequest !== undefined) {\n            return configuredWorkspaceTrustRequest;\n        }\n        if (productWorkspaceTrustRequest?.override !== undefined) {\n            return productWorkspaceTrustRequest.override;\n        }\n        if (manifest.capabilities?.untrustedWorkspaces?.supported !== undefined) {\n            return manifest.capabilities.untrustedWorkspaces.supported;\n        }\n        if (productWorkspaceTrustRequest?.default !== undefined) {\n            return productWorkspaceTrustRequest.default;\n        }\n        return false;\n    }\n    getExtensionVirtualWorkspaceSupportType(manifest) {\n        const userConfiguredVirtualWorkspaceSupport = this.getConfiguredVirtualWorkspaceSupport(manifest);\n        if (userConfiguredVirtualWorkspaceSupport !== undefined) {\n            return userConfiguredVirtualWorkspaceSupport;\n        }\n        const productConfiguredWorkspaceSchemes = this.getProductVirtualWorkspaceSupport(manifest);\n        if (productConfiguredWorkspaceSchemes?.override !== undefined) {\n            return productConfiguredWorkspaceSchemes.override;\n        }\n        const virtualWorkspaces = manifest.capabilities?.virtualWorkspaces;\n        if (isBoolean(virtualWorkspaces)) {\n            return virtualWorkspaces;\n        }\n        else if (virtualWorkspaces) {\n            const supported = virtualWorkspaces.supported;\n            if (isBoolean(supported) || supported === 'limited') {\n                return supported;\n            }\n        }\n        if (productConfiguredWorkspaceSchemes?.default !== undefined) {\n            return productConfiguredWorkspaceSchemes.default;\n        }\n        return true;\n    }\n    deduceExtensionKind(manifest) {\n        if (manifest.main) {\n            if (manifest.browser) {\n                return isWeb ? ['workspace', 'web'] : ['workspace'];\n            }\n            return ['workspace'];\n        }\n        if (manifest.browser) {\n            return ['web'];\n        }\n        let result = [...ALL_EXTENSION_KINDS];\n        if (isNonEmptyArray(manifest.extensionPack) || isNonEmptyArray(manifest.extensionDependencies)) {\n            result = isWeb ? ['workspace', 'web'] : ['workspace'];\n        }\n        if (manifest.contributes) {\n            for (const contribution of ( Object.keys(manifest.contributes))) {\n                const supportedExtensionKinds = this.getSupportedExtensionKindsForExtensionPoint(contribution);\n                if (supportedExtensionKinds.length) {\n                    result = result.filter(extensionKind => supportedExtensionKinds.includes(extensionKind));\n                }\n            }\n        }\n        if (!result.length) {\n            this.logService.warn('Cannot deduce extensionKind for extension', getGalleryExtensionId(manifest.publisher, manifest.name));\n        }\n        return result;\n    }\n    getSupportedExtensionKindsForExtensionPoint(extensionPoint) {\n        if (this._extensionPointExtensionKindsMap === null) {\n            const extensionPointExtensionKindsMap = ( new Map());\n            ExtensionsRegistry.getExtensionPoints().forEach(e => extensionPointExtensionKindsMap.set(e.name, e.defaultExtensionKind || [] ));\n            this._extensionPointExtensionKindsMap = extensionPointExtensionKindsMap;\n        }\n        let extensionPointExtensionKind = this._extensionPointExtensionKindsMap.get(extensionPoint);\n        if (extensionPointExtensionKind) {\n            return extensionPointExtensionKind;\n        }\n        extensionPointExtensionKind = this.productService.extensionPointExtensionKind ? this.productService.extensionPointExtensionKind[extensionPoint] : undefined;\n        if (extensionPointExtensionKind) {\n            return extensionPointExtensionKind;\n        }\n        return isWeb ? ['workspace', 'web'] : ['workspace'];\n    }\n    getConfiguredExtensionKind(manifest) {\n        const extensionIdentifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n        let result = this.getUserConfiguredExtensionKind(extensionIdentifier);\n        if (typeof result !== 'undefined') {\n            return this.toArray(result);\n        }\n        result = this.getProductExtensionKind(manifest);\n        if (typeof result !== 'undefined') {\n            return result;\n        }\n        result = manifest.extensionKind;\n        if (typeof result !== 'undefined') {\n            result = this.toArray(result);\n            return result.filter(r => ['ui', 'workspace'].includes(r));\n        }\n        return null;\n    }\n    getProductExtensionKind(manifest) {\n        if (this._productExtensionKindsMap === null) {\n            const productExtensionKindsMap = ( new ExtensionIdentifierMap());\n            if (this.productService.extensionKind) {\n                for (const id of ( Object.keys(this.productService.extensionKind))) {\n                    productExtensionKindsMap.set(id, this.productService.extensionKind[id]);\n                }\n            }\n            this._productExtensionKindsMap = productExtensionKindsMap;\n        }\n        const extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n        return this._productExtensionKindsMap.get(extensionId);\n    }\n    getProductVirtualWorkspaceSupport(manifest) {\n        if (this._productVirtualWorkspaceSupportMap === null) {\n            const productWorkspaceSchemesMap = ( new ExtensionIdentifierMap());\n            if (this.productService.extensionVirtualWorkspacesSupport) {\n                for (const id of ( Object.keys(this.productService.extensionVirtualWorkspacesSupport))) {\n                    productWorkspaceSchemesMap.set(id, this.productService.extensionVirtualWorkspacesSupport[id]);\n                }\n            }\n            this._productVirtualWorkspaceSupportMap = productWorkspaceSchemesMap;\n        }\n        const extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n        return this._productVirtualWorkspaceSupportMap.get(extensionId);\n    }\n    getConfiguredVirtualWorkspaceSupport(manifest) {\n        if (this._configuredVirtualWorkspaceSupportMap === null) {\n            const configuredWorkspaceSchemesMap = ( new ExtensionIdentifierMap());\n            const configuredWorkspaceSchemes = this.configurationService.getValue('extensions.supportVirtualWorkspaces') || {};\n            for (const id of ( Object.keys(configuredWorkspaceSchemes))) {\n                if (configuredWorkspaceSchemes[id] !== undefined) {\n                    configuredWorkspaceSchemesMap.set(id, configuredWorkspaceSchemes[id]);\n                }\n            }\n            this._configuredVirtualWorkspaceSupportMap = configuredWorkspaceSchemesMap;\n        }\n        const extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n        return this._configuredVirtualWorkspaceSupportMap.get(extensionId);\n    }\n    getConfiguredExtensionWorkspaceTrustRequest(manifest) {\n        const extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n        const extensionWorkspaceTrustRequest = this._configuredExtensionWorkspaceTrustRequestMap.get(extensionId);\n        if (extensionWorkspaceTrustRequest && (extensionWorkspaceTrustRequest.version === undefined || extensionWorkspaceTrustRequest.version === manifest.version)) {\n            return extensionWorkspaceTrustRequest.supported;\n        }\n        return undefined;\n    }\n    getProductExtensionWorkspaceTrustRequest(manifest) {\n        const extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n        return this._productExtensionWorkspaceTrustRequestMap.get(extensionId);\n    }\n    toArray(extensionKind) {\n        if (Array.isArray(extensionKind)) {\n            return extensionKind;\n        }\n        return extensionKind === 'ui' ? ['ui', 'workspace'] : [extensionKind];\n    }\n};\nExtensionManifestPropertiesService = ( __decorate([\n    ( __param(0, IProductService)),\n    ( __param(1, IConfigurationService)),\n    ( __param(2, IWorkspaceTrustEnablementService)),\n    ( __param(3, ILogService))\n], ExtensionManifestPropertiesService));\nexport { ExtensionManifestPropertiesService, IExtensionManifestPropertiesService };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { Emitter, Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable, DisposableStore, toDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { LinkedList } from 'monaco-editor/esm/vs/base/common/linkedList.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IRemoteAuthorityResolverService } from '../../../../platform/remote/common/remoteAuthorityResolver.js';\nimport { getRemoteAuthority } from 'monaco-editor/esm/vs/platform/remote/common/remoteHosts.js';\nimport { isVirtualResource } from '../../../../platform/workspace/common/virtualWorkspace.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { isSavedWorkspace, isTemporaryWorkspace, toWorkspaceIdentifier, isSingleFolderWorkspaceIdentifier, IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { IWorkspaceTrustEnablementService, IWorkspaceTrustManagementService } from 'monaco-editor/esm/vs/platform/workspace/common/workspaceTrust.js';\nimport { Memento } from '../../../common/memento.js';\nimport { IWorkbenchEnvironmentService } from '../../environment/common/environmentService.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { isEqualAuthority } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { isWeb } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nconst WORKSPACE_TRUST_ENABLED = 'security.workspace.trust.enabled';\nconst WORKSPACE_TRUST_STARTUP_PROMPT = 'security.workspace.trust.startupPrompt';\nconst WORKSPACE_TRUST_BANNER = 'security.workspace.trust.banner';\nconst WORKSPACE_TRUST_UNTRUSTED_FILES = 'security.workspace.trust.untrustedFiles';\nconst WORKSPACE_TRUST_EMPTY_WINDOW = 'security.workspace.trust.emptyWindow';\nconst WORKSPACE_TRUST_EXTENSION_SUPPORT = 'extensions.supportUntrustedWorkspaces';\nconst WORKSPACE_TRUST_STORAGE_KEY = 'content.trust.model.key';\nclass CanonicalWorkspace {\n    constructor(originalWorkspace, canonicalFolderUris, canonicalConfiguration) {\n        this.originalWorkspace = originalWorkspace;\n        this.canonicalFolderUris = canonicalFolderUris;\n        this.canonicalConfiguration = canonicalConfiguration;\n    }\n    get folders() {\n        return ( this.originalWorkspace.folders.map((folder, index) => {\n            return {\n                index: folder.index,\n                name: folder.name,\n                toResource: folder.toResource,\n                uri: this.canonicalFolderUris[index]\n            };\n        }));\n    }\n    get transient() {\n        return this.originalWorkspace.transient;\n    }\n    get configuration() {\n        return this.canonicalConfiguration ?? this.originalWorkspace.configuration;\n    }\n    get id() {\n        return this.originalWorkspace.id;\n    }\n}\nlet WorkspaceTrustEnablementService = class WorkspaceTrustEnablementService extends Disposable {\n    constructor(configurationService, environmentService) {\n        super();\n        this.configurationService = configurationService;\n        this.environmentService = environmentService;\n    }\n    isWorkspaceTrustEnabled() {\n        if (this.environmentService.disableWorkspaceTrust) {\n            return false;\n        }\n        return !!this.configurationService.getValue(WORKSPACE_TRUST_ENABLED);\n    }\n};\nWorkspaceTrustEnablementService = ( __decorate([\n    ( __param(0, IConfigurationService)),\n    ( __param(1, IWorkbenchEnvironmentService))\n], WorkspaceTrustEnablementService));\nlet WorkspaceTrustManagementService = class WorkspaceTrustManagementService extends Disposable {\n    constructor(configurationService, remoteAuthorityResolverService, storageService, uriIdentityService, environmentService, workspaceService, workspaceTrustEnablementService, fileService) {\n        super();\n        this.configurationService = configurationService;\n        this.remoteAuthorityResolverService = remoteAuthorityResolverService;\n        this.storageService = storageService;\n        this.uriIdentityService = uriIdentityService;\n        this.environmentService = environmentService;\n        this.workspaceService = workspaceService;\n        this.workspaceTrustEnablementService = workspaceTrustEnablementService;\n        this.fileService = fileService;\n        this.storageKey = WORKSPACE_TRUST_STORAGE_KEY;\n        this._onDidChangeTrust = this._register(( new Emitter()));\n        this.onDidChangeTrust = this._onDidChangeTrust.event;\n        this._onDidChangeTrustedFolders = this._register(( new Emitter()));\n        this.onDidChangeTrustedFolders = this._onDidChangeTrustedFolders.event;\n        this._canonicalStartupFiles = [];\n        this._canonicalUrisResolved = false;\n        this._canonicalWorkspace = this.workspaceService.getWorkspace();\n        this._workspaceResolvedPromise = ( new Promise((resolve) => {\n            this._workspaceResolvedPromiseResolve = resolve;\n        }));\n        this._workspaceTrustInitializedPromise = ( new Promise((resolve) => {\n            this._workspaceTrustInitializedPromiseResolve = resolve;\n        }));\n        this._storedTrustState = ( new WorkspaceTrustMemento(isWeb && this.isEmptyWorkspace() ? undefined : this.storageService));\n        this._trustTransitionManager = this._register(( new WorkspaceTrustTransitionManager()));\n        this._trustStateInfo = this.loadTrustInfo();\n        this._isTrusted = this.calculateWorkspaceTrust();\n        this.initializeWorkspaceTrust();\n        this.registerListeners();\n    }\n    initializeWorkspaceTrust() {\n        this.resolveCanonicalUris()\n            .then(async () => {\n            this._canonicalUrisResolved = true;\n            await this.updateWorkspaceTrust();\n        })\n            .finally(() => {\n            this._workspaceResolvedPromiseResolve();\n            if (!this.environmentService.remoteAuthority) {\n                this._workspaceTrustInitializedPromiseResolve();\n            }\n        });\n        if (this.environmentService.remoteAuthority) {\n            this.remoteAuthorityResolverService.resolveAuthority(this.environmentService.remoteAuthority)\n                .then(async (result) => {\n                this._remoteAuthority = result;\n                await this.fileService.activateProvider(Schemas.vscodeRemote);\n                await this.updateWorkspaceTrust();\n            })\n                .finally(() => {\n                this._workspaceTrustInitializedPromiseResolve();\n            });\n        }\n        if (this.isEmptyWorkspace()) {\n            this._workspaceTrustInitializedPromise.then(() => {\n                if (this._storedTrustState.isEmptyWorkspaceTrusted === undefined) {\n                    this._storedTrustState.isEmptyWorkspaceTrusted = this.isWorkspaceTrusted();\n                }\n            });\n        }\n    }\n    registerListeners() {\n        this._register(this.workspaceService.onDidChangeWorkspaceFolders(async () => await this.updateWorkspaceTrust()));\n        this._register(this.storageService.onDidChangeValue(-1 , this.storageKey, this._register(( new DisposableStore())))(async () => {\n            if (JSON.stringify(this._trustStateInfo) !== JSON.stringify(this.loadTrustInfo())) {\n                this._trustStateInfo = this.loadTrustInfo();\n                this._onDidChangeTrustedFolders.fire();\n                await this.updateWorkspaceTrust();\n            }\n        }));\n    }\n    async getCanonicalUri(uri) {\n        let canonicalUri = uri;\n        if (this.environmentService.remoteAuthority && uri.scheme === Schemas.vscodeRemote) {\n            canonicalUri = await this.remoteAuthorityResolverService.getCanonicalURI(uri);\n        }\n        else if (uri.scheme === 'vscode-vfs') {\n            const index = uri.authority.indexOf('+');\n            if (index !== -1) {\n                canonicalUri = uri.with({ authority: uri.authority.substr(0, index) });\n            }\n        }\n        return canonicalUri.with({ query: null, fragment: null });\n    }\n    async resolveCanonicalUris() {\n        const filesToOpen = [];\n        if (this.environmentService.filesToOpenOrCreate) {\n            filesToOpen.push(...this.environmentService.filesToOpenOrCreate);\n        }\n        if (this.environmentService.filesToDiff) {\n            filesToOpen.push(...this.environmentService.filesToDiff);\n        }\n        if (this.environmentService.filesToMerge) {\n            filesToOpen.push(...this.environmentService.filesToMerge);\n        }\n        if (filesToOpen.length) {\n            const filesToOpenOrCreateUris = ( filesToOpen.filter(f => !!f.fileUri).map(f => f.fileUri));\n            const canonicalFilesToOpen = await Promise.all(( filesToOpenOrCreateUris.map(uri => this.getCanonicalUri(uri))));\n            this._canonicalStartupFiles.push(...canonicalFilesToOpen.filter(uri => this._canonicalStartupFiles.every(u => !this.uriIdentityService.extUri.isEqual(uri, u))));\n        }\n        const workspaceUris = ( this.workspaceService.getWorkspace().folders.map(f => f.uri));\n        const canonicalWorkspaceFolders = await Promise.all(( workspaceUris.map(uri => this.getCanonicalUri(uri))));\n        let canonicalWorkspaceConfiguration = this.workspaceService.getWorkspace().configuration;\n        if (canonicalWorkspaceConfiguration && isSavedWorkspace(canonicalWorkspaceConfiguration, this.environmentService)) {\n            canonicalWorkspaceConfiguration = await this.getCanonicalUri(canonicalWorkspaceConfiguration);\n        }\n        this._canonicalWorkspace = ( new CanonicalWorkspace(\n            this.workspaceService.getWorkspace(),\n            canonicalWorkspaceFolders,\n            canonicalWorkspaceConfiguration\n        ));\n    }\n    loadTrustInfo() {\n        const infoAsString = this.storageService.get(this.storageKey, -1 );\n        let result;\n        try {\n            if (infoAsString) {\n                result = JSON.parse(infoAsString);\n            }\n        }\n        catch { }\n        if (!result) {\n            result = {\n                uriTrustInfo: []\n            };\n        }\n        if (!result.uriTrustInfo) {\n            result.uriTrustInfo = [];\n        }\n        result.uriTrustInfo = ( result.uriTrustInfo.map(info => { return { uri: URI.revive(info.uri), trusted: info.trusted }; }));\n        result.uriTrustInfo = result.uriTrustInfo.filter(info => info.trusted);\n        return result;\n    }\n    async saveTrustInfo() {\n        this.storageService.store(this.storageKey, JSON.stringify(this._trustStateInfo), -1 , 1 );\n        this._onDidChangeTrustedFolders.fire();\n        await this.updateWorkspaceTrust();\n    }\n    getWorkspaceUris() {\n        const workspaceUris = ( this._canonicalWorkspace.folders.map(f => f.uri));\n        const workspaceConfiguration = this._canonicalWorkspace.configuration;\n        if (workspaceConfiguration && isSavedWorkspace(workspaceConfiguration, this.environmentService)) {\n            workspaceUris.push(workspaceConfiguration);\n        }\n        return workspaceUris;\n    }\n    calculateWorkspaceTrust() {\n        if (!this.workspaceTrustEnablementService.isWorkspaceTrustEnabled()) {\n            return true;\n        }\n        if (!this._canonicalUrisResolved) {\n            return false;\n        }\n        if (this.environmentService.remoteAuthority && this._remoteAuthority?.options?.isTrusted) {\n            return this._remoteAuthority.options.isTrusted;\n        }\n        if (this.isEmptyWorkspace()) {\n            if (this._storedTrustState.isEmptyWorkspaceTrusted !== undefined) {\n                return this._storedTrustState.isEmptyWorkspaceTrusted;\n            }\n            if (this._canonicalStartupFiles.length) {\n                return this.getUrisTrust(this._canonicalStartupFiles);\n            }\n            return !!this.configurationService.getValue(WORKSPACE_TRUST_EMPTY_WINDOW);\n        }\n        return this.getUrisTrust(this.getWorkspaceUris());\n    }\n    async updateWorkspaceTrust(trusted) {\n        if (!this.workspaceTrustEnablementService.isWorkspaceTrustEnabled()) {\n            return;\n        }\n        if (trusted === undefined) {\n            await this.resolveCanonicalUris();\n            trusted = this.calculateWorkspaceTrust();\n        }\n        if (this.isWorkspaceTrusted() === trusted) {\n            return;\n        }\n        this.isTrusted = trusted;\n        await this._trustTransitionManager.participate(trusted);\n        this._onDidChangeTrust.fire(trusted);\n    }\n    getUrisTrust(uris) {\n        let state = true;\n        for (const uri of uris) {\n            const { trusted } = this.doGetUriTrustInfo(uri);\n            if (!trusted) {\n                state = trusted;\n                return state;\n            }\n        }\n        return state;\n    }\n    doGetUriTrustInfo(uri) {\n        if (!this.workspaceTrustEnablementService.isWorkspaceTrustEnabled()) {\n            return { trusted: true, uri };\n        }\n        if (this.isTrustedVirtualResource(uri)) {\n            return { trusted: true, uri };\n        }\n        if (this.isTrustedByRemote(uri)) {\n            return { trusted: true, uri };\n        }\n        let resultState = false;\n        let maxLength = -1;\n        let resultUri = uri;\n        for (const trustInfo of this._trustStateInfo.uriTrustInfo) {\n            if (this.uriIdentityService.extUri.isEqualOrParent(uri, trustInfo.uri)) {\n                const fsPath = trustInfo.uri.fsPath;\n                if (fsPath.length > maxLength) {\n                    maxLength = fsPath.length;\n                    resultState = trustInfo.trusted;\n                    resultUri = trustInfo.uri;\n                }\n            }\n        }\n        return { trusted: resultState, uri: resultUri };\n    }\n    async doSetUrisTrust(uris, trusted) {\n        let changed = false;\n        for (const uri of uris) {\n            if (trusted) {\n                if (this.isTrustedVirtualResource(uri)) {\n                    continue;\n                }\n                if (this.isTrustedByRemote(uri)) {\n                    continue;\n                }\n                const foundItem = this._trustStateInfo.uriTrustInfo.find(trustInfo => this.uriIdentityService.extUri.isEqual(trustInfo.uri, uri));\n                if (!foundItem) {\n                    this._trustStateInfo.uriTrustInfo.push({ uri, trusted: true });\n                    changed = true;\n                }\n            }\n            else {\n                const previousLength = this._trustStateInfo.uriTrustInfo.length;\n                this._trustStateInfo.uriTrustInfo = this._trustStateInfo.uriTrustInfo.filter(trustInfo => !this.uriIdentityService.extUri.isEqual(trustInfo.uri, uri));\n                if (previousLength !== this._trustStateInfo.uriTrustInfo.length) {\n                    changed = true;\n                }\n            }\n        }\n        if (changed) {\n            await this.saveTrustInfo();\n        }\n    }\n    isEmptyWorkspace() {\n        if (this.workspaceService.getWorkbenchState() === 1 ) {\n            return true;\n        }\n        const workspace = this.workspaceService.getWorkspace();\n        if (workspace) {\n            return isTemporaryWorkspace(this.workspaceService.getWorkspace()) && workspace.folders.length === 0;\n        }\n        return false;\n    }\n    isTrustedVirtualResource(uri) {\n        return isVirtualResource(uri) && uri.scheme !== 'vscode-vfs';\n    }\n    isTrustedByRemote(uri) {\n        if (!this.environmentService.remoteAuthority) {\n            return false;\n        }\n        if (!this._remoteAuthority) {\n            return false;\n        }\n        return (isEqualAuthority(getRemoteAuthority(uri), this._remoteAuthority.authority.authority)) && !!this._remoteAuthority.options?.isTrusted;\n    }\n    set isTrusted(value) {\n        this._isTrusted = value;\n        if (!value) {\n            this._storedTrustState.acceptsOutOfWorkspaceFiles = false;\n        }\n        if (this.isEmptyWorkspace()) {\n            this._storedTrustState.isEmptyWorkspaceTrusted = value;\n        }\n    }\n    get workspaceResolved() {\n        return this._workspaceResolvedPromise;\n    }\n    get workspaceTrustInitialized() {\n        return this._workspaceTrustInitializedPromise;\n    }\n    get acceptsOutOfWorkspaceFiles() {\n        return this._storedTrustState.acceptsOutOfWorkspaceFiles;\n    }\n    set acceptsOutOfWorkspaceFiles(value) {\n        this._storedTrustState.acceptsOutOfWorkspaceFiles = value;\n    }\n    isWorkspaceTrusted() {\n        return this._isTrusted;\n    }\n    isWorkspaceTrustForced() {\n        if (this.environmentService.remoteAuthority && this._remoteAuthority && this._remoteAuthority.options?.isTrusted !== undefined) {\n            return true;\n        }\n        const workspaceUris = this.getWorkspaceUris().filter(uri => !this.isTrustedVirtualResource(uri));\n        if (workspaceUris.length === 0) {\n            return true;\n        }\n        return false;\n    }\n    canSetParentFolderTrust() {\n        const workspaceIdentifier = toWorkspaceIdentifier(this._canonicalWorkspace);\n        if (!isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\n            return false;\n        }\n        if (workspaceIdentifier.uri.scheme !== Schemas.file && workspaceIdentifier.uri.scheme !== Schemas.vscodeRemote) {\n            return false;\n        }\n        const parentFolder = this.uriIdentityService.extUri.dirname(workspaceIdentifier.uri);\n        if (this.uriIdentityService.extUri.isEqual(workspaceIdentifier.uri, parentFolder)) {\n            return false;\n        }\n        return true;\n    }\n    async setParentFolderTrust(trusted) {\n        if (this.canSetParentFolderTrust()) {\n            const workspaceUri = toWorkspaceIdentifier(this._canonicalWorkspace).uri;\n            const parentFolder = this.uriIdentityService.extUri.dirname(workspaceUri);\n            await this.setUrisTrust([parentFolder], trusted);\n        }\n    }\n    canSetWorkspaceTrust() {\n        if (this.environmentService.remoteAuthority && (!this._remoteAuthority || this._remoteAuthority.options?.isTrusted !== undefined)) {\n            return false;\n        }\n        if (this.isEmptyWorkspace()) {\n            return true;\n        }\n        const workspaceUris = this.getWorkspaceUris().filter(uri => !this.isTrustedVirtualResource(uri));\n        if (workspaceUris.length === 0) {\n            return false;\n        }\n        if (!this.isWorkspaceTrusted()) {\n            return true;\n        }\n        const workspaceIdentifier = toWorkspaceIdentifier(this._canonicalWorkspace);\n        if (!isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\n            return false;\n        }\n        if (workspaceIdentifier.uri.scheme !== Schemas.file && workspaceIdentifier.uri.scheme !== 'vscode-vfs') {\n            return false;\n        }\n        const trustInfo = this.doGetUriTrustInfo(workspaceIdentifier.uri);\n        if (!trustInfo.trusted || !this.uriIdentityService.extUri.isEqual(workspaceIdentifier.uri, trustInfo.uri)) {\n            return false;\n        }\n        if (this.canSetParentFolderTrust()) {\n            const parentFolder = this.uriIdentityService.extUri.dirname(workspaceIdentifier.uri);\n            const parentPathTrustInfo = this.doGetUriTrustInfo(parentFolder);\n            if (parentPathTrustInfo.trusted) {\n                return false;\n            }\n        }\n        return true;\n    }\n    async setWorkspaceTrust(trusted) {\n        if (this.isEmptyWorkspace()) {\n            await this.updateWorkspaceTrust(trusted);\n            return;\n        }\n        const workspaceFolders = this.getWorkspaceUris();\n        await this.setUrisTrust(workspaceFolders, trusted);\n    }\n    async getUriTrustInfo(uri) {\n        if (!this.workspaceTrustEnablementService.isWorkspaceTrustEnabled()) {\n            return { trusted: true, uri };\n        }\n        if (this.isTrustedByRemote(uri)) {\n            return { trusted: true, uri };\n        }\n        return this.doGetUriTrustInfo(await this.getCanonicalUri(uri));\n    }\n    async setUrisTrust(uris, trusted) {\n        this.doSetUrisTrust(await Promise.all(( uris.map(uri => this.getCanonicalUri(uri)))), trusted);\n    }\n    getTrustedUris() {\n        return ( this._trustStateInfo.uriTrustInfo.map(info => info.uri));\n    }\n    async setTrustedUris(uris) {\n        this._trustStateInfo.uriTrustInfo = [];\n        for (const uri of uris) {\n            const canonicalUri = await this.getCanonicalUri(uri);\n            const cleanUri = this.uriIdentityService.extUri.removeTrailingPathSeparator(canonicalUri);\n            let added = false;\n            for (const addedUri of this._trustStateInfo.uriTrustInfo) {\n                if (this.uriIdentityService.extUri.isEqual(addedUri.uri, cleanUri)) {\n                    added = true;\n                    break;\n                }\n            }\n            if (added) {\n                continue;\n            }\n            this._trustStateInfo.uriTrustInfo.push({\n                trusted: true,\n                uri: cleanUri\n            });\n        }\n        await this.saveTrustInfo();\n    }\n    addWorkspaceTrustTransitionParticipant(participant) {\n        return this._trustTransitionManager.addWorkspaceTrustTransitionParticipant(participant);\n    }\n};\nWorkspaceTrustManagementService = ( __decorate([\n    ( __param(0, IConfigurationService)),\n    ( __param(1, IRemoteAuthorityResolverService)),\n    ( __param(2, IStorageService)),\n    ( __param(3, IUriIdentityService)),\n    ( __param(4, IWorkbenchEnvironmentService)),\n    ( __param(5, IWorkspaceContextService)),\n    ( __param(6, IWorkspaceTrustEnablementService)),\n    ( __param(7, IFileService))\n], WorkspaceTrustManagementService));\nlet WorkspaceTrustRequestService = class WorkspaceTrustRequestService extends Disposable {\n    constructor(configurationService, workspaceTrustManagementService) {\n        super();\n        this.configurationService = configurationService;\n        this.workspaceTrustManagementService = workspaceTrustManagementService;\n        this._onDidInitiateOpenFilesTrustRequest = this._register(( new Emitter()));\n        this.onDidInitiateOpenFilesTrustRequest = this._onDidInitiateOpenFilesTrustRequest.event;\n        this._onDidInitiateWorkspaceTrustRequest = this._register(( new Emitter()));\n        this.onDidInitiateWorkspaceTrustRequest = this._onDidInitiateWorkspaceTrustRequest.event;\n        this._onDidInitiateWorkspaceTrustRequestOnStartup = this._register(( new Emitter()));\n        this.onDidInitiateWorkspaceTrustRequestOnStartup = this._onDidInitiateWorkspaceTrustRequestOnStartup.event;\n    }\n    get untrustedFilesSetting() {\n        return this.configurationService.getValue(WORKSPACE_TRUST_UNTRUSTED_FILES);\n    }\n    set untrustedFilesSetting(value) {\n        this.configurationService.updateValue(WORKSPACE_TRUST_UNTRUSTED_FILES, value);\n    }\n    async completeOpenFilesTrustRequest(result, saveResponse) {\n        if (!this._openFilesTrustRequestResolver) {\n            return;\n        }\n        if (result === 1 ) {\n            this.workspaceTrustManagementService.acceptsOutOfWorkspaceFiles = true;\n        }\n        if (saveResponse) {\n            if (result === 1 ) {\n                this.untrustedFilesSetting = 'open';\n            }\n            if (result === 2 ) {\n                this.untrustedFilesSetting = 'newWindow';\n            }\n        }\n        this._openFilesTrustRequestResolver(result);\n        this._openFilesTrustRequestResolver = undefined;\n        this._openFilesTrustRequestPromise = undefined;\n    }\n    async requestOpenFilesTrust(uris) {\n        if (!this.workspaceTrustManagementService.isWorkspaceTrusted()) {\n            return 1 ;\n        }\n        const openFilesTrustInfo = await Promise.all(( uris.map(uri => this.workspaceTrustManagementService.getUriTrustInfo(uri))));\n        if (( openFilesTrustInfo.map(info => info.trusted)).every(trusted => trusted)) {\n            return 1 ;\n        }\n        if (this.untrustedFilesSetting !== 'prompt') {\n            if (this.untrustedFilesSetting === 'newWindow') {\n                return 2 ;\n            }\n            if (this.untrustedFilesSetting === 'open') {\n                return 1 ;\n            }\n        }\n        if (this.workspaceTrustManagementService.acceptsOutOfWorkspaceFiles) {\n            return 1 ;\n        }\n        if (!this._openFilesTrustRequestPromise) {\n            this._openFilesTrustRequestPromise = ( new Promise(resolve => {\n                this._openFilesTrustRequestResolver = resolve;\n            }));\n        }\n        else {\n            return this._openFilesTrustRequestPromise;\n        }\n        this._onDidInitiateOpenFilesTrustRequest.fire();\n        return this._openFilesTrustRequestPromise;\n    }\n    resolveWorkspaceTrustRequest(trusted) {\n        if (this._workspaceTrustRequestResolver) {\n            this._workspaceTrustRequestResolver(trusted ?? this.workspaceTrustManagementService.isWorkspaceTrusted());\n            this._workspaceTrustRequestResolver = undefined;\n            this._workspaceTrustRequestPromise = undefined;\n        }\n    }\n    cancelWorkspaceTrustRequest() {\n        if (this._workspaceTrustRequestResolver) {\n            this._workspaceTrustRequestResolver(undefined);\n            this._workspaceTrustRequestResolver = undefined;\n            this._workspaceTrustRequestPromise = undefined;\n        }\n    }\n    async completeWorkspaceTrustRequest(trusted) {\n        if (trusted === undefined || trusted === this.workspaceTrustManagementService.isWorkspaceTrusted()) {\n            this.resolveWorkspaceTrustRequest(trusted);\n            return;\n        }\n        Event.once(this.workspaceTrustManagementService.onDidChangeTrust)(trusted => this.resolveWorkspaceTrustRequest(trusted));\n        await this.workspaceTrustManagementService.setWorkspaceTrust(trusted);\n    }\n    async requestWorkspaceTrust(options) {\n        if (this.workspaceTrustManagementService.isWorkspaceTrusted()) {\n            return this.workspaceTrustManagementService.isWorkspaceTrusted();\n        }\n        if (!this._workspaceTrustRequestPromise) {\n            this._workspaceTrustRequestPromise = ( new Promise(resolve => {\n                this._workspaceTrustRequestResolver = resolve;\n            }));\n        }\n        else {\n            return this._workspaceTrustRequestPromise;\n        }\n        this._onDidInitiateWorkspaceTrustRequest.fire(options);\n        return this._workspaceTrustRequestPromise;\n    }\n    requestWorkspaceTrustOnStartup() {\n        if (!this._workspaceTrustRequestPromise) {\n            this._workspaceTrustRequestPromise = ( new Promise(resolve => {\n                this._workspaceTrustRequestResolver = resolve;\n            }));\n        }\n        this._onDidInitiateWorkspaceTrustRequestOnStartup.fire();\n    }\n};\nWorkspaceTrustRequestService = ( __decorate([\n    ( __param(0, IConfigurationService)),\n    ( __param(1, IWorkspaceTrustManagementService))\n], WorkspaceTrustRequestService));\nclass WorkspaceTrustTransitionManager extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.participants = ( new LinkedList());\n    }\n    addWorkspaceTrustTransitionParticipant(participant) {\n        const remove = this.participants.push(participant);\n        return toDisposable(() => remove());\n    }\n    async participate(trusted) {\n        for (const participant of this.participants) {\n            await participant.participate(trusted);\n        }\n    }\n    dispose() {\n        this.participants.clear();\n    }\n}\nclass WorkspaceTrustMemento {\n    constructor(storageService) {\n        this._acceptsOutOfWorkspaceFilesKey = 'acceptsOutOfWorkspaceFiles';\n        this._isEmptyWorkspaceTrustedKey = 'isEmptyWorkspaceTrusted';\n        if (storageService) {\n            this._memento = ( new Memento('workspaceTrust', storageService));\n            this._mementoObject = this._memento.getMemento(1 , 1 );\n        }\n        else {\n            this._mementoObject = {};\n        }\n    }\n    get acceptsOutOfWorkspaceFiles() {\n        return this._mementoObject[this._acceptsOutOfWorkspaceFilesKey] ?? false;\n    }\n    set acceptsOutOfWorkspaceFiles(value) {\n        this._mementoObject[this._acceptsOutOfWorkspaceFilesKey] = value;\n        this._memento?.saveMemento();\n    }\n    get isEmptyWorkspaceTrusted() {\n        return this._mementoObject[this._isEmptyWorkspaceTrustedKey];\n    }\n    set isEmptyWorkspaceTrusted(value) {\n        this._mementoObject[this._isEmptyWorkspaceTrustedKey] = value;\n        this._memento?.saveMemento();\n    }\n}\nexport { CanonicalWorkspace, WORKSPACE_TRUST_BANNER, WORKSPACE_TRUST_EMPTY_WINDOW, WORKSPACE_TRUST_ENABLED, WORKSPACE_TRUST_EXTENSION_SUPPORT, WORKSPACE_TRUST_STARTUP_PROMPT, WORKSPACE_TRUST_STORAGE_KEY, WORKSPACE_TRUST_UNTRUSTED_FILES, WorkspaceTrustEnablementService, WorkspaceTrustManagementService, WorkspaceTrustRequestService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IRemoteExtensionsScannerService = ( createDecorator('IRemoteExtensionsScannerService'));\nexport { IRemoteExtensionsScannerService };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { AbstractURLService } from '../../../../platform/url/common/urlService.js';\nimport { IBrowserWorkbenchEnvironmentService } from '../../environment/browser/environmentService.js';\nimport { matchesScheme, IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { IProductService } from 'monaco-editor/esm/vs/platform/product/common/productService.js';\nclass BrowserURLOpener {\n    constructor(urlService, productService) {\n        this.urlService = urlService;\n        this.productService = productService;\n    }\n    async open(resource, options) {\n        if (options?.openExternal) {\n            return false;\n        }\n        if (!matchesScheme(resource, this.productService.urlProtocol)) {\n            return false;\n        }\n        if (typeof resource === 'string') {\n            resource = ( URI.parse(resource));\n        }\n        return this.urlService.open(resource, { trusted: true });\n    }\n}\nlet BrowserURLService = class BrowserURLService extends AbstractURLService {\n    constructor(environmentService, openerService, productService) {\n        super();\n        this.provider = environmentService.options?.urlCallbackProvider;\n        if (this.provider) {\n            this._register(this.provider.onCallback(uri => this.open(uri, { trusted: true })));\n        }\n        this._register(openerService.registerOpener(( new BrowserURLOpener(this, productService))));\n    }\n    create(options) {\n        if (this.provider) {\n            return this.provider.create(options);\n        }\n        return ( URI.parse('unsupported://'));\n    }\n};\nBrowserURLService = ( __decorate([\n    ( __param(0, IBrowserWorkbenchEnvironmentService)),\n    ( __param(1, IOpenerService)),\n    ( __param(2, IProductService))\n], BrowserURLService));\nexport { BrowserURLService };\n", "import { first } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { Disposable, toDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nclass AbstractURLService extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.handlers = ( new Set());\n    }\n    open(uri, options) {\n        const handlers = [...( this.handlers.values())];\n        return first(( handlers.map(h => () => h.handleURL(uri, options))), undefined, false).then(val => val || false);\n    }\n    registerHandler(handler) {\n        this.handlers.add(handler);\n        return toDisposable(() => this.handlers.delete(handler));\n    }\n}\nexport { AbstractURLService };\n", "import { __decorate } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { joinPath } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { IEnvironmentService } from 'monaco-editor/esm/vs/platform/environment/common/environment.js';\nimport { memoize } from 'monaco-editor/esm/vs/base/common/decorators.js';\nimport { onUnexpectedError } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { parseLineAndColumnAware } from 'monaco-editor/esm/vs/base/common/extpath.js';\nimport { LogLevelToString } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { isUndefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { refineServiceDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { EXTENSION_IDENTIFIER_WITH_LOG_REGEX } from '../../../../platform/environment/common/environmentService.js';\nconst IBrowserWorkbenchEnvironmentService = refineServiceDecorator(IEnvironmentService);\nclass BrowserWorkbenchEnvironmentService {\n    get remoteAuthority() { return this.options.remoteAuthority; }\n    get expectsResolverExtension() {\n        return !!this.options.remoteAuthority?.includes('+') && !this.options.webSocketFactory;\n    }\n    get isBuilt() { return !!this.productService.commit; }\n    get logLevel() {\n        const logLevelFromPayload = this.payload?.get('logLevel');\n        if (logLevelFromPayload) {\n            return logLevelFromPayload.split(',').find(entry => !EXTENSION_IDENTIFIER_WITH_LOG_REGEX.test(entry));\n        }\n        return this.options.developmentOptions?.logLevel !== undefined ? LogLevelToString(this.options.developmentOptions?.logLevel) : undefined;\n    }\n    get extensionLogLevel() {\n        const logLevelFromPayload = this.payload?.get('logLevel');\n        if (logLevelFromPayload) {\n            const result = [];\n            for (const entry of logLevelFromPayload.split(',')) {\n                const matches = EXTENSION_IDENTIFIER_WITH_LOG_REGEX.exec(entry);\n                if (matches && matches[1] && matches[2]) {\n                    result.push([matches[1], matches[2]]);\n                }\n            }\n            return result.length ? result : undefined;\n        }\n        return this.options.developmentOptions?.extensionLogLevel !== undefined ? this.options.developmentOptions?.extensionLogLevel.map(([extension, logLevel]) => ([extension, LogLevelToString(logLevel)])) : undefined;\n    }\n    get profDurationMarkers() {\n        const profDurationMarkersFromPayload = this.payload?.get('profDurationMarkers');\n        if (profDurationMarkersFromPayload) {\n            const result = [];\n            for (const entry of profDurationMarkersFromPayload.split(',')) {\n                result.push(entry);\n            }\n            return result.length === 2 ? result : undefined;\n        }\n        return undefined;\n    }\n    get windowLogsPath() { return this.logsHome; }\n    get logFile() { return joinPath(this.windowLogsPath, 'window.log'); }\n    get userRoamingDataHome() { return URI.file('/User').with({ scheme: Schemas.vscodeUserData }); }\n    get argvResource() { return joinPath(this.userRoamingDataHome, 'argv.json'); }\n    get cacheHome() { return joinPath(this.userRoamingDataHome, 'caches'); }\n    get workspaceStorageHome() { return joinPath(this.userRoamingDataHome, 'workspaceStorage'); }\n    get localHistoryHome() { return joinPath(this.userRoamingDataHome, 'History'); }\n    get stateResource() { return joinPath(this.userRoamingDataHome, 'State', 'storage.json'); }\n    get userDataSyncHome() { return joinPath(this.userRoamingDataHome, 'sync', this.workspaceId); }\n    get sync() { return undefined; }\n    get keyboardLayoutResource() { return joinPath(this.userRoamingDataHome, 'keyboardLayout.json'); }\n    get untitledWorkspacesHome() { return joinPath(this.userRoamingDataHome, 'Workspaces'); }\n    get serviceMachineIdResource() { return joinPath(this.userRoamingDataHome, 'machineid'); }\n    get extHostLogsPath() { return joinPath(this.logsHome, 'exthost'); }\n    get extHostTelemetryLogFile() {\n        return joinPath(this.extHostLogsPath, 'extensionTelemetry.log');\n    }\n    get debugExtensionHost() {\n        if (!this.extensionHostDebugEnvironment) {\n            this.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n        }\n        return this.extensionHostDebugEnvironment.params;\n    }\n    get isExtensionDevelopment() {\n        if (!this.extensionHostDebugEnvironment) {\n            this.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n        }\n        return this.extensionHostDebugEnvironment.isExtensionDevelopment;\n    }\n    get extensionDevelopmentLocationURI() {\n        if (!this.extensionHostDebugEnvironment) {\n            this.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n        }\n        return this.extensionHostDebugEnvironment.extensionDevelopmentLocationURI;\n    }\n    get extensionDevelopmentLocationKind() {\n        if (!this.extensionHostDebugEnvironment) {\n            this.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n        }\n        return this.extensionHostDebugEnvironment.extensionDevelopmentKind;\n    }\n    get extensionTestsLocationURI() {\n        if (!this.extensionHostDebugEnvironment) {\n            this.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n        }\n        return this.extensionHostDebugEnvironment.extensionTestsLocationURI;\n    }\n    get extensionEnabledProposedApi() {\n        if (!this.extensionHostDebugEnvironment) {\n            this.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n        }\n        return this.extensionHostDebugEnvironment.extensionEnabledProposedApi;\n    }\n    get debugRenderer() {\n        if (!this.extensionHostDebugEnvironment) {\n            this.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n        }\n        return this.extensionHostDebugEnvironment.debugRenderer;\n    }\n    get enableSmokeTestDriver() { return this.options.developmentOptions?.enableSmokeTestDriver; }\n    get disableExtensions() { return this.payload?.get('disableExtensions') === 'true'; }\n    get enableExtensions() { return this.options.enabledExtensions; }\n    get webviewExternalEndpoint() {\n        const endpoint = this.options.webviewEndpoint\n            || this.productService.webviewContentExternalBaseUrlTemplate\n            || 'https://{{uuid}}.vscode-cdn.net/{{quality}}/{{commit}}/out/vs/workbench/contrib/webview/browser/pre/';\n        const webviewExternalEndpointCommit = this.payload?.get('webviewExternalEndpointCommit');\n        return endpoint\n            .replace('{{commit}}', webviewExternalEndpointCommit ?? this.productService.commit ?? 'ef65ac1ba57f57f2a3961bfe94aa20481caca4c6')\n            .replace('{{quality}}', (webviewExternalEndpointCommit ? 'insider' : this.productService.quality) ?? 'insider');\n    }\n    get extensionTelemetryLogResource() { return joinPath(this.logsHome, 'extensionTelemetry.log'); }\n    get disableTelemetry() { return false; }\n    get verbose() { return this.payload?.get('verbose') === 'true'; }\n    get logExtensionHostCommunication() { return this.payload?.get('logExtensionHostCommunication') === 'true'; }\n    get skipReleaseNotes() { return this.payload?.get('skipReleaseNotes') === 'true'; }\n    get skipWelcome() { return this.payload?.get('skipWelcome') === 'true'; }\n    get disableWorkspaceTrust() { return !this.options.enableWorkspaceTrust; }\n    get lastActiveProfile() { return this.payload?.get('lastActiveProfile'); }\n    constructor(workspaceId, logsHome, options, productService) {\n        this.workspaceId = workspaceId;\n        this.logsHome = logsHome;\n        this.options = options;\n        this.productService = productService;\n        this.extensionHostDebugEnvironment = undefined;\n        this.editSessionId = this.options.editSessionId;\n        if (options.workspaceProvider && Array.isArray(options.workspaceProvider.payload)) {\n            try {\n                this.payload = ( new Map(options.workspaceProvider.payload));\n            }\n            catch (error) {\n                onUnexpectedError(error);\n            }\n        }\n    }\n    resolveExtensionHostDebugEnvironment() {\n        const extensionHostDebugEnvironment = {\n            params: {\n                port: null,\n                break: false\n            },\n            debugRenderer: false,\n            isExtensionDevelopment: false,\n            extensionDevelopmentLocationURI: undefined,\n            extensionDevelopmentKind: undefined\n        };\n        if (this.payload) {\n            for (const [key, value] of this.payload) {\n                switch (key) {\n                    case 'extensionDevelopmentPath':\n                        if (!extensionHostDebugEnvironment.extensionDevelopmentLocationURI) {\n                            extensionHostDebugEnvironment.extensionDevelopmentLocationURI = [];\n                        }\n                        extensionHostDebugEnvironment.extensionDevelopmentLocationURI.push(( URI.parse(value)));\n                        extensionHostDebugEnvironment.isExtensionDevelopment = true;\n                        break;\n                    case 'extensionDevelopmentKind':\n                        extensionHostDebugEnvironment.extensionDevelopmentKind = [value];\n                        break;\n                    case 'extensionTestsPath':\n                        extensionHostDebugEnvironment.extensionTestsLocationURI = ( URI.parse(value));\n                        break;\n                    case 'debugRenderer':\n                        extensionHostDebugEnvironment.debugRenderer = value === 'true';\n                        break;\n                    case 'debugId':\n                        extensionHostDebugEnvironment.params.debugId = value;\n                        break;\n                    case 'inspect-brk-extensions':\n                        extensionHostDebugEnvironment.params.port = parseInt(value);\n                        extensionHostDebugEnvironment.params.break = true;\n                        break;\n                    case 'inspect-extensions':\n                        extensionHostDebugEnvironment.params.port = parseInt(value);\n                        break;\n                    case 'enableProposedApi':\n                        extensionHostDebugEnvironment.extensionEnabledProposedApi = [];\n                        break;\n                }\n            }\n        }\n        const developmentOptions = this.options.developmentOptions;\n        if (developmentOptions && !extensionHostDebugEnvironment.isExtensionDevelopment) {\n            if (developmentOptions.extensions?.length) {\n                extensionHostDebugEnvironment.extensionDevelopmentLocationURI = ( developmentOptions.extensions.map(e => URI.revive(e)));\n                extensionHostDebugEnvironment.isExtensionDevelopment = true;\n            }\n            if (developmentOptions.extensionTestsPath) {\n                extensionHostDebugEnvironment.extensionTestsLocationURI = URI.revive(developmentOptions.extensionTestsPath);\n            }\n        }\n        return extensionHostDebugEnvironment;\n    }\n    get filesToOpenOrCreate() {\n        if (this.payload) {\n            const fileToOpen = this.payload.get('openFile');\n            if (fileToOpen) {\n                const fileUri = ( URI.parse(fileToOpen));\n                if (( this.payload.has('gotoLineMode'))) {\n                    const pathColumnAware = parseLineAndColumnAware(fileUri.path);\n                    return [{\n                            fileUri: fileUri.with({ path: pathColumnAware.path }),\n                            options: {\n                                selection: !isUndefined(pathColumnAware.line) ? { startLineNumber: pathColumnAware.line, startColumn: pathColumnAware.column || 1 } : undefined\n                            }\n                        }];\n                }\n                return [{ fileUri }];\n            }\n        }\n        return undefined;\n    }\n    get filesToDiff() {\n        if (this.payload) {\n            const fileToDiffPrimary = this.payload.get('diffFilePrimary');\n            const fileToDiffSecondary = this.payload.get('diffFileSecondary');\n            if (fileToDiffPrimary && fileToDiffSecondary) {\n                return [\n                    { fileUri: ( URI.parse(fileToDiffSecondary)) },\n                    { fileUri: ( URI.parse(fileToDiffPrimary)) }\n                ];\n            }\n        }\n        return undefined;\n    }\n    get filesToMerge() {\n        if (this.payload) {\n            const fileToMerge1 = this.payload.get('mergeFile1');\n            const fileToMerge2 = this.payload.get('mergeFile2');\n            const fileToMergeBase = this.payload.get('mergeFileBase');\n            const fileToMergeResult = this.payload.get('mergeFileResult');\n            if (fileToMerge1 && fileToMerge2 && fileToMergeBase && fileToMergeResult) {\n                return [\n                    { fileUri: ( URI.parse(fileToMerge1)) },\n                    { fileUri: ( URI.parse(fileToMerge2)) },\n                    { fileUri: ( URI.parse(fileToMergeBase)) },\n                    { fileUri: ( URI.parse(fileToMergeResult)) }\n                ];\n            }\n        }\n        return undefined;\n    }\n}\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"remoteAuthority\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"expectsResolverExtension\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"isBuilt\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"logLevel\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"windowLogsPath\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"logFile\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"userRoamingDataHome\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"argvResource\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"cacheHome\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"workspaceStorageHome\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"localHistoryHome\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"stateResource\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"userDataSyncHome\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"sync\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"keyboardLayoutResource\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"untitledWorkspacesHome\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"serviceMachineIdResource\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"extHostLogsPath\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"extHostTelemetryLogFile\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"debugExtensionHost\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"isExtensionDevelopment\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"extensionDevelopmentLocationURI\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"extensionDevelopmentLocationKind\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"extensionTestsLocationURI\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"extensionEnabledProposedApi\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"debugRenderer\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"enableSmokeTestDriver\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"disableExtensions\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"enableExtensions\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"webviewExternalEndpoint\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"extensionTelemetryLogResource\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"disableTelemetry\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"verbose\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"logExtensionHostCommunication\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"skipReleaseNotes\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"skipWelcome\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"disableWorkspaceTrust\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"lastActiveProfile\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"filesToOpenOrCreate\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"filesToDiff\", null));\nBrowserWorkbenchEnvironmentService.__decorator = ( __decorate([\n    memoize\n], BrowserWorkbenchEnvironmentService.prototype, \"filesToMerge\", null));\nexport { BrowserWorkbenchEnvironmentService, IBrowserWorkbenchEnvironmentService };\n", "const EXTENSION_IDENTIFIER_WITH_LOG_REGEX = /^([^.]+\\..+):(.+)$/;\nexport { EXTENSION_IDENTIFIER_WITH_LOG_REGEX };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IURLService = ( createDecorator('urlService'));\nexport { IURLService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ICredentialsService = ( createDecorator('credentialsService'));\nexport { ICredentialsService };\n", "import { toDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IRemoteSocketFactoryService = ( createDecorator('remoteSocketFactoryService'));\nclass RemoteSocketFactoryService {\n    constructor() {\n        this.factories = {};\n    }\n    register(type, factory) {\n        this.factories[type] ??= [];\n        this.factories[type].push(factory);\n        return toDisposable(() => {\n            const idx = this.factories[type]?.indexOf(factory);\n            if (typeof idx === 'number' && idx >= 0) {\n                this.factories[type]?.splice(idx, 1);\n            }\n        });\n    }\n    getSocketFactory(messagePassing) {\n        const factories = (this.factories[messagePassing.type] || []);\n        return factories.find(factory => factory.supports(messagePassing));\n    }\n    connect(connectTo, path, query, debugLabel) {\n        const socketFactory = this.getSocketFactory(connectTo);\n        if (!socketFactory) {\n            throw new Error(`No socket factory found for ${connectTo}`);\n        }\n        return socketFactory.connect(connectTo, path, query, debugLabel);\n    }\n}\nexport { IRemoteSocketFactoryService, RemoteSocketFactoryService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst VIEWLET_ID = 'workbench.view.scm';\nconst ISCMService = ( createDecorator('scm'));\nconst ISCMViewService = ( createDecorator('scmView'));\nexport { ISCMService, ISCMViewService, VIEWLET_ID };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IDownloadService = ( createDecorator('downloadService'));\nexport { IDownloadService };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport '../../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { IURLService } from '../../../../platform/url/common/url.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { Extensions } from '../../../common/contributions.js';\nimport { registerAction2, Action2, MenuId } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IQuickInputService } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { IsWebContext } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkeys.js';\nvar ExtensionUrlBootstrapHandler_1;\nconst USER_TRUSTED_EXTENSIONS_STORAGE_KEY = 'extensionUrlHandler.confirmedExtensions';\nfunction isExtensionId(value) {\n    return /^[a-z0-9][a-z0-9\\-]*\\.[a-z0-9][a-z0-9\\-]*$/i.test(value);\n}\nclass UserTrustedExtensionIdStorage {\n    get extensions() {\n        const userTrustedExtensionIdsJson = this.storageService.get(USER_TRUSTED_EXTENSIONS_STORAGE_KEY, 0 , '[]');\n        try {\n            return JSON.parse(userTrustedExtensionIdsJson);\n        }\n        catch {\n            return [];\n        }\n    }\n    constructor(storageService) {\n        this.storageService = storageService;\n    }\n    has(id) {\n        return this.extensions.indexOf(id) > -1;\n    }\n    add(id) {\n        this.set([...this.extensions, id]);\n    }\n    set(ids) {\n        this.storageService.store(USER_TRUSTED_EXTENSIONS_STORAGE_KEY, JSON.stringify(ids), 0 , 1 );\n    }\n}\nconst IExtensionUrlHandler = ( createDecorator('extensionUrlHandler'));\nlet ExtensionUrlBootstrapHandler = class ExtensionUrlBootstrapHandler {\n    static { ExtensionUrlBootstrapHandler_1 = this; }\n    static { this._cache = []; }\n    static get cache() {\n        ExtensionUrlBootstrapHandler_1.disposable.dispose();\n        const result = ExtensionUrlBootstrapHandler_1._cache;\n        ExtensionUrlBootstrapHandler_1._cache = [];\n        return result;\n    }\n    constructor(urlService) {\n        ExtensionUrlBootstrapHandler_1.disposable = urlService.registerHandler(this);\n    }\n    async handleURL(uri, options) {\n        if (!isExtensionId(uri.authority)) {\n            return false;\n        }\n        ExtensionUrlBootstrapHandler_1._cache.push([uri, options]);\n        return true;\n    }\n};\nExtensionUrlBootstrapHandler = ExtensionUrlBootstrapHandler_1 = ( __decorate([\n    ( __param(0, IURLService))\n], ExtensionUrlBootstrapHandler));\nconst workbenchRegistry = ( Registry.as(Extensions.Workbench));\nworkbenchRegistry.registerWorkbenchContribution(ExtensionUrlBootstrapHandler, 2 );\nclass ManageAuthorizedExtensionURIsAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.extensions.action.manageAuthorizedExtensionURIs',\n            title: { value: ( localize('manage', \"Manage Authorized Extension URIs...\")), original: 'Manage Authorized Extension URIs...' },\n            category: { value: ( localize('extensions', \"Extensions\")), original: 'Extensions' },\n            menu: {\n                id: MenuId.CommandPalette,\n                when: ( IsWebContext.toNegated())\n            }\n        });\n    }\n    async run(accessor) {\n        const storageService = accessor.get(IStorageService);\n        const quickInputService = accessor.get(IQuickInputService);\n        const storage = ( new UserTrustedExtensionIdStorage(storageService));\n        const items = ( storage.extensions.map(label => ({ label, picked: true })));\n        if (items.length === 0) {\n            await quickInputService.pick([{ label: ( localize('no', 'There are currently no authorized extension URIs.')) }]);\n            return;\n        }\n        const result = await quickInputService.pick(items, { canPickMany: true });\n        if (!result) {\n            return;\n        }\n        storage.set(( result.map(item => item.label)));\n    }\n}\nregisterAction2(ManageAuthorizedExtensionURIsAction);\nexport { IExtensionUrlHandler };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ICommentService = ( createDecorator('commentService'));\nexport { ICommentService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst INotebookCellStatusBarService = ( createDecorator('notebookCellStatusBarService'));\nexport { INotebookCellStatusBarService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst INotebookKernelService = ( createDecorator('INotebookKernelService'));\nexport { INotebookKernelService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst INotebookRendererMessagingService = ( createDecorator('INotebookRendererMessagingService'));\nexport { INotebookRendererMessagingService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IInteractiveDocumentService = ( createDecorator('IInteractiveDocumentService'));\nexport { IInteractiveDocumentService };\n", "import { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { MenuId } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { Extensions as Extensions$1 } from 'monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { registerColor, editorWidgetBackground, editorWidgetBorder, widgetShadow, editorHoverHighlight, focusBorder, inputPlaceholderForeground, inputBackground, transparent, diffInserted, diffRemoved } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { Extensions } from '../../../common/configuration.js';\nconst IInlineChatService = ( createDecorator('IInlineChatService'));\nMenuId.for('inlineChatWidget');\nMenuId.for('inlineChatWidget.markdownMessage');\nMenuId.for('inlineChatWidget.status');\nMenuId.for('inlineChatWidget.feedback');\nMenuId.for('inlineChatWidget.undo');\nMenuId.for('inlineChatWidget.toggle');\nregisterColor('inlineChat.background', { dark: editorWidgetBackground, light: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, ( localize(\n    'inlineChat.background',\n    \"Background color of the interactive editor widget\"\n)));\nregisterColor('inlineChat.border', { dark: editorWidgetBorder, light: editorWidgetBorder, hcDark: editorWidgetBorder, hcLight: editorWidgetBorder }, ( localize('inlineChat.border', \"Border color of the interactive editor widget\")));\nregisterColor('inlineChat.shadow', { dark: widgetShadow, light: widgetShadow, hcDark: widgetShadow, hcLight: widgetShadow }, ( localize('inlineChat.shadow', \"Shadow color of the interactive editor widget\")));\nregisterColor('inlineChat.regionHighlight', { dark: editorHoverHighlight, light: editorHoverHighlight, hcDark: editorHoverHighlight, hcLight: editorHoverHighlight }, ( localize(\n    'inlineChat.regionHighlight',\n    \"Background highlighting of the current interactive region. Must be transparent.\"\n)), true);\nregisterColor('inlineChatInput.border', { dark: editorWidgetBorder, light: editorWidgetBorder, hcDark: editorWidgetBorder, hcLight: editorWidgetBorder }, ( localize('inlineChatInput.border', \"Border color of the interactive editor input\")));\nregisterColor('inlineChatInput.focusBorder', { dark: focusBorder, light: focusBorder, hcDark: focusBorder, hcLight: focusBorder }, ( localize(\n    'inlineChatInput.focusBorder',\n    \"Border color of the interactive editor input when focused\"\n)));\nregisterColor('inlineChatInput.placeholderForeground', { dark: inputPlaceholderForeground, light: inputPlaceholderForeground, hcDark: inputPlaceholderForeground, hcLight: inputPlaceholderForeground }, ( localize(\n    'inlineChatInput.placeholderForeground',\n    \"Foreground color of the interactive editor input placeholder\"\n)));\nregisterColor('inlineChatInput.background', { dark: inputBackground, light: inputBackground, hcDark: inputBackground, hcLight: inputBackground }, ( localize(\n    'inlineChatInput.background',\n    \"Background color of the interactive editor input\"\n)));\nregisterColor('inlineChatDiff.inserted', { dark: ( transparent(diffInserted, .5)), light: ( transparent(diffInserted, .5)), hcDark: ( transparent(diffInserted, .5)), hcLight: ( transparent(diffInserted, .5)) }, ( localize(\n    'inlineChatDiff.inserted',\n    \"Background color of inserted text in the interactive editor input\"\n)));\nregisterColor('inlineChatDiff.removed', { dark: ( transparent(diffRemoved, .5)), light: ( transparent(diffRemoved, .5)), hcDark: ( transparent(diffRemoved, .5)), hcLight: ( transparent(diffRemoved, .5)) }, ( localize(\n    'inlineChatDiff.removed',\n    \"Background color of removed text in the interactive editor input\"\n)));\n( Registry.as(Extensions.ConfigurationMigration)).registerConfigurationMigrations([{\n        key: 'interactiveEditor.editMode', migrateFn: (value) => {\n            return [['inlineChat.mode', { value: value }]];\n        }\n    }]);\n( Registry.as(Extensions$1.Configuration)).registerConfiguration({\n    id: 'editor',\n    properties: {\n        'inlineChat.mode': {\n            description: ( localize(\n                'mode',\n                \"Configure if changes crafted in the interactive editor are applied directly to the document or are previewed first.\"\n            )),\n            default: \"livePreview\" ,\n            type: 'string',\n            enum: [\"livePreview\" , \"preview\" , \"live\" ],\n            markdownEnumDescriptions: [\n                ( localize(\n                    'mode.livePreview',\n                    \"Changes are applied directly to the document and are highlighted visually via inline or side-by-side diffs. Ending a session will keep the changes.\"\n                )),\n                ( localize(\n                    'mode.preview',\n                    \"Changes are previewed only and need to be accepted via the apply button. Ending a session will discard the changes.\"\n                )),\n                ( localize(\n                    'mode.live',\n                    \"Changes are applied directly to the document but can be highlighted via inline diffs. Ending a session will keep the changes.\"\n                )),\n            ]\n        },\n        'inlineChat.showDiff': {\n            description: ( localize(\n                'showDiff',\n                \"Enable/disable showing the diff when edits are generated. Works only with inlineChat.mode equal to live or livePreview.\"\n            )),\n            default: true,\n            type: 'boolean'\n        }\n    }\n});\nexport { IInlineChatService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IChatWidgetService = ( createDecorator('chatWidgetService'));\nconst IQuickChatService = ( createDecorator('quickChatService'));\nexport { IChatWidgetService, IQuickChatService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IRemoteExplorerService = ( createDecorator('remoteExplorerService'));\nconst TUNNEL_VIEW_ID = '~remote.forwardedPorts';\nconst PORT_AUTO_FORWARD_SETTING = 'remote.autoForwardPorts';\nconst PORT_AUTO_SOURCE_SETTING = 'remote.autoForwardPortsSource';\nconst PORT_AUTO_SOURCE_SETTING_OUTPUT = 'output';\nvar TunnelType;\n( (function(TunnelType) {\n    TunnelType[\"Candidate\"] = \"Candidate\";\n    TunnelType[\"Detected\"] = \"Detected\";\n    TunnelType[\"Forwarded\"] = \"Forwarded\";\n    TunnelType[\"Add\"] = \"Add\";\n})(TunnelType || (TunnelType = {})));\nvar TunnelEditId;\n( (function(TunnelEditId) {\n    TunnelEditId[TunnelEditId[\"None\"] = 0] = \"None\";\n    TunnelEditId[TunnelEditId[\"New\"] = 1] = \"New\";\n    TunnelEditId[TunnelEditId[\"Label\"] = 2] = \"Label\";\n    TunnelEditId[TunnelEditId[\"LocalPort\"] = 3] = \"LocalPort\";\n})(TunnelEditId || (TunnelEditId = {})));\nexport { IRemoteExplorerService, PORT_AUTO_FORWARD_SETTING, PORT_AUTO_SOURCE_SETTING, PORT_AUTO_SOURCE_SETTING_OUTPUT, TUNNEL_VIEW_ID, TunnelEditId, TunnelType };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IAuthenticationService = ( createDecorator('IAuthenticationService'));\nexport { IAuthenticationService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst TIMELINE_SERVICE_ID = 'timeline';\nconst ITimelineService = ( createDecorator(TIMELINE_SERVICE_ID));\nexport { ITimelineService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ITestService = ( createDecorator('testService'));\nexport { ITestService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ISecretStorageService = ( createDecorator('secretStorageService'));\nexport { ISecretStorageService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IShareService = ( createDecorator('shareService'));\nexport { IShareService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IWorkbenchIssueService = ( createDecorator('workbenchIssueService'));\nexport { IWorkbenchIssueService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nvar NotebookExecutionType;\n( (function(NotebookExecutionType) {\n    NotebookExecutionType[NotebookExecutionType[\"cell\"] = 0] = \"cell\";\n    NotebookExecutionType[NotebookExecutionType[\"notebook\"] = 1] = \"notebook\";\n})(NotebookExecutionType || (NotebookExecutionType = {})));\nconst INotebookExecutionStateService = ( createDecorator('INotebookExecutionStateService'));\nexport { INotebookExecutionStateService, NotebookExecutionType };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IChatContributionService = ( createDecorator('IChatContributionService'));\nexport { IChatContributionService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ITestProfileService = ( createDecorator('testProfileService'));\nexport { ITestProfileService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IEncryptionService = ( createDecorator('encryptionService'));\nexport { IEncryptionService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ITestResultService = ( createDecorator('testResultService'));\nexport { ITestResultService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ID = 'diagnosticsService';\nconst IDiagnosticsService = ( createDecorator(ID));\nclass NullDiagnosticsService {\n    async getPerformanceInfo(mainProcessInfo, remoteInfo) {\n        return {};\n    }\n    async getSystemInfo(mainProcessInfo, remoteInfo) {\n        return {\n            processArgs: 'nullProcessArgs',\n            gpuStatus: 'nullGpuStatus',\n            screenReader: 'nullScreenReader',\n            remoteData: [],\n            os: 'nullOs',\n            memory: 'nullMemory',\n            vmHint: 'nullVmHint',\n        };\n    }\n    async getDiagnostics(mainProcessInfo, remoteInfo) {\n        return '';\n    }\n    async getWorkspaceFileExtensions(workspace) {\n        return { extensions: [] };\n    }\n    async reportWorkspaceStats(workspace) { }\n}\nexport { ID, IDiagnosticsService, NullDiagnosticsService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IChatProviderService = ( createDecorator('chatProviderService'));\nexport { IChatProviderService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IChatSlashCommandService = ( createDecorator('chatSlashCommandService'));\nexport { IChatSlashCommandService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IChatVariablesService = ( createDecorator('IChatVariablesService'));\nexport { IChatVariablesService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IAiRelatedInformationService = ( createDecorator('IAiRelatedInformationService'));\nvar RelatedInformationType;\n( (function(RelatedInformationType) {\n    RelatedInformationType[RelatedInformationType[\"SymbolInformation\"] = 1] = \"SymbolInformation\";\n    RelatedInformationType[RelatedInformationType[\"CommandInformation\"] = 2] = \"CommandInformation\";\n    RelatedInformationType[RelatedInformationType[\"SearchInformation\"] = 3] = \"SearchInformation\";\n    RelatedInformationType[RelatedInformationType[\"SettingInformation\"] = 4] = \"SettingInformation\";\n})(RelatedInformationType || (RelatedInformationType = {})));\nexport { IAiRelatedInformationService, RelatedInformationType };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { timeout, createCancelablePromise, raceCancellablePromises } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { StopWatch } from 'monaco-editor/esm/vs/base/common/stopwatch.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nvar AiEmbeddingVectorService_1;\nconst IAiEmbeddingVectorService = ( createDecorator('IAiEmbeddingVectorService'));\nlet AiEmbeddingVectorService = class AiEmbeddingVectorService {\n    static { AiEmbeddingVectorService_1 = this; }\n    static { this.DEFAULT_TIMEOUT = 1000 * 10; }\n    constructor(logService) {\n        this.logService = logService;\n        this._providers = [];\n    }\n    isEnabled() {\n        return this._providers.length > 0;\n    }\n    registerAiEmbeddingVectorProvider(model, provider) {\n        this._providers.push(provider);\n        return {\n            dispose: () => {\n                const index = this._providers.indexOf(provider);\n                if (index >= 0) {\n                    this._providers.splice(index, 1);\n                }\n            }\n        };\n    }\n    async getEmbeddingVector(strings, token) {\n        if (this._providers.length === 0) {\n            throw new Error('No embedding vector providers registered');\n        }\n        const stopwatch = StopWatch.create();\n        const cancellablePromises = [];\n        const timer = timeout(AiEmbeddingVectorService_1.DEFAULT_TIMEOUT);\n        const disposable = token.onCancellationRequested(() => {\n            disposable.dispose();\n            timer.cancel();\n        });\n        for (const provider of this._providers) {\n            cancellablePromises.push(createCancelablePromise(async (t) => {\n                try {\n                    return await provider.provideAiEmbeddingVector(Array.isArray(strings) ? strings : [strings], t);\n                }\n                catch (e) {\n                }\n                await timer;\n                throw new Error('Embedding vector provider timed out');\n            }));\n        }\n        cancellablePromises.push(createCancelablePromise(async (t) => {\n            const disposable = t.onCancellationRequested(() => {\n                timer.cancel();\n                disposable.dispose();\n            });\n            await timer;\n            throw new Error('Embedding vector provider timed out');\n        }));\n        try {\n            const result = await raceCancellablePromises(cancellablePromises);\n            if (result.length === 1) {\n                return result[0];\n            }\n            return result;\n        }\n        finally {\n            stopwatch.stop();\n            this.logService.trace(`[AiEmbeddingVectorService]: getEmbeddingVector took ${stopwatch.elapsed()}ms`);\n        }\n    }\n};\nAiEmbeddingVectorService = AiEmbeddingVectorService_1 = ( __decorate([\n    ( __param(0, ILogService))\n], AiEmbeddingVectorService));\nexport { AiEmbeddingVectorService, IAiEmbeddingVectorService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst SIGN_SERVICE_ID = 'signService';\nconst ISignService = ( createDecorator(SIGN_SERVICE_ID));\nexport { ISignService, SIGN_SERVICE_ID };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { ILayoutService } from 'monaco-editor/esm/vs/platform/layout/browser/layoutService.js';\nimport { IEditorService } from '../../editor/common/editorService.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { isFolderToOpen, isWorkspaceToOpen, isFileToOpen } from '../../../../platform/window/common/window.js';\nimport { pathsToEditors, isResourceEditorInput } from '../../../common/editor.js';\nimport { whenEditorClosed } from '../../../browser/editor.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { ModifierKeyEmitter, trackFocus } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IBrowserWorkbenchEnvironmentService } from '../../environment/browser/environmentService.js';\nimport { memoize } from 'monaco-editor/esm/vs/base/common/decorators.js';\nimport { parseLineAndColumnAware } from 'monaco-editor/esm/vs/base/common/extpath.js';\nimport { IWorkspaceEditingService } from '../../workspaces/common/workspaceEditing.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ILifecycleService } from '../../lifecycle/common/lifecycle.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { getWorkspaceIdentifier } from '../../workspaces/browser/workspaces.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport Severity from 'monaco-editor/esm/vs/base/common/severity.js';\nimport '../../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { DomEmitter } from 'monaco-editor/esm/vs/base/browser/event.js';\nimport { isUndefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { isTemporaryWorkspace, IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { IUserDataProfileService } from '../../userDataProfile/common/userDataProfile.js';\nimport { coalesce } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nvar HostShutdownReason;\n( (function(HostShutdownReason) {\n    HostShutdownReason[HostShutdownReason[\"Unknown\"] = 1] = \"Unknown\";\n    HostShutdownReason[HostShutdownReason[\"Keyboard\"] = 2] = \"Keyboard\";\n    HostShutdownReason[HostShutdownReason[\"Api\"] = 3] = \"Api\";\n})(HostShutdownReason || (HostShutdownReason = {})));\nlet BrowserHostService = class BrowserHostService extends Disposable {\n    constructor(layoutService, configurationService, fileService, labelService, environmentService, instantiationService, lifecycleService, logService, dialogService, contextService, userDataProfileService) {\n        super();\n        this.layoutService = layoutService;\n        this.configurationService = configurationService;\n        this.fileService = fileService;\n        this.labelService = labelService;\n        this.environmentService = environmentService;\n        this.instantiationService = instantiationService;\n        this.lifecycleService = lifecycleService;\n        this.logService = logService;\n        this.dialogService = dialogService;\n        this.contextService = contextService;\n        this.userDataProfileService = userDataProfileService;\n        this.shutdownReason = HostShutdownReason.Unknown;\n        if (environmentService.options?.workspaceProvider) {\n            this.workspaceProvider = environmentService.options.workspaceProvider;\n        }\n        else {\n            this.workspaceProvider = new class {\n                constructor() {\n                    this.workspace = undefined;\n                    this.trusted = undefined;\n                }\n                async open() { return true; }\n            };\n        }\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.lifecycleService.onBeforeShutdown(e => this.onBeforeShutdown(e)));\n        this._register(ModifierKeyEmitter.getInstance().event(() => this.updateShutdownReasonFromEvent()));\n    }\n    onBeforeShutdown(e) {\n        switch (this.shutdownReason) {\n            case HostShutdownReason.Unknown:\n            case HostShutdownReason.Keyboard: {\n                const confirmBeforeClose = this.configurationService.getValue('window.confirmBeforeClose');\n                if (confirmBeforeClose === 'always' || (confirmBeforeClose === 'keyboardOnly' && this.shutdownReason === HostShutdownReason.Keyboard)) {\n                    e.veto(true, 'veto.confirmBeforeClose');\n                }\n                break;\n            }\n        }\n        this.shutdownReason = HostShutdownReason.Unknown;\n    }\n    updateShutdownReasonFromEvent() {\n        if (this.shutdownReason === HostShutdownReason.Api) {\n            return;\n        }\n        if (ModifierKeyEmitter.getInstance().isModifierPressed) {\n            this.shutdownReason = HostShutdownReason.Keyboard;\n        }\n        else {\n            this.shutdownReason = HostShutdownReason.Unknown;\n        }\n    }\n    get onDidChangeFocus() {\n        const focusTracker = this._register(trackFocus(window));\n        const onVisibilityChange = this._register(( new DomEmitter(window.document, 'visibilitychange')));\n        return Event.latch(Event.any(( Event.map(focusTracker.onDidFocus, () => this.hasFocus)), ( Event.map(focusTracker.onDidBlur, () => this.hasFocus)), ( Event.map(onVisibilityChange.event, () => this.hasFocus))));\n    }\n    get hasFocus() {\n        return document.hasFocus();\n    }\n    async hadLastFocus() {\n        return true;\n    }\n    async focus() {\n        window.focus();\n    }\n    openWindow(arg1, arg2) {\n        if (Array.isArray(arg1)) {\n            return this.doOpenWindow(arg1, arg2);\n        }\n        return this.doOpenEmptyWindow(arg1);\n    }\n    async doOpenWindow(toOpen, options) {\n        const payload = this.preservePayload(false );\n        const fileOpenables = [];\n        const foldersToAdd = [];\n        for (const openable of toOpen) {\n            openable.label = openable.label || this.getRecentLabel(openable);\n            if (isFolderToOpen(openable)) {\n                if (options?.addMode) {\n                    foldersToAdd.push(({ uri: openable.folderUri }));\n                }\n                else {\n                    this.doOpen({ folderUri: openable.folderUri }, { reuse: this.shouldReuse(options, false ), payload });\n                }\n            }\n            else if (isWorkspaceToOpen(openable)) {\n                this.doOpen({ workspaceUri: openable.workspaceUri }, { reuse: this.shouldReuse(options, false ), payload });\n            }\n            else if (isFileToOpen(openable)) {\n                fileOpenables.push(openable);\n            }\n        }\n        if (foldersToAdd.length > 0) {\n            this.withServices(accessor => {\n                const workspaceEditingService = accessor.get(IWorkspaceEditingService);\n                workspaceEditingService.addFolders(foldersToAdd);\n            });\n        }\n        if (fileOpenables.length > 0) {\n            this.withServices(async (accessor) => {\n                const editorService = accessor.get(IEditorService);\n                if (options?.mergeMode && fileOpenables.length === 4) {\n                    const editors = coalesce(await pathsToEditors(fileOpenables, this.fileService, this.logService));\n                    if (editors.length !== 4 || !isResourceEditorInput(editors[0]) || !isResourceEditorInput(editors[1]) || !isResourceEditorInput(editors[2]) || !isResourceEditorInput(editors[3])) {\n                        return;\n                    }\n                    if (this.shouldReuse(options, true )) {\n                        editorService.openEditor({\n                            input1: { resource: editors[0].resource },\n                            input2: { resource: editors[1].resource },\n                            base: { resource: editors[2].resource },\n                            result: { resource: editors[3].resource },\n                            options: { pinned: true }\n                        });\n                    }\n                    else {\n                        const environment = ( new Map());\n                        environment.set('mergeFile1', ( editors[0].resource.toString()));\n                        environment.set('mergeFile2', ( editors[1].resource.toString()));\n                        environment.set('mergeFileBase', ( editors[2].resource.toString()));\n                        environment.set('mergeFileResult', ( editors[3].resource.toString()));\n                        this.doOpen(undefined, { payload: Array.from(environment.entries()) });\n                    }\n                }\n                if (options?.diffMode && fileOpenables.length === 2) {\n                    const editors = coalesce(await pathsToEditors(fileOpenables, this.fileService, this.logService));\n                    if (editors.length !== 2 || !isResourceEditorInput(editors[0]) || !isResourceEditorInput(editors[1])) {\n                        return;\n                    }\n                    if (this.shouldReuse(options, true )) {\n                        editorService.openEditor({\n                            original: { resource: editors[0].resource },\n                            modified: { resource: editors[1].resource },\n                            options: { pinned: true }\n                        });\n                    }\n                    else {\n                        const environment = ( new Map());\n                        environment.set('diffFileSecondary', ( editors[0].resource.toString()));\n                        environment.set('diffFilePrimary', ( editors[1].resource.toString()));\n                        this.doOpen(undefined, { payload: Array.from(environment.entries()) });\n                    }\n                }\n                else {\n                    for (const openable of fileOpenables) {\n                        if (this.shouldReuse(options, true )) {\n                            let openables = [];\n                            if (options?.gotoLineMode) {\n                                const pathColumnAware = parseLineAndColumnAware(openable.fileUri.path);\n                                openables = [{\n                                        fileUri: openable.fileUri.with({ path: pathColumnAware.path }),\n                                        options: {\n                                            selection: !isUndefined(pathColumnAware.line) ? { startLineNumber: pathColumnAware.line, startColumn: pathColumnAware.column || 1 } : undefined\n                                        }\n                                    }];\n                            }\n                            else {\n                                openables = [openable];\n                            }\n                            editorService.openEditors(coalesce(await pathsToEditors(openables, this.fileService, this.logService)), undefined, { validateTrust: true });\n                        }\n                        else {\n                            const environment = ( new Map());\n                            environment.set('openFile', ( openable.fileUri.toString()));\n                            if (options?.gotoLineMode) {\n                                environment.set('gotoLineMode', 'true');\n                            }\n                            this.doOpen(undefined, { payload: Array.from(environment.entries()) });\n                        }\n                    }\n                }\n                const waitMarkerFileURI = options?.waitMarkerFileURI;\n                if (waitMarkerFileURI) {\n                    (async () => {\n                        await this.instantiationService.invokeFunction(accessor => whenEditorClosed(accessor, ( fileOpenables.map(fileOpenable => fileOpenable.fileUri))));\n                        await this.fileService.del(waitMarkerFileURI);\n                    })();\n                }\n            });\n        }\n    }\n    withServices(fn) {\n        this.instantiationService.invokeFunction(accessor => fn(accessor));\n    }\n    preservePayload(isEmptyWindow) {\n        const newPayload = ( new Array());\n        if (!isEmptyWindow && this.environmentService.extensionDevelopmentLocationURI) {\n            newPayload.push(['extensionDevelopmentPath', ( this.environmentService.extensionDevelopmentLocationURI.toString())]);\n            if (this.environmentService.debugExtensionHost.debugId) {\n                newPayload.push(['debugId', this.environmentService.debugExtensionHost.debugId]);\n            }\n            if (this.environmentService.debugExtensionHost.port) {\n                newPayload.push(['inspect-brk-extensions', String(this.environmentService.debugExtensionHost.port)]);\n            }\n        }\n        if (!this.userDataProfileService.currentProfile.isDefault) {\n            newPayload.push(['lastActiveProfile', this.userDataProfileService.currentProfile.id]);\n        }\n        return newPayload.length ? newPayload : undefined;\n    }\n    getRecentLabel(openable) {\n        if (isFolderToOpen(openable)) {\n            return this.labelService.getWorkspaceLabel(openable.folderUri, { verbose: 2  });\n        }\n        if (isWorkspaceToOpen(openable)) {\n            return this.labelService.getWorkspaceLabel(getWorkspaceIdentifier(openable.workspaceUri), { verbose: 2  });\n        }\n        return this.labelService.getUriLabel(openable.fileUri);\n    }\n    shouldReuse(options = Object.create(null), isFile) {\n        if (options.waitMarkerFileURI) {\n            return true;\n        }\n        const windowConfig = this.configurationService.getValue('window');\n        const openInNewWindowConfig = isFile ? ((windowConfig?.openFilesInNewWindow || 'off') ) : ((windowConfig?.openFoldersInNewWindow || 'default') );\n        let openInNewWindow = (options.preferNewWindow || !!options.forceNewWindow) && !options.forceReuseWindow;\n        if (!options.forceNewWindow && !options.forceReuseWindow && (openInNewWindowConfig === 'on' || openInNewWindowConfig === 'off')) {\n            openInNewWindow = (openInNewWindowConfig === 'on');\n        }\n        return !openInNewWindow;\n    }\n    async doOpenEmptyWindow(options) {\n        return this.doOpen(undefined, {\n            reuse: options?.forceReuseWindow,\n            payload: this.preservePayload(true )\n        });\n    }\n    async doOpen(workspace, options) {\n        if (workspace && isFolderToOpen(workspace) && workspace.folderUri.scheme === Schemas.file && isTemporaryWorkspace(this.contextService.getWorkspace())) {\n            this.withServices(async (accessor) => {\n                const workspaceEditingService = accessor.get(IWorkspaceEditingService);\n                await workspaceEditingService.updateFolders(0, this.contextService.getWorkspace().folders.length, [{ uri: workspace.folderUri }]);\n            });\n            return;\n        }\n        if (options?.reuse) {\n            await this.handleExpectedShutdown(4 );\n        }\n        const opened = await this.workspaceProvider.open(workspace, options);\n        if (!opened) {\n            const { confirmed } = await this.dialogService.confirm({\n                type: Severity.Warning,\n                message: ( localize(\n                    'unableToOpenExternal',\n                    \"The browser interrupted the opening of a new tab or window. Press 'Open' to open it anyway.\"\n                )),\n                primaryButton: ( localize({ key: 'open', comment: ['&& denotes a mnemonic'] }, \"&&Open\"))\n            });\n            if (confirmed) {\n                await this.workspaceProvider.open(workspace, options);\n            }\n        }\n    }\n    async toggleFullScreen() {\n        const target = this.layoutService.container;\n        if (document.fullscreen !== undefined) {\n            if (!document.fullscreen) {\n                try {\n                    return await target.requestFullscreen();\n                }\n                catch (error) {\n                    this.logService.warn('toggleFullScreen(): requestFullscreen failed');\n                }\n            }\n            else {\n                try {\n                    return await document.exitFullscreen();\n                }\n                catch (error) {\n                    this.logService.warn('toggleFullScreen(): exitFullscreen failed');\n                }\n            }\n        }\n        if (document.webkitIsFullScreen !== undefined) {\n            try {\n                if (!document.webkitIsFullScreen) {\n                    target.webkitRequestFullscreen();\n                }\n                else {\n                    document.webkitExitFullscreen();\n                }\n            }\n            catch {\n                this.logService.warn('toggleFullScreen(): requestFullscreen/exitFullscreen failed');\n            }\n        }\n    }\n    async restart() {\n        this.reload();\n    }\n    async reload() {\n        await this.handleExpectedShutdown(3 );\n        window.location.reload();\n    }\n    async close() {\n        await this.handleExpectedShutdown(1 );\n        window.close();\n    }\n    async withExpectedShutdown(expectedShutdownTask) {\n        const previousShutdownReason = this.shutdownReason;\n        try {\n            this.shutdownReason = HostShutdownReason.Api;\n            return await expectedShutdownTask();\n        }\n        finally {\n            this.shutdownReason = previousShutdownReason;\n        }\n    }\n    async handleExpectedShutdown(reason) {\n        this.shutdownReason = HostShutdownReason.Api;\n        return this.lifecycleService.withExpectedShutdown(reason);\n    }\n};\nBrowserHostService.__decorator = ( __decorate([\n    memoize\n], BrowserHostService.prototype, \"onDidChangeFocus\", null));\nBrowserHostService = ( __decorate([\n    ( __param(0, ILayoutService)),\n    ( __param(1, IConfigurationService)),\n    ( __param(2, IFileService)),\n    ( __param(3, ILabelService)),\n    ( __param(4, IBrowserWorkbenchEnvironmentService)),\n    ( __param(5, IInstantiationService)),\n    ( __param(6, ILifecycleService)),\n    ( __param(7, ILogService)),\n    ( __param(8, IDialogService)),\n    ( __param(9, IWorkspaceContextService)),\n    ( __param(10, IUserDataProfileService))\n], BrowserHostService));\nexport { BrowserHostService };\n", "import { isMacintosh, isNative, isWeb, isLinux } from 'monaco-editor/esm/vs/base/common/platform.js';\nfunction isWorkspaceToOpen(uriToOpen) {\n    return !!uriToOpen.workspaceUri;\n}\nfunction isFolderToOpen(uriToOpen) {\n    return !!uriToOpen.folderUri;\n}\nfunction isFileToOpen(uriToOpen) {\n    return !!uriToOpen.fileUri;\n}\nfunction getMenuBarVisibility(configurationService) {\n    const titleBarStyle = getTitleBarStyle(configurationService);\n    const menuBarVisibility = configurationService.getValue('window.menuBarVisibility');\n    if (menuBarVisibility === 'default' || (titleBarStyle === 'native' && menuBarVisibility === 'compact') || (isMacintosh && isNative)) {\n        return 'classic';\n    }\n    else {\n        return menuBarVisibility;\n    }\n}\nfunction getTitleBarStyle(configurationService) {\n    if (isWeb) {\n        return 'custom';\n    }\n    const configuration = configurationService.getValue('window');\n    if (configuration) {\n        const useNativeTabs = isMacintosh && configuration.nativeTabs === true;\n        if (useNativeTabs) {\n            return 'native';\n        }\n        const useSimpleFullScreen = isMacintosh && configuration.nativeFullScreen === false;\n        if (useSimpleFullScreen) {\n            return 'native';\n        }\n        const style = configuration.titleBarStyle;\n        if (style === 'native' || style === 'custom') {\n            return style;\n        }\n    }\n    return isLinux ? 'native' : 'custom';\n}\nexport { getMenuBarVisibility, getTitleBarStyle, isFileToOpen, isFolderToOpen, isWorkspaceToOpen };\n", "import { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { EditorExtensions, EditorCloseContext, EditorResourceAccessor, SideBySideEditor } from '../common/editor.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { toDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { Promises } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { IEditorService } from '../services/editor/common/editorService.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { IWorkingCopyService } from '../services/workingCopy/common/workingCopyService.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { Iterable } from 'monaco-editor/esm/vs/base/common/iterator.js';\nclass EditorPaneDescriptor {\n    static create(ctor, typeId, name) {\n        return ( new EditorPaneDescriptor(ctor, typeId, name));\n    }\n    constructor(ctor, typeId, name) {\n        this.ctor = ctor;\n        this.typeId = typeId;\n        this.name = name;\n    }\n    instantiate(instantiationService) {\n        return instantiationService.createInstance(this.ctor);\n    }\n    describes(editorPane) {\n        return editorPane.getId() === this.typeId;\n    }\n}\nclass EditorPaneRegistry {\n    constructor() {\n        this.mapEditorPanesToEditors = ( new Map());\n    }\n    registerEditorPane(editorPaneDescriptor, editorDescriptors) {\n        this.mapEditorPanesToEditors.set(editorPaneDescriptor, editorDescriptors);\n        return toDisposable(() => {\n            this.mapEditorPanesToEditors.delete(editorPaneDescriptor);\n        });\n    }\n    getEditorPane(editor) {\n        const descriptors = this.findEditorPaneDescriptors(editor);\n        if (descriptors.length === 0) {\n            return undefined;\n        }\n        if (descriptors.length === 1) {\n            return descriptors[0];\n        }\n        return editor.prefersEditorPane(descriptors);\n    }\n    findEditorPaneDescriptors(editor, byInstanceOf) {\n        const matchingEditorPaneDescriptors = [];\n        for (const editorPane of ( this.mapEditorPanesToEditors.keys())) {\n            const editorDescriptors = this.mapEditorPanesToEditors.get(editorPane) || [];\n            for (const editorDescriptor of editorDescriptors) {\n                const editorClass = editorDescriptor.ctor;\n                if (!byInstanceOf && editor.constructor === editorClass) {\n                    matchingEditorPaneDescriptors.push(editorPane);\n                    break;\n                }\n                else if (byInstanceOf && editor instanceof editorClass) {\n                    matchingEditorPaneDescriptors.push(editorPane);\n                    break;\n                }\n            }\n        }\n        if (!byInstanceOf && matchingEditorPaneDescriptors.length === 0) {\n            return this.findEditorPaneDescriptors(editor, true);\n        }\n        return matchingEditorPaneDescriptors;\n    }\n    getEditorPaneByType(typeId) {\n        return Iterable.find(( this.mapEditorPanesToEditors.keys()), editor => editor.typeId === typeId);\n    }\n    getEditorPanes() {\n        return Array.from(( this.mapEditorPanesToEditors.keys()));\n    }\n    getEditors() {\n        const editorClasses = [];\n        for (const editorPane of ( this.mapEditorPanesToEditors.keys())) {\n            const editorDescriptors = this.mapEditorPanesToEditors.get(editorPane);\n            if (editorDescriptors) {\n                editorClasses.push(...( editorDescriptors.map(editorDescriptor => editorDescriptor.ctor)));\n            }\n        }\n        return editorClasses;\n    }\n}\nRegistry.add(EditorExtensions.EditorPane, ( new EditorPaneRegistry()));\nfunction whenEditorClosed(accessor, resources) {\n    const editorService = accessor.get(IEditorService);\n    const uriIdentityService = accessor.get(IUriIdentityService);\n    const workingCopyService = accessor.get(IWorkingCopyService);\n    return ( new Promise(resolve => {\n        let remainingResources = [...resources];\n        const listener = editorService.onDidCloseEditor(async (event) => {\n            if (event.context === EditorCloseContext.MOVE) {\n                return;\n            }\n            let primaryResource = EditorResourceAccessor.getOriginalUri(event.editor, { supportSideBySide: SideBySideEditor.PRIMARY });\n            let secondaryResource = EditorResourceAccessor.getOriginalUri(event.editor, { supportSideBySide: SideBySideEditor.SECONDARY });\n            if (event.context === EditorCloseContext.REPLACE) {\n                const newPrimaryResource = EditorResourceAccessor.getOriginalUri(editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n                const newSecondaryResource = EditorResourceAccessor.getOriginalUri(editorService.activeEditor, { supportSideBySide: SideBySideEditor.SECONDARY });\n                if (uriIdentityService.extUri.isEqual(primaryResource, newPrimaryResource)) {\n                    primaryResource = undefined;\n                }\n                if (uriIdentityService.extUri.isEqual(secondaryResource, newSecondaryResource)) {\n                    secondaryResource = undefined;\n                }\n            }\n            remainingResources = remainingResources.filter(resource => {\n                if (uriIdentityService.extUri.isEqual(resource, primaryResource) || uriIdentityService.extUri.isEqual(resource, secondaryResource)) {\n                    return false;\n                }\n                if (event.context !== EditorCloseContext.REPLACE) {\n                    if ((primaryResource?.scheme === Schemas.untitled && uriIdentityService.extUri.isEqual(resource, primaryResource.with({ scheme: resource.scheme }))) ||\n                        (secondaryResource?.scheme === Schemas.untitled && uriIdentityService.extUri.isEqual(resource, secondaryResource.with({ scheme: resource.scheme })))) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n            if (remainingResources.length === 0) {\n                const dirtyResources = resources.filter(resource => workingCopyService.isDirty(resource));\n                if (dirtyResources.length > 0) {\n                    await Promises.settled(( dirtyResources.map(async (resource) => await ( new Promise(resolve => {\n                        if (!workingCopyService.isDirty(resource)) {\n                            return resolve();\n                        }\n                        const listener = workingCopyService.onDidChangeDirty(workingCopy => {\n                            if (!workingCopy.isDirty() && uriIdentityService.extUri.isEqual(resource, workingCopy.resource)) {\n                                listener.dispose();\n                                return resolve();\n                            }\n                        });\n                    })))));\n                }\n                listener.dispose();\n                return resolve();\n            }\n        });\n    }));\n}\nfunction computeEditorAriaLabel(input, index, group, groupCount) {\n    let ariaLabel = input.getAriaLabel();\n    if (group && !group.isPinned(input)) {\n        ariaLabel = ( localize('preview', \"{0}, preview\", ariaLabel));\n    }\n    if (group?.isSticky(index ?? input)) {\n        ariaLabel = ( localize('pinned', \"{0}, pinned\", ariaLabel));\n    }\n    if (group && typeof groupCount === 'number' && groupCount > 1) {\n        ariaLabel = `${ariaLabel}, ${group.ariaLabel}`;\n    }\n    return ariaLabel;\n}\nexport { EditorPaneDescriptor, EditorPaneRegistry, computeEditorAriaLabel, whenEditorClosed };\n", "import { hash } from 'monaco-editor/esm/vs/base/common/hash.js';\nfunction getWorkspaceIdentifier(workspaceUri) {\n    return {\n        id: getWorkspaceId(workspaceUri),\n        configPath: workspaceUri\n    };\n}\nfunction getWorkspaceId(uri) {\n    return ( hash(( uri.toString())).toString(16));\n}\nexport { getWorkspaceIdentifier };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IBannerService = ( createDecorator('bannerService'));\nexport { IBannerService };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ITitleService = ( createDecorator('titleService'));\nexport { ITitleService };\n", "function unsupported() {\n    throw new Error('unsupported');\n}\nfunction memoized(fct) {\n    let v = null;\n    return (...args) => {\n        if (v == null) {\n            v = fct(...args);\n        }\n        return v;\n    };\n}\nfunction memoizedConstructor(ctor) {\n    return new Proxy(ctor, {\n        construct: memoized((target, args) => {\n            return Reflect.construct(ctor, args);\n        })\n    });\n}\nexport { memoized, memoizedConstructor, unsupported };\n", "import { __decorate, __param } from '../external/tslib/tslib.es6.js';\nimport '../missing-services.js';\nimport { StandaloneServices } from 'monaco-editor/esm/vs/editor/standalone/browser/standaloneServices.js';\nimport { SyncDescriptor } from 'monaco-editor/esm/vs/platform/instantiation/common/descriptors.js';\nimport { FileService } from '../vscode/src/vs/platform/files/common/fileService.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { InMemoryFileSystemProvider } from '../vscode/src/vs/platform/files/common/inMemoryFilesystemProvider.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { FileType, FilePermission } from '../vscode/src/vs/platform/files/common/files.js';\nexport { FileChangeType, FileSystemProviderCapabilities } from '../vscode/src/vs/platform/files/common/files.js';\nimport { createFileSystemProviderError, FileSystemProviderErrorCode, FileSystemProviderError, IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nexport { FileSystemProviderError, FileSystemProviderErrorCode } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { Disposable, DisposableStore, toDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { extUri, joinPath } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { Emitter, Event } from 'monaco-editor/esm/vs/base/common/event.js';\nexport { HTMLFileSystemProvider } from 'monaco-editor/esm/vs/platform/files/browser/htmlFileSystemProvider.js';\nimport * as path from 'monaco-editor/esm/vs/base/common/path.js';\nimport '../vscode/src/vs/workbench/contrib/files/browser/files.contribution.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nclass RegisteredFile {\n    constructor(uri, readonly) {\n        this.uri = uri;\n        this.readonly = readonly;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidDelete = new Emitter();\n        this.onDidDelete = this._onDidDelete.event;\n        this._onDidRename = new Emitter();\n        this.onDidRename = this._onDidRename.event;\n        this.ctime = Date.now();\n        this.mtime = Date.now();\n        this.type = FileType.File;\n    }\n    async stats() {\n        return {\n            ctime: this.ctime,\n            mtime: this.mtime,\n            size: await this.getSize(),\n            type: FileType.File,\n            permissions: this.readonly ? FilePermission.Readonly : undefined\n        };\n    }\n    async getSize() {\n        return (await this.read()).length;\n    }\n    async delete() {\n        this._onDidDelete.fire();\n    }\n    async rename(to) {\n        const previousUri = this.uri;\n        this.uri = to;\n        this._onDidRename.fire({ from: previousUri, to });\n    }\n}\nclass RegisteredReadOnlyFile extends RegisteredFile {\n    constructor(uri, read) {\n        super(uri, true);\n        this.read = read;\n    }\n    write() {\n        throw createFileSystemProviderError('Not allowed', FileSystemProviderErrorCode.FileWriteLocked);\n    }\n    async delete() {\n        throw createFileSystemProviderError('Not allowed', FileSystemProviderErrorCode.FileWriteLocked);\n    }\n    async rename() {\n        throw createFileSystemProviderError('Not allowed', FileSystemProviderErrorCode.FileWriteLocked);\n    }\n}\nclass RegisteredMemoryFile extends RegisteredFile {\n    constructor(uri, content) {\n        super(uri, false);\n        this.content = content;\n    }\n    async read() {\n        return this.content;\n    }\n    async write(content) {\n        this.content = content;\n        this._onDidChange.fire();\n    }\n}\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\nclass RegisteredFileSystemProvider extends Disposable {\n    constructor(readonly) {\n        super();\n        this.onDidChangeCapabilities = Event.None;\n        this._onDidChangeFile = new Emitter();\n        this.onDidChangeFile = this._onDidChangeFile.event;\n        this.files = new Map();\n        this.capabilities = 2  | 1024 ;\n        if (readonly) {\n            this.capabilities |= 2048 ;\n        }\n    }\n    registerFile(file) {\n        this.files.set(( file.uri.toString()), file);\n        this._onDidChangeFile.fire([{\n                resource: file.uri,\n                type: 1\n            }]);\n        const disposableStore = new DisposableStore();\n        disposableStore.add(toDisposable(() => {\n            if (this.files.get(( file.uri.toString())) === file) {\n                this.files.delete(( file.uri.toString()));\n                this._onDidChangeFile.fire([{\n                        resource: file.uri,\n                        type: 2\n                    }]);\n            }\n        }));\n        disposableStore.add(file.onDidDelete(() => {\n            disposableStore.dispose();\n        }));\n        disposableStore.add(file.onDidChange(() => {\n            this._onDidChangeFile.fire([{\n                    resource: file.uri,\n                    type: 0\n                }]);\n        }));\n        disposableStore.add(file.onDidRename(({ from, to }) => {\n            if (this.files.get(( from.toString())) === file) {\n                this.files.delete(( from.toString()));\n                this._onDidChangeFile.fire([{\n                        resource: from,\n                        type: 2\n                    }]);\n                this.files.set(( to.toString()), file);\n                this._onDidChangeFile.fire([{\n                        resource: to,\n                        type: 1\n                    }]);\n            }\n        }));\n        return disposableStore;\n    }\n    async stat(resource) {\n        const resourceUri = ( resource.toString());\n        const file = this.files.get(resourceUri);\n        if (file != null) {\n            return file.stats();\n        }\n        const handledUris = Array.from(( this.files.keys()));\n        for (const handledUri of handledUris) {\n            if (handledUri.startsWith(resourceUri + '/')) {\n                return {\n                    ctime: Date.now(),\n                    mtime: Date.now(),\n                    size: 0,\n                    type: FileType.Directory\n                };\n            }\n        }\n        throw createFileSystemProviderError('file not found', FileSystemProviderErrorCode.FileNotFound);\n    }\n    async readdir(resource) {\n        const includedPaths = ( Array.from(( this.files.keys()))\n            .map(uri => path.relative(resource.path, ( URI.parse(uri)).path)))\n            .filter(path => !path.startsWith('..'));\n        const files = includedPaths.filter(path => !path.includes('/'));\n        const directories = ( includedPaths.filter(path => path.includes('/')).map(path => path.slice(0, path.indexOf('/'))));\n        return [\n            ...( files.map(path => [\n                path,\n                FileType.File\n            ])),\n            ...( directories.map(path => [\n                path,\n                FileType.Directory\n            ]))\n        ];\n    }\n    async readFile(resource) {\n        const file = this.files.get(( resource.toString()));\n        if (file != null) {\n            const data = await file.read();\n            if (data instanceof Uint8Array) {\n                return data;\n            }\n            else {\n                return encoder.encode(data);\n            }\n        }\n        throw FileSystemProviderError.create('file not found', FileSystemProviderErrorCode.FileNotFound);\n    }\n    watch() {\n        return Disposable.None;\n    }\n    async writeFile(resource, content) {\n        const file = this.files.get(( resource.toString()));\n        if (file?.write != null) {\n            await file.write(decoder.decode(content));\n            return;\n        }\n        throw createFileSystemProviderError('Not allowed', FileSystemProviderErrorCode.NoPermissions);\n    }\n    async delete(resource) {\n        const file = this.files.get(( resource.toString()));\n        if (file != null) {\n            await file.delete();\n            return;\n        }\n        throw createFileSystemProviderError('File not found', FileSystemProviderErrorCode.FileNotFound);\n    }\n    async rename(from, to) {\n        const file = this.files.get(( from.toString()));\n        if (file != null) {\n            await file.rename(to);\n            return;\n        }\n        throw createFileSystemProviderError('File not found', FileSystemProviderErrorCode.FileNotFound);\n    }\n    async mkdir() {\n        throw createFileSystemProviderError('Not allowed', FileSystemProviderErrorCode.NoPermissions);\n    }\n}\nfunction isFullfiled(result) {\n    return result.status === 'fulfilled';\n}\nclass OverlayFileSystemProvider {\n    constructor() {\n        this.providers = [];\n        this.onDidChangeCapabilities = Event.None;\n        this._onDidChangeFile = new Emitter();\n        this.onDidChangeFile = this._onDidChangeFile.event;\n        this._onDidChangeOverlays = new Emitter();\n        this.onDidChangeOverlays = this._onDidChangeOverlays.event;\n        this.capabilities = 2  | 1024 ;\n    }\n    register(priority, provider) {\n        const item = { priority, provider };\n        this.providers.push(item);\n        this.providers.sort((a, b) => b.priority - a.priority);\n        const disposableStore = new DisposableStore();\n        disposableStore.add(provider.onDidChangeFile(e => {\n            this._onDidChangeFile.fire(e);\n        }));\n        disposableStore.add({\n            dispose: () => {\n                const index = this.providers.indexOf(item);\n                if (index >= 0) {\n                    this.providers.splice(index, 1);\n                    this._onDidChangeOverlays.fire();\n                }\n            }\n        });\n        this._onDidChangeOverlays.fire();\n        return disposableStore;\n    }\n    get delegates() {\n        return ( this.providers.map(({ provider }) => provider));\n    }\n    async readFromDelegates(caller) {\n        let firstError;\n        for (const delegate of this.delegates) {\n            try {\n                return await caller(delegate);\n            }\n            catch (err) {\n                firstError ?? (firstError = err);\n                if (err instanceof FileSystemProviderError && [\n                    FileSystemProviderErrorCode.NoPermissions,\n                    FileSystemProviderErrorCode.FileNotFound,\n                    FileSystemProviderErrorCode.Unavailable\n                ].includes(err.code)) {\n                    continue;\n                }\n                throw err;\n            }\n        }\n        throw firstError;\n    }\n    async writeToDelegates(resource, caller) {\n        for (const provider of this.delegates) {\n            if (((provider.capabilities & 2048) ) > 0) {\n                continue;\n            }\n            try {\n                return await caller(provider);\n            }\n            catch (err) {\n                if (err instanceof FileSystemProviderError && [\n                    FileSystemProviderErrorCode.NoPermissions,\n                    FileSystemProviderErrorCode.FileNotFound,\n                    FileSystemProviderErrorCode.Unavailable\n                ].includes(err.code)) {\n                    continue;\n                }\n                throw err;\n            }\n        }\n        throw createFileSystemProviderError('Not allowed', FileSystemProviderErrorCode.NoPermissions);\n    }\n    async stat(resource) {\n        return this.readFromDelegates(async (delegate) => {\n            const result = await delegate.stat(resource);\n            const readOnly = ((delegate.capabilities & 2048) ) > 0;\n            return {\n                ...result,\n                permissions: result.permissions ?? (readOnly ? FilePermission.Readonly : undefined)\n            };\n        });\n    }\n    async readFile(resource) {\n        return this.readFromDelegates(delegate => delegate.readFile(resource));\n    }\n    async readdir(resource) {\n        const results = await Promise.allSettled(( this.delegates.map(delegate => delegate.readdir(resource))));\n        if (!( results.some(isFullfiled))) {\n            throw results[0].reason;\n        }\n        return Object.entries(Object.fromEntries(( results.filter(isFullfiled).map(result => result.value)).flat()));\n    }\n    watch(resource, opts) {\n        const store = new DisposableStore();\n        for (const delegate of this.delegates) {\n            store.add(delegate.watch(resource, opts));\n        }\n        return store;\n    }\n    async writeFile(resource, content, opts) {\n        await this.writeToDelegates(resource, async (delegate) => {\n            try {\n                const stats = await delegate.stat(resource);\n                if (((stats.permissions ?? 0) & FilePermission.Readonly) > 0) {\n                    throw createFileSystemProviderError('Not allowed', FileSystemProviderErrorCode.NoPermissions);\n                }\n            }\n            catch (err) {\n            }\n            return delegate.writeFile(resource, content, opts);\n        });\n    }\n    async mkdir(resource) {\n        await this.writeToDelegates(resource, delegate => delegate.mkdir(resource));\n    }\n    async delete(resource, opts) {\n        await this.writeToDelegates(resource, delegate => delegate.delete(resource, opts));\n    }\n    async rename(from, to, opts) {\n        await this.writeToDelegates(from, delegate => delegate.rename(from, to, opts));\n    }\n}\nclass MkdirpOnWriteInMemoryFileSystemProvider extends InMemoryFileSystemProvider {\n    async writeFile(resource, content, opts) {\n        await StandaloneServices.get(IFileService)['mkdirp'](this, extUri.dirname(resource));\n        return super.writeFile(resource, content, opts);\n    }\n}\nclass DelegateFileSystemProvider {\n    constructor(options) {\n        this.options = options;\n        this.onDidChangeCapabilities = this.options.delegate.onDidChangeCapabilities;\n        this.onDidChangeFile = ( Event.map(this.options.delegate.onDidChangeFile, changes => ( changes.map(change => ({\n            type: change.type,\n            resource: this.options.fromDeletate(change.resource)\n        })))));\n        this.readFile = this.options.delegate.readFile != null\n            ? (resource) => {\n                return this.options.delegate.readFile(this.options.toDelegate(resource));\n            }\n            : undefined;\n        this.writeFile = this.options.delegate.writeFile != null\n            ? (resource, content, opts) => {\n                return this.options.delegate.writeFile(this.options.toDelegate(resource), content, opts);\n            }\n            : undefined;\n    }\n    get capabilities() { return this.options.delegate.capabilities; }\n    watch(resource, opts) {\n        return this.options.delegate.watch(this.options.toDelegate(resource), opts);\n    }\n    stat(resource) {\n        return this.options.delegate.stat(this.options.toDelegate(resource));\n    }\n    mkdir(resource) {\n        return this.options.delegate.mkdir(this.options.toDelegate(resource));\n    }\n    readdir(resource) {\n        return this.options.delegate.readdir(this.options.toDelegate(resource));\n    }\n    delete(resource, opts) {\n        return this.options.delegate.delete(this.options.toDelegate(resource), opts);\n    }\n    rename(from, to, opts) {\n        return this.options.delegate.rename(this.options.toDelegate(from), this.options.toDelegate(to), opts);\n    }\n}\nconst fileSystemProvider = new OverlayFileSystemProvider();\nfileSystemProvider.register(0, new MkdirpOnWriteInMemoryFileSystemProvider());\nconst extensionFileSystemProvider = new RegisteredFileSystemProvider(true);\nlet MemoryFileService = class MemoryFileService extends FileService {\n    constructor(logService) {\n        super(logService);\n        const userMemoryFileSystem = new InMemoryFileSystemProvider();\n        this.registerProvider('user', userMemoryFileSystem);\n        this.registerProvider('extension', extensionFileSystemProvider);\n        this.registerProvider('cache', new InMemoryFileSystemProvider());\n        this.registerProvider('logs', new InMemoryFileSystemProvider());\n        this.registerProvider(Schemas.vscodeUserData, new InMemoryFileSystemProvider());\n        this.registerProvider(Schemas.tmp, new InMemoryFileSystemProvider());\n        let fileSystemProviderDisposable = this.registerProvider('file', fileSystemProvider);\n        fileSystemProvider.onDidChangeOverlays(() => {\n            fileSystemProviderDisposable.dispose();\n            fileSystemProviderDisposable = this.registerProvider('file', fileSystemProvider);\n        });\n    }\n};\nMemoryFileService = __decorate([\n    ( __param(0, ILogService))\n], MemoryFileService);\nfunction getServiceOverride() {\n    return {\n        [( IFileService.toString())]: new SyncDescriptor(MemoryFileService, [], true)\n    };\n}\nfunction registerExtensionFile(extensionLocation, filePath, getContent) {\n    return extensionFileSystemProvider.registerFile(new RegisteredReadOnlyFile(joinPath(extensionLocation, filePath), getContent));\n}\nfunction registerFileSystemOverlay(priority, provider) {\n    return fileSystemProvider.register(priority, provider);\n}\nexport { DelegateFileSystemProvider, FilePermission, FileType, InMemoryFileSystemProvider, RegisteredFile, RegisteredFileSystemProvider, RegisteredMemoryFile, RegisteredReadOnlyFile, getServiceOverride as default, registerExtensionFile, registerFileSystemOverlay };\n", "import { __decorate, __param } from '../../../../../../external/tslib/tslib.es6.js';\nimport { coalesce } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { ResourceQueue, Promises } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { VSBuffer, bufferToReadable, streamToBuffer, newWriteableBufferStream, bufferedStreamToBuffer, readableToBuffer } from 'monaco-editor/esm/vs/base/common/buffer.js';\nimport { CancellationToken, CancellationTokenSource } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { hash } from 'monaco-editor/esm/vs/base/common/hash.js';\nimport { Iterable } from 'monaco-editor/esm/vs/base/common/iterator.js';\nimport { Disposable, toDisposable, dispose, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { TernarySearchTree } from 'monaco-editor/esm/vs/base/common/ternarySearchTree.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { mark } from 'monaco-editor/esm/vs/base/common/performance.js';\nimport { isAbsolutePath, joinPath, dirname, basename, extUri, extUriIgnorePathCase } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { isReadableStream, peekStream, peekReadable, consumeStream, transform, newWriteableStream, isReadableBufferedStream, listenStream } from 'monaco-editor/esm/vs/base/common/stream.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { FileChangesEvent, FileOperationError, hasOpenReadWriteCloseCapability, hasReadWriteCapability, hasFileReadStreamCapability, toFileSystemProviderErrorCode, FileSystemProviderErrorCode, ensureFileSystemProviderError, FileType, FilePermission, etag, FileOperationEvent, toFileOperationResult, ETAG_DISABLED, hasFileAtomicReadCapability, NotModifiedSinceFileOperationError, TooLargeFileOperationError, hasFileFolderCopyCapability, hasFileCloneCapability } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { readFileIntoStream } from './io.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { ErrorNoTelemetry } from 'monaco-editor/esm/vs/base/common/errors.js';\nlet FileService = class FileService extends Disposable {\n    constructor(logService) {\n        super();\n        this.logService = logService;\n        this.BUFFER_SIZE = 256 * 1024;\n        this._onDidChangeFileSystemProviderRegistrations = this._register(( new Emitter()));\n        this.onDidChangeFileSystemProviderRegistrations = this._onDidChangeFileSystemProviderRegistrations.event;\n        this._onWillActivateFileSystemProvider = this._register(( new Emitter()));\n        this.onWillActivateFileSystemProvider = this._onWillActivateFileSystemProvider.event;\n        this._onDidChangeFileSystemProviderCapabilities = this._register(( new Emitter()));\n        this.onDidChangeFileSystemProviderCapabilities = this._onDidChangeFileSystemProviderCapabilities.event;\n        this.provider = ( new Map());\n        this._onDidRunOperation = this._register(( new Emitter()));\n        this.onDidRunOperation = this._onDidRunOperation.event;\n        this._onDidFilesChange = this._register(( new Emitter()));\n        this.onDidFilesChange = this._onDidFilesChange.event;\n        this._onDidWatchError = this._register(( new Emitter()));\n        this.onDidWatchError = this._onDidWatchError.event;\n        this.activeWatchers = ( new Map());\n        this.writeQueue = this._register(( new ResourceQueue()));\n    }\n    registerProvider(scheme, provider) {\n        if (( this.provider.has(scheme))) {\n            throw new Error(`A filesystem provider for the scheme '${scheme}' is already registered.`);\n        }\n        mark(`code/registerFilesystem/${scheme}`);\n        const providerDisposables = ( new DisposableStore());\n        this.provider.set(scheme, provider);\n        this._onDidChangeFileSystemProviderRegistrations.fire({ added: true, scheme, provider });\n        providerDisposables.add(provider.onDidChangeFile(changes => this._onDidFilesChange.fire(( new FileChangesEvent(changes, !this.isPathCaseSensitive(provider))))));\n        if (typeof provider.onDidWatchError === 'function') {\n            providerDisposables.add(provider.onDidWatchError(error => this._onDidWatchError.fire(( new Error(error)))));\n        }\n        providerDisposables.add(provider.onDidChangeCapabilities(() => this._onDidChangeFileSystemProviderCapabilities.fire({ provider, scheme })));\n        return toDisposable(() => {\n            this._onDidChangeFileSystemProviderRegistrations.fire({ added: false, scheme, provider });\n            this.provider.delete(scheme);\n            dispose(providerDisposables);\n        });\n    }\n    getProvider(scheme) {\n        return this.provider.get(scheme);\n    }\n    async activateProvider(scheme) {\n        const joiners = [];\n        this._onWillActivateFileSystemProvider.fire({\n            scheme,\n            join(promise) {\n                joiners.push(promise);\n            },\n        });\n        if (( this.provider.has(scheme))) {\n            return;\n        }\n        await Promises.settled(joiners);\n    }\n    async canHandleResource(resource) {\n        await this.activateProvider(resource.scheme);\n        return this.hasProvider(resource);\n    }\n    hasProvider(resource) {\n        return ( this.provider.has(resource.scheme));\n    }\n    hasCapability(resource, capability) {\n        const provider = this.provider.get(resource.scheme);\n        return !!(provider && (provider.capabilities & capability));\n    }\n    listCapabilities() {\n        return ( Iterable.map(\n            this.provider,\n            ([scheme, provider]) => ({ scheme, capabilities: provider.capabilities })\n        ));\n    }\n    async withProvider(resource) {\n        if (!isAbsolutePath(resource)) {\n            throw new FileOperationError(localize('invalidPath', \"Unable to resolve filesystem provider with relative file path '{0}'\", this.resourceForError(resource)), 8 );\n        }\n        await this.activateProvider(resource.scheme);\n        const provider = this.provider.get(resource.scheme);\n        if (!provider) {\n            const error = ( new ErrorNoTelemetry());\n            error.message = ( localize(\n                'noProviderFound',\n                \"ENOPRO: No file system provider found for resource '{0}'\",\n                ( resource.toString())\n            ));\n            throw error;\n        }\n        return provider;\n    }\n    async withReadProvider(resource) {\n        const provider = await this.withProvider(resource);\n        if (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider) || hasFileReadStreamCapability(provider)) {\n            return provider;\n        }\n        throw new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite, FileReadStream nor FileOpenReadWriteClose capability which is needed for the read operation.`);\n    }\n    async withWriteProvider(resource) {\n        const provider = await this.withProvider(resource);\n        if (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider)) {\n            return provider;\n        }\n        throw new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite nor FileOpenReadWriteClose capability which is needed for the write operation.`);\n    }\n    async resolve(resource, options) {\n        try {\n            return await this.doResolveFile(resource, options);\n        }\n        catch (error) {\n            if (toFileSystemProviderErrorCode(error) === FileSystemProviderErrorCode.FileNotFound) {\n                throw new FileOperationError(localize('fileNotFoundError', \"Unable to resolve nonexistent file '{0}'\", this.resourceForError(resource)), 1 );\n            }\n            throw ensureFileSystemProviderError(error);\n        }\n    }\n    async doResolveFile(resource, options) {\n        const provider = await this.withProvider(resource);\n        const isPathCaseSensitive = this.isPathCaseSensitive(provider);\n        const resolveTo = options?.resolveTo;\n        const resolveSingleChildDescendants = options?.resolveSingleChildDescendants;\n        const resolveMetadata = options?.resolveMetadata;\n        const stat = await provider.stat(resource);\n        let trie;\n        return this.toFileStat(provider, resource, stat, undefined, !!resolveMetadata, (stat, siblings) => {\n            if (!trie) {\n                trie = TernarySearchTree.forUris(() => !isPathCaseSensitive);\n                trie.set(resource, true);\n                if (resolveTo) {\n                    trie.fill(true, resolveTo);\n                }\n            }\n            if (trie.get(stat.resource) || trie.findSuperstr(stat.resource.with({ query: null, fragment: null } ))) {\n                return true;\n            }\n            if (stat.isDirectory && resolveSingleChildDescendants) {\n                return siblings === 1;\n            }\n            return false;\n        });\n    }\n    async toFileStat(provider, resource, stat, siblings, resolveMetadata, recurse) {\n        const { providerExtUri } = this.getExtUri(provider);\n        const fileStat = {\n            resource,\n            name: providerExtUri.basename(resource),\n            isFile: (stat.type & FileType.File) !== 0,\n            isDirectory: (stat.type & FileType.Directory) !== 0,\n            isSymbolicLink: (stat.type & FileType.SymbolicLink) !== 0,\n            mtime: stat.mtime,\n            ctime: stat.ctime,\n            size: stat.size,\n            readonly: Boolean((stat.permissions ?? 0) & FilePermission.Readonly) || Boolean(provider.capabilities & 2048 ),\n            locked: Boolean((stat.permissions ?? 0) & FilePermission.Locked),\n            etag: etag({ mtime: stat.mtime, size: stat.size }),\n            children: undefined\n        };\n        if (fileStat.isDirectory && recurse(fileStat, siblings)) {\n            try {\n                const entries = await provider.readdir(resource);\n                const resolvedEntries = await Promises.settled(( entries.map(async ([name, type]) => {\n                    try {\n                        const childResource = providerExtUri.joinPath(resource, name);\n                        const childStat = resolveMetadata ? await provider.stat(childResource) : { type };\n                        return await this.toFileStat(provider, childResource, childStat, entries.length, resolveMetadata, recurse);\n                    }\n                    catch (error) {\n                        this.logService.trace(error);\n                        return null;\n                    }\n                })));\n                fileStat.children = coalesce(resolvedEntries);\n            }\n            catch (error) {\n                this.logService.trace(error);\n                fileStat.children = [];\n            }\n            return fileStat;\n        }\n        return fileStat;\n    }\n    async resolveAll(toResolve) {\n        return Promises.settled(( toResolve.map(async (entry) => {\n            try {\n                return { stat: await this.doResolveFile(entry.resource, entry.options), success: true };\n            }\n            catch (error) {\n                this.logService.trace(error);\n                return { stat: undefined, success: false };\n            }\n        })));\n    }\n    async stat(resource) {\n        const provider = await this.withProvider(resource);\n        const stat = await provider.stat(resource);\n        return this.toFileStat(provider, resource, stat, undefined, true, () => false );\n    }\n    async exists(resource) {\n        const provider = await this.withProvider(resource);\n        try {\n            const stat = await provider.stat(resource);\n            return !!stat;\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    async canCreateFile(resource, options) {\n        try {\n            await this.doValidateCreateFile(resource, options);\n        }\n        catch (error) {\n            return error;\n        }\n        return true;\n    }\n    async doValidateCreateFile(resource, options) {\n        if (!options?.overwrite && (await this.exists(resource))) {\n            throw new FileOperationError(localize('fileExists', \"Unable to create file '{0}' that already exists when overwrite flag is not set\", this.resourceForError(resource)), 3 , options);\n        }\n    }\n    async createFile(resource, bufferOrReadableOrStream = VSBuffer.fromString(''), options) {\n        await this.doValidateCreateFile(resource, options);\n        const fileStat = await this.writeFile(resource, bufferOrReadableOrStream);\n        this._onDidRunOperation.fire(( new FileOperationEvent(resource, 0 , fileStat)));\n        return fileStat;\n    }\n    async writeFile(resource, bufferOrReadableOrStream, options) {\n        const provider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(resource), resource);\n        const { providerExtUri } = this.getExtUri(provider);\n        try {\n            const stat = await this.validateWriteFile(provider, resource, options);\n            if (!stat) {\n                await this.mkdirp(provider, providerExtUri.dirname(resource));\n            }\n            let bufferOrReadableOrStreamOrBufferedStream;\n            if (hasReadWriteCapability(provider) && !(bufferOrReadableOrStream instanceof VSBuffer)) {\n                if (isReadableStream(bufferOrReadableOrStream)) {\n                    const bufferedStream = await peekStream(bufferOrReadableOrStream, 3);\n                    if (bufferedStream.ended) {\n                        bufferOrReadableOrStreamOrBufferedStream = VSBuffer.concat(bufferedStream.buffer);\n                    }\n                    else {\n                        bufferOrReadableOrStreamOrBufferedStream = bufferedStream;\n                    }\n                }\n                else {\n                    bufferOrReadableOrStreamOrBufferedStream = peekReadable(bufferOrReadableOrStream, data => VSBuffer.concat(data), 3);\n                }\n            }\n            else {\n                bufferOrReadableOrStreamOrBufferedStream = bufferOrReadableOrStream;\n            }\n            if (!hasOpenReadWriteCloseCapability(provider) || (hasReadWriteCapability(provider) && bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer)) {\n                await this.doWriteUnbuffered(provider, resource, options, bufferOrReadableOrStreamOrBufferedStream);\n            }\n            else {\n                const contents = bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer ? bufferToReadable(bufferOrReadableOrStreamOrBufferedStream) : bufferOrReadableOrStreamOrBufferedStream;\n                if (options?.atomic !== false && options?.atomic?.postfix) {\n                    await this.doWriteBufferedAtomic(provider, resource, joinPath(dirname(resource), `${basename(resource)}${options.atomic.postfix}`), options, contents);\n                }\n                else {\n                    await this.doWriteBuffered(provider, resource, options, contents);\n                }\n            }\n            this._onDidRunOperation.fire(( new FileOperationEvent(resource, 4 )));\n        }\n        catch (error) {\n            throw new FileOperationError(localize('err.write', \"Unable to write file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n        }\n        return this.resolve(resource, { resolveMetadata: true });\n    }\n    async validateWriteFile(provider, resource, options) {\n        const unlock = !!options?.unlock;\n        if (unlock && !((provider.capabilities & 8192) )) {\n            throw new Error(localize('writeFailedUnlockUnsupported', \"Unable to unlock file '{0}' because provider does not support it.\", this.resourceForError(resource)));\n        }\n        const atomic = !!options?.atomic;\n        if (atomic) {\n            if (!((provider.capabilities & 32768) )) {\n                throw new Error(localize('writeFailedAtomicUnsupported', \"Unable to atomically write file '{0}' because provider does not support it.\", this.resourceForError(resource)));\n            }\n            if (unlock) {\n                throw new Error(localize('writeFailedAtomicUnlock', \"Unable to unlock file '{0}' because atomic write is enabled.\", this.resourceForError(resource)));\n            }\n        }\n        let stat = undefined;\n        try {\n            stat = await provider.stat(resource);\n        }\n        catch (error) {\n            return undefined;\n        }\n        if ((stat.type & FileType.Directory) !== 0) {\n            throw new FileOperationError(localize('fileIsDirectoryWriteError', \"Unable to write file '{0}' that is actually a directory\", this.resourceForError(resource)), 0 , options);\n        }\n        this.throwIfFileIsReadonly(resource, stat);\n        if (typeof options?.mtime === 'number' && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED &&\n            typeof stat.mtime === 'number' && typeof stat.size === 'number' &&\n            options.mtime < stat.mtime && options.etag !== etag({ mtime: options.mtime , size: stat.size })) {\n            throw new FileOperationError(localize('fileModifiedError', \"File Modified Since\"), 3 , options);\n        }\n        return stat;\n    }\n    async readFile(resource, options, token) {\n        const provider = await this.withReadProvider(resource);\n        if (options?.atomic) {\n            return this.doReadFileAtomic(provider, resource, options, token);\n        }\n        return this.doReadFile(provider, resource, options, token);\n    }\n    async doReadFileAtomic(provider, resource, options, token) {\n        return ( new Promise((resolve, reject) => {\n            this.writeQueue.queueFor(resource, this.getExtUri(provider).providerExtUri).queue(async () => {\n                try {\n                    const content = await this.doReadFile(provider, resource, options, token);\n                    resolve(content);\n                }\n                catch (error) {\n                    reject(error);\n                }\n            });\n        }));\n    }\n    async doReadFile(provider, resource, options, token) {\n        const stream = await this.doReadFileStream(provider, resource, {\n            ...options,\n            preferUnbuffered: true\n        }, token);\n        return {\n            ...stream,\n            value: await streamToBuffer(stream.value)\n        };\n    }\n    async readFileStream(resource, options, token) {\n        const provider = await this.withReadProvider(resource);\n        return this.doReadFileStream(provider, resource, options, token);\n    }\n    async doReadFileStream(provider, resource, options, token) {\n        const cancellableSource = ( new CancellationTokenSource(token));\n        const statPromise = this.validateReadFile(resource, options).then(stat => stat, error => {\n            cancellableSource.cancel();\n            throw error;\n        });\n        let fileStream = undefined;\n        try {\n            if (typeof options?.etag === 'string' && options.etag !== ETAG_DISABLED) {\n                await statPromise;\n            }\n            if ((options?.atomic && hasFileAtomicReadCapability(provider)) ||\n                !(hasOpenReadWriteCloseCapability(provider) || hasFileReadStreamCapability(provider)) ||\n                (hasReadWriteCapability(provider) && options?.preferUnbuffered)\n            ) {\n                fileStream = this.readFileUnbuffered(provider, resource, options);\n            }\n            else if (hasFileReadStreamCapability(provider)) {\n                fileStream = this.readFileStreamed(provider, resource, cancellableSource.token, options);\n            }\n            else {\n                fileStream = this.readFileBuffered(provider, resource, cancellableSource.token, options);\n            }\n            const fileStat = await statPromise;\n            return {\n                ...fileStat,\n                value: fileStream\n            };\n        }\n        catch (error) {\n            if (fileStream) {\n                await consumeStream(fileStream);\n            }\n            throw this.restoreReadError(error, resource, options);\n        }\n    }\n    restoreReadError(error, resource, options) {\n        const message = ( localize(\n            'err.read',\n            \"Unable to read file '{0}' ({1})\",\n            this.resourceForError(resource),\n            ( ensureFileSystemProviderError(error).toString())\n        ));\n        if (error instanceof NotModifiedSinceFileOperationError) {\n            return ( new NotModifiedSinceFileOperationError(message, error.stat, options));\n        }\n        if (error instanceof TooLargeFileOperationError) {\n            return ( new TooLargeFileOperationError(message, error.fileOperationResult, error.size, error.options));\n        }\n        return ( new FileOperationError(message, toFileOperationResult(error), options));\n    }\n    readFileStreamed(provider, resource, token, options = Object.create(null)) {\n        const fileStream = provider.readFileStream(resource, options, token);\n        return transform(fileStream, {\n            data: data => data instanceof VSBuffer ? data : VSBuffer.wrap(data),\n            error: error => this.restoreReadError(error, resource, options)\n        }, data => VSBuffer.concat(data));\n    }\n    readFileBuffered(provider, resource, token, options = Object.create(null)) {\n        const stream = newWriteableBufferStream();\n        readFileIntoStream(provider, resource, stream, data => data, {\n            ...options,\n            bufferSize: this.BUFFER_SIZE,\n            errorTransformer: error => this.restoreReadError(error, resource, options)\n        }, token);\n        return stream;\n    }\n    readFileUnbuffered(provider, resource, options) {\n        const stream = newWriteableStream(data => VSBuffer.concat(data));\n        (async () => {\n            try {\n                let buffer;\n                if (options?.atomic && hasFileAtomicReadCapability(provider)) {\n                    buffer = await provider.readFile(resource, { atomic: true });\n                }\n                else {\n                    buffer = await provider.readFile(resource);\n                }\n                if (typeof options?.position === 'number') {\n                    buffer = buffer.slice(options.position);\n                }\n                if (typeof options?.length === 'number') {\n                    buffer = buffer.slice(0, options.length);\n                }\n                this.validateReadFileLimits(resource, buffer.byteLength, options);\n                stream.end(VSBuffer.wrap(buffer));\n            }\n            catch (err) {\n                stream.error(err);\n                stream.end();\n            }\n        })();\n        return stream;\n    }\n    async validateReadFile(resource, options) {\n        const stat = await this.resolve(resource, { resolveMetadata: true });\n        if (stat.isDirectory) {\n            throw new FileOperationError(localize('fileIsDirectoryReadError', \"Unable to read file '{0}' that is actually a directory\", this.resourceForError(resource)), 0 , options);\n        }\n        if (typeof options?.etag === 'string' && options.etag !== ETAG_DISABLED && options.etag === stat.etag) {\n            throw new NotModifiedSinceFileOperationError(localize('fileNotModifiedError', \"File not modified since\"), stat, options);\n        }\n        this.validateReadFileLimits(resource, stat.size, options);\n        return stat;\n    }\n    validateReadFileLimits(resource, size, options) {\n        if (typeof options?.limits?.size === 'number' && size > options.limits.size) {\n            throw new TooLargeFileOperationError(localize('fileTooLargeError', \"Unable to read file '{0}' that is too large to open\", this.resourceForError(resource)), 7 , size, options);\n        }\n    }\n    async canMove(source, target, overwrite) {\n        return this.doCanMoveCopy(source, target, 'move', overwrite);\n    }\n    async canCopy(source, target, overwrite) {\n        return this.doCanMoveCopy(source, target, 'copy', overwrite);\n    }\n    async doCanMoveCopy(source, target, mode, overwrite) {\n        if (( source.toString()) !== ( target.toString())) {\n            try {\n                const sourceProvider = mode === 'move' ? this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source) : await this.withReadProvider(source);\n                const targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n                await this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n            }\n            catch (error) {\n                return error;\n            }\n        }\n        return true;\n    }\n    async move(source, target, overwrite) {\n        const sourceProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source);\n        const targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n        const mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'move', !!overwrite);\n        const fileStat = await this.resolve(target, { resolveMetadata: true });\n        this._onDidRunOperation.fire(( new FileOperationEvent(\n            source,\n            mode === 'move' ? 2  : 3 ,\n            fileStat\n        )));\n        return fileStat;\n    }\n    async copy(source, target, overwrite) {\n        const sourceProvider = await this.withReadProvider(source);\n        const targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n        const mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', !!overwrite);\n        const fileStat = await this.resolve(target, { resolveMetadata: true });\n        this._onDidRunOperation.fire(( new FileOperationEvent(\n            source,\n            mode === 'copy' ? 3  : 2 ,\n            fileStat\n        )));\n        return fileStat;\n    }\n    async doMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite) {\n        if (( source.toString()) === ( target.toString())) {\n            return mode;\n        }\n        const { exists, isSameResourceWithDifferentPathCase } = await this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n        if (exists && !isSameResourceWithDifferentPathCase && overwrite) {\n            await this.del(target, { recursive: true });\n        }\n        await this.mkdirp(targetProvider, this.getExtUri(targetProvider).providerExtUri.dirname(target));\n        if (mode === 'copy') {\n            if (sourceProvider === targetProvider && hasFileFolderCopyCapability(sourceProvider)) {\n                await sourceProvider.copy(source, target, { overwrite });\n            }\n            else {\n                const sourceFile = await this.resolve(source);\n                if (sourceFile.isDirectory) {\n                    await this.doCopyFolder(sourceProvider, sourceFile, targetProvider, target);\n                }\n                else {\n                    await this.doCopyFile(sourceProvider, source, targetProvider, target);\n                }\n            }\n            return mode;\n        }\n        else {\n            if (sourceProvider === targetProvider) {\n                await sourceProvider.rename(source, target, { overwrite });\n                return mode;\n            }\n            else {\n                await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', overwrite);\n                await this.del(source, { recursive: true });\n                return 'copy';\n            }\n        }\n    }\n    async doCopyFile(sourceProvider, source, targetProvider, target) {\n        if (hasOpenReadWriteCloseCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n            return this.doPipeBuffered(sourceProvider, source, targetProvider, target);\n        }\n        if (hasOpenReadWriteCloseCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n            return this.doPipeBufferedToUnbuffered(sourceProvider, source, targetProvider, target);\n        }\n        if (hasReadWriteCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n            return this.doPipeUnbufferedToBuffered(sourceProvider, source, targetProvider, target);\n        }\n        if (hasReadWriteCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n            return this.doPipeUnbuffered(sourceProvider, source, targetProvider, target);\n        }\n    }\n    async doCopyFolder(sourceProvider, sourceFolder, targetProvider, targetFolder) {\n        await targetProvider.mkdir(targetFolder);\n        if (Array.isArray(sourceFolder.children)) {\n            await Promises.settled(( sourceFolder.children.map(async (sourceChild) => {\n                const targetChild = this.getExtUri(targetProvider).providerExtUri.joinPath(targetFolder, sourceChild.name);\n                if (sourceChild.isDirectory) {\n                    return this.doCopyFolder(sourceProvider, await this.resolve(sourceChild.resource), targetProvider, targetChild);\n                }\n                else {\n                    return this.doCopyFile(sourceProvider, sourceChild.resource, targetProvider, targetChild);\n                }\n            })));\n        }\n    }\n    async doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite) {\n        let isSameResourceWithDifferentPathCase = false;\n        if (sourceProvider === targetProvider) {\n            const { providerExtUri, isPathCaseSensitive } = this.getExtUri(sourceProvider);\n            if (!isPathCaseSensitive) {\n                isSameResourceWithDifferentPathCase = providerExtUri.isEqual(source, target);\n            }\n            if (isSameResourceWithDifferentPathCase && mode === 'copy') {\n                throw new Error(localize('unableToMoveCopyError1', \"Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system\", this.resourceForError(source), this.resourceForError(target)));\n            }\n            if (!isSameResourceWithDifferentPathCase && providerExtUri.isEqualOrParent(target, source)) {\n                throw new Error(localize('unableToMoveCopyError2', \"Unable to move/copy when source '{0}' is parent of target '{1}'.\", this.resourceForError(source), this.resourceForError(target)));\n            }\n        }\n        const exists = await this.exists(target);\n        if (exists && !isSameResourceWithDifferentPathCase) {\n            if (!overwrite) {\n                throw new FileOperationError(localize('unableToMoveCopyError3', \"Unable to move/copy '{0}' because target '{1}' already exists at destination.\", this.resourceForError(source), this.resourceForError(target)), 4 );\n            }\n            if (sourceProvider === targetProvider) {\n                const { providerExtUri } = this.getExtUri(sourceProvider);\n                if (providerExtUri.isEqualOrParent(source, target)) {\n                    throw new Error(localize('unableToMoveCopyError4', \"Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.\", this.resourceForError(source), this.resourceForError(target)));\n                }\n            }\n        }\n        return { exists, isSameResourceWithDifferentPathCase };\n    }\n    getExtUri(provider) {\n        const isPathCaseSensitive = this.isPathCaseSensitive(provider);\n        return {\n            providerExtUri: isPathCaseSensitive ? extUri : extUriIgnorePathCase,\n            isPathCaseSensitive\n        };\n    }\n    isPathCaseSensitive(provider) {\n        return !!((provider.capabilities & 1024) );\n    }\n    async createFolder(resource) {\n        const provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n        await this.mkdirp(provider, resource);\n        const fileStat = await this.resolve(resource, { resolveMetadata: true });\n        this._onDidRunOperation.fire(( new FileOperationEvent(resource, 0 , fileStat)));\n        return fileStat;\n    }\n    async mkdirp(provider, directory) {\n        const directoriesToCreate = [];\n        const { providerExtUri } = this.getExtUri(provider);\n        while (!providerExtUri.isEqual(directory, providerExtUri.dirname(directory))) {\n            try {\n                const stat = await provider.stat(directory);\n                if ((stat.type & FileType.Directory) === 0) {\n                    throw new Error(localize('mkdirExistsError', \"Unable to create folder '{0}' that already exists but is not a directory\", this.resourceForError(directory)));\n                }\n                break;\n            }\n            catch (error) {\n                if (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileNotFound) {\n                    throw error;\n                }\n                directoriesToCreate.push(providerExtUri.basename(directory));\n                directory = providerExtUri.dirname(directory);\n            }\n        }\n        for (let i = directoriesToCreate.length - 1; i >= 0; i--) {\n            directory = providerExtUri.joinPath(directory, directoriesToCreate[i]);\n            try {\n                await provider.mkdir(directory);\n            }\n            catch (error) {\n                if (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileExists) {\n                    throw error;\n                }\n            }\n        }\n    }\n    async canDelete(resource, options) {\n        try {\n            await this.doValidateDelete(resource, options);\n        }\n        catch (error) {\n            return error;\n        }\n        return true;\n    }\n    async doValidateDelete(resource, options) {\n        const provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n        const useTrash = !!options?.useTrash;\n        if (useTrash && !((provider.capabilities & 4096) )) {\n            throw new Error(localize('deleteFailedTrashUnsupported', \"Unable to delete file '{0}' via trash because provider does not support it.\", this.resourceForError(resource)));\n        }\n        const atomic = options?.atomic;\n        if (atomic && !((provider.capabilities & 65536) )) {\n            throw new Error(localize('deleteFailedAtomicUnsupported', \"Unable to delete file '{0}' atomically because provider does not support it.\", this.resourceForError(resource)));\n        }\n        if (useTrash && atomic) {\n            throw new Error(localize('deleteFailedTrashAndAtomicUnsupported', \"Unable to atomically delete file '{0}' because using trash is enabled.\", this.resourceForError(resource)));\n        }\n        let stat = undefined;\n        try {\n            stat = await provider.stat(resource);\n        }\n        catch (error) {\n        }\n        if (stat) {\n            this.throwIfFileIsReadonly(resource, stat);\n        }\n        else {\n            throw new FileOperationError(localize('deleteFailedNotFound', \"Unable to delete nonexistent file '{0}'\", this.resourceForError(resource)), 1 );\n        }\n        const recursive = !!options?.recursive;\n        if (!recursive) {\n            const stat = await this.resolve(resource);\n            if (stat.isDirectory && Array.isArray(stat.children) && stat.children.length > 0) {\n                throw new Error(localize('deleteFailedNonEmptyFolder', \"Unable to delete non-empty folder '{0}'.\", this.resourceForError(resource)));\n            }\n        }\n        return provider;\n    }\n    async del(resource, options) {\n        const provider = await this.doValidateDelete(resource, options);\n        const useTrash = !!options?.useTrash;\n        const recursive = !!options?.recursive;\n        const atomic = options?.atomic ?? false;\n        await provider.delete(resource, { recursive, useTrash, atomic });\n        this._onDidRunOperation.fire(( new FileOperationEvent(resource, 1 )));\n    }\n    async cloneFile(source, target) {\n        const sourceProvider = await this.withProvider(source);\n        const targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n        if (sourceProvider === targetProvider && this.getExtUri(sourceProvider).providerExtUri.isEqual(source, target)) {\n            return;\n        }\n        if (sourceProvider === targetProvider && hasFileCloneCapability(sourceProvider)) {\n            return sourceProvider.cloneFile(source, target);\n        }\n        await this.mkdirp(targetProvider, this.getExtUri(targetProvider).providerExtUri.dirname(target));\n        const sourceWriteQueue = this.writeQueue.queueFor(source, this.getExtUri(sourceProvider).providerExtUri);\n        if (sourceProvider === targetProvider && hasFileFolderCopyCapability(sourceProvider)) {\n            return sourceWriteQueue.queue(() => sourceProvider.copy(source, target, { overwrite: true }));\n        }\n        return sourceWriteQueue.queue(() => this.doCopyFile(sourceProvider, source, targetProvider, target));\n    }\n    watch(resource, options = { recursive: false, excludes: [] }) {\n        const disposables = ( new DisposableStore());\n        let watchDisposed = false;\n        let disposeWatch = () => { watchDisposed = true; };\n        disposables.add(toDisposable(() => disposeWatch()));\n        (async () => {\n            try {\n                const disposable = await this.doWatch(resource, options);\n                if (watchDisposed) {\n                    dispose(disposable);\n                }\n                else {\n                    disposeWatch = () => dispose(disposable);\n                }\n            }\n            catch (error) {\n                this.logService.error(error);\n            }\n        })();\n        return disposables;\n    }\n    async doWatch(resource, options) {\n        const provider = await this.withProvider(resource);\n        const watchHash = hash([this.getExtUri(provider).providerExtUri.getComparisonKey(resource), options]);\n        let watcher = this.activeWatchers.get(watchHash);\n        if (!watcher) {\n            watcher = {\n                count: 0,\n                disposable: provider.watch(resource, options)\n            };\n            this.activeWatchers.set(watchHash, watcher);\n        }\n        watcher.count += 1;\n        return toDisposable(() => {\n            if (watcher) {\n                watcher.count--;\n                if (watcher.count === 0) {\n                    dispose(watcher.disposable);\n                    this.activeWatchers.delete(watchHash);\n                }\n            }\n        });\n    }\n    dispose() {\n        super.dispose();\n        for (const [, watcher] of this.activeWatchers) {\n            dispose(watcher.disposable);\n        }\n        this.activeWatchers.clear();\n    }\n    async doWriteBufferedAtomic(provider, resource, tempResource, options, readableOrStreamOrBufferedStream) {\n        await this.doWriteBuffered(provider, tempResource, options, readableOrStreamOrBufferedStream);\n        try {\n            await provider.rename(tempResource, resource, { overwrite: true });\n        }\n        catch (error) {\n            try {\n                await provider.delete(tempResource, { recursive: false, useTrash: false, atomic: false });\n            }\n            catch (error) {\n            }\n            throw error;\n        }\n    }\n    async doWriteBuffered(provider, resource, options, readableOrStreamOrBufferedStream) {\n        return this.writeQueue.queueFor(resource, this.getExtUri(provider).providerExtUri).queue(async () => {\n            const handle = await provider.open(resource, { create: true, unlock: options?.unlock ?? false });\n            try {\n                if (isReadableStream(readableOrStreamOrBufferedStream) || isReadableBufferedStream(readableOrStreamOrBufferedStream)) {\n                    await this.doWriteStreamBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n                }\n                else {\n                    await this.doWriteReadableBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n                }\n            }\n            catch (error) {\n                throw ensureFileSystemProviderError(error);\n            }\n            finally {\n                await provider.close(handle);\n            }\n        });\n    }\n    async doWriteStreamBufferedQueued(provider, handle, streamOrBufferedStream) {\n        let posInFile = 0;\n        let stream;\n        if (isReadableBufferedStream(streamOrBufferedStream)) {\n            if (streamOrBufferedStream.buffer.length > 0) {\n                const chunk = VSBuffer.concat(streamOrBufferedStream.buffer);\n                await this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n                posInFile += chunk.byteLength;\n            }\n            if (streamOrBufferedStream.ended) {\n                return;\n            }\n            stream = streamOrBufferedStream.stream;\n        }\n        else {\n            stream = streamOrBufferedStream;\n        }\n        return ( new Promise((resolve, reject) => {\n            listenStream(stream, {\n                onData: async (chunk) => {\n                    stream.pause();\n                    try {\n                        await this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n                    }\n                    catch (error) {\n                        return reject(error);\n                    }\n                    posInFile += chunk.byteLength;\n                    setTimeout(() => stream.resume());\n                },\n                onError: error => reject(error),\n                onEnd: () => resolve()\n            });\n        }));\n    }\n    async doWriteReadableBufferedQueued(provider, handle, readable) {\n        let posInFile = 0;\n        let chunk;\n        while ((chunk = readable.read()) !== null) {\n            await this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n            posInFile += chunk.byteLength;\n        }\n    }\n    async doWriteBuffer(provider, handle, buffer, length, posInFile, posInBuffer) {\n        let totalBytesWritten = 0;\n        while (totalBytesWritten < length) {\n            const bytesWritten = await provider.write(handle, posInFile + totalBytesWritten, buffer.buffer, posInBuffer + totalBytesWritten, length - totalBytesWritten);\n            totalBytesWritten += bytesWritten;\n        }\n    }\n    async doWriteUnbuffered(provider, resource, options, bufferOrReadableOrStreamOrBufferedStream) {\n        return this.writeQueue.queueFor(resource, this.getExtUri(provider).providerExtUri).queue(() => this.doWriteUnbufferedQueued(provider, resource, options, bufferOrReadableOrStreamOrBufferedStream));\n    }\n    async doWriteUnbufferedQueued(provider, resource, options, bufferOrReadableOrStreamOrBufferedStream) {\n        let buffer;\n        if (bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer) {\n            buffer = bufferOrReadableOrStreamOrBufferedStream;\n        }\n        else if (isReadableStream(bufferOrReadableOrStreamOrBufferedStream)) {\n            buffer = await streamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n        }\n        else if (isReadableBufferedStream(bufferOrReadableOrStreamOrBufferedStream)) {\n            buffer = await bufferedStreamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n        }\n        else {\n            buffer = readableToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n        }\n        await provider.writeFile(resource, buffer.buffer, { create: true, overwrite: true, unlock: options?.unlock ?? false, atomic: options?.atomic ?? false });\n    }\n    async doPipeBuffered(sourceProvider, source, targetProvider, target) {\n        return this.writeQueue.queueFor(target, this.getExtUri(targetProvider).providerExtUri).queue(() => this.doPipeBufferedQueued(sourceProvider, source, targetProvider, target));\n    }\n    async doPipeBufferedQueued(sourceProvider, source, targetProvider, target) {\n        let sourceHandle = undefined;\n        let targetHandle = undefined;\n        try {\n            sourceHandle = await sourceProvider.open(source, { create: false });\n            targetHandle = await targetProvider.open(target, { create: true, unlock: false });\n            const buffer = VSBuffer.alloc(this.BUFFER_SIZE);\n            let posInFile = 0;\n            let posInBuffer = 0;\n            let bytesRead = 0;\n            do {\n                bytesRead = await sourceProvider.read(sourceHandle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n                await this.doWriteBuffer(targetProvider, targetHandle, buffer, bytesRead, posInFile, posInBuffer);\n                posInFile += bytesRead;\n                posInBuffer += bytesRead;\n                if (posInBuffer === buffer.byteLength) {\n                    posInBuffer = 0;\n                }\n            } while (bytesRead > 0);\n        }\n        catch (error) {\n            throw ensureFileSystemProviderError(error);\n        }\n        finally {\n            await Promises.settled([\n                typeof sourceHandle === 'number' ? sourceProvider.close(sourceHandle) : Promise.resolve(),\n                typeof targetHandle === 'number' ? targetProvider.close(targetHandle) : Promise.resolve(),\n            ]);\n        }\n    }\n    async doPipeUnbuffered(sourceProvider, source, targetProvider, target) {\n        return this.writeQueue.queueFor(target, this.getExtUri(targetProvider).providerExtUri).queue(() => this.doPipeUnbufferedQueued(sourceProvider, source, targetProvider, target));\n    }\n    async doPipeUnbufferedQueued(sourceProvider, source, targetProvider, target) {\n        return targetProvider.writeFile(target, await sourceProvider.readFile(source), { create: true, overwrite: true, unlock: false, atomic: false });\n    }\n    async doPipeUnbufferedToBuffered(sourceProvider, source, targetProvider, target) {\n        return this.writeQueue.queueFor(target, this.getExtUri(targetProvider).providerExtUri).queue(() => this.doPipeUnbufferedToBufferedQueued(sourceProvider, source, targetProvider, target));\n    }\n    async doPipeUnbufferedToBufferedQueued(sourceProvider, source, targetProvider, target) {\n        const targetHandle = await targetProvider.open(target, { create: true, unlock: false });\n        try {\n            const buffer = await sourceProvider.readFile(source);\n            await this.doWriteBuffer(targetProvider, targetHandle, VSBuffer.wrap(buffer), buffer.byteLength, 0, 0);\n        }\n        catch (error) {\n            throw ensureFileSystemProviderError(error);\n        }\n        finally {\n            await targetProvider.close(targetHandle);\n        }\n    }\n    async doPipeBufferedToUnbuffered(sourceProvider, source, targetProvider, target) {\n        const buffer = await streamToBuffer(this.readFileBuffered(sourceProvider, source, CancellationToken.None));\n        await this.doWriteUnbuffered(targetProvider, target, undefined, buffer);\n    }\n    throwIfFileSystemIsReadonly(provider, resource) {\n        if (provider.capabilities & 2048 ) {\n            throw new FileOperationError(localize('err.readonly', \"Unable to modify read-only file '{0}'\", this.resourceForError(resource)), 6 );\n        }\n        return provider;\n    }\n    throwIfFileIsReadonly(resource, stat) {\n        if ((stat.permissions ?? 0) & FilePermission.Readonly) {\n            throw new FileOperationError(localize('err.readonly', \"Unable to modify read-only file '{0}'\", this.resourceForError(resource)), 6 );\n        }\n    }\n    resourceForError(resource) {\n        if (resource.scheme === Schemas.file) {\n            return resource.fsPath;\n        }\n        return ( resource.toString(true));\n    }\n};\nFileService = ( __decorate([\n    ( __param(0, ILogService))\n], FileService));\nexport { FileService };\n", "import { VSBuffer } from 'monaco-editor/esm/vs/base/common/buffer.js';\nimport { canceled } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { ensureFileSystemProviderError, createFileSystemProviderError, FileSystemProviderErrorCode } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nasync function readFileIntoStream(provider, resource, target, transformer, options, token) {\n    let error = undefined;\n    try {\n        await doReadFileIntoStream(provider, resource, target, transformer, options, token);\n    }\n    catch (err) {\n        error = err;\n    }\n    finally {\n        if (error && options.errorTransformer) {\n            error = options.errorTransformer(error);\n        }\n        if (typeof error !== 'undefined') {\n            target.error(error);\n        }\n        target.end();\n    }\n}\nasync function doReadFileIntoStream(provider, resource, target, transformer, options, token) {\n    throwIfCancelled(token);\n    const handle = await provider.open(resource, { create: false });\n    try {\n        throwIfCancelled(token);\n        let totalBytesRead = 0;\n        let bytesRead = 0;\n        let allowedRemainingBytes = (options && typeof options.length === 'number') ? options.length : undefined;\n        let buffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n        let posInFile = options && typeof options.position === 'number' ? options.position : 0;\n        let posInBuffer = 0;\n        do {\n            bytesRead = await provider.read(handle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n            posInFile += bytesRead;\n            posInBuffer += bytesRead;\n            totalBytesRead += bytesRead;\n            if (typeof allowedRemainingBytes === 'number') {\n                allowedRemainingBytes -= bytesRead;\n            }\n            if (posInBuffer === buffer.byteLength) {\n                await target.write(transformer(buffer));\n                buffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n                posInBuffer = 0;\n            }\n        } while (bytesRead > 0 && (typeof allowedRemainingBytes !== 'number' || allowedRemainingBytes > 0) && throwIfCancelled(token) && throwIfTooLarge(totalBytesRead, options));\n        if (posInBuffer > 0) {\n            let lastChunkLength = posInBuffer;\n            if (typeof allowedRemainingBytes === 'number') {\n                lastChunkLength = Math.min(posInBuffer, allowedRemainingBytes);\n            }\n            target.write(transformer(buffer.slice(0, lastChunkLength)));\n        }\n    }\n    catch (error) {\n        throw ensureFileSystemProviderError(error);\n    }\n    finally {\n        await provider.close(handle);\n    }\n}\nfunction throwIfCancelled(token) {\n    if (token.isCancellationRequested) {\n        throw canceled();\n    }\n    return true;\n}\nfunction throwIfTooLarge(totalBytesRead, options) {\n    if (typeof options?.limits?.size === 'number' && totalBytesRead > options.limits.size) {\n        throw createFileSystemProviderError(localize('fileTooLargeError', \"File is too large to open\"), FileSystemProviderErrorCode.FileTooLarge);\n    }\n    return true;\n}\nexport { readFileIntoStream };\n", "import { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport * as resources from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { createFileSystemProviderError, FileSystemProviderErrorCode, FileType } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nclass File {\n    constructor(name) {\n        this.type = FileType.File;\n        this.ctime = Date.now();\n        this.mtime = Date.now();\n        this.size = 0;\n        this.name = name;\n    }\n}\nclass Directory {\n    constructor(name) {\n        this.type = FileType.Directory;\n        this.ctime = Date.now();\n        this.mtime = Date.now();\n        this.size = 0;\n        this.name = name;\n        this.entries = ( new Map());\n    }\n}\nclass InMemoryFileSystemProvider extends Disposable {\n    constructor() {\n        super(...arguments);\n        this._onDidChangeCapabilities = this._register(( new Emitter()));\n        this.onDidChangeCapabilities = this._onDidChangeCapabilities.event;\n        this._capabilities = 2  | 1024 ;\n        this.root = ( new Directory(''));\n        this._onDidChangeFile = this._register(( new Emitter()));\n        this.onDidChangeFile = this._onDidChangeFile.event;\n        this._bufferedChanges = [];\n    }\n    get capabilities() { return this._capabilities; }\n    setReadOnly(readonly) {\n        const isReadonly = !!((this._capabilities & 2048) );\n        if (readonly !== isReadonly) {\n            this._capabilities = readonly ? 2048  | 1024  | 2\n                : 2  | 1024 ;\n            this._onDidChangeCapabilities.fire();\n        }\n    }\n    async stat(resource) {\n        return this._lookup(resource, false);\n    }\n    async readdir(resource) {\n        const entry = this._lookupAsDirectory(resource, false);\n        const result = [];\n        entry.entries.forEach((child, name) => result.push([name, child.type]));\n        return result;\n    }\n    async readFile(resource) {\n        const data = this._lookupAsFile(resource, false).data;\n        if (data) {\n            return data;\n        }\n        throw createFileSystemProviderError('file not found', FileSystemProviderErrorCode.FileNotFound);\n    }\n    async writeFile(resource, content, opts) {\n        const basename = resources.basename(resource);\n        const parent = this._lookupParentDirectory(resource);\n        let entry = parent.entries.get(basename);\n        if (entry instanceof Directory) {\n            throw createFileSystemProviderError('file is directory', FileSystemProviderErrorCode.FileIsADirectory);\n        }\n        if (!entry && !opts.create) {\n            throw createFileSystemProviderError('file not found', FileSystemProviderErrorCode.FileNotFound);\n        }\n        if (entry && opts.create && !opts.overwrite) {\n            throw createFileSystemProviderError('file exists already', FileSystemProviderErrorCode.FileExists);\n        }\n        if (!entry) {\n            entry = ( new File(basename));\n            parent.entries.set(basename, entry);\n            this._fireSoon({ type: 1 , resource });\n        }\n        entry.mtime = Date.now();\n        entry.size = content.byteLength;\n        entry.data = content;\n        this._fireSoon({ type: 0 , resource });\n    }\n    async rename(from, to, opts) {\n        if (!opts.overwrite && this._lookup(to, true)) {\n            throw createFileSystemProviderError('file exists already', FileSystemProviderErrorCode.FileExists);\n        }\n        const entry = this._lookup(from, false);\n        const oldParent = this._lookupParentDirectory(from);\n        const newParent = this._lookupParentDirectory(to);\n        const newName = resources.basename(to);\n        oldParent.entries.delete(entry.name);\n        entry.name = newName;\n        newParent.entries.set(newName, entry);\n        this._fireSoon({ type: 2 , resource: from }, { type: 1 , resource: to });\n    }\n    async delete(resource, opts) {\n        const dirname = resources.dirname(resource);\n        const basename = resources.basename(resource);\n        const parent = this._lookupAsDirectory(dirname, false);\n        if (( parent.entries.has(basename))) {\n            parent.entries.delete(basename);\n            parent.mtime = Date.now();\n            parent.size -= 1;\n            this._fireSoon({ type: 0 , resource: dirname }, { resource, type: 2  });\n        }\n    }\n    async mkdir(resource) {\n        if (this._lookup(resource, true)) {\n            throw createFileSystemProviderError('file exists already', FileSystemProviderErrorCode.FileExists);\n        }\n        const basename = resources.basename(resource);\n        const dirname = resources.dirname(resource);\n        const parent = this._lookupAsDirectory(dirname, false);\n        const entry = ( new Directory(basename));\n        parent.entries.set(entry.name, entry);\n        parent.mtime = Date.now();\n        parent.size += 1;\n        this._fireSoon({ type: 0 , resource: dirname }, { type: 1 , resource });\n    }\n    _lookup(uri, silent) {\n        const parts = uri.path.split('/');\n        let entry = this.root;\n        for (const part of parts) {\n            if (!part) {\n                continue;\n            }\n            let child;\n            if (entry instanceof Directory) {\n                child = entry.entries.get(part);\n            }\n            if (!child) {\n                if (!silent) {\n                    throw createFileSystemProviderError('file not found', FileSystemProviderErrorCode.FileNotFound);\n                }\n                else {\n                    return undefined;\n                }\n            }\n            entry = child;\n        }\n        return entry;\n    }\n    _lookupAsDirectory(uri, silent) {\n        const entry = this._lookup(uri, silent);\n        if (entry instanceof Directory) {\n            return entry;\n        }\n        throw createFileSystemProviderError('file not a directory', FileSystemProviderErrorCode.FileNotADirectory);\n    }\n    _lookupAsFile(uri, silent) {\n        const entry = this._lookup(uri, silent);\n        if (entry instanceof File) {\n            return entry;\n        }\n        throw createFileSystemProviderError('file is a directory', FileSystemProviderErrorCode.FileIsADirectory);\n    }\n    _lookupParentDirectory(uri) {\n        const dirname = resources.dirname(uri);\n        return this._lookupAsDirectory(dirname, false);\n    }\n    watch(resource, opts) {\n        return Disposable.None;\n    }\n    _fireSoon(...changes) {\n        this._bufferedChanges.push(...changes);\n        if (this._fireSoonHandle) {\n            clearTimeout(this._fireSoonHandle);\n        }\n        this._fireSoonHandle = setTimeout(() => {\n            this._onDidChangeFile.fire(this._bufferedChanges);\n            this._bufferedChanges.length = 0;\n        }, 5);\n    }\n}\nexport { InMemoryFileSystemProvider };\n", "import { isNumber } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nvar FileType;\n( (function(FileType) {\n    FileType[FileType[\"Unknown\"] = 0] = \"Unknown\";\n    FileType[FileType[\"File\"] = 1] = \"File\";\n    FileType[FileType[\"Directory\"] = 2] = \"Directory\";\n    FileType[FileType[\"SymbolicLink\"] = 64] = \"SymbolicLink\";\n})(FileType || (FileType = {})));\nvar FilePermission;\n( (function(FilePermission) {\n    FilePermission[FilePermission[\"Readonly\"] = 1] = \"Readonly\";\n    FilePermission[FilePermission[\"Locked\"] = 2] = \"Locked\";\n})(FilePermission || (FilePermission = {})));\nvar FileSystemProviderCapabilities;\n( (function(FileSystemProviderCapabilities) {\n    FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"None\"] = 0] = \"None\";\n    FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"FileReadWrite\"] = 2] = \"FileReadWrite\";\n    FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"FileOpenReadWriteClose\"] = 4] = \"FileOpenReadWriteClose\";\n    FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"FileReadStream\"] = 16] = \"FileReadStream\";\n    FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"FileFolderCopy\"] = 8] = \"FileFolderCopy\";\n    FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"PathCaseSensitive\"] = 1024] = \"PathCaseSensitive\";\n    FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"Readonly\"] = 2048] = \"Readonly\";\n    FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"Trash\"] = 4096] = \"Trash\";\n    FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"FileWriteUnlock\"] = 8192] = \"FileWriteUnlock\";\n    FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"FileAtomicRead\"] = 16384] = \"FileAtomicRead\";\n    FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"FileAtomicWrite\"] = 32768] = \"FileAtomicWrite\";\n    FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"FileAtomicDelete\"] = 65536] = \"FileAtomicDelete\";\n    FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"FileClone\"] = 131072] = \"FileClone\";\n})(FileSystemProviderCapabilities || (FileSystemProviderCapabilities = {})));\nvar FileChangeType;\n( (function(FileChangeType) {\n    FileChangeType[FileChangeType[\"UPDATED\"] = 0] = \"UPDATED\";\n    FileChangeType[FileChangeType[\"ADDED\"] = 1] = \"ADDED\";\n    FileChangeType[FileChangeType[\"DELETED\"] = 2] = \"DELETED\";\n})(FileChangeType || (FileChangeType = {})));\nclass ByteSize {\n    static { this.KB = 1024; }\n    static { this.MB = ByteSize.KB * ByteSize.KB; }\n    static { this.GB = ByteSize.MB * ByteSize.KB; }\n    static { this.TB = ByteSize.GB * ByteSize.KB; }\n    static formatSize(size) {\n        if (!isNumber(size)) {\n            size = 0;\n        }\n        if (size < ByteSize.KB) {\n            return ( localize('sizeB', \"{0}B\", size.toFixed(0)));\n        }\n        if (size < ByteSize.MB) {\n            return ( localize('sizeKB', \"{0}KB\", (size / ByteSize.KB).toFixed(2)));\n        }\n        if (size < ByteSize.GB) {\n            return ( localize('sizeMB', \"{0}MB\", (size / ByteSize.MB).toFixed(2)));\n        }\n        if (size < ByteSize.TB) {\n            return ( localize('sizeGB', \"{0}GB\", (size / ByteSize.GB).toFixed(2)));\n        }\n        return ( localize('sizeTB', \"{0}TB\", (size / ByteSize.TB).toFixed(2)));\n    }\n}\nexport { ByteSize, FileChangeType, FilePermission, FileSystemProviderCapabilities, FileType };\n", "import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { Extensions } from 'monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js';\nimport { FILES_EXCLUDE_CONFIG, FILES_ASSOCIATIONS_CONFIG, AutoSaveConfiguration, FILES_READONLY_INCLUDE_CONFIG, FILES_READONLY_EXCLUDE_CONFIG, FILES_READONLY_FROM_PERMISSIONS_CONFIG, HotExitConfiguration } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { isWeb, isNative } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport './explorerViewlet.js';\nimport { SUPPORTED_ENCODINGS } from '../../../services/textfile/common/encoding.js';\nimport { editorConfigurationBaseNode } from 'monaco-editor/esm/vs/editor/common/config/editorConfigurationSchema.js';\nconst configurationRegistry = ( Registry.as(Extensions.Configuration));\nconst hotExitConfiguration = isNative ?\n    {\n        'type': 'string',\n        'scope': 1 ,\n        'enum': [HotExitConfiguration.OFF, HotExitConfiguration.ON_EXIT, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE],\n        'default': HotExitConfiguration.ON_EXIT,\n        'markdownEnumDescriptions': [\n            ( nls.localize(\n                'hotExit.off',\n                'Disable hot exit. A prompt will show when attempting to close a window with editors that have unsaved changes.'\n            )),\n            ( nls.localize(\n                'hotExit.onExit',\n                'Hot exit will be triggered when the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu). All windows without folders opened will be restored upon next launch. A list of previously opened windows with unsaved files can be accessed via `File > Open Recent > More...`'\n            )),\n            ( nls.localize(\n                'hotExit.onExitAndWindowClose',\n                'Hot exit will be triggered when the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu), and also for any window with a folder opened regardless of whether it\\'s the last window. All windows without folders opened will be restored upon next launch. A list of previously opened windows with unsaved files can be accessed via `File > Open Recent > More...`'\n            ))\n        ],\n        'description': ( nls.localize(\n            'hotExit',\n            \"Controls whether unsaved files are remembered between sessions, allowing the save prompt when exiting the editor to be skipped.\",\n            HotExitConfiguration.ON_EXIT,\n            HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE\n        ))\n    } : {\n    'type': 'string',\n    'scope': 1 ,\n    'enum': [HotExitConfiguration.OFF, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE],\n    'default': HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE,\n    'markdownEnumDescriptions': [\n        ( nls.localize(\n            'hotExit.off',\n            'Disable hot exit. A prompt will show when attempting to close a window with editors that have unsaved changes.'\n        )),\n        ( nls.localize(\n            'hotExit.onExitAndWindowCloseBrowser',\n            'Hot exit will be triggered when the browser quits or the window or tab is closed.'\n        ))\n    ],\n    'description': ( nls.localize(\n        'hotExit',\n        \"Controls whether unsaved files are remembered between sessions, allowing the save prompt when exiting the editor to be skipped.\",\n        HotExitConfiguration.ON_EXIT,\n        HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE\n    ))\n};\nconfigurationRegistry.registerConfiguration({\n    'id': 'files',\n    'order': 9,\n    'title': ( nls.localize('filesConfigurationTitle', \"Files\")),\n    'type': 'object',\n    'properties': {\n        [FILES_EXCLUDE_CONFIG]: {\n            'type': 'object',\n            'markdownDescription': ( nls.localize(\n                'exclude',\n                \"Configure [glob patterns](https://aka.ms/vscode-glob-patterns) for excluding files and folders. For example, the File Explorer decides which files and folders to show or hide based on this setting. Refer to the `#search.exclude#` setting to define search-specific excludes. Refer to the `#explorer.excludeGitIgnore#` setting for ignoring files based on your `.gitignore`.\"\n            )),\n            'default': {\n                ...{ '**/.git': true, '**/.svn': true, '**/.hg': true, '**/CVS': true, '**/.DS_Store': true, '**/Thumbs.db': true },\n                ...(isWeb ? { '**/*.crswap': true  } : undefined)\n            },\n            'scope': 4 ,\n            'additionalProperties': {\n                'anyOf': [\n                    {\n                        'type': 'boolean',\n                        'enum': [true, false],\n                        'enumDescriptions': [( nls.localize('trueDescription', \"Enable the pattern.\")), ( nls.localize('falseDescription', \"Disable the pattern.\"))],\n                        'description': ( nls.localize(\n                            'files.exclude.boolean',\n                            \"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern.\"\n                        )),\n                    },\n                    {\n                        'type': 'object',\n                        'properties': {\n                            'when': {\n                                'type': 'string',\n                                'pattern': '\\\\w*\\\\$\\\\(basename\\\\)\\\\w*',\n                                'default': '$(basename).ext',\n                                'markdownDescription': ( nls.localize(\n                                    { key: 'files.exclude.when', comment: ['\\\\$(basename) should not be translated'] },\n                                    \"Additional check on the siblings of a matching file. Use \\\\$(basename) as variable for the matching file name.\"\n                                ))\n                            }\n                        }\n                    }\n                ]\n            }\n        },\n        [FILES_ASSOCIATIONS_CONFIG]: {\n            'type': 'object',\n            'markdownDescription': ( nls.localize(\n                'associations',\n                \"Configure [glob patterns](https://aka.ms/vscode-glob-patterns) of file associations to languages (for example `\\\"*.extension\\\": \\\"html\\\"`). Patterns will match on the absolute path of a file if they contain a path separator and will match on the name of the file otherwise. These have precedence over the default associations of the languages installed.\"\n            )),\n            'additionalProperties': {\n                'type': 'string'\n            }\n        },\n        'files.encoding': {\n            'type': 'string',\n            'enum': ( Object.keys(SUPPORTED_ENCODINGS)),\n            'default': 'utf8',\n            'description': ( nls.localize(\n                'encoding',\n                \"The default character set encoding to use when reading and writing files. This setting can also be configured per language.\"\n            )),\n            'scope': 5 ,\n            'enumDescriptions': ( ( Object.keys(SUPPORTED_ENCODINGS)).map(key => SUPPORTED_ENCODINGS[key].labelLong)),\n            'enumItemLabels': ( ( Object.keys(SUPPORTED_ENCODINGS)).map(key => SUPPORTED_ENCODINGS[key].labelLong))\n        },\n        'files.autoGuessEncoding': {\n            'type': 'boolean',\n            'default': false,\n            'markdownDescription': ( nls.localize(\n                'autoGuessEncoding',\n                \"When enabled, the editor will attempt to guess the character set encoding when opening files. This setting can also be configured per language. Note, this setting is not respected by text search. Only {0} is respected.\",\n                '`#files.encoding#`'\n            )),\n            'scope': 5\n        },\n        'files.eol': {\n            'type': 'string',\n            'enum': [\n                '\\n',\n                '\\r\\n',\n                'auto'\n            ],\n            'enumDescriptions': [\n                ( nls.localize('eol.LF', \"LF\")),\n                ( nls.localize('eol.CRLF', \"CRLF\")),\n                ( nls.localize('eol.auto', \"Uses operating system specific end of line character.\"))\n            ],\n            'default': 'auto',\n            'description': ( nls.localize('eol', \"The default end of line character.\")),\n            'scope': 5\n        },\n        'files.enableTrash': {\n            'type': 'boolean',\n            'default': true,\n            'description': ( nls.localize(\n                'useTrash',\n                \"Moves files/folders to the OS trash (recycle bin on Windows) when deleting. Disabling this will delete files/folders permanently.\"\n            ))\n        },\n        'files.trimTrailingWhitespace': {\n            'type': 'boolean',\n            'default': false,\n            'description': ( nls.localize(\n                'trimTrailingWhitespace',\n                \"When enabled, will trim trailing whitespace when saving a file.\"\n            )),\n            'scope': 5\n        },\n        'files.insertFinalNewline': {\n            'type': 'boolean',\n            'default': false,\n            'description': ( nls.localize(\n                'insertFinalNewline',\n                \"When enabled, insert a final new line at the end of the file when saving it.\"\n            )),\n            'scope': 5\n        },\n        'files.trimFinalNewlines': {\n            'type': 'boolean',\n            'default': false,\n            'description': ( nls.localize(\n                'trimFinalNewlines',\n                \"When enabled, will trim all new lines after the final new line at the end of the file when saving it.\"\n            )),\n            scope: 5 ,\n        },\n        'files.autoSave': {\n            'type': 'string',\n            'enum': [AutoSaveConfiguration.OFF, AutoSaveConfiguration.AFTER_DELAY, AutoSaveConfiguration.ON_FOCUS_CHANGE, AutoSaveConfiguration.ON_WINDOW_CHANGE],\n            'markdownEnumDescriptions': [\n                ( nls.localize(\n                    { comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'files.autoSave.off' },\n                    \"An editor with changes is never automatically saved.\"\n                )),\n                ( nls.localize(\n                    { comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'files.autoSave.afterDelay' },\n                    \"An editor with changes is automatically saved after the configured `#files.autoSaveDelay#`.\"\n                )),\n                ( nls.localize(\n                    { comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'files.autoSave.onFocusChange' },\n                    \"An editor with changes is automatically saved when the editor loses focus.\"\n                )),\n                ( nls.localize(\n                    { comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'files.autoSave.onWindowChange' },\n                    \"An editor with changes is automatically saved when the window loses focus.\"\n                ))\n            ],\n            'default': isWeb ? AutoSaveConfiguration.AFTER_DELAY : AutoSaveConfiguration.OFF,\n            'markdownDescription': ( nls.localize(\n                { comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'autoSave' },\n                \"Controls [auto save](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save) of editors that have unsaved changes.\",\n                AutoSaveConfiguration.OFF,\n                AutoSaveConfiguration.AFTER_DELAY,\n                AutoSaveConfiguration.ON_FOCUS_CHANGE,\n                AutoSaveConfiguration.ON_WINDOW_CHANGE,\n                AutoSaveConfiguration.AFTER_DELAY\n            ))\n        },\n        'files.autoSaveDelay': {\n            'type': 'number',\n            'default': 1000,\n            'minimum': 0,\n            'markdownDescription': ( nls.localize(\n                { comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'autoSaveDelay' },\n                \"Controls the delay in milliseconds after which an editor with unsaved changes is saved automatically. Only applies when `#files.autoSave#` is set to `{0}`.\",\n                AutoSaveConfiguration.AFTER_DELAY\n            ))\n        },\n        'files.watcherExclude': {\n            'type': 'object',\n            'patternProperties': {\n                '.*': { 'type': 'boolean' }\n            },\n            'default': { '**/.git/objects/**': true, '**/.git/subtree-cache/**': true, '**/node_modules/*/**': true, '**/.hg/store/**': true },\n            'markdownDescription': ( nls.localize(\n                'watcherExclude',\n                \"Configure paths or [glob patterns](https://aka.ms/vscode-glob-patterns) to exclude from file watching. Paths can either be relative to the watched folder or absolute. Glob patterns are matched relative from the watched folder. When you experience the file watcher process consuming a lot of CPU, make sure to exclude large folders that are of less interest (such as build output folders).\"\n            )),\n            'scope': 4\n        },\n        'files.watcherInclude': {\n            'type': 'array',\n            'items': {\n                'type': 'string'\n            },\n            'default': [],\n            'description': ( nls.localize(\n                'watcherInclude',\n                \"Configure extra paths to watch for changes inside the workspace. By default, all workspace folders will be watched recursively, except for folders that are symbolic links. You can explicitly add absolute or relative paths to support watching folders that are symbolic links. Relative paths will be resolved to an absolute path using the currently opened workspace.\"\n            )),\n            'scope': 4\n        },\n        'files.hotExit': hotExitConfiguration,\n        'files.defaultLanguage': {\n            'type': 'string',\n            'markdownDescription': ( nls.localize(\n                'defaultLanguage',\n                \"The default language identifier that is assigned to new files. If configured to `${activeEditorLanguage}`, will use the language identifier of the currently active text editor if any.\"\n            ))\n        },\n        [FILES_READONLY_INCLUDE_CONFIG]: {\n            'type': 'object',\n            'patternProperties': {\n                '.*': { 'type': 'boolean' }\n            },\n            'default': {},\n            'markdownDescription': ( nls.localize(\n                'filesReadonlyInclude',\n                \"Configure paths or [glob patterns](https://aka.ms/vscode-glob-patterns) to mark as read-only. Glob patterns are always evaluated relative to the path of the workspace folder unless they are absolute paths. You can exclude matching paths via the `#files.readonlyExclude#` setting. Files from readonly file system providers will always be read-only independent of this setting.\"\n            )),\n            'scope': 4\n        },\n        [FILES_READONLY_EXCLUDE_CONFIG]: {\n            'type': 'object',\n            'patternProperties': {\n                '.*': { 'type': 'boolean' }\n            },\n            'default': {},\n            'markdownDescription': ( nls.localize(\n                'filesReadonlyExclude',\n                \"Configure paths or [glob patterns](https://aka.ms/vscode-glob-patterns) to exclude from being marked as read-only if they match as a result of the `#files.readonlyInclude#` setting. Glob patterns are always evaluated relative to the path of the workspace folder unless they are absolute paths. Files from readonly file system providers will always be read-only independent of this setting.\"\n            )),\n            'scope': 4\n        },\n        [FILES_READONLY_FROM_PERMISSIONS_CONFIG]: {\n            'type': 'boolean',\n            'markdownDescription': ( nls.localize(\n                'filesReadonlyFromPermissions',\n                \"Marks files as read-only when their file permissions indicate as such. This can be overridden via `#files.readonlyInclude#` and `#files.readonlyExclude#` settings.\"\n            )),\n            'default': false\n        },\n        'files.restoreUndoStack': {\n            'type': 'boolean',\n            'description': ( nls.localize(\n                'files.restoreUndoStack',\n                \"Restore the undo stack when a file is reopened.\"\n            )),\n            'default': true\n        },\n        'files.saveConflictResolution': {\n            'type': 'string',\n            'enum': [\n                'askUser',\n                'overwriteFileOnDisk'\n            ],\n            'enumDescriptions': [\n                ( nls.localize(\n                    'askUser',\n                    \"Will refuse to save and ask for resolving the save conflict manually.\"\n                )),\n                ( nls.localize(\n                    'overwriteFileOnDisk',\n                    \"Will resolve the save conflict by overwriting the file on disk with the changes in the editor.\"\n                ))\n            ],\n            'description': ( nls.localize(\n                'files.saveConflictResolution',\n                \"A save conflict can occur when a file is saved to disk that was changed by another program in the meantime. To prevent data loss, the user is asked to compare the changes in the editor with the version on disk. This setting should only be changed if you frequently encounter save conflict errors and may result in data loss if used without caution.\"\n            )),\n            'default': 'askUser',\n            'scope': 5\n        },\n        'files.dialog.defaultPath': {\n            'type': 'string',\n            'pattern': '^((\\\\/|\\\\\\\\\\\\\\\\|[a-zA-Z]:\\\\\\\\).*)?$',\n            'patternErrorMessage': ( nls.localize(\n                'defaultPathErrorMessage',\n                \"Default path for file dialogs must be an absolute path (e.g. C:\\\\\\\\myFolder or /myFolder).\"\n            )),\n            'description': ( nls.localize(\n                'fileDialogDefaultPath',\n                \"Default path for file dialogs, overriding user's home path. Only used in the absence of a context-specific path, such as most recently opened file or folder.\"\n            )),\n            'scope': 2\n        },\n        'files.simpleDialog.enable': {\n            'type': 'boolean',\n            'description': ( nls.localize(\n                'files.simpleDialog.enable',\n                \"Enables the simple file dialog for opening and saving files and folders. The simple file dialog replaces the system file dialog when enabled.\"\n            )),\n            'default': false\n        },\n        'files.participants.timeout': {\n            type: 'number',\n            default: 60000,\n            markdownDescription: ( nls.localize(\n                'files.participants.timeout',\n                \"Timeout in milliseconds after which file participants for create, rename, and delete are cancelled. Use `0` to disable participants.\"\n            )),\n        }\n    }\n});\nconfigurationRegistry.registerConfiguration({\n    ...editorConfigurationBaseNode,\n    properties: {\n        'editor.formatOnSave': {\n            'type': 'boolean',\n            'description': ( nls.localize(\n                'formatOnSave',\n                \"Format a file on save. A formatter must be available, the file must not be saved after delay, and the editor must not be shutting down.\"\n            )),\n            'scope': 5 ,\n        },\n        'editor.formatOnSaveMode': {\n            'type': 'string',\n            'default': 'file',\n            'enum': [\n                'file',\n                'modifications',\n                'modificationsIfAvailable'\n            ],\n            'enumDescriptions': [\n                ( nls.localize(\n                    { key: 'everything', comment: ['This is the description of an option'] },\n                    \"Format the whole file.\"\n                )),\n                ( nls.localize(\n                    { key: 'modification', comment: ['This is the description of an option'] },\n                    \"Format modifications (requires source control).\"\n                )),\n                ( nls.localize(\n                    { key: 'modificationIfAvailable', comment: ['This is the description of an option'] },\n                    \"Will attempt to format modifications only (requires source control). If source control can't be used, then the whole file will be formatted.\"\n                )),\n            ],\n            'markdownDescription': ( nls.localize(\n                'formatOnSaveMode',\n                \"Controls if format on save formats the whole file or only modifications. Only applies when `#editor.formatOnSave#` is enabled.\"\n            )),\n            'scope': 5 ,\n        },\n    }\n});\nconfigurationRegistry.registerConfiguration({\n    'id': 'explorer',\n    'order': 10,\n    'title': ( nls.localize('explorerConfigurationTitle', \"File Explorer\")),\n    'type': 'object',\n    'properties': {\n        'explorer.openEditors.visible': {\n            'type': 'number',\n            'description': ( nls.localize(\n                { key: 'openEditorsVisible', comment: ['Open is an adjective'] },\n                \"The initial maximum number of editors shown in the Open Editors pane. Exceeding this limit will show a scroll bar and allow resizing the pane to display more items.\"\n            )),\n            'default': 9,\n            'minimum': 1\n        },\n        'explorer.openEditors.minVisible': {\n            'type': 'number',\n            'description': ( nls.localize(\n                { key: 'openEditorsVisibleMin', comment: ['Open is an adjective'] },\n                \"The minimum number of editor slots pre-allocated in the Open Editors pane. If set to 0 the Open Editors pane will dynamically resize based on the number of editors.\"\n            )),\n            'default': 0,\n            'minimum': 0\n        },\n        'explorer.openEditors.sortOrder': {\n            'type': 'string',\n            'enum': ['editorOrder', 'alphabetical', 'fullPath'],\n            'description': ( nls.localize(\n                { key: 'openEditorsSortOrder', comment: ['Open is an adjective'] },\n                \"Controls the sorting order of editors in the Open Editors pane.\"\n            )),\n            'enumDescriptions': [\n                ( nls.localize(\n                    'sortOrder.editorOrder',\n                    'Editors are ordered in the same order editor tabs are shown.'\n                )),\n                ( nls.localize(\n                    'sortOrder.alphabetical',\n                    'Editors are ordered alphabetically by tab name inside each editor group.'\n                )),\n                ( nls.localize(\n                    'sortOrder.fullPath',\n                    'Editors are ordered alphabetically by full path inside each editor group.'\n                ))\n            ],\n            'default': 'editorOrder'\n        },\n        'explorer.autoReveal': {\n            'type': ['boolean', 'string'],\n            'enum': [true, false, 'focusNoScroll'],\n            'default': true,\n            'enumDescriptions': [\n                ( nls.localize('autoReveal.on', 'Files will be revealed and selected.')),\n                ( nls.localize('autoReveal.off', 'Files will not be revealed and selected.')),\n                ( nls.localize(\n                    'autoReveal.focusNoScroll',\n                    'Files will not be scrolled into view, but will still be focused.'\n                )),\n            ],\n            'description': ( nls.localize(\n                'autoReveal',\n                \"Controls whether the Explorer should automatically reveal and select files when opening them.\"\n            ))\n        },\n        'explorer.autoRevealExclude': {\n            'type': 'object',\n            'markdownDescription': ( nls.localize(\n                'autoRevealExclude',\n                \"Configure paths or [glob patterns](https://aka.ms/vscode-glob-patterns) for excluding files and folders from being revealed and selected in the Explorer when they are opened. Glob patterns are always evaluated relative to the path of the workspace folder unless they are absolute paths.\"\n            )),\n            'default': { '**/node_modules': true, '**/bower_components': true },\n            'additionalProperties': {\n                'anyOf': [\n                    {\n                        'type': 'boolean',\n                        'description': ( nls.localize(\n                            'explorer.autoRevealExclude.boolean',\n                            \"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern.\"\n                        )),\n                    },\n                    {\n                        type: 'object',\n                        properties: {\n                            when: {\n                                type: 'string',\n                                pattern: '\\\\w*\\\\$\\\\(basename\\\\)\\\\w*',\n                                default: '$(basename).ext',\n                                description: ( nls.localize(\n                                    'explorer.autoRevealExclude.when',\n                                    'Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name.'\n                                ))\n                            }\n                        }\n                    }\n                ]\n            }\n        },\n        'explorer.enableDragAndDrop': {\n            'type': 'boolean',\n            'description': ( nls.localize(\n                'enableDragAndDrop',\n                \"Controls whether the Explorer should allow to move files and folders via drag and drop. This setting only effects drag and drop from inside the Explorer.\"\n            )),\n            'default': true\n        },\n        'explorer.confirmDragAndDrop': {\n            'type': 'boolean',\n            'description': ( nls.localize(\n                'confirmDragAndDrop',\n                \"Controls whether the Explorer should ask for confirmation to move files and folders via drag and drop.\"\n            )),\n            'default': true\n        },\n        'explorer.confirmDelete': {\n            'type': 'boolean',\n            'description': ( nls.localize(\n                'confirmDelete',\n                \"Controls whether the Explorer should ask for confirmation when deleting a file via the trash.\"\n            )),\n            'default': true\n        },\n        'explorer.enableUndo': {\n            'type': 'boolean',\n            'description': ( nls.localize(\n                'enableUndo',\n                \"Controls whether the Explorer should support undoing file and folder operations.\"\n            )),\n            'default': true\n        },\n        'explorer.confirmUndo': {\n            'type': 'string',\n            'enum': [\"verbose\" , \"default\" , \"light\" ],\n            'description': ( nls.localize(\n                'confirmUndo',\n                \"Controls whether the Explorer should ask for confirmation when undoing.\"\n            )),\n            'default': \"default\" ,\n            'enumDescriptions': [\n                ( nls.localize('enableUndo.verbose', 'Explorer will prompt before all undo operations.')),\n                ( nls.localize(\n                    'enableUndo.default',\n                    'Explorer will prompt before destructive undo operations.'\n                )),\n                ( nls.localize(\n                    'enableUndo.light',\n                    'Explorer will not prompt before undo operations when focused.'\n                )),\n            ],\n        },\n        'explorer.expandSingleFolderWorkspaces': {\n            'type': 'boolean',\n            'description': ( nls.localize(\n                'expandSingleFolderWorkspaces',\n                \"Controls whether the Explorer should expand multi-root workspaces containing only one folder during initialization\"\n            )),\n            'default': true\n        },\n        'explorer.sortOrder': {\n            'type': 'string',\n            'enum': [\"default\" , \"mixed\" , \"filesFirst\" , \"type\" , \"modified\" , \"foldersNestsFiles\" ],\n            'default': \"default\" ,\n            'enumDescriptions': [\n                ( nls.localize(\n                    'sortOrder.default',\n                    'Files and folders are sorted by their names. Folders are displayed before files.'\n                )),\n                ( nls.localize(\n                    'sortOrder.mixed',\n                    'Files and folders are sorted by their names. Files are interwoven with folders.'\n                )),\n                ( nls.localize(\n                    'sortOrder.filesFirst',\n                    'Files and folders are sorted by their names. Files are displayed before folders.'\n                )),\n                ( nls.localize(\n                    'sortOrder.type',\n                    'Files and folders are grouped by extension type then sorted by their names. Folders are displayed before files.'\n                )),\n                ( nls.localize(\n                    'sortOrder.modified',\n                    'Files and folders are sorted by last modified date in descending order. Folders are displayed before files.'\n                )),\n                ( nls.localize(\n                    'sortOrder.foldersNestsFiles',\n                    'Files and folders are sorted by their names. Folders are displayed before files. Files with nested children are displayed before other files.'\n                ))\n            ],\n            'markdownDescription': ( nls.localize(\n                'sortOrder',\n                \"Controls the property-based sorting of files and folders in the Explorer. When `#explorer.fileNesting.enabled#` is enabled, also controls sorting of nested files.\"\n            ))\n        },\n        'explorer.sortOrderLexicographicOptions': {\n            'type': 'string',\n            'enum': [\"default\" , \"upper\" , \"lower\" , \"unicode\" ],\n            'default': \"default\" ,\n            'enumDescriptions': [\n                ( nls.localize(\n                    'sortOrderLexicographicOptions.default',\n                    'Uppercase and lowercase names are mixed together.'\n                )),\n                ( nls.localize(\n                    'sortOrderLexicographicOptions.upper',\n                    'Uppercase names are grouped together before lowercase names.'\n                )),\n                ( nls.localize(\n                    'sortOrderLexicographicOptions.lower',\n                    'Lowercase names are grouped together before uppercase names.'\n                )),\n                ( nls.localize(\n                    'sortOrderLexicographicOptions.unicode',\n                    'Names are sorted in Unicode order.'\n                ))\n            ],\n            'description': ( nls.localize(\n                'sortOrderLexicographicOptions',\n                \"Controls the lexicographic sorting of file and folder names in the Explorer.\"\n            ))\n        },\n        'explorer.decorations.colors': {\n            type: 'boolean',\n            description: ( nls.localize(\n                'explorer.decorations.colors',\n                \"Controls whether file decorations should use colors.\"\n            )),\n            default: true\n        },\n        'explorer.decorations.badges': {\n            type: 'boolean',\n            description: ( nls.localize(\n                'explorer.decorations.badges',\n                \"Controls whether file decorations should use badges.\"\n            )),\n            default: true\n        },\n        'explorer.incrementalNaming': {\n            'type': 'string',\n            enum: ['simple', 'smart', 'disabled'],\n            enumDescriptions: [\n                ( nls.localize(\n                    'simple',\n                    \"Appends the word \\\"copy\\\" at the end of the duplicated name potentially followed by a number.\"\n                )),\n                ( nls.localize(\n                    'smart',\n                    \"Adds a number at the end of the duplicated name. If some number is already part of the name, tries to increase that number.\"\n                )),\n                ( nls.localize(\n                    'disabled',\n                    \"Disables incremental naming. If two files with the same name exist you will be prompted to overwrite the existing file.\"\n                ))\n            ],\n            description: ( nls.localize(\n                'explorer.incrementalNaming',\n                \"Controls what naming strategy to use when a giving a new name to a duplicated Explorer item on paste.\"\n            )),\n            default: 'simple'\n        },\n        'explorer.compactFolders': {\n            'type': 'boolean',\n            'description': ( nls.localize(\n                'compressSingleChildFolders',\n                \"Controls whether the Explorer should render folders in a compact form. In such a form, single child folders will be compressed in a combined tree element. Useful for Java package structures, for example.\"\n            )),\n            'default': true\n        },\n        'explorer.copyRelativePathSeparator': {\n            'type': 'string',\n            'enum': [\n                '/',\n                '\\\\',\n                'auto'\n            ],\n            'enumDescriptions': [\n                ( nls.localize(\n                    'copyRelativePathSeparator.slash',\n                    \"Use slash as path separation character.\"\n                )),\n                ( nls.localize(\n                    'copyRelativePathSeparator.backslash',\n                    \"Use backslash as path separation character.\"\n                )),\n                ( nls.localize(\n                    'copyRelativePathSeparator.auto',\n                    \"Uses operating system specific path separation character.\"\n                )),\n            ],\n            'description': ( nls.localize(\n                'copyRelativePathSeparator',\n                \"The path separation character used when copying relative file paths.\"\n            )),\n            'default': 'auto'\n        },\n        'explorer.excludeGitIgnore': {\n            type: 'boolean',\n            markdownDescription: ( nls.localize(\n                'excludeGitignore',\n                \"Controls whether entries in .gitignore should be parsed and excluded from the Explorer. Similar to {0}.\",\n                '`#files.exclude#`'\n            )),\n            default: false,\n            scope: 4\n        },\n        'explorer.fileNesting.enabled': {\n            'type': 'boolean',\n            scope: 4 ,\n            'markdownDescription': ( nls.localize(\n                'fileNestingEnabled',\n                \"Controls whether file nesting is enabled in the Explorer. File nesting allows for related files in a directory to be visually grouped together under a single parent file.\"\n            )),\n            'default': false,\n        },\n        'explorer.fileNesting.expand': {\n            'type': 'boolean',\n            'markdownDescription': ( nls.localize(\n                'fileNestingExpand',\n                \"Controls whether file nests are automatically expanded. {0} must be set for this to take effect.\",\n                '`#explorer.fileNesting.enabled#`'\n            )),\n            'default': true,\n        },\n        'explorer.fileNesting.patterns': {\n            'type': 'object',\n            scope: 4 ,\n            'markdownDescription': ( nls.localize(\n                'fileNestingPatterns',\n                \"Controls nesting of files in the Explorer. {0} must be set for this to take effect. Each __Item__ represents a parent pattern and may contain a single `*` character that matches any string. Each __Value__ represents a comma separated list of the child patterns that should be shown nested under a given parent. Child patterns may contain several special tokens:\\n- `${capture}`: Matches the resolved value of the `*` from the parent pattern\\n- `${basename}`: Matches the parent file's basename, the `file` in `file.ts`\\n- `${extname}`: Matches the parent file's extension, the `ts` in `file.ts`\\n- `${dirname}`: Matches the parent file's directory name, the `src` in `src/file.ts`\\n- `*`:  Matches any string, may only be used once per child pattern\",\n                '`#explorer.fileNesting.enabled#`'\n            )),\n            patternProperties: {\n                '^[^*]*\\\\*?[^*]*$': {\n                    markdownDescription: ( nls.localize(\n                        'fileNesting.description',\n                        \"Each key pattern may contain a single `*` character which will match any string.\"\n                    )),\n                    type: 'string',\n                    pattern: '^([^,*]*\\\\*?[^,*]*)(, ?[^,*]*\\\\*?[^,*]*)*$',\n                }\n            },\n            additionalProperties: false,\n            'default': {\n                '*.ts': '${capture}.js',\n                '*.js': '${capture}.js.map, ${capture}.min.js, ${capture}.d.ts',\n                '*.jsx': '${capture}.js',\n                '*.tsx': '${capture}.ts',\n                'tsconfig.json': 'tsconfig.*.json',\n                'package.json': 'package-lock.json, yarn.lock, pnpm-lock.yaml',\n            }\n        }\n    }\n});\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport './media/explorerviewlet.css.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { mark } from 'monaco-editor/esm/vs/base/common/performance.js';\nimport { VIEWLET_ID, VIEW_ID, ExplorerViewletVisibleContext } from '../common/files.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ExplorerView } from './views/explorerView.js';\nimport { EmptyView } from './views/emptyView.js';\nimport { OpenEditorsView } from './views/openEditorsView.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { ContextKeyExpr, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ViewContentGroups, Extensions, IViewDescriptorService } from '../../../common/views.js';\nimport { IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IWorkbenchLayoutService } from '../../../services/layout/browser/layoutService.js';\nimport { ViewPaneContainer } from '../../../browser/parts/views/viewPaneContainer.js';\nimport { KeyChord } from 'monaco-editor/esm/vs/base/common/keyCodes.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { IProgressService } from 'monaco-editor/esm/vs/platform/progress/common/progress.js';\nimport { SyncDescriptor } from 'monaco-editor/esm/vs/platform/instantiation/common/descriptors.js';\nimport { WorkbenchStateContext, RemoteNameContext } from '../../../common/contextkeys.js';\nimport { IsWebContext } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkeys.js';\nimport { OpenFileFolderAction, OpenFolderAction } from '../../../browser/actions/workspaceActions.js';\nimport { isMacintosh, isWeb } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { registerIcon } from 'monaco-editor/esm/vs/platform/theme/common/iconRegistry.js';\nconst explorerViewIcon = registerIcon('explorer-view-icon', Codicon.files, ( localize('explorerViewIcon', 'View icon of the explorer view.')));\nconst openEditorsViewIcon = registerIcon('open-editors-view-icon', Codicon.book, ( localize('openEditorsIcon', 'View icon of the open editors view.')));\nlet ExplorerViewletViewsContribution = class ExplorerViewletViewsContribution extends Disposable {\n    constructor(workspaceContextService, progressService) {\n        super();\n        this.workspaceContextService = workspaceContextService;\n        progressService.withProgress({ location: 1  }, () => workspaceContextService.getCompleteWorkspace()).finally(() => {\n            this.registerViews();\n            this._register(workspaceContextService.onDidChangeWorkbenchState(() => this.registerViews()));\n            this._register(workspaceContextService.onDidChangeWorkspaceFolders(() => this.registerViews()));\n        });\n    }\n    registerViews() {\n        mark('code/willRegisterExplorerViews');\n        const viewDescriptors = viewsRegistry.getViews(VIEW_CONTAINER);\n        const viewDescriptorsToRegister = [];\n        const viewDescriptorsToDeregister = [];\n        this.createOpenEditorsViewDescriptor();\n        const explorerViewDescriptor = this.createExplorerViewDescriptor();\n        const registeredExplorerViewDescriptor = viewDescriptors.find(v => v.id === explorerViewDescriptor.id);\n        const emptyViewDescriptor = this.createEmptyViewDescriptor();\n        const registeredEmptyViewDescriptor = viewDescriptors.find(v => v.id === emptyViewDescriptor.id);\n        if (this.workspaceContextService.getWorkbenchState() === 1  || this.workspaceContextService.getWorkspace().folders.length === 0) {\n            if (registeredExplorerViewDescriptor) {\n                viewDescriptorsToDeregister.push(registeredExplorerViewDescriptor);\n            }\n            if (!registeredEmptyViewDescriptor) {\n                viewDescriptorsToRegister.push(emptyViewDescriptor);\n            }\n        }\n        else {\n            if (registeredEmptyViewDescriptor) {\n                viewDescriptorsToDeregister.push(registeredEmptyViewDescriptor);\n            }\n            if (!registeredExplorerViewDescriptor) {\n                viewDescriptorsToRegister.push(explorerViewDescriptor);\n            }\n        }\n        if (viewDescriptorsToRegister.length) {\n            viewsRegistry.registerViews(viewDescriptorsToRegister, VIEW_CONTAINER);\n        }\n        if (viewDescriptorsToDeregister.length) {\n            viewsRegistry.deregisterViews(viewDescriptorsToDeregister, VIEW_CONTAINER);\n        }\n        mark('code/didRegisterExplorerViews');\n    }\n    createOpenEditorsViewDescriptor() {\n        return {\n            id: OpenEditorsView.ID,\n            name: OpenEditorsView.NAME,\n            ctorDescriptor: ( new SyncDescriptor(OpenEditorsView)),\n            containerIcon: openEditorsViewIcon,\n            order: 0,\n            canToggleVisibility: true,\n            canMoveView: true,\n            collapsed: false,\n            hideByDefault: true,\n            focusCommand: {\n                id: 'workbench.files.action.focusOpenEditorsView',\n                keybindings: { primary: KeyChord(2048  | 41 , 35 ) }\n            }\n        };\n    }\n    createEmptyViewDescriptor() {\n        return {\n            id: EmptyView.ID,\n            name: EmptyView.NAME,\n            containerIcon: explorerViewIcon,\n            ctorDescriptor: ( new SyncDescriptor(EmptyView)),\n            order: 1,\n            canToggleVisibility: true,\n            focusCommand: {\n                id: 'workbench.explorer.fileView.focus'\n            }\n        };\n    }\n    createExplorerViewDescriptor() {\n        return {\n            id: VIEW_ID,\n            name: ( localize('folders', \"Folders\")),\n            containerIcon: explorerViewIcon,\n            ctorDescriptor: ( new SyncDescriptor(ExplorerView)),\n            order: 1,\n            canMoveView: true,\n            canToggleVisibility: false,\n            focusCommand: {\n                id: 'workbench.explorer.fileView.focus'\n            }\n        };\n    }\n};\nExplorerViewletViewsContribution = ( __decorate([\n    ( __param(0, IWorkspaceContextService)),\n    ( __param(1, IProgressService))\n], ExplorerViewletViewsContribution));\nlet ExplorerViewPaneContainer = class ExplorerViewPaneContainer extends ViewPaneContainer {\n    constructor(layoutService, telemetryService, contextService, storageService, configurationService, instantiationService, contextKeyService, themeService, contextMenuService, extensionService, viewDescriptorService) {\n        super(VIEWLET_ID, { mergeViewWithContainerWhenSingleView: true }, instantiationService, configurationService, layoutService, contextMenuService, telemetryService, extensionService, themeService, storageService, contextService, viewDescriptorService);\n        this.viewletVisibleContextKey = ExplorerViewletVisibleContext.bindTo(contextKeyService);\n        this._register(this.contextService.onDidChangeWorkspaceName(e => this.updateTitleArea()));\n    }\n    create(parent) {\n        super.create(parent);\n        parent.classList.add('explorer-viewlet');\n    }\n    createView(viewDescriptor, options) {\n        if (viewDescriptor.id === VIEW_ID) {\n            return this.instantiationService.createInstance(ExplorerView, {\n                ...options, delegate: {\n                    willOpenElement: e => {\n                        if (!(e instanceof MouseEvent)) {\n                            return;\n                        }\n                        const openEditorsView = this.getOpenEditorsView();\n                        if (openEditorsView) {\n                            let delay = 0;\n                            const config = this.configurationService.getValue();\n                            if (!!config.workbench?.editor?.enablePreview) {\n                                delay = 250;\n                            }\n                            openEditorsView.setStructuralRefreshDelay(delay);\n                        }\n                    },\n                    didOpenElement: e => {\n                        if (!(e instanceof MouseEvent)) {\n                            return;\n                        }\n                        const openEditorsView = this.getOpenEditorsView();\n                        openEditorsView?.setStructuralRefreshDelay(0);\n                    }\n                }\n            });\n        }\n        return super.createView(viewDescriptor, options);\n    }\n    getExplorerView() {\n        return this.getView(VIEW_ID);\n    }\n    getOpenEditorsView() {\n        return this.getView(OpenEditorsView.ID);\n    }\n    setVisible(visible) {\n        this.viewletVisibleContextKey.set(visible);\n        super.setVisible(visible);\n    }\n    focus() {\n        const explorerView = this.getView(VIEW_ID);\n        if (explorerView && this.panes.every(p => !p.isExpanded())) {\n            explorerView.setExpanded(true);\n        }\n        if (explorerView?.isExpanded()) {\n            explorerView.focus();\n        }\n        else {\n            super.focus();\n        }\n    }\n};\nExplorerViewPaneContainer = ( __decorate([\n    ( __param(0, IWorkbenchLayoutService)),\n    ( __param(1, ITelemetryService)),\n    ( __param(2, IWorkspaceContextService)),\n    ( __param(3, IStorageService)),\n    ( __param(4, IConfigurationService)),\n    ( __param(5, IInstantiationService)),\n    ( __param(6, IContextKeyService)),\n    ( __param(7, IThemeService)),\n    ( __param(8, IContextMenuService)),\n    ( __param(9, IExtensionService)),\n    ( __param(10, IViewDescriptorService))\n], ExplorerViewPaneContainer));\nconst viewContainerRegistry = ( Registry.as(Extensions.ViewContainersRegistry));\nconst VIEW_CONTAINER = viewContainerRegistry.registerViewContainer({\n    id: VIEWLET_ID,\n    title: ( localize('explore', \"Explorer\")),\n    ctorDescriptor: ( new SyncDescriptor(ExplorerViewPaneContainer)),\n    storageId: 'workbench.explorer.views.state',\n    icon: explorerViewIcon,\n    alwaysUseContainerInfo: true,\n    hideIfEmpty: true,\n    order: 0,\n    openCommandActionDescriptor: {\n        id: VIEWLET_ID,\n        title: { value: ( localize('explore', \"Explorer\")), original: 'Explorer' },\n        mnemonicTitle: ( localize(\n            { key: 'miViewExplorer', comment: ['&& denotes a mnemonic'] },\n            \"&&Explorer\"\n        )),\n        keybindings: { primary: 2048  | 1024  | 35  },\n        order: 0\n    },\n}, 0 , { isDefault: true });\nconst openFolder = ( localize('openFolder', \"Open Folder\"));\nconst openFolderButton = `[${openFolder}](command:${(isMacintosh && !isWeb) ? OpenFileFolderAction.ID : OpenFolderAction.ID})`;\nconst viewsRegistry = ( Registry.as(Extensions.ViewsRegistry));\n( viewsRegistry.registerViewWelcomeContent(EmptyView.ID, {\n    content: ( localize(\n        { key: 'noFolderHelp', comment: ['Please do not translate the word \"commmand\", it is part of our internal syntax which must not change'] },\n        \"You have not yet opened a folder.\\n{0}\",\n        openFolderButton\n    )),\n    when: ( ContextKeyExpr.and(\n    ( ContextKeyExpr.has('editorIsOpen'))?.negate(), ( ContextKeyExpr.or((\n    ContextKeyExpr.and(( WorkbenchStateContext.notEqualsTo('workspace')), ( RemoteNameContext.isEqualTo('')))), (\n    ContextKeyExpr.and(( WorkbenchStateContext.notEqualsTo('workspace')), IsWebContext)))))),\n    group: ViewContentGroups.Open,\n    order: 1\n}));\nexport { ExplorerViewPaneContainer, ExplorerViewletViewsContribution, VIEW_CONTAINER };\n", "import n from '../../../../../../../../external/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".explorer-folders-view{height:100%}.explorer-item-hover{cursor:pointer!important;font-size:13px!important;height:22px;padding-left:6px;user-select:none!important}.explorer-folders-view .monaco-list-row{padding-left:4px}.explorer-folders-view .explorer-folders-view.highlight .monaco-list .explorer-item:not(.explorer-item-edited),.explorer-folders-view .explorer-folders-view.highlight .monaco-list .monaco-tl-twistie{opacity:.3}.explorer-folders-view .editor-group,.explorer-folders-view .explorer-item{height:22px;line-height:22px}.explorer-folders-view .explorer-item{display:flex;flex-wrap:nowrap}.explorer-folders-view .editor-group,.explorer-folders-view .explorer-item>a{overflow:hidden;text-overflow:ellipsis}.explorer-folders-view .explorer-item,.explorer-folders-view .explorer-item .monaco-inputbox{flex:1}.explorer-folders-view .explorer-item.cut{opacity:.5}.explorer-folders-view .explorer-item.explorer-item-edited .label-name{flex:0}.explorer-folders-view .explorer-item.nonexistent-root{opacity:.5}.explorer-folders-view .explorer-item .monaco-inputbox{line-height:normal;width:100%}.explorer-folders-view .explorer-item .monaco-icon-name-container.multiple>.label-name>.monaco-highlighted-label{border-radius:3px}.explorer-folders-view .explorer-item .monaco-icon-name-container.multiple>.label-name:hover>.monaco-highlighted-label,.explorer-folders-view .monaco-list .monaco-list-row.focused .explorer-item .monaco-icon-name-container.multiple>.label-name.active>.monaco-highlighted-label{text-decoration:underline}.explorer-folders-view .explorer-item .monaco-icon-name-container.multiple>.label-name.drop-target>.monaco-highlighted-label{background-color:var(--vscode-list-dropBackground)}.explorer-folders-view .explorer-item.align-nest-icon-with-parent-icon{margin-left:var(--vscode-explorer-align-offset-margin-left)}.monaco-workbench.linux .explorer-folders-view .explorer-item .monaco-inputbox,.monaco-workbench.mac .explorer-folders-view .explorer-item .monaco-inputbox{height:22px}.monaco-workbench .explorer-folders-view .explorer-item .monaco-inputbox>.ibwrapper>.input{height:20px;padding:0}.monaco-workbench.hc-black .explorer-folders-view .explorer-item,.monaco-workbench.hc-light .explorer-folders-view .explorer-item{line-height:20px}.monaco-workbench .explorer-folders-view .explorer-item .monaco-inputbox input[type=text]{opacity:1;outline-color:var(--vscode-focusBorder);outline-offset:-1px;outline-style:solid;outline-width:1px}.monaco-workbench.context-menu-visible .explorer-folders-view.highlight .monaco-list-row{outline:none!important}\";\nn(css,{});\nexport { css, css as default };\n", "import { __decorate, __param } from '../../../../../../../../external/tslib/tslib.es6.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport * as performance from 'monaco-editor/esm/vs/base/common/performance.js';\nimport { memoize } from 'monaco-editor/esm/vs/base/common/decorators.js';\nimport { ExplorerFolderContext, ExplorerResourceReadonlyContext, ExplorerResourceAvailableEditorIdsContext, ExplorerRootContext, ExplorerResourceMoveableToTrash, ExplorerCompressedFocusContext, ExplorerCompressedFirstFocusContext, ExplorerCompressedLastFocusContext, ViewHasSomeCollapsibleRootItemContext, FoldersViewVisibleContext, ExplorerResourceCut, FilesExplorerFocusedContext, ExplorerFocusedContext, ExplorerResourceNotReadonlyContext, VIEW_ID, VIEWLET_ID } from '../../common/files.js';\nimport { FileCopiedContext, NEW_FILE_COMMAND_ID, NEW_FOLDER_COMMAND_ID } from '../fileActions.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { IWorkbenchLayoutService } from '../../../../services/layout/browser/layoutService.js';\nimport { ExplorerDecorationsProvider } from './explorerDecorationsProvider.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IProgressService } from 'monaco-editor/esm/vs/platform/progress/common/progress.js';\nimport { IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { ContextKeyExpr, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { ResourceContextKey } from '../../../../common/contextkeys.js';\nimport { IDecorationsService } from '../../../../services/decorations/common/decorations.js';\nimport { WorkbenchCompressibleAsyncDataTree } from 'monaco-editor/esm/vs/platform/list/browser/listService.js';\nimport { DelayedDragHandler } from 'monaco-editor/esm/vs/base/browser/dnd.js';\nimport { SIDE_GROUP, ACTIVE_GROUP, IEditorService } from '../../../../services/editor/common/editorService.js';\nimport { ViewPane } from '../../../../browser/parts/views/viewPane.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { FilesFilter, FilesRenderer, ExplorerDelegate, ExplorerCompressionDelegate, ExplorerDataSource, FileSorter, FileDragAndDrop, isCompressedFolderName } from './explorerViewer.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { MenuId, registerAction2, Action2 } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { ExplorerItem, NewExplorerItem } from '../../common/explorerModel.js';\nimport { ResourceLabels } from '../../../../browser/labels.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { IClipboardService } from 'monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { SIDE_BAR_BACKGROUND } from '../../../../common/theme.js';\nimport { IViewsService, IViewDescriptorService } from '../../../../common/views.js';\nimport { IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { EditorResourceAccessor, SideBySideEditor } from '../../../../common/editor.js';\nimport { IExplorerService } from '../files.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { IEditorResolverService } from '../../../../services/editor/common/editorResolverService.js';\nimport { IPaneCompositePartService } from '../../../../services/panecomposite/browser/panecomposite.js';\nimport { EditorOpenSource } from 'monaco-editor/esm/vs/platform/editor/common/editor.js';\nimport { ResourceMap } from 'monaco-editor/esm/vs/base/common/map.js';\nimport { isInputElement } from 'monaco-editor/esm/vs/base/browser/ui/list/listWidget.js';\nvar ExplorerView_1;\nfunction hasExpandedRootChild(tree, treeInput) {\n    for (const folder of treeInput) {\n        if (tree.hasNode(folder) && !tree.isCollapsed(folder)) {\n            for (const [, child] of folder.children.entries()) {\n                if (tree.hasNode(child) && tree.isCollapsible(child) && !tree.isCollapsed(child)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\nfunction hasExpandedNode(tree, treeInput) {\n    for (const folder of treeInput) {\n        if (tree.hasNode(folder) && !tree.isCollapsed(folder)) {\n            return true;\n        }\n    }\n    return false;\n}\nconst identityProvider = {\n    getId: (stat) => {\n        if (stat instanceof NewExplorerItem) {\n            return `new:${stat.getId()}`;\n        }\n        return stat.getId();\n    }\n};\nfunction getContext(focus, selection, respectMultiSelection, compressedNavigationControllerProvider) {\n    let focusedStat;\n    focusedStat = focus.length ? focus[0] : undefined;\n    if (respectMultiSelection && selection.length > 1) {\n        focusedStat = undefined;\n    }\n    const compressedNavigationController = focusedStat && compressedNavigationControllerProvider.getCompressedNavigationController(focusedStat);\n    focusedStat = compressedNavigationController ? compressedNavigationController.current : focusedStat;\n    const selectedStats = [];\n    for (const stat of selection) {\n        const controller = compressedNavigationControllerProvider.getCompressedNavigationController(stat);\n        if (controller && focusedStat && controller === compressedNavigationController) {\n            if (stat === focusedStat) {\n                selectedStats.push(stat);\n            }\n            continue;\n        }\n        if (controller) {\n            selectedStats.push(...controller.items);\n        }\n        else {\n            selectedStats.push(stat);\n        }\n    }\n    if (!focusedStat) {\n        if (respectMultiSelection) {\n            return selectedStats;\n        }\n        else {\n            return [];\n        }\n    }\n    if (respectMultiSelection && selectedStats.indexOf(focusedStat) >= 0) {\n        return selectedStats;\n    }\n    return [focusedStat];\n}\nlet ExplorerView = class ExplorerView extends ViewPane {\n    static { ExplorerView_1 = this; }\n    static { this.TREE_VIEW_STATE_STORAGE_KEY = 'workbench.explorer.treeViewState'; }\n    constructor(options, contextMenuService, viewDescriptorService, instantiationService, contextService, progressService, editorService, editorResolverService, layoutService, keybindingService, contextKeyService, configurationService, decorationService, labelService, themeService, telemetryService, explorerService, storageService, clipboardService, fileService, uriIdentityService, commandService, openerService) {\n        super(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n        this.contextService = contextService;\n        this.progressService = progressService;\n        this.editorService = editorService;\n        this.editorResolverService = editorResolverService;\n        this.layoutService = layoutService;\n        this.decorationService = decorationService;\n        this.labelService = labelService;\n        this.explorerService = explorerService;\n        this.storageService = storageService;\n        this.clipboardService = clipboardService;\n        this.fileService = fileService;\n        this.uriIdentityService = uriIdentityService;\n        this.commandService = commandService;\n        this.autoReveal = false;\n        this.delegate = options.delegate;\n        this.resourceContext = instantiationService.createInstance(ResourceContextKey);\n        this._register(this.resourceContext);\n        this.folderContext = ExplorerFolderContext.bindTo(contextKeyService);\n        this.readonlyContext = ExplorerResourceReadonlyContext.bindTo(contextKeyService);\n        this.availableEditorIdsContext = ExplorerResourceAvailableEditorIdsContext.bindTo(contextKeyService);\n        this.rootContext = ExplorerRootContext.bindTo(contextKeyService);\n        this.resourceMoveableToTrash = ExplorerResourceMoveableToTrash.bindTo(contextKeyService);\n        this.compressedFocusContext = ExplorerCompressedFocusContext.bindTo(contextKeyService);\n        this.compressedFocusFirstContext = ExplorerCompressedFirstFocusContext.bindTo(contextKeyService);\n        this.compressedFocusLastContext = ExplorerCompressedLastFocusContext.bindTo(contextKeyService);\n        this.viewHasSomeCollapsibleRootItem = ViewHasSomeCollapsibleRootItemContext.bindTo(contextKeyService);\n        this.viewVisibleContextKey = FoldersViewVisibleContext.bindTo(contextKeyService);\n        this.explorerService.registerView(this);\n    }\n    get name() {\n        return this.labelService.getWorkspaceLabel(this.contextService.getWorkspace());\n    }\n    get title() {\n        return this.name;\n    }\n    set title(_) {\n    }\n    setVisible(visible) {\n        this.viewVisibleContextKey.set(visible);\n        super.setVisible(visible);\n    }\n    get fileCopiedContextKey() {\n        return FileCopiedContext.bindTo(this.contextKeyService);\n    }\n    get resourceCutContextKey() {\n        return ExplorerResourceCut.bindTo(this.contextKeyService);\n    }\n    renderHeader(container) {\n        super.renderHeader(container);\n        this.dragHandler = ( new DelayedDragHandler(container, () => this.setExpanded(true)));\n        const titleElement = container.querySelector('.title');\n        const setHeader = () => {\n            const workspace = this.contextService.getWorkspace();\n            const title = ( workspace.folders.map(folder => folder.name)).join();\n            titleElement.textContent = this.name;\n            titleElement.title = title;\n            this.ariaHeaderLabel = ( nls.localize('explorerSection', \"Explorer Section: {0}\", this.name));\n            titleElement.setAttribute('aria-label', this.ariaHeaderLabel);\n        };\n        this._register(this.contextService.onDidChangeWorkspaceName(setHeader));\n        this._register(this.labelService.onDidChangeFormatters(setHeader));\n        setHeader();\n    }\n    layoutBody(height, width) {\n        super.layoutBody(height, width);\n        this.tree.layout(height, width);\n    }\n    renderBody(container) {\n        super.renderBody(container);\n        this.container = container;\n        this.treeContainer = dom.append(container, dom.$('.explorer-folders-view'));\n        this.createTree(this.treeContainer);\n        this._register(this.labelService.onDidChangeFormatters(() => {\n            this._onDidChangeTitleArea.fire();\n        }));\n        this.onConfigurationUpdated(undefined);\n        this._register(this.editorService.onDidActiveEditorChange(() => {\n            this.selectActiveFile();\n        }));\n        this._register(this.configurationService.onDidChangeConfiguration(e => this.onConfigurationUpdated(e)));\n        this._register(this.onDidChangeBodyVisibility(async (visible) => {\n            if (visible) {\n                await this.setTreeInput();\n                this.updateAnyCollapsedContext();\n                this.selectActiveFile(true);\n            }\n        }));\n    }\n    focus() {\n        this.tree.domFocus();\n        const focused = this.tree.getFocus();\n        if (focused.length === 1 && this.autoReveal) {\n            this.tree.reveal(focused[0], 0.5);\n        }\n    }\n    hasFocus() {\n        return dom.isAncestor(document.activeElement, this.container);\n    }\n    getContext(respectMultiSelection) {\n        return getContext(this.tree.getFocus(), this.tree.getSelection(), respectMultiSelection, this.renderer);\n    }\n    isItemVisible(item) {\n        if (!this.filter) {\n            return false;\n        }\n        return this.filter.filter(item, 1 );\n    }\n    isItemCollapsed(item) {\n        return this.tree.isCollapsed(item);\n    }\n    async setEditable(stat, isEditing) {\n        if (isEditing) {\n            this.horizontalScrolling = this.tree.options.horizontalScrolling;\n            if (this.horizontalScrolling) {\n                this.tree.updateOptions({ horizontalScrolling: false });\n            }\n            await this.tree.expand(stat.parent);\n        }\n        else {\n            if (this.horizontalScrolling !== undefined) {\n                this.tree.updateOptions({ horizontalScrolling: this.horizontalScrolling });\n            }\n            this.horizontalScrolling = undefined;\n            this.treeContainer.classList.remove('highlight');\n        }\n        await this.refresh(false, stat.parent, false);\n        if (isEditing) {\n            this.treeContainer.classList.add('highlight');\n            this.tree.reveal(stat);\n        }\n        else {\n            this.tree.domFocus();\n        }\n    }\n    selectActiveFile(reveal = this.autoReveal) {\n        if (this.autoReveal) {\n            const activeFile = EditorResourceAccessor.getCanonicalUri(this.editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n            if (activeFile) {\n                const focus = this.tree.getFocus();\n                const selection = this.tree.getSelection();\n                if (focus.length === 1 && this.uriIdentityService.extUri.isEqual(focus[0].resource, activeFile) && selection.length === 1 && this.uriIdentityService.extUri.isEqual(selection[0].resource, activeFile)) {\n                    return;\n                }\n                this.explorerService.select(activeFile, reveal);\n            }\n        }\n    }\n    createTree(container) {\n        this.filter = this.instantiationService.createInstance(FilesFilter);\n        this._register(this.filter);\n        this._register(this.filter.onDidChange(() => this.refresh(true)));\n        const explorerLabels = this.instantiationService.createInstance(ResourceLabels, { onDidChangeVisibility: this.onDidChangeBodyVisibility });\n        this._register(explorerLabels);\n        const updateWidth = (stat) => this.tree.updateWidth(stat);\n        this.renderer = this.instantiationService.createInstance(FilesRenderer, container, explorerLabels, updateWidth);\n        this._register(this.renderer);\n        this._register(createFileIconThemableTreeContainerScope(container, this.themeService));\n        const isCompressionEnabled = () => this.configurationService.getValue('explorer.compactFolders');\n        const getFileNestingSettings = (item) => this.configurationService.getValue({ resource: item?.root.resource }).explorer.fileNesting;\n        this.tree = this.instantiationService.createInstance(WorkbenchCompressibleAsyncDataTree, 'FileExplorer', container, ( new ExplorerDelegate()), ( new ExplorerCompressionDelegate()), [this.renderer], this.instantiationService.createInstance(ExplorerDataSource, this.filter), {\n            compressionEnabled: isCompressionEnabled(),\n            accessibilityProvider: this.renderer,\n            identityProvider,\n            keyboardNavigationLabelProvider: {\n                getKeyboardNavigationLabel: (stat) => {\n                    if (this.explorerService.isEditable(stat)) {\n                        return undefined;\n                    }\n                    return stat.name;\n                },\n                getCompressedNodeKeyboardNavigationLabel: (stats) => {\n                    if (( stats.some(stat => this.explorerService.isEditable(stat)))) {\n                        return undefined;\n                    }\n                    return ( stats.map(stat => stat.name)).join('/');\n                }\n            },\n            multipleSelectionSupport: true,\n            filter: this.filter,\n            sorter: this.instantiationService.createInstance(FileSorter),\n            dnd: this.instantiationService.createInstance(FileDragAndDrop, (item) => this.isItemCollapsed(item)),\n            collapseByDefault: (e) => {\n                if (e instanceof ExplorerItem) {\n                    if (e.hasNests && getFileNestingSettings(e).expand) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            autoExpandSingleChildren: true,\n            expandOnlyOnTwistieClick: (e) => {\n                if (e instanceof ExplorerItem) {\n                    if (e.hasNests) {\n                        return true;\n                    }\n                    else if (this.configurationService.getValue('workbench.tree.expandMode') === 'doubleClick') {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            paddingBottom: ExplorerDelegate.ITEM_HEIGHT,\n            overrideStyles: {\n                listBackground: SIDE_BAR_BACKGROUND\n            }\n        });\n        this._register(this.tree);\n        this._register(this.themeService.onDidColorThemeChange(() => this.tree.rerender()));\n        const onDidChangeCompressionConfiguration = Event.filter(this.configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('explorer.compactFolders'));\n        this._register(onDidChangeCompressionConfiguration(_ => this.tree.updateOptions({ compressionEnabled: isCompressionEnabled() })));\n        FilesExplorerFocusedContext.bindTo(this.tree.contextKeyService);\n        ExplorerFocusedContext.bindTo(this.tree.contextKeyService);\n        this._register(this.tree.onDidChangeFocus(e => this.onFocusChanged(e.elements)));\n        this.onFocusChanged([]);\n        this._register(this.tree.onDidOpen(async (e) => {\n            const element = e.element;\n            if (!element) {\n                return;\n            }\n            const shiftDown = e.browserEvent instanceof KeyboardEvent && e.browserEvent.shiftKey;\n            if (!shiftDown) {\n                if (element.isDirectory || this.explorerService.isEditable(undefined)) {\n                    return;\n                }\n                this.telemetryService.publicLog2('workbenchActionExecuted', { id: 'workbench.files.openFile', from: 'explorer' });\n                try {\n                    this.delegate?.willOpenElement(e.browserEvent);\n                    await this.editorService.openEditor({ resource: element.resource, options: { preserveFocus: e.editorOptions.preserveFocus, pinned: e.editorOptions.pinned, source: EditorOpenSource.USER } }, e.sideBySide ? SIDE_GROUP : ACTIVE_GROUP);\n                }\n                finally {\n                    this.delegate?.didOpenElement();\n                }\n            }\n        }));\n        this._register(this.tree.onContextMenu(e => this.onContextMenu(e)));\n        this._register(this.tree.onDidScroll(async (e) => {\n            const editable = this.explorerService.getEditable();\n            if (e.scrollTopChanged && editable && this.tree.getRelativeTop(editable.stat) === null) {\n                await editable.data.onFinish('', false);\n            }\n        }));\n        this._register(this.tree.onDidChangeCollapseState(e => {\n            const element = e.node.element?.element;\n            if (element) {\n                const navigationController = this.renderer.getCompressedNavigationController(element instanceof Array ? element[0] : element);\n                navigationController?.updateCollapsed(e.node.collapsed);\n            }\n            this.updateAnyCollapsedContext();\n        }));\n        this.updateAnyCollapsedContext();\n        this._register(this.tree.onMouseDblClick(e => {\n            const scrollingByPage = this.configurationService.getValue('workbench.list.scrollByPage');\n            if (e.element === null && !scrollingByPage) {\n                this.commandService.executeCommand(NEW_FILE_COMMAND_ID);\n            }\n        }));\n        this._register(this.storageService.onWillSaveState(() => {\n            this.storeTreeViewState();\n        }));\n    }\n    onConfigurationUpdated(event) {\n        if (!event || event.affectsConfiguration('explorer.autoReveal')) {\n            const configuration = this.configurationService.getValue();\n            this.autoReveal = configuration?.explorer?.autoReveal;\n        }\n        if (event && (event.affectsConfiguration('explorer.decorations.colors') || event.affectsConfiguration('explorer.decorations.badges'))) {\n            this.refresh(true);\n        }\n    }\n    storeTreeViewState() {\n        this.storageService.store(ExplorerView_1.TREE_VIEW_STATE_STORAGE_KEY, JSON.stringify(this.tree.getViewState()), 1 , 1 );\n    }\n    setContextKeys(stat) {\n        const folders = this.contextService.getWorkspace().folders;\n        const resource = stat ? stat.resource : folders[folders.length - 1].uri;\n        stat = stat || this.explorerService.findClosest(resource);\n        this.resourceContext.set(resource);\n        this.folderContext.set(!!stat && stat.isDirectory);\n        this.readonlyContext.set(!!stat && !!stat.isReadonly);\n        this.rootContext.set(!!stat && stat.isRoot);\n        if (resource) {\n            const overrides = resource ? ( this.editorResolverService.getEditors(resource).map(editor => editor.id)) : [];\n            this.availableEditorIdsContext.set(overrides.join(','));\n        }\n        else {\n            this.availableEditorIdsContext.reset();\n        }\n    }\n    async onContextMenu(e) {\n        if (isInputElement(e.browserEvent.target)) {\n            return;\n        }\n        const stat = e.element;\n        let anchor = e.anchor;\n        if (dom.isHTMLElement(anchor)) {\n            if (stat) {\n                const controller = this.renderer.getCompressedNavigationController(stat);\n                if (controller) {\n                    if (e.browserEvent instanceof KeyboardEvent || isCompressedFolderName(e.browserEvent.target)) {\n                        anchor = controller.labels[controller.index];\n                    }\n                    else {\n                        controller.last();\n                    }\n                }\n            }\n        }\n        this.fileCopiedContextKey.set(await this.clipboardService.hasResources());\n        this.setContextKeys(stat);\n        const selection = this.tree.getSelection();\n        const roots = this.explorerService.roots;\n        let arg;\n        if (stat instanceof ExplorerItem) {\n            const compressedController = this.renderer.getCompressedNavigationController(stat);\n            arg = compressedController ? compressedController.current.resource : stat.resource;\n        }\n        else {\n            arg = roots.length === 1 ? roots[0].resource : {};\n        }\n        this.contextMenuService.showContextMenu({\n            menuId: MenuId.ExplorerContext,\n            menuActionOptions: { arg, shouldForwardArgs: true },\n            contextKeyService: this.tree.contextKeyService,\n            getAnchor: () => anchor,\n            onHide: (wasCancelled) => {\n                if (wasCancelled) {\n                    this.tree.domFocus();\n                }\n            },\n            getActionsContext: () => stat && selection && selection.indexOf(stat) >= 0\n                ? ( selection.map((fs) => fs.resource))\n                : stat instanceof ExplorerItem ? [stat.resource] : []\n        });\n    }\n    onFocusChanged(elements) {\n        const stat = elements && elements.length ? elements[0] : undefined;\n        this.setContextKeys(stat);\n        if (stat) {\n            const enableTrash = this.configurationService.getValue().files.enableTrash;\n            const hasCapability = this.fileService.hasCapability(stat.resource, 4096 );\n            this.resourceMoveableToTrash.set(enableTrash && hasCapability);\n        }\n        else {\n            this.resourceMoveableToTrash.reset();\n        }\n        const compressedNavigationController = stat && this.renderer.getCompressedNavigationController(stat);\n        if (!compressedNavigationController) {\n            this.compressedFocusContext.set(false);\n            return;\n        }\n        this.compressedFocusContext.set(true);\n        this.updateCompressedNavigationContextKeys(compressedNavigationController);\n    }\n    refresh(recursive, item, cancelEditing = true) {\n        if (!this.tree || !this.isBodyVisible() || (item && !this.tree.hasNode(item))) {\n            return Promise.resolve(undefined);\n        }\n        if (cancelEditing && this.explorerService.isEditable(undefined)) {\n            this.tree.domFocus();\n        }\n        const toRefresh = item || this.tree.getInput();\n        return this.tree.updateChildren(toRefresh, recursive, !!item, {\n            diffIdentityProvider: identityProvider\n        });\n    }\n    getOptimalWidth() {\n        const parentNode = this.tree.getHTMLElement();\n        const childNodes = [].slice.call(parentNode.querySelectorAll('.explorer-item .label-name'));\n        return dom.getLargestChildWidth(parentNode, childNodes);\n    }\n    async setTreeInput() {\n        if (!this.isBodyVisible()) {\n            return Promise.resolve(undefined);\n        }\n        if (this.setTreeInputPromise) {\n            await this.setTreeInputPromise;\n        }\n        const initialInputSetup = !this.tree.getInput();\n        if (initialInputSetup) {\n            performance.mark('code/willResolveExplorer');\n        }\n        const roots = this.explorerService.roots;\n        let input = roots[0];\n        if (this.contextService.getWorkbenchState() !== 2  || roots[0].error) {\n            input = roots;\n        }\n        let viewState;\n        if (this.tree && this.tree.getInput()) {\n            viewState = this.tree.getViewState();\n        }\n        else {\n            const rawViewState = this.storageService.get(ExplorerView_1.TREE_VIEW_STATE_STORAGE_KEY, 1 );\n            if (rawViewState) {\n                viewState = JSON.parse(rawViewState);\n            }\n        }\n        const previousInput = this.tree.getInput();\n        const promise = this.setTreeInputPromise = this.tree.setInput(input, viewState).then(async () => {\n            if (Array.isArray(input)) {\n                if (!viewState || previousInput instanceof ExplorerItem) {\n                    for (let i = 0; i < Math.min(input.length, 5); i++) {\n                        try {\n                            await this.tree.expand(input[i]);\n                        }\n                        catch (e) { }\n                    }\n                }\n                if (!previousInput && input.length === 1 && this.configurationService.getValue().explorer.expandSingleFolderWorkspaces) {\n                    await this.tree.expand(input[0]).catch(() => { });\n                }\n                if (Array.isArray(previousInput)) {\n                    const previousRoots = ( new ResourceMap());\n                    previousInput.forEach(previousRoot => previousRoots.set(previousRoot.resource, true));\n                    await Promise.all(( input.map(async (item) => {\n                        if (!( previousRoots.has(item.resource))) {\n                            try {\n                                await this.tree.expand(item);\n                            }\n                            catch (e) { }\n                        }\n                    })));\n                }\n            }\n            if (initialInputSetup) {\n                performance.mark('code/didResolveExplorer');\n            }\n        });\n        this.progressService.withProgress({\n            location: 1 ,\n            delay: this.layoutService.isRestored() ? 800 : 1500\n        }, _progress => promise);\n        await promise;\n        if (!this.decorationsProvider) {\n            this.decorationsProvider = ( new ExplorerDecorationsProvider(this.explorerService, this.contextService));\n            this._register(this.decorationService.registerDecorationsProvider(this.decorationsProvider));\n        }\n    }\n    async selectResource(resource, reveal = this.autoReveal, retry = 0) {\n        if (retry === 2) {\n            return;\n        }\n        if (!resource || !this.isBodyVisible()) {\n            return;\n        }\n        let item = this.explorerService.findClosestRoot(resource);\n        while (item && ( item.resource.toString()) !== ( resource.toString())) {\n            try {\n                await this.tree.expand(item);\n            }\n            catch (e) {\n                return this.selectResource(resource, reveal, retry + 1);\n            }\n            for (const child of ( item.children.values())) {\n                if (this.uriIdentityService.extUri.isEqualOrParent(resource, child.resource)) {\n                    item = child;\n                    break;\n                }\n                item = null;\n            }\n        }\n        if (item) {\n            if (item === this.tree.getInput()) {\n                this.tree.setFocus([]);\n                this.tree.setSelection([]);\n                return;\n            }\n            try {\n                if (item.nestedParent) {\n                    await this.tree.expand(item.nestedParent);\n                }\n                if ((reveal === true || reveal === 'force') && this.tree.getRelativeTop(item) === null) {\n                    this.tree.reveal(item, 0.5);\n                }\n                this.tree.setFocus([item]);\n                this.tree.setSelection([item]);\n            }\n            catch (e) {\n                return this.selectResource(resource, reveal, retry + 1);\n            }\n        }\n    }\n    itemsCopied(stats, cut, previousCut) {\n        this.fileCopiedContextKey.set(stats.length > 0);\n        this.resourceCutContextKey.set(cut && stats.length > 0);\n        previousCut?.forEach(item => this.tree.rerender(item));\n        if (cut) {\n            stats.forEach(s => this.tree.rerender(s));\n        }\n    }\n    expandAll() {\n        if (this.explorerService.isEditable(undefined)) {\n            this.tree.domFocus();\n        }\n        this.tree.expandAll();\n    }\n    collapseAll() {\n        if (this.explorerService.isEditable(undefined)) {\n            this.tree.domFocus();\n        }\n        const treeInput = this.tree.getInput();\n        if (Array.isArray(treeInput)) {\n            if (hasExpandedRootChild(this.tree, treeInput)) {\n                treeInput.forEach(folder => {\n                    folder.children.forEach(child => this.tree.hasNode(child) && this.tree.collapse(child, true));\n                });\n                return;\n            }\n        }\n        this.tree.collapseAll();\n    }\n    previousCompressedStat() {\n        const focused = this.tree.getFocus();\n        if (!focused.length) {\n            return;\n        }\n        const compressedNavigationController = this.renderer.getCompressedNavigationController(focused[0]);\n        compressedNavigationController.previous();\n        this.updateCompressedNavigationContextKeys(compressedNavigationController);\n    }\n    nextCompressedStat() {\n        const focused = this.tree.getFocus();\n        if (!focused.length) {\n            return;\n        }\n        const compressedNavigationController = this.renderer.getCompressedNavigationController(focused[0]);\n        compressedNavigationController.next();\n        this.updateCompressedNavigationContextKeys(compressedNavigationController);\n    }\n    firstCompressedStat() {\n        const focused = this.tree.getFocus();\n        if (!focused.length) {\n            return;\n        }\n        const compressedNavigationController = this.renderer.getCompressedNavigationController(focused[0]);\n        compressedNavigationController.first();\n        this.updateCompressedNavigationContextKeys(compressedNavigationController);\n    }\n    lastCompressedStat() {\n        const focused = this.tree.getFocus();\n        if (!focused.length) {\n            return;\n        }\n        const compressedNavigationController = this.renderer.getCompressedNavigationController(focused[0]);\n        compressedNavigationController.last();\n        this.updateCompressedNavigationContextKeys(compressedNavigationController);\n    }\n    updateCompressedNavigationContextKeys(controller) {\n        this.compressedFocusFirstContext.set(controller.index === 0);\n        this.compressedFocusLastContext.set(controller.index === controller.count - 1);\n    }\n    updateAnyCollapsedContext() {\n        const treeInput = this.tree.getInput();\n        if (treeInput === undefined) {\n            return;\n        }\n        const treeInputArray = Array.isArray(treeInput) ? treeInput : Array.from(( treeInput.children.values()));\n        this.viewHasSomeCollapsibleRootItem.set(hasExpandedNode(this.tree, treeInputArray));\n        this.storeTreeViewState();\n    }\n    dispose() {\n        this.dragHandler?.dispose();\n        super.dispose();\n    }\n};\nExplorerView.__decorator = ( __decorate([\n    memoize\n], ExplorerView.prototype, \"fileCopiedContextKey\", null));\nExplorerView.__decorator = ( __decorate([\n    memoize\n], ExplorerView.prototype, \"resourceCutContextKey\", null));\nExplorerView = ExplorerView_1 = ( __decorate([\n    ( __param(1, IContextMenuService)),\n    ( __param(2, IViewDescriptorService)),\n    ( __param(3, IInstantiationService)),\n    ( __param(4, IWorkspaceContextService)),\n    ( __param(5, IProgressService)),\n    ( __param(6, IEditorService)),\n    ( __param(7, IEditorResolverService)),\n    ( __param(8, IWorkbenchLayoutService)),\n    ( __param(9, IKeybindingService)),\n    ( __param(10, IContextKeyService)),\n    ( __param(11, IConfigurationService)),\n    ( __param(12, IDecorationsService)),\n    ( __param(13, ILabelService)),\n    ( __param(14, IThemeService)),\n    ( __param(15, ITelemetryService)),\n    ( __param(16, IExplorerService)),\n    ( __param(17, IStorageService)),\n    ( __param(18, IClipboardService)),\n    ( __param(19, IFileService)),\n    ( __param(20, IUriIdentityService)),\n    ( __param(21, ICommandService)),\n    ( __param(22, IOpenerService))\n], ExplorerView));\nfunction createFileIconThemableTreeContainerScope(container, themeService) {\n    container.classList.add('file-icon-themable-tree');\n    container.classList.add('show-file-icons');\n    const onDidChangeFileIconTheme = (theme) => {\n        container.classList.toggle('align-icons-and-twisties', theme.hasFileIcons && !theme.hasFolderIcons);\n        container.classList.toggle('hide-arrows', theme.hidesExplorerArrows === true);\n    };\n    onDidChangeFileIconTheme(themeService.getFileIconTheme());\n    return themeService.onDidFileIconThemeChange(onDidChangeFileIconTheme);\n}\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.files.action.createFileFromExplorer',\n            title: ( nls.localize('createNewFile', \"New File...\")),\n            f1: false,\n            icon: Codicon.newFile,\n            precondition: ExplorerResourceNotReadonlyContext,\n            menu: {\n                id: MenuId.ViewTitle,\n                group: 'navigation',\n                when: ( ContextKeyExpr.equals('view', VIEW_ID)),\n                order: 10\n            }\n        });\n    }\n    run(accessor) {\n        const commandService = accessor.get(ICommandService);\n        commandService.executeCommand(NEW_FILE_COMMAND_ID);\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.files.action.createFolderFromExplorer',\n            title: ( nls.localize('createNewFolder', \"New Folder...\")),\n            f1: false,\n            icon: Codicon.newFolder,\n            precondition: ExplorerResourceNotReadonlyContext,\n            menu: {\n                id: MenuId.ViewTitle,\n                group: 'navigation',\n                when: ( ContextKeyExpr.equals('view', VIEW_ID)),\n                order: 20\n            }\n        });\n    }\n    run(accessor) {\n        const commandService = accessor.get(ICommandService);\n        commandService.executeCommand(NEW_FOLDER_COMMAND_ID);\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.files.action.refreshFilesExplorer',\n            title: { value: ( nls.localize('refreshExplorer', \"Refresh Explorer\")), original: 'Refresh Explorer' },\n            f1: true,\n            icon: Codicon.refresh,\n            menu: {\n                id: MenuId.ViewTitle,\n                group: 'navigation',\n                when: ( ContextKeyExpr.equals('view', VIEW_ID)),\n                order: 30\n            }\n        });\n    }\n    async run(accessor) {\n        const paneCompositeService = accessor.get(IPaneCompositePartService);\n        const explorerService = accessor.get(IExplorerService);\n        await paneCompositeService.openPaneComposite(VIEWLET_ID, 0 );\n        await explorerService.refresh();\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.files.action.collapseExplorerFolders',\n            title: { value: ( nls.localize('collapseExplorerFolders', \"Collapse Folders in Explorer\")), original: 'Collapse Folders in Explorer' },\n            f1: true,\n            icon: Codicon.collapseAll,\n            menu: {\n                id: MenuId.ViewTitle,\n                group: 'navigation',\n                when: ( ContextKeyExpr.equals('view', VIEW_ID)),\n                order: 40\n            }\n        });\n    }\n    run(accessor) {\n        const viewsService = accessor.get(IViewsService);\n        const view = viewsService.getViewWithId(VIEW_ID);\n        if (view !== null) {\n            const explorerView = view;\n            explorerView.collapseAll();\n        }\n    }\n});\nexport { ExplorerView, createFileIconThemableTreeContainerScope, getContext };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { OS, isWindows } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { extname, basename } from 'monaco-editor/esm/vs/base/common/path.js';\nimport * as resources from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { toErrorMessage } from 'monaco-editor/esm/vs/base/common/errorMessage.js';\nimport { Action } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport { dispose } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { VIEWLET_ID, VIEW_ID } from '../common/files.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { EditorResourceAccessor, SideBySideEditor } from '../../../common/editor.js';\nimport { IQuickInputService, ItemActivation } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { SAVE_ALL_IN_GROUP_COMMAND_ID, REVEAL_IN_EXPLORER_COMMAND_ID, NEW_UNTITLED_FILE_COMMAND_ID } from './fileConstants.js';\nimport { ITextModelService } from 'monaco-editor/esm/vs/editor/common/services/resolverService.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IClipboardService } from 'monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { ICommandService, CommandsRegistry } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport '../../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { Severity, INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { CLOSE_EDITORS_AND_GROUP_COMMAND_ID } from '../../../browser/parts/editor/editorCommands.js';\nimport { coalesce } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { NewExplorerItem } from '../common/explorerModel.js';\nimport { getErrorMessage } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { triggerUpload } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { IFilesConfigurationService } from '../../../services/filesConfiguration/common/filesConfigurationService.js';\nimport { IWorkingCopyService } from '../../../services/workingCopy/common/workingCopyService.js';\nimport { timeout } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { IWorkingCopyFileService } from '../../../services/workingCopy/common/workingCopyFileService.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { IViewsService } from '../../../common/views.js';\nimport { trim, rtrim } from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { ResourceFileEdit } from 'monaco-editor/esm/vs/editor/browser/services/bulkEditService.js';\nimport { IExplorerService } from './files.js';\nimport { FileDownload, BrowserFileUpload } from './fileImportExport.js';\nimport { IPaneCompositePartService } from '../../../services/panecomposite/browser/panecomposite.js';\nimport { IRemoteAgentService } from '../../../services/remote/common/remoteAgentService.js';\nimport { IPathService } from '../../../services/path/common/pathService.js';\nimport { Action2 } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { ActiveEditorContext, EmptyWorkspaceSupportContext, ActiveEditorCanToggleReadonlyContext } from '../../../common/contextkeys.js';\nimport { KeyChord } from 'monaco-editor/esm/vs/base/common/keyCodes.js';\nimport { Categories } from 'monaco-editor/esm/vs/platform/action/common/actionCommonCategories.js';\nimport { IDialogService, getFileNamesMessage } from '../../../../platform/dialogs/common/dialogs.js';\nconst NEW_FILE_COMMAND_ID = 'explorer.newFile';\nconst NEW_FILE_LABEL = ( nls.localize('newFile', \"New File...\"));\nconst NEW_FOLDER_COMMAND_ID = 'explorer.newFolder';\nconst NEW_FOLDER_LABEL = ( nls.localize('newFolder', \"New Folder...\"));\nconst TRIGGER_RENAME_LABEL = ( nls.localize('rename', \"Rename...\"));\nconst MOVE_FILE_TO_TRASH_LABEL = ( nls.localize('delete', \"Delete\"));\nconst COPY_FILE_LABEL = ( nls.localize('copyFile', \"Copy\"));\nconst PASTE_FILE_LABEL = ( nls.localize('pasteFile', \"Paste\"));\nconst FileCopiedContext = ( new RawContextKey('fileCopied', false));\nconst DOWNLOAD_COMMAND_ID = 'explorer.download';\nconst DOWNLOAD_LABEL = ( nls.localize('download', \"Download...\"));\nconst UPLOAD_COMMAND_ID = 'explorer.upload';\nconst UPLOAD_LABEL = ( nls.localize('upload', \"Upload...\"));\nconst CONFIRM_DELETE_SETTING_KEY = 'explorer.confirmDelete';\nconst MAX_UNDO_FILE_SIZE = 5000000;\nfunction onError(notificationService, error) {\n    if (error.message === 'string') {\n        error = error.message;\n    }\n    notificationService.error(toErrorMessage(error, false));\n}\nasync function refreshIfSeparator(value, explorerService) {\n    if (value && ((value.indexOf('/') >= 0) || (value.indexOf('\\\\') >= 0))) {\n        await explorerService.refresh();\n    }\n}\nasync function deleteFiles(explorerService, workingCopyFileService, dialogService, configurationService, elements, useTrash, skipConfirm = false, ignoreIfNotExists = false) {\n    let primaryButton;\n    if (useTrash) {\n        primaryButton = isWindows ? ( nls.localize('deleteButtonLabelRecycleBin', \"&&Move to Recycle Bin\")) : ( nls.localize(\n            { key: 'deleteButtonLabelTrash', comment: ['&& denotes a mnemonic'] },\n            \"&&Move to Trash\"\n        ));\n    }\n    else {\n        primaryButton = ( nls.localize(\n            { key: 'deleteButtonLabel', comment: ['&& denotes a mnemonic'] },\n            \"&&Delete\"\n        ));\n    }\n    const distinctElements = resources.distinctParents(elements, e => e.resource);\n    const dirtyWorkingCopies = ( new Set());\n    for (const distinctElement of distinctElements) {\n        for (const dirtyWorkingCopy of workingCopyFileService.getDirty(distinctElement.resource)) {\n            dirtyWorkingCopies.add(dirtyWorkingCopy);\n        }\n    }\n    let confirmed = true;\n    if (dirtyWorkingCopies.size) {\n        let message;\n        if (distinctElements.length > 1) {\n            message = ( nls.localize(\n                'dirtyMessageFilesDelete',\n                \"You are deleting files with unsaved changes. Do you want to continue?\"\n            ));\n        }\n        else if (distinctElements[0].isDirectory) {\n            if (dirtyWorkingCopies.size === 1) {\n                message = ( nls.localize(\n                    'dirtyMessageFolderOneDelete',\n                    \"You are deleting a folder {0} with unsaved changes in 1 file. Do you want to continue?\",\n                    distinctElements[0].name\n                ));\n            }\n            else {\n                message = ( nls.localize(\n                    'dirtyMessageFolderDelete',\n                    \"You are deleting a folder {0} with unsaved changes in {1} files. Do you want to continue?\",\n                    distinctElements[0].name,\n                    dirtyWorkingCopies.size\n                ));\n            }\n        }\n        else {\n            message = ( nls.localize(\n                'dirtyMessageFileDelete',\n                \"You are deleting {0} with unsaved changes. Do you want to continue?\",\n                distinctElements[0].name\n            ));\n        }\n        const response = await dialogService.confirm({\n            type: 'warning',\n            message,\n            detail: ( nls.localize('dirtyWarning', \"Your changes will be lost if you don't save them.\")),\n            primaryButton\n        });\n        if (!response.confirmed) {\n            confirmed = false;\n        }\n        else {\n            skipConfirm = true;\n        }\n    }\n    if (!confirmed) {\n        return;\n    }\n    let confirmation;\n    const deleteDetail = ( distinctElements.some(e => e.isDirectory)) ? ( nls.localize('irreversible', \"This action is irreversible!\")) :\n        distinctElements.length > 1 ? ( nls.localize('restorePlural', \"You can restore these files using the Undo command\")) : ( nls.localize('restore', \"You can restore this file using the Undo command\"));\n    if (skipConfirm || (useTrash && configurationService.getValue(CONFIRM_DELETE_SETTING_KEY) === false)) {\n        confirmation = { confirmed: true };\n    }\n    else if (useTrash) {\n        let { message, detail } = getMoveToTrashMessage(distinctElements);\n        detail += detail ? '\\n' : '';\n        if (isWindows) {\n            detail += distinctElements.length > 1 ? ( nls.localize('undoBinFiles', \"You can restore these files from the Recycle Bin.\")) : ( nls.localize('undoBin', \"You can restore this file from the Recycle Bin.\"));\n        }\n        else {\n            detail += distinctElements.length > 1 ? ( nls.localize('undoTrashFiles', \"You can restore these files from the Trash.\")) : ( nls.localize('undoTrash', \"You can restore this file from the Trash.\"));\n        }\n        confirmation = await dialogService.confirm({\n            message,\n            detail,\n            primaryButton,\n            checkbox: {\n                label: ( nls.localize('doNotAskAgain', \"Do not ask me again\"))\n            }\n        });\n    }\n    else {\n        let { message, detail } = getDeleteMessage(distinctElements);\n        detail += detail ? '\\n' : '';\n        detail += deleteDetail;\n        confirmation = await dialogService.confirm({\n            type: 'warning',\n            message,\n            detail,\n            primaryButton\n        });\n    }\n    if (confirmation.confirmed && confirmation.checkboxChecked === true) {\n        await configurationService.updateValue(CONFIRM_DELETE_SETTING_KEY, false);\n    }\n    if (!confirmation.confirmed) {\n        return;\n    }\n    try {\n        const resourceFileEdits = ( distinctElements.map(e => ( new ResourceFileEdit(\n            e.resource,\n            undefined,\n            { recursive: true, folder: e.isDirectory, ignoreIfNotExists, skipTrashBin: !useTrash, maxSize: MAX_UNDO_FILE_SIZE }\n        ))));\n        const options = {\n            undoLabel: distinctElements.length > 1 ? ( nls.localize(\n                { key: 'deleteBulkEdit', comment: ['Placeholder will be replaced by the number of files deleted'] },\n                \"Delete {0} files\",\n                distinctElements.length\n            )) : ( nls.localize(\n                { key: 'deleteFileBulkEdit', comment: ['Placeholder will be replaced by the name of the file deleted'] },\n                \"Delete {0}\",\n                distinctElements[0].name\n            )),\n            progressLabel: distinctElements.length > 1 ? ( nls.localize(\n                { key: 'deletingBulkEdit', comment: ['Placeholder will be replaced by the number of files deleted'] },\n                \"Deleting {0} files\",\n                distinctElements.length\n            )) : ( nls.localize(\n                { key: 'deletingFileBulkEdit', comment: ['Placeholder will be replaced by the name of the file deleted'] },\n                \"Deleting {0}\",\n                distinctElements[0].name\n            )),\n        };\n        await explorerService.applyBulkEdit(resourceFileEdits, options);\n    }\n    catch (error) {\n        let errorMessage;\n        let detailMessage;\n        let primaryButton;\n        if (useTrash) {\n            errorMessage = isWindows ? ( nls.localize(\n                'binFailed',\n                \"Failed to delete using the Recycle Bin. Do you want to permanently delete instead?\"\n            )) : ( nls.localize(\n                'trashFailed',\n                \"Failed to delete using the Trash. Do you want to permanently delete instead?\"\n            ));\n            detailMessage = deleteDetail;\n            primaryButton = ( nls.localize(\n                { key: 'deletePermanentlyButtonLabel', comment: ['&& denotes a mnemonic'] },\n                \"&&Delete Permanently\"\n            ));\n        }\n        else {\n            errorMessage = toErrorMessage(error, false);\n            primaryButton = ( nls.localize({ key: 'retryButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Retry\"));\n        }\n        const res = await dialogService.confirm({\n            type: 'warning',\n            message: errorMessage,\n            detail: detailMessage,\n            primaryButton\n        });\n        if (res.confirmed) {\n            if (useTrash) {\n                useTrash = false;\n            }\n            skipConfirm = true;\n            ignoreIfNotExists = true;\n            return deleteFiles(explorerService, workingCopyFileService, dialogService, configurationService, elements, useTrash, skipConfirm, ignoreIfNotExists);\n        }\n    }\n}\nfunction getMoveToTrashMessage(distinctElements) {\n    if (containsBothDirectoryAndFile(distinctElements)) {\n        return {\n            message: ( nls.localize(\n                'confirmMoveTrashMessageFilesAndDirectories',\n                \"Are you sure you want to delete the following {0} files/directories and their contents?\",\n                distinctElements.length\n            )),\n            detail: getFileNamesMessage(( distinctElements.map(e => e.resource)))\n        };\n    }\n    if (distinctElements.length > 1) {\n        if (distinctElements[0].isDirectory) {\n            return {\n                message: ( nls.localize(\n                    'confirmMoveTrashMessageMultipleDirectories',\n                    \"Are you sure you want to delete the following {0} directories and their contents?\",\n                    distinctElements.length\n                )),\n                detail: getFileNamesMessage(( distinctElements.map(e => e.resource)))\n            };\n        }\n        return {\n            message: ( nls.localize(\n                'confirmMoveTrashMessageMultiple',\n                \"Are you sure you want to delete the following {0} files?\",\n                distinctElements.length\n            )),\n            detail: getFileNamesMessage(( distinctElements.map(e => e.resource)))\n        };\n    }\n    if (distinctElements[0].isDirectory && !distinctElements[0].isSymbolicLink) {\n        return { message: ( nls.localize(\n            'confirmMoveTrashMessageFolder',\n            \"Are you sure you want to delete '{0}' and its contents?\",\n            distinctElements[0].name\n        )), detail: '' };\n    }\n    return { message: ( nls.localize(\n        'confirmMoveTrashMessageFile',\n        \"Are you sure you want to delete '{0}'?\",\n        distinctElements[0].name\n    )), detail: '' };\n}\nfunction getDeleteMessage(distinctElements) {\n    if (containsBothDirectoryAndFile(distinctElements)) {\n        return {\n            message: ( nls.localize(\n                'confirmDeleteMessageFilesAndDirectories',\n                \"Are you sure you want to permanently delete the following {0} files/directories and their contents?\",\n                distinctElements.length\n            )),\n            detail: getFileNamesMessage(( distinctElements.map(e => e.resource)))\n        };\n    }\n    if (distinctElements.length > 1) {\n        if (distinctElements[0].isDirectory) {\n            return {\n                message: ( nls.localize(\n                    'confirmDeleteMessageMultipleDirectories',\n                    \"Are you sure you want to permanently delete the following {0} directories and their contents?\",\n                    distinctElements.length\n                )),\n                detail: getFileNamesMessage(( distinctElements.map(e => e.resource)))\n            };\n        }\n        return {\n            message: ( nls.localize(\n                'confirmDeleteMessageMultiple',\n                \"Are you sure you want to permanently delete the following {0} files?\",\n                distinctElements.length\n            )),\n            detail: getFileNamesMessage(( distinctElements.map(e => e.resource)))\n        };\n    }\n    if (distinctElements[0].isDirectory) {\n        return { message: ( nls.localize(\n            'confirmDeleteMessageFolder',\n            \"Are you sure you want to permanently delete '{0}' and its contents?\",\n            distinctElements[0].name\n        )), detail: '' };\n    }\n    return { message: ( nls.localize(\n        'confirmDeleteMessageFile',\n        \"Are you sure you want to permanently delete '{0}'?\",\n        distinctElements[0].name\n    )), detail: '' };\n}\nfunction containsBothDirectoryAndFile(distinctElements) {\n    const directory = distinctElements.find(element => element.isDirectory);\n    const file = distinctElements.find(element => !element.isDirectory);\n    return !!directory && !!file;\n}\nasync function findValidPasteFileTarget(explorerService, fileService, dialogService, targetFolder, fileToPaste, incrementalNaming) {\n    let name = resources.basenameOrAuthority(fileToPaste.resource);\n    let candidate = resources.joinPath(targetFolder.resource, name);\n    if (incrementalNaming === 'disabled') {\n        const canOverwrite = await askForOverwrite(fileService, dialogService, candidate);\n        if (!canOverwrite) {\n            return;\n        }\n    }\n    while (!fileToPaste.allowOverwrite) {\n        if (!explorerService.findClosest(candidate)) {\n            break;\n        }\n        if (incrementalNaming !== 'disabled') {\n            name = incrementFileName(name, !!fileToPaste.isDirectory, incrementalNaming);\n        }\n        candidate = resources.joinPath(targetFolder.resource, name);\n    }\n    return candidate;\n}\nfunction incrementFileName(name, isFolder, incrementalNaming) {\n    if (incrementalNaming === 'simple') {\n        let namePrefix = name;\n        let extSuffix = '';\n        if (!isFolder) {\n            extSuffix = extname(name);\n            namePrefix = basename(name, extSuffix);\n        }\n        const suffixRegex = /^(.+ copy)( \\d+)?$/;\n        if (suffixRegex.test(namePrefix)) {\n            return namePrefix.replace(suffixRegex, (match, g1, g2) => {\n                const number = (g2 ? parseInt(g2) : 1);\n                return number === 0\n                    ? `${g1}`\n                    : (number < 1073741824\n                        ? `${g1} ${number + 1}`\n                        : `${g1}${g2} copy`);\n            }) + extSuffix;\n        }\n        return `${namePrefix} copy${extSuffix}`;\n    }\n    const separators = '[\\\\.\\\\-_]';\n    const maxNumber = 1073741824 ;\n    const suffixFileRegex = RegExp('(.*' + separators + ')(\\\\d+)(\\\\..*)$');\n    if (!isFolder && name.match(suffixFileRegex)) {\n        return name.replace(suffixFileRegex, (match, g1, g2, g3) => {\n            const number = parseInt(g2);\n            return number < maxNumber\n                ? g1 + String(number + 1).padStart(g2.length, '0') + g3\n                : `${g1}${g2}.1${g3}`;\n        });\n    }\n    const prefixFileRegex = RegExp('(\\\\d+)(' + separators + '.*)(\\\\..*)$');\n    if (!isFolder && name.match(prefixFileRegex)) {\n        return name.replace(prefixFileRegex, (match, g1, g2, g3) => {\n            const number = parseInt(g1);\n            return number < maxNumber\n                ? String(number + 1).padStart(g1.length, '0') + g2 + g3\n                : `${g1}${g2}.1${g3}`;\n        });\n    }\n    const prefixFileNoNameRegex = RegExp('(\\\\d+)(\\\\..*)$');\n    if (!isFolder && name.match(prefixFileNoNameRegex)) {\n        return name.replace(prefixFileNoNameRegex, (match, g1, g2) => {\n            const number = parseInt(g1);\n            return number < maxNumber\n                ? String(number + 1).padStart(g1.length, '0') + g2\n                : `${g1}.1${g2}`;\n        });\n    }\n    const lastIndexOfDot = name.lastIndexOf('.');\n    if (!isFolder && lastIndexOfDot >= 0) {\n        return `${name.substr(0, lastIndexOfDot)}.1${name.substr(lastIndexOfDot)}`;\n    }\n    const noNameNoExtensionRegex = RegExp('(\\\\d+)$');\n    if (!isFolder && lastIndexOfDot === -1 && name.match(noNameNoExtensionRegex)) {\n        return name.replace(noNameNoExtensionRegex, (match, g1) => {\n            const number = parseInt(g1);\n            return number < maxNumber\n                ? String(number + 1).padStart(g1.length, '0')\n                : `${g1}.1`;\n        });\n    }\n    const noExtensionRegex = RegExp('(.*)(\\\\d*)$');\n    if (!isFolder && lastIndexOfDot === -1 && name.match(noExtensionRegex)) {\n        return name.replace(noExtensionRegex, (match, g1, g2) => {\n            let number = parseInt(g2);\n            if (isNaN(number)) {\n                number = 0;\n            }\n            return number < maxNumber\n                ? g1 + String(number + 1).padStart(g2.length, '0')\n                : `${g1}${g2}.1`;\n        });\n    }\n    if (isFolder && name.match(/(\\d+)$/)) {\n        return name.replace(/(\\d+)$/, (match, ...groups) => {\n            const number = parseInt(groups[0]);\n            return number < maxNumber\n                ? String(number + 1).padStart(groups[0].length, '0')\n                : `${groups[0]}.1`;\n        });\n    }\n    if (isFolder && name.match(/^(\\d+)/)) {\n        return name.replace(/^(\\d+)(.*)$/, (match, ...groups) => {\n            const number = parseInt(groups[0]);\n            return number < maxNumber\n                ? String(number + 1).padStart(groups[0].length, '0') + groups[1]\n                : `${groups[0]}${groups[1]}.1`;\n        });\n    }\n    return `${name}.1`;\n}\nasync function askForOverwrite(fileService, dialogService, targetResource) {\n    const exists = await fileService.exists(targetResource);\n    if (!exists) {\n        return true;\n    }\n    const { confirmed } = await dialogService.confirm({\n        type: Severity.Warning,\n        message: ( nls.localize(\n            'confirmOverwrite',\n            \"A file or folder with the name '{0}' already exists in the destination folder. Do you want to replace it?\",\n            basename(targetResource.path)\n        )),\n        primaryButton: ( nls.localize('replaceButtonLabel', \"&&Replace\"))\n    });\n    return confirmed;\n}\nclass GlobalCompareResourcesAction extends Action2 {\n    static { this.ID = 'workbench.files.action.compareFileWith'; }\n    static { this.LABEL = ( nls.localize('globalCompareFile', \"Compare Active File With...\")); }\n    constructor() {\n        super({\n            id: GlobalCompareResourcesAction.ID,\n            title: { value: GlobalCompareResourcesAction.LABEL, original: 'Compare Active File With...' },\n            f1: true,\n            category: Categories.File,\n            precondition: ActiveEditorContext\n        });\n    }\n    async run(accessor) {\n        const editorService = accessor.get(IEditorService);\n        const textModelService = accessor.get(ITextModelService);\n        const quickInputService = accessor.get(IQuickInputService);\n        const activeInput = editorService.activeEditor;\n        const activeResource = EditorResourceAccessor.getOriginalUri(activeInput);\n        if (activeResource && textModelService.canHandleResource(activeResource)) {\n            const picks = await quickInputService.quickAccess.pick('', { itemActivation: ItemActivation.SECOND });\n            if (picks?.length === 1) {\n                const resource = picks[0].resource;\n                if (URI.isUri(resource) && textModelService.canHandleResource(resource)) {\n                    editorService.openEditor({\n                        original: { resource: activeResource },\n                        modified: { resource: resource },\n                        options: { pinned: true }\n                    });\n                }\n            }\n        }\n    }\n}\nclass ToggleAutoSaveAction extends Action2 {\n    static { this.ID = 'workbench.action.toggleAutoSave'; }\n    static { this.LABEL = ( nls.localize('toggleAutoSave', \"Toggle Auto Save\")); }\n    constructor() {\n        super({\n            id: ToggleAutoSaveAction.ID,\n            title: { value: ToggleAutoSaveAction.LABEL, original: 'Toggle Auto Save' },\n            f1: true,\n            category: Categories.File\n        });\n    }\n    run(accessor) {\n        const filesConfigurationService = accessor.get(IFilesConfigurationService);\n        return filesConfigurationService.toggleAutoSave();\n    }\n}\nlet BaseSaveAllAction = class BaseSaveAllAction extends Action {\n    constructor(id, label, commandService, notificationService, workingCopyService) {\n        super(id, label);\n        this.commandService = commandService;\n        this.notificationService = notificationService;\n        this.workingCopyService = workingCopyService;\n        this.lastDirtyState = this.workingCopyService.hasDirty;\n        this.enabled = this.lastDirtyState;\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.workingCopyService.onDidChangeDirty(workingCopy => this.updateEnablement(workingCopy)));\n    }\n    updateEnablement(workingCopy) {\n        const hasDirty = workingCopy.isDirty() || this.workingCopyService.hasDirty;\n        if (this.lastDirtyState !== hasDirty) {\n            this.enabled = hasDirty;\n            this.lastDirtyState = this.enabled;\n        }\n    }\n    async run(context) {\n        try {\n            await this.doRun(context);\n        }\n        catch (error) {\n            onError(this.notificationService, error);\n        }\n    }\n};\nBaseSaveAllAction = ( __decorate([\n    ( __param(2, ICommandService)),\n    ( __param(3, INotificationService)),\n    ( __param(4, IWorkingCopyService))\n], BaseSaveAllAction));\nclass SaveAllInGroupAction extends BaseSaveAllAction {\n    static { this.ID = 'workbench.files.action.saveAllInGroup'; }\n    static { this.LABEL = ( nls.localize('saveAllInGroup', \"Save All in Group\")); }\n    get class() {\n        return 'explorer-action ' + ThemeIcon.asClassName(Codicon.saveAll);\n    }\n    doRun(context) {\n        return this.commandService.executeCommand(SAVE_ALL_IN_GROUP_COMMAND_ID, {}, context);\n    }\n}\nlet CloseGroupAction = class CloseGroupAction extends Action {\n    static { this.ID = 'workbench.files.action.closeGroup'; }\n    static { this.LABEL = ( nls.localize('closeGroup', \"Close Group\")); }\n    constructor(id, label, commandService) {\n        super(id, label, ThemeIcon.asClassName(Codicon.closeAll));\n        this.commandService = commandService;\n    }\n    run(context) {\n        return this.commandService.executeCommand(CLOSE_EDITORS_AND_GROUP_COMMAND_ID, {}, context);\n    }\n};\nCloseGroupAction = ( __decorate([\n    ( __param(2, ICommandService))\n], CloseGroupAction));\nclass FocusFilesExplorer extends Action2 {\n    static { this.ID = 'workbench.files.action.focusFilesExplorer'; }\n    static { this.LABEL = ( nls.localize('focusFilesExplorer', \"Focus on Files Explorer\")); }\n    constructor() {\n        super({\n            id: FocusFilesExplorer.ID,\n            title: { value: FocusFilesExplorer.LABEL, original: 'Focus on Files Explorer' },\n            f1: true,\n            category: Categories.File\n        });\n    }\n    async run(accessor) {\n        const paneCompositeService = accessor.get(IPaneCompositePartService);\n        await paneCompositeService.openPaneComposite(VIEWLET_ID, 0 , true);\n    }\n}\nclass ShowActiveFileInExplorer extends Action2 {\n    static { this.ID = 'workbench.files.action.showActiveFileInExplorer'; }\n    static { this.LABEL = ( nls.localize('showInExplorer', \"Reveal Active File in Explorer View\")); }\n    constructor() {\n        super({\n            id: ShowActiveFileInExplorer.ID,\n            title: { value: ShowActiveFileInExplorer.LABEL, original: 'Reveal Active File in Explorer View' },\n            f1: true,\n            category: Categories.File\n        });\n    }\n    async run(accessor) {\n        const commandService = accessor.get(ICommandService);\n        const editorService = accessor.get(IEditorService);\n        const resource = EditorResourceAccessor.getOriginalUri(editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n        if (resource) {\n            commandService.executeCommand(REVEAL_IN_EXPLORER_COMMAND_ID, resource);\n        }\n    }\n}\nclass ShowOpenedFileInNewWindow extends Action2 {\n    static { this.ID = 'workbench.action.files.showOpenedFileInNewWindow'; }\n    static { this.LABEL = ( nls.localize('openFileInNewWindow', \"Open Active File in New Window\")); }\n    constructor() {\n        super({\n            id: ShowOpenedFileInNewWindow.ID,\n            title: { value: ShowOpenedFileInNewWindow.LABEL, original: 'Open Active File in New Window' },\n            f1: true,\n            category: Categories.File,\n            keybinding: { primary: KeyChord(2048  | 41 , 45 ), weight: 200  },\n            precondition: EmptyWorkspaceSupportContext\n        });\n    }\n    async run(accessor) {\n        const editorService = accessor.get(IEditorService);\n        const hostService = accessor.get(IHostService);\n        const dialogService = accessor.get(IDialogService);\n        const fileService = accessor.get(IFileService);\n        const fileResource = EditorResourceAccessor.getOriginalUri(editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n        if (fileResource) {\n            if (fileService.hasProvider(fileResource)) {\n                hostService.openWindow([{ fileUri: fileResource }], { forceNewWindow: true });\n            }\n            else {\n                dialogService.error(( nls.localize(\n                    'openFileToShowInNewWindow.unsupportedschema',\n                    \"The active editor must contain an openable resource.\"\n                )));\n            }\n        }\n    }\n}\nfunction validateFileName(pathService, item, name, os) {\n    name = getWellFormedFileName(name);\n    if (!name || name.length === 0 || /^\\s+$/.test(name)) {\n        return {\n            content: ( nls.localize('emptyFileNameError', \"A file or folder name must be provided.\")),\n            severity: Severity.Error\n        };\n    }\n    if (name[0] === '/' || name[0] === '\\\\') {\n        return {\n            content: ( nls.localize(\n                'fileNameStartsWithSlashError',\n                \"A file or folder name cannot start with a slash.\"\n            )),\n            severity: Severity.Error\n        };\n    }\n    const names = coalesce(name.split(/[\\\\/]/));\n    const parent = item.parent;\n    if (name !== item.name) {\n        const child = parent?.getChild(name);\n        if (child && child !== item) {\n            return {\n                content: ( nls.localize(\n                    'fileNameExistsError',\n                    \"A file or folder **{0}** already exists at this location. Please choose a different name.\",\n                    name\n                )),\n                severity: Severity.Error\n            };\n        }\n    }\n    if (( names.some(folderName => !pathService.hasValidBasename(item.resource, os, folderName)))) {\n        const escapedName = name.replace(/\\*/g, '\\\\*');\n        return {\n            content: ( nls.localize(\n                'invalidFileNameError',\n                \"The name **{0}** is not valid as a file or folder name. Please choose a different name.\",\n                trimLongName(escapedName)\n            )),\n            severity: Severity.Error\n        };\n    }\n    if (( names.some(name => /^\\s|\\s$/.test(name)))) {\n        return {\n            content: ( nls.localize(\n                'fileNameWhitespaceWarning',\n                \"Leading or trailing whitespace detected in file or folder name.\"\n            )),\n            severity: Severity.Warning\n        };\n    }\n    return null;\n}\nfunction trimLongName(name) {\n    if (name?.length > 255) {\n        return `${name.substr(0, 255)}...`;\n    }\n    return name;\n}\nfunction getWellFormedFileName(filename) {\n    if (!filename) {\n        return filename;\n    }\n    filename = trim(filename, '\\t');\n    filename = rtrim(filename, '/');\n    filename = rtrim(filename, '\\\\');\n    return filename;\n}\nclass CompareNewUntitledTextFilesAction extends Action2 {\n    static { this.ID = 'workbench.files.action.compareNewUntitledTextFiles'; }\n    static { this.LABEL = ( nls.localize('compareNewUntitledTextFiles', \"Compare New Untitled Text Files\")); }\n    constructor() {\n        super({\n            id: CompareNewUntitledTextFilesAction.ID,\n            title: { value: CompareNewUntitledTextFilesAction.LABEL, original: 'Compare New Untitled Text Files' },\n            f1: true,\n            category: Categories.File\n        });\n    }\n    async run(accessor) {\n        const editorService = accessor.get(IEditorService);\n        await editorService.openEditor({\n            original: { resource: undefined },\n            modified: { resource: undefined },\n            options: { pinned: true }\n        });\n    }\n}\nclass CompareWithClipboardAction extends Action2 {\n    static { this.ID = 'workbench.files.action.compareWithClipboard'; }\n    static { this.LABEL = ( nls.localize('compareWithClipboard', \"Compare Active File with Clipboard\")); }\n    static { this.SCHEME_COUNTER = 0; }\n    constructor() {\n        super({\n            id: CompareWithClipboardAction.ID,\n            title: { value: CompareWithClipboardAction.LABEL, original: 'Compare Active File with Clipboard' },\n            f1: true,\n            category: Categories.File,\n            keybinding: { primary: KeyChord(2048  | 41 , 33 ), weight: 200  }\n        });\n    }\n    async run(accessor) {\n        const editorService = accessor.get(IEditorService);\n        const instantiationService = accessor.get(IInstantiationService);\n        const textModelService = accessor.get(ITextModelService);\n        const fileService = accessor.get(IFileService);\n        const resource = EditorResourceAccessor.getOriginalUri(editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n        const scheme = `clipboardCompare${CompareWithClipboardAction.SCHEME_COUNTER++}`;\n        if (resource && (fileService.hasProvider(resource) || resource.scheme === Schemas.untitled)) {\n            if (!this.registrationDisposal) {\n                const provider = instantiationService.createInstance(ClipboardContentProvider);\n                this.registrationDisposal = textModelService.registerTextModelContentProvider(scheme, provider);\n            }\n            const name = resources.basename(resource);\n            const editorLabel = ( nls.localize('clipboardComparisonLabel', \"Clipboard ↔ {0}\", name));\n            await editorService.openEditor({\n                original: { resource: resource.with({ scheme }) },\n                modified: { resource: resource },\n                label: editorLabel,\n                options: { pinned: true }\n            }).finally(() => {\n                dispose(this.registrationDisposal);\n                this.registrationDisposal = undefined;\n            });\n        }\n    }\n    dispose() {\n        dispose(this.registrationDisposal);\n        this.registrationDisposal = undefined;\n    }\n}\nlet ClipboardContentProvider = class ClipboardContentProvider {\n    constructor(clipboardService, languageService, modelService) {\n        this.clipboardService = clipboardService;\n        this.languageService = languageService;\n        this.modelService = modelService;\n    }\n    async provideTextContent(resource) {\n        const text = await this.clipboardService.readText();\n        const model = this.modelService.createModel(text, this.languageService.createByFilepathOrFirstLine(resource), resource);\n        return model;\n    }\n};\nClipboardContentProvider = ( __decorate([\n    ( __param(0, IClipboardService)),\n    ( __param(1, ILanguageService)),\n    ( __param(2, IModelService))\n], ClipboardContentProvider));\nfunction onErrorWithRetry(notificationService, error, retry) {\n    notificationService.prompt(Severity.Error, toErrorMessage(error, false), [{\n            label: ( nls.localize('retry', \"Retry\")),\n            run: () => retry()\n        }]);\n}\nasync function openExplorerAndCreate(accessor, isFolder) {\n    const explorerService = accessor.get(IExplorerService);\n    const fileService = accessor.get(IFileService);\n    const configService = accessor.get(IConfigurationService);\n    const filesConfigService = accessor.get(IFilesConfigurationService);\n    const editorService = accessor.get(IEditorService);\n    const viewsService = accessor.get(IViewsService);\n    const notificationService = accessor.get(INotificationService);\n    const remoteAgentService = accessor.get(IRemoteAgentService);\n    const commandService = accessor.get(ICommandService);\n    const pathService = accessor.get(IPathService);\n    const wasHidden = !viewsService.isViewVisible(VIEW_ID);\n    const view = await viewsService.openView(VIEW_ID, true);\n    if (wasHidden) {\n        await timeout(500);\n    }\n    if (!view) {\n        if (isFolder) {\n            throw new Error('Open a folder or workspace first.');\n        }\n        return commandService.executeCommand(NEW_UNTITLED_FILE_COMMAND_ID);\n    }\n    const stats = explorerService.getContext(false);\n    const stat = stats.length > 0 ? stats[0] : undefined;\n    let folder;\n    if (stat) {\n        folder = stat.isDirectory ? stat : (stat.parent || explorerService.roots[0]);\n    }\n    else {\n        folder = explorerService.roots[0];\n    }\n    if (folder.isReadonly) {\n        throw new Error('Parent folder is readonly.');\n    }\n    const newStat = ( new NewExplorerItem(fileService, configService, filesConfigService, folder, isFolder));\n    folder.addChild(newStat);\n    const onSuccess = async (value) => {\n        try {\n            const resourceToCreate = resources.joinPath(folder.resource, value);\n            if (value.endsWith('/')) {\n                isFolder = true;\n            }\n            await explorerService.applyBulkEdit([( new ResourceFileEdit(undefined, resourceToCreate, { folder: isFolder }))], {\n                undoLabel: ( nls.localize('createBulkEdit', \"Create {0}\", value)),\n                progressLabel: ( nls.localize('creatingBulkEdit', \"Creating {0}\", value)),\n                confirmBeforeUndo: true\n            });\n            await refreshIfSeparator(value, explorerService);\n            if (isFolder) {\n                await explorerService.select(resourceToCreate, true);\n            }\n            else {\n                await editorService.openEditor({ resource: resourceToCreate, options: { pinned: true } });\n            }\n        }\n        catch (error) {\n            onErrorWithRetry(notificationService, error, () => onSuccess(value));\n        }\n    };\n    const os = (await remoteAgentService.getEnvironment())?.os ?? OS;\n    await explorerService.setEditable(newStat, {\n        validationMessage: value => validateFileName(pathService, newStat, value, os),\n        onFinish: async (value, success) => {\n            folder.removeChild(newStat);\n            await explorerService.setEditable(newStat, null);\n            if (success) {\n                onSuccess(value);\n            }\n        }\n    });\n}\nCommandsRegistry.registerCommand({\n    id: NEW_FILE_COMMAND_ID,\n    handler: async (accessor) => {\n        await openExplorerAndCreate(accessor, false);\n    }\n});\nCommandsRegistry.registerCommand({\n    id: NEW_FOLDER_COMMAND_ID,\n    handler: async (accessor) => {\n        await openExplorerAndCreate(accessor, true);\n    }\n});\nconst renameHandler = async (accessor) => {\n    const explorerService = accessor.get(IExplorerService);\n    const notificationService = accessor.get(INotificationService);\n    const remoteAgentService = accessor.get(IRemoteAgentService);\n    const pathService = accessor.get(IPathService);\n    const configurationService = accessor.get(IConfigurationService);\n    const stats = explorerService.getContext(false);\n    const stat = stats.length > 0 ? stats[0] : undefined;\n    if (!stat) {\n        return;\n    }\n    const os = (await remoteAgentService.getEnvironment())?.os ?? OS;\n    await explorerService.setEditable(stat, {\n        validationMessage: value => validateFileName(pathService, stat, value, os),\n        onFinish: async (value, success) => {\n            if (success) {\n                const parentResource = stat.parent.resource;\n                const targetResource = resources.joinPath(parentResource, value);\n                if (( stat.resource.toString()) !== ( targetResource.toString())) {\n                    try {\n                        await explorerService.applyBulkEdit([( new ResourceFileEdit(stat.resource, targetResource))], {\n                            confirmBeforeUndo: configurationService.getValue().explorer.confirmUndo === \"verbose\" ,\n                            undoLabel: ( nls.localize('renameBulkEdit', \"Rename {0} to {1}\", stat.name, value)),\n                            progressLabel: ( nls.localize('renamingBulkEdit', \"Renaming {0} to {1}\", stat.name, value)),\n                        });\n                        await refreshIfSeparator(value, explorerService);\n                    }\n                    catch (e) {\n                        notificationService.error(e);\n                    }\n                }\n            }\n            await explorerService.setEditable(stat, null);\n        }\n    });\n};\nconst moveFileToTrashHandler = async (accessor) => {\n    const explorerService = accessor.get(IExplorerService);\n    const stats = explorerService.getContext(true).filter(s => !s.isRoot);\n    if (stats.length) {\n        await deleteFiles(accessor.get(IExplorerService), accessor.get(IWorkingCopyFileService), accessor.get(IDialogService), accessor.get(IConfigurationService), stats, true);\n    }\n};\nconst deleteFileHandler = async (accessor) => {\n    const explorerService = accessor.get(IExplorerService);\n    const stats = explorerService.getContext(true).filter(s => !s.isRoot);\n    if (stats.length) {\n        await deleteFiles(accessor.get(IExplorerService), accessor.get(IWorkingCopyFileService), accessor.get(IDialogService), accessor.get(IConfigurationService), stats, false);\n    }\n};\nlet pasteShouldMove = false;\nconst copyFileHandler = async (accessor) => {\n    const explorerService = accessor.get(IExplorerService);\n    const stats = explorerService.getContext(true);\n    if (stats.length > 0) {\n        await explorerService.setToCopy(stats, false);\n        pasteShouldMove = false;\n    }\n};\nconst cutFileHandler = async (accessor) => {\n    const explorerService = accessor.get(IExplorerService);\n    const stats = explorerService.getContext(true);\n    if (stats.length > 0) {\n        await explorerService.setToCopy(stats, true);\n        pasteShouldMove = true;\n    }\n};\nconst downloadFileHandler = async (accessor) => {\n    const explorerService = accessor.get(IExplorerService);\n    const notificationService = accessor.get(INotificationService);\n    const instantiationService = accessor.get(IInstantiationService);\n    const context = explorerService.getContext(true);\n    const explorerItems = context.length ? context : explorerService.roots;\n    const downloadHandler = instantiationService.createInstance(FileDownload);\n    try {\n        await downloadHandler.download(explorerItems);\n    }\n    catch (error) {\n        notificationService.error(error);\n        throw error;\n    }\n};\nCommandsRegistry.registerCommand({\n    id: DOWNLOAD_COMMAND_ID,\n    handler: downloadFileHandler\n});\nconst uploadFileHandler = async (accessor) => {\n    const explorerService = accessor.get(IExplorerService);\n    const notificationService = accessor.get(INotificationService);\n    const instantiationService = accessor.get(IInstantiationService);\n    const context = explorerService.getContext(true);\n    const element = context.length ? context[0] : explorerService.roots[0];\n    try {\n        const files = await triggerUpload();\n        if (files) {\n            const browserUpload = instantiationService.createInstance(BrowserFileUpload);\n            await browserUpload.upload(element, files);\n        }\n    }\n    catch (error) {\n        notificationService.error(error);\n        throw error;\n    }\n};\nCommandsRegistry.registerCommand({\n    id: UPLOAD_COMMAND_ID,\n    handler: uploadFileHandler\n});\nconst pasteFileHandler = async (accessor) => {\n    const clipboardService = accessor.get(IClipboardService);\n    const explorerService = accessor.get(IExplorerService);\n    const fileService = accessor.get(IFileService);\n    const notificationService = accessor.get(INotificationService);\n    const editorService = accessor.get(IEditorService);\n    const configurationService = accessor.get(IConfigurationService);\n    const uriIdentityService = accessor.get(IUriIdentityService);\n    const dialogService = accessor.get(IDialogService);\n    const context = explorerService.getContext(true);\n    const toPaste = resources.distinctParents(await clipboardService.readResources(), r => r);\n    const element = context.length ? context[0] : explorerService.roots[0];\n    const incrementalNaming = configurationService.getValue().explorer.incrementalNaming;\n    try {\n        const sourceTargetPairs = coalesce(await Promise.all(( toPaste.map(async (fileToPaste) => {\n            if (( element.resource.toString()) !== ( fileToPaste.toString()) && resources.isEqualOrParent(element.resource, fileToPaste)) {\n                throw new Error(nls.localize('fileIsAncestor', \"File to paste is an ancestor of the destination folder\"));\n            }\n            const fileToPasteStat = await fileService.stat(fileToPaste);\n            let target;\n            if (uriIdentityService.extUri.isEqual(element.resource, fileToPaste)) {\n                target = element.parent;\n            }\n            else {\n                target = element.isDirectory ? element : element.parent;\n            }\n            const targetFile = await findValidPasteFileTarget(explorerService, fileService, dialogService, target, { resource: fileToPaste, isDirectory: fileToPasteStat.isDirectory, allowOverwrite: pasteShouldMove || incrementalNaming === 'disabled' }, incrementalNaming);\n            if (!targetFile) {\n                return undefined;\n            }\n            return { source: fileToPaste, target: targetFile };\n        }))));\n        if (sourceTargetPairs.length >= 1) {\n            if (pasteShouldMove) {\n                const resourceFileEdits = ( sourceTargetPairs.map(pair => ( new ResourceFileEdit(pair.source, pair.target, { overwrite: incrementalNaming === 'disabled' }))));\n                const options = {\n                    confirmBeforeUndo: configurationService.getValue().explorer.confirmUndo === \"verbose\" ,\n                    progressLabel: sourceTargetPairs.length > 1 ? ( nls.localize(\n                        { key: 'movingBulkEdit', comment: ['Placeholder will be replaced by the number of files being moved'] },\n                        \"Moving {0} files\",\n                        sourceTargetPairs.length\n                    ))\n                        : ( nls.localize(\n                        { key: 'movingFileBulkEdit', comment: ['Placeholder will be replaced by the name of the file moved.'] },\n                        \"Moving {0}\",\n                        resources.basenameOrAuthority(sourceTargetPairs[0].target)\n                    )),\n                    undoLabel: sourceTargetPairs.length > 1 ? ( nls.localize(\n                        { key: 'moveBulkEdit', comment: ['Placeholder will be replaced by the number of files being moved'] },\n                        \"Move {0} files\",\n                        sourceTargetPairs.length\n                    ))\n                        : ( nls.localize(\n                        { key: 'moveFileBulkEdit', comment: ['Placeholder will be replaced by the name of the file moved.'] },\n                        \"Move {0}\",\n                        resources.basenameOrAuthority(sourceTargetPairs[0].target)\n                    ))\n                };\n                await explorerService.applyBulkEdit(resourceFileEdits, options);\n            }\n            else {\n                const resourceFileEdits = ( sourceTargetPairs.map(pair => ( new ResourceFileEdit(\n                    pair.source,\n                    pair.target,\n                    { copy: true, overwrite: incrementalNaming === 'disabled' }\n                ))));\n                const undoLevel = configurationService.getValue().explorer.confirmUndo;\n                const options = {\n                    confirmBeforeUndo: undoLevel === \"default\"  || undoLevel === \"verbose\" ,\n                    progressLabel: sourceTargetPairs.length > 1 ? ( nls.localize(\n                        { key: 'copyingBulkEdit', comment: ['Placeholder will be replaced by the number of files being copied'] },\n                        \"Copying {0} files\",\n                        sourceTargetPairs.length\n                    ))\n                        : ( nls.localize(\n                        { key: 'copyingFileBulkEdit', comment: ['Placeholder will be replaced by the name of the file copied.'] },\n                        \"Copying {0}\",\n                        resources.basenameOrAuthority(sourceTargetPairs[0].target)\n                    )),\n                    undoLabel: sourceTargetPairs.length > 1 ? ( nls.localize(\n                        { key: 'copyBulkEdit', comment: ['Placeholder will be replaced by the number of files being copied'] },\n                        \"Paste {0} files\",\n                        sourceTargetPairs.length\n                    ))\n                        : ( nls.localize(\n                        { key: 'copyFileBulkEdit', comment: ['Placeholder will be replaced by the name of the file copied.'] },\n                        \"Paste {0}\",\n                        resources.basenameOrAuthority(sourceTargetPairs[0].target)\n                    ))\n                };\n                await explorerService.applyBulkEdit(resourceFileEdits, options);\n            }\n            const pair = sourceTargetPairs[0];\n            await explorerService.select(pair.target);\n            if (sourceTargetPairs.length === 1) {\n                const item = explorerService.findClosest(pair.target);\n                if (item && !item.isDirectory) {\n                    await editorService.openEditor({ resource: item.resource, options: { pinned: true, preserveFocus: true } });\n                }\n            }\n        }\n    }\n    catch (e) {\n        onError(notificationService, ( new Error(( nls.localize(\n            'fileDeleted',\n            \"The file(s) to paste have been deleted or moved since you copied them. {0}\",\n            getErrorMessage(e)\n        )))));\n    }\n    finally {\n        if (pasteShouldMove) {\n            await explorerService.setToCopy([], false);\n            pasteShouldMove = false;\n        }\n    }\n};\nconst openFilePreserveFocusHandler = async (accessor) => {\n    const editorService = accessor.get(IEditorService);\n    const explorerService = accessor.get(IExplorerService);\n    const stats = explorerService.getContext(true);\n    await editorService.openEditors(( stats.filter(s => !s.isDirectory).map(s => ({\n        resource: s.resource,\n        options: { preserveFocus: true }\n    }))));\n};\nclass BaseSetActiveEditorReadonlyInSession extends Action2 {\n    constructor(id, title, newReadonlyState) {\n        super({\n            id,\n            title,\n            f1: true,\n            category: Categories.File,\n            precondition: ActiveEditorCanToggleReadonlyContext\n        });\n        this.newReadonlyState = newReadonlyState;\n    }\n    async run(accessor) {\n        const editorService = accessor.get(IEditorService);\n        const filesConfigurationService = accessor.get(IFilesConfigurationService);\n        const fileResource = EditorResourceAccessor.getOriginalUri(editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n        if (!fileResource) {\n            return;\n        }\n        await filesConfigurationService.updateReadonly(fileResource, this.newReadonlyState);\n    }\n}\nclass SetActiveEditorReadonlyInSession extends BaseSetActiveEditorReadonlyInSession {\n    static { this.ID = 'workbench.action.files.setActiveEditorReadonlyInSession'; }\n    static { this.LABEL = ( nls.localize(\n        'setActiveEditorReadonlyInSession',\n        \"Set Active Editor Read-only in Session\"\n    )); }\n    constructor() {\n        super(SetActiveEditorReadonlyInSession.ID, { value: SetActiveEditorReadonlyInSession.LABEL, original: 'Set Active Editor Readonly in Session' }, true);\n    }\n}\nclass SetActiveEditorWriteableInSession extends BaseSetActiveEditorReadonlyInSession {\n    static { this.ID = 'workbench.action.files.setActiveEditorWriteableInSession'; }\n    static { this.LABEL = ( nls.localize(\n        'setActiveEditorWriteableInSession',\n        \"Set Active Editor Writeable in Session\"\n    )); }\n    constructor() {\n        super(SetActiveEditorWriteableInSession.ID, { value: SetActiveEditorWriteableInSession.LABEL, original: 'Set Active Editor Writeable in Session' }, false);\n    }\n}\nclass ToggleActiveEditorReadonlyInSession extends BaseSetActiveEditorReadonlyInSession {\n    static { this.ID = 'workbench.action.files.toggleActiveEditorReadonlyInSession'; }\n    static { this.LABEL = ( nls.localize(\n        'toggleActiveEditorReadonlyInSession',\n        \"Toggle Active Editor Read-only in Session\"\n    )); }\n    constructor() {\n        super(ToggleActiveEditorReadonlyInSession.ID, { value: ToggleActiveEditorReadonlyInSession.LABEL, original: 'Toggle Active Editor Readonly in Session' }, 'toggle');\n    }\n}\nclass ResetActiveEditorReadonlyInSession extends BaseSetActiveEditorReadonlyInSession {\n    static { this.ID = 'workbench.action.files.resetActiveEditorReadonlyInSession'; }\n    static { this.LABEL = ( nls.localize(\n        'resetActiveEditorReadonlyInSession',\n        \"Reset Active Editor Read-only in Session\"\n    )); }\n    constructor() {\n        super(ResetActiveEditorReadonlyInSession.ID, { value: ResetActiveEditorReadonlyInSession.LABEL, original: 'Reset Active Editor Readonly in Session' }, 'reset');\n    }\n}\nexport { COPY_FILE_LABEL, CloseGroupAction, CompareNewUntitledTextFilesAction, CompareWithClipboardAction, DOWNLOAD_COMMAND_ID, DOWNLOAD_LABEL, FileCopiedContext, FocusFilesExplorer, GlobalCompareResourcesAction, MOVE_FILE_TO_TRASH_LABEL, NEW_FILE_COMMAND_ID, NEW_FILE_LABEL, NEW_FOLDER_COMMAND_ID, NEW_FOLDER_LABEL, PASTE_FILE_LABEL, ResetActiveEditorReadonlyInSession, SaveAllInGroupAction, SetActiveEditorReadonlyInSession, SetActiveEditorWriteableInSession, ShowActiveFileInExplorer, ShowOpenedFileInNewWindow, TRIGGER_RENAME_LABEL, ToggleActiveEditorReadonlyInSession, ToggleAutoSaveAction, UPLOAD_COMMAND_ID, UPLOAD_LABEL, copyFileHandler, cutFileHandler, deleteFileHandler, findValidPasteFileTarget, incrementFileName, moveFileToTrashHandler, openFilePreserveFocusHandler, pasteFileHandler, renameHandler, validateFileName };\n", "import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nconst REVEAL_IN_EXPLORER_COMMAND_ID = 'revealInExplorer';\nconst REVERT_FILE_COMMAND_ID = 'workbench.action.files.revert';\nconst OPEN_TO_SIDE_COMMAND_ID = 'explorer.openToSide';\nconst OPEN_WITH_EXPLORER_COMMAND_ID = 'explorer.openWith';\nconst SELECT_FOR_COMPARE_COMMAND_ID = 'selectForCompare';\nconst COMPARE_SELECTED_COMMAND_ID = 'compareSelected';\nconst COMPARE_RESOURCE_COMMAND_ID = 'compareFiles';\nconst COMPARE_WITH_SAVED_COMMAND_ID = 'workbench.files.action.compareWithSaved';\nconst COPY_PATH_COMMAND_ID = 'copyFilePath';\nconst COPY_RELATIVE_PATH_COMMAND_ID = 'copyRelativeFilePath';\nconst SAVE_FILE_AS_COMMAND_ID = 'workbench.action.files.saveAs';\nconst SAVE_FILE_AS_LABEL = ( nls.localize('saveAs', \"Save As...\"));\nconst SAVE_FILE_COMMAND_ID = 'workbench.action.files.save';\nconst SAVE_FILE_LABEL = ( nls.localize('save', \"Save\"));\nconst SAVE_FILE_WITHOUT_FORMATTING_COMMAND_ID = 'workbench.action.files.saveWithoutFormatting';\nconst SAVE_FILE_WITHOUT_FORMATTING_LABEL = ( nls.localize('saveWithoutFormatting', \"Save without Formatting\"));\nconst SAVE_ALL_COMMAND_ID = 'saveAll';\nconst SAVE_ALL_IN_GROUP_COMMAND_ID = 'workbench.files.action.saveAllInGroup';\nconst SAVE_FILES_COMMAND_ID = 'workbench.action.files.saveFiles';\nconst OpenEditorsGroupContext = ( new RawContextKey('groupFocusedInOpenEditors', false));\nconst OpenEditorsDirtyEditorContext = ( new RawContextKey('dirtyEditorFocusedInOpenEditors', false));\nconst OpenEditorsReadonlyEditorContext = ( new RawContextKey('readonlyEditorFocusedInOpenEditors', false));\nconst ResourceSelectedForCompareContext = ( new RawContextKey('resourceSelectedForCompare', false));\nconst REMOVE_ROOT_FOLDER_COMMAND_ID = 'removeRootFolder';\nconst REMOVE_ROOT_FOLDER_LABEL = ( nls.localize('removeFolderFromWorkspace', \"Remove Folder from Workspace\"));\nconst PREVIOUS_COMPRESSED_FOLDER = 'previousCompressedFolder';\nconst NEXT_COMPRESSED_FOLDER = 'nextCompressedFolder';\nconst FIRST_COMPRESSED_FOLDER = 'firstCompressedFolder';\nconst LAST_COMPRESSED_FOLDER = 'lastCompressedFolder';\nconst NEW_UNTITLED_FILE_COMMAND_ID = 'workbench.action.files.newUntitledFile';\nconst NEW_UNTITLED_FILE_LABEL = ( nls.localize('newUntitledFile', \"New Untitled Text File\"));\nconst NEW_FILE_COMMAND_ID = 'workbench.action.files.newFile';\nexport { COMPARE_RESOURCE_COMMAND_ID, COMPARE_SELECTED_COMMAND_ID, COMPARE_WITH_SAVED_COMMAND_ID, COPY_PATH_COMMAND_ID, COPY_RELATIVE_PATH_COMMAND_ID, FIRST_COMPRESSED_FOLDER, LAST_COMPRESSED_FOLDER, NEW_FILE_COMMAND_ID, NEW_UNTITLED_FILE_COMMAND_ID, NEW_UNTITLED_FILE_LABEL, NEXT_COMPRESSED_FOLDER, OPEN_TO_SIDE_COMMAND_ID, OPEN_WITH_EXPLORER_COMMAND_ID, OpenEditorsDirtyEditorContext, OpenEditorsGroupContext, OpenEditorsReadonlyEditorContext, PREVIOUS_COMPRESSED_FOLDER, REMOVE_ROOT_FOLDER_COMMAND_ID, REMOVE_ROOT_FOLDER_LABEL, REVEAL_IN_EXPLORER_COMMAND_ID, REVERT_FILE_COMMAND_ID, ResourceSelectedForCompareContext, SAVE_ALL_COMMAND_ID, SAVE_ALL_IN_GROUP_COMMAND_ID, SAVE_FILES_COMMAND_ID, SAVE_FILE_AS_COMMAND_ID, SAVE_FILE_AS_LABEL, SAVE_FILE_COMMAND_ID, SAVE_FILE_LABEL, SAVE_FILE_WITHOUT_FORMATTING_COMMAND_ID, SAVE_FILE_WITHOUT_FORMATTING_LABEL, SELECT_FOR_COMPARE_COMMAND_ID };\n", "import { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { isObject, isString, isUndefined, isNumber } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from 'monaco-editor/esm/vs/platform/keybinding/common/keybindingsRegistry.js';\nimport { isEditorInputWithOptionsAndGroup, isEditorIdentifier } from '../../../common/editor.js';\nimport { TextCompareEditorVisibleContext, TextCompareEditorActiveContext, ActiveEditorGroupEmptyContext, MultipleEditorGroupsContext, ActiveEditorCanSplitInGroupContext, SideBySideEditorActiveContext, ActiveEditorGroupLockedContext, ActiveEditorStickyContext } from '../../../common/contextkeys.js';\nimport { columnToEditorGroup } from '../../../services/editor/common/editorGroupColumn.js';\nimport { IEditorService, SIDE_GROUP } from '../../../services/editor/common/editorService.js';\nimport { EditorContextKeys } from 'monaco-editor/esm/vs/editor/common/editorContextKeys.js';\nimport { TextDiffEditor } from './textDiffEditor.js';\nimport { KeyChord } from 'monaco-editor/esm/vs/base/common/keyCodes.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { IQuickInputService } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { IListService } from 'monaco-editor/esm/vs/platform/list/browser/listService.js';\nimport { List } from 'monaco-editor/esm/vs/base/browser/ui/list/listWidget.js';\nimport { distinct, coalesce } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { IEditorGroupsService, preferredSideBySideGroupDirection, isEditorGroup } from '../../../services/editor/common/editorGroupsService.js';\nimport { ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { CommandsRegistry, ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { MenuRegistry, MenuId, registerAction2, Action2 } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { Categories } from 'monaco-editor/esm/vs/platform/action/common/actionCommonCategories.js';\nimport { ActiveGroupEditorsByMostRecentlyUsedQuickAccess } from './editorQuickAccess.js';\nimport { IOpenerService, matchesScheme } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { EditorResolution } from 'monaco-editor/esm/vs/platform/editor/common/editor.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { SideBySideEditorInput } from '../../../common/editor/sideBySideEditorInput.js';\nimport { SideBySideEditor } from './sideBySideEditor.js';\nimport { IEditorResolverService } from '../../../services/editor/common/editorResolverService.js';\nimport { IPathService } from '../../../services/path/common/pathService.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { extname } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { DiffEditorInput } from '../../../common/editor/diffEditorInput.js';\nimport { isDiffEditor } from 'monaco-editor/esm/vs/editor/browser/editorBrowser.js';\nimport { IUntitledTextEditorService } from '../../../services/untitled/common/untitledTextEditorService.js';\nconst CLOSE_SAVED_EDITORS_COMMAND_ID = 'workbench.action.closeUnmodifiedEditors';\nconst CLOSE_EDITORS_IN_GROUP_COMMAND_ID = 'workbench.action.closeEditorsInGroup';\nconst CLOSE_EDITORS_AND_GROUP_COMMAND_ID = 'workbench.action.closeEditorsAndGroup';\nconst CLOSE_EDITORS_TO_THE_RIGHT_COMMAND_ID = 'workbench.action.closeEditorsToTheRight';\nconst CLOSE_EDITOR_COMMAND_ID = 'workbench.action.closeActiveEditor';\nconst CLOSE_PINNED_EDITOR_COMMAND_ID = 'workbench.action.closeActivePinnedEditor';\nconst CLOSE_EDITOR_GROUP_COMMAND_ID = 'workbench.action.closeGroup';\nconst CLOSE_OTHER_EDITORS_IN_GROUP_COMMAND_ID = 'workbench.action.closeOtherEditors';\nconst MOVE_ACTIVE_EDITOR_COMMAND_ID = 'moveActiveEditor';\nconst COPY_ACTIVE_EDITOR_COMMAND_ID = 'copyActiveEditor';\nconst LAYOUT_EDITOR_GROUPS_COMMAND_ID = 'layoutEditorGroups';\nconst KEEP_EDITOR_COMMAND_ID = 'workbench.action.keepEditor';\nconst TOGGLE_KEEP_EDITORS_COMMAND_ID = 'workbench.action.toggleKeepEditors';\nconst TOGGLE_LOCK_GROUP_COMMAND_ID = 'workbench.action.toggleEditorGroupLock';\nconst LOCK_GROUP_COMMAND_ID = 'workbench.action.lockEditorGroup';\nconst UNLOCK_GROUP_COMMAND_ID = 'workbench.action.unlockEditorGroup';\nconst SHOW_EDITORS_IN_GROUP = 'workbench.action.showEditorsInGroup';\nconst REOPEN_WITH_COMMAND_ID = 'workbench.action.reopenWithEditor';\nconst PIN_EDITOR_COMMAND_ID = 'workbench.action.pinEditor';\nconst UNPIN_EDITOR_COMMAND_ID = 'workbench.action.unpinEditor';\nconst TOGGLE_DIFF_SIDE_BY_SIDE = 'toggle.diff.renderSideBySide';\nconst GOTO_NEXT_CHANGE = 'workbench.action.compareEditor.nextChange';\nconst GOTO_PREVIOUS_CHANGE = 'workbench.action.compareEditor.previousChange';\nconst DIFF_FOCUS_PRIMARY_SIDE = 'workbench.action.compareEditor.focusPrimarySide';\nconst DIFF_FOCUS_SECONDARY_SIDE = 'workbench.action.compareEditor.focusSecondarySide';\nconst DIFF_FOCUS_OTHER_SIDE = 'workbench.action.compareEditor.focusOtherSide';\nconst DIFF_OPEN_SIDE = 'workbench.action.compareEditor.openSide';\nconst TOGGLE_DIFF_IGNORE_TRIM_WHITESPACE = 'toggle.diff.ignoreTrimWhitespace';\nconst SPLIT_EDITOR_UP = 'workbench.action.splitEditorUp';\nconst SPLIT_EDITOR_DOWN = 'workbench.action.splitEditorDown';\nconst SPLIT_EDITOR_LEFT = 'workbench.action.splitEditorLeft';\nconst SPLIT_EDITOR_RIGHT = 'workbench.action.splitEditorRight';\nconst SPLIT_EDITOR_IN_GROUP = 'workbench.action.splitEditorInGroup';\nconst TOGGLE_SPLIT_EDITOR_IN_GROUP = 'workbench.action.toggleSplitEditorInGroup';\nconst JOIN_EDITOR_IN_GROUP = 'workbench.action.joinEditorInGroup';\nconst TOGGLE_SPLIT_EDITOR_IN_GROUP_LAYOUT = 'workbench.action.toggleSplitEditorInGroupLayout';\nconst FOCUS_FIRST_SIDE_EDITOR = 'workbench.action.focusFirstSideEditor';\nconst FOCUS_SECOND_SIDE_EDITOR = 'workbench.action.focusSecondSideEditor';\nconst FOCUS_OTHER_SIDE_EDITOR = 'workbench.action.focusOtherSideEditor';\nconst FOCUS_LEFT_GROUP_WITHOUT_WRAP_COMMAND_ID = 'workbench.action.focusLeftGroupWithoutWrap';\nconst FOCUS_RIGHT_GROUP_WITHOUT_WRAP_COMMAND_ID = 'workbench.action.focusRightGroupWithoutWrap';\nconst FOCUS_ABOVE_GROUP_WITHOUT_WRAP_COMMAND_ID = 'workbench.action.focusAboveGroupWithoutWrap';\nconst FOCUS_BELOW_GROUP_WITHOUT_WRAP_COMMAND_ID = 'workbench.action.focusBelowGroupWithoutWrap';\nconst OPEN_EDITOR_AT_INDEX_COMMAND_ID = 'workbench.action.openEditorAtIndex';\nconst API_OPEN_EDITOR_COMMAND_ID = '_workbench.open';\nconst API_OPEN_DIFF_EDITOR_COMMAND_ID = '_workbench.diff';\nconst API_OPEN_WITH_EDITOR_COMMAND_ID = '_workbench.openWith';\nconst isActiveEditorMoveCopyArg = function (arg) {\n    if (!isObject(arg)) {\n        return false;\n    }\n    if (!isString(arg.to)) {\n        return false;\n    }\n    if (!isUndefined(arg.by) && !isString(arg.by)) {\n        return false;\n    }\n    if (!isUndefined(arg.value) && !isNumber(arg.value)) {\n        return false;\n    }\n    return true;\n};\nfunction registerActiveEditorMoveCopyCommand() {\n    const moveCopyJSONSchema = {\n        'type': 'object',\n        'required': ['to'],\n        'properties': {\n            'to': {\n                'type': 'string',\n                'enum': ['left', 'right']\n            },\n            'by': {\n                'type': 'string',\n                'enum': ['tab', 'group']\n            },\n            'value': {\n                'type': 'number'\n            }\n        }\n    };\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: MOVE_ACTIVE_EDITOR_COMMAND_ID,\n        weight: 200 ,\n        when: EditorContextKeys.editorTextFocus,\n        primary: 0,\n        handler: (accessor, args) => moveCopyActiveEditor(true, args, accessor),\n        description: {\n            description: ( localize(\n                'editorCommand.activeEditorMove.description',\n                \"Move the active editor by tabs or groups\"\n            )),\n            args: [\n                {\n                    name: ( localize('editorCommand.activeEditorMove.arg.name', \"Active editor move argument\")),\n                    description: ( localize(\n                        'editorCommand.activeEditorMove.arg.description',\n                        \"Argument Properties:\\n\\t* 'to': String value providing where to move.\\n\\t* 'by': String value providing the unit for move (by tab or by group).\\n\\t* 'value': Number value providing how many positions or an absolute position to move.\"\n                    )),\n                    constraint: isActiveEditorMoveCopyArg,\n                    schema: moveCopyJSONSchema\n                }\n            ]\n        }\n    });\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: COPY_ACTIVE_EDITOR_COMMAND_ID,\n        weight: 200 ,\n        when: EditorContextKeys.editorTextFocus,\n        primary: 0,\n        handler: (accessor, args) => moveCopyActiveEditor(false, args, accessor),\n        description: {\n            description: ( localize(\n                'editorCommand.activeEditorCopy.description',\n                \"Copy the active editor by groups\"\n            )),\n            args: [\n                {\n                    name: ( localize('editorCommand.activeEditorCopy.arg.name', \"Active editor copy argument\")),\n                    description: ( localize(\n                        'editorCommand.activeEditorCopy.arg.description',\n                        \"Argument Properties:\\n\\t* 'to': String value providing where to copy.\\n\\t* 'value': Number value providing how many positions or an absolute position to copy.\"\n                    )),\n                    constraint: isActiveEditorMoveCopyArg,\n                    schema: moveCopyJSONSchema\n                }\n            ]\n        }\n    });\n    function moveCopyActiveEditor(isMove, args = Object.create(null), accessor) {\n        args.to = args.to || 'right';\n        args.by = args.by || 'tab';\n        args.value = typeof args.value === 'number' ? args.value : 1;\n        const activeEditorPane = accessor.get(IEditorService).activeEditorPane;\n        if (activeEditorPane) {\n            switch (args.by) {\n                case 'tab':\n                    if (isMove) {\n                        return moveActiveTab(args, activeEditorPane);\n                    }\n                    break;\n                case 'group':\n                    return moveCopyActiveEditorToGroup(isMove, args, activeEditorPane, accessor);\n            }\n        }\n    }\n    function moveActiveTab(args, control) {\n        const group = control.group;\n        let index = group.getIndexOfEditor(control.input);\n        switch (args.to) {\n            case 'first':\n                index = 0;\n                break;\n            case 'last':\n                index = group.count - 1;\n                break;\n            case 'left':\n                index = index - args.value;\n                break;\n            case 'right':\n                index = index + args.value;\n                break;\n            case 'center':\n                index = Math.round(group.count / 2) - 1;\n                break;\n            case 'position':\n                index = args.value - 1;\n                break;\n        }\n        index = index < 0 ? 0 : index >= group.count ? group.count - 1 : index;\n        group.moveEditor(control.input, group, { index });\n    }\n    function moveCopyActiveEditorToGroup(isMove, args, control, accessor) {\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        const configurationService = accessor.get(IConfigurationService);\n        const sourceGroup = control.group;\n        let targetGroup;\n        switch (args.to) {\n            case 'left':\n                targetGroup = editorGroupService.findGroup({ direction: 2  }, sourceGroup);\n                if (!targetGroup) {\n                    targetGroup = editorGroupService.addGroup(sourceGroup, 2 );\n                }\n                break;\n            case 'right':\n                targetGroup = editorGroupService.findGroup({ direction: 3  }, sourceGroup);\n                if (!targetGroup) {\n                    targetGroup = editorGroupService.addGroup(sourceGroup, 3 );\n                }\n                break;\n            case 'up':\n                targetGroup = editorGroupService.findGroup({ direction: 0  }, sourceGroup);\n                if (!targetGroup) {\n                    targetGroup = editorGroupService.addGroup(sourceGroup, 0 );\n                }\n                break;\n            case 'down':\n                targetGroup = editorGroupService.findGroup({ direction: 1  }, sourceGroup);\n                if (!targetGroup) {\n                    targetGroup = editorGroupService.addGroup(sourceGroup, 1 );\n                }\n                break;\n            case 'first':\n                targetGroup = editorGroupService.findGroup({ location: 0  }, sourceGroup);\n                break;\n            case 'last':\n                targetGroup = editorGroupService.findGroup({ location: 1  }, sourceGroup);\n                break;\n            case 'previous':\n                targetGroup = editorGroupService.findGroup({ location: 3  }, sourceGroup);\n                break;\n            case 'next':\n                targetGroup = editorGroupService.findGroup({ location: 2  }, sourceGroup);\n                if (!targetGroup) {\n                    targetGroup = editorGroupService.addGroup(sourceGroup, preferredSideBySideGroupDirection(configurationService));\n                }\n                break;\n            case 'center':\n                targetGroup = editorGroupService.getGroups(2 )[(editorGroupService.count / 2) - 1];\n                break;\n            case 'position':\n                targetGroup = editorGroupService.getGroups(2 )[args.value - 1];\n                break;\n        }\n        if (targetGroup) {\n            if (isMove) {\n                sourceGroup.moveEditor(control.input, targetGroup);\n            }\n            else if (sourceGroup.id !== targetGroup.id) {\n                sourceGroup.copyEditor(control.input, targetGroup);\n            }\n            targetGroup.focus();\n        }\n    }\n}\nfunction registerEditorGroupsLayoutCommands() {\n    function applyEditorLayout(accessor, layout) {\n        if (!layout || typeof layout !== 'object') {\n            return;\n        }\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        editorGroupService.applyLayout(layout);\n    }\n    CommandsRegistry.registerCommand(LAYOUT_EDITOR_GROUPS_COMMAND_ID, (accessor, args) => {\n        applyEditorLayout(accessor, args);\n    });\n    CommandsRegistry.registerCommand({\n        id: 'vscode.setEditorLayout',\n        handler: (accessor, args) => applyEditorLayout(accessor, args),\n        description: {\n            description: 'Set Editor Layout',\n            args: [{\n                    name: 'args',\n                    schema: {\n                        'type': 'object',\n                        'required': ['groups'],\n                        'properties': {\n                            'orientation': {\n                                'type': 'number',\n                                'default': 0,\n                                'enum': [0, 1]\n                            },\n                            'groups': {\n                                '$ref': '#/definitions/editorGroupsSchema',\n                                'default': [{}, {}]\n                            }\n                        }\n                    }\n                }]\n        }\n    });\n    CommandsRegistry.registerCommand({\n        id: 'vscode.getEditorLayout',\n        handler: (accessor) => {\n            const editorGroupService = accessor.get(IEditorGroupsService);\n            return editorGroupService.getLayout();\n        },\n        description: {\n            description: 'Get Editor Layout',\n            args: [],\n            returns: 'An editor layout object, in the same format as vscode.setEditorLayout'\n        }\n    });\n}\nfunction registerDiffEditorCommands() {\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: GOTO_NEXT_CHANGE,\n        weight: 200 ,\n        when: TextCompareEditorVisibleContext,\n        primary: 512  | 63 ,\n        handler: accessor => navigateInDiffEditor(accessor, true)\n    });\n    MenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n        command: {\n            id: GOTO_NEXT_CHANGE,\n            title: { value: ( localize('compare.nextChange', \"Go to Next Change\")), original: 'Go to Next Change' },\n        }\n    });\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: GOTO_PREVIOUS_CHANGE,\n        weight: 200 ,\n        when: TextCompareEditorVisibleContext,\n        primary: 512  | 1024  | 63 ,\n        handler: accessor => navigateInDiffEditor(accessor, false)\n    });\n    MenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n        command: {\n            id: GOTO_PREVIOUS_CHANGE,\n            title: { value: ( localize('compare.previousChange', \"Go to Previous Change\")), original: 'Go to Previous Change' },\n        }\n    });\n    function getActiveTextDiffEditor(accessor) {\n        const editorService = accessor.get(IEditorService);\n        for (const editor of [editorService.activeEditorPane, ...editorService.visibleEditorPanes]) {\n            if (editor instanceof TextDiffEditor) {\n                return editor;\n            }\n        }\n        return undefined;\n    }\n    function navigateInDiffEditor(accessor, next) {\n        const activeTextDiffEditor = getActiveTextDiffEditor(accessor);\n        if (activeTextDiffEditor) {\n            activeTextDiffEditor.getControl()?.goToDiff(next ? 'next' : 'previous');\n        }\n    }\n    let FocusTextDiffEditorMode;\n    ( (function(FocusTextDiffEditorMode) {\n        FocusTextDiffEditorMode[FocusTextDiffEditorMode[\"Original\"] = 0] = \"Original\";\n        FocusTextDiffEditorMode[FocusTextDiffEditorMode[\"Modified\"] = 1] = \"Modified\";\n        FocusTextDiffEditorMode[FocusTextDiffEditorMode[\"Toggle\"] = 2] = \"Toggle\";\n    })(FocusTextDiffEditorMode || (FocusTextDiffEditorMode = {})));\n    function focusInDiffEditor(accessor, mode) {\n        const activeTextDiffEditor = getActiveTextDiffEditor(accessor);\n        if (activeTextDiffEditor) {\n            switch (mode) {\n                case FocusTextDiffEditorMode.Original:\n                    activeTextDiffEditor.getControl()?.getOriginalEditor().focus();\n                    break;\n                case FocusTextDiffEditorMode.Modified:\n                    activeTextDiffEditor.getControl()?.getModifiedEditor().focus();\n                    break;\n                case FocusTextDiffEditorMode.Toggle:\n                    if (activeTextDiffEditor.getControl()?.getModifiedEditor().hasWidgetFocus()) {\n                        return focusInDiffEditor(accessor, FocusTextDiffEditorMode.Original);\n                    }\n                    else {\n                        return focusInDiffEditor(accessor, FocusTextDiffEditorMode.Modified);\n                    }\n            }\n        }\n    }\n    function toggleDiffSideBySide(accessor) {\n        const configurationService = accessor.get(IConfigurationService);\n        const newValue = !configurationService.getValue('diffEditor.renderSideBySide');\n        configurationService.updateValue('diffEditor.renderSideBySide', newValue);\n    }\n    function toggleDiffIgnoreTrimWhitespace(accessor) {\n        const configurationService = accessor.get(IConfigurationService);\n        const newValue = !configurationService.getValue('diffEditor.ignoreTrimWhitespace');\n        configurationService.updateValue('diffEditor.ignoreTrimWhitespace', newValue);\n    }\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: TOGGLE_DIFF_SIDE_BY_SIDE,\n        weight: 200 ,\n        when: undefined,\n        primary: undefined,\n        handler: accessor => toggleDiffSideBySide(accessor)\n    });\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: DIFF_FOCUS_PRIMARY_SIDE,\n        weight: 200 ,\n        when: undefined,\n        primary: undefined,\n        handler: accessor => focusInDiffEditor(accessor, FocusTextDiffEditorMode.Modified)\n    });\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: DIFF_FOCUS_SECONDARY_SIDE,\n        weight: 200 ,\n        when: undefined,\n        primary: undefined,\n        handler: accessor => focusInDiffEditor(accessor, FocusTextDiffEditorMode.Original)\n    });\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: DIFF_FOCUS_OTHER_SIDE,\n        weight: 200 ,\n        when: undefined,\n        primary: undefined,\n        handler: accessor => focusInDiffEditor(accessor, FocusTextDiffEditorMode.Toggle)\n    });\n    MenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n        command: {\n            id: TOGGLE_DIFF_SIDE_BY_SIDE,\n            title: {\n                value: ( localize('toggleInlineView', \"Toggle Inline View\")),\n                original: 'Compare: Toggle Inline View'\n            },\n            category: ( localize('compare', \"Compare\"))\n        },\n        when: TextCompareEditorActiveContext\n    });\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: TOGGLE_DIFF_IGNORE_TRIM_WHITESPACE,\n        weight: 200 ,\n        when: undefined,\n        primary: undefined,\n        handler: accessor => toggleDiffIgnoreTrimWhitespace(accessor)\n    });\n}\nfunction registerOpenEditorAPICommands() {\n    function mixinContext(context, options, column) {\n        if (!context) {\n            return [options, column];\n        }\n        return [\n            { ...context.editorOptions, ...(options ?? Object.create(null)) },\n            context.sideBySide ? SIDE_GROUP : column\n        ];\n    }\n    CommandsRegistry.registerCommand({\n        id: 'vscode.open',\n        handler: (accessor, arg) => {\n            accessor.get(ICommandService).executeCommand(API_OPEN_EDITOR_COMMAND_ID, arg);\n        },\n        description: {\n            description: 'Opens the provided resource in the editor.',\n            args: [{ name: 'Uri' }]\n        }\n    });\n    CommandsRegistry.registerCommand(API_OPEN_EDITOR_COMMAND_ID, async function (accessor, resourceArg, columnAndOptions, label, context) {\n        const editorService = accessor.get(IEditorService);\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        const openerService = accessor.get(IOpenerService);\n        const pathService = accessor.get(IPathService);\n        const configurationService = accessor.get(IConfigurationService);\n        const untitledTextEditorService = accessor.get(IUntitledTextEditorService);\n        const resourceOrString = typeof resourceArg === 'string' ? resourceArg : ( URI.from(resourceArg, true));\n        const [columnArg, optionsArg] = columnAndOptions ?? [];\n        if (optionsArg || typeof columnArg === 'number' || matchesScheme(resourceOrString, Schemas.untitled)) {\n            const [options, column] = mixinContext(context, optionsArg, columnArg);\n            const resource = URI.isUri(resourceOrString) ? resourceOrString : ( URI.parse(resourceOrString));\n            let input;\n            if (untitledTextEditorService.isUntitledWithAssociatedResource(resource)) {\n                input = { resource: resource.with({ scheme: pathService.defaultUriScheme }), forceUntitled: true, options, label };\n            }\n            else {\n                input = { resource, options, label };\n            }\n            await editorService.openEditor(input, columnToEditorGroup(editorGroupService, configurationService, column));\n        }\n        else if (matchesScheme(resourceOrString, Schemas.command)) {\n            return;\n        }\n        else {\n            await openerService.open(resourceOrString, { openToSide: context?.sideBySide, editorOptions: context?.editorOptions });\n        }\n    });\n    CommandsRegistry.registerCommand({\n        id: 'vscode.diff',\n        handler: (accessor, left, right, label) => {\n            accessor.get(ICommandService).executeCommand(API_OPEN_DIFF_EDITOR_COMMAND_ID, left, right, label);\n        },\n        description: {\n            description: 'Opens the provided resources in the diff editor to compare their contents.',\n            args: [\n                { name: 'left', description: 'Left-hand side resource of the diff editor' },\n                { name: 'right', description: 'Right-hand side resource of the diff editor' },\n                { name: 'title', description: 'Human readable title for the diff editor' },\n            ]\n        }\n    });\n    CommandsRegistry.registerCommand(API_OPEN_DIFF_EDITOR_COMMAND_ID, async function (accessor, originalResource, modifiedResource, labelAndOrDescription, columnAndOptions, context) {\n        const editorService = accessor.get(IEditorService);\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        const configurationService = accessor.get(IConfigurationService);\n        const [columnArg, optionsArg] = columnAndOptions ?? [];\n        const [options, column] = mixinContext(context, optionsArg, columnArg);\n        let label = undefined;\n        let description = undefined;\n        if (typeof labelAndOrDescription === 'string') {\n            label = labelAndOrDescription;\n        }\n        else if (labelAndOrDescription) {\n            label = labelAndOrDescription.label;\n            description = labelAndOrDescription.description;\n        }\n        await editorService.openEditor({\n            original: { resource: ( URI.from(originalResource, true)) },\n            modified: { resource: ( URI.from(modifiedResource, true)) },\n            label,\n            description,\n            options\n        }, columnToEditorGroup(editorGroupService, configurationService, column));\n    });\n    CommandsRegistry.registerCommand(API_OPEN_WITH_EDITOR_COMMAND_ID, async (accessor, resource, id, columnAndOptions) => {\n        const editorService = accessor.get(IEditorService);\n        const editorGroupsService = accessor.get(IEditorGroupsService);\n        const configurationService = accessor.get(IConfigurationService);\n        const [columnArg, optionsArg] = columnAndOptions ?? [];\n        await editorService.openEditor({ resource: ( URI.from(resource, true)), options: { ...optionsArg, pinned: true, override: id } }, columnToEditorGroup(editorGroupsService, configurationService, columnArg));\n    });\n}\nfunction registerOpenEditorAtIndexCommands() {\n    const openEditorAtIndex = (accessor, editorIndex) => {\n        const editorService = accessor.get(IEditorService);\n        const activeEditorPane = editorService.activeEditorPane;\n        if (activeEditorPane) {\n            const editor = activeEditorPane.group.getEditorByIndex(editorIndex);\n            if (editor) {\n                editorService.openEditor(editor);\n            }\n        }\n    };\n    CommandsRegistry.registerCommand({\n        id: OPEN_EDITOR_AT_INDEX_COMMAND_ID,\n        handler: openEditorAtIndex\n    });\n    for (let i = 0; i < 9; i++) {\n        const editorIndex = i;\n        const visibleIndex = i + 1;\n        KeybindingsRegistry.registerCommandAndKeybindingRule({\n            id: OPEN_EDITOR_AT_INDEX_COMMAND_ID + visibleIndex,\n            weight: 200 ,\n            when: undefined,\n            primary: 512  | toKeyCode(visibleIndex),\n            mac: { primary: 256  | toKeyCode(visibleIndex) },\n            handler: accessor => openEditorAtIndex(accessor, editorIndex)\n        });\n    }\n    function toKeyCode(index) {\n        switch (index) {\n            case 0: return 21 ;\n            case 1: return 22 ;\n            case 2: return 23 ;\n            case 3: return 24 ;\n            case 4: return 25 ;\n            case 5: return 26 ;\n            case 6: return 27 ;\n            case 7: return 28 ;\n            case 8: return 29 ;\n            case 9: return 30 ;\n        }\n        throw new Error('invalid index');\n    }\n}\nfunction registerFocusEditorGroupAtIndexCommands() {\n    for (let groupIndex = 1; groupIndex < 8; groupIndex++) {\n        KeybindingsRegistry.registerCommandAndKeybindingRule({\n            id: toCommandId(groupIndex),\n            weight: 200 ,\n            when: undefined,\n            primary: 2048  | toKeyCode(groupIndex),\n            handler: accessor => {\n                const editorGroupService = accessor.get(IEditorGroupsService);\n                const configurationService = accessor.get(IConfigurationService);\n                if (groupIndex > editorGroupService.count) {\n                    return;\n                }\n                const groups = editorGroupService.getGroups(2 );\n                if (groups[groupIndex]) {\n                    return groups[groupIndex].focus();\n                }\n                const direction = preferredSideBySideGroupDirection(configurationService);\n                const lastGroup = editorGroupService.findGroup({ location: 1  });\n                if (!lastGroup) {\n                    return;\n                }\n                const newGroup = editorGroupService.addGroup(lastGroup, direction);\n                newGroup.focus();\n            }\n        });\n    }\n    function toCommandId(index) {\n        switch (index) {\n            case 1: return 'workbench.action.focusSecondEditorGroup';\n            case 2: return 'workbench.action.focusThirdEditorGroup';\n            case 3: return 'workbench.action.focusFourthEditorGroup';\n            case 4: return 'workbench.action.focusFifthEditorGroup';\n            case 5: return 'workbench.action.focusSixthEditorGroup';\n            case 6: return 'workbench.action.focusSeventhEditorGroup';\n            case 7: return 'workbench.action.focusEighthEditorGroup';\n        }\n        throw new Error('Invalid index');\n    }\n    function toKeyCode(index) {\n        switch (index) {\n            case 1: return 23 ;\n            case 2: return 24 ;\n            case 3: return 25 ;\n            case 4: return 26 ;\n            case 5: return 27 ;\n            case 6: return 28 ;\n            case 7: return 29 ;\n        }\n        throw new Error('Invalid index');\n    }\n}\nfunction splitEditor(editorGroupService, direction, context) {\n    let sourceGroup;\n    if (context && typeof context.groupId === 'number') {\n        sourceGroup = editorGroupService.getGroup(context.groupId);\n    }\n    else {\n        sourceGroup = editorGroupService.activeGroup;\n    }\n    if (!sourceGroup) {\n        return;\n    }\n    const newGroup = editorGroupService.addGroup(sourceGroup, direction);\n    let editorToCopy;\n    if (context && typeof context.editorIndex === 'number') {\n        editorToCopy = sourceGroup.getEditorByIndex(context.editorIndex);\n    }\n    else {\n        editorToCopy = sourceGroup.activeEditor ?? undefined;\n    }\n    if (editorToCopy && !editorToCopy.hasCapability(8 )) {\n        sourceGroup.copyEditor(editorToCopy, newGroup, { preserveFocus: context?.preserveFocus });\n    }\n    newGroup.focus();\n}\nfunction registerSplitEditorCommands() {\n    [\n        { id: SPLIT_EDITOR_UP, direction: 0  },\n        { id: SPLIT_EDITOR_DOWN, direction: 1  },\n        { id: SPLIT_EDITOR_LEFT, direction: 2  },\n        { id: SPLIT_EDITOR_RIGHT, direction: 3  }\n    ].forEach(({ id, direction }) => {\n        CommandsRegistry.registerCommand(id, function (accessor, resourceOrContext, context) {\n            splitEditor(accessor.get(IEditorGroupsService), direction, getCommandsContext(resourceOrContext, context));\n        });\n    });\n}\nfunction registerCloseEditorCommands() {\n    function closeEditorHandler(accessor, forceCloseStickyEditors, resourceOrContext, context) {\n        const editorGroupsService = accessor.get(IEditorGroupsService);\n        const editorService = accessor.get(IEditorService);\n        let keepStickyEditors = undefined;\n        if (forceCloseStickyEditors) {\n            keepStickyEditors = false;\n        }\n        else if (resourceOrContext || context) {\n            keepStickyEditors = false;\n        }\n        else {\n            keepStickyEditors = editorGroupsService.partOptions.preventPinnedEditorClose === 'keyboard' || editorGroupsService.partOptions.preventPinnedEditorClose === 'keyboardAndMouse';\n        }\n        if (keepStickyEditors) {\n            const activeGroup = editorGroupsService.activeGroup;\n            const activeEditor = activeGroup.activeEditor;\n            if (activeEditor && activeGroup.isSticky(activeEditor)) {\n                const nextNonStickyEditorInGroup = activeGroup.getEditors(0 , { excludeSticky: true })[0];\n                if (nextNonStickyEditorInGroup) {\n                    return activeGroup.openEditor(nextNonStickyEditorInGroup);\n                }\n                const nextNonStickyEditorInAllGroups = editorService.getEditors(0 , { excludeSticky: true })[0];\n                if (nextNonStickyEditorInAllGroups) {\n                    return Promise.resolve(editorGroupsService.getGroup(nextNonStickyEditorInAllGroups.groupId)?.openEditor(nextNonStickyEditorInAllGroups.editor));\n                }\n            }\n        }\n        const { editors, groups } = getEditorsContext(accessor, resourceOrContext, context);\n        return Promise.all(( groups.map(async (group) => {\n            if (group) {\n                const editorsToClose = coalesce(( editors\n                    .filter(editor => editor.groupId === group.id)\n                    .map(\n                    editor => typeof editor.editorIndex === 'number' ? group.getEditorByIndex(editor.editorIndex) : group.activeEditor\n                )))\n                    .filter(editor => !keepStickyEditors || !group.isSticky(editor));\n                await group.closeEditors(editorsToClose, { preserveFocus: context?.preserveFocus });\n            }\n        })));\n    }\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: CLOSE_EDITOR_COMMAND_ID,\n        weight: 200 ,\n        when: undefined,\n        primary: 2048  | 53 ,\n        win: { primary: 2048  | 62 , secondary: [2048  | 53 ] },\n        handler: (accessor, resourceOrContext, context) => {\n            return closeEditorHandler(accessor, false, resourceOrContext, context);\n        }\n    });\n    CommandsRegistry.registerCommand(CLOSE_PINNED_EDITOR_COMMAND_ID, (accessor, resourceOrContext, context) => {\n        return closeEditorHandler(accessor, true , resourceOrContext, context);\n    });\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: CLOSE_EDITORS_IN_GROUP_COMMAND_ID,\n        weight: 200 ,\n        when: undefined,\n        primary: KeyChord(2048  | 41 , 53 ),\n        handler: (accessor, resourceOrContext, context) => {\n            return Promise.all(( getEditorsContext(accessor, resourceOrContext, context).groups.map(async (group) => {\n                if (group) {\n                    await group.closeAllEditors({ excludeSticky: true });\n                    return;\n                }\n            })));\n        }\n    });\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: CLOSE_EDITOR_GROUP_COMMAND_ID,\n        weight: 200 ,\n        when: ( ContextKeyExpr.and(ActiveEditorGroupEmptyContext, MultipleEditorGroupsContext)),\n        primary: 2048  | 53 ,\n        win: { primary: 2048  | 62 , secondary: [2048  | 53 ] },\n        handler: (accessor, resourceOrContext, context) => {\n            const editorGroupService = accessor.get(IEditorGroupsService);\n            const commandsContext = getCommandsContext(resourceOrContext, context);\n            let group;\n            if (commandsContext && typeof commandsContext.groupId === 'number') {\n                group = editorGroupService.getGroup(commandsContext.groupId);\n            }\n            else {\n                group = editorGroupService.activeGroup;\n            }\n            if (group) {\n                editorGroupService.removeGroup(group);\n            }\n        }\n    });\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: CLOSE_SAVED_EDITORS_COMMAND_ID,\n        weight: 200 ,\n        when: undefined,\n        primary: KeyChord(2048  | 41 , 51 ),\n        handler: (accessor, resourceOrContext, context) => {\n            return Promise.all(( getEditorsContext(accessor, resourceOrContext, context).groups.map(async (group) => {\n                if (group) {\n                    await group.closeEditors({ savedOnly: true, excludeSticky: true }, { preserveFocus: context?.preserveFocus });\n                }\n            })));\n        }\n    });\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: CLOSE_OTHER_EDITORS_IN_GROUP_COMMAND_ID,\n        weight: 200 ,\n        when: undefined,\n        primary: undefined,\n        mac: { primary: 2048  | 512  | 50  },\n        handler: (accessor, resourceOrContext, context) => {\n            const { editors, groups } = getEditorsContext(accessor, resourceOrContext, context);\n            return Promise.all(( groups.map(async (group) => {\n                if (group) {\n                    const editorsToKeep = ( editors\n                        .filter(editor => editor.groupId === group.id)\n                        .map(\n                        editor => typeof editor.editorIndex === 'number' ? group.getEditorByIndex(editor.editorIndex) : group.activeEditor\n                    ));\n                    const editorsToClose = group.getEditors(1 , { excludeSticky: true }).filter(editor => !editorsToKeep.includes(editor));\n                    for (const editorToKeep of editorsToKeep) {\n                        if (editorToKeep) {\n                            group.pinEditor(editorToKeep);\n                        }\n                    }\n                    await group.closeEditors(editorsToClose, { preserveFocus: context?.preserveFocus });\n                }\n            })));\n        }\n    });\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: CLOSE_EDITORS_TO_THE_RIGHT_COMMAND_ID,\n        weight: 200 ,\n        when: undefined,\n        primary: undefined,\n        handler: async (accessor, resourceOrContext, context) => {\n            const editorGroupService = accessor.get(IEditorGroupsService);\n            const { group, editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n            if (group && editor) {\n                if (group.activeEditor) {\n                    group.pinEditor(group.activeEditor);\n                }\n                await group.closeEditors({ direction: 1 , except: editor, excludeSticky: true }, { preserveFocus: context?.preserveFocus });\n            }\n        }\n    });\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: REOPEN_WITH_COMMAND_ID,\n        weight: 200 ,\n        when: undefined,\n        primary: undefined,\n        handler: async (accessor, resourceOrContext, context) => {\n            const editorGroupService = accessor.get(IEditorGroupsService);\n            const editorService = accessor.get(IEditorService);\n            const editorResolverService = accessor.get(IEditorResolverService);\n            const telemetryService = accessor.get(ITelemetryService);\n            const { group, editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n            if (!editor) {\n                return;\n            }\n            const untypedEditor = editor.toUntyped();\n            if (!untypedEditor) {\n                return;\n            }\n            untypedEditor.options = { ...editorService.activeEditorPane?.options, override: EditorResolution.PICK };\n            const resolvedEditor = await editorResolverService.resolveEditor(untypedEditor, group);\n            if (!isEditorInputWithOptionsAndGroup(resolvedEditor)) {\n                return;\n            }\n            await resolvedEditor.group.replaceEditors([\n                {\n                    editor: editor,\n                    replacement: resolvedEditor.editor,\n                    forceReplaceDirty: editor.resource?.scheme === Schemas.untitled,\n                    options: resolvedEditor.options\n                }\n            ]);\n            telemetryService.publicLog2('workbenchEditorReopen', {\n                scheme: editor.resource?.scheme ?? '',\n                ext: editor.resource ? extname(editor.resource) : '',\n                from: editor.editorId ?? '',\n                to: resolvedEditor.editor.editorId ?? ''\n            });\n            await resolvedEditor.group.openEditor(resolvedEditor.editor);\n        }\n    });\n    CommandsRegistry.registerCommand(CLOSE_EDITORS_AND_GROUP_COMMAND_ID, async (accessor, resourceOrContext, context) => {\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        const { group } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n        if (group) {\n            await group.closeAllEditors();\n            if (group.count === 0 && editorGroupService.getGroup(group.id) ) {\n                editorGroupService.removeGroup(group);\n            }\n        }\n    });\n}\nfunction registerFocusEditorGroupWihoutWrapCommands() {\n    const commands = [\n        {\n            id: FOCUS_LEFT_GROUP_WITHOUT_WRAP_COMMAND_ID,\n            direction: 2\n        },\n        {\n            id: FOCUS_RIGHT_GROUP_WITHOUT_WRAP_COMMAND_ID,\n            direction: 3\n        },\n        {\n            id: FOCUS_ABOVE_GROUP_WITHOUT_WRAP_COMMAND_ID,\n            direction: 0 ,\n        },\n        {\n            id: FOCUS_BELOW_GROUP_WITHOUT_WRAP_COMMAND_ID,\n            direction: 1\n        }\n    ];\n    for (const command of commands) {\n        CommandsRegistry.registerCommand(command.id, async (accessor) => {\n            const editorGroupService = accessor.get(IEditorGroupsService);\n            const group = editorGroupService.findGroup({ direction: command.direction }, editorGroupService.activeGroup, false);\n            group?.focus();\n        });\n    }\n}\nfunction registerSplitEditorInGroupCommands() {\n    async function splitEditorInGroup(accessor, resourceOrContext, context) {\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        const instantiationService = accessor.get(IInstantiationService);\n        const { group, editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n        if (!editor) {\n            return;\n        }\n        await group.replaceEditors([{\n                editor,\n                replacement: instantiationService.createInstance(SideBySideEditorInput, undefined, undefined, editor, editor),\n                forceReplaceDirty: true\n            }]);\n    }\n    registerAction2(class extends Action2 {\n        constructor() {\n            super({\n                id: SPLIT_EDITOR_IN_GROUP,\n                title: { value: ( localize('splitEditorInGroup', \"Split Editor in Group\")), original: 'Split Editor in Group' },\n                category: Categories.View,\n                precondition: ActiveEditorCanSplitInGroupContext,\n                f1: true,\n                keybinding: {\n                    weight: 200 ,\n                    when: ActiveEditorCanSplitInGroupContext,\n                    primary: KeyChord(2048  | 41 , 2048  | 1024  | 93 )\n                }\n            });\n        }\n        run(accessor, resourceOrContext, context) {\n            return splitEditorInGroup(accessor, resourceOrContext, context);\n        }\n    });\n    async function joinEditorInGroup(accessor, resourceOrContext, context) {\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        const { group, editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n        if (!(editor instanceof SideBySideEditorInput)) {\n            return;\n        }\n        let options = undefined;\n        const activeEditorPane = group.activeEditorPane;\n        if (activeEditorPane instanceof SideBySideEditor && group.activeEditor === editor) {\n            for (const pane of [activeEditorPane.getPrimaryEditorPane(), activeEditorPane.getSecondaryEditorPane()]) {\n                if (pane?.hasFocus()) {\n                    options = { viewState: pane.getViewState() };\n                    break;\n                }\n            }\n        }\n        await group.replaceEditors([{\n                editor,\n                replacement: editor.primary,\n                options\n            }]);\n    }\n    registerAction2(class extends Action2 {\n        constructor() {\n            super({\n                id: JOIN_EDITOR_IN_GROUP,\n                title: { value: ( localize('joinEditorInGroup', \"Join Editor in Group\")), original: 'Join Editor in Group' },\n                category: Categories.View,\n                precondition: SideBySideEditorActiveContext,\n                f1: true,\n                keybinding: {\n                    weight: 200 ,\n                    when: SideBySideEditorActiveContext,\n                    primary: KeyChord(2048  | 41 , 2048  | 1024  | 93 )\n                }\n            });\n        }\n        run(accessor, resourceOrContext, context) {\n            return joinEditorInGroup(accessor, resourceOrContext, context);\n        }\n    });\n    registerAction2(class extends Action2 {\n        constructor() {\n            super({\n                id: TOGGLE_SPLIT_EDITOR_IN_GROUP,\n                title: { value: ( localize('toggleJoinEditorInGroup', \"Toggle Split Editor in Group\")), original: 'Toggle Split Editor in Group' },\n                category: Categories.View,\n                precondition: ( ContextKeyExpr.or(ActiveEditorCanSplitInGroupContext, SideBySideEditorActiveContext)),\n                f1: true\n            });\n        }\n        async run(accessor, resourceOrContext, context) {\n            const editorGroupService = accessor.get(IEditorGroupsService);\n            const { editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n            if (editor instanceof SideBySideEditorInput) {\n                await joinEditorInGroup(accessor, resourceOrContext, context);\n            }\n            else if (editor) {\n                await splitEditorInGroup(accessor, resourceOrContext, context);\n            }\n        }\n    });\n    registerAction2(class extends Action2 {\n        constructor() {\n            super({\n                id: TOGGLE_SPLIT_EDITOR_IN_GROUP_LAYOUT,\n                title: { value: ( localize('toggleSplitEditorInGroupLayout', \"Toggle Layout of Split Editor in Group\")), original: 'Toggle Layout of Split Editor in Group' },\n                category: Categories.View,\n                precondition: SideBySideEditorActiveContext,\n                f1: true\n            });\n        }\n        async run(accessor) {\n            const configurationService = accessor.get(IConfigurationService);\n            const currentSetting = configurationService.getValue(SideBySideEditor.SIDE_BY_SIDE_LAYOUT_SETTING);\n            let newSetting;\n            if (currentSetting !== 'horizontal') {\n                newSetting = 'horizontal';\n            }\n            else {\n                newSetting = 'vertical';\n            }\n            return configurationService.updateValue(SideBySideEditor.SIDE_BY_SIDE_LAYOUT_SETTING, newSetting);\n        }\n    });\n}\nfunction registerFocusSideEditorsCommands() {\n    registerAction2(class extends Action2 {\n        constructor() {\n            super({\n                id: FOCUS_FIRST_SIDE_EDITOR,\n                title: { value: ( localize('focusLeftSideEditor', \"Focus First Side in Active Editor\")), original: 'Focus First Side in Active Editor' },\n                category: Categories.View,\n                precondition: ( ContextKeyExpr.or(SideBySideEditorActiveContext, TextCompareEditorActiveContext)),\n                f1: true\n            });\n        }\n        async run(accessor) {\n            const editorService = accessor.get(IEditorService);\n            const commandService = accessor.get(ICommandService);\n            const activeEditorPane = editorService.activeEditorPane;\n            if (activeEditorPane instanceof SideBySideEditor) {\n                activeEditorPane.getSecondaryEditorPane()?.focus();\n            }\n            else if (activeEditorPane instanceof TextDiffEditor) {\n                await commandService.executeCommand(DIFF_FOCUS_SECONDARY_SIDE);\n            }\n        }\n    });\n    registerAction2(class extends Action2 {\n        constructor() {\n            super({\n                id: FOCUS_SECOND_SIDE_EDITOR,\n                title: { value: ( localize('focusRightSideEditor', \"Focus Second Side in Active Editor\")), original: 'Focus Second Side in Active Editor' },\n                category: Categories.View,\n                precondition: ( ContextKeyExpr.or(SideBySideEditorActiveContext, TextCompareEditorActiveContext)),\n                f1: true\n            });\n        }\n        async run(accessor) {\n            const editorService = accessor.get(IEditorService);\n            const commandService = accessor.get(ICommandService);\n            const activeEditorPane = editorService.activeEditorPane;\n            if (activeEditorPane instanceof SideBySideEditor) {\n                activeEditorPane.getPrimaryEditorPane()?.focus();\n            }\n            else if (activeEditorPane instanceof TextDiffEditor) {\n                await commandService.executeCommand(DIFF_FOCUS_PRIMARY_SIDE);\n            }\n        }\n    });\n    registerAction2(class extends Action2 {\n        constructor() {\n            super({\n                id: FOCUS_OTHER_SIDE_EDITOR,\n                title: { value: ( localize('focusOtherSideEditor', \"Focus Other Side in Active Editor\")), original: 'Focus Other Side in Active Editor' },\n                category: Categories.View,\n                precondition: ( ContextKeyExpr.or(SideBySideEditorActiveContext, TextCompareEditorActiveContext)),\n                f1: true\n            });\n        }\n        async run(accessor) {\n            const editorService = accessor.get(IEditorService);\n            const commandService = accessor.get(ICommandService);\n            const activeEditorPane = editorService.activeEditorPane;\n            if (activeEditorPane instanceof SideBySideEditor) {\n                if (activeEditorPane.getPrimaryEditorPane()?.hasFocus()) {\n                    activeEditorPane.getSecondaryEditorPane()?.focus();\n                }\n                else {\n                    activeEditorPane.getPrimaryEditorPane()?.focus();\n                }\n            }\n            else if (activeEditorPane instanceof TextDiffEditor) {\n                await commandService.executeCommand(DIFF_FOCUS_OTHER_SIDE);\n            }\n        }\n    });\n}\nfunction registerOtherEditorCommands() {\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: KEEP_EDITOR_COMMAND_ID,\n        weight: 200 ,\n        when: undefined,\n        primary: KeyChord(2048  | 41 , 3 ),\n        handler: async (accessor, resourceOrContext, context) => {\n            const editorGroupService = accessor.get(IEditorGroupsService);\n            const { group, editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n            if (group && editor) {\n                return group.pinEditor(editor);\n            }\n        }\n    });\n    CommandsRegistry.registerCommand({\n        id: TOGGLE_KEEP_EDITORS_COMMAND_ID,\n        handler: accessor => {\n            const configurationService = accessor.get(IConfigurationService);\n            const currentSetting = configurationService.getValue('workbench.editor.enablePreview');\n            const newSetting = currentSetting === true ? false : true;\n            configurationService.updateValue('workbench.editor.enablePreview', newSetting);\n        }\n    });\n    function setEditorGroupLock(accessor, resourceOrContext, context, locked) {\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        const { group } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n        group?.lock(locked ?? !group.isLocked);\n    }\n    registerAction2(class extends Action2 {\n        constructor() {\n            super({\n                id: TOGGLE_LOCK_GROUP_COMMAND_ID,\n                title: { value: ( localize('toggleEditorGroupLock', \"Toggle Editor Group Lock\")), original: 'Toggle Editor Group Lock' },\n                category: Categories.View,\n                precondition: MultipleEditorGroupsContext,\n                f1: true\n            });\n        }\n        async run(accessor, resourceOrContext, context) {\n            setEditorGroupLock(accessor, resourceOrContext, context);\n        }\n    });\n    registerAction2(class extends Action2 {\n        constructor() {\n            super({\n                id: LOCK_GROUP_COMMAND_ID,\n                title: { value: ( localize('lockEditorGroup', \"Lock Editor Group\")), original: 'Lock Editor Group' },\n                category: Categories.View,\n                precondition: ( ContextKeyExpr.and(MultipleEditorGroupsContext, ( ActiveEditorGroupLockedContext.toNegated()))),\n                f1: true\n            });\n        }\n        async run(accessor, resourceOrContext, context) {\n            setEditorGroupLock(accessor, resourceOrContext, context, true);\n        }\n    });\n    registerAction2(class extends Action2 {\n        constructor() {\n            super({\n                id: UNLOCK_GROUP_COMMAND_ID,\n                title: { value: ( localize('unlockEditorGroup', \"Unlock Editor Group\")), original: 'Unlock Editor Group' },\n                precondition: ( ContextKeyExpr.and(MultipleEditorGroupsContext, ActiveEditorGroupLockedContext)),\n                category: Categories.View,\n                f1: true\n            });\n        }\n        async run(accessor, resourceOrContext, context) {\n            setEditorGroupLock(accessor, resourceOrContext, context, false);\n        }\n    });\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: PIN_EDITOR_COMMAND_ID,\n        weight: 200 ,\n        when: ( ActiveEditorStickyContext.toNegated()),\n        primary: KeyChord(2048  | 41 , 1024  | 3 ),\n        handler: async (accessor, resourceOrContext, context) => {\n            const editorGroupService = accessor.get(IEditorGroupsService);\n            const { group, editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n            if (group && editor) {\n                return group.stickEditor(editor);\n            }\n        }\n    });\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: DIFF_OPEN_SIDE,\n        weight: 200 ,\n        when: EditorContextKeys.inDiffEditor,\n        primary: KeyChord(2048  | 41 , 1024  | 45 ),\n        handler: async (accessor) => {\n            const editorService = accessor.get(IEditorService);\n            const editorGroupService = accessor.get(IEditorGroupsService);\n            const activeEditor = editorService.activeEditor;\n            const activeTextEditorControl = editorService.activeTextEditorControl;\n            if (!isDiffEditor(activeTextEditorControl) || !(activeEditor instanceof DiffEditorInput)) {\n                return;\n            }\n            let editor;\n            const originalEditor = activeTextEditorControl.getOriginalEditor();\n            if (originalEditor.hasTextFocus()) {\n                editor = activeEditor.original;\n            }\n            else {\n                editor = activeEditor.modified;\n            }\n            return editorGroupService.activeGroup.openEditor(editor);\n        }\n    });\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: UNPIN_EDITOR_COMMAND_ID,\n        weight: 200 ,\n        when: ActiveEditorStickyContext,\n        primary: KeyChord(2048  | 41 , 1024  | 3 ),\n        handler: async (accessor, resourceOrContext, context) => {\n            const editorGroupService = accessor.get(IEditorGroupsService);\n            const { group, editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n            if (group && editor) {\n                return group.unstickEditor(editor);\n            }\n        }\n    });\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: SHOW_EDITORS_IN_GROUP,\n        weight: 200 ,\n        when: undefined,\n        primary: undefined,\n        handler: (accessor, resourceOrContext, context) => {\n            const editorGroupService = accessor.get(IEditorGroupsService);\n            const quickInputService = accessor.get(IQuickInputService);\n            const commandsContext = getCommandsContext(resourceOrContext, context);\n            if (commandsContext && typeof commandsContext.groupId === 'number') {\n                const group = editorGroupService.getGroup(commandsContext.groupId);\n                if (group) {\n                    editorGroupService.activateGroup(group);\n                }\n            }\n            return quickInputService.quickAccess.show(ActiveGroupEditorsByMostRecentlyUsedQuickAccess.PREFIX);\n        }\n    });\n}\nfunction getEditorsContext(accessor, resourceOrContext, context) {\n    const editorGroupService = accessor.get(IEditorGroupsService);\n    const listService = accessor.get(IListService);\n    const editorContext = getMultiSelectedEditorContexts(getCommandsContext(resourceOrContext, context), listService, editorGroupService);\n    const activeGroup = editorGroupService.activeGroup;\n    if (editorContext.length === 0 && activeGroup.activeEditor) {\n        editorContext.push({\n            groupId: activeGroup.id,\n            editorIndex: activeGroup.getIndexOfEditor(activeGroup.activeEditor)\n        });\n    }\n    return {\n        editors: editorContext,\n        groups: ( distinct(( editorContext.map(context => context.groupId))).map(groupId => editorGroupService.getGroup(groupId)))\n    };\n}\nfunction getCommandsContext(resourceOrContext, context) {\n    if (URI.isUri(resourceOrContext)) {\n        return context;\n    }\n    if (resourceOrContext && typeof resourceOrContext.groupId === 'number') {\n        return resourceOrContext;\n    }\n    if (context && typeof context.groupId === 'number') {\n        return context;\n    }\n    return undefined;\n}\nfunction resolveCommandsContext(editorGroupService, context) {\n    let group = context && typeof context.groupId === 'number' ? editorGroupService.getGroup(context.groupId) : undefined;\n    let editor = group && context && typeof context.editorIndex === 'number' ? group.getEditorByIndex(context.editorIndex) ?? undefined : undefined;\n    if (!group) {\n        group = editorGroupService.activeGroup;\n    }\n    if (!editor) {\n        editor = group.activeEditor ?? undefined;\n    }\n    return { group, editor };\n}\nfunction getMultiSelectedEditorContexts(editorContext, listService, editorGroupService) {\n    const list = listService.lastFocusedList;\n    if (list instanceof List && list.getHTMLElement() === document.activeElement) {\n        const elementToContext = (element) => {\n            if (isEditorGroup(element)) {\n                return { groupId: element.id, editorIndex: undefined };\n            }\n            const group = editorGroupService.getGroup(element.groupId);\n            return { groupId: element.groupId, editorIndex: group ? group.getIndexOfEditor(element.editor) : -1 };\n        };\n        const onlyEditorGroupAndEditor = (e) => isEditorGroup(e) || isEditorIdentifier(e);\n        const focusedElements = list.getFocusedElements().filter(onlyEditorGroupAndEditor);\n        const focus = editorContext ? editorContext : focusedElements.length ? ( focusedElements.map(elementToContext))[0] : undefined;\n        if (focus) {\n            const selection = list.getSelectedElements().filter(onlyEditorGroupAndEditor);\n            if (selection.length > 0) {\n                return ( selection.map(elementToContext));\n            }\n            return [focus];\n        }\n    }\n    return !!editorContext ? [editorContext] : [];\n}\nfunction setup() {\n    registerActiveEditorMoveCopyCommand();\n    registerEditorGroupsLayoutCommands();\n    registerDiffEditorCommands();\n    registerOpenEditorAPICommands();\n    registerOpenEditorAtIndexCommands();\n    registerCloseEditorCommands();\n    registerOtherEditorCommands();\n    registerSplitEditorInGroupCommands();\n    registerFocusSideEditorsCommands();\n    registerFocusEditorGroupAtIndexCommands();\n    registerSplitEditorCommands();\n    registerFocusEditorGroupWihoutWrapCommands();\n}\nexport { API_OPEN_DIFF_EDITOR_COMMAND_ID, API_OPEN_EDITOR_COMMAND_ID, API_OPEN_WITH_EDITOR_COMMAND_ID, CLOSE_EDITORS_AND_GROUP_COMMAND_ID, CLOSE_EDITORS_IN_GROUP_COMMAND_ID, CLOSE_EDITORS_TO_THE_RIGHT_COMMAND_ID, CLOSE_EDITOR_COMMAND_ID, CLOSE_EDITOR_GROUP_COMMAND_ID, CLOSE_OTHER_EDITORS_IN_GROUP_COMMAND_ID, CLOSE_PINNED_EDITOR_COMMAND_ID, CLOSE_SAVED_EDITORS_COMMAND_ID, COPY_ACTIVE_EDITOR_COMMAND_ID, DIFF_FOCUS_OTHER_SIDE, DIFF_FOCUS_PRIMARY_SIDE, DIFF_FOCUS_SECONDARY_SIDE, DIFF_OPEN_SIDE, FOCUS_ABOVE_GROUP_WITHOUT_WRAP_COMMAND_ID, FOCUS_BELOW_GROUP_WITHOUT_WRAP_COMMAND_ID, FOCUS_FIRST_SIDE_EDITOR, FOCUS_LEFT_GROUP_WITHOUT_WRAP_COMMAND_ID, FOCUS_OTHER_SIDE_EDITOR, FOCUS_RIGHT_GROUP_WITHOUT_WRAP_COMMAND_ID, FOCUS_SECOND_SIDE_EDITOR, GOTO_NEXT_CHANGE, GOTO_PREVIOUS_CHANGE, JOIN_EDITOR_IN_GROUP, KEEP_EDITOR_COMMAND_ID, LAYOUT_EDITOR_GROUPS_COMMAND_ID, LOCK_GROUP_COMMAND_ID, MOVE_ACTIVE_EDITOR_COMMAND_ID, OPEN_EDITOR_AT_INDEX_COMMAND_ID, PIN_EDITOR_COMMAND_ID, REOPEN_WITH_COMMAND_ID, SHOW_EDITORS_IN_GROUP, SPLIT_EDITOR_DOWN, SPLIT_EDITOR_IN_GROUP, SPLIT_EDITOR_LEFT, SPLIT_EDITOR_RIGHT, SPLIT_EDITOR_UP, TOGGLE_DIFF_IGNORE_TRIM_WHITESPACE, TOGGLE_DIFF_SIDE_BY_SIDE, TOGGLE_KEEP_EDITORS_COMMAND_ID, TOGGLE_LOCK_GROUP_COMMAND_ID, TOGGLE_SPLIT_EDITOR_IN_GROUP, TOGGLE_SPLIT_EDITOR_IN_GROUP_LAYOUT, UNLOCK_GROUP_COMMAND_ID, UNPIN_EDITOR_COMMAND_ID, getMultiSelectedEditorContexts, setup, splitEditor };\n", "import { preferredSideBySideGroupDirection } from './editorGroupsService.js';\nimport { ACTIVE_GROUP, SIDE_GROUP } from './editorService.js';\nfunction columnToEditorGroup(editorGroupService, configurationService, column = ACTIVE_GROUP) {\n    if (column === ACTIVE_GROUP || column === SIDE_GROUP) {\n        return column;\n    }\n    let groupInColumn = editorGroupService.getGroups(2 )[column];\n    if (!groupInColumn && column < 9) {\n        for (let i = 0; i <= column; i++) {\n            const editorGroups = editorGroupService.getGroups(2 );\n            if (!editorGroups[i]) {\n                editorGroupService.addGroup(editorGroups[i - 1], preferredSideBySideGroupDirection(configurationService));\n            }\n        }\n        groupInColumn = editorGroupService.getGroups(2 )[column];\n    }\n    return groupInColumn?.id ?? SIDE_GROUP;\n}\nfunction editorGroupToColumn(editorGroupService, editorGroup) {\n    const group = (typeof editorGroup === 'number') ? editorGroupService.getGroup(editorGroup) : editorGroup;\n    return editorGroupService.getGroups(2 ).indexOf(group ?? editorGroupService.activeGroup);\n}\nexport { columnToEditorGroup, editorGroupToColumn };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { deepClone } from 'monaco-editor/esm/vs/base/common/objects.js';\nimport { assertIsDefined, isObject } from 'monaco-editor/esm/vs/base/common/types.js';\nimport '../../../../../../../override/vs/workbench/browser/parts/editor/textEditor.js';\nimport { TEXT_DIFF_EDITOR_ID, isTextEditorViewState, createTooLargeFileError, EditorExtensions, isEditorInput } from '../../../common/editor.js';\nimport { applyTextEditorOptions } from '../../../common/editor/editorOptions.js';\nimport { DiffEditorInput } from '../../../common/editor/diffEditorInput.js';\nimport { DiffEditorWidget } from 'monaco-editor/esm/vs/editor/browser/widget/diffEditorWidget.js';\nimport { TextDiffEditorModel } from '../../../common/editor/textDiffEditorModel.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { ITextResourceConfigurationService } from 'monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { EditorActivation } from 'monaco-editor/esm/vs/platform/editor/common/editor.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { isEqual } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { multibyteAwareBtoa } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { TooLargeFileOperationError, ByteSize, IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { IPreferencesService } from '../../../services/preferences/common/preferences.js';\nimport { StopWatch } from 'monaco-editor/esm/vs/base/common/stopwatch.js';\nimport { DiffEditorWidget2 } from 'monaco-editor/esm/vs/editor/browser/widget/diffEditorWidget2/diffEditorWidget2.js';\nimport { AbstractTextEditor } from './textEditor.js';\nvar TextDiffEditor_1;\nlet TextDiffEditor = class TextDiffEditor extends AbstractTextEditor {\n    static { TextDiffEditor_1 = this; }\n    static { this.ID = TEXT_DIFF_EDITOR_ID; }\n    static { this.widgetCounter = 0; }\n    get scopedContextKeyService() {\n        if (!this.diffEditorControl) {\n            return undefined;\n        }\n        const originalEditor = this.diffEditorControl.getOriginalEditor();\n        const modifiedEditor = this.diffEditorControl.getModifiedEditor();\n        return (originalEditor.hasTextFocus() ? originalEditor : modifiedEditor).invokeWithinContext(accessor => accessor.get(IContextKeyService));\n    }\n    constructor(telemetryService, instantiationService, storageService, configurationService, editorService, themeService, editorGroupService, fileService, preferencesService) {\n        super(TextDiffEditor_1.ID, telemetryService, instantiationService, storageService, configurationService, themeService, editorService, editorGroupService, fileService);\n        this.preferencesService = preferencesService;\n        this.diffEditorControl = undefined;\n        this.diffNavigatorDisposables = this._register(( (new DisposableStore())));\n        this.inputLifecycleStopWatch = undefined;\n    }\n    getTitle() {\n        if (this.input) {\n            return this.input.getName();\n        }\n        return (\n             (localize('textDiffEditor', \"Text Diff Editor\"))\n        );\n    }\n    createEditorControl(parent, configuration) {\n        TextDiffEditor_1.widgetCounter++;\n        let useVersion2 = this.textResourceConfigurationService.getValue(undefined, 'diffEditor.experimental.useVersion2');\n        if (useVersion2 === 'first') {\n            useVersion2 = TextDiffEditor_1.widgetCounter === 1;\n        }\n        if (useVersion2) {\n            this.diffEditorControl = this._register(this.instantiationService.createInstance(DiffEditorWidget2, parent, configuration, {}));\n        }\n        else {\n            this.diffEditorControl = this._register(this.instantiationService.createInstance(DiffEditorWidget, parent, configuration, {}));\n        }\n    }\n    updateEditorControlOptions(options) {\n        this.diffEditorControl?.updateOptions(options);\n    }\n    getMainControl() {\n        return this.diffEditorControl?.getModifiedEditor();\n    }\n    async setInput(input, options, context, token) {\n        this.inputLifecycleStopWatch = undefined;\n        this.diffNavigatorDisposables.clear();\n        await super.setInput(input, options, context, token);\n        try {\n            const resolvedModel = await input.resolve(options);\n            if (token.isCancellationRequested) {\n                return undefined;\n            }\n            if (!(resolvedModel instanceof TextDiffEditorModel)) {\n                this.openAsBinary(input, options);\n                return undefined;\n            }\n            const control = assertIsDefined(this.diffEditorControl);\n            const resolvedDiffEditorModel = resolvedModel;\n            const vm = resolvedDiffEditorModel.textDiffEditorModel ? control.createViewModel(resolvedDiffEditorModel.textDiffEditorModel) : null;\n            await vm?.waitForDiff();\n            control.setModel(vm);\n            let hasPreviousViewState = false;\n            if (!isTextEditorViewState(options?.viewState)) {\n                hasPreviousViewState = this.restoreTextDiffEditorViewState(input, options, context, control);\n            }\n            let optionsGotApplied = false;\n            if (options) {\n                optionsGotApplied = applyTextEditorOptions(options, control, 1 );\n            }\n            if (!optionsGotApplied && !hasPreviousViewState) {\n                control.revealFirstDiff();\n            }\n            control.updateOptions({\n                ...this.getReadonlyConfiguration(resolvedDiffEditorModel.modifiedModel?.isReadonly()),\n                originalEditable: !resolvedDiffEditorModel.originalModel?.isReadonly()\n            });\n            this.inputLifecycleStopWatch = ( (new StopWatch(false)));\n        }\n        catch (error) {\n            await this.handleSetInputError(error, input, options);\n        }\n    }\n    async handleSetInputError(error, input, options) {\n        if (this.isFileBinaryError(error)) {\n            return this.openAsBinary(input, options);\n        }\n        if (error.fileOperationResult === 7  && this.group) {\n            let message;\n            if (error instanceof TooLargeFileOperationError) {\n                message = ( (localize(\n                    'fileTooLargeForHeapErrorWithSize',\n                    \"At least one file is not displayed in the text compare editor because it is very large ({0}).\",\n                    ByteSize.formatSize(error.size)\n                )));\n            }\n            else {\n                message = ( (localize(\n                    'fileTooLargeForHeapErrorWithoutSize',\n                    \"At least one file is not displayed in the text compare editor because it is very large.\"\n                )));\n            }\n            throw createTooLargeFileError(this.group, input, options, message, this.preferencesService);\n        }\n        throw error;\n    }\n    restoreTextDiffEditorViewState(editor, options, context, control) {\n        const editorViewState = this.loadEditorViewState(editor, context);\n        if (editorViewState) {\n            if (options?.selection && editorViewState.modified) {\n                editorViewState.modified.cursorState = [];\n            }\n            control.restoreViewState(editorViewState);\n            return true;\n        }\n        return false;\n    }\n    openAsBinary(input, options) {\n        const original = input.original;\n        const modified = input.modified;\n        const binaryDiffInput = this.instantiationService.createInstance(DiffEditorInput, input.getName(), input.getDescription(), original, modified, true);\n        const fileEditorFactory = ( (Registry.as(EditorExtensions.EditorFactory))).getFileEditorFactory();\n        if (fileEditorFactory.isFileEditor(original)) {\n            original.setForceOpenAsBinary();\n        }\n        if (fileEditorFactory.isFileEditor(modified)) {\n            modified.setForceOpenAsBinary();\n        }\n        (this.group ?? this.editorGroupService.activeGroup).replaceEditors([{\n                editor: input,\n                replacement: binaryDiffInput,\n                options: {\n                    ...options,\n                    activation: EditorActivation.PRESERVE,\n                    pinned: this.group?.isPinned(input),\n                    sticky: this.group?.isSticky(input)\n                }\n            }]);\n    }\n    setOptions(options) {\n        super.setOptions(options);\n        if (options) {\n            applyTextEditorOptions(options, assertIsDefined(this.diffEditorControl), 0 );\n        }\n    }\n    shouldHandleConfigurationChangeEvent(e, resource) {\n        if (super.shouldHandleConfigurationChangeEvent(e, resource)) {\n            return true;\n        }\n        return e.affectsConfiguration(resource, 'diffEditor') || e.affectsConfiguration(resource, 'accessibility.verbosity.diffEditor');\n    }\n    computeConfiguration(configuration) {\n        const editorConfiguration = super.computeConfiguration(configuration);\n        if (isObject(configuration.diffEditor)) {\n            const diffEditorConfiguration = deepClone(configuration.diffEditor);\n            diffEditorConfiguration.diffCodeLens = diffEditorConfiguration.codeLens;\n            delete diffEditorConfiguration.codeLens;\n            diffEditorConfiguration.diffWordWrap = diffEditorConfiguration.wordWrap;\n            delete diffEditorConfiguration.wordWrap;\n            Object.assign(editorConfiguration, diffEditorConfiguration);\n        }\n        const verbose = configuration.accessibility?.verbosity?.diffEditor ?? false;\n        editorConfiguration.accessibilityVerbose = verbose;\n        return editorConfiguration;\n    }\n    getConfigurationOverrides() {\n        return {\n            ...super.getConfigurationOverrides(),\n            ...this.getReadonlyConfiguration(this.input?.isReadonly()),\n            originalEditable: this.input instanceof DiffEditorInput && !this.input.original.isReadonly(),\n            lineDecorationsWidth: '2ch'\n        };\n    }\n    updateReadonly(input) {\n        if (input instanceof DiffEditorInput) {\n            this.diffEditorControl?.updateOptions({\n                ...this.getReadonlyConfiguration(input.isReadonly()),\n                originalEditable: !input.original.isReadonly(),\n            });\n        }\n        else {\n            super.updateReadonly(input);\n        }\n    }\n    isFileBinaryError(error) {\n        if (Array.isArray(error)) {\n            const errors = error;\n            return (\n                 (errors.some(error => this.isFileBinaryError(error)))\n            );\n        }\n        return error.textFileOperationResult === 0 ;\n    }\n    clearInput() {\n        super.clearInput();\n        const inputLifecycleElapsed = this.inputLifecycleStopWatch?.elapsed();\n        this.inputLifecycleStopWatch = undefined;\n        if (typeof inputLifecycleElapsed === 'number') {\n            this.logInputLifecycleTelemetry(inputLifecycleElapsed, this.getControl()?.getModel()?.modified?.getLanguageId());\n        }\n        this.diffNavigatorDisposables.clear();\n        this.diffEditorControl?.setModel(null);\n    }\n    logInputLifecycleTelemetry(duration, languageId) {\n        let collapseUnchangedRegions = false;\n        if (this.diffEditorControl instanceof DiffEditorWidget2) {\n            collapseUnchangedRegions = this.diffEditorControl.collapseUnchangedRegions;\n        }\n        this.telemetryService.publicLog2('diffEditor.editorVisibleTime', {\n            editorVisibleTimeMs: duration,\n            languageId: languageId ?? '',\n            collapseUnchangedRegions,\n        });\n    }\n    getControl() {\n        return this.diffEditorControl;\n    }\n    focus() {\n        this.diffEditorControl?.focus();\n    }\n    hasFocus() {\n        return this.diffEditorControl?.hasTextFocus() || super.hasFocus();\n    }\n    setEditorVisible(visible, group) {\n        super.setEditorVisible(visible, group);\n        if (visible) {\n            this.diffEditorControl?.onVisible();\n        }\n        else {\n            this.diffEditorControl?.onHide();\n        }\n    }\n    layout(dimension) {\n        this.diffEditorControl?.layout(dimension);\n    }\n    setBoundarySashes(sashes) {\n        this.diffEditorControl?.setBoundarySashes(sashes);\n    }\n    tracksEditorViewState(input) {\n        return input instanceof DiffEditorInput;\n    }\n    computeEditorViewState(resource) {\n        if (!this.diffEditorControl) {\n            return undefined;\n        }\n        const model = this.diffEditorControl.getModel();\n        if (!model || !model.modified || !model.original) {\n            return undefined;\n        }\n        const modelUri = this.toEditorViewStateResource(model);\n        if (!modelUri) {\n            return undefined;\n        }\n        if (!isEqual(modelUri, resource)) {\n            return undefined;\n        }\n        return this.diffEditorControl.saveViewState() ?? undefined;\n    }\n    toEditorViewStateResource(modelOrInput) {\n        let original;\n        let modified;\n        if (modelOrInput instanceof DiffEditorInput) {\n            original = modelOrInput.original.resource;\n            modified = modelOrInput.modified.resource;\n        }\n        else if (!isEditorInput(modelOrInput)) {\n            original = modelOrInput.original.uri;\n            modified = modelOrInput.modified.uri;\n        }\n        if (!original || !modified) {\n            return undefined;\n        }\n        return (\n             (URI.from({ scheme: 'diff', path: `${multibyteAwareBtoa(( ( original.toString())))}${multibyteAwareBtoa(( ( modified.toString())))}` }))\n        );\n    }\n};\nTextDiffEditor = TextDiffEditor_1 = ( (__decorate([\n    ( (__param(0, ITelemetryService))),\n    ( (__param(1, IInstantiationService))),\n    ( (__param(2, IStorageService))),\n    ( (__param(3, ITextResourceConfigurationService))),\n    ( (__param(4, IEditorService))),\n    ( (__param(5, IThemeService))),\n    ( (__param(6, IEditorGroupsService))),\n    ( (__param(7, IFileService))),\n    ( (__param(8, IPreferencesService)))\n], TextDiffEditor)));\nexport { TextDiffEditor };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { deepClone, distinct } from 'monaco-editor/esm/vs/base/common/objects.js';\nimport { Emitter, Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { isObject, assertIsDefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { MutableDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { computeEditorAriaLabel } from '../../editor.js';\nimport { AbstractEditorWithViewState } from './editorWithViewState.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ITextResourceConfigurationService } from 'monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js';\nimport { IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nvar AbstractTextEditor_1;\nlet AbstractTextEditor = class AbstractTextEditor extends AbstractEditorWithViewState {\n    static { AbstractTextEditor_1 = this; }\n    static { this.VIEW_STATE_PREFERENCE_KEY = 'textEditorViewState'; }\n    constructor(id, telemetryService, instantiationService, storageService, textResourceConfigurationService, themeService, editorService, editorGroupService, fileService) {\n        super(id, AbstractTextEditor_1.VIEW_STATE_PREFERENCE_KEY, telemetryService, instantiationService, storageService, textResourceConfigurationService, themeService, editorService, editorGroupService);\n        this.fileService = fileService;\n        this._onDidChangeSelection = this._register(( new Emitter()));\n        this.onDidChangeSelection = this._onDidChangeSelection.event;\n        this.inputListener = this._register(( new MutableDisposable()));\n        this._register(this.textResourceConfigurationService.onDidChangeConfiguration(e => this.handleConfigurationChangeEvent(e)));\n        this._register(Event.any(this.editorGroupService.onDidAddGroup, this.editorGroupService.onDidRemoveGroup)(() => {\n            const ariaLabel = this.computeAriaLabel();\n            this.editorContainer?.setAttribute('aria-label', ariaLabel);\n            this.updateEditorControlOptions({ ariaLabel });\n        }));\n        this._register(this.fileService.onDidChangeFileSystemProviderCapabilities(e => this.onDidChangeFileSystemProvider(e.scheme)));\n        this._register(this.fileService.onDidChangeFileSystemProviderRegistrations(e => this.onDidChangeFileSystemProvider(e.scheme)));\n    }\n    handleConfigurationChangeEvent(e) {\n        const resource = this.getActiveResource();\n        if (!this.shouldHandleConfigurationChangeEvent(e, resource)) {\n            return;\n        }\n        if (this.isVisible()) {\n            this.updateEditorConfiguration(resource);\n        }\n        else {\n            this.hasPendingConfigurationChange = true;\n        }\n    }\n    shouldHandleConfigurationChangeEvent(e, resource) {\n        return e.affectsConfiguration(resource, 'editor');\n    }\n    consumePendingConfigurationChangeEvent() {\n        if (this.hasPendingConfigurationChange) {\n            this.updateEditorConfiguration();\n            this.hasPendingConfigurationChange = false;\n        }\n    }\n    computeConfiguration(configuration) {\n        const editorConfiguration = isObject(configuration.editor) ? deepClone(configuration.editor) : Object.create(null);\n        Object.assign(editorConfiguration, this.getConfigurationOverrides());\n        editorConfiguration.ariaLabel = this.computeAriaLabel();\n        return editorConfiguration;\n    }\n    computeAriaLabel() {\n        return this._input ? computeEditorAriaLabel(this._input, undefined, this.group, this.editorGroupService.count) : ( localize('editor', \"Editor\"));\n    }\n    onDidChangeFileSystemProvider(scheme) {\n        if (!this.input) {\n            return;\n        }\n        if (this.getActiveResource()?.scheme === scheme) {\n            this.updateReadonly(this.input);\n        }\n    }\n    onDidChangeInputCapabilities(input) {\n        if (this.input === input) {\n            this.updateReadonly(input);\n        }\n    }\n    updateReadonly(input) {\n        this.updateEditorControlOptions({ ...this.getReadonlyConfiguration(input.isReadonly()) });\n    }\n    getReadonlyConfiguration(isReadonly) {\n        return {\n            readOnly: !!isReadonly,\n            readOnlyMessage: typeof isReadonly !== 'boolean' ? isReadonly : undefined\n        };\n    }\n    getConfigurationOverrides() {\n        return {\n            overviewRulerLanes: 3,\n            lineNumbersMinChars: 3,\n            fixedOverflowWidgets: true,\n            ...this.getReadonlyConfiguration(this.input?.isReadonly()),\n            renderValidationDecorations: 'on'\n        };\n    }\n    createEditor(parent) {\n        this.editorContainer = parent;\n        this.createEditorControl(parent, this.computeConfiguration(this.textResourceConfigurationService.getValue(this.getActiveResource())));\n        this.registerCodeEditorListeners();\n    }\n    registerCodeEditorListeners() {\n        const mainControl = this.getMainControl();\n        if (mainControl) {\n            this._register(mainControl.onDidChangeModelLanguage(() => this.updateEditorConfiguration()));\n            this._register(mainControl.onDidChangeModel(() => this.updateEditorConfiguration()));\n            this._register(mainControl.onDidChangeCursorPosition(e => this._onDidChangeSelection.fire({ reason: this.toEditorPaneSelectionChangeReason(e) })));\n            this._register(mainControl.onDidChangeModelContent(() => this._onDidChangeSelection.fire({ reason: 3  })));\n        }\n    }\n    toEditorPaneSelectionChangeReason(e) {\n        switch (e.source) {\n            case \"api\" : return 1 ;\n            case \"code.navigation\" : return 4 ;\n            case \"code.jump\" : return 5 ;\n            default: return 2 ;\n        }\n    }\n    getSelection() {\n        const mainControl = this.getMainControl();\n        if (mainControl) {\n            const selection = mainControl.getSelection();\n            if (selection) {\n                return ( new TextEditorPaneSelection(selection));\n            }\n        }\n        return undefined;\n    }\n    async setInput(input, options, context, token) {\n        await super.setInput(input, options, context, token);\n        this.inputListener.value = input.onDidChangeCapabilities(() => this.onDidChangeInputCapabilities(input));\n        this.updateEditorConfiguration();\n        const editorContainer = assertIsDefined(this.editorContainer);\n        editorContainer.setAttribute('aria-label', this.computeAriaLabel());\n    }\n    clearInput() {\n        this.inputListener.clear();\n        super.clearInput();\n    }\n    setEditorVisible(visible, group) {\n        if (visible) {\n            this.consumePendingConfigurationChangeEvent();\n        }\n        super.setEditorVisible(visible, group);\n    }\n    toEditorViewStateResource(input) {\n        return input.resource;\n    }\n    updateEditorConfiguration(resource = this.getActiveResource()) {\n        let configuration = undefined;\n        if (resource) {\n            configuration = this.textResourceConfigurationService.getValue(resource);\n        }\n        if (!configuration) {\n            return;\n        }\n        const editorConfiguration = this.computeConfiguration(configuration);\n        let editorSettingsToApply = editorConfiguration;\n        if (this.lastAppliedEditorOptions) {\n            editorSettingsToApply = distinct(this.lastAppliedEditorOptions, editorSettingsToApply);\n        }\n        if (( Object.keys(editorSettingsToApply)).length > 0) {\n            this.lastAppliedEditorOptions = editorConfiguration;\n            this.updateEditorControlOptions(editorSettingsToApply);\n        }\n    }\n    getActiveResource() {\n        const mainControl = this.getMainControl();\n        if (mainControl) {\n            const model = mainControl.getModel();\n            if (model) {\n                return model.uri;\n            }\n        }\n        if (this.input) {\n            return this.input.resource;\n        }\n        return undefined;\n    }\n    dispose() {\n        this.lastAppliedEditorOptions = undefined;\n        super.dispose();\n    }\n};\nAbstractTextEditor = AbstractTextEditor_1 = ( __decorate([\n    ( __param(1, ITelemetryService)),\n    ( __param(2, IInstantiationService)),\n    ( __param(3, IStorageService)),\n    ( __param(4, ITextResourceConfigurationService)),\n    ( __param(5, IThemeService)),\n    ( __param(6, IEditorService)),\n    ( __param(7, IEditorGroupsService)),\n    ( __param(8, IFileService))\n], AbstractTextEditor));\nclass TextEditorPaneSelection {\n    static { this.TEXT_EDITOR_SELECTION_THRESHOLD = 10; }\n    constructor(textSelection) {\n        this.textSelection = textSelection;\n    }\n    compare(other) {\n        if (!(other instanceof TextEditorPaneSelection)) {\n            return 3 ;\n        }\n        const thisLineNumber = Math.min(this.textSelection.selectionStartLineNumber, this.textSelection.positionLineNumber);\n        const otherLineNumber = Math.min(other.textSelection.selectionStartLineNumber, other.textSelection.positionLineNumber);\n        if (thisLineNumber === otherLineNumber) {\n            return 1 ;\n        }\n        if (Math.abs(thisLineNumber - otherLineNumber) < TextEditorPaneSelection.TEXT_EDITOR_SELECTION_THRESHOLD) {\n            return 2 ;\n        }\n        return 3 ;\n    }\n    restore(options) {\n        const textEditorOptions = {\n            ...options,\n            selection: this.textSelection,\n            selectionRevealType: 1\n        };\n        return textEditorOptions;\n    }\n    log() {\n        return `line: ${this.textSelection.startLineNumber}-${this.textSelection.endLineNumber}, col:  ${this.textSelection.startColumn}-${this.textSelection.endColumn}`;\n    }\n}\nexport { AbstractTextEditor, TextEditorPaneSelection };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { EditorResourceAccessor, SideBySideEditor } from '../../../common/editor.js';\nimport { EditorPane } from './editorPane.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ITextResourceConfigurationService } from 'monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js';\nimport { IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { MutableDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nlet AbstractEditorWithViewState = class AbstractEditorWithViewState extends EditorPane {\n    constructor(id, viewStateStorageKey, telemetryService, instantiationService, storageService, textResourceConfigurationService, themeService, editorService, editorGroupService) {\n        super(id, telemetryService, themeService, storageService);\n        this.instantiationService = instantiationService;\n        this.textResourceConfigurationService = textResourceConfigurationService;\n        this.editorService = editorService;\n        this.editorGroupService = editorGroupService;\n        this.groupListener = this._register(( new MutableDisposable()));\n        this.viewState = this.getEditorMemento(editorGroupService, textResourceConfigurationService, viewStateStorageKey, 100);\n    }\n    setEditorVisible(visible, group) {\n        this.groupListener.value = group?.onWillCloseEditor(e => this.onWillCloseEditor(e));\n        super.setEditorVisible(visible, group);\n    }\n    onWillCloseEditor(e) {\n        const editor = e.editor;\n        if (editor === this.input) {\n            this.updateEditorViewState(editor);\n        }\n    }\n    clearInput() {\n        this.updateEditorViewState(this.input);\n        super.clearInput();\n    }\n    saveState() {\n        this.updateEditorViewState(this.input);\n        super.saveState();\n    }\n    updateEditorViewState(input) {\n        if (!input || !this.tracksEditorViewState(input)) {\n            return;\n        }\n        const resource = this.toEditorViewStateResource(input);\n        if (!resource) {\n            return;\n        }\n        if (!this.tracksDisposedEditorViewState()) {\n            if (!this.editorViewStateDisposables) {\n                this.editorViewStateDisposables = ( new Map());\n            }\n            if (!( this.editorViewStateDisposables.has(input))) {\n                this.editorViewStateDisposables.set(input, Event.once(input.onWillDispose)(() => {\n                    this.clearEditorViewState(resource, this.group);\n                    this.editorViewStateDisposables?.delete(input);\n                }));\n            }\n        }\n        if ((input.isDisposed() && !this.tracksDisposedEditorViewState()) ||\n            (!this.shouldRestoreEditorViewState(input) && (!this.group || !this.group.contains(input)))) {\n            this.clearEditorViewState(resource, this.group);\n        }\n        else if (!input.isDisposed()) {\n            this.saveEditorViewState(resource);\n        }\n    }\n    shouldRestoreEditorViewState(input, context) {\n        if (context?.newInGroup) {\n            return this.textResourceConfigurationService.getValue(EditorResourceAccessor.getOriginalUri(input, { supportSideBySide: SideBySideEditor.PRIMARY }), 'workbench.editor.restoreViewState') === false ? false : true ;\n        }\n        return true;\n    }\n    getViewState() {\n        const input = this.input;\n        if (!input || !this.tracksEditorViewState(input)) {\n            return;\n        }\n        const resource = this.toEditorViewStateResource(input);\n        if (!resource) {\n            return;\n        }\n        return this.computeEditorViewState(resource);\n    }\n    saveEditorViewState(resource) {\n        if (!this.group) {\n            return;\n        }\n        const editorViewState = this.computeEditorViewState(resource);\n        if (!editorViewState) {\n            return;\n        }\n        this.viewState.saveEditorState(this.group, resource, editorViewState);\n    }\n    loadEditorViewState(input, context) {\n        if (!input || !this.group) {\n            return undefined;\n        }\n        if (!this.tracksEditorViewState(input)) {\n            return undefined;\n        }\n        if (!this.shouldRestoreEditorViewState(input, context)) {\n            return undefined;\n        }\n        const resource = this.toEditorViewStateResource(input);\n        if (!resource) {\n            return;\n        }\n        return this.viewState.loadEditorState(this.group, resource);\n    }\n    moveEditorViewState(source, target, comparer) {\n        return this.viewState.moveEditorState(source, target, comparer);\n    }\n    clearEditorViewState(resource, group) {\n        this.viewState.clearEditorState(resource, group);\n    }\n    dispose() {\n        super.dispose();\n        if (this.editorViewStateDisposables) {\n            for (const [, disposables] of this.editorViewStateDisposables) {\n                disposables.dispose();\n            }\n            this.editorViewStateDisposables = undefined;\n        }\n    }\n    tracksDisposedEditorViewState() {\n        return false;\n    }\n};\nAbstractEditorWithViewState = ( __decorate([\n    ( __param(2, ITelemetryService)),\n    ( __param(3, IInstantiationService)),\n    ( __param(4, IStorageService)),\n    ( __param(5, ITextResourceConfigurationService)),\n    ( __param(6, IThemeService)),\n    ( __param(7, IEditorService)),\n    ( __param(8, IEditorGroupsService))\n], AbstractEditorWithViewState));\nexport { AbstractEditorWithViewState };\n", "let AbstractTextEditor = class {};\nclass FakeAbstractTextEditor {\n  static [Symbol.hasInstance](instance) {\n      return AbstractTextEditor != null && instance instanceof AbstractTextEditor\n  }\n}\nfunction setAbstractTextEditor(_AbstractTextEditor) {\n  AbstractTextEditor = _AbstractTextEditor;\n}\nexport { FakeAbstractTextEditor as AbstractTextEditor, setAbstractTextEditor };\n", "import { AbstractTextEditor } from '../../../../../../vscode/src/vs/workbench/browser/parts/editor/textEditor.js';\nexport { TextEditorPaneSelection } from '../../../../../../vscode/src/vs/workbench/browser/parts/editor/textEditor.js';\nimport { setAbstractTextEditor } from './textEditor.weak.js';\nsetAbstractTextEditor(AbstractTextEditor);\nexport { AbstractTextEditor };\n", "import { isTextEditorViewState } from '../editor.js';\nfunction applyTextEditorOptions(options, editor, scrollType) {\n    let applied = false;\n    const viewState = massageEditorViewState(options);\n    if (isTextEditorViewState(viewState)) {\n        editor.restoreViewState(viewState);\n        applied = true;\n    }\n    if (options.selection) {\n        const range = {\n            startLineNumber: options.selection.startLineNumber,\n            startColumn: options.selection.startColumn,\n            endLineNumber: options.selection.endLineNumber ?? options.selection.startLineNumber,\n            endColumn: options.selection.endColumn ?? options.selection.startColumn\n        };\n        editor.setSelection(range, options.selectionSource ?? \"code.navigation\" );\n        if (options.selectionRevealType === 2 ) {\n            editor.revealRangeNearTop(range, scrollType);\n        }\n        else if (options.selectionRevealType === 3 ) {\n            editor.revealRangeNearTopIfOutsideViewport(range, scrollType);\n        }\n        else if (options.selectionRevealType === 1 ) {\n            editor.revealRangeInCenterIfOutsideViewport(range, scrollType);\n        }\n        else {\n            editor.revealRangeInCenter(range, scrollType);\n        }\n        applied = true;\n    }\n    return applied;\n}\nfunction massageEditorViewState(options) {\n    if (!options.selection || !options.viewState) {\n        return options.viewState;\n    }\n    const candidateDiffViewState = options.viewState;\n    if (candidateDiffViewState.modified) {\n        candidateDiffViewState.modified.cursorState = [];\n        return candidateDiffViewState;\n    }\n    const candidateEditorViewState = options.viewState;\n    if (candidateEditorViewState.cursorState) {\n        candidateEditorViewState.cursorState = [];\n    }\n    return candidateEditorViewState;\n}\nexport { applyTextEditorOptions };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport './media/editorquickaccess.css.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { quickPickItemScorerAccessor } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { PickerQuickAccessProvider, TriggerAction } from 'monaco-editor/esm/vs/platform/quickinput/browser/pickerQuickAccess.js';\nimport { IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { EditorResourceAccessor, SideBySideEditor } from '../../../common/editor.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { getIconClasses } from 'monaco-editor/esm/vs/editor/common/services/getIconClasses.js';\nimport { prepareQuery, scoreItemFuzzy, compareItemsByFuzzyScore } from 'monaco-editor/esm/vs/base/common/fuzzyScorer.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nvar ActiveGroupEditorsByMostRecentlyUsedQuickAccess_1, AllEditorsByAppearanceQuickAccess_1, AllEditorsByMostRecentlyUsedQuickAccess_1;\nlet BaseEditorQuickAccessProvider = class BaseEditorQuickAccessProvider extends PickerQuickAccessProvider {\n    constructor(prefix, editorGroupService, editorService, modelService, languageService) {\n        super(prefix, {\n            canAcceptInBackground: true,\n            noResultsPick: {\n                label: ( localize('noViewResults', \"No matching editors\")),\n                groupId: -1\n            }\n        });\n        this.editorGroupService = editorGroupService;\n        this.editorService = editorService;\n        this.modelService = modelService;\n        this.languageService = languageService;\n        this.pickState = new (class {\n            constructor() {\n                this.scorerCache = Object.create(null);\n                this.isQuickNavigating = undefined;\n            }\n            reset(isQuickNavigating) {\n                if (!isQuickNavigating) {\n                    this.scorerCache = Object.create(null);\n                }\n                this.isQuickNavigating = isQuickNavigating;\n            }\n        });\n    }\n    provide(picker, token) {\n        this.pickState.reset(!!picker.quickNavigate);\n        return super.provide(picker, token);\n    }\n    _getPicks(filter) {\n        const query = prepareQuery(filter);\n        const filteredEditorEntries = this.doGetEditorPickItems().filter(entry => {\n            if (!query.normalized) {\n                return true;\n            }\n            const itemScore = scoreItemFuzzy(entry, query, true, quickPickItemScorerAccessor, this.pickState.scorerCache);\n            if (!itemScore.score) {\n                return false;\n            }\n            entry.highlights = { label: itemScore.labelMatch, description: itemScore.descriptionMatch };\n            return true;\n        });\n        if (query.normalized) {\n            const groups = ( this.editorGroupService.getGroups(2 ).map(group => group.id));\n            filteredEditorEntries.sort((entryA, entryB) => {\n                if (entryA.groupId !== entryB.groupId) {\n                    return groups.indexOf(entryA.groupId) - groups.indexOf(entryB.groupId);\n                }\n                return compareItemsByFuzzyScore(entryA, entryB, query, true, quickPickItemScorerAccessor, this.pickState.scorerCache);\n            });\n        }\n        const filteredEditorEntriesWithSeparators = [];\n        if (this.editorGroupService.count > 1) {\n            let lastGroupId = undefined;\n            for (const entry of filteredEditorEntries) {\n                if (typeof lastGroupId !== 'number' || lastGroupId !== entry.groupId) {\n                    const group = this.editorGroupService.getGroup(entry.groupId);\n                    if (group) {\n                        filteredEditorEntriesWithSeparators.push({ type: 'separator', label: group.label });\n                    }\n                    lastGroupId = entry.groupId;\n                }\n                filteredEditorEntriesWithSeparators.push(entry);\n            }\n        }\n        else {\n            filteredEditorEntriesWithSeparators.push(...filteredEditorEntries);\n        }\n        return filteredEditorEntriesWithSeparators;\n    }\n    doGetEditorPickItems() {\n        const editors = this.doGetEditors();\n        const mapGroupIdToGroupAriaLabel = ( new Map());\n        for (const { groupId } of editors) {\n            if (!( mapGroupIdToGroupAriaLabel.has(groupId))) {\n                const group = this.editorGroupService.getGroup(groupId);\n                if (group) {\n                    mapGroupIdToGroupAriaLabel.set(groupId, group.ariaLabel);\n                }\n            }\n        }\n        return ( this.doGetEditors().map(({ editor, groupId }) => {\n            const resource = EditorResourceAccessor.getOriginalUri(editor, { supportSideBySide: SideBySideEditor.PRIMARY });\n            const isDirty = editor.isDirty() && !editor.isSaving();\n            const description = editor.getDescription();\n            const nameAndDescription = description ? `${editor.getName()} ${description}` : editor.getName();\n            return {\n                groupId,\n                resource,\n                label: editor.getName(),\n                ariaLabel: (() => {\n                    if (mapGroupIdToGroupAriaLabel.size > 1) {\n                        return isDirty ?\n                            ( localize(\n                                'entryAriaLabelWithGroupDirty',\n                                \"{0}, unsaved changes, {1}\",\n                                nameAndDescription,\n                                mapGroupIdToGroupAriaLabel.get(groupId)\n                            )) :\n                            ( localize(\n                                'entryAriaLabelWithGroup',\n                                \"{0}, {1}\",\n                                nameAndDescription,\n                                mapGroupIdToGroupAriaLabel.get(groupId)\n                            ));\n                    }\n                    return isDirty ? ( localize('entryAriaLabelDirty', \"{0}, unsaved changes\", nameAndDescription)) : nameAndDescription;\n                })(),\n                description,\n                iconClasses: getIconClasses(this.modelService, this.languageService, resource).concat(editor.getLabelExtraClasses()),\n                italic: !this.editorGroupService.getGroup(groupId)?.isPinned(editor),\n                buttons: (() => {\n                    return [\n                        {\n                            iconClass: isDirty ? ('dirty-editor ' + ThemeIcon.asClassName(Codicon.closeDirty)) : ThemeIcon.asClassName(Codicon.close),\n                            tooltip: ( localize('closeEditor', \"Close Editor\")),\n                            alwaysVisible: isDirty\n                        }\n                    ];\n                })(),\n                trigger: async () => {\n                    const group = this.editorGroupService.getGroup(groupId);\n                    if (group) {\n                        await group.closeEditor(editor, { preserveFocus: true });\n                        if (!group.contains(editor)) {\n                            return TriggerAction.REMOVE_ITEM;\n                        }\n                    }\n                    return TriggerAction.NO_ACTION;\n                },\n                accept: (keyMods, event) => this.editorGroupService.getGroup(groupId)?.openEditor(editor, { preserveFocus: event.inBackground }),\n            };\n        }));\n    }\n};\nBaseEditorQuickAccessProvider = ( __decorate([\n    ( __param(1, IEditorGroupsService)),\n    ( __param(2, IEditorService)),\n    ( __param(3, IModelService)),\n    ( __param(4, ILanguageService))\n], BaseEditorQuickAccessProvider));\nlet ActiveGroupEditorsByMostRecentlyUsedQuickAccess = class ActiveGroupEditorsByMostRecentlyUsedQuickAccess extends BaseEditorQuickAccessProvider {\n    static { ActiveGroupEditorsByMostRecentlyUsedQuickAccess_1 = this; }\n    static { this.PREFIX = 'edt active '; }\n    constructor(editorGroupService, editorService, modelService, languageService) {\n        super(ActiveGroupEditorsByMostRecentlyUsedQuickAccess_1.PREFIX, editorGroupService, editorService, modelService, languageService);\n    }\n    doGetEditors() {\n        const group = this.editorGroupService.activeGroup;\n        return ( group.getEditors(0 ).map(editor => ({ editor, groupId: group.id })));\n    }\n};\nActiveGroupEditorsByMostRecentlyUsedQuickAccess = ActiveGroupEditorsByMostRecentlyUsedQuickAccess_1 = ( __decorate([\n    ( __param(0, IEditorGroupsService)),\n    ( __param(1, IEditorService)),\n    ( __param(2, IModelService)),\n    ( __param(3, ILanguageService))\n], ActiveGroupEditorsByMostRecentlyUsedQuickAccess));\nlet AllEditorsByAppearanceQuickAccess = class AllEditorsByAppearanceQuickAccess extends BaseEditorQuickAccessProvider {\n    static { AllEditorsByAppearanceQuickAccess_1 = this; }\n    static { this.PREFIX = 'edt '; }\n    constructor(editorGroupService, editorService, modelService, languageService) {\n        super(AllEditorsByAppearanceQuickAccess_1.PREFIX, editorGroupService, editorService, modelService, languageService);\n    }\n    doGetEditors() {\n        const entries = [];\n        for (const group of this.editorGroupService.getGroups(2 )) {\n            for (const editor of group.getEditors(1 )) {\n                entries.push({ editor, groupId: group.id });\n            }\n        }\n        return entries;\n    }\n};\nAllEditorsByAppearanceQuickAccess = AllEditorsByAppearanceQuickAccess_1 = ( __decorate([\n    ( __param(0, IEditorGroupsService)),\n    ( __param(1, IEditorService)),\n    ( __param(2, IModelService)),\n    ( __param(3, ILanguageService))\n], AllEditorsByAppearanceQuickAccess));\nlet AllEditorsByMostRecentlyUsedQuickAccess = class AllEditorsByMostRecentlyUsedQuickAccess extends BaseEditorQuickAccessProvider {\n    static { AllEditorsByMostRecentlyUsedQuickAccess_1 = this; }\n    static { this.PREFIX = 'edt mru '; }\n    constructor(editorGroupService, editorService, modelService, languageService) {\n        super(AllEditorsByMostRecentlyUsedQuickAccess_1.PREFIX, editorGroupService, editorService, modelService, languageService);\n    }\n    doGetEditors() {\n        const entries = [];\n        for (const editor of this.editorService.getEditors(0 )) {\n            entries.push(editor);\n        }\n        return entries;\n    }\n};\nAllEditorsByMostRecentlyUsedQuickAccess = AllEditorsByMostRecentlyUsedQuickAccess_1 = ( __decorate([\n    ( __param(0, IEditorGroupsService)),\n    ( __param(1, IEditorService)),\n    ( __param(2, IModelService)),\n    ( __param(3, ILanguageService))\n], AllEditorsByMostRecentlyUsedQuickAccess));\nexport { ActiveGroupEditorsByMostRecentlyUsedQuickAccess, AllEditorsByAppearanceQuickAccess, AllEditorsByMostRecentlyUsedQuickAccess, BaseEditorQuickAccessProvider };\n", "import n from '../../../../../../../../external/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".quick-input-list .quick-input-list-entry.has-actions:hover .quick-input-list-entry-action-bar .action-label.dirty-editor:before{content:\\\"\\\\ea76\\\"}\";\nn(css,{});\nexport { css, css as default };\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { timeout } from '../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Disposable, DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { isFunction } from '../../../base/common/types.js';\nexport var TriggerAction;\n(function (TriggerAction) {\n    /**\n     * Do nothing after the button was clicked.\n     */\n    TriggerAction[TriggerAction[\"NO_ACTION\"] = 0] = \"NO_ACTION\";\n    /**\n     * Close the picker.\n     */\n    TriggerAction[TriggerAction[\"CLOSE_PICKER\"] = 1] = \"CLOSE_PICKER\";\n    /**\n     * Update the results of the picker.\n     */\n    TriggerAction[TriggerAction[\"REFRESH_PICKER\"] = 2] = \"REFRESH_PICKER\";\n    /**\n     * Remove the item from the picker.\n     */\n    TriggerAction[TriggerAction[\"REMOVE_ITEM\"] = 3] = \"REMOVE_ITEM\";\n})(TriggerAction || (TriggerAction = {}));\nfunction isPicksWithActive(obj) {\n    const candidate = obj;\n    return Array.isArray(candidate.items);\n}\nfunction isFastAndSlowPicks(obj) {\n    const candidate = obj;\n    return !!candidate.picks && candidate.additionalPicks instanceof Promise;\n}\nexport class PickerQuickAccessProvider extends Disposable {\n    constructor(prefix, options) {\n        super();\n        this.prefix = prefix;\n        this.options = options;\n    }\n    provide(picker, token, runOptions) {\n        var _a;\n        const disposables = new DisposableStore();\n        // Apply options if any\n        picker.canAcceptInBackground = !!((_a = this.options) === null || _a === void 0 ? void 0 : _a.canAcceptInBackground);\n        // Disable filtering & sorting, we control the results\n        picker.matchOnLabel = picker.matchOnDescription = picker.matchOnDetail = picker.sortByLabel = false;\n        // Set initial picks and update on type\n        let picksCts = undefined;\n        const picksDisposable = disposables.add(new MutableDisposable());\n        const updatePickerItems = () => __awaiter(this, void 0, void 0, function* () {\n            const picksDisposables = picksDisposable.value = new DisposableStore();\n            // Cancel any previous ask for picks and busy\n            picksCts === null || picksCts === void 0 ? void 0 : picksCts.dispose(true);\n            picker.busy = false;\n            // Create new cancellation source for this run\n            picksCts = new CancellationTokenSource(token);\n            // Collect picks and support both long running and short or combined\n            const picksToken = picksCts.token;\n            const picksFilter = picker.value.substr(this.prefix.length).trim();\n            const providedPicks = this._getPicks(picksFilter, picksDisposables, picksToken, runOptions);\n            const applyPicks = (picks, skipEmpty) => {\n                var _a;\n                let items;\n                let activeItem = undefined;\n                if (isPicksWithActive(picks)) {\n                    items = picks.items;\n                    activeItem = picks.active;\n                }\n                else {\n                    items = picks;\n                }\n                if (items.length === 0) {\n                    if (skipEmpty) {\n                        return false;\n                    }\n                    // We show the no results pick if we have no input to prevent completely empty pickers #172613\n                    if ((picksFilter.length > 0 || picker.hideInput) && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.noResultsPick)) {\n                        if (isFunction(this.options.noResultsPick)) {\n                            items = [this.options.noResultsPick(picksFilter)];\n                        }\n                        else {\n                            items = [this.options.noResultsPick];\n                        }\n                    }\n                }\n                picker.items = items;\n                if (activeItem) {\n                    picker.activeItems = [activeItem];\n                }\n                return true;\n            };\n            const applyFastAndSlowPicks = (fastAndSlowPicks) => __awaiter(this, void 0, void 0, function* () {\n                let fastPicksApplied = false;\n                let slowPicksApplied = false;\n                yield Promise.all([\n                    // Fast Picks: if `mergeDelay` is configured, in order to reduce\n                    // amount of flicker, we race against the slow picks over some delay\n                    // and then set the fast picks.\n                    // If the slow picks are faster, we reduce the flicker by only\n                    // setting the items once.\n                    (() => __awaiter(this, void 0, void 0, function* () {\n                        if (typeof fastAndSlowPicks.mergeDelay === 'number') {\n                            yield timeout(fastAndSlowPicks.mergeDelay);\n                            if (picksToken.isCancellationRequested) {\n                                return;\n                            }\n                        }\n                        if (!slowPicksApplied) {\n                            fastPicksApplied = applyPicks(fastAndSlowPicks.picks, true /* skip over empty to reduce flicker */);\n                        }\n                    }))(),\n                    // Slow Picks: we await the slow picks and then set them at\n                    // once together with the fast picks, but only if we actually\n                    // have additional results.\n                    (() => __awaiter(this, void 0, void 0, function* () {\n                        picker.busy = true;\n                        try {\n                            const awaitedAdditionalPicks = yield fastAndSlowPicks.additionalPicks;\n                            if (picksToken.isCancellationRequested) {\n                                return;\n                            }\n                            let picks;\n                            let activePick = undefined;\n                            if (isPicksWithActive(fastAndSlowPicks.picks)) {\n                                picks = fastAndSlowPicks.picks.items;\n                                activePick = fastAndSlowPicks.picks.active;\n                            }\n                            else {\n                                picks = fastAndSlowPicks.picks;\n                            }\n                            let additionalPicks;\n                            let additionalActivePick = undefined;\n                            if (isPicksWithActive(awaitedAdditionalPicks)) {\n                                additionalPicks = awaitedAdditionalPicks.items;\n                                additionalActivePick = awaitedAdditionalPicks.active;\n                            }\n                            else {\n                                additionalPicks = awaitedAdditionalPicks;\n                            }\n                            if (additionalPicks.length > 0 || !fastPicksApplied) {\n                                // If we do not have any activePick or additionalActivePick\n                                // we try to preserve the currently active pick from the\n                                // fast results. This fixes an issue where the user might\n                                // have made a pick active before the additional results\n                                // kick in.\n                                // See https://github.com/microsoft/vscode/issues/102480\n                                let fallbackActivePick = undefined;\n                                if (!activePick && !additionalActivePick) {\n                                    const fallbackActivePickCandidate = picker.activeItems[0];\n                                    if (fallbackActivePickCandidate && picks.indexOf(fallbackActivePickCandidate) !== -1) {\n                                        fallbackActivePick = fallbackActivePickCandidate;\n                                    }\n                                }\n                                applyPicks({\n                                    items: [...picks, ...additionalPicks],\n                                    active: activePick || additionalActivePick || fallbackActivePick\n                                });\n                            }\n                        }\n                        finally {\n                            if (!picksToken.isCancellationRequested) {\n                                picker.busy = false;\n                            }\n                            slowPicksApplied = true;\n                        }\n                    }))()\n                ]);\n            });\n            // No Picks\n            if (providedPicks === null) {\n                // Ignore\n            }\n            // Fast and Slow Picks\n            else if (isFastAndSlowPicks(providedPicks)) {\n                yield applyFastAndSlowPicks(providedPicks);\n            }\n            // Fast Picks\n            else if (!(providedPicks instanceof Promise)) {\n                applyPicks(providedPicks);\n            }\n            // Slow Picks\n            else {\n                picker.busy = true;\n                try {\n                    const awaitedPicks = yield providedPicks;\n                    if (picksToken.isCancellationRequested) {\n                        return;\n                    }\n                    if (isFastAndSlowPicks(awaitedPicks)) {\n                        yield applyFastAndSlowPicks(awaitedPicks);\n                    }\n                    else {\n                        applyPicks(awaitedPicks);\n                    }\n                }\n                finally {\n                    if (!picksToken.isCancellationRequested) {\n                        picker.busy = false;\n                    }\n                }\n            }\n        });\n        disposables.add(picker.onDidChangeValue(() => updatePickerItems()));\n        updatePickerItems();\n        // Accept the pick on accept and hide picker\n        disposables.add(picker.onDidAccept(event => {\n            const [item] = picker.selectedItems;\n            if (typeof (item === null || item === void 0 ? void 0 : item.accept) === 'function') {\n                if (!event.inBackground) {\n                    picker.hide(); // hide picker unless we accept in background\n                }\n                item.accept(picker.keyMods, event);\n            }\n        }));\n        // Trigger the pick with button index if button triggered\n        disposables.add(picker.onDidTriggerItemButton(({ button, item }) => __awaiter(this, void 0, void 0, function* () {\n            var _b, _c;\n            if (typeof item.trigger === 'function') {\n                const buttonIndex = (_c = (_b = item.buttons) === null || _b === void 0 ? void 0 : _b.indexOf(button)) !== null && _c !== void 0 ? _c : -1;\n                if (buttonIndex >= 0) {\n                    const result = item.trigger(buttonIndex, picker.keyMods);\n                    const action = (typeof result === 'number') ? result : yield result;\n                    if (token.isCancellationRequested) {\n                        return;\n                    }\n                    switch (action) {\n                        case TriggerAction.NO_ACTION:\n                            break;\n                        case TriggerAction.CLOSE_PICKER:\n                            picker.hide();\n                            break;\n                        case TriggerAction.REFRESH_PICKER:\n                            updatePickerItems();\n                            break;\n                        case TriggerAction.REMOVE_ITEM: {\n                            const index = picker.items.indexOf(item);\n                            if (index !== -1) {\n                                const items = picker.items.slice();\n                                const removed = items.splice(index, 1);\n                                const activeItems = picker.activeItems.filter(activeItem => activeItem !== removed[0]);\n                                const keepScrollPositionBefore = picker.keepScrollPosition;\n                                picker.keepScrollPosition = true;\n                                picker.items = items;\n                                if (activeItems) {\n                                    picker.activeItems = activeItems;\n                                }\n                                picker.keepScrollPosition = keepScrollPositionBefore;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        })));\n        return disposables;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { compareAnything } from './comparers.js';\nimport { createMatches as createFuzzyMatches, fuzzyScore, isUpper, matchesPrefix } from './filters.js';\nimport { hash } from './hash.js';\nimport { sep } from './path.js';\nimport { isLinux, isWindows } from './platform.js';\nimport { equalsIgnoreCase, stripWildcards } from './strings.js';\nconst NO_MATCH = 0;\nconst NO_SCORE = [NO_MATCH, []];\n// const DEBUG = true;\n// const DEBUG_MATRIX = false;\nexport function scoreFuzzy(target, query, queryLower, allowNonContiguousMatches) {\n    if (!target || !query) {\n        return NO_SCORE; // return early if target or query are undefined\n    }\n    const targetLength = target.length;\n    const queryLength = query.length;\n    if (targetLength < queryLength) {\n        return NO_SCORE; // impossible for query to be contained in target\n    }\n    // if (DEBUG) {\n    // \tconsole.group(`Target: ${target}, Query: ${query}`);\n    // }\n    const targetLower = target.toLowerCase();\n    const res = doScoreFuzzy(query, queryLower, queryLength, target, targetLower, targetLength, allowNonContiguousMatches);\n    // if (DEBUG) {\n    // \tconsole.log(`%cFinal Score: ${res[0]}`, 'font-weight: bold');\n    // \tconsole.groupEnd();\n    // }\n    return res;\n}\nfunction doScoreFuzzy(query, queryLower, queryLength, target, targetLower, targetLength, allowNonContiguousMatches) {\n    const scores = [];\n    const matches = [];\n    //\n    // Build Scorer Matrix:\n    //\n    // The matrix is composed of query q and target t. For each index we score\n    // q[i] with t[i] and compare that with the previous score. If the score is\n    // equal or larger, we keep the match. In addition to the score, we also keep\n    // the length of the consecutive matches to use as boost for the score.\n    //\n    //      t   a   r   g   e   t\n    //  q\n    //  u\n    //  e\n    //  r\n    //  y\n    //\n    for (let queryIndex = 0; queryIndex < queryLength; queryIndex++) {\n        const queryIndexOffset = queryIndex * targetLength;\n        const queryIndexPreviousOffset = queryIndexOffset - targetLength;\n        const queryIndexGtNull = queryIndex > 0;\n        const queryCharAtIndex = query[queryIndex];\n        const queryLowerCharAtIndex = queryLower[queryIndex];\n        for (let targetIndex = 0; targetIndex < targetLength; targetIndex++) {\n            const targetIndexGtNull = targetIndex > 0;\n            const currentIndex = queryIndexOffset + targetIndex;\n            const leftIndex = currentIndex - 1;\n            const diagIndex = queryIndexPreviousOffset + targetIndex - 1;\n            const leftScore = targetIndexGtNull ? scores[leftIndex] : 0;\n            const diagScore = queryIndexGtNull && targetIndexGtNull ? scores[diagIndex] : 0;\n            const matchesSequenceLength = queryIndexGtNull && targetIndexGtNull ? matches[diagIndex] : 0;\n            // If we are not matching on the first query character any more, we only produce a\n            // score if we had a score previously for the last query index (by looking at the diagScore).\n            // This makes sure that the query always matches in sequence on the target. For example\n            // given a target of \"ede\" and a query of \"de\", we would otherwise produce a wrong high score\n            // for query[1] (\"e\") matching on target[0] (\"e\") because of the \"beginning of word\" boost.\n            let score;\n            if (!diagScore && queryIndexGtNull) {\n                score = 0;\n            }\n            else {\n                score = computeCharScore(queryCharAtIndex, queryLowerCharAtIndex, target, targetLower, targetIndex, matchesSequenceLength);\n            }\n            // We have a score and its equal or larger than the left score\n            // Match: sequence continues growing from previous diag value\n            // Score: increases by diag score value\n            const isValidScore = score && diagScore + score >= leftScore;\n            if (isValidScore && (\n            // We don't need to check if it's contiguous if we allow non-contiguous matches\n            allowNonContiguousMatches ||\n                // We must be looking for a contiguous match.\n                // Looking at an index higher than 0 in the query means we must have already\n                // found out this is contiguous otherwise there wouldn't have been a score\n                queryIndexGtNull ||\n                // lastly check if the query is completely contiguous at this index in the target\n                targetLower.startsWith(queryLower, targetIndex))) {\n                matches[currentIndex] = matchesSequenceLength + 1;\n                scores[currentIndex] = diagScore + score;\n            }\n            // We either have no score or the score is lower than the left score\n            // Match: reset to 0\n            // Score: pick up from left hand side\n            else {\n                matches[currentIndex] = NO_MATCH;\n                scores[currentIndex] = leftScore;\n            }\n        }\n    }\n    // Restore Positions (starting from bottom right of matrix)\n    const positions = [];\n    let queryIndex = queryLength - 1;\n    let targetIndex = targetLength - 1;\n    while (queryIndex >= 0 && targetIndex >= 0) {\n        const currentIndex = queryIndex * targetLength + targetIndex;\n        const match = matches[currentIndex];\n        if (match === NO_MATCH) {\n            targetIndex--; // go left\n        }\n        else {\n            positions.push(targetIndex);\n            // go up and left\n            queryIndex--;\n            targetIndex--;\n        }\n    }\n    // Print matrix\n    // if (DEBUG_MATRIX) {\n    // \tprintMatrix(query, target, matches, scores);\n    // }\n    return [scores[queryLength * targetLength - 1], positions.reverse()];\n}\nfunction computeCharScore(queryCharAtIndex, queryLowerCharAtIndex, target, targetLower, targetIndex, matchesSequenceLength) {\n    let score = 0;\n    if (!considerAsEqual(queryLowerCharAtIndex, targetLower[targetIndex])) {\n        return score; // no match of characters\n    }\n    // if (DEBUG) {\n    // \tconsole.groupCollapsed(`%cFound a match of char: ${queryLowerCharAtIndex} at index ${targetIndex}`, 'font-weight: normal');\n    // }\n    // Character match bonus\n    score += 1;\n    // if (DEBUG) {\n    // \tconsole.log(`%cCharacter match bonus: +1`, 'font-weight: normal');\n    // }\n    // Consecutive match bonus\n    if (matchesSequenceLength > 0) {\n        score += (matchesSequenceLength * 5);\n        // if (DEBUG) {\n        // \tconsole.log(`Consecutive match bonus: +${matchesSequenceLength * 5}`);\n        // }\n    }\n    // Same case bonus\n    if (queryCharAtIndex === target[targetIndex]) {\n        score += 1;\n        // if (DEBUG) {\n        // \tconsole.log('Same case bonus: +1');\n        // }\n    }\n    // Start of word bonus\n    if (targetIndex === 0) {\n        score += 8;\n        // if (DEBUG) {\n        // \tconsole.log('Start of word bonus: +8');\n        // }\n    }\n    else {\n        // After separator bonus\n        const separatorBonus = scoreSeparatorAtPos(target.charCodeAt(targetIndex - 1));\n        if (separatorBonus) {\n            score += separatorBonus;\n            // if (DEBUG) {\n            // \tconsole.log(`After separator bonus: +${separatorBonus}`);\n            // }\n        }\n        // Inside word upper case bonus (camel case). We only give this bonus if we're not in a contiguous sequence.\n        // For example:\n        // NPE => NullPointerException = boost\n        // HTTP => HTTP = not boost\n        else if (isUpper(target.charCodeAt(targetIndex)) && matchesSequenceLength === 0) {\n            score += 2;\n            // if (DEBUG) {\n            // \tconsole.log('Inside word upper case bonus: +2');\n            // }\n        }\n    }\n    // if (DEBUG) {\n    // \tconsole.log(`Total score: ${score}`);\n    // \tconsole.groupEnd();\n    // }\n    return score;\n}\nfunction considerAsEqual(a, b) {\n    if (a === b) {\n        return true;\n    }\n    // Special case path separators: ignore platform differences\n    if (a === '/' || a === '\\\\') {\n        return b === '/' || b === '\\\\';\n    }\n    return false;\n}\nfunction scoreSeparatorAtPos(charCode) {\n    switch (charCode) {\n        case 47 /* CharCode.Slash */:\n        case 92 /* CharCode.Backslash */:\n            return 5; // prefer path separators...\n        case 95 /* CharCode.Underline */:\n        case 45 /* CharCode.Dash */:\n        case 46 /* CharCode.Period */:\n        case 32 /* CharCode.Space */:\n        case 39 /* CharCode.SingleQuote */:\n        case 34 /* CharCode.DoubleQuote */:\n        case 58 /* CharCode.Colon */:\n            return 4; // ...over other separators\n        default:\n            return 0;\n    }\n}\nconst NO_SCORE2 = [undefined, []];\nexport function scoreFuzzy2(target, query, patternStart = 0, wordStart = 0) {\n    // Score: multiple inputs\n    const preparedQuery = query;\n    if (preparedQuery.values && preparedQuery.values.length > 1) {\n        return doScoreFuzzy2Multiple(target, preparedQuery.values, patternStart, wordStart);\n    }\n    // Score: single input\n    return doScoreFuzzy2Single(target, query, patternStart, wordStart);\n}\nfunction doScoreFuzzy2Multiple(target, query, patternStart, wordStart) {\n    let totalScore = 0;\n    const totalMatches = [];\n    for (const queryPiece of query) {\n        const [score, matches] = doScoreFuzzy2Single(target, queryPiece, patternStart, wordStart);\n        if (typeof score !== 'number') {\n            // if a single query value does not match, return with\n            // no score entirely, we require all queries to match\n            return NO_SCORE2;\n        }\n        totalScore += score;\n        totalMatches.push(...matches);\n    }\n    // if we have a score, ensure that the positions are\n    // sorted in ascending order and distinct\n    return [totalScore, normalizeMatches(totalMatches)];\n}\nfunction doScoreFuzzy2Single(target, query, patternStart, wordStart) {\n    const score = fuzzyScore(query.original, query.originalLowercase, patternStart, target, target.toLowerCase(), wordStart, { firstMatchCanBeWeak: true, boostFullMatch: true });\n    if (!score) {\n        return NO_SCORE2;\n    }\n    return [score[0], createFuzzyMatches(score)];\n}\nconst NO_ITEM_SCORE = Object.freeze({ score: 0 });\nconst PATH_IDENTITY_SCORE = 1 << 18;\nconst LABEL_PREFIX_SCORE_THRESHOLD = 1 << 17;\nconst LABEL_SCORE_THRESHOLD = 1 << 16;\nfunction getCacheHash(label, description, allowNonContiguousMatches, query) {\n    const values = query.values ? query.values : [query];\n    const cacheHash = hash({\n        [query.normalized]: {\n            values: values.map(v => ({ value: v.normalized, expectContiguousMatch: v.expectContiguousMatch })),\n            label,\n            description,\n            allowNonContiguousMatches\n        }\n    });\n    return cacheHash;\n}\nexport function scoreItemFuzzy(item, query, allowNonContiguousMatches, accessor, cache) {\n    if (!item || !query.normalized) {\n        return NO_ITEM_SCORE; // we need an item and query to score on at least\n    }\n    const label = accessor.getItemLabel(item);\n    if (!label) {\n        return NO_ITEM_SCORE; // we need a label at least\n    }\n    const description = accessor.getItemDescription(item);\n    // in order to speed up scoring, we cache the score with a unique hash based on:\n    // - label\n    // - description (if provided)\n    // - whether non-contiguous matching is enabled or not\n    // - hash of the query (normalized) values\n    const cacheHash = getCacheHash(label, description, allowNonContiguousMatches, query);\n    const cached = cache[cacheHash];\n    if (cached) {\n        return cached;\n    }\n    const itemScore = doScoreItemFuzzy(label, description, accessor.getItemPath(item), query, allowNonContiguousMatches);\n    cache[cacheHash] = itemScore;\n    return itemScore;\n}\nfunction doScoreItemFuzzy(label, description, path, query, allowNonContiguousMatches) {\n    const preferLabelMatches = !path || !query.containsPathSeparator;\n    // Treat identity matches on full path highest\n    if (path && (isLinux ? query.pathNormalized === path : equalsIgnoreCase(query.pathNormalized, path))) {\n        return { score: PATH_IDENTITY_SCORE, labelMatch: [{ start: 0, end: label.length }], descriptionMatch: description ? [{ start: 0, end: description.length }] : undefined };\n    }\n    // Score: multiple inputs\n    if (query.values && query.values.length > 1) {\n        return doScoreItemFuzzyMultiple(label, description, path, query.values, preferLabelMatches, allowNonContiguousMatches);\n    }\n    // Score: single input\n    return doScoreItemFuzzySingle(label, description, path, query, preferLabelMatches, allowNonContiguousMatches);\n}\nfunction doScoreItemFuzzyMultiple(label, description, path, query, preferLabelMatches, allowNonContiguousMatches) {\n    let totalScore = 0;\n    const totalLabelMatches = [];\n    const totalDescriptionMatches = [];\n    for (const queryPiece of query) {\n        const { score, labelMatch, descriptionMatch } = doScoreItemFuzzySingle(label, description, path, queryPiece, preferLabelMatches, allowNonContiguousMatches);\n        if (score === NO_MATCH) {\n            // if a single query value does not match, return with\n            // no score entirely, we require all queries to match\n            return NO_ITEM_SCORE;\n        }\n        totalScore += score;\n        if (labelMatch) {\n            totalLabelMatches.push(...labelMatch);\n        }\n        if (descriptionMatch) {\n            totalDescriptionMatches.push(...descriptionMatch);\n        }\n    }\n    // if we have a score, ensure that the positions are\n    // sorted in ascending order and distinct\n    return {\n        score: totalScore,\n        labelMatch: normalizeMatches(totalLabelMatches),\n        descriptionMatch: normalizeMatches(totalDescriptionMatches)\n    };\n}\nfunction doScoreItemFuzzySingle(label, description, path, query, preferLabelMatches, allowNonContiguousMatches) {\n    // Prefer label matches if told so or we have no description\n    if (preferLabelMatches || !description) {\n        const [labelScore, labelPositions] = scoreFuzzy(label, query.normalized, query.normalizedLowercase, allowNonContiguousMatches && !query.expectContiguousMatch);\n        if (labelScore) {\n            // If we have a prefix match on the label, we give a much\n            // higher baseScore to elevate these matches over others\n            // This ensures that typing a file name wins over results\n            // that are present somewhere in the label, but not the\n            // beginning.\n            const labelPrefixMatch = matchesPrefix(query.normalized, label);\n            let baseScore;\n            if (labelPrefixMatch) {\n                baseScore = LABEL_PREFIX_SCORE_THRESHOLD;\n                // We give another boost to labels that are short, e.g. given\n                // files \"window.ts\" and \"windowActions.ts\" and a query of\n                // \"window\", we want \"window.ts\" to receive a higher score.\n                // As such we compute the percentage the query has within the\n                // label and add that to the baseScore.\n                const prefixLengthBoost = Math.round((query.normalized.length / label.length) * 100);\n                baseScore += prefixLengthBoost;\n            }\n            else {\n                baseScore = LABEL_SCORE_THRESHOLD;\n            }\n            return { score: baseScore + labelScore, labelMatch: labelPrefixMatch || createMatches(labelPositions) };\n        }\n    }\n    // Finally compute description + label scores if we have a description\n    if (description) {\n        let descriptionPrefix = description;\n        if (!!path) {\n            descriptionPrefix = `${description}${sep}`; // assume this is a file path\n        }\n        const descriptionPrefixLength = descriptionPrefix.length;\n        const descriptionAndLabel = `${descriptionPrefix}${label}`;\n        const [labelDescriptionScore, labelDescriptionPositions] = scoreFuzzy(descriptionAndLabel, query.normalized, query.normalizedLowercase, allowNonContiguousMatches && !query.expectContiguousMatch);\n        if (labelDescriptionScore) {\n            const labelDescriptionMatches = createMatches(labelDescriptionPositions);\n            const labelMatch = [];\n            const descriptionMatch = [];\n            // We have to split the matches back onto the label and description portions\n            labelDescriptionMatches.forEach(h => {\n                // Match overlaps label and description part, we need to split it up\n                if (h.start < descriptionPrefixLength && h.end > descriptionPrefixLength) {\n                    labelMatch.push({ start: 0, end: h.end - descriptionPrefixLength });\n                    descriptionMatch.push({ start: h.start, end: descriptionPrefixLength });\n                }\n                // Match on label part\n                else if (h.start >= descriptionPrefixLength) {\n                    labelMatch.push({ start: h.start - descriptionPrefixLength, end: h.end - descriptionPrefixLength });\n                }\n                // Match on description part\n                else {\n                    descriptionMatch.push(h);\n                }\n            });\n            return { score: labelDescriptionScore, labelMatch, descriptionMatch };\n        }\n    }\n    return NO_ITEM_SCORE;\n}\nfunction createMatches(offsets) {\n    const ret = [];\n    if (!offsets) {\n        return ret;\n    }\n    let last;\n    for (const pos of offsets) {\n        if (last && last.end === pos) {\n            last.end += 1;\n        }\n        else {\n            last = { start: pos, end: pos + 1 };\n            ret.push(last);\n        }\n    }\n    return ret;\n}\nfunction normalizeMatches(matches) {\n    // sort matches by start to be able to normalize\n    const sortedMatches = matches.sort((matchA, matchB) => {\n        return matchA.start - matchB.start;\n    });\n    // merge matches that overlap\n    const normalizedMatches = [];\n    let currentMatch = undefined;\n    for (const match of sortedMatches) {\n        // if we have no current match or the matches\n        // do not overlap, we take it as is and remember\n        // it for future merging\n        if (!currentMatch || !matchOverlaps(currentMatch, match)) {\n            currentMatch = match;\n            normalizedMatches.push(match);\n        }\n        // otherwise we merge the matches\n        else {\n            currentMatch.start = Math.min(currentMatch.start, match.start);\n            currentMatch.end = Math.max(currentMatch.end, match.end);\n        }\n    }\n    return normalizedMatches;\n}\nfunction matchOverlaps(matchA, matchB) {\n    if (matchA.end < matchB.start) {\n        return false; // A ends before B starts\n    }\n    if (matchB.end < matchA.start) {\n        return false; // B ends before A starts\n    }\n    return true;\n}\n//#endregion\n//#region Comparers\nexport function compareItemsByFuzzyScore(itemA, itemB, query, allowNonContiguousMatches, accessor, cache) {\n    const itemScoreA = scoreItemFuzzy(itemA, query, allowNonContiguousMatches, accessor, cache);\n    const itemScoreB = scoreItemFuzzy(itemB, query, allowNonContiguousMatches, accessor, cache);\n    const scoreA = itemScoreA.score;\n    const scoreB = itemScoreB.score;\n    // 1.) identity matches have highest score\n    if (scoreA === PATH_IDENTITY_SCORE || scoreB === PATH_IDENTITY_SCORE) {\n        if (scoreA !== scoreB) {\n            return scoreA === PATH_IDENTITY_SCORE ? -1 : 1;\n        }\n    }\n    // 2.) matches on label are considered higher compared to label+description matches\n    if (scoreA > LABEL_SCORE_THRESHOLD || scoreB > LABEL_SCORE_THRESHOLD) {\n        if (scoreA !== scoreB) {\n            return scoreA > scoreB ? -1 : 1;\n        }\n        // prefer more compact matches over longer in label (unless this is a prefix match where\n        // longer prefix matches are actually preferred)\n        if (scoreA < LABEL_PREFIX_SCORE_THRESHOLD && scoreB < LABEL_PREFIX_SCORE_THRESHOLD) {\n            const comparedByMatchLength = compareByMatchLength(itemScoreA.labelMatch, itemScoreB.labelMatch);\n            if (comparedByMatchLength !== 0) {\n                return comparedByMatchLength;\n            }\n        }\n        // prefer shorter labels over longer labels\n        const labelA = accessor.getItemLabel(itemA) || '';\n        const labelB = accessor.getItemLabel(itemB) || '';\n        if (labelA.length !== labelB.length) {\n            return labelA.length - labelB.length;\n        }\n    }\n    // 3.) compare by score in label+description\n    if (scoreA !== scoreB) {\n        return scoreA > scoreB ? -1 : 1;\n    }\n    // 4.) scores are identical: prefer matches in label over non-label matches\n    const itemAHasLabelMatches = Array.isArray(itemScoreA.labelMatch) && itemScoreA.labelMatch.length > 0;\n    const itemBHasLabelMatches = Array.isArray(itemScoreB.labelMatch) && itemScoreB.labelMatch.length > 0;\n    if (itemAHasLabelMatches && !itemBHasLabelMatches) {\n        return -1;\n    }\n    else if (itemBHasLabelMatches && !itemAHasLabelMatches) {\n        return 1;\n    }\n    // 5.) scores are identical: prefer more compact matches (label and description)\n    const itemAMatchDistance = computeLabelAndDescriptionMatchDistance(itemA, itemScoreA, accessor);\n    const itemBMatchDistance = computeLabelAndDescriptionMatchDistance(itemB, itemScoreB, accessor);\n    if (itemAMatchDistance && itemBMatchDistance && itemAMatchDistance !== itemBMatchDistance) {\n        return itemBMatchDistance > itemAMatchDistance ? -1 : 1;\n    }\n    // 6.) scores are identical: start to use the fallback compare\n    return fallbackCompare(itemA, itemB, query, accessor);\n}\nfunction computeLabelAndDescriptionMatchDistance(item, score, accessor) {\n    let matchStart = -1;\n    let matchEnd = -1;\n    // If we have description matches, the start is first of description match\n    if (score.descriptionMatch && score.descriptionMatch.length) {\n        matchStart = score.descriptionMatch[0].start;\n    }\n    // Otherwise, the start is the first label match\n    else if (score.labelMatch && score.labelMatch.length) {\n        matchStart = score.labelMatch[0].start;\n    }\n    // If we have label match, the end is the last label match\n    // If we had a description match, we add the length of the description\n    // as offset to the end to indicate this.\n    if (score.labelMatch && score.labelMatch.length) {\n        matchEnd = score.labelMatch[score.labelMatch.length - 1].end;\n        if (score.descriptionMatch && score.descriptionMatch.length) {\n            const itemDescription = accessor.getItemDescription(item);\n            if (itemDescription) {\n                matchEnd += itemDescription.length;\n            }\n        }\n    }\n    // If we have just a description match, the end is the last description match\n    else if (score.descriptionMatch && score.descriptionMatch.length) {\n        matchEnd = score.descriptionMatch[score.descriptionMatch.length - 1].end;\n    }\n    return matchEnd - matchStart;\n}\nfunction compareByMatchLength(matchesA, matchesB) {\n    if ((!matchesA && !matchesB) || ((!matchesA || !matchesA.length) && (!matchesB || !matchesB.length))) {\n        return 0; // make sure to not cause bad comparing when matches are not provided\n    }\n    if (!matchesB || !matchesB.length) {\n        return -1;\n    }\n    if (!matchesA || !matchesA.length) {\n        return 1;\n    }\n    // Compute match length of A (first to last match)\n    const matchStartA = matchesA[0].start;\n    const matchEndA = matchesA[matchesA.length - 1].end;\n    const matchLengthA = matchEndA - matchStartA;\n    // Compute match length of B (first to last match)\n    const matchStartB = matchesB[0].start;\n    const matchEndB = matchesB[matchesB.length - 1].end;\n    const matchLengthB = matchEndB - matchStartB;\n    // Prefer shorter match length\n    return matchLengthA === matchLengthB ? 0 : matchLengthB < matchLengthA ? 1 : -1;\n}\nfunction fallbackCompare(itemA, itemB, query, accessor) {\n    // check for label + description length and prefer shorter\n    const labelA = accessor.getItemLabel(itemA) || '';\n    const labelB = accessor.getItemLabel(itemB) || '';\n    const descriptionA = accessor.getItemDescription(itemA);\n    const descriptionB = accessor.getItemDescription(itemB);\n    const labelDescriptionALength = labelA.length + (descriptionA ? descriptionA.length : 0);\n    const labelDescriptionBLength = labelB.length + (descriptionB ? descriptionB.length : 0);\n    if (labelDescriptionALength !== labelDescriptionBLength) {\n        return labelDescriptionALength - labelDescriptionBLength;\n    }\n    // check for path length and prefer shorter\n    const pathA = accessor.getItemPath(itemA);\n    const pathB = accessor.getItemPath(itemB);\n    if (pathA && pathB && pathA.length !== pathB.length) {\n        return pathA.length - pathB.length;\n    }\n    // 7.) finally we have equal scores and equal length, we fallback to comparer\n    // compare by label\n    if (labelA !== labelB) {\n        return compareAnything(labelA, labelB, query.normalized);\n    }\n    // compare by description\n    if (descriptionA && descriptionB && descriptionA !== descriptionB) {\n        return compareAnything(descriptionA, descriptionB, query.normalized);\n    }\n    // compare by path\n    if (pathA && pathB && pathA !== pathB) {\n        return compareAnything(pathA, pathB, query.normalized);\n    }\n    // equal\n    return 0;\n}\n/*\n * If a query is wrapped in quotes, the user does not want to\n * use fuzzy search for this query.\n */\nfunction queryExpectsExactMatch(query) {\n    return query.startsWith('\"') && query.endsWith('\"');\n}\n/**\n * Helper function to prepare a search value for scoring by removing unwanted characters\n * and allowing to score on multiple pieces separated by whitespace character.\n */\nconst MULTIPLE_QUERY_VALUES_SEPARATOR = ' ';\nexport function prepareQuery(original) {\n    if (typeof original !== 'string') {\n        original = '';\n    }\n    const originalLowercase = original.toLowerCase();\n    const { pathNormalized, normalized, normalizedLowercase } = normalizeQuery(original);\n    const containsPathSeparator = pathNormalized.indexOf(sep) >= 0;\n    const expectExactMatch = queryExpectsExactMatch(original);\n    let values = undefined;\n    const originalSplit = original.split(MULTIPLE_QUERY_VALUES_SEPARATOR);\n    if (originalSplit.length > 1) {\n        for (const originalPiece of originalSplit) {\n            const expectExactMatchPiece = queryExpectsExactMatch(originalPiece);\n            const { pathNormalized: pathNormalizedPiece, normalized: normalizedPiece, normalizedLowercase: normalizedLowercasePiece } = normalizeQuery(originalPiece);\n            if (normalizedPiece) {\n                if (!values) {\n                    values = [];\n                }\n                values.push({\n                    original: originalPiece,\n                    originalLowercase: originalPiece.toLowerCase(),\n                    pathNormalized: pathNormalizedPiece,\n                    normalized: normalizedPiece,\n                    normalizedLowercase: normalizedLowercasePiece,\n                    expectContiguousMatch: expectExactMatchPiece\n                });\n            }\n        }\n    }\n    return { original, originalLowercase, pathNormalized, normalized, normalizedLowercase, values, containsPathSeparator, expectContiguousMatch: expectExactMatch };\n}\nfunction normalizeQuery(original) {\n    let pathNormalized;\n    if (isWindows) {\n        pathNormalized = original.replace(/\\//g, sep); // Help Windows users to search for paths when using slash\n    }\n    else {\n        pathNormalized = original.replace(/\\\\/g, sep); // Help macOS/Linux users to search for paths when using backslash\n    }\n    // we remove quotes here because quotes are used for exact match search\n    const normalized = stripWildcards(pathNormalized).replace(/\\s|\"/g, '');\n    return {\n        pathNormalized,\n        normalized,\n        normalizedLowercase: normalized.toLowerCase()\n    };\n}\nexport function pieceToQuery(arg1) {\n    if (Array.isArray(arg1)) {\n        return prepareQuery(arg1.map(piece => piece.original).join(MULTIPLE_QUERY_VALUES_SEPARATOR));\n    }\n    return prepareQuery(arg1.original);\n}\n//#endregion\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport './media/sidebysideeditor.css.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { Dimension, $, multibyteAwareBtoa, clearNode } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { SIDE_BY_SIDE_EDITOR_ID, SideBySideEditor as SideBySideEditor$1, EditorExtensions, isEditorPaneWithSelection } from '../../../common/editor.js';\nimport { SideBySideEditorInput } from '../../../common/editor/sideBySideEditorInput.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { SplitView, Sizing } from 'monaco-editor/esm/vs/base/browser/ui/splitview/splitview.js';\nimport { Emitter, Relay, Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { assertIsDefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { DEFAULT_EDITOR_MIN_DIMENSIONS } from './editor.js';\nimport { DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { SIDE_BY_SIDE_EDITOR_VERTICAL_BORDER, SIDE_BY_SIDE_EDITOR_HORIZONTAL_BORDER } from '../../../common/theme.js';\nimport { AbstractEditorWithViewState } from './editorWithViewState.js';\nimport { ITextResourceConfigurationService } from 'monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { isEqual } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nvar SideBySideEditor_1;\nfunction isSideBySideEditorViewState(thing) {\n    const candidate = thing;\n    return typeof candidate?.primary === 'object' && typeof candidate.secondary === 'object';\n}\nlet SideBySideEditor = class SideBySideEditor extends AbstractEditorWithViewState {\n    static { SideBySideEditor_1 = this; }\n    static { this.ID = SIDE_BY_SIDE_EDITOR_ID; }\n    static { this.SIDE_BY_SIDE_LAYOUT_SETTING = 'workbench.editor.splitInGroupLayout'; }\n    static { this.VIEW_STATE_PREFERENCE_KEY = 'sideBySideEditorViewState'; }\n    get minimumPrimaryWidth() { return this.primaryEditorPane ? this.primaryEditorPane.minimumWidth : 0; }\n    get maximumPrimaryWidth() { return this.primaryEditorPane ? this.primaryEditorPane.maximumWidth : Number.POSITIVE_INFINITY; }\n    get minimumPrimaryHeight() { return this.primaryEditorPane ? this.primaryEditorPane.minimumHeight : 0; }\n    get maximumPrimaryHeight() { return this.primaryEditorPane ? this.primaryEditorPane.maximumHeight : Number.POSITIVE_INFINITY; }\n    get minimumSecondaryWidth() { return this.secondaryEditorPane ? this.secondaryEditorPane.minimumWidth : 0; }\n    get maximumSecondaryWidth() { return this.secondaryEditorPane ? this.secondaryEditorPane.maximumWidth : Number.POSITIVE_INFINITY; }\n    get minimumSecondaryHeight() { return this.secondaryEditorPane ? this.secondaryEditorPane.minimumHeight : 0; }\n    get maximumSecondaryHeight() { return this.secondaryEditorPane ? this.secondaryEditorPane.maximumHeight : Number.POSITIVE_INFINITY; }\n    set minimumWidth(value) { }\n    set maximumWidth(value) { }\n    set minimumHeight(value) { }\n    set maximumHeight(value) { }\n    get minimumWidth() { return this.minimumPrimaryWidth + this.minimumSecondaryWidth; }\n    get maximumWidth() { return this.maximumPrimaryWidth + this.maximumSecondaryWidth; }\n    get minimumHeight() { return this.minimumPrimaryHeight + this.minimumSecondaryHeight; }\n    get maximumHeight() { return this.maximumPrimaryHeight + this.maximumSecondaryHeight; }\n    constructor(telemetryService, instantiationService, themeService, storageService, configurationService, textResourceConfigurationService, editorService, editorGroupService) {\n        super(SideBySideEditor_1.ID, SideBySideEditor_1.VIEW_STATE_PREFERENCE_KEY, telemetryService, instantiationService, storageService, textResourceConfigurationService, themeService, editorService, editorGroupService);\n        this.configurationService = configurationService;\n        this.onDidCreateEditors = this._register(( (new Emitter())));\n        this._onDidChangeSizeConstraints = this._register(( (new Relay())));\n        this.onDidChangeSizeConstraints = Event.any(this.onDidCreateEditors.event, this._onDidChangeSizeConstraints.event);\n        this._onDidChangeSelection = this._register(( (new Emitter())));\n        this.onDidChangeSelection = this._onDidChangeSelection.event;\n        this.primaryEditorPane = undefined;\n        this.secondaryEditorPane = undefined;\n        this.splitviewDisposables = this._register(( (new DisposableStore())));\n        this.editorDisposables = this._register(( (new DisposableStore())));\n        this.orientation = this.configurationService.getValue(SideBySideEditor_1.SIDE_BY_SIDE_LAYOUT_SETTING) === 'vertical' ? 0  : 1 ;\n        this.dimension = ( (new Dimension(0, 0)));\n        this.lastFocusedSide = undefined;\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.configurationService.onDidChangeConfiguration(e => this.onConfigurationUpdated(e)));\n    }\n    onConfigurationUpdated(event) {\n        if (event.affectsConfiguration(SideBySideEditor_1.SIDE_BY_SIDE_LAYOUT_SETTING)) {\n            this.orientation = this.configurationService.getValue(SideBySideEditor_1.SIDE_BY_SIDE_LAYOUT_SETTING) === 'vertical' ? 0  : 1 ;\n            if (this.splitview) {\n                this.recreateSplitview();\n            }\n        }\n    }\n    recreateSplitview() {\n        const container = assertIsDefined(this.getContainer());\n        const ratio = this.getSplitViewRatio();\n        if (this.splitview) {\n            container.removeChild(this.splitview.el);\n            this.splitviewDisposables.clear();\n        }\n        this.createSplitView(container, ratio);\n        this.layout(this.dimension);\n    }\n    getSplitViewRatio() {\n        let ratio = undefined;\n        if (this.splitview) {\n            const leftViewSize = this.splitview.getViewSize(0);\n            const rightViewSize = this.splitview.getViewSize(1);\n            if (Math.abs(leftViewSize - rightViewSize) > 1) {\n                const totalSize = this.splitview.orientation === 1  ? this.dimension.width : this.dimension.height;\n                ratio = leftViewSize / totalSize;\n            }\n        }\n        return ratio;\n    }\n    createEditor(parent) {\n        parent.classList.add('side-by-side-editor');\n        this.secondaryEditorContainer = $('.side-by-side-editor-container.editor-instance');\n        this.primaryEditorContainer = $('.side-by-side-editor-container.editor-instance');\n        this.createSplitView(parent);\n    }\n    createSplitView(parent, ratio) {\n        this.splitview = this.splitviewDisposables.add(( (new SplitView(parent, { orientation: this.orientation }))));\n        this.splitviewDisposables.add(this.splitview.onDidSashReset(() => this.splitview?.distributeViewSizes()));\n        if (this.orientation === 1 ) {\n            this.splitview.orthogonalEndSash = this._boundarySashes?.bottom;\n        }\n        else {\n            this.splitview.orthogonalStartSash = this._boundarySashes?.left;\n            this.splitview.orthogonalEndSash = this._boundarySashes?.right;\n        }\n        let leftSizing = Sizing.Distribute;\n        let rightSizing = Sizing.Distribute;\n        if (ratio) {\n            const totalSize = this.splitview.orientation === 1  ? this.dimension.width : this.dimension.height;\n            leftSizing = Math.round(totalSize * ratio);\n            rightSizing = totalSize - leftSizing;\n            this.splitview.layout(this.orientation === 1  ? this.dimension.width : this.dimension.height);\n        }\n        const secondaryEditorContainer = assertIsDefined(this.secondaryEditorContainer);\n        this.splitview.addView({\n            element: secondaryEditorContainer,\n            layout: size => this.layoutPane(this.secondaryEditorPane, size),\n            minimumSize: this.orientation === 1  ? DEFAULT_EDITOR_MIN_DIMENSIONS.width : DEFAULT_EDITOR_MIN_DIMENSIONS.height,\n            maximumSize: Number.POSITIVE_INFINITY,\n            onDidChange: Event.None\n        }, leftSizing);\n        const primaryEditorContainer = assertIsDefined(this.primaryEditorContainer);\n        this.splitview.addView({\n            element: primaryEditorContainer,\n            layout: size => this.layoutPane(this.primaryEditorPane, size),\n            minimumSize: this.orientation === 1  ? DEFAULT_EDITOR_MIN_DIMENSIONS.width : DEFAULT_EDITOR_MIN_DIMENSIONS.height,\n            maximumSize: Number.POSITIVE_INFINITY,\n            onDidChange: Event.None\n        }, rightSizing);\n        this.updateStyles();\n    }\n    getTitle() {\n        if (this.input) {\n            return this.input.getName();\n        }\n        return (\n             (localize('sideBySideEditor', \"Side by Side Editor\"))\n        );\n    }\n    async setInput(input, options, context, token) {\n        const oldInput = this.input;\n        await super.setInput(input, options, context, token);\n        if (!oldInput || !input.matches(oldInput)) {\n            if (oldInput) {\n                this.disposeEditors();\n            }\n            this.createEditors(input);\n        }\n        const { primary, secondary, viewState } = this.loadViewState(input, options, context);\n        this.lastFocusedSide = viewState?.focus;\n        if (typeof viewState?.ratio === 'number' && this.splitview) {\n            const totalSize = this.splitview.orientation === 1  ? this.dimension.width : this.dimension.height;\n            this.splitview.resizeView(0, Math.round(totalSize * viewState.ratio));\n        }\n        else {\n            this.splitview?.distributeViewSizes();\n        }\n        await Promise.all([\n            this.secondaryEditorPane?.setInput(input.secondary, secondary, context, token),\n            this.primaryEditorPane?.setInput(input.primary, primary, context, token)\n        ]);\n        if (typeof options?.target === 'number') {\n            this.lastFocusedSide = options.target;\n        }\n    }\n    loadViewState(input, options, context) {\n        const viewState = isSideBySideEditorViewState(options?.viewState) ? options?.viewState : this.loadEditorViewState(input, context);\n        let primaryOptions = Object.create(null);\n        let secondaryOptions = undefined;\n        if (options?.target === SideBySideEditor$1.SECONDARY) {\n            secondaryOptions = { ...options };\n        }\n        else {\n            primaryOptions = { ...options };\n        }\n        primaryOptions.viewState = viewState?.primary;\n        if (viewState?.secondary) {\n            if (!secondaryOptions) {\n                secondaryOptions = { viewState: viewState.secondary };\n            }\n            else {\n                secondaryOptions.viewState = viewState?.secondary;\n            }\n        }\n        return { primary: primaryOptions, secondary: secondaryOptions, viewState };\n    }\n    createEditors(newInput) {\n        this.secondaryEditorPane = this.doCreateEditor(newInput.secondary, assertIsDefined(this.secondaryEditorContainer));\n        this.primaryEditorPane = this.doCreateEditor(newInput.primary, assertIsDefined(this.primaryEditorContainer));\n        this.layout(this.dimension);\n        this._onDidChangeSizeConstraints.input = Event.any(( (Event.map(this.secondaryEditorPane.onDidChangeSizeConstraints, () => undefined))), ( (Event.map(this.primaryEditorPane.onDidChangeSizeConstraints, () => undefined))));\n        this.onDidCreateEditors.fire(undefined);\n        this.editorDisposables.add(this.primaryEditorPane.onDidFocus(() => this.onDidFocusChange(SideBySideEditor$1.PRIMARY)));\n        this.editorDisposables.add(this.secondaryEditorPane.onDidFocus(() => this.onDidFocusChange(SideBySideEditor$1.SECONDARY)));\n    }\n    doCreateEditor(editorInput, container) {\n        const editorPaneDescriptor = ( (Registry.as(EditorExtensions.EditorPane))).getEditorPane(editorInput);\n        if (!editorPaneDescriptor) {\n            throw new Error('No editor pane descriptor for editor found');\n        }\n        const editorPane = editorPaneDescriptor.instantiate(this.instantiationService);\n        editorPane.create(container);\n        editorPane.setVisible(this.isVisible(), this.group);\n        if (isEditorPaneWithSelection(editorPane)) {\n            this.editorDisposables.add(editorPane.onDidChangeSelection(e => this._onDidChangeSelection.fire(e)));\n        }\n        this.editorDisposables.add(editorPane);\n        return editorPane;\n    }\n    onDidFocusChange(side) {\n        this.lastFocusedSide = side;\n        this._onDidChangeControl.fire();\n    }\n    getSelection() {\n        const lastFocusedEditorPane = this.getLastFocusedEditorPane();\n        if (isEditorPaneWithSelection(lastFocusedEditorPane)) {\n            const selection = lastFocusedEditorPane.getSelection();\n            if (selection) {\n                return (\n                     (new SideBySideAwareEditorPaneSelection(\n                        selection,\n                        lastFocusedEditorPane === this.primaryEditorPane ? SideBySideEditor$1.PRIMARY : SideBySideEditor$1.SECONDARY\n                    ))\n                );\n            }\n        }\n        return undefined;\n    }\n    setOptions(options) {\n        super.setOptions(options);\n        if (typeof options?.target === 'number') {\n            this.lastFocusedSide = options.target;\n        }\n        this.getLastFocusedEditorPane()?.setOptions(options);\n    }\n    setEditorVisible(visible, group) {\n        this.primaryEditorPane?.setVisible(visible, group);\n        this.secondaryEditorPane?.setVisible(visible, group);\n        super.setEditorVisible(visible, group);\n    }\n    clearInput() {\n        super.clearInput();\n        this.primaryEditorPane?.clearInput();\n        this.secondaryEditorPane?.clearInput();\n        this.disposeEditors();\n    }\n    focus() {\n        this.getLastFocusedEditorPane()?.focus();\n    }\n    getLastFocusedEditorPane() {\n        if (this.lastFocusedSide === SideBySideEditor$1.SECONDARY) {\n            return this.secondaryEditorPane;\n        }\n        return this.primaryEditorPane;\n    }\n    layout(dimension) {\n        this.dimension = dimension;\n        const splitview = assertIsDefined(this.splitview);\n        splitview.layout(this.orientation === 1  ? dimension.width : dimension.height);\n    }\n    setBoundarySashes(sashes) {\n        this._boundarySashes = sashes;\n        if (this.splitview) {\n            this.splitview.orthogonalEndSash = sashes.bottom;\n        }\n    }\n    layoutPane(pane, size) {\n        pane?.layout(this.orientation === 1  ? ( (new Dimension(size, this.dimension.height))) : ( (new Dimension(this.dimension.width, size))));\n    }\n    getControl() {\n        return this.getLastFocusedEditorPane()?.getControl();\n    }\n    getPrimaryEditorPane() {\n        return this.primaryEditorPane;\n    }\n    getSecondaryEditorPane() {\n        return this.secondaryEditorPane;\n    }\n    tracksEditorViewState(input) {\n        return input instanceof SideBySideEditorInput;\n    }\n    computeEditorViewState(resource) {\n        if (!this.input || !isEqual(resource, this.toEditorViewStateResource(this.input))) {\n            return;\n        }\n        const primarViewState = this.primaryEditorPane?.getViewState();\n        const secondaryViewState = this.secondaryEditorPane?.getViewState();\n        if (!primarViewState || !secondaryViewState) {\n            return;\n        }\n        return {\n            primary: primarViewState,\n            secondary: secondaryViewState,\n            focus: this.lastFocusedSide,\n            ratio: this.getSplitViewRatio()\n        };\n    }\n    toEditorViewStateResource(input) {\n        let primary;\n        let secondary;\n        if (input instanceof SideBySideEditorInput) {\n            primary = input.primary.resource;\n            secondary = input.secondary.resource;\n        }\n        if (!secondary || !primary) {\n            return undefined;\n        }\n        return (\n             (URI.from({ scheme: 'sideBySide', path: `${multibyteAwareBtoa(( ( secondary.toString())))}${multibyteAwareBtoa(( ( primary.toString())))}` }))\n        );\n    }\n    updateStyles() {\n        super.updateStyles();\n        if (this.primaryEditorContainer) {\n            if (this.orientation === 1 ) {\n                this.primaryEditorContainer.style.borderLeftWidth = '1px';\n                this.primaryEditorContainer.style.borderLeftStyle = 'solid';\n                this.primaryEditorContainer.style.borderLeftColor = this.getColor(SIDE_BY_SIDE_EDITOR_VERTICAL_BORDER) ?? '';\n                this.primaryEditorContainer.style.borderTopWidth = '0';\n            }\n            else {\n                this.primaryEditorContainer.style.borderTopWidth = '1px';\n                this.primaryEditorContainer.style.borderTopStyle = 'solid';\n                this.primaryEditorContainer.style.borderTopColor = this.getColor(SIDE_BY_SIDE_EDITOR_HORIZONTAL_BORDER) ?? '';\n                this.primaryEditorContainer.style.borderLeftWidth = '0';\n            }\n        }\n    }\n    dispose() {\n        this.disposeEditors();\n        super.dispose();\n    }\n    disposeEditors() {\n        this.editorDisposables.clear();\n        this.secondaryEditorPane = undefined;\n        this.primaryEditorPane = undefined;\n        this.lastFocusedSide = undefined;\n        if (this.secondaryEditorContainer) {\n            clearNode(this.secondaryEditorContainer);\n        }\n        if (this.primaryEditorContainer) {\n            clearNode(this.primaryEditorContainer);\n        }\n    }\n};\nSideBySideEditor = SideBySideEditor_1 = ( (__decorate([\n    ( (__param(0, ITelemetryService))),\n    ( (__param(1, IInstantiationService))),\n    ( (__param(2, IThemeService))),\n    ( (__param(3, IStorageService))),\n    ( (__param(4, IConfigurationService))),\n    ( (__param(5, ITextResourceConfigurationService))),\n    ( (__param(6, IEditorService))),\n    ( (__param(7, IEditorGroupsService)))\n], SideBySideEditor)));\nclass SideBySideAwareEditorPaneSelection {\n    constructor(selection, side) {\n        this.selection = selection;\n        this.side = side;\n    }\n    compare(other) {\n        if (!(other instanceof SideBySideAwareEditorPaneSelection)) {\n            return 3 ;\n        }\n        if (this.side !== other.side) {\n            return 3 ;\n        }\n        return this.selection.compare(other.selection);\n    }\n    restore(options) {\n        const sideBySideEditorOptions = {\n            ...options,\n            target: this.side\n        };\n        return this.selection.restore(sideBySideEditorOptions);\n    }\n}\nexport { SideBySideEditor };\n", "import n from '../../../../../../../../external/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".side-by-side-editor-container{height:100%;width:100%}\";\nn(css,{});\nexport { css, css as default };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { CancellationTokenSource } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport '../../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { ByteSize, IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { Severity, INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { IProgressService } from 'monaco-editor/esm/vs/platform/progress/common/progress.js';\nimport { IExplorerService } from './files.js';\nimport { VIEW_ID } from '../common/files.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { Promises, RunOnceWorker, Limiter } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { newWriteableBufferStream, VSBuffer } from 'monaco-editor/esm/vs/base/common/buffer.js';\nimport { joinPath, dirname, basename } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { ResourceFileEdit } from 'monaco-editor/esm/vs/editor/browser/services/bulkEditService.js';\nimport { ExplorerItem } from '../common/explorerModel.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { extractEditorsAndFilesDropData } from 'monaco-editor/esm/vs/platform/dnd/browser/dnd.js';\nimport { IWorkspaceEditingService } from '../../../services/workspaces/common/workspaceEditing.js';\nimport { isWeb } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { triggerDownload } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { FileAccess, Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { mnemonicButtonLabel } from 'monaco-editor/esm/vs/base/common/labels.js';\nimport { listenStream } from 'monaco-editor/esm/vs/base/common/stream.js';\nimport { toDisposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { once } from 'monaco-editor/esm/vs/base/common/functional.js';\nimport { coalesce } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { canceled } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { WebFileSystemAccess } from 'monaco-editor/esm/vs/platform/files/browser/webFileSystemAccess.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { getFileNamesMessage, IDialogService, IFileDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nvar BrowserFileUpload_1, FileDownload_1;\nlet BrowserFileUpload = class BrowserFileUpload {\n    static { BrowserFileUpload_1 = this; }\n    static { this.MAX_PARALLEL_UPLOADS = 20; }\n    constructor(progressService, dialogService, explorerService, editorService, fileService) {\n        this.progressService = progressService;\n        this.dialogService = dialogService;\n        this.explorerService = explorerService;\n        this.editorService = editorService;\n        this.fileService = fileService;\n    }\n    upload(target, source) {\n        const cts = ( new CancellationTokenSource());\n        const uploadPromise = this.progressService.withProgress({\n            location: 10 ,\n            delay: 800,\n            cancellable: true,\n            title: ( localize('uploadingFiles', \"Uploading\"))\n        }, async (progress) => this.doUpload(target, this.toTransfer(source), progress, cts.token), () => cts.dispose(true));\n        this.progressService.withProgress({ location: VIEW_ID, delay: 500 }, () => uploadPromise);\n        return uploadPromise;\n    }\n    toTransfer(source) {\n        if (source instanceof DragEvent) {\n            return source.dataTransfer;\n        }\n        const transfer = { items: [] };\n        for (const file of source) {\n            transfer.items.push({\n                webkitGetAsEntry: () => {\n                    return {\n                        name: file.name,\n                        isDirectory: false,\n                        isFile: true,\n                        createReader: () => { throw new Error('Unsupported for files'); },\n                        file: resolve => resolve(file)\n                    };\n                }\n            });\n        }\n        return transfer;\n    }\n    async doUpload(target, source, progress, token) {\n        const items = source.items;\n        const entries = [];\n        for (const item of items) {\n            entries.push(item.webkitGetAsEntry());\n        }\n        const results = [];\n        const operation = {\n            startTime: Date.now(),\n            progressScheduler: ( new RunOnceWorker(steps => { progress.report(steps[steps.length - 1]); }, 1000)),\n            filesTotal: entries.length,\n            filesUploaded: 0,\n            totalBytesUploaded: 0\n        };\n        const uploadLimiter = ( new Limiter(BrowserFileUpload_1.MAX_PARALLEL_UPLOADS));\n        await Promises.settled(( entries.map(entry => {\n            return uploadLimiter.queue(async () => {\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                if (target && entry.name && target.getChild(entry.name)) {\n                    const { confirmed } = await this.dialogService.confirm(getFileOverwriteConfirm(entry.name));\n                    if (!confirmed) {\n                        return;\n                    }\n                    await this.explorerService.applyBulkEdit([( new ResourceFileEdit(\n                        joinPath(target.resource, entry.name),\n                        undefined,\n                        { recursive: true, folder: target.getChild(entry.name)?.isDirectory }\n                    ))], {\n                        undoLabel: ( localize('overwrite', \"Overwrite {0}\", entry.name)),\n                        progressLabel: ( localize('overwriting', \"Overwriting {0}\", entry.name)),\n                    });\n                    if (token.isCancellationRequested) {\n                        return;\n                    }\n                }\n                const result = await this.doUploadEntry(entry, target.resource, target, progress, operation, token);\n                if (result) {\n                    results.push(result);\n                }\n            });\n        })));\n        operation.progressScheduler.dispose();\n        const firstUploadedFile = results[0];\n        if (!token.isCancellationRequested && firstUploadedFile?.isFile) {\n            await this.editorService.openEditor({ resource: firstUploadedFile.resource, options: { pinned: true } });\n        }\n    }\n    async doUploadEntry(entry, parentResource, target, progress, operation, token) {\n        if (token.isCancellationRequested || !entry.name || (!entry.isFile && !entry.isDirectory)) {\n            return undefined;\n        }\n        let fileBytesUploaded = 0;\n        const reportProgress = (fileSize, bytesUploaded) => {\n            fileBytesUploaded += bytesUploaded;\n            operation.totalBytesUploaded += bytesUploaded;\n            const bytesUploadedPerSecond = operation.totalBytesUploaded / ((Date.now() - operation.startTime) / 1000);\n            let message;\n            if (fileSize < ByteSize.MB) {\n                if (operation.filesTotal === 1) {\n                    message = `${entry.name}`;\n                }\n                else {\n                    message = ( localize(\n                        'uploadProgressSmallMany',\n                        \"{0} of {1} files ({2}/s)\",\n                        operation.filesUploaded,\n                        operation.filesTotal,\n                        ByteSize.formatSize(bytesUploadedPerSecond)\n                    ));\n                }\n            }\n            else {\n                message = ( localize(\n                    'uploadProgressLarge',\n                    \"{0} ({1} of {2}, {3}/s)\",\n                    entry.name,\n                    ByteSize.formatSize(fileBytesUploaded),\n                    ByteSize.formatSize(fileSize),\n                    ByteSize.formatSize(bytesUploadedPerSecond)\n                ));\n            }\n            operation.progressScheduler.work({ message });\n        };\n        operation.filesUploaded++;\n        reportProgress(0, 0);\n        const resource = joinPath(parentResource, entry.name);\n        if (entry.isFile) {\n            const file = await ( new Promise((resolve, reject) => entry.file(resolve, reject)));\n            if (token.isCancellationRequested) {\n                return undefined;\n            }\n            if (typeof file.stream === 'function' && file.size > ByteSize.MB) {\n                await this.doUploadFileBuffered(resource, file, reportProgress, token);\n            }\n            else {\n                await this.doUploadFileUnbuffered(resource, file, reportProgress);\n            }\n            return { isFile: true, resource };\n        }\n        else {\n            await this.fileService.createFolder(resource);\n            if (token.isCancellationRequested) {\n                return undefined;\n            }\n            const dirReader = entry.createReader();\n            const childEntries = [];\n            let done = false;\n            do {\n                const childEntriesChunk = await ( new Promise((resolve, reject) => dirReader.readEntries(resolve, reject)));\n                if (childEntriesChunk.length > 0) {\n                    childEntries.push(...childEntriesChunk);\n                }\n                else {\n                    done = true;\n                }\n            } while (!done && !token.isCancellationRequested);\n            operation.filesTotal += childEntries.length;\n            const folderTarget = target && target.getChild(entry.name) || undefined;\n            const fileChildEntries = [];\n            const folderChildEntries = [];\n            for (const childEntry of childEntries) {\n                if (childEntry.isFile) {\n                    fileChildEntries.push(childEntry);\n                }\n                else if (childEntry.isDirectory) {\n                    folderChildEntries.push(childEntry);\n                }\n            }\n            const fileUploadQueue = ( new Limiter(BrowserFileUpload_1.MAX_PARALLEL_UPLOADS));\n            await Promises.settled(( fileChildEntries.map(fileChildEntry => {\n                return fileUploadQueue.queue(() => this.doUploadEntry(fileChildEntry, resource, folderTarget, progress, operation, token));\n            })));\n            for (const folderChildEntry of folderChildEntries) {\n                await this.doUploadEntry(folderChildEntry, resource, folderTarget, progress, operation, token);\n            }\n            return { isFile: false, resource };\n        }\n    }\n    async doUploadFileBuffered(resource, file, progressReporter, token) {\n        const writeableStream = newWriteableBufferStream({\n            highWaterMark: 10\n        });\n        const writeFilePromise = this.fileService.writeFile(resource, writeableStream);\n        try {\n            const reader = file.stream().getReader();\n            let res = await reader.read();\n            while (!res.done) {\n                if (token.isCancellationRequested) {\n                    break;\n                }\n                const buffer = VSBuffer.wrap(res.value);\n                await writeableStream.write(buffer);\n                if (token.isCancellationRequested) {\n                    break;\n                }\n                progressReporter(file.size, buffer.byteLength);\n                res = await reader.read();\n            }\n            writeableStream.end(undefined);\n        }\n        catch (error) {\n            writeableStream.error(error);\n            writeableStream.end();\n        }\n        if (token.isCancellationRequested) {\n            return undefined;\n        }\n        await writeFilePromise;\n    }\n    doUploadFileUnbuffered(resource, file, progressReporter) {\n        return ( new Promise((resolve, reject) => {\n            const reader = ( new FileReader());\n            reader.onload = async (event) => {\n                try {\n                    if (event.target?.result instanceof ArrayBuffer) {\n                        const buffer = VSBuffer.wrap(( new Uint8Array(event.target.result)));\n                        await this.fileService.writeFile(resource, buffer);\n                        progressReporter(file.size, buffer.byteLength);\n                    }\n                    else {\n                        throw new Error('Could not read from dropped file.');\n                    }\n                    resolve();\n                }\n                catch (error) {\n                    reject(error);\n                }\n            };\n            reader.readAsArrayBuffer(file);\n        }));\n    }\n};\nBrowserFileUpload = BrowserFileUpload_1 = ( __decorate([\n    ( __param(0, IProgressService)),\n    ( __param(1, IDialogService)),\n    ( __param(2, IExplorerService)),\n    ( __param(3, IEditorService)),\n    ( __param(4, IFileService))\n], BrowserFileUpload));\nlet ExternalFileImport = class ExternalFileImport {\n    constructor(fileService, hostService, contextService, configurationService, dialogService, workspaceEditingService, explorerService, editorService, progressService, notificationService, instantiationService) {\n        this.fileService = fileService;\n        this.hostService = hostService;\n        this.contextService = contextService;\n        this.configurationService = configurationService;\n        this.dialogService = dialogService;\n        this.workspaceEditingService = workspaceEditingService;\n        this.explorerService = explorerService;\n        this.editorService = editorService;\n        this.progressService = progressService;\n        this.notificationService = notificationService;\n        this.instantiationService = instantiationService;\n    }\n    async import(target, source) {\n        const cts = ( new CancellationTokenSource());\n        const importPromise = this.progressService.withProgress({\n            location: 10 ,\n            delay: 800,\n            cancellable: true,\n            title: ( localize('copyingFiles', \"Copying...\"))\n        }, async () => await this.doImport(target, source, cts.token), () => cts.dispose(true));\n        this.progressService.withProgress({ location: VIEW_ID, delay: 500 }, () => importPromise);\n        return importPromise;\n    }\n    async doImport(target, source, token) {\n        const candidateFiles = coalesce(( (await this.instantiationService.invokeFunction(accessor => extractEditorsAndFilesDropData(accessor, source))).map(editor => editor.resource)));\n        await Promise.all(( candidateFiles.map(resource => this.fileService.activateProvider(resource.scheme))));\n        const files = coalesce(candidateFiles.filter(resource => this.fileService.hasProvider(resource)));\n        const resolvedFiles = await this.fileService.resolveAll(( files.map(file => ({ resource: file }))));\n        if (token.isCancellationRequested) {\n            return;\n        }\n        this.hostService.focus();\n        const folders = ( resolvedFiles.filter(resolvedFile => resolvedFile.success && resolvedFile.stat?.isDirectory).map(resolvedFile => ({ uri: resolvedFile.stat.resource })));\n        if (folders.length > 0 && target.isRoot) {\n            let ImportChoice;\n            ( (function(ImportChoice) {\n                ImportChoice[ImportChoice[\"Copy\"] = 1] = \"Copy\";\n                ImportChoice[ImportChoice[\"Add\"] = 2] = \"Add\";\n            })(ImportChoice || (ImportChoice = {})));\n            const buttons = [\n                {\n                    label: folders.length > 1 ?\n                        ( localize('copyFolders', \"&&Copy Folders\")) :\n                        ( localize('copyFolder', \"&&Copy Folder\")),\n                    run: () => ImportChoice.Copy\n                }\n            ];\n            let message;\n            const workspaceFolderSchemas = ( this.contextService.getWorkspace().folders.map(folder => folder.uri.scheme));\n            if (( folders.some(folder => workspaceFolderSchemas.indexOf(folder.uri.scheme) >= 0))) {\n                buttons.unshift({\n                    label: folders.length > 1 ?\n                        ( localize('addFolders', \"&&Add Folders to Workspace\")) :\n                        ( localize('addFolder', \"&&Add Folder to Workspace\")),\n                    run: () => ImportChoice.Add\n                });\n                message = folders.length > 1 ?\n                    ( localize(\n                        'dropFolders',\n                        \"Do you want to copy the folders or add the folders to the workspace?\"\n                    )) :\n                    ( localize(\n                        'dropFolder',\n                        \"Do you want to copy '{0}' or add '{0}' as a folder to the workspace?\",\n                        basename(folders[0].uri)\n                    ));\n            }\n            else {\n                message = folders.length > 1 ?\n                    ( localize('copyfolders', \"Are you sure to want to copy folders?\")) :\n                    ( localize(\n                        'copyfolder',\n                        \"Are you sure to want to copy '{0}'?\",\n                        basename(folders[0].uri)\n                    ));\n            }\n            const { result } = await this.dialogService.prompt({\n                type: Severity.Info,\n                message,\n                buttons,\n                cancelButton: true\n            });\n            if (result === ImportChoice.Add) {\n                return this.workspaceEditingService.addFolders(folders);\n            }\n            if (result === ImportChoice.Copy) {\n                return this.importResources(target, files, token);\n            }\n        }\n        else if (target instanceof ExplorerItem) {\n            return this.importResources(target, files, token);\n        }\n    }\n    async importResources(target, resources, token) {\n        if (resources && resources.length > 0) {\n            const targetStat = await this.fileService.resolve(target.resource);\n            if (token.isCancellationRequested) {\n                return;\n            }\n            const targetNames = ( new Set());\n            const caseSensitive = this.fileService.hasCapability(target.resource, 1024 );\n            if (targetStat.children) {\n                targetStat.children.forEach(child => {\n                    targetNames.add(caseSensitive ? child.name : child.name.toLowerCase());\n                });\n            }\n            let inaccessibleFileCount = 0;\n            const resourcesFiltered = coalesce((await Promises.settled(( resources.map(async (resource) => {\n                const fileDoesNotExist = !(await this.fileService.exists(resource));\n                if (fileDoesNotExist) {\n                    inaccessibleFileCount++;\n                    return undefined;\n                }\n                if (( targetNames.has(caseSensitive ? basename(resource) : basename(resource).toLowerCase()))) {\n                    const confirmationResult = await this.dialogService.confirm(getFileOverwriteConfirm(basename(resource)));\n                    if (!confirmationResult.confirmed) {\n                        return undefined;\n                    }\n                }\n                return resource;\n            })))));\n            if (inaccessibleFileCount > 0) {\n                this.notificationService.error(inaccessibleFileCount > 1 ? ( localize(\n                    'filesInaccessible',\n                    \"Some or all of the dropped files could not be accessed for import.\"\n                )) : ( localize('fileInaccessible', \"The dropped file could not be accessed for import.\")));\n            }\n            const resourceFileEdits = ( resourcesFiltered.map(resource => {\n                const sourceFileName = basename(resource);\n                const targetFile = joinPath(target.resource, sourceFileName);\n                return ( new ResourceFileEdit(resource, targetFile, { overwrite: true, copy: true }));\n            }));\n            const undoLevel = this.configurationService.getValue().explorer.confirmUndo;\n            await this.explorerService.applyBulkEdit(resourceFileEdits, {\n                undoLabel: resourcesFiltered.length === 1 ?\n                    ( localize(\n                        { comment: ['substitution will be the name of the file that was imported'], key: 'importFile' },\n                        \"Import {0}\",\n                        basename(resourcesFiltered[0])\n                    )) :\n                    ( localize(\n                        { comment: ['substitution will be the number of files that were imported'], key: 'importnFile' },\n                        \"Import {0} resources\",\n                        resourcesFiltered.length\n                    )),\n                progressLabel: resourcesFiltered.length === 1 ?\n                    ( localize(\n                        { comment: ['substitution will be the name of the file that was copied'], key: 'copyingFile' },\n                        \"Copying {0}\",\n                        basename(resourcesFiltered[0])\n                    )) :\n                    ( localize(\n                        { comment: ['substitution will be the number of files that were copied'], key: 'copyingnFile' },\n                        \"Copying {0} resources\",\n                        resourcesFiltered.length\n                    )),\n                progressLocation: 10 ,\n                confirmBeforeUndo: undoLevel === \"verbose\"  || undoLevel === \"default\" ,\n            });\n            if (resourceFileEdits.length === 1) {\n                const item = this.explorerService.findClosest(resourceFileEdits[0].newResource);\n                if (item && !item.isDirectory) {\n                    this.editorService.openEditor({ resource: item.resource, options: { pinned: true } });\n                }\n            }\n        }\n    }\n};\nExternalFileImport = ( __decorate([\n    ( __param(0, IFileService)),\n    ( __param(1, IHostService)),\n    ( __param(2, IWorkspaceContextService)),\n    ( __param(3, IConfigurationService)),\n    ( __param(4, IDialogService)),\n    ( __param(5, IWorkspaceEditingService)),\n    ( __param(6, IExplorerService)),\n    ( __param(7, IEditorService)),\n    ( __param(8, IProgressService)),\n    ( __param(9, INotificationService)),\n    ( __param(10, IInstantiationService))\n], ExternalFileImport));\nlet FileDownload = class FileDownload {\n    static { FileDownload_1 = this; }\n    static { this.LAST_USED_DOWNLOAD_PATH_STORAGE_KEY = 'workbench.explorer.downloadPath'; }\n    constructor(fileService, explorerService, progressService, logService, fileDialogService, storageService) {\n        this.fileService = fileService;\n        this.explorerService = explorerService;\n        this.progressService = progressService;\n        this.logService = logService;\n        this.fileDialogService = fileDialogService;\n        this.storageService = storageService;\n    }\n    download(source) {\n        const cts = ( new CancellationTokenSource());\n        const downloadPromise = this.progressService.withProgress({\n            location: 10 ,\n            delay: 800,\n            cancellable: isWeb,\n            title: ( localize('downloadingFiles', \"Downloading\"))\n        }, async (progress) => this.doDownload(source, progress, cts), () => cts.dispose(true));\n        this.progressService.withProgress({ location: VIEW_ID, delay: 500 }, () => downloadPromise);\n        return downloadPromise;\n    }\n    async doDownload(sources, progress, cts) {\n        for (const source of sources) {\n            if (cts.token.isCancellationRequested) {\n                return;\n            }\n            if (isWeb) {\n                await this.doDownloadBrowser(source.resource, progress, cts);\n            }\n            else {\n                await this.doDownloadNative(source, progress, cts);\n            }\n        }\n    }\n    async doDownloadBrowser(resource, progress, cts) {\n        const stat = await this.fileService.resolve(resource, { resolveMetadata: true });\n        if (cts.token.isCancellationRequested) {\n            return;\n        }\n        const maxBlobDownloadSize = 32 * ByteSize.MB;\n        const preferFileSystemAccessWebApis = stat.isDirectory || stat.size > maxBlobDownloadSize;\n        if (preferFileSystemAccessWebApis && WebFileSystemAccess.supported(window)) {\n            try {\n                const parentFolder = await window.showDirectoryPicker();\n                const operation = {\n                    startTime: Date.now(),\n                    progressScheduler: ( new RunOnceWorker(steps => { progress.report(steps[steps.length - 1]); }, 1000)),\n                    filesTotal: stat.isDirectory ? 0 : 1,\n                    filesDownloaded: 0,\n                    totalBytesDownloaded: 0,\n                    fileBytesDownloaded: 0\n                };\n                if (stat.isDirectory) {\n                    const targetFolder = await parentFolder.getDirectoryHandle(stat.name, { create: true });\n                    await this.downloadFolderBrowser(stat, targetFolder, operation, cts.token);\n                }\n                else {\n                    await this.downloadFileBrowser(parentFolder, stat, operation, cts.token);\n                }\n                operation.progressScheduler.dispose();\n            }\n            catch (error) {\n                this.logService.warn(error);\n                cts.cancel();\n            }\n        }\n        else if (stat.isFile) {\n            let bufferOrUri;\n            try {\n                bufferOrUri = (await this.fileService.readFile(stat.resource, { limits: { size: maxBlobDownloadSize } }, cts.token)).value.buffer;\n            }\n            catch (error) {\n                bufferOrUri = FileAccess.uriToBrowserUri(stat.resource);\n            }\n            if (!cts.token.isCancellationRequested) {\n                triggerDownload(bufferOrUri, stat.name);\n            }\n        }\n    }\n    async downloadFileBufferedBrowser(resource, target, operation, token) {\n        const contents = await this.fileService.readFileStream(resource, undefined, token);\n        if (token.isCancellationRequested) {\n            target.close();\n            return;\n        }\n        return ( new Promise((resolve, reject) => {\n            const sourceStream = contents.value;\n            const disposables = ( new DisposableStore());\n            disposables.add(toDisposable(() => target.close()));\n            disposables.add(once(token.onCancellationRequested)(() => {\n                disposables.dispose();\n                reject(canceled());\n            }));\n            listenStream(sourceStream, {\n                onData: data => {\n                    target.write(data.buffer);\n                    this.reportProgress(contents.name, contents.size, data.byteLength, operation);\n                },\n                onError: error => {\n                    disposables.dispose();\n                    reject(error);\n                },\n                onEnd: () => {\n                    disposables.dispose();\n                    resolve();\n                }\n            }, token);\n        }));\n    }\n    async downloadFileUnbufferedBrowser(resource, target, operation, token) {\n        const contents = await this.fileService.readFile(resource, undefined, token);\n        if (!token.isCancellationRequested) {\n            target.write(contents.value.buffer);\n            this.reportProgress(contents.name, contents.size, contents.value.byteLength, operation);\n        }\n        target.close();\n    }\n    async downloadFileBrowser(targetFolder, file, operation, token) {\n        operation.filesDownloaded++;\n        operation.fileBytesDownloaded = 0;\n        this.reportProgress(file.name, 0, 0, operation);\n        const targetFile = await targetFolder.getFileHandle(file.name, { create: true });\n        const targetFileWriter = await targetFile.createWritable();\n        if (file.size > ByteSize.MB) {\n            return this.downloadFileBufferedBrowser(file.resource, targetFileWriter, operation, token);\n        }\n        return this.downloadFileUnbufferedBrowser(file.resource, targetFileWriter, operation, token);\n    }\n    async downloadFolderBrowser(folder, targetFolder, operation, token) {\n        if (folder.children) {\n            operation.filesTotal += (( folder.children.map(child => child.isFile))).length;\n            for (const child of folder.children) {\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                if (child.isFile) {\n                    await this.downloadFileBrowser(targetFolder, child, operation, token);\n                }\n                else {\n                    const childFolder = await targetFolder.getDirectoryHandle(child.name, { create: true });\n                    const resolvedChildFolder = await this.fileService.resolve(child.resource, { resolveMetadata: true });\n                    await this.downloadFolderBrowser(resolvedChildFolder, childFolder, operation, token);\n                }\n            }\n        }\n    }\n    reportProgress(name, fileSize, bytesDownloaded, operation) {\n        operation.fileBytesDownloaded += bytesDownloaded;\n        operation.totalBytesDownloaded += bytesDownloaded;\n        const bytesDownloadedPerSecond = operation.totalBytesDownloaded / ((Date.now() - operation.startTime) / 1000);\n        let message;\n        if (fileSize < ByteSize.MB) {\n            if (operation.filesTotal === 1) {\n                message = name;\n            }\n            else {\n                message = ( localize(\n                    'downloadProgressSmallMany',\n                    \"{0} of {1} files ({2}/s)\",\n                    operation.filesDownloaded,\n                    operation.filesTotal,\n                    ByteSize.formatSize(bytesDownloadedPerSecond)\n                ));\n            }\n        }\n        else {\n            message = ( localize(\n                'downloadProgressLarge',\n                \"{0} ({1} of {2}, {3}/s)\",\n                name,\n                ByteSize.formatSize(operation.fileBytesDownloaded),\n                ByteSize.formatSize(fileSize),\n                ByteSize.formatSize(bytesDownloadedPerSecond)\n            ));\n        }\n        operation.progressScheduler.work({ message });\n    }\n    async doDownloadNative(explorerItem, progress, cts) {\n        progress.report({ message: explorerItem.name });\n        let defaultUri;\n        const lastUsedDownloadPath = this.storageService.get(FileDownload_1.LAST_USED_DOWNLOAD_PATH_STORAGE_KEY, -1 );\n        if (lastUsedDownloadPath) {\n            defaultUri = joinPath(URI.file(lastUsedDownloadPath), explorerItem.name);\n        }\n        else {\n            defaultUri = joinPath(explorerItem.isDirectory ?\n                await this.fileDialogService.defaultFolderPath(Schemas.file) :\n                await this.fileDialogService.defaultFilePath(Schemas.file), explorerItem.name);\n        }\n        const destination = await this.fileDialogService.showSaveDialog({\n            availableFileSystems: [Schemas.file],\n            saveLabel: mnemonicButtonLabel(( localize('downloadButton', \"Download\"))),\n            title: ( localize('chooseWhereToDownload', \"Choose Where to Download\")),\n            defaultUri\n        });\n        if (destination) {\n            this.storageService.store(FileDownload_1.LAST_USED_DOWNLOAD_PATH_STORAGE_KEY, dirname(destination).fsPath, -1 , 1 );\n            await this.explorerService.applyBulkEdit([( new ResourceFileEdit(explorerItem.resource, destination, { overwrite: true, copy: true }))], {\n                undoLabel: ( localize('downloadBulkEdit', \"Download {0}\", explorerItem.name)),\n                progressLabel: ( localize('downloadingBulkEdit', \"Downloading {0}\", explorerItem.name)),\n                progressLocation: 10\n            });\n        }\n        else {\n            cts.cancel();\n        }\n    }\n};\nFileDownload = FileDownload_1 = ( __decorate([\n    ( __param(0, IFileService)),\n    ( __param(1, IExplorerService)),\n    ( __param(2, IProgressService)),\n    ( __param(3, ILogService)),\n    ( __param(4, IFileDialogService)),\n    ( __param(5, IStorageService))\n], FileDownload));\nfunction getFileOverwriteConfirm(name) {\n    return {\n        message: ( localize(\n            'confirmOverwrite',\n            \"A file or folder with the name '{0}' already exists in the destination folder. Do you want to replace it?\",\n            name\n        )),\n        detail: ( localize('irreversible', \"This action is irreversible!\")),\n        primaryButton: ( localize(\n            { key: 'replaceButtonLabel', comment: ['&& denotes a mnemonic'] },\n            \"&&Replace\"\n        )),\n        type: 'warning'\n    };\n}\nfunction getMultipleFilesOverwriteConfirm(files) {\n    if (files.length > 1) {\n        return {\n            message: ( localize(\n                'confirmManyOverwrites',\n                \"The following {0} files and/or folders already exist in the destination folder. Do you want to replace them?\",\n                files.length\n            )),\n            detail: getFileNamesMessage(files) + '\\n' + ( localize('irreversible', \"This action is irreversible!\")),\n            primaryButton: ( localize(\n                { key: 'replaceButtonLabel', comment: ['&& denotes a mnemonic'] },\n                \"&&Replace\"\n            )),\n            type: 'warning'\n        };\n    }\n    return getFileOverwriteConfirm(basename(files[0]));\n}\nexport { BrowserFileUpload, ExternalFileImport, FileDownload, getFileOverwriteConfirm, getMultipleFilesOverwriteConfirm };\n", "import { __decorate, __param } from '../../../../../../../../external/tslib/tslib.es6.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { listInvalidItemForeground, listDeemphasizedForeground } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { explorerRootErrorEmitter } from './explorerViewer.js';\nimport { IExplorerService } from '../files.js';\nimport { toErrorMessage } from 'monaco-editor/esm/vs/base/common/errorMessage.js';\nfunction provideDecorations(fileStat) {\n    if (fileStat.isRoot && fileStat.error) {\n        return {\n            tooltip: ( localize(\n                'canNotResolve',\n                \"Unable to resolve workspace folder ({0})\",\n                toErrorMessage(fileStat.error)\n            )),\n            letter: '!',\n            color: listInvalidItemForeground,\n        };\n    }\n    if (fileStat.isSymbolicLink) {\n        return {\n            tooltip: ( localize('symbolicLlink', \"Symbolic Link\")),\n            letter: '\\u2937'\n        };\n    }\n    if (fileStat.isUnknown) {\n        return {\n            tooltip: ( localize('unknown', \"Unknown File Type\")),\n            letter: '?'\n        };\n    }\n    if (fileStat.isExcluded) {\n        return {\n            color: listDeemphasizedForeground,\n        };\n    }\n    return undefined;\n}\nlet ExplorerDecorationsProvider = class ExplorerDecorationsProvider {\n    constructor(explorerService, contextService) {\n        this.explorerService = explorerService;\n        this.label = ( localize('label', \"Explorer\"));\n        this._onDidChange = ( new Emitter());\n        this.toDispose = ( new DisposableStore());\n        this.toDispose.add(this._onDidChange);\n        this.toDispose.add(contextService.onDidChangeWorkspaceFolders(e => {\n            this._onDidChange.fire(( e.changed.concat(e.added).map(wf => wf.uri)));\n        }));\n        this.toDispose.add(explorerRootErrorEmitter.event((resource => {\n            this._onDidChange.fire([resource]);\n        })));\n    }\n    get onDidChange() {\n        return this._onDidChange.event;\n    }\n    async provideDecorations(resource) {\n        const fileStat = this.explorerService.findClosest(resource);\n        if (!fileStat) {\n            throw new Error('ExplorerItem not found');\n        }\n        return provideDecorations(fileStat);\n    }\n    dispose() {\n        this.toDispose.dispose();\n    }\n};\nExplorerDecorationsProvider = ( __decorate([\n    ( __param(0, IExplorerService)),\n    ( __param(1, IWorkspaceContextService))\n], ExplorerDecorationsProvider));\nexport { ExplorerDecorationsProvider, provideDecorations };\n", "import { __decorate, __param } from '../../../../../../../../external/tslib/tslib.es6.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport * as glob from 'monaco-editor/esm/vs/base/common/glob.js';\nimport { IProgressService } from 'monaco-editor/esm/vs/platform/progress/common/progress.js';\nimport { Severity, INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { FileKind, IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { IWorkbenchLayoutService } from '../../../../services/layout/browser/layoutService.js';\nimport { isTemporaryWorkspace, IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { DisposableStore, toDisposable, dispose, Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IContextViewService, IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { dirname, joinPath, distinctParents } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { InputBox } from 'monaco-editor/esm/vs/base/browser/ui/inputbox/inputBox.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { once } from 'monaco-editor/esm/vs/base/common/functional.js';\nimport { equals, deepClone } from 'monaco-editor/esm/vs/base/common/objects.js';\nimport * as path from 'monaco-editor/esm/vs/base/common/path.js';\nimport { ExplorerItem, NewExplorerItem } from '../../common/explorerModel.js';\nimport { compareFileNamesDefault, compareFileExtensionsDefault, compareFileNamesUnicode, compareFileExtensionsUnicode, compareFileNamesLower, compareFileExtensionsLower, compareFileNamesUpper, compareFileExtensionsUpper } from 'monaco-editor/esm/vs/base/common/comparers.js';\nimport { containsDragType, CodeDataTransfers } from 'monaco-editor/esm/vs/platform/dnd/browser/dnd.js';\nimport { fillEditorsDragData } from '../../../../browser/dnd.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { DataTransfers } from 'monaco-editor/esm/vs/base/browser/dnd.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { ExternalElementsDragAndDropData, NativeDragAndDropData } from 'monaco-editor/esm/vs/base/browser/ui/list/listView.js';\nimport { isWeb, isMacintosh } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport '../../../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { IWorkspaceEditingService } from '../../../../services/workspaces/common/workspaceEditing.js';\nimport { IEditorService } from '../../../../services/editor/common/editorService.js';\nimport { findValidPasteFileTarget } from '../fileActions.js';\nimport { createMatches } from 'monaco-editor/esm/vs/base/common/filters.js';\nimport { Emitter, EventMultiplexer, Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { isStringArray, isNumber } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { ResourceFileEdit } from 'monaco-editor/esm/vs/editor/browser/services/bulkEditService.js';\nimport { IExplorerService } from '../files.js';\nimport { ExternalFileImport, BrowserFileUpload, getMultipleFilesOverwriteConfirm } from '../fileImportExport.js';\nimport { toErrorMessage } from 'monaco-editor/esm/vs/base/common/errorMessage.js';\nimport { WebFileSystemAccess } from 'monaco-editor/esm/vs/platform/files/browser/webFileSystemAccess.js';\nimport { IgnoreFile } from '../../../../services/search/common/ignoreFile.js';\nimport { ResourceSet } from 'monaco-editor/esm/vs/base/common/map.js';\nimport { TernarySearchTree } from 'monaco-editor/esm/vs/base/common/ternarySearchTree.js';\nimport { defaultInputBoxStyles } from 'monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js';\nimport { timeout } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { IHoverService } from '../../../../services/hover/browser/hover.js';\nimport { IFilesConfigurationService } from '../../../../services/filesConfiguration/common/filesConfigurationService.js';\nimport { getFileNamesMessage, IDialogService } from '../../../../../platform/dialogs/common/dialogs.js';\nvar FilesRenderer_1, FileDragAndDrop_1;\nclass ExplorerDelegate {\n    static { this.ITEM_HEIGHT = 22; }\n    getHeight(element) {\n        return ExplorerDelegate.ITEM_HEIGHT;\n    }\n    getTemplateId(element) {\n        return FilesRenderer.ID;\n    }\n}\nconst explorerRootErrorEmitter = ( new Emitter());\nlet ExplorerDataSource = class ExplorerDataSource {\n    constructor(fileFilter, progressService, configService, notificationService, layoutService, fileService, explorerService, contextService, filesConfigService) {\n        this.fileFilter = fileFilter;\n        this.progressService = progressService;\n        this.configService = configService;\n        this.notificationService = notificationService;\n        this.layoutService = layoutService;\n        this.fileService = fileService;\n        this.explorerService = explorerService;\n        this.contextService = contextService;\n        this.filesConfigService = filesConfigService;\n    }\n    hasChildren(element) {\n        return Array.isArray(element) || element.hasChildren((stat) => this.fileFilter.filter(stat, 1 ));\n    }\n    getChildren(element) {\n        if (Array.isArray(element)) {\n            return element;\n        }\n        const hasError = element.error;\n        const sortOrder = this.explorerService.sortOrderConfiguration.sortOrder;\n        const children = element.fetchChildren(sortOrder);\n        if (Array.isArray(children)) {\n            return children;\n        }\n        const promise = children.then(children => {\n            if (element instanceof ExplorerItem && element.isRoot && !element.error && hasError && this.contextService.getWorkbenchState() !== 2 ) {\n                explorerRootErrorEmitter.fire(element.resource);\n            }\n            return children;\n        }, e => {\n            if (element instanceof ExplorerItem && element.isRoot) {\n                if (this.contextService.getWorkbenchState() === 2 ) {\n                    const placeholder = ( new ExplorerItem(\n                        element.resource,\n                        this.fileService,\n                        this.configService,\n                        this.filesConfigService,\n                        undefined,\n                        undefined,\n                        false\n                    ));\n                    placeholder.error = e;\n                    return [placeholder];\n                }\n                else {\n                    explorerRootErrorEmitter.fire(element.resource);\n                }\n            }\n            else {\n                this.notificationService.error(e);\n            }\n            return [];\n        });\n        this.progressService.withProgress({\n            location: 1 ,\n            delay: this.layoutService.isRestored() ? 800 : 1500\n        }, _progress => promise);\n        return promise;\n    }\n};\nExplorerDataSource = ( __decorate([\n    ( __param(1, IProgressService)),\n    ( __param(2, IConfigurationService)),\n    ( __param(3, INotificationService)),\n    ( __param(4, IWorkbenchLayoutService)),\n    ( __param(5, IFileService)),\n    ( __param(6, IExplorerService)),\n    ( __param(7, IWorkspaceContextService)),\n    ( __param(8, IFilesConfigurationService))\n], ExplorerDataSource));\nclass CompressedNavigationController {\n    static { this.ID = 0; }\n    get index() { return this._index; }\n    get count() { return this.items.length; }\n    get current() { return this.items[this._index]; }\n    get currentId() { return `${this.id}_${this.index}`; }\n    get labels() { return this._labels; }\n    constructor(id, items, templateData, depth, collapsed) {\n        this.id = id;\n        this.items = items;\n        this.depth = depth;\n        this.collapsed = collapsed;\n        this._onDidChange = ( new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._index = items.length - 1;\n        this.updateLabels(templateData);\n        this._updateLabelDisposable = templateData.label.onDidRender(() => this.updateLabels(templateData));\n    }\n    updateLabels(templateData) {\n        this._labels = Array.from(templateData.container.querySelectorAll('.label-name'));\n        let parents = '';\n        for (let i = 0; i < this.labels.length; i++) {\n            const ariaLabel = parents.length ? `${this.items[i].name}, compact, ${parents}` : this.items[i].name;\n            this.labels[i].setAttribute('aria-label', ariaLabel);\n            this.labels[i].setAttribute('aria-level', `${this.depth + i}`);\n            parents = parents.length ? `${this.items[i].name} ${parents}` : this.items[i].name;\n        }\n        this.updateCollapsed(this.collapsed);\n        if (this._index < this.labels.length) {\n            this.labels[this._index].classList.add('active');\n        }\n    }\n    previous() {\n        if (this._index <= 0) {\n            return;\n        }\n        this.setIndex(this._index - 1);\n    }\n    next() {\n        if (this._index >= this.items.length - 1) {\n            return;\n        }\n        this.setIndex(this._index + 1);\n    }\n    first() {\n        if (this._index === 0) {\n            return;\n        }\n        this.setIndex(0);\n    }\n    last() {\n        if (this._index === this.items.length - 1) {\n            return;\n        }\n        this.setIndex(this.items.length - 1);\n    }\n    setIndex(index) {\n        if (index < 0 || index >= this.items.length) {\n            return;\n        }\n        this.labels[this._index].classList.remove('active');\n        this._index = index;\n        this.labels[this._index].classList.add('active');\n        this._onDidChange.fire();\n    }\n    updateCollapsed(collapsed) {\n        this.collapsed = collapsed;\n        for (let i = 0; i < this.labels.length; i++) {\n            this.labels[i].setAttribute('aria-expanded', collapsed ? 'false' : 'true');\n        }\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._updateLabelDisposable.dispose();\n    }\n}\nlet FilesRenderer = class FilesRenderer {\n    static { FilesRenderer_1 = this; }\n    static { this.ID = 'file'; }\n    constructor(container, labels, updateWidth, contextViewService, themeService, configurationService, explorerService, labelService, contextService, contextMenuService, hoverService) {\n        this.labels = labels;\n        this.updateWidth = updateWidth;\n        this.contextViewService = contextViewService;\n        this.themeService = themeService;\n        this.configurationService = configurationService;\n        this.explorerService = explorerService;\n        this.labelService = labelService;\n        this.contextService = contextService;\n        this.contextMenuService = contextMenuService;\n        this.hoverService = hoverService;\n        this.compressedNavigationControllers = ( new Map());\n        this._onDidChangeActiveDescendant = ( new EventMultiplexer());\n        this.onDidChangeActiveDescendant = this._onDidChangeActiveDescendant.event;\n        this.hoverDelegate = new (class {\n            get delay() {\n                if (Date.now() - this.lastHoverHideTime < 500) {\n                    return 0;\n                }\n                return this.configurationService.getValue('workbench.hover.delay');\n            }\n            constructor(configurationService, hoverService) {\n                this.configurationService = configurationService;\n                this.hoverService = hoverService;\n                this.lastHoverHideTime = 0;\n                this.hiddenFromClick = false;\n                this.placement = 'element';\n            }\n            showHover(options, focus) {\n                let element;\n                if (options.target instanceof HTMLElement) {\n                    element = options.target;\n                }\n                else {\n                    element = options.target.targetElements[0];\n                }\n                const tlRow = element.closest('.monaco-tl-row');\n                const listRow = tlRow?.closest('.monaco-list-row');\n                const child = element.querySelector('div.monaco-icon-label-container');\n                const childOfChild = child?.querySelector('span.monaco-icon-name-container');\n                let overflowed = false;\n                if (childOfChild && child) {\n                    const width = child.clientWidth;\n                    const childWidth = childOfChild.offsetWidth;\n                    overflowed = width <= childWidth;\n                }\n                const hasDecoration = ( options.content.toString()).includes('•');\n                overflowed = overflowed || hasDecoration;\n                const indentGuideElement = tlRow?.querySelector('.monaco-tl-indent');\n                if (!indentGuideElement) {\n                    return;\n                }\n                return overflowed ? this.hoverService.showHover({\n                    ...options,\n                    target: indentGuideElement,\n                    compact: true,\n                    container: listRow,\n                    additionalClasses: ['explorer-item-hover'],\n                    skipFadeInAnimation: true,\n                    showPointer: false,\n                    hoverPosition: 1 ,\n                }, focus) : undefined;\n            }\n            onDidHideHover() {\n                if (!this.hiddenFromClick) {\n                    this.lastHoverHideTime = Date.now();\n                }\n                this.hiddenFromClick = false;\n            }\n        })(this.configurationService, this.hoverService);\n        this.config = this.configurationService.getValue();\n        const updateOffsetStyles = () => {\n            const indent = this.configurationService.getValue('workbench.tree.indent');\n            const offset = Math.max(22 - indent, 0);\n            container.style.setProperty(`--vscode-explorer-align-offset-margin-left`, `${offset}px`);\n        };\n        this.configListener = this.configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('explorer')) {\n                this.config = this.configurationService.getValue();\n            }\n            if (e.affectsConfiguration('workbench.tree.indent')) {\n                updateOffsetStyles();\n            }\n        });\n        updateOffsetStyles();\n    }\n    getWidgetAriaLabel() {\n        return ( localize('treeAriaLabel', \"Files Explorer\"));\n    }\n    get templateId() {\n        return FilesRenderer_1.ID;\n    }\n    renderTemplate(container) {\n        const templateDisposables = ( new DisposableStore());\n        const experimentalHover = this.configurationService.getValue('explorer.experimental.hover');\n        const label = templateDisposables.add(this.labels.create(container, { supportHighlights: true, hoverDelegate: experimentalHover ? this.hoverDelegate : undefined }));\n        templateDisposables.add(label.onDidRender(() => {\n            try {\n                if (templateData.currentContext) {\n                    this.updateWidth(templateData.currentContext);\n                }\n            }\n            catch (e) {\n            }\n        }));\n        const templateData = { templateDisposables, elementDisposables: templateDisposables.add(( new DisposableStore())), label, container };\n        return templateData;\n    }\n    renderElement(node, index, templateData) {\n        const stat = node.element;\n        templateData.currentContext = stat;\n        const editableData = this.explorerService.getEditableData(stat);\n        templateData.label.element.classList.remove('compressed');\n        if (!editableData) {\n            templateData.label.element.style.display = 'flex';\n            this.renderStat(stat, stat.name, undefined, node.filterData, templateData);\n        }\n        else {\n            templateData.label.element.style.display = 'none';\n            templateData.elementDisposables.add(this.renderInputBox(templateData.container, stat, editableData));\n        }\n    }\n    renderCompressedElements(node, index, templateData, height) {\n        const stat = node.element.elements[node.element.elements.length - 1];\n        templateData.currentContext = stat;\n        const editable = node.element.elements.filter(e => this.explorerService.isEditable(e));\n        const editableData = editable.length === 0 ? undefined : this.explorerService.getEditableData(editable[0]);\n        if (!editableData) {\n            templateData.label.element.classList.add('compressed');\n            templateData.label.element.style.display = 'flex';\n            const id = `compressed-explorer_${CompressedNavigationController.ID++}`;\n            const label = ( node.element.elements.map(e => e.name));\n            this.renderStat(stat, label, id, node.filterData, templateData);\n            const compressedNavigationController = ( new CompressedNavigationController(id, node.element.elements, templateData, node.depth, node.collapsed));\n            templateData.elementDisposables.add(compressedNavigationController);\n            this.compressedNavigationControllers.set(stat, compressedNavigationController);\n            templateData.elementDisposables.add(this._onDidChangeActiveDescendant.add(compressedNavigationController.onDidChange));\n            templateData.elementDisposables.add(dom.addDisposableListener(templateData.container, 'mousedown', e => {\n                const result = getIconLabelNameFromHTMLElement(e.target);\n                if (result) {\n                    compressedNavigationController.setIndex(result.index);\n                }\n            }));\n            templateData.elementDisposables.add(toDisposable(() => this.compressedNavigationControllers.delete(stat)));\n        }\n        else {\n            templateData.label.element.classList.remove('compressed');\n            templateData.label.element.style.display = 'none';\n            templateData.elementDisposables.add(this.renderInputBox(templateData.container, editable[0], editableData));\n        }\n    }\n    renderStat(stat, label, domId, filterData, templateData) {\n        templateData.label.element.style.display = 'flex';\n        const extraClasses = ['explorer-item'];\n        if (this.explorerService.isCut(stat)) {\n            extraClasses.push('cut');\n        }\n        const theme = this.themeService.getFileIconTheme();\n        const twistieContainer = templateData.container.parentElement?.parentElement?.querySelector('.monaco-tl-twistie');\n        twistieContainer?.classList.toggle('force-twistie', stat.hasNests && theme.hidesExplorerArrows);\n        const themeIsUnhappyWithNesting = theme.hasFileIcons && (theme.hidesExplorerArrows || !theme.hasFolderIcons);\n        const realignNestedChildren = stat.nestedParent && themeIsUnhappyWithNesting;\n        const experimentalHover = this.configurationService.getValue('explorer.experimental.hover');\n        templateData.label.setResource({ resource: stat.resource, name: label }, {\n            title: experimentalHover ? isStringArray(label) ? label[0] : label : undefined,\n            fileKind: stat.isRoot ? FileKind.ROOT_FOLDER : stat.isDirectory ? FileKind.FOLDER : FileKind.FILE,\n            extraClasses: realignNestedChildren ? [...extraClasses, 'align-nest-icon-with-parent-icon'] : extraClasses,\n            fileDecorations: this.config.explorer.decorations,\n            matches: createMatches(filterData),\n            separator: this.labelService.getSeparator(stat.resource.scheme, stat.resource.authority),\n            domId\n        });\n    }\n    renderInputBox(container, stat, editableData) {\n        const label = this.labels.create(container);\n        const extraClasses = ['explorer-item', 'explorer-item-edited'];\n        const fileKind = stat.isRoot ? FileKind.ROOT_FOLDER : stat.isDirectory ? FileKind.FOLDER : FileKind.FILE;\n        const theme = this.themeService.getFileIconTheme();\n        const themeIsUnhappyWithNesting = theme.hasFileIcons && (theme.hidesExplorerArrows || !theme.hasFolderIcons);\n        const realignNestedChildren = stat.nestedParent && themeIsUnhappyWithNesting;\n        const labelOptions = {\n            hidePath: true,\n            hideLabel: true,\n            fileKind,\n            extraClasses: realignNestedChildren ? [...extraClasses, 'align-nest-icon-with-parent-icon'] : extraClasses,\n        };\n        const parent = stat.name ? dirname(stat.resource) : stat.resource;\n        const value = stat.name || '';\n        label.setFile(joinPath(parent, value || ' '), labelOptions);\n        label.element.firstElementChild.style.display = 'none';\n        const inputBox = ( new InputBox(label.element, this.contextViewService, {\n            validationOptions: {\n                validation: (value) => {\n                    const message = editableData.validationMessage(value);\n                    if (!message || message.severity !== Severity.Error) {\n                        return null;\n                    }\n                    return {\n                        content: message.content,\n                        formatContent: true,\n                        type: 3\n                    };\n                }\n            },\n            ariaLabel: ( localize(\n                'fileInputAriaLabel',\n                \"Type file name. Press Enter to confirm or Escape to cancel.\"\n            )),\n            inputBoxStyles: defaultInputBoxStyles\n        }));\n        const lastDot = value.lastIndexOf('.');\n        let currentSelectionState = 'prefix';\n        inputBox.value = value;\n        inputBox.focus();\n        inputBox.select({ start: 0, end: lastDot > 0 && !stat.isDirectory ? lastDot : value.length });\n        const done = once((success, finishEditing) => {\n            label.element.style.display = 'none';\n            const value = inputBox.value;\n            dispose(toDispose);\n            label.element.remove();\n            if (finishEditing) {\n                editableData.onFinish(value, success);\n            }\n        });\n        const showInputBoxNotification = () => {\n            if (inputBox.isInputValid()) {\n                const message = editableData.validationMessage(inputBox.value);\n                if (message) {\n                    inputBox.showMessage({\n                        content: message.content,\n                        formatContent: true,\n                        type: message.severity === Severity.Info ? 1  : message.severity === Severity.Warning ? 2  : 3\n                    });\n                }\n                else {\n                    inputBox.hideMessage();\n                }\n            }\n        };\n        showInputBoxNotification();\n        const toDispose = [\n            inputBox,\n            inputBox.onDidChange(value => {\n                label.setFile(joinPath(parent, value || ' '), labelOptions);\n            }),\n            dom.addStandardDisposableListener(inputBox.inputElement, dom.EventType.KEY_DOWN, (e) => {\n                if (e.equals(60 )) {\n                    const dotIndex = inputBox.value.lastIndexOf('.');\n                    if (stat.isDirectory || dotIndex === -1) {\n                        return;\n                    }\n                    if (currentSelectionState === 'prefix') {\n                        currentSelectionState = 'all';\n                        inputBox.select({ start: 0, end: inputBox.value.length });\n                    }\n                    else if (currentSelectionState === 'all') {\n                        currentSelectionState = 'suffix';\n                        inputBox.select({ start: dotIndex + 1, end: inputBox.value.length });\n                    }\n                    else {\n                        currentSelectionState = 'prefix';\n                        inputBox.select({ start: 0, end: dotIndex });\n                    }\n                }\n                else if (e.equals(3 )) {\n                    if (!inputBox.validate()) {\n                        done(true, true);\n                    }\n                }\n                else if (e.equals(9 )) {\n                    done(false, true);\n                }\n            }),\n            dom.addStandardDisposableListener(inputBox.inputElement, dom.EventType.KEY_UP, (e) => {\n                showInputBoxNotification();\n            }),\n            dom.addDisposableListener(inputBox.inputElement, dom.EventType.BLUR, async () => {\n                while (true) {\n                    await timeout(0);\n                    if (!document.hasFocus()) {\n                        break;\n                    }\n                    if (document.activeElement === inputBox.inputElement) {\n                        return;\n                    }\n                    else if (document.activeElement instanceof HTMLElement && dom.hasParentWithClass(document.activeElement, 'context-view')) {\n                        await Event.toPromise(this.contextMenuService.onDidHideContextMenu);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                done(inputBox.isInputValid(), true);\n            }),\n            label\n        ];\n        return toDisposable(() => {\n            done(false, false);\n        });\n    }\n    disposeElement(element, index, templateData) {\n        templateData.currentContext = undefined;\n        templateData.elementDisposables.clear();\n    }\n    disposeCompressedElements(node, index, templateData) {\n        templateData.currentContext = undefined;\n        templateData.elementDisposables.clear();\n    }\n    disposeTemplate(templateData) {\n        templateData.templateDisposables.dispose();\n    }\n    getCompressedNavigationController(stat) {\n        return this.compressedNavigationControllers.get(stat);\n    }\n    getAriaLabel(element) {\n        return element.name;\n    }\n    getAriaLevel(element) {\n        let depth = 0;\n        let parent = element.parent;\n        while (parent) {\n            parent = parent.parent;\n            depth++;\n        }\n        if (this.contextService.getWorkbenchState() === 3 ) {\n            depth = depth + 1;\n        }\n        return depth;\n    }\n    getActiveDescendantId(stat) {\n        const compressedNavigationController = this.compressedNavigationControllers.get(stat);\n        return compressedNavigationController?.currentId;\n    }\n    dispose() {\n        this.configListener.dispose();\n    }\n};\nFilesRenderer = FilesRenderer_1 = ( __decorate([\n    ( __param(3, IContextViewService)),\n    ( __param(4, IThemeService)),\n    ( __param(5, IConfigurationService)),\n    ( __param(6, IExplorerService)),\n    ( __param(7, ILabelService)),\n    ( __param(8, IWorkspaceContextService)),\n    ( __param(9, IContextMenuService)),\n    ( __param(10, IHoverService))\n], FilesRenderer));\nlet FilesFilter = class FilesFilter {\n    constructor(contextService, configurationService, explorerService, editorService, uriIdentityService, fileService) {\n        this.contextService = contextService;\n        this.configurationService = configurationService;\n        this.explorerService = explorerService;\n        this.editorService = editorService;\n        this.uriIdentityService = uriIdentityService;\n        this.fileService = fileService;\n        this.hiddenExpressionPerRoot = ( new Map());\n        this.editorsAffectingFilter = ( new Set());\n        this._onDidChange = ( new Emitter());\n        this.toDispose = [];\n        this.ignoreFileResourcesPerRoot = ( new Map());\n        this.ignoreTreesPerRoot = ( new Map());\n        this.toDispose.push(this.contextService.onDidChangeWorkspaceFolders(() => this.updateConfiguration()));\n        this.toDispose.push(this.configurationService.onDidChangeConfiguration((e) => {\n            if (e.affectsConfiguration('files.exclude') || e.affectsConfiguration('explorer.excludeGitIgnore')) {\n                this.updateConfiguration();\n            }\n        }));\n        this.toDispose.push(this.fileService.onDidFilesChange(e => {\n            for (const [root, ignoreFileResourceSet] of this.ignoreFileResourcesPerRoot.entries()) {\n                ignoreFileResourceSet.forEach(async (ignoreResource) => {\n                    if (e.contains(ignoreResource, 0 )) {\n                        await this.processIgnoreFile(root, ignoreResource, true);\n                    }\n                    if (e.contains(ignoreResource, 2 )) {\n                        this.ignoreTreesPerRoot.get(root)?.delete(dirname(ignoreResource));\n                        ignoreFileResourceSet.delete(ignoreResource);\n                        this._onDidChange.fire();\n                    }\n                });\n            }\n        }));\n        this.toDispose.push(this.editorService.onDidVisibleEditorsChange(() => {\n            const editors = this.editorService.visibleEditors;\n            let shouldFire = false;\n            for (const e of editors) {\n                if (!e.resource) {\n                    continue;\n                }\n                const stat = this.explorerService.findClosest(e.resource);\n                if (stat && stat.isExcluded) {\n                    shouldFire = true;\n                    break;\n                }\n            }\n            for (const e of this.editorsAffectingFilter) {\n                if (!editors.includes(e)) {\n                    shouldFire = true;\n                    break;\n                }\n            }\n            if (shouldFire) {\n                this.editorsAffectingFilter.clear();\n                this._onDidChange.fire();\n            }\n        }));\n        this.updateConfiguration();\n    }\n    get onDidChange() {\n        return this._onDidChange.event;\n    }\n    updateConfiguration() {\n        let shouldFire = false;\n        let updatedGitIgnoreSetting = false;\n        this.contextService.getWorkspace().folders.forEach(folder => {\n            const configuration = this.configurationService.getValue({ resource: folder.uri });\n            const excludesConfig = configuration?.files?.exclude || Object.create(null);\n            const parseIgnoreFile = configuration.explorer.excludeGitIgnore;\n            if (parseIgnoreFile && !( this.ignoreTreesPerRoot.has(( folder.uri.toString())))) {\n                updatedGitIgnoreSetting = true;\n                this.ignoreFileResourcesPerRoot.set(( folder.uri.toString()), ( new ResourceSet()));\n                this.ignoreTreesPerRoot.set(( folder.uri.toString()), TernarySearchTree.forUris((uri) => this.uriIdentityService.extUri.ignorePathCasing(uri)));\n            }\n            if (!parseIgnoreFile && ( this.ignoreTreesPerRoot.has(( folder.uri.toString())))) {\n                updatedGitIgnoreSetting = true;\n                this.ignoreFileResourcesPerRoot.delete(( folder.uri.toString()));\n                this.ignoreTreesPerRoot.delete(( folder.uri.toString()));\n            }\n            if (!shouldFire) {\n                const cached = this.hiddenExpressionPerRoot.get(( folder.uri.toString()));\n                shouldFire = !cached || !equals(cached.original, excludesConfig);\n            }\n            const excludesConfigCopy = deepClone(excludesConfig);\n            this.hiddenExpressionPerRoot.set(( folder.uri.toString()), { original: excludesConfigCopy, parsed: glob.parse(excludesConfigCopy) });\n        });\n        if (shouldFire || updatedGitIgnoreSetting) {\n            this.editorsAffectingFilter.clear();\n            this._onDidChange.fire();\n        }\n    }\n    async processIgnoreFile(root, ignoreFileResource, update) {\n        const dirUri = dirname(ignoreFileResource);\n        const ignoreTree = this.ignoreTreesPerRoot.get(root);\n        if (!ignoreTree) {\n            return;\n        }\n        if (!update && ( ignoreTree.has(dirUri))) {\n            return;\n        }\n        const content = await this.fileService.readFile(ignoreFileResource);\n        if (update) {\n            const ignoreFile = ignoreTree.get(dirUri);\n            ignoreFile?.updateContents(( content.value.toString()));\n        }\n        else {\n            const ignoreParent = ignoreTree.findSubstr(dirUri);\n            const ignoreFile = ( new IgnoreFile(( content.value.toString()), dirUri.path, ignoreParent));\n            ignoreTree.set(dirUri, ignoreFile);\n            if (!this.ignoreFileResourcesPerRoot.get(root)?.has(ignoreFileResource)) {\n                this.ignoreFileResourcesPerRoot.get(root)?.add(ignoreFileResource);\n            }\n        }\n        this._onDidChange.fire();\n    }\n    filter(stat, parentVisibility) {\n        if (stat.name === '.gitignore' && ( this.ignoreTreesPerRoot.has(( stat.root.resource.toString())))) {\n            this.processIgnoreFile(( stat.root.resource.toString()), stat.resource, false);\n            return true;\n        }\n        return this.isVisible(stat, parentVisibility);\n    }\n    isVisible(stat, parentVisibility) {\n        stat.isExcluded = false;\n        if (parentVisibility === 0 ) {\n            stat.isExcluded = true;\n            return false;\n        }\n        if (this.explorerService.getEditableData(stat)) {\n            return true;\n        }\n        const cached = this.hiddenExpressionPerRoot.get(( stat.root.resource.toString()));\n        const globMatch = cached?.parsed(path.relative(stat.root.resource.path, stat.resource.path), stat.name, name => !!(stat.parent && stat.parent.getChild(name)));\n        const ignoreFile = globMatch ? undefined : this.ignoreTreesPerRoot.get(( stat.root.resource.toString()))?.findSubstr(stat.resource);\n        const isIncludedInTraversal = ignoreFile?.isPathIncludedInTraversal(stat.resource.path, stat.isDirectory);\n        const isIgnoredByIgnoreFile = isIncludedInTraversal === undefined ? false : !isIncludedInTraversal;\n        if (isIgnoredByIgnoreFile || globMatch || stat.parent?.isExcluded) {\n            stat.isExcluded = true;\n            const editors = this.editorService.visibleEditors;\n            const editor = editors.find(e => e.resource && this.uriIdentityService.extUri.isEqualOrParent(e.resource, stat.resource));\n            if (editor && stat.root === this.explorerService.findClosestRoot(stat.resource)) {\n                this.editorsAffectingFilter.add(editor);\n                return true;\n            }\n            return false;\n        }\n        return true;\n    }\n    dispose() {\n        dispose(this.toDispose);\n    }\n};\nFilesFilter = ( __decorate([\n    ( __param(0, IWorkspaceContextService)),\n    ( __param(1, IConfigurationService)),\n    ( __param(2, IExplorerService)),\n    ( __param(3, IEditorService)),\n    ( __param(4, IUriIdentityService)),\n    ( __param(5, IFileService))\n], FilesFilter));\nlet FileSorter = class FileSorter {\n    constructor(explorerService, contextService) {\n        this.explorerService = explorerService;\n        this.contextService = contextService;\n    }\n    compare(statA, statB) {\n        if (statA.isRoot) {\n            if (statB.isRoot) {\n                const workspaceA = this.contextService.getWorkspaceFolder(statA.resource);\n                const workspaceB = this.contextService.getWorkspaceFolder(statB.resource);\n                return workspaceA && workspaceB ? (workspaceA.index - workspaceB.index) : -1;\n            }\n            return -1;\n        }\n        if (statB.isRoot) {\n            return 1;\n        }\n        const sortOrder = this.explorerService.sortOrderConfiguration.sortOrder;\n        const lexicographicOptions = this.explorerService.sortOrderConfiguration.lexicographicOptions;\n        let compareFileNames;\n        let compareFileExtensions;\n        switch (lexicographicOptions) {\n            case 'upper':\n                compareFileNames = compareFileNamesUpper;\n                compareFileExtensions = compareFileExtensionsUpper;\n                break;\n            case 'lower':\n                compareFileNames = compareFileNamesLower;\n                compareFileExtensions = compareFileExtensionsLower;\n                break;\n            case 'unicode':\n                compareFileNames = compareFileNamesUnicode;\n                compareFileExtensions = compareFileExtensionsUnicode;\n                break;\n            default:\n                compareFileNames = compareFileNamesDefault;\n                compareFileExtensions = compareFileExtensionsDefault;\n        }\n        switch (sortOrder) {\n            case 'type':\n                if (statA.isDirectory && !statB.isDirectory) {\n                    return -1;\n                }\n                if (statB.isDirectory && !statA.isDirectory) {\n                    return 1;\n                }\n                if (statA.isDirectory && statB.isDirectory) {\n                    return compareFileNames(statA.name, statB.name);\n                }\n                break;\n            case 'filesFirst':\n                if (statA.isDirectory && !statB.isDirectory) {\n                    return 1;\n                }\n                if (statB.isDirectory && !statA.isDirectory) {\n                    return -1;\n                }\n                break;\n            case 'foldersNestsFiles':\n                if (statA.isDirectory && !statB.isDirectory) {\n                    return -1;\n                }\n                if (statB.isDirectory && !statA.isDirectory) {\n                    return 1;\n                }\n                if (statA.hasNests && !statB.hasNests) {\n                    return -1;\n                }\n                if (statB.hasNests && !statA.hasNests) {\n                    return 1;\n                }\n                break;\n            case 'mixed':\n                break;\n            default:\n                if (statA.isDirectory && !statB.isDirectory) {\n                    return -1;\n                }\n                if (statB.isDirectory && !statA.isDirectory) {\n                    return 1;\n                }\n                break;\n        }\n        switch (sortOrder) {\n            case 'type':\n                return compareFileExtensions(statA.name, statB.name);\n            case 'modified':\n                if (statA.mtime !== statB.mtime) {\n                    return (statA.mtime && statB.mtime && statA.mtime < statB.mtime) ? 1 : -1;\n                }\n                return compareFileNames(statA.name, statB.name);\n            default:\n                return compareFileNames(statA.name, statB.name);\n        }\n    }\n};\nFileSorter = ( __decorate([\n    ( __param(0, IExplorerService)),\n    ( __param(1, IWorkspaceContextService))\n], FileSorter));\nlet FileDragAndDrop = class FileDragAndDrop {\n    static { FileDragAndDrop_1 = this; }\n    static { this.CONFIRM_DND_SETTING_KEY = 'explorer.confirmDragAndDrop'; }\n    constructor(isCollapsed, explorerService, editorService, dialogService, contextService, fileService, configurationService, instantiationService, workspaceEditingService, uriIdentityService) {\n        this.isCollapsed = isCollapsed;\n        this.explorerService = explorerService;\n        this.editorService = editorService;\n        this.dialogService = dialogService;\n        this.contextService = contextService;\n        this.fileService = fileService;\n        this.configurationService = configurationService;\n        this.instantiationService = instantiationService;\n        this.workspaceEditingService = workspaceEditingService;\n        this.uriIdentityService = uriIdentityService;\n        this.compressedDropTargetDisposable = Disposable.None;\n        this.dropEnabled = false;\n        this.toDispose = [];\n        const updateDropEnablement = (e) => {\n            if (!e || e.affectsConfiguration('explorer.enableDragAndDrop')) {\n                this.dropEnabled = this.configurationService.getValue('explorer.enableDragAndDrop');\n            }\n        };\n        updateDropEnablement(undefined);\n        this.toDispose.push(this.configurationService.onDidChangeConfiguration(e => updateDropEnablement(e)));\n    }\n    onDragOver(data, target, targetIndex, originalEvent) {\n        if (!this.dropEnabled) {\n            return false;\n        }\n        if (target) {\n            const compressedTarget = FileDragAndDrop_1.getCompressedStatFromDragEvent(target, originalEvent);\n            if (compressedTarget) {\n                const iconLabelName = getIconLabelNameFromHTMLElement(originalEvent.target);\n                if (iconLabelName && iconLabelName.index < iconLabelName.count - 1) {\n                    const result = this.handleDragOver(data, compressedTarget, targetIndex, originalEvent);\n                    if (result) {\n                        if (iconLabelName.element !== this.compressedDragOverElement) {\n                            this.compressedDragOverElement = iconLabelName.element;\n                            this.compressedDropTargetDisposable.dispose();\n                            this.compressedDropTargetDisposable = toDisposable(() => {\n                                iconLabelName.element.classList.remove('drop-target');\n                                this.compressedDragOverElement = undefined;\n                            });\n                            iconLabelName.element.classList.add('drop-target');\n                        }\n                        return typeof result === 'boolean' ? result : { ...result, feedback: [] };\n                    }\n                    this.compressedDropTargetDisposable.dispose();\n                    return false;\n                }\n            }\n        }\n        this.compressedDropTargetDisposable.dispose();\n        return this.handleDragOver(data, target, targetIndex, originalEvent);\n    }\n    handleDragOver(data, target, targetIndex, originalEvent) {\n        const isCopy = originalEvent && ((originalEvent.ctrlKey && !isMacintosh) || (originalEvent.altKey && isMacintosh));\n        const isNative = data instanceof NativeDragAndDropData;\n        const effect = (isNative || isCopy) ? 0  : 1 ;\n        if (isNative) {\n            if (!containsDragType(originalEvent, DataTransfers.FILES, CodeDataTransfers.FILES, DataTransfers.RESOURCES)) {\n                return false;\n            }\n        }\n        else if (data instanceof ExternalElementsDragAndDropData) {\n            return false;\n        }\n        else {\n            const items = FileDragAndDrop_1.getStatsFromDragAndDropData(data);\n            if (!target) {\n                if (!isCopy && items.every(i => !!i.parent && i.parent.isRoot)) {\n                    return false;\n                }\n                return { accept: true, bubble: 0 , effect, autoExpand: false };\n            }\n            if (!Array.isArray(items)) {\n                return false;\n            }\n            if (!isCopy && items.every((source) => source.isReadonly)) {\n                return false;\n            }\n            if (( items.some((source) => {\n                if (source.isRoot && target instanceof ExplorerItem && !target.isRoot) {\n                    return true;\n                }\n                if (this.uriIdentityService.extUri.isEqual(source.resource, target.resource)) {\n                    return true;\n                }\n                if (source.isRoot && target instanceof ExplorerItem && target.isRoot) {\n                    return false;\n                }\n                if (!isCopy && this.uriIdentityService.extUri.isEqual(dirname(source.resource), target.resource)) {\n                    return true;\n                }\n                if (this.uriIdentityService.extUri.isEqualOrParent(target.resource, source.resource)) {\n                    return true;\n                }\n                return false;\n            }))) {\n                return false;\n            }\n        }\n        if (!target) {\n            return { accept: true, bubble: 0 , effect };\n        }\n        else {\n            if (target.isDirectory) {\n                if (target.isReadonly) {\n                    return false;\n                }\n                return { accept: true, bubble: 0 , effect, autoExpand: true };\n            }\n            if (this.contextService.getWorkspace().folders.every(folder => ( folder.uri.toString()) !== ( target.resource.toString()))) {\n                return { accept: true, bubble: 1 , effect };\n            }\n        }\n        return false;\n    }\n    getDragURI(element) {\n        if (this.explorerService.isEditable(element)) {\n            return null;\n        }\n        return ( element.resource.toString());\n    }\n    getDragLabel(elements, originalEvent) {\n        if (elements.length === 1) {\n            const stat = FileDragAndDrop_1.getCompressedStatFromDragEvent(elements[0], originalEvent);\n            return stat.name;\n        }\n        return String(elements.length);\n    }\n    onDragStart(data, originalEvent) {\n        const items = FileDragAndDrop_1.getStatsFromDragAndDropData(data, originalEvent);\n        if (items && items.length && originalEvent.dataTransfer) {\n            this.instantiationService.invokeFunction(accessor => fillEditorsDragData(accessor, items, originalEvent));\n            const fileResources = ( items.filter(s => s.resource.scheme === Schemas.file).map(r => r.resource.fsPath));\n            if (fileResources.length) {\n                originalEvent.dataTransfer.setData(CodeDataTransfers.FILES, JSON.stringify(fileResources));\n            }\n        }\n    }\n    async drop(data, target, targetIndex, originalEvent) {\n        this.compressedDropTargetDisposable.dispose();\n        if (target) {\n            const compressedTarget = FileDragAndDrop_1.getCompressedStatFromDragEvent(target, originalEvent);\n            if (compressedTarget) {\n                target = compressedTarget;\n            }\n        }\n        if (!target) {\n            target = this.explorerService.roots[this.explorerService.roots.length - 1];\n        }\n        if (!target.isDirectory && target.parent) {\n            target = target.parent;\n        }\n        if (target.isReadonly) {\n            return;\n        }\n        const resolvedTarget = target;\n        if (!resolvedTarget) {\n            return;\n        }\n        try {\n            if (data instanceof NativeDragAndDropData) {\n                if (!isWeb || (isTemporaryWorkspace(this.contextService.getWorkspace()) && WebFileSystemAccess.supported(window))) {\n                    const fileImport = this.instantiationService.createInstance(ExternalFileImport);\n                    await fileImport.import(resolvedTarget, originalEvent);\n                }\n                else {\n                    const browserUpload = this.instantiationService.createInstance(BrowserFileUpload);\n                    await browserUpload.upload(target, originalEvent);\n                }\n            }\n            else {\n                await this.handleExplorerDrop(data, resolvedTarget, originalEvent);\n            }\n        }\n        catch (error) {\n            this.dialogService.error(toErrorMessage(error));\n        }\n    }\n    async handleExplorerDrop(data, target, originalEvent) {\n        const elementsData = FileDragAndDrop_1.getStatsFromDragAndDropData(data);\n        const distinctItems = ( new Map(( elementsData.map(element => [element, this.isCollapsed(element)]))));\n        for (const [item, collapsed] of distinctItems) {\n            if (collapsed) {\n                const nestedChildren = item.nestedChildren;\n                if (nestedChildren) {\n                    for (const child of nestedChildren) {\n                        distinctItems.set(child, true);\n                    }\n                }\n            }\n        }\n        const items = distinctParents([...( distinctItems.keys())], s => s.resource);\n        const isCopy = (originalEvent.ctrlKey && !isMacintosh) || (originalEvent.altKey && isMacintosh);\n        const confirmDragAndDrop = !isCopy && this.configurationService.getValue(FileDragAndDrop_1.CONFIRM_DND_SETTING_KEY);\n        if (confirmDragAndDrop) {\n            const message = items.length > 1 && items.every(s => s.isRoot) ? ( localize(\n                'confirmRootsMove',\n                \"Are you sure you want to change the order of multiple root folders in your workspace?\"\n            ))\n                : items.length > 1 ? ( localize(\n                'confirmMultiMove',\n                \"Are you sure you want to move the following {0} files into '{1}'?\",\n                items.length,\n                target.name\n            ))\n                    : items[0].isRoot ? ( localize(\n                'confirmRootMove',\n                \"Are you sure you want to change the order of root folder '{0}' in your workspace?\",\n                items[0].name\n            ))\n                        : ( localize(\n                'confirmMove',\n                \"Are you sure you want to move '{0}' into '{1}'?\",\n                items[0].name,\n                target.name\n            ));\n            const detail = items.length > 1 && !items.every(s => s.isRoot) ? getFileNamesMessage(( items.map(i => i.resource))) : undefined;\n            const confirmation = await this.dialogService.confirm({\n                message,\n                detail,\n                checkbox: {\n                    label: ( localize('doNotAskAgain', \"Do not ask me again\"))\n                },\n                primaryButton: ( localize({ key: 'moveButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Move\"))\n            });\n            if (!confirmation.confirmed) {\n                return;\n            }\n            if (confirmation.checkboxChecked === true) {\n                await this.configurationService.updateValue(FileDragAndDrop_1.CONFIRM_DND_SETTING_KEY, false);\n            }\n        }\n        await this.doHandleRootDrop(items.filter(s => s.isRoot), target);\n        const sources = items.filter(s => !s.isRoot);\n        if (isCopy) {\n            return this.doHandleExplorerDropOnCopy(sources, target);\n        }\n        return this.doHandleExplorerDropOnMove(sources, target);\n    }\n    async doHandleRootDrop(roots, target) {\n        if (roots.length === 0) {\n            return;\n        }\n        const folders = this.contextService.getWorkspace().folders;\n        let targetIndex;\n        const workspaceCreationData = [];\n        const rootsToMove = [];\n        for (let index = 0; index < folders.length; index++) {\n            const data = {\n                uri: folders[index].uri,\n                name: folders[index].name\n            };\n            if (target instanceof ExplorerItem && this.uriIdentityService.extUri.isEqual(folders[index].uri, target.resource)) {\n                targetIndex = index;\n            }\n            if (roots.every(r => ( r.resource.toString()) !== ( folders[index].uri.toString()))) {\n                workspaceCreationData.push(data);\n            }\n            else {\n                rootsToMove.push(data);\n            }\n        }\n        if (targetIndex === undefined) {\n            targetIndex = workspaceCreationData.length;\n        }\n        workspaceCreationData.splice(targetIndex, 0, ...rootsToMove);\n        return this.workspaceEditingService.updateFolders(0, workspaceCreationData.length, workspaceCreationData);\n    }\n    async doHandleExplorerDropOnCopy(sources, target) {\n        const explorerConfig = this.configurationService.getValue().explorer;\n        const resourceFileEdits = [];\n        for (const { resource, isDirectory } of sources) {\n            const allowOverwrite = explorerConfig.incrementalNaming === 'disabled';\n            const newResource = await findValidPasteFileTarget(this.explorerService, this.fileService, this.dialogService, target, { resource, isDirectory, allowOverwrite }, explorerConfig.incrementalNaming);\n            if (!newResource) {\n                continue;\n            }\n            const resourceEdit = ( new ResourceFileEdit(resource, newResource, { copy: true, overwrite: allowOverwrite }));\n            resourceFileEdits.push(resourceEdit);\n        }\n        const labelSuffix = getFileOrFolderLabelSuffix(sources);\n        await this.explorerService.applyBulkEdit(resourceFileEdits, {\n            confirmBeforeUndo: explorerConfig.confirmUndo === \"default\"  || explorerConfig.confirmUndo === \"verbose\" ,\n            undoLabel: ( localize('copy', \"Copy {0}\", labelSuffix)),\n            progressLabel: ( localize('copying', \"Copying {0}\", labelSuffix)),\n        });\n        const editors = ( resourceFileEdits.filter(edit => {\n            const item = edit.newResource ? this.explorerService.findClosest(edit.newResource) : undefined;\n            return item && !item.isDirectory;\n        }).map(edit => ({ resource: edit.newResource, options: { pinned: true } })));\n        await this.editorService.openEditors(editors);\n    }\n    async doHandleExplorerDropOnMove(sources, target) {\n        const resourceFileEdits = ( sources.filter(source => !source.isReadonly).map(source => ( new ResourceFileEdit(source.resource, joinPath(target.resource, source.name)))));\n        const labelSuffix = getFileOrFolderLabelSuffix(sources);\n        const options = {\n            confirmBeforeUndo: this.configurationService.getValue().explorer.confirmUndo === \"verbose\" ,\n            undoLabel: ( localize('move', \"Move {0}\", labelSuffix)),\n            progressLabel: ( localize('moving', \"Moving {0}\", labelSuffix))\n        };\n        try {\n            await this.explorerService.applyBulkEdit(resourceFileEdits, options);\n        }\n        catch (error) {\n            if (error.fileOperationResult === 4 ) {\n                const overwrites = [];\n                for (const edit of resourceFileEdits) {\n                    if (edit.newResource && (await this.fileService.exists(edit.newResource))) {\n                        overwrites.push(edit.newResource);\n                    }\n                }\n                const confirm = getMultipleFilesOverwriteConfirm(overwrites);\n                const { confirmed } = await this.dialogService.confirm(confirm);\n                if (confirmed) {\n                    await this.explorerService.applyBulkEdit(( resourceFileEdits.map(re => ( new ResourceFileEdit(re.oldResource, re.newResource, { overwrite: true })))), options);\n                }\n            }\n            else {\n                throw error;\n            }\n        }\n    }\n    static getStatsFromDragAndDropData(data, dragStartEvent) {\n        if (data.context) {\n            return data.context;\n        }\n        if (dragStartEvent && data.elements.length === 1) {\n            data.context = [FileDragAndDrop_1.getCompressedStatFromDragEvent(data.elements[0], dragStartEvent)];\n            return data.context;\n        }\n        return data.elements;\n    }\n    static getCompressedStatFromDragEvent(stat, dragEvent) {\n        const target = document.elementFromPoint(dragEvent.clientX, dragEvent.clientY);\n        const iconLabelName = getIconLabelNameFromHTMLElement(target);\n        if (iconLabelName) {\n            const { count, index } = iconLabelName;\n            let i = count - 1;\n            while (i > index && stat.parent) {\n                stat = stat.parent;\n                i--;\n            }\n            return stat;\n        }\n        return stat;\n    }\n    onDragEnd() {\n        this.compressedDropTargetDisposable.dispose();\n    }\n};\nFileDragAndDrop = FileDragAndDrop_1 = ( __decorate([\n    ( __param(1, IExplorerService)),\n    ( __param(2, IEditorService)),\n    ( __param(3, IDialogService)),\n    ( __param(4, IWorkspaceContextService)),\n    ( __param(5, IFileService)),\n    ( __param(6, IConfigurationService)),\n    ( __param(7, IInstantiationService)),\n    ( __param(8, IWorkspaceEditingService)),\n    ( __param(9, IUriIdentityService))\n], FileDragAndDrop));\nfunction getIconLabelNameFromHTMLElement(target) {\n    if (!(target instanceof HTMLElement)) {\n        return null;\n    }\n    let element = target;\n    while (element && !element.classList.contains('monaco-list-row')) {\n        if (element.classList.contains('label-name') && element.hasAttribute('data-icon-label-count')) {\n            const count = Number(element.getAttribute('data-icon-label-count'));\n            const index = Number(element.getAttribute('data-icon-label-index'));\n            if (isNumber(count) && isNumber(index)) {\n                return { element: element, count, index };\n            }\n        }\n        element = element.parentElement;\n    }\n    return null;\n}\nfunction isCompressedFolderName(target) {\n    return !!getIconLabelNameFromHTMLElement(target);\n}\nclass ExplorerCompressionDelegate {\n    isIncompressible(stat) {\n        return stat.isRoot || !stat.isDirectory || stat instanceof NewExplorerItem || (!stat.parent || stat.parent.isRoot);\n    }\n}\nfunction getFileOrFolderLabelSuffix(items) {\n    if (items.length === 1) {\n        return items[0].name;\n    }\n    if (items.every(i => i.isDirectory)) {\n        return ( localize('numberOfFolders', \"{0} folders\", items.length));\n    }\n    if (items.every(i => !i.isDirectory)) {\n        return ( localize('numberOfFiles', \"{0} files\", items.length));\n    }\n    return `${items.length} files and folders`;\n}\nexport { CompressedNavigationController, ExplorerCompressionDelegate, ExplorerDataSource, ExplorerDelegate, FileDragAndDrop, FileSorter, FilesFilter, FilesRenderer, explorerRootErrorEmitter, isCompressedFolderName };\n", "import { __decorate, __param } from '../../../../../external/tslib/tslib.es6.js';\nimport { DataTransfers } from 'monaco-editor/esm/vs/base/browser/dnd.js';\nimport { DragAndDropObserver, addDisposableListener, EventType } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { coalesce } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { UriList } from 'monaco-editor/esm/vs/base/common/dataTransfer.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable, markAsSingleton, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { stringify } from 'monaco-editor/esm/vs/base/common/marshalling.js';\nimport { Mimes } from 'monaco-editor/esm/vs/base/common/mime.js';\nimport { Schemas, FileAccess } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { isWindows } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { basename, isEqual } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { createDraggedEditorInputFromRawResourcesData, extractEditorsAndFilesDropData, Extensions, CodeDataTransfers, LocalSelectionTransfer } from 'monaco-editor/esm/vs/platform/dnd/browser/dnd.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { extractSelection } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { hasWorkspaceFileExtension, isTemporaryWorkspace, IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { IWorkspacesService } from '../../platform/workspaces/common/workspaces.js';\nimport { isEditorIdentifier, EditorResourceAccessor, isResourceDiffEditorInput, isResourceSideBySideEditorInput, isResourceMergeEditorInput } from '../common/editor.js';\nimport { IEditorService } from '../services/editor/common/editorService.js';\nimport { IHostService } from '../services/host/browser/host.js';\nimport { ITextFileService } from '../services/textfile/common/textfiles.js';\nimport { IWorkspaceEditingService } from '../services/workspaces/common/workspaceEditing.js';\nclass DraggedEditorIdentifier {\n    constructor(identifier) {\n        this.identifier = identifier;\n    }\n}\nclass DraggedEditorGroupIdentifier {\n    constructor(identifier) {\n        this.identifier = identifier;\n    }\n}\nasync function extractTreeDropData(dataTransfer) {\n    const editors = [];\n    const resourcesKey = Mimes.uriList.toLowerCase();\n    if (( dataTransfer.has(resourcesKey))) {\n        try {\n            const asString = await dataTransfer.get(resourcesKey)?.asString();\n            const rawResourcesData = JSON.stringify(UriList.parse(asString ?? ''));\n            editors.push(...createDraggedEditorInputFromRawResourcesData(rawResourcesData));\n        }\n        catch (error) {\n        }\n    }\n    return editors;\n}\nlet ResourcesDropHandler = class ResourcesDropHandler {\n    constructor(options, fileService, workspacesService, editorService, workspaceEditingService, hostService, contextService, instantiationService) {\n        this.options = options;\n        this.fileService = fileService;\n        this.workspacesService = workspacesService;\n        this.editorService = editorService;\n        this.workspaceEditingService = workspaceEditingService;\n        this.hostService = hostService;\n        this.contextService = contextService;\n        this.instantiationService = instantiationService;\n    }\n    async handleDrop(event, resolveTargetGroup, afterDrop, targetIndex) {\n        const editors = await this.instantiationService.invokeFunction(accessor => extractEditorsAndFilesDropData(accessor, event));\n        if (!editors.length) {\n            return;\n        }\n        await this.hostService.focus();\n        if (this.options.allowWorkspaceOpen) {\n            const localFilesAllowedToOpenAsWorkspace = coalesce(( editors.filter(editor => editor.allowWorkspaceOpen && editor.resource?.scheme === Schemas.file).map(editor => editor.resource)));\n            if (localFilesAllowedToOpenAsWorkspace.length > 0) {\n                const isWorkspaceOpening = await this.handleWorkspaceDrop(localFilesAllowedToOpenAsWorkspace);\n                if (isWorkspaceOpening) {\n                    return;\n                }\n            }\n        }\n        const externalLocalFiles = coalesce(( editors.filter(editor => editor.isExternal && editor.resource?.scheme === Schemas.file).map(editor => editor.resource)));\n        if (externalLocalFiles.length) {\n            this.workspacesService.addRecentlyOpened(( externalLocalFiles.map(resource => ({ fileUri: resource }))));\n        }\n        const targetGroup = resolveTargetGroup();\n        await this.editorService.openEditors(( editors.map(editor => ({\n            ...editor,\n            resource: editor.resource,\n            options: {\n                ...editor.options,\n                pinned: true,\n                index: targetIndex\n            }\n        }))), targetGroup, { validateTrust: true });\n        afterDrop(targetGroup);\n    }\n    async handleWorkspaceDrop(resources) {\n        const toOpen = [];\n        const folderURIs = [];\n        await Promise.all(( resources.map(async (resource) => {\n            if (hasWorkspaceFileExtension(resource)) {\n                toOpen.push({ workspaceUri: resource });\n                return;\n            }\n            try {\n                const stat = await this.fileService.stat(resource);\n                if (stat.isDirectory) {\n                    toOpen.push({ folderUri: stat.resource });\n                    folderURIs.push({ uri: stat.resource });\n                }\n            }\n            catch (error) {\n            }\n        })));\n        if (toOpen.length === 0) {\n            return false;\n        }\n        this.hostService.focus();\n        if (toOpen.length > folderURIs.length || folderURIs.length === 1) {\n            await this.hostService.openWindow(toOpen);\n        }\n        else if (isTemporaryWorkspace(this.contextService.getWorkspace())) {\n            await this.workspaceEditingService.addFolders(folderURIs);\n        }\n        else {\n            await this.workspaceEditingService.createAndEnterWorkspace(folderURIs);\n        }\n        return true;\n    }\n};\nResourcesDropHandler = ( __decorate([\n    ( __param(1, IFileService)),\n    ( __param(2, IWorkspacesService)),\n    ( __param(3, IEditorService)),\n    ( __param(4, IWorkspaceEditingService)),\n    ( __param(5, IHostService)),\n    ( __param(6, IWorkspaceContextService)),\n    ( __param(7, IInstantiationService))\n], ResourcesDropHandler));\nfunction fillEditorsDragData(accessor, resourcesOrEditors, event) {\n    if (resourcesOrEditors.length === 0 || !event.dataTransfer) {\n        return;\n    }\n    const textFileService = accessor.get(ITextFileService);\n    const editorService = accessor.get(IEditorService);\n    const fileService = accessor.get(IFileService);\n    const labelService = accessor.get(ILabelService);\n    const resources = coalesce(( resourcesOrEditors.map(resourceOrEditor => {\n        if (URI.isUri(resourceOrEditor)) {\n            return { resource: resourceOrEditor };\n        }\n        if (isEditorIdentifier(resourceOrEditor)) {\n            if (URI.isUri(resourceOrEditor.editor.resource)) {\n                return { resource: resourceOrEditor.editor.resource };\n            }\n            return undefined;\n        }\n        return resourceOrEditor;\n    })));\n    const fileSystemResources = resources.filter(({ resource }) => fileService.hasProvider(resource));\n    const lineDelimiter = isWindows ? '\\r\\n' : '\\n';\n    event.dataTransfer.setData(DataTransfers.TEXT, ( fileSystemResources.map(({ resource }) => labelService.getUriLabel(resource, { noPrefix: true }))).join(lineDelimiter));\n    const firstFile = fileSystemResources.find(({ isDirectory }) => !isDirectory);\n    if (firstFile) {\n        const firstFileUri = FileAccess.uriToFileUri(firstFile.resource);\n        if (firstFileUri.scheme === Schemas.file) {\n            event.dataTransfer.setData(DataTransfers.DOWNLOAD_URL, [Mimes.binary, basename(firstFile.resource), ( firstFileUri.toString())].join(':'));\n        }\n    }\n    const files = fileSystemResources.filter(({ isDirectory }) => !isDirectory);\n    if (files.length) {\n        event.dataTransfer.setData(DataTransfers.RESOURCES, JSON.stringify(( files.map(({ resource }) => ( resource.toString())))));\n    }\n    const contributions = ( Registry.as(Extensions.DragAndDropContribution)).getAll();\n    for (const contribution of contributions) {\n        contribution.setData(resources, event);\n    }\n    const draggedEditors = [];\n    for (const resourceOrEditor of resourcesOrEditors) {\n        let editor = undefined;\n        if (isEditorIdentifier(resourceOrEditor)) {\n            const untypedEditor = resourceOrEditor.editor.toUntyped({ preserveViewState: resourceOrEditor.groupId });\n            if (untypedEditor) {\n                editor = { ...untypedEditor, resource: EditorResourceAccessor.getCanonicalUri(untypedEditor) };\n            }\n        }\n        else if (URI.isUri(resourceOrEditor)) {\n            const { selection, uri } = extractSelection(resourceOrEditor);\n            editor = { resource: uri, options: selection ? { selection } : undefined };\n        }\n        else if (!resourceOrEditor.isDirectory) {\n            editor = { resource: resourceOrEditor.resource };\n        }\n        if (!editor) {\n            continue;\n        }\n        {\n            const resource = editor.resource;\n            if (resource) {\n                const textFileModel = textFileService.files.get(resource);\n                if (textFileModel) {\n                    if (typeof editor.languageId !== 'string') {\n                        editor.languageId = textFileModel.getLanguageId();\n                    }\n                    if (typeof editor.encoding !== 'string') {\n                        editor.encoding = textFileModel.getEncoding();\n                    }\n                    if (typeof editor.contents !== 'string' && textFileModel.isDirty()) {\n                        editor.contents = textFileModel.textEditorModel.getValue();\n                    }\n                }\n                if (!editor.options?.viewState) {\n                    editor.options = {\n                        ...editor.options,\n                        viewState: (() => {\n                            for (const visibleEditorPane of editorService.visibleEditorPanes) {\n                                if (isEqual(visibleEditorPane.input.resource, resource)) {\n                                    const viewState = visibleEditorPane.getViewState();\n                                    if (viewState) {\n                                        return viewState;\n                                    }\n                                }\n                            }\n                            return undefined;\n                        })()\n                    };\n                }\n            }\n        }\n        draggedEditors.push(editor);\n    }\n    if (draggedEditors.length) {\n        event.dataTransfer.setData(CodeDataTransfers.EDITORS, stringify(draggedEditors));\n        const uriListEntries = [];\n        for (const editor of draggedEditors) {\n            if (editor.resource) {\n                uriListEntries.push(editor.resource);\n            }\n            else if (isResourceDiffEditorInput(editor)) {\n                if (editor.modified.resource) {\n                    uriListEntries.push(editor.modified.resource);\n                }\n            }\n            else if (isResourceSideBySideEditorInput(editor)) {\n                if (editor.primary.resource) {\n                    uriListEntries.push(editor.primary.resource);\n                }\n            }\n            else if (isResourceMergeEditorInput(editor)) {\n                uriListEntries.push(editor.result.resource);\n            }\n        }\n        event.dataTransfer.setData(Mimes.uriList, UriList.create(uriListEntries.slice(0, 1)));\n        event.dataTransfer.setData(DataTransfers.INTERNAL_URI_LIST, UriList.create(uriListEntries));\n    }\n}\nclass CompositeDragAndDropData {\n    constructor(type, id) {\n        this.type = type;\n        this.id = id;\n    }\n    update(dataTransfer) {\n    }\n    getData() {\n        return { type: this.type, id: this.id };\n    }\n}\nclass DraggedCompositeIdentifier {\n    constructor(compositeId) {\n        this.compositeId = compositeId;\n    }\n    get id() {\n        return this.compositeId;\n    }\n}\nclass DraggedViewIdentifier {\n    constructor(viewId) {\n        this.viewId = viewId;\n    }\n    get id() {\n        return this.viewId;\n    }\n}\nclass CompositeDragAndDropObserver extends Disposable {\n    static get INSTANCE() {\n        if (!CompositeDragAndDropObserver.instance) {\n            CompositeDragAndDropObserver.instance = ( new CompositeDragAndDropObserver());\n            markAsSingleton(CompositeDragAndDropObserver.instance);\n        }\n        return CompositeDragAndDropObserver.instance;\n    }\n    constructor() {\n        super();\n        this.transferData = LocalSelectionTransfer.getInstance();\n        this.onDragStart = this._register(( new Emitter()));\n        this.onDragEnd = this._register(( new Emitter()));\n        this._register(this.onDragEnd.event(e => {\n            const id = e.dragAndDropData.getData().id;\n            const type = e.dragAndDropData.getData().type;\n            const data = this.readDragData(type);\n            if (data?.getData().id === id) {\n                this.transferData.clearData(type === 'view' ? DraggedViewIdentifier.prototype : DraggedCompositeIdentifier.prototype);\n            }\n        }));\n    }\n    readDragData(type) {\n        if (this.transferData.hasData(type === 'view' ? DraggedViewIdentifier.prototype : DraggedCompositeIdentifier.prototype)) {\n            const data = this.transferData.getData(type === 'view' ? DraggedViewIdentifier.prototype : DraggedCompositeIdentifier.prototype);\n            if (data && data[0]) {\n                return ( new CompositeDragAndDropData(type, data[0].id));\n            }\n        }\n        return undefined;\n    }\n    writeDragData(id, type) {\n        this.transferData.setData([type === 'view' ? ( new DraggedViewIdentifier(id)) : ( new DraggedCompositeIdentifier(id))], type === 'view' ? DraggedViewIdentifier.prototype : DraggedCompositeIdentifier.prototype);\n    }\n    registerTarget(element, callbacks) {\n        const disposableStore = ( new DisposableStore());\n        disposableStore.add(( new DragAndDropObserver(element, {\n            onDragEnd: e => {\n            },\n            onDragEnter: e => {\n                e.preventDefault();\n                if (callbacks.onDragEnter) {\n                    const data = this.readDragData('composite') || this.readDragData('view');\n                    if (data) {\n                        callbacks.onDragEnter({ eventData: e, dragAndDropData: data });\n                    }\n                }\n            },\n            onDragLeave: e => {\n                const data = this.readDragData('composite') || this.readDragData('view');\n                if (callbacks.onDragLeave && data) {\n                    callbacks.onDragLeave({ eventData: e, dragAndDropData: data });\n                }\n            },\n            onDrop: e => {\n                if (callbacks.onDrop) {\n                    const data = this.readDragData('composite') || this.readDragData('view');\n                    if (!data) {\n                        return;\n                    }\n                    callbacks.onDrop({ eventData: e, dragAndDropData: data });\n                    this.onDragEnd.fire({ eventData: e, dragAndDropData: data });\n                }\n            },\n            onDragOver: e => {\n                e.preventDefault();\n                if (callbacks.onDragOver) {\n                    const data = this.readDragData('composite') || this.readDragData('view');\n                    if (!data) {\n                        return;\n                    }\n                    callbacks.onDragOver({ eventData: e, dragAndDropData: data });\n                }\n            }\n        })));\n        if (callbacks.onDragStart) {\n            this.onDragStart.event(e => {\n                callbacks.onDragStart(e);\n            }, this, disposableStore);\n        }\n        if (callbacks.onDragEnd) {\n            this.onDragEnd.event(e => {\n                callbacks.onDragEnd(e);\n            }, this, disposableStore);\n        }\n        return this._register(disposableStore);\n    }\n    registerDraggable(element, draggedItemProvider, callbacks) {\n        element.draggable = true;\n        const disposableStore = ( new DisposableStore());\n        disposableStore.add(addDisposableListener(element, EventType.DRAG_START, e => {\n            const { id, type } = draggedItemProvider();\n            this.writeDragData(id, type);\n            e.dataTransfer?.setDragImage(element, 0, 0);\n            this.onDragStart.fire({ eventData: e, dragAndDropData: this.readDragData(type) });\n        }));\n        disposableStore.add(( new DragAndDropObserver(element, {\n            onDragEnd: e => {\n                const { type } = draggedItemProvider();\n                const data = this.readDragData(type);\n                if (!data) {\n                    return;\n                }\n                this.onDragEnd.fire({ eventData: e, dragAndDropData: data });\n            },\n            onDragEnter: e => {\n                if (callbacks.onDragEnter) {\n                    const data = this.readDragData('composite') || this.readDragData('view');\n                    if (!data) {\n                        return;\n                    }\n                    if (data) {\n                        callbacks.onDragEnter({ eventData: e, dragAndDropData: data });\n                    }\n                }\n            },\n            onDragLeave: e => {\n                const data = this.readDragData('composite') || this.readDragData('view');\n                if (!data) {\n                    return;\n                }\n                callbacks.onDragLeave?.({ eventData: e, dragAndDropData: data });\n            },\n            onDrop: e => {\n                if (callbacks.onDrop) {\n                    const data = this.readDragData('composite') || this.readDragData('view');\n                    if (!data) {\n                        return;\n                    }\n                    callbacks.onDrop({ eventData: e, dragAndDropData: data });\n                    this.onDragEnd.fire({ eventData: e, dragAndDropData: data });\n                }\n            },\n            onDragOver: e => {\n                if (callbacks.onDragOver) {\n                    const data = this.readDragData('composite') || this.readDragData('view');\n                    if (!data) {\n                        return;\n                    }\n                    callbacks.onDragOver({ eventData: e, dragAndDropData: data });\n                }\n            }\n        })));\n        if (callbacks.onDragStart) {\n            this.onDragStart.event(e => {\n                callbacks.onDragStart(e);\n            }, this, disposableStore);\n        }\n        if (callbacks.onDragEnd) {\n            this.onDragEnd.event(e => {\n                callbacks.onDragEnd(e);\n            }, this, disposableStore);\n        }\n        return this._register(disposableStore);\n    }\n}\nfunction toggleDropEffect(dataTransfer, dropEffect, shouldHaveIt) {\n    if (!dataTransfer) {\n        return;\n    }\n    dataTransfer.dropEffect = shouldHaveIt ? dropEffect : 'none';\n}\nlet ResourceListDnDHandler = class ResourceListDnDHandler {\n    constructor(toResource, instantiationService) {\n        this.toResource = toResource;\n        this.instantiationService = instantiationService;\n    }\n    getDragURI(element) {\n        const resource = this.toResource(element);\n        return resource ? ( resource.toString()) : null;\n    }\n    getDragLabel(elements) {\n        const resources = coalesce(( elements.map(this.toResource)));\n        return resources.length === 1 ? basename(resources[0]) : resources.length > 1 ? String(resources.length) : undefined;\n    }\n    onDragStart(data, originalEvent) {\n        const resources = [];\n        for (const element of data.elements) {\n            const resource = this.toResource(element);\n            if (resource) {\n                resources.push(resource);\n            }\n        }\n        if (resources.length) {\n            this.instantiationService.invokeFunction(accessor => fillEditorsDragData(accessor, resources, originalEvent));\n        }\n    }\n    onDragOver(data, targetElement, targetIndex, originalEvent) {\n        return false;\n    }\n    drop(data, targetElement, targetIndex, originalEvent) { }\n};\nResourceListDnDHandler = ( __decorate([\n    ( __param(1, IInstantiationService))\n], ResourceListDnDHandler));\nexport { CompositeDragAndDropData, CompositeDragAndDropObserver, DraggedCompositeIdentifier, DraggedEditorGroupIdentifier, DraggedEditorIdentifier, DraggedViewIdentifier, ResourceListDnDHandler, ResourcesDropHandler, extractTreeDropData, fillEditorsDragData, toggleDropEffect };\n", "import * as glob from 'monaco-editor/esm/vs/base/common/glob.js';\nclass IgnoreFile {\n    constructor(contents, location, parent) {\n        this.location = location;\n        this.parent = parent;\n        if (location[location.length - 1] === '\\\\') {\n            throw Error('Unexpected path format, do not use trailing backslashes');\n        }\n        if (location[location.length - 1] !== '/') {\n            location += '/';\n        }\n        this.isPathIgnored = this.parseIgnoreFile(contents, this.location, this.parent);\n    }\n    updateContents(contents) {\n        this.isPathIgnored = this.parseIgnoreFile(contents, this.location, this.parent);\n    }\n    isPathIncludedInTraversal(path, isDir) {\n        if (path[0] !== '/' || path[path.length - 1] === '/') {\n            throw Error('Unexpected path format, expectred to begin with slash and end without. got:' + path);\n        }\n        const ignored = this.isPathIgnored(path, isDir);\n        return !ignored;\n    }\n    isArbitraryPathIgnored(path, isDir) {\n        if (path[0] !== '/' || path[path.length - 1] === '/') {\n            throw Error('Unexpected path format, expectred to begin with slash and end without. got:' + path);\n        }\n        const segments = path.split('/').filter(x => x);\n        let ignored = false;\n        let walkingPath = '';\n        for (let i = 0; i < segments.length; i++) {\n            const isLast = i === segments.length - 1;\n            const segment = segments[i];\n            walkingPath = walkingPath + '/' + segment;\n            if (!this.isPathIncludedInTraversal(walkingPath, isLast ? isDir : true)) {\n                ignored = true;\n                break;\n            }\n        }\n        return ignored;\n    }\n    gitignoreLinesToExpression(lines, dirPath, trimForExclusions) {\n        const includeLines = ( lines.map(line => this.gitignoreLineToGlob(line, dirPath)));\n        const includeExpression = Object.create(null);\n        for (const line of includeLines) {\n            includeExpression[line] = true;\n        }\n        return glob.parse(includeExpression, { trimForExclusions });\n    }\n    parseIgnoreFile(ignoreContents, dirPath, parent) {\n        const contentLines = ( ignoreContents\n            .split('\\n')\n            .map(line => line.trim()))\n            .filter(line => line && line[0] !== '#');\n        const fileLines = contentLines.filter(line => !line.endsWith('/'));\n        const fileIgnoreLines = fileLines.filter(line => !line.includes('!'));\n        const isFileIgnored = this.gitignoreLinesToExpression(fileIgnoreLines, dirPath, true);\n        const fileIncludeLines = ( fileLines.filter(line => line.includes('!')).map(line => line.replace(/!/g, '')));\n        const isFileIncluded = this.gitignoreLinesToExpression(fileIncludeLines, dirPath, false);\n        const dirIgnoreLines = contentLines.filter(line => !line.includes('!'));\n        const isDirIgnored = this.gitignoreLinesToExpression(dirIgnoreLines, dirPath, true);\n        const dirIncludeLines = ( contentLines.filter(line => line.includes('!')).map(line => line.replace(/!/g, '')));\n        const isDirIncluded = this.gitignoreLinesToExpression(dirIncludeLines, dirPath, false);\n        const isPathIgnored = (path, isDir) => {\n            if (!path.startsWith(dirPath)) {\n                return false;\n            }\n            if (isDir && isDirIgnored(path) && !isDirIncluded(path)) {\n                return true;\n            }\n            if (isFileIgnored(path) && !isFileIncluded(path)) {\n                return true;\n            }\n            if (parent) {\n                return parent.isPathIgnored(path, isDir);\n            }\n            return false;\n        };\n        return isPathIgnored;\n    }\n    gitignoreLineToGlob(line, dirPath) {\n        const firstSep = line.indexOf('/');\n        if (firstSep === -1 || firstSep === line.length - 1) {\n            line = '**/' + line;\n        }\n        else {\n            if (firstSep === 0) {\n                if (dirPath.slice(-1) === '/') {\n                    line = line.slice(1);\n                }\n            }\n            else {\n                if (dirPath.slice(-1) !== '/') {\n                    line = '/' + line;\n                }\n            }\n            line = dirPath + line;\n        }\n        return line;\n    }\n}\nexport { IgnoreFile };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport './media/paneviewlet.css.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { Emitter, Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { asCssVariable, foreground } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { SIDE_BAR_BACKGROUND, PANEL_BACKGROUND } from '../../../common/theme.js';\nimport { trackFocus, append, $, addDisposableListener, EventType, asCssValueWithDefault, createCSSRule, asCSSUrl, after, Dimension, reset } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { Disposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { Action } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport { prepareActions } from 'monaco-editor/esm/vs/base/browser/ui/actionbar/actionbar.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { Pane } from '../../../../base/browser/ui/splitview/paneview.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ViewContainerLocationToString, defaultViewIcon, IViewsService, Extensions, IViewDescriptorService } from '../../../common/views.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { assertIsDefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { MenuId, SubmenuItemAction, Action2 } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { createActionViewItem } from 'monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js';\nimport { parseLinkedText } from 'monaco-editor/esm/vs/base/common/linkedText.js';\nimport { IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { Button } from 'monaco-editor/esm/vs/base/browser/ui/button/button.js';\nimport { Link } from 'monaco-editor/esm/vs/platform/opener/browser/link.js';\nimport { ProgressBar } from 'monaco-editor/esm/vs/base/browser/ui/progressbar/progressbar.js';\nimport { ScopedProgressIndicator, AbstractProgressScope } from '../../../services/progress/browser/progressIndicator.js';\nimport { DomScrollableElement } from 'monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollableElement.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { registerIcon } from 'monaco-editor/esm/vs/platform/theme/common/iconRegistry.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { CompositeMenuActions } from '../../actions.js';\nimport { WorkbenchToolBar } from 'monaco-editor/esm/vs/platform/actions/browser/toolbar.js';\nimport { FilterWidget } from './viewFilter.js';\nimport { BaseActionViewItem } from 'monaco-editor/esm/vs/base/browser/ui/actionbar/actionViewItems.js';\nimport { ServiceCollection } from 'monaco-editor/esm/vs/platform/instantiation/common/serviceCollection.js';\nimport { defaultProgressBarStyles, defaultButtonStyles } from 'monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js';\nvar ViewPane_1;\nvar ViewPaneShowActions;\n( (function(ViewPaneShowActions) {\n    ViewPaneShowActions[ViewPaneShowActions[\"Default\"] = 0] = \"Default\";\n    ViewPaneShowActions[ViewPaneShowActions[\"WhenExpanded\"] = 1] = \"WhenExpanded\";\n    ViewPaneShowActions[ViewPaneShowActions[\"Always\"] = 2] = \"Always\";\n})(ViewPaneShowActions || (ViewPaneShowActions = {})));\nconst VIEWPANE_FILTER_ACTION = ( new Action('viewpane.action.filter'));\nconst viewPaneContainerExpandedIcon = registerIcon('view-pane-container-expanded', Codicon.chevronDown, ( nls.localize(\n    'viewPaneContainerExpandedIcon',\n    'Icon for an expanded view pane container.'\n)));\nconst viewPaneContainerCollapsedIcon = registerIcon('view-pane-container-collapsed', Codicon.chevronRight, ( nls.localize(\n    'viewPaneContainerCollapsedIcon',\n    'Icon for a collapsed view pane container.'\n)));\nconst viewsRegistry = ( Registry.as(Extensions.ViewsRegistry));\nlet ViewWelcomeController = class ViewWelcomeController {\n    get contents() {\n        const visibleItems = this.items.filter(v => v.visible);\n        if (visibleItems.length === 0 && this.defaultItem) {\n            return [this.defaultItem.descriptor];\n        }\n        return ( visibleItems.map(v => v.descriptor));\n    }\n    constructor(id, contextKeyService) {\n        this.id = id;\n        this.contextKeyService = contextKeyService;\n        this._onDidChange = ( new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this.items = [];\n        this.disposables = ( new DisposableStore());\n        contextKeyService.onDidChangeContext(this.onDidChangeContext, this, this.disposables);\n        Event.filter(viewsRegistry.onDidChangeViewWelcomeContent, id => id === this.id)(this.onDidChangeViewWelcomeContent, this, this.disposables);\n        this.onDidChangeViewWelcomeContent();\n    }\n    onDidChangeViewWelcomeContent() {\n        const descriptors = viewsRegistry.getViewWelcomeContent(this.id);\n        this.items = [];\n        for (const descriptor of descriptors) {\n            if (descriptor.when === 'default') {\n                this.defaultItem = { descriptor, visible: true };\n            }\n            else {\n                const visible = descriptor.when ? this.contextKeyService.contextMatchesRules(descriptor.when) : true;\n                this.items.push({ descriptor, visible });\n            }\n        }\n        this._onDidChange.fire();\n    }\n    onDidChangeContext() {\n        let didChange = false;\n        for (const item of this.items) {\n            if (!item.descriptor.when || item.descriptor.when === 'default') {\n                continue;\n            }\n            const visible = this.contextKeyService.contextMatchesRules(item.descriptor.when);\n            if (item.visible === visible) {\n                continue;\n            }\n            item.visible = visible;\n            didChange = true;\n        }\n        if (didChange) {\n            this._onDidChange.fire();\n        }\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n};\nViewWelcomeController = ( __decorate([\n    ( __param(1, IContextKeyService))\n], ViewWelcomeController));\nlet ViewPane = class ViewPane extends Pane {\n    static { ViewPane_1 = this; }\n    static { this.AlwaysShowActionsConfig = 'workbench.view.alwaysShowHeaderActions'; }\n    get title() {\n        return this._title;\n    }\n    get titleDescription() {\n        return this._titleDescription;\n    }\n    constructor(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService) {\n        super({ ...options, ...{ orientation: viewDescriptorService.getViewLocationById(options.id) === 1  ? 1  : 0  } });\n        this.keybindingService = keybindingService;\n        this.contextMenuService = contextMenuService;\n        this.configurationService = configurationService;\n        this.contextKeyService = contextKeyService;\n        this.viewDescriptorService = viewDescriptorService;\n        this.instantiationService = instantiationService;\n        this.openerService = openerService;\n        this.themeService = themeService;\n        this.telemetryService = telemetryService;\n        this._onDidFocus = this._register(( new Emitter()));\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = this._register(( new Emitter()));\n        this.onDidBlur = this._onDidBlur.event;\n        this._onDidChangeBodyVisibility = this._register(( new Emitter()));\n        this.onDidChangeBodyVisibility = this._onDidChangeBodyVisibility.event;\n        this._onDidChangeTitleArea = this._register(( new Emitter()));\n        this.onDidChangeTitleArea = this._onDidChangeTitleArea.event;\n        this._onDidChangeViewWelcomeState = this._register(( new Emitter()));\n        this.onDidChangeViewWelcomeState = this._onDidChangeViewWelcomeState.event;\n        this._isVisible = false;\n        this.viewWelcomeDisposable = Disposable.None;\n        this.id = options.id;\n        this._title = options.title;\n        this._titleDescription = options.titleDescription;\n        this.showActions = options.showActions ?? ViewPaneShowActions.Default;\n        this.scopedContextKeyService = this._register(contextKeyService.createScoped(this.element));\n        this.scopedContextKeyService.createKey('view', this.id);\n        const viewLocationKey = this.scopedContextKeyService.createKey('viewLocation', ViewContainerLocationToString(viewDescriptorService.getViewLocationById(this.id)));\n        this._register(Event.filter(viewDescriptorService.onDidChangeLocation, e => ( e.views.some(view => view.id === this.id)))(() => viewLocationKey.set(ViewContainerLocationToString(viewDescriptorService.getViewLocationById(this.id)))));\n        this.menuActions = this._register(this.instantiationService.createChild(( new ServiceCollection([IContextKeyService, this.scopedContextKeyService]))).createInstance(CompositeMenuActions, options.titleMenuId ?? MenuId.ViewTitle, MenuId.ViewTitleContext, { shouldForwardArgs: !options.donotForwardArgs }));\n        this._register(this.menuActions.onDidChange(() => this.updateActions()));\n        this.viewWelcomeController = ( new ViewWelcomeController(this.id, contextKeyService));\n    }\n    get headerVisible() {\n        return super.headerVisible;\n    }\n    set headerVisible(visible) {\n        super.headerVisible = visible;\n        this.element.classList.toggle('merged-header', !visible);\n    }\n    setVisible(visible) {\n        if (this._isVisible !== visible) {\n            this._isVisible = visible;\n            if (this.isExpanded()) {\n                this._onDidChangeBodyVisibility.fire(visible);\n            }\n        }\n    }\n    isVisible() {\n        return this._isVisible;\n    }\n    isBodyVisible() {\n        return this._isVisible && this.isExpanded();\n    }\n    setExpanded(expanded) {\n        const changed = super.setExpanded(expanded);\n        if (changed) {\n            this._onDidChangeBodyVisibility.fire(expanded);\n        }\n        if (this.twistiesContainer) {\n            this.twistiesContainer.classList.remove(...ThemeIcon.asClassNameArray(this.getTwistyIcon(!expanded)));\n            this.twistiesContainer.classList.add(...ThemeIcon.asClassNameArray(this.getTwistyIcon(expanded)));\n        }\n        return changed;\n    }\n    render() {\n        super.render();\n        const focusTracker = trackFocus(this.element);\n        this._register(focusTracker);\n        this._register(focusTracker.onDidFocus(() => this._onDidFocus.fire()));\n        this._register(focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n    }\n    renderHeader(container) {\n        this.headerContainer = container;\n        this.twistiesContainer = append(container, $(ThemeIcon.asCSSSelector(this.getTwistyIcon(this.isExpanded()))));\n        this.renderHeaderTitle(container, this.title);\n        const actions = append(container, $('.actions'));\n        actions.classList.toggle('show-always', this.showActions === ViewPaneShowActions.Always);\n        actions.classList.toggle('show-expanded', this.showActions === ViewPaneShowActions.WhenExpanded);\n        this.toolbar = this.instantiationService.createInstance(WorkbenchToolBar, actions, {\n            orientation: 0 ,\n            actionViewItemProvider: action => this.getActionViewItem(action),\n            ariaLabel: ( nls.localize('viewToolbarAriaLabel', \"{0} actions\", this.title)),\n            getKeyBinding: action => this.keybindingService.lookupKeybinding(action.id),\n            renderDropdownAsChildElement: true,\n            actionRunner: this.getActionRunner(),\n            resetMenu: this.menuActions.menuId\n        });\n        this._register(this.toolbar);\n        this.setActions();\n        this._register(addDisposableListener(actions, EventType.CLICK, e => e.preventDefault()));\n        const viewContainerModel = this.viewDescriptorService.getViewContainerByViewId(this.id);\n        if (viewContainerModel) {\n            this._register(this.viewDescriptorService.getViewContainerModel(viewContainerModel).onDidChangeContainerInfo(({ title }) => this.updateTitle(this.title)));\n        }\n        else {\n            console.error(`View container model not found for view ${this.id}`);\n        }\n        const onDidRelevantConfigurationChange = Event.filter(this.configurationService.onDidChangeConfiguration, e => e.affectsConfiguration(ViewPane_1.AlwaysShowActionsConfig));\n        this._register(onDidRelevantConfigurationChange(this.updateActionsVisibility, this));\n        this.updateActionsVisibility();\n    }\n    getTwistyIcon(expanded) {\n        return expanded ? viewPaneContainerExpandedIcon : viewPaneContainerCollapsedIcon;\n    }\n    style(styles) {\n        super.style(styles);\n        const icon = this.getIcon();\n        if (this.iconContainer) {\n            const fgColor = asCssValueWithDefault(styles.headerForeground, asCssVariable(foreground));\n            if (URI.isUri(icon)) {\n                this.iconContainer.style.backgroundColor = fgColor;\n                this.iconContainer.style.color = '';\n            }\n            else {\n                this.iconContainer.style.color = fgColor;\n                this.iconContainer.style.backgroundColor = '';\n            }\n        }\n    }\n    getIcon() {\n        return this.viewDescriptorService.getViewDescriptorById(this.id)?.containerIcon || defaultViewIcon;\n    }\n    renderHeaderTitle(container, title) {\n        this.iconContainer = append(container, $('.icon', undefined));\n        const icon = this.getIcon();\n        let cssClass = undefined;\n        if (URI.isUri(icon)) {\n            cssClass = `view-${this.id.replace(/[\\.\\:]/g, '-')}`;\n            const iconClass = `.pane-header .icon.${cssClass}`;\n            createCSSRule(iconClass, `\n\t\t\t\tmask: ${asCSSUrl(icon)} no-repeat 50% 50%;\n\t\t\t\tmask-size: 24px;\n\t\t\t\t-webkit-mask: ${asCSSUrl(icon)} no-repeat 50% 50%;\n\t\t\t\t-webkit-mask-size: 16px;\n\t\t\t`);\n        }\n        else if (ThemeIcon.isThemeIcon(icon)) {\n            cssClass = ThemeIcon.asClassName(icon);\n        }\n        if (cssClass) {\n            this.iconContainer.classList.add(...cssClass.split(' '));\n        }\n        const calculatedTitle = this.calculateTitle(title);\n        this.titleContainer = append(container, $('h3.title', { title: calculatedTitle }, calculatedTitle));\n        if (this._titleDescription) {\n            this.setTitleDescription(this._titleDescription);\n        }\n        this.iconContainer.title = calculatedTitle;\n        this.iconContainer.setAttribute('aria-label', calculatedTitle);\n    }\n    updateTitle(title) {\n        const calculatedTitle = this.calculateTitle(title);\n        if (this.titleContainer) {\n            this.titleContainer.textContent = calculatedTitle;\n            this.titleContainer.setAttribute('title', calculatedTitle);\n        }\n        if (this.iconContainer) {\n            this.iconContainer.title = calculatedTitle;\n            this.iconContainer.setAttribute('aria-label', calculatedTitle);\n        }\n        this._title = title;\n        this._onDidChangeTitleArea.fire();\n    }\n    setTitleDescription(description) {\n        if (this.titleDescriptionContainer) {\n            this.titleDescriptionContainer.textContent = description ?? '';\n            this.titleDescriptionContainer.setAttribute('title', description ?? '');\n        }\n        else if (description && this.titleContainer) {\n            this.titleDescriptionContainer = after(this.titleContainer, $('span.description', { title: description }, description));\n        }\n    }\n    updateTitleDescription(description) {\n        this.setTitleDescription(description);\n        this._titleDescription = description;\n        this._onDidChangeTitleArea.fire();\n    }\n    calculateTitle(title) {\n        const viewContainer = this.viewDescriptorService.getViewContainerByViewId(this.id);\n        const model = this.viewDescriptorService.getViewContainerModel(viewContainer);\n        const viewDescriptor = this.viewDescriptorService.getViewDescriptorById(this.id);\n        const isDefault = this.viewDescriptorService.getDefaultContainerById(this.id) === viewContainer;\n        if (!isDefault && viewDescriptor?.containerTitle && model.title !== viewDescriptor.containerTitle) {\n            return `${viewDescriptor.containerTitle}: ${title}`;\n        }\n        return title;\n    }\n    renderBody(container) {\n        this.bodyContainer = container;\n        const viewWelcomeContainer = append(container, $('.welcome-view'));\n        this.viewWelcomeContainer = $('.welcome-view-content', { tabIndex: 0 });\n        this.scrollableElement = this._register(( new DomScrollableElement(this.viewWelcomeContainer, {\n            alwaysConsumeMouseWheel: true,\n            horizontal: 2 ,\n            vertical: 3 ,\n        })));\n        append(viewWelcomeContainer, this.scrollableElement.getDomNode());\n        const onViewWelcomeChange = Event.any(this.viewWelcomeController.onDidChange, this.onDidChangeViewWelcomeState);\n        this._register(onViewWelcomeChange(this.updateViewWelcome, this));\n        this.updateViewWelcome();\n    }\n    layoutBody(height, width) {\n        this.viewWelcomeContainer.style.height = `${height}px`;\n        this.viewWelcomeContainer.style.width = `${width}px`;\n        this.viewWelcomeContainer.classList.toggle('wide', width > 640);\n        this.scrollableElement.scanDomNode();\n    }\n    onDidScrollRoot() {\n    }\n    getProgressIndicator() {\n        if (this.progressBar === undefined) {\n            this.progressBar = this._register(( new ProgressBar(this.element, defaultProgressBarStyles)));\n            this.progressBar.hide();\n        }\n        if (this.progressIndicator === undefined) {\n            const that = this;\n            this.progressIndicator = ( new ScopedProgressIndicator(\n                assertIsDefined(this.progressBar),\n                new (class extends AbstractProgressScope {\n                    constructor() {\n                        super(that.id, that.isBodyVisible());\n                        this._register(that.onDidChangeBodyVisibility(isVisible => isVisible ? this.onScopeOpened(that.id) : this.onScopeClosed(that.id)));\n                    }\n                })()\n            ));\n        }\n        return this.progressIndicator;\n    }\n    getProgressLocation() {\n        return this.viewDescriptorService.getViewContainerByViewId(this.id).id;\n    }\n    getBackgroundColor() {\n        switch (this.viewDescriptorService.getViewLocationById(this.id)) {\n            case 1 :\n                return PANEL_BACKGROUND;\n            case 0 :\n            case 2 :\n                return SIDE_BAR_BACKGROUND;\n        }\n        return SIDE_BAR_BACKGROUND;\n    }\n    focus() {\n        if (this.shouldShowWelcome()) {\n            this.viewWelcomeContainer.focus();\n        }\n        else if (this.element) {\n            this.element.focus();\n            this._onDidFocus.fire();\n        }\n    }\n    setActions() {\n        if (this.toolbar) {\n            const primaryActions = [...this.menuActions.getPrimaryActions()];\n            if (this.shouldShowFilterInHeader()) {\n                primaryActions.unshift(VIEWPANE_FILTER_ACTION);\n            }\n            this.toolbar.setActions(prepareActions(primaryActions), prepareActions(this.menuActions.getSecondaryActions()));\n            this.toolbar.context = this.getActionsContext();\n        }\n    }\n    updateActionsVisibility() {\n        if (!this.headerContainer) {\n            return;\n        }\n        const shouldAlwaysShowActions = this.configurationService.getValue('workbench.view.alwaysShowHeaderActions');\n        this.headerContainer.classList.toggle('actions-always-visible', shouldAlwaysShowActions);\n    }\n    updateActions() {\n        this.setActions();\n        this._onDidChangeTitleArea.fire();\n    }\n    getActionViewItem(action, options) {\n        if (action.id === VIEWPANE_FILTER_ACTION.id) {\n            const that = this;\n            return new (class extends BaseActionViewItem {\n                constructor() { super(null, action); }\n                setFocusable() { }\n                get trapsArrowNavigation() { return true; }\n                render(container) {\n                    container.classList.add('viewpane-filter-container');\n                    append(container, that.getFilterWidget().element);\n                }\n            });\n        }\n        return createActionViewItem(this.instantiationService, action, { ...options, ...{ menuAsChild: action instanceof SubmenuItemAction } });\n    }\n    getActionsContext() {\n        return undefined;\n    }\n    getActionRunner() {\n        return undefined;\n    }\n    getOptimalWidth() {\n        return 0;\n    }\n    saveState() {\n    }\n    updateViewWelcome() {\n        this.viewWelcomeDisposable.dispose();\n        if (!this.shouldShowWelcome()) {\n            this.bodyContainer.classList.remove('welcome');\n            this.viewWelcomeContainer.innerText = '';\n            this.scrollableElement.scanDomNode();\n            return;\n        }\n        const contents = this.viewWelcomeController.contents;\n        if (contents.length === 0) {\n            this.bodyContainer.classList.remove('welcome');\n            this.viewWelcomeContainer.innerText = '';\n            this.scrollableElement.scanDomNode();\n            return;\n        }\n        const disposables = ( new DisposableStore());\n        this.bodyContainer.classList.add('welcome');\n        this.viewWelcomeContainer.innerText = '';\n        for (const { content, precondition } of contents) {\n            const lines = content.split('\\n');\n            for (let line of lines) {\n                line = line.trim();\n                if (!line) {\n                    continue;\n                }\n                const linkedText = parseLinkedText(line);\n                if (linkedText.nodes.length === 1 && typeof linkedText.nodes[0] !== 'string') {\n                    const node = linkedText.nodes[0];\n                    const buttonContainer = append(this.viewWelcomeContainer, $('.button-container'));\n                    const button = ( new Button(\n                        buttonContainer,\n                        { title: node.title, supportIcons: true, ...defaultButtonStyles }\n                    ));\n                    button.label = node.label;\n                    button.onDidClick(_ => {\n                        this.telemetryService.publicLog2('views.welcomeAction', { viewId: this.id, uri: node.href });\n                        this.openerService.open(node.href, { allowCommands: true });\n                    }, null, disposables);\n                    disposables.add(button);\n                    if (precondition) {\n                        const updateEnablement = () => button.enabled = this.contextKeyService.contextMatchesRules(precondition);\n                        updateEnablement();\n                        const keys = ( new Set());\n                        ( precondition.keys()).forEach(key => keys.add(key));\n                        const onDidChangeContext = Event.filter(this.contextKeyService.onDidChangeContext, e => e.affectsSome(keys));\n                        onDidChangeContext(updateEnablement, null, disposables);\n                    }\n                }\n                else {\n                    const p = append(this.viewWelcomeContainer, $('p'));\n                    for (const node of linkedText.nodes) {\n                        if (typeof node === 'string') {\n                            append(p, document.createTextNode(node));\n                        }\n                        else {\n                            const link = disposables.add(this.instantiationService.createInstance(Link, p, node, {}));\n                            if (precondition && node.href.startsWith('command:')) {\n                                const updateEnablement = () => link.enabled = this.contextKeyService.contextMatchesRules(precondition);\n                                updateEnablement();\n                                const keys = ( new Set());\n                                ( precondition.keys()).forEach(key => keys.add(key));\n                                const onDidChangeContext = Event.filter(this.contextKeyService.onDidChangeContext, e => e.affectsSome(keys));\n                                onDidChangeContext(updateEnablement, null, disposables);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.scrollableElement.scanDomNode();\n        this.viewWelcomeDisposable = disposables;\n    }\n    shouldShowWelcome() {\n        return false;\n    }\n    getFilterWidget() {\n        return undefined;\n    }\n    shouldShowFilterInHeader() {\n        return false;\n    }\n};\nViewPane = ViewPane_1 = ( __decorate([\n    ( __param(1, IKeybindingService)),\n    ( __param(2, IContextMenuService)),\n    ( __param(3, IConfigurationService)),\n    ( __param(4, IContextKeyService)),\n    ( __param(5, IViewDescriptorService)),\n    ( __param(6, IInstantiationService)),\n    ( __param(7, IOpenerService)),\n    ( __param(8, IThemeService)),\n    ( __param(9, ITelemetryService))\n], ViewPane));\nlet FilterViewPane = class FilterViewPane extends ViewPane {\n    constructor(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService) {\n        super(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n        this.filterWidget = this._register(instantiationService.createChild(( new ServiceCollection([IContextKeyService, this.scopedContextKeyService]))).createInstance(FilterWidget, options.filterOptions));\n    }\n    getFilterWidget() {\n        return this.filterWidget;\n    }\n    renderBody(container) {\n        super.renderBody(container);\n        this.filterContainer = append(container, $('.viewpane-filter-container'));\n    }\n    layoutBody(height, width) {\n        super.layoutBody(height, width);\n        this.dimension = ( new Dimension(width, height));\n        const wasFilterShownInHeader = !this.filterContainer?.hasChildNodes();\n        const shouldShowFilterInHeader = this.shouldShowFilterInHeader();\n        if (wasFilterShownInHeader !== shouldShowFilterInHeader) {\n            if (shouldShowFilterInHeader) {\n                reset(this.filterContainer);\n            }\n            this.updateActions();\n            if (!shouldShowFilterInHeader) {\n                append(this.filterContainer, this.filterWidget.element);\n            }\n        }\n        if (!shouldShowFilterInHeader) {\n            height = height - 44;\n        }\n        this.filterWidget.layout(width);\n        this.layoutBodyContent(height, width);\n    }\n    shouldShowFilterInHeader() {\n        return !(this.dimension && this.dimension.width < 600 && this.dimension.height > 100);\n    }\n};\nFilterViewPane = ( __decorate([\n    ( __param(1, IKeybindingService)),\n    ( __param(2, IContextMenuService)),\n    ( __param(3, IConfigurationService)),\n    ( __param(4, IContextKeyService)),\n    ( __param(5, IViewDescriptorService)),\n    ( __param(6, IInstantiationService)),\n    ( __param(7, IOpenerService)),\n    ( __param(8, IThemeService)),\n    ( __param(9, ITelemetryService))\n], FilterViewPane));\nclass ViewAction extends Action2 {\n    constructor(desc) {\n        super(desc);\n        this.desc = desc;\n    }\n    run(accessor, ...args) {\n        const view = accessor.get(IViewsService).getActiveViewWithId(this.desc.viewId);\n        if (view) {\n            return this.runInView(accessor, view, ...args);\n        }\n    }\n}\nexport { FilterViewPane, VIEWPANE_FILTER_ACTION, ViewAction, ViewPane, ViewPaneShowActions };\n", "import n from '../../../../../../../../external/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".monaco-pane-view .split-view-view:first-of-type>.pane>.pane-header{border-top:none!important}.monaco-pane-view .split-view-view:first-of-type>.pane{border-left:none!important}.monaco-pane-view .pane>.pane-header{position:relative}.monaco-pane-view .pane.expanded>.pane-header>.actions.show-expanded,.monaco-pane-view .pane>.pane-header>.actions.show-always{display:initial}.monaco-pane-view .pane>.pane-header>.icon{display:none;height:16px;width:16px}.monaco-pane-view .pane.pane.horizontal:not(.expanded)>.pane-header>.icon{display:inline;margin-top:4px}.monaco-pane-view .pane>.pane-header h3.title{-webkit-margin-before:0;-webkit-margin-after:0;font-size:11px;min-width:3ch;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.monaco-pane-view .pane>.pane-header .description{display:block;flex-shrink:100000;font-weight:400;margin-left:10px;opacity:.6;overflow:hidden;text-overflow:ellipsis;text-transform:none;white-space:nowrap}.monaco-pane-view .pane>.pane-header .description .codicon{font-size:9px;margin-left:2px}.monaco-pane-view .pane.horizontal:not(.expanded)>.pane-header .description,.monaco-pane-view .pane.horizontal:not(.expanded)>.pane-header h3.title,.monaco-pane-view .pane>.pane-header:not(.expanded) .description{display:none}.monaco-pane-view .pane .monaco-progress-container{height:2px;left:0;position:absolute;top:-2px;z-index:5}.monaco-pane-view .pane:not(.merged-header) .monaco-progress-container{top:20px}\";\nn(css,{});\nexport { css, css as default };\n", "import { isFirefox } from 'monaco-editor/esm/vs/base/browser/browser.js';\nimport { DataTransfers } from 'monaco-editor/esm/vs/base/browser/dnd.js';\nimport { $, append, trackFocus, EventType, addDisposableListener, EventHelper, clearNode } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { DomEmitter } from 'monaco-editor/esm/vs/base/browser/event.js';\nimport { StandardKeyboardEvent } from 'monaco-editor/esm/vs/base/browser/keyboardEvent.js';\nimport { Gesture, EventType as EventType$1 } from 'monaco-editor/esm/vs/base/browser/touch.js';\nimport { Color, RGBA } from 'monaco-editor/esm/vs/base/common/color.js';\nimport { Emitter, Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport './paneview.css.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { SplitView, Sizing } from 'monaco-editor/esm/vs/base/browser/ui/splitview/splitview.js';\nclass Pane extends Disposable {\n    static { this.HEADER_SIZE = 22; }\n    get ariaHeaderLabel() {\n        return this._ariaHeaderLabel;\n    }\n    set ariaHeaderLabel(newLabel) {\n        this._ariaHeaderLabel = newLabel;\n        this.header.setAttribute('aria-label', this.ariaHeaderLabel);\n    }\n    get draggableElement() {\n        return this.header;\n    }\n    get dropTargetElement() {\n        return this.element;\n    }\n    get dropBackground() {\n        return this.styles.dropBackground;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(size) {\n        this._minimumBodySize = size;\n        this._onDidChange.fire(undefined);\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(size) {\n        this._maximumBodySize = size;\n        this._onDidChange.fire(undefined);\n    }\n    get headerSize() {\n        return this.headerVisible ? Pane.HEADER_SIZE : 0;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = !this.headerVisible || this.isExpanded();\n        const minimumBodySize = expanded ? this.minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = !this.headerVisible || this.isExpanded();\n        const maximumBodySize = expanded ? this.maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    constructor(options) {\n        super();\n        this.expandedSize = undefined;\n        this._headerVisible = true;\n        this._bodyRendered = false;\n        this.styles = {\n            dropBackground: undefined,\n            headerBackground: undefined,\n            headerBorder: undefined,\n            headerForeground: undefined,\n            leftBorder: undefined\n        };\n        this.animationTimer = undefined;\n        this._onDidChange = this._register(( new Emitter()));\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeExpansionState = this._register(( new Emitter()));\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this.orthogonalSize = 0;\n        this._expanded = typeof options.expanded === 'undefined' ? true : !!options.expanded;\n        this._orientation = typeof options.orientation === 'undefined' ? 0  : options.orientation;\n        this._ariaHeaderLabel = ( localize('viewSection', \"{0} Section\", options.title));\n        this._minimumBodySize = typeof options.minimumBodySize === 'number' ? options.minimumBodySize : this._orientation === 1  ? 200 : 120;\n        this._maximumBodySize = typeof options.maximumBodySize === 'number' ? options.maximumBodySize : Number.POSITIVE_INFINITY;\n        this.element = $('.pane');\n    }\n    isExpanded() {\n        return this._expanded;\n    }\n    setExpanded(expanded) {\n        if (this._expanded === !!expanded) {\n            return false;\n        }\n        this.element?.classList.toggle('expanded', expanded);\n        this._expanded = !!expanded;\n        this.updateHeader();\n        if (expanded) {\n            if (!this._bodyRendered) {\n                this.renderBody(this.body);\n                this._bodyRendered = true;\n            }\n            if (typeof this.animationTimer === 'number') {\n                clearTimeout(this.animationTimer);\n            }\n            append(this.element, this.body);\n        }\n        else {\n            this.animationTimer = window.setTimeout(() => {\n                this.body.remove();\n            }, 200);\n        }\n        this._onDidChangeExpansionState.fire(expanded);\n        this._onDidChange.fire(expanded ? this.expandedSize : undefined);\n        return true;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(visible) {\n        if (this._headerVisible === !!visible) {\n            return;\n        }\n        this._headerVisible = !!visible;\n        this.updateHeader();\n        this._onDidChange.fire(undefined);\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(orientation) {\n        if (this._orientation === orientation) {\n            return;\n        }\n        this._orientation = orientation;\n        if (this.element) {\n            this.element.classList.toggle('horizontal', this.orientation === 1 );\n            this.element.classList.toggle('vertical', this.orientation === 0 );\n        }\n        if (this.header) {\n            this.updateHeader();\n        }\n    }\n    render() {\n        this.element.classList.toggle('expanded', this.isExpanded());\n        this.element.classList.toggle('horizontal', this.orientation === 1 );\n        this.element.classList.toggle('vertical', this.orientation === 0 );\n        this.header = $('.pane-header');\n        append(this.element, this.header);\n        this.header.setAttribute('tabindex', '0');\n        this.header.setAttribute('role', 'button');\n        this.header.setAttribute('aria-label', this.ariaHeaderLabel);\n        this.renderHeader(this.header);\n        const focusTracker = trackFocus(this.header);\n        this._register(focusTracker);\n        this._register(focusTracker.onDidFocus(() => this.header.classList.add('focused'), null));\n        this._register(focusTracker.onDidBlur(() => this.header.classList.remove('focused'), null));\n        this.updateHeader();\n        const eventDisposables = this._register(( new DisposableStore()));\n        const onKeyDown = this._register(( new DomEmitter(this.header, 'keydown')));\n        const onHeaderKeyDown = ( Event.map(onKeyDown.event, e => ( new StandardKeyboardEvent(e)), eventDisposables));\n        this._register(Event.filter(onHeaderKeyDown, e => e.keyCode === 3  || e.keyCode === 10 , eventDisposables)(() => this.setExpanded(!this.isExpanded()), null));\n        this._register(Event.filter(onHeaderKeyDown, e => e.keyCode === 15 , eventDisposables)(() => this.setExpanded(false), null));\n        this._register(Event.filter(onHeaderKeyDown, e => e.keyCode === 17 , eventDisposables)(() => this.setExpanded(true), null));\n        this._register(Gesture.addTarget(this.header));\n        [EventType.CLICK, EventType$1.Tap].forEach(eventType => {\n            this._register(addDisposableListener(this.header, eventType, e => {\n                if (!e.defaultPrevented) {\n                    this.setExpanded(!this.isExpanded());\n                }\n            }));\n        });\n        this.body = append(this.element, $('.pane-body'));\n        if (!this._bodyRendered && this.isExpanded()) {\n            this.renderBody(this.body);\n            this._bodyRendered = true;\n        }\n        if (!this.isExpanded()) {\n            this.body.remove();\n        }\n    }\n    layout(size) {\n        const headerSize = this.headerVisible ? Pane.HEADER_SIZE : 0;\n        const width = this._orientation === 0  ? this.orthogonalSize : size;\n        const height = this._orientation === 0  ? size - headerSize : this.orthogonalSize - headerSize;\n        if (this.isExpanded()) {\n            this.body.classList.toggle('wide', width >= 600);\n            this.layoutBody(height, width);\n            this.expandedSize = size;\n        }\n    }\n    style(styles) {\n        this.styles = styles;\n        if (!this.header) {\n            return;\n        }\n        this.updateHeader();\n    }\n    updateHeader() {\n        const expanded = !this.headerVisible || this.isExpanded();\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.classList.toggle('hidden', !this.headerVisible);\n        this.header.classList.toggle('expanded', expanded);\n        this.header.setAttribute('aria-expanded', String(expanded));\n        this.header.style.color = this.styles.headerForeground ?? '';\n        this.header.style.backgroundColor = this.styles.headerBackground ?? '';\n        this.header.style.borderTop = this.styles.headerBorder && this.orientation === 0  ? `1px solid ${this.styles.headerBorder}` : '';\n        this.element.style.borderLeft = this.styles.leftBorder && this.orientation === 1  ? `1px solid ${this.styles.leftBorder}` : '';\n    }\n}\nclass PaneDraggable extends Disposable {\n    static { this.DefaultDragOverBackgroundColor = ( new Color(( new RGBA(128, 128, 128, 0.5)))); }\n    constructor(pane, dnd, context) {\n        super();\n        this.pane = pane;\n        this.dnd = dnd;\n        this.context = context;\n        this.dragOverCounter = 0;\n        this._onDidDrop = this._register(( new Emitter()));\n        this.onDidDrop = this._onDidDrop.event;\n        pane.draggableElement.draggable = true;\n        this._register(addDisposableListener(pane.draggableElement, 'dragstart', e => this.onDragStart(e)));\n        this._register(addDisposableListener(pane.dropTargetElement, 'dragenter', e => this.onDragEnter(e)));\n        this._register(addDisposableListener(pane.dropTargetElement, 'dragleave', e => this.onDragLeave(e)));\n        this._register(addDisposableListener(pane.dropTargetElement, 'dragend', e => this.onDragEnd(e)));\n        this._register(addDisposableListener(pane.dropTargetElement, 'drop', e => this.onDrop(e)));\n    }\n    onDragStart(e) {\n        if (!this.dnd.canDrag(this.pane) || !e.dataTransfer) {\n            e.preventDefault();\n            e.stopPropagation();\n            return;\n        }\n        e.dataTransfer.effectAllowed = 'move';\n        if (isFirefox) {\n            e.dataTransfer?.setData(DataTransfers.TEXT, this.pane.draggableElement.textContent || '');\n        }\n        const dragImage = append(document.body, $('.monaco-drag-image', {}, this.pane.draggableElement.textContent || ''));\n        e.dataTransfer.setDragImage(dragImage, -10, -10);\n        setTimeout(() => document.body.removeChild(dragImage), 0);\n        this.context.draggable = this;\n    }\n    onDragEnter(e) {\n        if (!this.context.draggable || this.context.draggable === this) {\n            return;\n        }\n        if (!this.dnd.canDrop(this.context.draggable.pane, this.pane)) {\n            return;\n        }\n        this.dragOverCounter++;\n        this.render();\n    }\n    onDragLeave(e) {\n        if (!this.context.draggable || this.context.draggable === this) {\n            return;\n        }\n        if (!this.dnd.canDrop(this.context.draggable.pane, this.pane)) {\n            return;\n        }\n        this.dragOverCounter--;\n        if (this.dragOverCounter === 0) {\n            this.render();\n        }\n    }\n    onDragEnd(e) {\n        if (!this.context.draggable) {\n            return;\n        }\n        this.dragOverCounter = 0;\n        this.render();\n        this.context.draggable = null;\n    }\n    onDrop(e) {\n        if (!this.context.draggable) {\n            return;\n        }\n        EventHelper.stop(e);\n        this.dragOverCounter = 0;\n        this.render();\n        if (this.dnd.canDrop(this.context.draggable.pane, this.pane) && this.context.draggable !== this) {\n            this._onDidDrop.fire({ from: this.context.draggable.pane, to: this.pane });\n        }\n        this.context.draggable = null;\n    }\n    render() {\n        let backgroundColor = null;\n        if (this.dragOverCounter > 0) {\n            backgroundColor = this.pane.dropBackground ?? ( PaneDraggable.DefaultDragOverBackgroundColor.toString());\n        }\n        this.pane.dropTargetElement.style.backgroundColor = backgroundColor || '';\n    }\n}\nclass PaneView extends Disposable {\n    constructor(container, options = {}) {\n        super();\n        this.dndContext = { draggable: null };\n        this.paneItems = [];\n        this.orthogonalSize = 0;\n        this.size = 0;\n        this.animationTimer = undefined;\n        this._onDidDrop = this._register(( new Emitter()));\n        this.onDidDrop = this._onDidDrop.event;\n        this.dnd = options.dnd;\n        this.orientation = options.orientation ?? 0 ;\n        this.element = append(container, $('.monaco-pane-view'));\n        this.splitview = this._register(( new SplitView(this.element, { orientation: this.orientation })));\n        this.onDidSashReset = this.splitview.onDidSashReset;\n        this.onDidSashChange = this.splitview.onDidSashChange;\n        this.onDidScroll = this.splitview.onDidScroll;\n        const eventDisposables = this._register(( new DisposableStore()));\n        const onKeyDown = this._register(( new DomEmitter(this.element, 'keydown')));\n        const onHeaderKeyDown = ( Event.map(\n            Event.filter(onKeyDown.event, e => e.target instanceof HTMLElement && e.target.classList.contains('pane-header'), eventDisposables),\n            e => ( new StandardKeyboardEvent(e)),\n            eventDisposables\n        ));\n        this._register(Event.filter(onHeaderKeyDown, e => e.keyCode === 16 , eventDisposables)(() => this.focusPrevious()));\n        this._register(Event.filter(onHeaderKeyDown, e => e.keyCode === 18 , eventDisposables)(() => this.focusNext()));\n    }\n    addPane(pane, size, index = this.splitview.length) {\n        const disposables = ( new DisposableStore());\n        pane.onDidChangeExpansionState(this.setupAnimation, this, disposables);\n        const paneItem = { pane: pane, disposable: disposables };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orientation = this.orientation;\n        pane.orthogonalSize = this.orthogonalSize;\n        this.splitview.addView(pane, size, index);\n        if (this.dnd) {\n            const draggable = ( new PaneDraggable(pane, this.dnd, this.dndContext));\n            disposables.add(draggable);\n            disposables.add(draggable.onDidDrop(this._onDidDrop.fire, this._onDidDrop));\n        }\n    }\n    removePane(pane) {\n        const index = this.paneItems.findIndex(item => item.pane === pane);\n        if (index === -1) {\n            return;\n        }\n        this.splitview.removeView(index, pane.isExpanded() ? Sizing.Distribute : undefined);\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        paneItem.disposable.dispose();\n    }\n    movePane(from, to) {\n        const fromIndex = this.paneItems.findIndex(item => item.pane === from);\n        const toIndex = this.paneItems.findIndex(item => item.pane === to);\n        if (fromIndex === -1 || toIndex === -1) {\n            return;\n        }\n        const [paneItem] = this.paneItems.splice(fromIndex, 1);\n        this.paneItems.splice(toIndex, 0, paneItem);\n        this.splitview.moveView(fromIndex, toIndex);\n    }\n    resizePane(pane, size) {\n        const index = this.paneItems.findIndex(item => item.pane === pane);\n        if (index === -1) {\n            return;\n        }\n        this.splitview.resizeView(index, size);\n    }\n    getPaneSize(pane) {\n        const index = this.paneItems.findIndex(item => item.pane === pane);\n        if (index === -1) {\n            return -1;\n        }\n        return this.splitview.getViewSize(index);\n    }\n    layout(height, width) {\n        this.orthogonalSize = this.orientation === 0  ? width : height;\n        this.size = this.orientation === 1  ? width : height;\n        for (const paneItem of this.paneItems) {\n            paneItem.pane.orthogonalSize = this.orthogonalSize;\n        }\n        this.splitview.layout(this.size);\n    }\n    setBoundarySashes(sashes) {\n        this.boundarySashes = sashes;\n        this.updateSplitviewOrthogonalSashes(sashes);\n    }\n    updateSplitviewOrthogonalSashes(sashes) {\n        if (this.orientation === 0 ) {\n            this.splitview.orthogonalStartSash = sashes?.left;\n            this.splitview.orthogonalEndSash = sashes?.right;\n        }\n        else {\n            this.splitview.orthogonalEndSash = sashes?.bottom;\n        }\n    }\n    flipOrientation(height, width) {\n        this.orientation = this.orientation === 0  ? 1  : 0 ;\n        const paneSizes = ( this.paneItems.map(pane => this.getPaneSize(pane.pane)));\n        this.splitview.dispose();\n        clearNode(this.element);\n        this.splitview = this._register(( new SplitView(this.element, { orientation: this.orientation })));\n        this.updateSplitviewOrthogonalSashes(this.boundarySashes);\n        const newOrthogonalSize = this.orientation === 0  ? width : height;\n        const newSize = this.orientation === 1  ? width : height;\n        this.paneItems.forEach((pane, index) => {\n            pane.pane.orthogonalSize = newOrthogonalSize;\n            pane.pane.orientation = this.orientation;\n            const viewSize = this.size === 0 ? 0 : (newSize * paneSizes[index]) / this.size;\n            this.splitview.addView(pane.pane, viewSize, index);\n        });\n        this.size = newSize;\n        this.orthogonalSize = newOrthogonalSize;\n        this.splitview.layout(this.size);\n    }\n    setupAnimation() {\n        if (typeof this.animationTimer === 'number') {\n            window.clearTimeout(this.animationTimer);\n        }\n        this.element.classList.add('animated');\n        this.animationTimer = window.setTimeout(() => {\n            this.animationTimer = undefined;\n            this.element.classList.remove('animated');\n        }, 200);\n    }\n    getPaneHeaderElements() {\n        return [...this.element.querySelectorAll('.pane-header')];\n    }\n    focusPrevious() {\n        const headers = this.getPaneHeaderElements();\n        const index = headers.indexOf(document.activeElement);\n        if (index === -1) {\n            return;\n        }\n        headers[Math.max(index - 1, 0)].focus();\n    }\n    focusNext() {\n        const headers = this.getPaneHeaderElements();\n        const index = headers.indexOf(document.activeElement);\n        if (index === -1) {\n            return;\n        }\n        headers[Math.min(index + 1, headers.length - 1)].focus();\n    }\n    dispose() {\n        super.dispose();\n        this.paneItems.forEach(i => i.disposable.dispose());\n    }\n}\nexport { Pane, PaneView };\n", "import n from '../../../../../../../external/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".monaco-pane-view{height:100%;width:100%}.monaco-pane-view .pane{display:flex;flex-direction:column;height:100%;overflow:hidden;width:100%}.monaco-pane-view .pane.horizontal:not(.expanded){flex-direction:row}.monaco-pane-view .pane>.pane-header{align-items:center;box-sizing:border-box;cursor:pointer;display:flex;font-size:11px;font-weight:700;height:22px;overflow:hidden}.monaco-pane-view .pane>.pane-header>.title{text-transform:uppercase}.monaco-pane-view .pane.horizontal:not(.expanded)>.pane-header{flex-direction:column;height:100%;width:22px}.monaco-pane-view .pane>.pane-header>.codicon:first-of-type{margin:0 2px}.monaco-pane-view .pane.horizontal:not(.expanded)>.pane-header>.codicon:first-of-type{margin:2px}.monaco-pane-view .pane>.pane-header>.actions{display:none;margin-left:auto}.monaco-pane-view .pane>.pane-header>.actions .action-item{margin-right:4px}.monaco-pane-view .pane>.pane-header>.actions .action-label{padding:2px}.monaco-pane-view .pane:focus-within>.pane-header.expanded>.actions,.monaco-pane-view .pane:hover>.pane-header.expanded>.actions,.monaco-pane-view .pane>.pane-header.actions-always-visible.expanded>.actions,.monaco-pane-view .pane>.pane-header.focused.expanded>.actions{display:initial}.monaco-pane-view .pane>.pane-header .monaco-action-bar .action-item.select-container{cursor:default}.monaco-pane-view .pane>.pane-header .action-item .monaco-select-box{cursor:pointer;min-height:18px;min-width:110px;padding:2px 23px 2px 8px}.linux .monaco-pane-view .pane>.pane-header .action-item .monaco-select-box,.windows .monaco-pane-view .pane>.pane-header .action-item .monaco-select-box{padding:0 23px 0 8px}.monaco-pane-view:lang(ja) .pane>.pane-header,.monaco-pane-view:lang(ko) .pane>.pane-header,.monaco-pane-view:lang(zh-Hans) .pane>.pane-header,.monaco-pane-view:lang(zh-Hant) .pane>.pane-header{font-weight:400}.monaco-pane-view .pane>.pane-header.hidden{display:none}.monaco-pane-view .pane>.pane-body{flex:1;overflow:hidden}.monaco-pane-view.animated .split-view-view{transition-duration:.15s;transition-timing-function:ease-out}.reduce-motion .monaco-pane-view .split-view-view{transition-duration:0s!important}.monaco-pane-view.animated.vertical .split-view-view{transition-property:height}.monaco-pane-view.animated.horizontal .split-view-view{transition-property:width}#monaco-pane-drop-overlay{box-sizing:border-box;height:100%;left:0;position:absolute;width:100%;z-index:10000}#monaco-pane-drop-overlay>.pane-overlay-indicator{height:100%;min-height:22px;min-width:19px;pointer-events:none;position:absolute;transition:opacity .15s ease-out;width:100%}#monaco-pane-drop-overlay>.pane-overlay-indicator.overlay-move-transition{transition:top 70ms ease-out,left 70ms ease-out,width 70ms ease-out,height 70ms ease-out,opacity .15s ease-out}\";\nn(css,{});\nexport { css, css as default };\n", "import { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { emptyProgressRunner } from 'monaco-editor/esm/vs/platform/progress/common/progress.js';\nclass EditorProgressIndicator extends Disposable {\n    constructor(progressBar, group) {\n        super();\n        this.progressBar = progressBar;\n        this.group = group;\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.group.onDidModelChange(e => {\n            if (e.kind === 6  ||\n                (e.kind === 4  && this.group.isEmpty)) {\n                this.progressBar.stop().hide();\n            }\n        }));\n    }\n    show(infiniteOrTotal, delay) {\n        if (this.group.isEmpty) {\n            return emptyProgressRunner;\n        }\n        if (infiniteOrTotal === true) {\n            return this.doShow(true, delay);\n        }\n        return this.doShow(infiniteOrTotal, delay);\n    }\n    doShow(infiniteOrTotal, delay) {\n        if (typeof infiniteOrTotal === 'boolean') {\n            this.progressBar.infinite().show(delay);\n        }\n        else {\n            this.progressBar.total(infiniteOrTotal).show(delay);\n        }\n        return {\n            total: (total) => {\n                this.progressBar.total(total);\n            },\n            worked: (worked) => {\n                if (this.progressBar.hasTotal()) {\n                    this.progressBar.worked(worked);\n                }\n                else {\n                    this.progressBar.infinite().show();\n                }\n            },\n            done: () => {\n                this.progressBar.stop().hide();\n            }\n        };\n    }\n    async showWhile(promise, delay) {\n        if (this.group.isEmpty) {\n            try {\n                await promise;\n            }\n            catch (error) {\n            }\n        }\n        return this.doShowWhile(promise, delay);\n    }\n    async doShowWhile(promise, delay) {\n        try {\n            this.progressBar.infinite().show(delay);\n            await promise;\n        }\n        catch (error) {\n        }\n        finally {\n            this.progressBar.stop().hide();\n        }\n    }\n}\nvar ProgressIndicatorState;\n( (function(ProgressIndicatorState) {\n    ( (function(Type) {\n        Type[Type[\"None\"] = 0] = \"None\";\n        Type[Type[\"Done\"] = 1] = \"Done\";\n        Type[Type[\"Infinite\"] = 2] = \"Infinite\";\n        Type[Type[\"While\"] = 3] = \"While\";\n        Type[Type[\"Work\"] = 4] = \"Work\";\n    })(ProgressIndicatorState.Type || (ProgressIndicatorState.Type = {})));\n    ProgressIndicatorState.None = { type: 0  };\n    ProgressIndicatorState.Done = { type: 1  };\n    ProgressIndicatorState.Infinite = { type: 2  };\n    class While {\n        constructor(whilePromise, whileStart, whileDelay) {\n            this.whilePromise = whilePromise;\n            this.whileStart = whileStart;\n            this.whileDelay = whileDelay;\n            this.type = 3 ;\n        }\n    }\n    ProgressIndicatorState.While = While;\n    class Work {\n        constructor(total, worked) {\n            this.total = total;\n            this.worked = worked;\n            this.type = 4 ;\n        }\n    }\n    ProgressIndicatorState.Work = Work;\n})(ProgressIndicatorState || (ProgressIndicatorState = {})));\nclass ScopedProgressIndicator extends Disposable {\n    constructor(progressBar, scope) {\n        super();\n        this.progressBar = progressBar;\n        this.scope = scope;\n        this.progressState = ProgressIndicatorState.None;\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.scope.onDidChangeActive(() => {\n            if (this.scope.isActive) {\n                this.onDidScopeActivate();\n            }\n            else {\n                this.onDidScopeDeactivate();\n            }\n        }));\n    }\n    onDidScopeActivate() {\n        if (this.progressState.type === ProgressIndicatorState.Done.type) {\n            return;\n        }\n        if (this.progressState.type === 3 ) {\n            let delay;\n            if (this.progressState.whileDelay > 0) {\n                const remainingDelay = this.progressState.whileDelay - (Date.now() - this.progressState.whileStart);\n                if (remainingDelay > 0) {\n                    delay = remainingDelay;\n                }\n            }\n            this.doShowWhile(delay);\n        }\n        else if (this.progressState.type === 2 ) {\n            this.progressBar.infinite().show();\n        }\n        else if (this.progressState.type === 4 ) {\n            if (this.progressState.total) {\n                this.progressBar.total(this.progressState.total).show();\n            }\n            if (this.progressState.worked) {\n                this.progressBar.worked(this.progressState.worked).show();\n            }\n        }\n    }\n    onDidScopeDeactivate() {\n        this.progressBar.stop().hide();\n    }\n    show(infiniteOrTotal, delay) {\n        if (typeof infiniteOrTotal === 'boolean') {\n            this.progressState = ProgressIndicatorState.Infinite;\n        }\n        else {\n            this.progressState = new ProgressIndicatorState.Work(infiniteOrTotal, undefined);\n        }\n        if (this.scope.isActive) {\n            if (this.progressState.type === 2 ) {\n                this.progressBar.infinite().show(delay);\n            }\n            else if (this.progressState.type === 4  && typeof this.progressState.total === 'number') {\n                this.progressBar.total(this.progressState.total).show(delay);\n            }\n        }\n        return {\n            total: (total) => {\n                this.progressState = new ProgressIndicatorState.Work(total, this.progressState.type === 4  ? this.progressState.worked : undefined);\n                if (this.scope.isActive) {\n                    this.progressBar.total(total);\n                }\n            },\n            worked: (worked) => {\n                if (!this.scope.isActive || this.progressBar.hasTotal()) {\n                    this.progressState = new ProgressIndicatorState.Work(this.progressState.type === 4  ? this.progressState.total : undefined, this.progressState.type === 4  && typeof this.progressState.worked === 'number' ? this.progressState.worked + worked : worked);\n                    if (this.scope.isActive) {\n                        this.progressBar.worked(worked);\n                    }\n                }\n                else {\n                    this.progressState = ProgressIndicatorState.Infinite;\n                    this.progressBar.infinite().show();\n                }\n            },\n            done: () => {\n                this.progressState = ProgressIndicatorState.Done;\n                if (this.scope.isActive) {\n                    this.progressBar.stop().hide();\n                }\n            }\n        };\n    }\n    async showWhile(promise, delay) {\n        if (this.progressState.type === 3 ) {\n            promise = Promise.all([promise, this.progressState.whilePromise]);\n        }\n        this.progressState = new ProgressIndicatorState.While(promise, delay || 0, Date.now());\n        try {\n            this.doShowWhile(delay);\n            await promise;\n        }\n        catch (error) {\n        }\n        finally {\n            if (this.progressState.type !== 3  || this.progressState.whilePromise === promise) {\n                this.progressState = ProgressIndicatorState.None;\n                if (this.scope.isActive) {\n                    this.progressBar.stop().hide();\n                }\n            }\n        }\n    }\n    doShowWhile(delay) {\n        if (this.scope.isActive) {\n            this.progressBar.infinite().show(delay);\n        }\n    }\n}\nclass AbstractProgressScope extends Disposable {\n    get isActive() { return this._isActive; }\n    constructor(scopeId, _isActive) {\n        super();\n        this.scopeId = scopeId;\n        this._isActive = _isActive;\n        this._onDidChangeActive = this._register(( new Emitter()));\n        this.onDidChangeActive = this._onDidChangeActive.event;\n    }\n    onScopeOpened(scopeId) {\n        if (scopeId === this.scopeId) {\n            if (!this._isActive) {\n                this._isActive = true;\n                this._onDidChangeActive.fire();\n            }\n        }\n    }\n    onScopeClosed(scopeId) {\n        if (scopeId === this.scopeId) {\n            if (this._isActive) {\n                this._isActive = false;\n                this._onDidChangeActive.fire();\n            }\n        }\n    }\n}\nexport { AbstractProgressScope, EditorProgressIndicator, ScopedProgressIndicator };\n", "import { __decorate, __param } from '../../../../../external/tslib/tslib.es6.js';\nimport { Disposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { SubmenuItemAction, IMenuService } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { createAndFillInActionBarActions } from 'monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js';\nclass MenuActions extends Disposable {\n    get primaryActions() { return this._primaryActions; }\n    get secondaryActions() { return this._secondaryActions; }\n    constructor(menuId, options, menuService, contextKeyService) {\n        super();\n        this.options = options;\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n        this._primaryActions = [];\n        this._secondaryActions = [];\n        this._onDidChange = this._register(( new Emitter()));\n        this.onDidChange = this._onDidChange.event;\n        this.disposables = this._register(( new DisposableStore()));\n        this.menu = this._register(menuService.createMenu(menuId, contextKeyService));\n        this._register(this.menu.onDidChange(() => this.updateActions()));\n        this.updateActions();\n    }\n    updateActions() {\n        this.disposables.clear();\n        this._primaryActions = [];\n        this._secondaryActions = [];\n        createAndFillInActionBarActions(this.menu, this.options, { primary: this._primaryActions, secondary: this._secondaryActions });\n        this.disposables.add(this.updateSubmenus([...this._primaryActions, ...this._secondaryActions], {}));\n        this._onDidChange.fire();\n    }\n    updateSubmenus(actions, submenus) {\n        const disposables = ( new DisposableStore());\n        for (const action of actions) {\n            if (action instanceof SubmenuItemAction && !submenus[action.item.submenu.id]) {\n                const menu = submenus[action.item.submenu.id] = disposables.add(this.menuService.createMenu(action.item.submenu, this.contextKeyService));\n                disposables.add(menu.onDidChange(() => this.updateActions()));\n                disposables.add(this.updateSubmenus(action.actions, submenus));\n            }\n        }\n        return disposables;\n    }\n}\nlet CompositeMenuActions = class CompositeMenuActions extends Disposable {\n    constructor(menuId, contextMenuId, options, contextKeyService, menuService) {\n        super();\n        this.menuId = menuId;\n        this.contextMenuId = contextMenuId;\n        this.options = options;\n        this.contextKeyService = contextKeyService;\n        this.menuService = menuService;\n        this._onDidChange = this._register(( new Emitter()));\n        this.onDidChange = this._onDidChange.event;\n        this.menuActions = this._register(( new MenuActions(menuId, this.options, menuService, contextKeyService)));\n        this._register(this.menuActions.onDidChange(() => this._onDidChange.fire()));\n    }\n    getPrimaryActions() {\n        return this.menuActions.primaryActions;\n    }\n    getSecondaryActions() {\n        return this.menuActions.secondaryActions;\n    }\n    getContextMenuActions() {\n        const actions = [];\n        if (this.contextMenuId) {\n            const menu = this.menuService.createMenu(this.contextMenuId, this.contextKeyService);\n            createAndFillInActionBarActions(menu, this.options, { primary: [], secondary: actions });\n            menu.dispose();\n        }\n        return actions;\n    }\n};\nCompositeMenuActions = ( __decorate([\n    ( __param(3, IContextKeyService)),\n    ( __param(4, IMenuService))\n], CompositeMenuActions));\nexport { CompositeMenuActions };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { Delayer } from 'monaco-editor/esm/vs/base/common/async.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { IContextViewService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { toDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { asCssVariable, badgeBackground, badgeForeground, contrastBorder } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ContextScopedHistoryInputBox } from 'monaco-editor/esm/vs/platform/history/browser/contextScopedHistoryWidget.js';\nimport { RawContextKey, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { showHistoryKeybindingHint } from 'monaco-editor/esm/vs/platform/history/browser/historyWidgetKeybindingHint.js';\nimport { MenuRegistry, MenuId, SubmenuItemAction } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { MenuWorkbenchToolBar } from 'monaco-editor/esm/vs/platform/actions/browser/toolbar.js';\nimport { SubmenuEntryActionViewItem } from 'monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js';\nimport { Widget } from 'monaco-editor/esm/vs/base/browser/ui/widget.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { defaultInputBoxStyles } from 'monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js';\nconst viewFilterMenu = ( new MenuId('menu.view.filter'));\nconst viewFilterSubmenu = ( new MenuId('submenu.view.filter'));\nMenuRegistry.appendMenuItem(viewFilterMenu, {\n    submenu: viewFilterSubmenu,\n    title: ( localize('more filters', \"More Filters...\")),\n    group: 'navigation',\n    icon: Codicon.filter,\n});\nclass MoreFiltersActionViewItem extends SubmenuEntryActionViewItem {\n    constructor() {\n        super(...arguments);\n        this._checked = false;\n    }\n    set checked(checked) {\n        if (this._checked !== checked) {\n            this._checked = checked;\n            this.updateChecked();\n        }\n    }\n    updateChecked() {\n        if (this.element) {\n            this.element.classList.toggle('checked', this._checked);\n        }\n    }\n    render(container) {\n        super.render(container);\n        this.updateChecked();\n    }\n}\nlet FilterWidget = class FilterWidget extends Widget {\n    get onDidFocus() { return this.focusTracker.onDidFocus; }\n    get onDidBlur() { return this.focusTracker.onDidBlur; }\n    constructor(options, instantiationService, contextViewService, contextKeyService, keybindingService) {\n        super();\n        this.options = options;\n        this.instantiationService = instantiationService;\n        this.contextViewService = contextViewService;\n        this.keybindingService = keybindingService;\n        this._onDidChangeFilterText = this._register(( new Emitter()));\n        this.onDidChangeFilterText = this._onDidChangeFilterText.event;\n        this.isMoreFiltersChecked = false;\n        this.delayedFilterUpdate = ( new Delayer(400));\n        this._register(toDisposable(() => this.delayedFilterUpdate.cancel()));\n        if (options.focusContextKey) {\n            this.focusContextKey = ( new RawContextKey(options.focusContextKey, false)).bindTo(contextKeyService);\n        }\n        this.element = dom.$('.viewpane-filter');\n        [this.filterInputBox, this.focusTracker] = this.createInput(this.element);\n        const controlsContainer = dom.append(this.element, dom.$('.viewpane-filter-controls'));\n        this.filterBadge = this.createBadge(controlsContainer);\n        this.toolbar = this._register(this.createToolBar(controlsContainer));\n        this.adjustInputBox();\n    }\n    hasFocus() {\n        return this.filterInputBox.hasFocus();\n    }\n    focus() {\n        this.filterInputBox.focus();\n    }\n    blur() {\n        this.filterInputBox.blur();\n    }\n    updateBadge(message) {\n        this.filterBadge.classList.toggle('hidden', !message);\n        this.filterBadge.textContent = message || '';\n        this.adjustInputBox();\n    }\n    setFilterText(filterText) {\n        this.filterInputBox.value = filterText;\n    }\n    getFilterText() {\n        return this.filterInputBox.value;\n    }\n    getHistory() {\n        return this.filterInputBox.getHistory();\n    }\n    layout(width) {\n        this.element.parentElement?.classList.toggle('grow', width > 700);\n        this.element.classList.toggle('small', width < 400);\n        this.adjustInputBox();\n    }\n    checkMoreFilters(checked) {\n        this.isMoreFiltersChecked = checked;\n        if (this.moreFiltersActionViewItem) {\n            this.moreFiltersActionViewItem.checked = checked;\n        }\n    }\n    createInput(container) {\n        const inputBox = this._register(this.instantiationService.createInstance(ContextScopedHistoryInputBox, container, this.contextViewService, {\n            placeholder: this.options.placeholder,\n            ariaLabel: this.options.ariaLabel,\n            history: this.options.history || [],\n            showHistoryHint: () => showHistoryKeybindingHint(this.keybindingService),\n            inputBoxStyles: defaultInputBoxStyles\n        }));\n        if (this.options.text) {\n            inputBox.value = this.options.text;\n        }\n        this._register(inputBox.onDidChange(filter => this.delayedFilterUpdate.trigger(() => this.onDidInputChange(inputBox))));\n        this._register(dom.addStandardDisposableListener(inputBox.inputElement, dom.EventType.KEY_DOWN, (e) => this.onInputKeyDown(e, inputBox)));\n        this._register(dom.addStandardDisposableListener(container, dom.EventType.KEY_DOWN, this.handleKeyboardEvent));\n        this._register(dom.addStandardDisposableListener(container, dom.EventType.KEY_UP, this.handleKeyboardEvent));\n        this._register(dom.addStandardDisposableListener(inputBox.inputElement, dom.EventType.CLICK, (e) => {\n            e.stopPropagation();\n            e.preventDefault();\n        }));\n        const focusTracker = this._register(dom.trackFocus(inputBox.inputElement));\n        if (this.focusContextKey) {\n            this._register(focusTracker.onDidFocus(() => this.focusContextKey.set(true)));\n            this._register(focusTracker.onDidBlur(() => this.focusContextKey.set(false)));\n            this._register(toDisposable(() => this.focusContextKey.reset()));\n        }\n        return [inputBox, focusTracker];\n    }\n    createBadge(container) {\n        const filterBadge = dom.append(container, dom.$('.viewpane-filter-badge.hidden'));\n        filterBadge.style.backgroundColor = asCssVariable(badgeBackground);\n        filterBadge.style.color = asCssVariable(badgeForeground);\n        filterBadge.style.border = `1px solid ${asCssVariable(contrastBorder)}`;\n        return filterBadge;\n    }\n    createToolBar(container) {\n        return this.instantiationService.createInstance(MenuWorkbenchToolBar, container, viewFilterMenu, {\n            hiddenItemStrategy: -1 ,\n            actionViewItemProvider: (action) => {\n                if (action instanceof SubmenuItemAction && action.item.submenu.id === viewFilterSubmenu.id) {\n                    this.moreFiltersActionViewItem = this.instantiationService.createInstance(MoreFiltersActionViewItem, action, undefined);\n                    this.moreFiltersActionViewItem.checked = this.isMoreFiltersChecked;\n                    return this.moreFiltersActionViewItem;\n                }\n                return undefined;\n            }\n        });\n    }\n    onDidInputChange(inputbox) {\n        inputbox.addToHistory();\n        this._onDidChangeFilterText.fire(inputbox.value);\n    }\n    adjustInputBox() {\n        this.filterInputBox.inputElement.style.paddingRight = this.element.classList.contains('small') || this.filterBadge.classList.contains('hidden') ? '25px' : '150px';\n    }\n    handleKeyboardEvent(event) {\n        if (event.equals(10 )\n            || event.equals(15 )\n            || event.equals(17 )) {\n            event.stopPropagation();\n        }\n    }\n    onInputKeyDown(event, filterInputBox) {\n        let handled = false;\n        if (event.equals(2 ) && !this.toolbar.isEmpty()) {\n            this.toolbar.focus();\n            handled = true;\n        }\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n};\nFilterWidget = ( __decorate([\n    ( __param(1, IInstantiationService)),\n    ( __param(2, IContextViewService)),\n    ( __param(3, IContextKeyService)),\n    ( __param(4, IKeybindingService))\n], FilterWidget));\nexport { FilterWidget, viewFilterSubmenu };\n", "import { __decorate, __param } from '../../../../../external/tslib/tslib.es6.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { isEqual, basenameOrAuthority, dirname } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { IconLabel } from 'monaco-editor/esm/vs/base/browser/ui/iconLabel/iconLabel.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { ITextFileService } from '../services/textfile/common/textfiles.js';\nimport { IDecorationsService } from '../services/decorations/common/decorations.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { FILES_ASSOCIATIONS_CONFIG, FileKind } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { Event, Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { getIconClasses } from 'monaco-editor/esm/vs/editor/common/services/getIconClasses.js';\nimport { Disposable, dispose, MutableDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { normalizeDriveLetter } from 'monaco-editor/esm/vs/base/common/labels.js';\nfunction toResource(props) {\n    if (!props || !props.resource) {\n        return undefined;\n    }\n    if (URI.isUri(props.resource)) {\n        return props.resource;\n    }\n    return props.resource.primary;\n}\nconst DEFAULT_LABELS_CONTAINER = {\n    onDidChangeVisibility: Event.None\n};\nlet ResourceLabels = class ResourceLabels extends Disposable {\n    constructor(container, instantiationService, configurationService, modelService, workspaceService, languageService, decorationsService, themeService, labelService, textFileService) {\n        super();\n        this.instantiationService = instantiationService;\n        this.configurationService = configurationService;\n        this.modelService = modelService;\n        this.workspaceService = workspaceService;\n        this.languageService = languageService;\n        this.decorationsService = decorationsService;\n        this.themeService = themeService;\n        this.labelService = labelService;\n        this.textFileService = textFileService;\n        this._onDidChangeDecorations = this._register(( new Emitter()));\n        this.onDidChangeDecorations = this._onDidChangeDecorations.event;\n        this.widgets = [];\n        this.labels = [];\n        this.registerListeners(container);\n    }\n    registerListeners(container) {\n        this._register(container.onDidChangeVisibility(visible => {\n            this.widgets.forEach(widget => widget.notifyVisibilityChanged(visible));\n        }));\n        this._register(this.languageService.onDidChange(() => this.widgets.forEach(widget => widget.notifyExtensionsRegistered())));\n        this._register(this.modelService.onModelLanguageChanged(e => {\n            if (!e.model.uri) {\n                return;\n            }\n            this.widgets.forEach(widget => widget.notifyModelLanguageChanged(e.model));\n        }));\n        this._register(this.modelService.onModelAdded(model => {\n            if (!model.uri) {\n                return;\n            }\n            this.widgets.forEach(widget => widget.notifyModelAdded(model));\n        }));\n        this._register(this.workspaceService.onDidChangeWorkspaceFolders(() => {\n            this.widgets.forEach(widget => widget.notifyWorkspaceFoldersChange());\n        }));\n        this._register(this.decorationsService.onDidChangeDecorations(e => {\n            let notifyDidChangeDecorations = false;\n            this.widgets.forEach(widget => {\n                if (widget.notifyFileDecorationsChanges(e)) {\n                    notifyDidChangeDecorations = true;\n                }\n            });\n            if (notifyDidChangeDecorations) {\n                this._onDidChangeDecorations.fire();\n            }\n        }));\n        this._register(this.themeService.onDidColorThemeChange(() => this.widgets.forEach(widget => widget.notifyThemeChange())));\n        this._register(this.configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(FILES_ASSOCIATIONS_CONFIG)) {\n                this.widgets.forEach(widget => widget.notifyFileAssociationsChange());\n            }\n        }));\n        this._register(this.labelService.onDidChangeFormatters(e => {\n            this.widgets.forEach(widget => widget.notifyFormattersChange(e.scheme));\n        }));\n        this._register(this.textFileService.untitled.onDidChangeLabel(model => {\n            this.widgets.forEach(widget => widget.notifyUntitledLabelChange(model.resource));\n        }));\n    }\n    get(index) {\n        return this.labels[index];\n    }\n    create(container, options) {\n        const widget = this.instantiationService.createInstance(ResourceLabelWidget, container, options);\n        const label = {\n            element: widget.element,\n            onDidRender: widget.onDidRender,\n            setLabel: (label, description, options) => widget.setLabel(label, description, options),\n            setResource: (label, options) => widget.setResource(label, options),\n            setFile: (resource, options) => widget.setFile(resource, options),\n            clear: () => widget.clear(),\n            dispose: () => this.disposeWidget(widget)\n        };\n        this.labels.push(label);\n        this.widgets.push(widget);\n        return label;\n    }\n    disposeWidget(widget) {\n        const index = this.widgets.indexOf(widget);\n        if (index > -1) {\n            this.widgets.splice(index, 1);\n            this.labels.splice(index, 1);\n        }\n        dispose(widget);\n    }\n    clear() {\n        this.widgets = dispose(this.widgets);\n        this.labels = [];\n    }\n    dispose() {\n        super.dispose();\n        this.clear();\n    }\n};\nResourceLabels = ( __decorate([\n    ( __param(1, IInstantiationService)),\n    ( __param(2, IConfigurationService)),\n    ( __param(3, IModelService)),\n    ( __param(4, IWorkspaceContextService)),\n    ( __param(5, ILanguageService)),\n    ( __param(6, IDecorationsService)),\n    ( __param(7, IThemeService)),\n    ( __param(8, ILabelService)),\n    ( __param(9, ITextFileService))\n], ResourceLabels));\nlet ResourceLabel = class ResourceLabel extends ResourceLabels {\n    get element() { return this.label; }\n    constructor(container, options, instantiationService, configurationService, modelService, workspaceService, languageService, decorationsService, themeService, labelService, textFileService) {\n        super(DEFAULT_LABELS_CONTAINER, instantiationService, configurationService, modelService, workspaceService, languageService, decorationsService, themeService, labelService, textFileService);\n        this.label = this._register(this.create(container, options));\n    }\n};\nResourceLabel = ( __decorate([\n    ( __param(2, IInstantiationService)),\n    ( __param(3, IConfigurationService)),\n    ( __param(4, IModelService)),\n    ( __param(5, IWorkspaceContextService)),\n    ( __param(6, ILanguageService)),\n    ( __param(7, IDecorationsService)),\n    ( __param(8, IThemeService)),\n    ( __param(9, ILabelService)),\n    ( __param(10, ITextFileService))\n], ResourceLabel));\nvar Redraw;\n( (function(Redraw) {\n    Redraw[Redraw[\"Basic\"] = 1] = \"Basic\";\n    Redraw[Redraw[\"Full\"] = 2] = \"Full\";\n})(Redraw || (Redraw = {})));\nlet ResourceLabelWidget = class ResourceLabelWidget extends IconLabel {\n    constructor(container, options, languageService, modelService, decorationsService, labelService, textFileService, contextService) {\n        super(container, options);\n        this.languageService = languageService;\n        this.modelService = modelService;\n        this.decorationsService = decorationsService;\n        this.labelService = labelService;\n        this.textFileService = textFileService;\n        this.contextService = contextService;\n        this._onDidRender = this._register(( new Emitter()));\n        this.onDidRender = this._onDidRender.event;\n        this.label = undefined;\n        this.decoration = this._register(( new MutableDisposable()));\n        this.options = undefined;\n        this.computedIconClasses = undefined;\n        this.computedLanguageId = undefined;\n        this.computedPathLabel = undefined;\n        this.computedWorkspaceFolderLabel = undefined;\n        this.needsRedraw = undefined;\n        this.isHidden = false;\n    }\n    notifyVisibilityChanged(visible) {\n        if (visible === this.isHidden) {\n            this.isHidden = !visible;\n            if (visible && this.needsRedraw) {\n                this.render({\n                    updateIcon: this.needsRedraw === Redraw.Full,\n                    updateDecoration: this.needsRedraw === Redraw.Full\n                });\n                this.needsRedraw = undefined;\n            }\n        }\n    }\n    notifyModelLanguageChanged(model) {\n        this.handleModelEvent(model);\n    }\n    notifyModelAdded(model) {\n        this.handleModelEvent(model);\n    }\n    handleModelEvent(model) {\n        const resource = toResource(this.label);\n        if (!resource) {\n            return;\n        }\n        if (isEqual(model.uri, resource)) {\n            if (this.computedLanguageId !== model.getLanguageId()) {\n                this.computedLanguageId = model.getLanguageId();\n                this.render({ updateIcon: true, updateDecoration: false });\n            }\n        }\n    }\n    notifyFileDecorationsChanges(e) {\n        if (!this.options) {\n            return false;\n        }\n        const resource = toResource(this.label);\n        if (!resource) {\n            return false;\n        }\n        if (this.options.fileDecorations && e.affectsResource(resource)) {\n            return this.render({ updateIcon: false, updateDecoration: true });\n        }\n        return false;\n    }\n    notifyExtensionsRegistered() {\n        this.render({ updateIcon: true, updateDecoration: false });\n    }\n    notifyThemeChange() {\n        this.render({ updateIcon: false, updateDecoration: false });\n    }\n    notifyFileAssociationsChange() {\n        this.render({ updateIcon: true, updateDecoration: false });\n    }\n    notifyFormattersChange(scheme) {\n        if (toResource(this.label)?.scheme === scheme) {\n            this.render({ updateIcon: false, updateDecoration: false });\n        }\n    }\n    notifyUntitledLabelChange(resource) {\n        if (isEqual(resource, toResource(this.label))) {\n            this.render({ updateIcon: false, updateDecoration: false });\n        }\n    }\n    notifyWorkspaceFoldersChange() {\n        if (typeof this.computedWorkspaceFolderLabel === 'string') {\n            const resource = toResource(this.label);\n            if (URI.isUri(resource) && this.label?.name === this.computedWorkspaceFolderLabel) {\n                this.setFile(resource, this.options);\n            }\n        }\n    }\n    setFile(resource, options) {\n        const hideLabel = options?.hideLabel;\n        let name;\n        if (!hideLabel) {\n            if (options?.fileKind === FileKind.ROOT_FOLDER) {\n                const workspaceFolder = this.contextService.getWorkspaceFolder(resource);\n                if (workspaceFolder) {\n                    name = workspaceFolder.name;\n                    this.computedWorkspaceFolderLabel = name;\n                }\n            }\n            if (!name) {\n                name = normalizeDriveLetter(basenameOrAuthority(resource));\n            }\n        }\n        let description;\n        if (!options?.hidePath) {\n            description = this.labelService.getUriLabel(dirname(resource), { relative: true });\n        }\n        this.setResource({ resource, name, description }, options);\n    }\n    setResource(label, options = Object.create(null)) {\n        const resource = toResource(label);\n        const isSideBySideEditor = label?.resource && !URI.isUri(label.resource);\n        if (!options.forceLabel && !isSideBySideEditor && resource?.scheme === Schemas.untitled) {\n            const untitledModel = this.textFileService.untitled.get(resource);\n            if (untitledModel && !untitledModel.hasAssociatedFilePath) {\n                if (typeof label.name === 'string') {\n                    label.name = untitledModel.name;\n                }\n                if (typeof label.description === 'string') {\n                    const untitledDescription = untitledModel.resource.path;\n                    if (label.name !== untitledDescription) {\n                        label.description = untitledDescription;\n                    }\n                    else {\n                        label.description = undefined;\n                    }\n                }\n                const untitledTitle = untitledModel.resource.path;\n                if (untitledModel.name !== untitledTitle) {\n                    options.title = `${untitledModel.name} • ${untitledTitle}`;\n                }\n                else {\n                    options.title = untitledTitle;\n                }\n            }\n        }\n        const hasResourceChanged = this.hasResourceChanged(label);\n        const hasPathLabelChanged = hasResourceChanged || this.hasPathLabelChanged(label);\n        const hasFileKindChanged = this.hasFileKindChanged(options);\n        this.label = label;\n        this.options = options;\n        if (hasResourceChanged) {\n            this.computedLanguageId = undefined;\n        }\n        if (hasPathLabelChanged) {\n            this.computedPathLabel = undefined;\n        }\n        this.render({\n            updateIcon: hasResourceChanged || hasFileKindChanged,\n            updateDecoration: hasResourceChanged || hasFileKindChanged\n        });\n    }\n    hasFileKindChanged(newOptions) {\n        const newFileKind = newOptions?.fileKind;\n        const oldFileKind = this.options?.fileKind;\n        return newFileKind !== oldFileKind;\n    }\n    hasResourceChanged(newLabel) {\n        const newResource = toResource(newLabel);\n        const oldResource = toResource(this.label);\n        if (newResource && oldResource) {\n            return ( newResource.toString()) !== ( oldResource.toString());\n        }\n        if (!newResource && !oldResource) {\n            return false;\n        }\n        return true;\n    }\n    hasPathLabelChanged(newLabel) {\n        const newResource = toResource(newLabel);\n        return !!newResource && this.computedPathLabel !== this.labelService.getUriLabel(newResource);\n    }\n    clear() {\n        this.label = undefined;\n        this.options = undefined;\n        this.computedLanguageId = undefined;\n        this.computedIconClasses = undefined;\n        this.computedPathLabel = undefined;\n        this.setLabel('');\n    }\n    render(options) {\n        if (this.isHidden) {\n            if (this.needsRedraw !== Redraw.Full) {\n                this.needsRedraw = (options.updateIcon || options.updateDecoration) ? Redraw.Full : Redraw.Basic;\n            }\n            return false;\n        }\n        if (options.updateIcon) {\n            this.computedIconClasses = undefined;\n        }\n        if (!this.label) {\n            return false;\n        }\n        const iconLabelOptions = {\n            title: '',\n            italic: this.options?.italic,\n            strikethrough: this.options?.strikethrough,\n            matches: this.options?.matches,\n            descriptionMatches: this.options?.descriptionMatches,\n            extraClasses: [],\n            separator: this.options?.separator,\n            domId: this.options?.domId,\n            disabledCommand: this.options?.disabledCommand,\n            labelEscapeNewLines: this.options?.labelEscapeNewLines\n        };\n        const resource = toResource(this.label);\n        const label = this.label.name;\n        if (this.options?.title !== undefined) {\n            iconLabelOptions.title = this.options.title;\n        }\n        if (resource && resource.scheme !== Schemas.data\n            && ((!this.options?.title)\n                || ((typeof this.options.title !== 'string') && !this.options.title.markdownNotSupportedFallback))) {\n            if (!this.computedPathLabel) {\n                this.computedPathLabel = this.labelService.getUriLabel(resource);\n            }\n            if (!iconLabelOptions.title || (typeof iconLabelOptions.title === 'string')) {\n                iconLabelOptions.title = this.computedPathLabel;\n            }\n            else if (!iconLabelOptions.title.markdownNotSupportedFallback) {\n                iconLabelOptions.title.markdownNotSupportedFallback = this.computedPathLabel;\n            }\n        }\n        if (this.options && !this.options.hideIcon) {\n            if (!this.computedIconClasses) {\n                this.computedIconClasses = getIconClasses(this.modelService, this.languageService, resource, this.options.fileKind);\n            }\n            iconLabelOptions.extraClasses = this.computedIconClasses.slice(0);\n        }\n        if (this.options?.extraClasses) {\n            iconLabelOptions.extraClasses.push(...this.options.extraClasses);\n        }\n        if (this.options?.fileDecorations && resource) {\n            if (options.updateDecoration) {\n                this.decoration.value = this.decorationsService.getDecoration(resource, this.options.fileKind !== FileKind.FILE);\n            }\n            const decoration = this.decoration.value;\n            if (decoration) {\n                if (decoration.tooltip) {\n                    if (typeof iconLabelOptions.title === 'string') {\n                        iconLabelOptions.title = `${iconLabelOptions.title} • ${decoration.tooltip}`;\n                    }\n                    else if (typeof iconLabelOptions.title?.markdown === 'string') {\n                        const title = `${iconLabelOptions.title.markdown} • ${decoration.tooltip}`;\n                        iconLabelOptions.title = { markdown: title, markdownNotSupportedFallback: title };\n                    }\n                }\n                if (decoration.strikethrough) {\n                    iconLabelOptions.strikethrough = true;\n                }\n                if (this.options.fileDecorations.colors) {\n                    iconLabelOptions.extraClasses.push(decoration.labelClassName);\n                }\n                if (this.options.fileDecorations.badges) {\n                    iconLabelOptions.extraClasses.push(decoration.badgeClassName);\n                    iconLabelOptions.extraClasses.push(decoration.iconClassName);\n                }\n            }\n        }\n        this.setLabel(label || '', this.label.description, iconLabelOptions);\n        this._onDidRender.fire();\n        return true;\n    }\n    dispose() {\n        super.dispose();\n        this.label = undefined;\n        this.options = undefined;\n        this.computedLanguageId = undefined;\n        this.computedIconClasses = undefined;\n        this.computedPathLabel = undefined;\n        this.computedWorkspaceFolderLabel = undefined;\n    }\n};\nResourceLabelWidget = ( __decorate([\n    ( __param(2, ILanguageService)),\n    ( __param(3, IModelService)),\n    ( __param(4, IDecorationsService)),\n    ( __param(5, ILabelService)),\n    ( __param(6, ITextFileService)),\n    ( __param(7, IWorkspaceContextService))\n], ResourceLabelWidget));\nexport { DEFAULT_LABELS_CONTAINER, ResourceLabel, ResourceLabels };\n", "import { __decorate, __param } from '../../../../../../../../external/tslib/tslib.es6.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { isTemporaryWorkspace, IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ViewPane } from '../../../../browser/parts/views/viewPane.js';\nimport { ResourcesDropHandler } from '../../../../browser/dnd.js';\nimport { listDropBackground } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IViewDescriptorService } from '../../../../common/views.js';\nimport { IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { isWeb } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { DragAndDropObserver } from 'monaco-editor/esm/vs/base/browser/dom.js';\nvar EmptyView_1;\nlet EmptyView = class EmptyView extends ViewPane {\n    static { EmptyView_1 = this; }\n    static { this.ID = 'workbench.explorer.emptyView'; }\n    static { this.NAME = ( nls.localize('noWorkspace', \"No Folder Opened\")); }\n    constructor(options, themeService, viewDescriptorService, instantiationService, keybindingService, contextMenuService, contextService, configurationService, labelService, contextKeyService, openerService, telemetryService) {\n        super(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n        this.contextService = contextService;\n        this.labelService = labelService;\n        this._disposed = false;\n        this._register(this.contextService.onDidChangeWorkbenchState(() => this.refreshTitle()));\n        this._register(this.labelService.onDidChangeFormatters(() => this.refreshTitle()));\n    }\n    shouldShowWelcome() {\n        return true;\n    }\n    renderBody(container) {\n        super.renderBody(container);\n        this._register(( new DragAndDropObserver(container, {\n            onDrop: e => {\n                container.style.backgroundColor = '';\n                const dropHandler = this.instantiationService.createInstance(ResourcesDropHandler, { allowWorkspaceOpen: !isWeb || isTemporaryWorkspace(this.contextService.getWorkspace()) });\n                dropHandler.handleDrop(e, () => undefined, () => undefined);\n            },\n            onDragEnter: () => {\n                const color = this.themeService.getColorTheme().getColor(listDropBackground);\n                container.style.backgroundColor = color ? ( color.toString()) : '';\n            },\n            onDragEnd: () => {\n                container.style.backgroundColor = '';\n            },\n            onDragLeave: () => {\n                container.style.backgroundColor = '';\n            },\n            onDragOver: e => {\n                if (e.dataTransfer) {\n                    e.dataTransfer.dropEffect = 'copy';\n                }\n            }\n        })));\n        this.refreshTitle();\n    }\n    refreshTitle() {\n        if (this._disposed) {\n            return;\n        }\n        if (this.contextService.getWorkbenchState() === 3 ) {\n            this.updateTitle(EmptyView_1.NAME);\n        }\n        else {\n            this.updateTitle(this.title);\n        }\n    }\n    dispose() {\n        this._disposed = true;\n        super.dispose();\n    }\n};\nEmptyView = EmptyView_1 = ( __decorate([\n    ( __param(1, IThemeService)),\n    ( __param(2, IViewDescriptorService)),\n    ( __param(3, IInstantiationService)),\n    ( __param(4, IKeybindingService)),\n    ( __param(5, IContextMenuService)),\n    ( __param(6, IWorkspaceContextService)),\n    ( __param(7, IConfigurationService)),\n    ( __param(8, ILabelService)),\n    ( __param(9, IContextKeyService)),\n    ( __param(10, IOpenerService)),\n    ( __param(11, ITelemetryService))\n], EmptyView));\nexport { EmptyView };\n", "import { __decorate, __param } from '../../../../../../../../external/tslib/tslib.es6.js';\nimport './media/openeditors.css.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { RunOnceScheduler } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { ActionRunner } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IEditorGroupsService } from '../../../../services/editor/common/editorGroupsService.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { preventEditorClose, EditorResourceAccessor, SideBySideEditor, EditorCloseMethod } from '../../../../common/editor.js';\nimport { SaveAllInGroupAction, CloseGroupAction } from '../fileActions.js';\nimport { OpenEditor, OpenEditorsFocusedContext, ExplorerFocusedContext } from '../../common/files.js';\nimport { CloseEditorAction, UnpinEditorAction } from '../../../../browser/parts/editor/editorActions.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { asCssVariable, badgeBackground, badgeForeground, contrastBorder } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { WorkbenchList } from 'monaco-editor/esm/vs/platform/list/browser/listService.js';\nimport { ResourceLabels } from '../../../../browser/labels.js';\nimport { ActionBar } from 'monaco-editor/esm/vs/base/browser/ui/actionbar/actionbar.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { dispose } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { MenuId, MenuRegistry } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { OpenEditorsGroupContext, OpenEditorsDirtyEditorContext, OpenEditorsReadonlyEditorContext } from '../fileConstants.js';\nimport { ResourceContextKey } from '../../../../common/contextkeys.js';\nimport { containsDragType, CodeDataTransfers } from 'monaco-editor/esm/vs/platform/dnd/browser/dnd.js';\nimport { ResourcesDropHandler, fillEditorsDragData } from '../../../../browser/dnd.js';\nimport { ViewPane } from '../../../../browser/parts/views/viewPane.js';\nimport { DataTransfers } from 'monaco-editor/esm/vs/base/browser/dnd.js';\nimport { memoize } from 'monaco-editor/esm/vs/base/common/decorators.js';\nimport { NativeDragAndDropData, ElementsDragAndDropData } from 'monaco-editor/esm/vs/base/browser/ui/list/listView.js';\nimport { IWorkingCopyService } from '../../../../services/workingCopy/common/workingCopyService.js';\nimport { IFilesConfigurationService } from '../../../../services/filesConfiguration/common/filesConfigurationService.js';\nimport { IViewDescriptorService } from '../../../../common/views.js';\nimport { IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { compareFileNamesDefault } from 'monaco-editor/esm/vs/base/common/comparers.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { extUriIgnorePathCase } from 'monaco-editor/esm/vs/base/common/resources.js';\nvar OpenEditorsView_1;\nconst $ = dom.$;\nlet OpenEditorsView = class OpenEditorsView extends ViewPane {\n    static { OpenEditorsView_1 = this; }\n    static { this.DEFAULT_VISIBLE_OPEN_EDITORS = 9; }\n    static { this.DEFAULT_MIN_VISIBLE_OPEN_EDITORS = 0; }\n    static { this.ID = 'workbench.explorer.openEditorsView'; }\n    static { this.NAME = ( nls.localize({ key: 'openEditors', comment: ['Open is an adjective'] }, \"Open Editors\")); }\n    constructor(options, instantiationService, viewDescriptorService, contextMenuService, editorGroupService, configurationService, keybindingService, contextKeyService, themeService, telemetryService, workingCopyService, filesConfigurationService, openerService) {\n        super(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n        this.editorGroupService = editorGroupService;\n        this.workingCopyService = workingCopyService;\n        this.filesConfigurationService = filesConfigurationService;\n        this.needsRefresh = false;\n        this.elements = [];\n        this.structuralRefreshDelay = 0;\n        this.sortOrder = configurationService.getValue('explorer.openEditors.sortOrder');\n        this.registerUpdateEvents();\n        this._register(this.configurationService.onDidChangeConfiguration(e => this.onConfigurationChange(e)));\n        this._register(this.workingCopyService.onDidChangeDirty(workingCopy => this.updateDirtyIndicator(workingCopy)));\n    }\n    registerUpdateEvents() {\n        const updateWholeList = () => {\n            if (!this.isBodyVisible() || !this.list) {\n                this.needsRefresh = true;\n                return;\n            }\n            this.listRefreshScheduler?.schedule(this.structuralRefreshDelay);\n        };\n        const groupDisposables = ( new Map());\n        const addGroupListener = (group) => {\n            const groupModelChangeListener = group.onDidModelChange(e => {\n                if (this.listRefreshScheduler?.isScheduled()) {\n                    return;\n                }\n                if (!this.isBodyVisible() || !this.list) {\n                    this.needsRefresh = true;\n                    return;\n                }\n                const index = this.getIndex(group, e.editor);\n                switch (e.kind) {\n                    case 6 :\n                    case 0 :\n                        this.focusActiveEditor();\n                        break;\n                    case 1 :\n                        if (index >= 0) {\n                            this.list.splice(index, 1, [group]);\n                        }\n                        break;\n                    case 11 :\n                    case 10 :\n                    case 8 :\n                    case 9 :\n                    case 7 :\n                        this.list.splice(index, 1, [( new OpenEditor(e.editor, group))]);\n                        this.focusActiveEditor();\n                        break;\n                    case 3 :\n                    case 5 :\n                    case 4 :\n                        updateWholeList();\n                        break;\n                }\n            });\n            groupDisposables.set(group.id, groupModelChangeListener);\n            this._register(groupDisposables.get(group.id));\n        };\n        this.editorGroupService.groups.forEach(g => addGroupListener(g));\n        this._register(this.editorGroupService.onDidAddGroup(group => {\n            addGroupListener(group);\n            updateWholeList();\n        }));\n        this._register(this.editorGroupService.onDidMoveGroup(() => updateWholeList()));\n        this._register(this.editorGroupService.onDidRemoveGroup(group => {\n            dispose(groupDisposables.get(group.id));\n            updateWholeList();\n        }));\n    }\n    renderHeaderTitle(container) {\n        super.renderHeaderTitle(container, this.title);\n        const count = dom.append(container, $('.open-editors-dirty-count-container'));\n        this.dirtyCountElement = dom.append(count, $('.dirty-count.monaco-count-badge.long'));\n        this.dirtyCountElement.style.backgroundColor = asCssVariable(badgeBackground);\n        this.dirtyCountElement.style.color = asCssVariable(badgeForeground);\n        this.dirtyCountElement.style.border = `1px solid ${asCssVariable(contrastBorder)}`;\n        this.updateDirtyIndicator();\n    }\n    renderBody(container) {\n        super.renderBody(container);\n        container.classList.add('open-editors');\n        container.classList.add('show-file-icons');\n        const delegate = ( new OpenEditorsDelegate());\n        if (this.list) {\n            this.list.dispose();\n        }\n        if (this.listLabels) {\n            this.listLabels.clear();\n        }\n        this.listLabels = this.instantiationService.createInstance(ResourceLabels, { onDidChangeVisibility: this.onDidChangeBodyVisibility });\n        this.list = this.instantiationService.createInstance(WorkbenchList, 'OpenEditors', container, delegate, [\n            ( new EditorGroupRenderer(this.keybindingService, this.instantiationService)),\n            ( new OpenEditorRenderer(\n                this.listLabels,\n                this.instantiationService,\n                this.keybindingService,\n                this.configurationService\n            ))\n        ], {\n            identityProvider: { getId: (element) => element instanceof OpenEditor ? element.getId() : ( element.id.toString()) },\n            dnd: ( new OpenEditorsDragAndDrop(this.instantiationService, this.editorGroupService)),\n            overrideStyles: {\n                listBackground: this.getBackgroundColor()\n            },\n            accessibilityProvider: ( new OpenEditorsAccessibilityProvider())\n        });\n        this._register(this.list);\n        this._register(this.listLabels);\n        let labelChangeListeners = [];\n        this.listRefreshScheduler = this._register(( new RunOnceScheduler(() => {\n            if (!this.list) {\n                return;\n            }\n            labelChangeListeners = dispose(labelChangeListeners);\n            const previousLength = this.list.length;\n            const elements = this.getElements();\n            this.list.splice(0, this.list.length, elements);\n            this.focusActiveEditor();\n            if (previousLength !== this.list.length) {\n                this.updateSize();\n            }\n            this.needsRefresh = false;\n            if (this.sortOrder === 'alphabetical' || this.sortOrder === 'fullPath') {\n                elements.forEach(e => {\n                    if (e instanceof OpenEditor) {\n                        labelChangeListeners.push(e.editor.onDidChangeLabel(() => this.listRefreshScheduler?.schedule()));\n                    }\n                });\n            }\n        }, this.structuralRefreshDelay)));\n        this.updateSize();\n        OpenEditorsFocusedContext.bindTo(this.list.contextKeyService);\n        ExplorerFocusedContext.bindTo(this.list.contextKeyService);\n        this.resourceContext = this.instantiationService.createInstance(ResourceContextKey);\n        this._register(this.resourceContext);\n        this.groupFocusedContext = OpenEditorsGroupContext.bindTo(this.contextKeyService);\n        this.dirtyEditorFocusedContext = OpenEditorsDirtyEditorContext.bindTo(this.contextKeyService);\n        this.readonlyEditorFocusedContext = OpenEditorsReadonlyEditorContext.bindTo(this.contextKeyService);\n        this._register(this.list.onContextMenu(e => this.onListContextMenu(e)));\n        this.list.onDidChangeFocus(e => {\n            this.resourceContext.reset();\n            this.groupFocusedContext.reset();\n            this.dirtyEditorFocusedContext.reset();\n            this.readonlyEditorFocusedContext.reset();\n            const element = e.elements.length ? e.elements[0] : undefined;\n            if (element instanceof OpenEditor) {\n                const resource = element.getResource();\n                this.dirtyEditorFocusedContext.set(element.editor.isDirty() && !element.editor.isSaving());\n                this.readonlyEditorFocusedContext.set(!!element.editor.isReadonly());\n                this.resourceContext.set(resource ?? null);\n            }\n            else if (!!element) {\n                this.groupFocusedContext.set(true);\n            }\n        });\n        this._register(this.list.onMouseMiddleClick(e => {\n            if (e && e.element instanceof OpenEditor) {\n                if (preventEditorClose(e.element.group, e.element.editor, EditorCloseMethod.MOUSE, this.editorGroupService.partOptions)) {\n                    return;\n                }\n                e.element.group.closeEditor(e.element.editor, { preserveFocus: true });\n            }\n        }));\n        this._register(this.list.onDidOpen(e => {\n            if (!e.element) {\n                return;\n            }\n            else if (e.element instanceof OpenEditor) {\n                if (e.browserEvent instanceof MouseEvent && e.browserEvent.button === 1) {\n                    return;\n                }\n                this.openEditor(e.element, { preserveFocus: e.editorOptions.preserveFocus, pinned: e.editorOptions.pinned, sideBySide: e.sideBySide });\n            }\n            else {\n                this.editorGroupService.activateGroup(e.element);\n            }\n        }));\n        this.listRefreshScheduler.schedule(0);\n        this._register(this.onDidChangeBodyVisibility(visible => {\n            if (visible && this.needsRefresh) {\n                this.listRefreshScheduler?.schedule(0);\n            }\n        }));\n        const containerModel = this.viewDescriptorService.getViewContainerModel(this.viewDescriptorService.getViewContainerByViewId(this.id));\n        this._register(containerModel.onDidChangeAllViewDescriptors(() => {\n            this.updateSize();\n        }));\n    }\n    focus() {\n        super.focus();\n        this.list.domFocus();\n    }\n    getList() {\n        return this.list;\n    }\n    layoutBody(height, width) {\n        super.layoutBody(height, width);\n        this.list?.layout(height, width);\n    }\n    get showGroups() {\n        return this.editorGroupService.groups.length > 1;\n    }\n    getElements() {\n        this.elements = [];\n        this.editorGroupService.getGroups(2 ).forEach(g => {\n            if (this.showGroups) {\n                this.elements.push(g);\n            }\n            let editors = ( g.editors.map(ei => ( new OpenEditor(ei, g))));\n            if (this.sortOrder === 'alphabetical') {\n                editors = editors.sort((first, second) => compareFileNamesDefault(first.editor.getName(), second.editor.getName()));\n            }\n            else if (this.sortOrder === 'fullPath') {\n                editors = editors.sort((first, second) => {\n                    const firstResource = first.editor.resource;\n                    const secondResource = second.editor.resource;\n                    if (firstResource === undefined && secondResource === undefined) {\n                        return compareFileNamesDefault(first.editor.getName(), second.editor.getName());\n                    }\n                    else if (firstResource === undefined) {\n                        return -1;\n                    }\n                    else if (secondResource === undefined) {\n                        return 1;\n                    }\n                    else {\n                        const firstScheme = firstResource.scheme;\n                        const secondScheme = secondResource.scheme;\n                        if (firstScheme !== Schemas.file && secondScheme !== Schemas.file) {\n                            return extUriIgnorePathCase.compare(firstResource, secondResource);\n                        }\n                        else if (firstScheme !== Schemas.file) {\n                            return -1;\n                        }\n                        else if (secondScheme !== Schemas.file) {\n                            return 1;\n                        }\n                        else {\n                            return extUriIgnorePathCase.compare(firstResource, secondResource);\n                        }\n                    }\n                });\n            }\n            this.elements.push(...editors);\n        });\n        return this.elements;\n    }\n    getIndex(group, editor) {\n        if (!editor) {\n            return this.elements.findIndex(e => !(e instanceof OpenEditor) && e.id === group.id);\n        }\n        return this.elements.findIndex(e => e instanceof OpenEditor && e.editor === editor && e.group.id === group.id);\n    }\n    openEditor(element, options) {\n        if (element) {\n            this.telemetryService.publicLog2('workbenchActionExecuted', { id: 'workbench.files.openFile', from: 'openEditors' });\n            const preserveActivateGroup = options.sideBySide && options.preserveFocus;\n            if (!preserveActivateGroup) {\n                this.editorGroupService.activateGroup(element.group);\n            }\n            const targetGroup = options.sideBySide ? this.editorGroupService.sideGroup : this.editorGroupService.activeGroup;\n            targetGroup.openEditor(element.editor, options);\n        }\n    }\n    onListContextMenu(e) {\n        if (!e.element) {\n            return;\n        }\n        const element = e.element;\n        this.contextMenuService.showContextMenu({\n            menuId: MenuId.OpenEditorsContext,\n            menuActionOptions: { shouldForwardArgs: true, arg: element instanceof OpenEditor ? EditorResourceAccessor.getOriginalUri(element.editor) : {} },\n            contextKeyService: this.list.contextKeyService,\n            getAnchor: () => e.anchor,\n            getActionsContext: () => element instanceof OpenEditor ? { groupId: element.groupId, editorIndex: element.group.getIndexOfEditor(element.editor) } : { groupId: element.id }\n        });\n    }\n    focusActiveEditor() {\n        if (this.list.length && this.editorGroupService.activeGroup) {\n            const index = this.getIndex(this.editorGroupService.activeGroup, this.editorGroupService.activeGroup.activeEditor);\n            if (index >= 0) {\n                try {\n                    this.list.setFocus([index]);\n                    this.list.setSelection([index]);\n                    this.list.reveal(index);\n                }\n                catch (e) {\n                }\n                return;\n            }\n        }\n        this.list.setFocus([]);\n        this.list.setSelection([]);\n    }\n    onConfigurationChange(event) {\n        if (event.affectsConfiguration('explorer.openEditors')) {\n            this.updateSize();\n        }\n        if (event.affectsConfiguration('explorer.decorations') || event.affectsConfiguration('explorer.openEditors.sortOrder')) {\n            this.sortOrder = this.configurationService.getValue('explorer.openEditors.sortOrder');\n            this.listRefreshScheduler?.schedule();\n        }\n    }\n    updateSize() {\n        this.minimumBodySize = this.orientation === 0  ? this.getMinExpandedBodySize() : 170;\n        this.maximumBodySize = this.orientation === 0  ? this.getMaxExpandedBodySize() : Number.POSITIVE_INFINITY;\n    }\n    updateDirtyIndicator(workingCopy) {\n        if (workingCopy) {\n            const gotDirty = workingCopy.isDirty();\n            if (gotDirty && !((workingCopy.capabilities & 2) ) && this.filesConfigurationService.getAutoSaveMode() === 1 ) {\n                return;\n            }\n        }\n        const dirty = this.workingCopyService.dirtyCount;\n        if (dirty === 0) {\n            this.dirtyCountElement.classList.add('hidden');\n        }\n        else {\n            this.dirtyCountElement.textContent = ( nls.localize('dirtyCounter', \"{0} unsaved\", dirty));\n            this.dirtyCountElement.classList.remove('hidden');\n        }\n    }\n    get elementCount() {\n        return ( this.editorGroupService.groups.map(g => g.count))\n            .reduce((first, second) => first + second, this.showGroups ? this.editorGroupService.groups.length : 0);\n    }\n    getMaxExpandedBodySize() {\n        let minVisibleOpenEditors = this.configurationService.getValue('explorer.openEditors.minVisible');\n        if (typeof minVisibleOpenEditors !== 'number') {\n            minVisibleOpenEditors = OpenEditorsView_1.DEFAULT_MIN_VISIBLE_OPEN_EDITORS;\n        }\n        const containerModel = this.viewDescriptorService.getViewContainerModel(this.viewDescriptorService.getViewContainerByViewId(this.id));\n        if (containerModel.visibleViewDescriptors.length <= 1) {\n            return Number.POSITIVE_INFINITY;\n        }\n        return (Math.max(this.elementCount, minVisibleOpenEditors)) * OpenEditorsDelegate.ITEM_HEIGHT;\n    }\n    getMinExpandedBodySize() {\n        let visibleOpenEditors = this.configurationService.getValue('explorer.openEditors.visible');\n        if (typeof visibleOpenEditors !== 'number') {\n            visibleOpenEditors = OpenEditorsView_1.DEFAULT_VISIBLE_OPEN_EDITORS;\n        }\n        return this.computeMinExpandedBodySize(visibleOpenEditors);\n    }\n    computeMinExpandedBodySize(visibleOpenEditors = OpenEditorsView_1.DEFAULT_VISIBLE_OPEN_EDITORS) {\n        const itemsToShow = Math.min(Math.max(visibleOpenEditors, 1), this.elementCount);\n        return itemsToShow * OpenEditorsDelegate.ITEM_HEIGHT;\n    }\n    setStructuralRefreshDelay(delay) {\n        this.structuralRefreshDelay = delay;\n    }\n    getOptimalWidth() {\n        const parentNode = this.list.getHTMLElement();\n        const childNodes = [].slice.call(parentNode.querySelectorAll('.open-editor > a'));\n        return dom.getLargestChildWidth(parentNode, childNodes);\n    }\n};\nOpenEditorsView = OpenEditorsView_1 = ( __decorate([\n    ( __param(1, IInstantiationService)),\n    ( __param(2, IViewDescriptorService)),\n    ( __param(3, IContextMenuService)),\n    ( __param(4, IEditorGroupsService)),\n    ( __param(5, IConfigurationService)),\n    ( __param(6, IKeybindingService)),\n    ( __param(7, IContextKeyService)),\n    ( __param(8, IThemeService)),\n    ( __param(9, ITelemetryService)),\n    ( __param(10, IWorkingCopyService)),\n    ( __param(11, IFilesConfigurationService)),\n    ( __param(12, IOpenerService))\n], OpenEditorsView));\nclass OpenEditorActionRunner extends ActionRunner {\n    async run(action) {\n        if (!this.editor) {\n            return;\n        }\n        return super.run(action, { groupId: this.editor.groupId, editorIndex: this.editor.group.getIndexOfEditor(this.editor.editor) });\n    }\n}\nclass OpenEditorsDelegate {\n    static { this.ITEM_HEIGHT = 22; }\n    getHeight(_element) {\n        return OpenEditorsDelegate.ITEM_HEIGHT;\n    }\n    getTemplateId(element) {\n        if (element instanceof OpenEditor) {\n            return OpenEditorRenderer.ID;\n        }\n        return EditorGroupRenderer.ID;\n    }\n}\nclass EditorGroupRenderer {\n    static { this.ID = 'editorgroup'; }\n    constructor(keybindingService, instantiationService) {\n        this.keybindingService = keybindingService;\n        this.instantiationService = instantiationService;\n    }\n    get templateId() {\n        return EditorGroupRenderer.ID;\n    }\n    renderTemplate(container) {\n        const editorGroupTemplate = Object.create(null);\n        editorGroupTemplate.root = dom.append(container, $('.editor-group'));\n        editorGroupTemplate.name = dom.append(editorGroupTemplate.root, $('span.name'));\n        editorGroupTemplate.actionBar = ( new ActionBar(container));\n        const saveAllInGroupAction = this.instantiationService.createInstance(SaveAllInGroupAction, SaveAllInGroupAction.ID, SaveAllInGroupAction.LABEL);\n        const saveAllInGroupKey = this.keybindingService.lookupKeybinding(saveAllInGroupAction.id);\n        editorGroupTemplate.actionBar.push(saveAllInGroupAction, { icon: true, label: false, keybinding: saveAllInGroupKey ? saveAllInGroupKey.getLabel() : undefined });\n        const closeGroupAction = this.instantiationService.createInstance(CloseGroupAction, CloseGroupAction.ID, CloseGroupAction.LABEL);\n        const closeGroupActionKey = this.keybindingService.lookupKeybinding(closeGroupAction.id);\n        editorGroupTemplate.actionBar.push(closeGroupAction, { icon: true, label: false, keybinding: closeGroupActionKey ? closeGroupActionKey.getLabel() : undefined });\n        return editorGroupTemplate;\n    }\n    renderElement(editorGroup, _index, templateData) {\n        templateData.editorGroup = editorGroup;\n        templateData.name.textContent = editorGroup.label;\n        templateData.actionBar.context = { groupId: editorGroup.id };\n    }\n    disposeTemplate(templateData) {\n        templateData.actionBar.dispose();\n    }\n}\nclass OpenEditorRenderer {\n    static { this.ID = 'openeditor'; }\n    constructor(labels, instantiationService, keybindingService, configurationService) {\n        this.labels = labels;\n        this.instantiationService = instantiationService;\n        this.keybindingService = keybindingService;\n        this.configurationService = configurationService;\n        this.closeEditorAction = this.instantiationService.createInstance(CloseEditorAction, CloseEditorAction.ID, CloseEditorAction.LABEL);\n        this.unpinEditorAction = this.instantiationService.createInstance(UnpinEditorAction, UnpinEditorAction.ID, UnpinEditorAction.LABEL);\n    }\n    get templateId() {\n        return OpenEditorRenderer.ID;\n    }\n    renderTemplate(container) {\n        const editorTemplate = Object.create(null);\n        editorTemplate.container = container;\n        editorTemplate.actionRunner = ( new OpenEditorActionRunner());\n        editorTemplate.actionBar = ( new ActionBar(container, { actionRunner: editorTemplate.actionRunner }));\n        editorTemplate.root = this.labels.create(container);\n        return editorTemplate;\n    }\n    renderElement(openedEditor, _index, templateData) {\n        const editor = openedEditor.editor;\n        templateData.actionRunner.editor = openedEditor;\n        templateData.container.classList.toggle('dirty', editor.isDirty() && !editor.isSaving());\n        templateData.container.classList.toggle('sticky', openedEditor.isSticky());\n        templateData.root.setResource({\n            resource: EditorResourceAccessor.getOriginalUri(editor, { supportSideBySide: SideBySideEditor.BOTH }),\n            name: editor.getName(),\n            description: editor.getDescription(1 )\n        }, {\n            italic: openedEditor.isPreview(),\n            extraClasses: ['open-editor'].concat(openedEditor.editor.getLabelExtraClasses()),\n            fileDecorations: this.configurationService.getValue().explorer.decorations,\n            title: editor.getTitle(2 )\n        });\n        const editorAction = openedEditor.isSticky() ? this.unpinEditorAction : this.closeEditorAction;\n        if (!templateData.actionBar.hasAction(editorAction)) {\n            if (!templateData.actionBar.isEmpty()) {\n                templateData.actionBar.clear();\n            }\n            templateData.actionBar.push(editorAction, { icon: true, label: false, keybinding: this.keybindingService.lookupKeybinding(editorAction.id)?.getLabel() });\n        }\n    }\n    disposeTemplate(templateData) {\n        templateData.actionBar.dispose();\n        templateData.root.dispose();\n        templateData.actionRunner.dispose();\n    }\n}\nclass OpenEditorsDragAndDrop {\n    constructor(instantiationService, editorGroupService) {\n        this.instantiationService = instantiationService;\n        this.editorGroupService = editorGroupService;\n    }\n    get dropHandler() {\n        return this.instantiationService.createInstance(ResourcesDropHandler, { allowWorkspaceOpen: false });\n    }\n    getDragURI(element) {\n        if (element instanceof OpenEditor) {\n            const resource = element.getResource();\n            if (resource) {\n                return ( resource.toString());\n            }\n        }\n        return null;\n    }\n    getDragLabel(elements) {\n        if (elements.length > 1) {\n            return String(elements.length);\n        }\n        const element = elements[0];\n        return element instanceof OpenEditor ? element.editor.getName() : element.label;\n    }\n    onDragStart(data, originalEvent) {\n        const items = data.elements;\n        const editors = [];\n        if (items) {\n            for (const item of items) {\n                if (item instanceof OpenEditor) {\n                    editors.push(item);\n                }\n            }\n        }\n        if (editors.length) {\n            this.instantiationService.invokeFunction(fillEditorsDragData, editors, originalEvent);\n        }\n    }\n    onDragOver(data, _targetElement, _targetIndex, originalEvent) {\n        if (data instanceof NativeDragAndDropData) {\n            return containsDragType(originalEvent, DataTransfers.FILES, CodeDataTransfers.FILES);\n        }\n        return true;\n    }\n    drop(data, targetElement, _targetIndex, originalEvent) {\n        const group = targetElement instanceof OpenEditor ? targetElement.group : targetElement || this.editorGroupService.groups[this.editorGroupService.count - 1];\n        const index = targetElement instanceof OpenEditor ? targetElement.group.getIndexOfEditor(targetElement.editor) : 0;\n        if (data instanceof ElementsDragAndDropData) {\n            const elementsData = data.elements;\n            elementsData.forEach((oe, offset) => {\n                oe.group.moveEditor(oe.editor, group, { index: index + offset, preserveFocus: true });\n            });\n            this.editorGroupService.activateGroup(group);\n        }\n        else {\n            this.dropHandler.handleDrop(originalEvent, () => group, () => group.focus(), index);\n        }\n    }\n}\nOpenEditorsDragAndDrop.__decorator = ( __decorate([\n    memoize\n], OpenEditorsDragAndDrop.prototype, \"dropHandler\", null));\nclass OpenEditorsAccessibilityProvider {\n    getWidgetAriaLabel() {\n        return ( nls.localize('openEditors', \"Open Editors\"));\n    }\n    getAriaLabel(element) {\n        if (element instanceof OpenEditor) {\n            return `${element.editor.getName()}, ${element.editor.getDescription()}`;\n        }\n        return element.ariaLabel;\n    }\n}\nconst toggleEditorGroupLayoutId = 'workbench.action.toggleEditorGroupLayout';\nMenuRegistry.appendMenuItem(MenuId.MenubarLayoutMenu, {\n    group: '4_flip',\n    command: {\n        id: toggleEditorGroupLayoutId,\n        title: {\n            original: 'Flip Layout',\n            value: ( nls.localize('miToggleEditorLayoutWithoutMnemonic', \"Flip Layout\")),\n            mnemonicTitle: ( nls.localize(\n                { key: 'miToggleEditorLayout', comment: ['&& denotes a mnemonic'] },\n                \"Flip &&Layout\"\n            ))\n        }\n    },\n    order: 1\n});\nexport { OpenEditorsView };\n", "import n from '../../../../../../../../../external/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".pane-header .open-editors-dirty-count-container{align-items:center;display:flex;min-width:fit-content}.pane-header .open-editors-dirty-count-container>.dirty-count.monaco-count-badge.hidden,.pane.horizontal:not(.expanded) .pane-header .open-editors-dirty-count-container>.dirty-count.monaco-count-badge{display:none}.pane-header .open-editors-dirty-count-container>.dirty-count.monaco-count-badge{margin-left:6px;min-height:auto;padding:2px 4px}.open-editors .monaco-list .monaco-list-row.dirty>.monaco-action-bar,.open-editors .monaco-list .monaco-list-row.focused>.monaco-action-bar,.open-editors .monaco-list .monaco-list-row.sticky>.monaco-action-bar,.open-editors .monaco-list .monaco-list-row:hover>.monaco-action-bar{visibility:visible}.open-editors .monaco-list .monaco-list-row>.monaco-action-bar .action-label{display:block;padding:2px}.open-editors .monaco-list .monaco-list-row>.monaco-action-bar .codicon{color:inherit}.open-editors .monaco-list .monaco-list-row.dirty:not(:hover)>.monaco-action-bar .codicon-pinned:before{content:\\\"\\\\ebb2\\\"}.open-editors .monaco-list .monaco-list-row.dirty:not(:hover)>.monaco-action-bar .codicon-close:before{content:\\\"\\\\ea71\\\"}.open-editors .monaco-list .monaco-list-row>.monaco-action-bar .action-close-all-files,.open-editors .monaco-list .monaco-list-row>.monaco-action-bar .save-all{height:22px;width:23px}.open-editors .monaco-list .monaco-list-row>.editor-group,.open-editors .monaco-list .monaco-list-row>.open-editor{flex:1}.open-editors .monaco-list .monaco-list-row{display:flex;padding-left:22px}.open-editors .monaco-list .monaco-list-row>.monaco-action-bar{align-items:center;display:flex;visibility:hidden}.open-editors .monaco-list .monaco-list-row .editor-group{cursor:default;font-size:11px;font-weight:700;text-transform:uppercase}.composite:lang(ja) .open-editors .monaco-list .monaco-list-row .editor-group,.composite:lang(ko) .open-editors .monaco-list .monaco-list-row .editor-group,.composite:lang(zh-Hans) .open-editors .monaco-list .monaco-list-row .editor-group,.composite:lang(zh-Hant) .open-editors .monaco-list .monaco-list-row .editor-group{font-weight:400}.open-editors .editor-group,.open-editors .open-editor{height:22px;line-height:22px}.open-editors .editor-group,.open-editors .open-editor>a{overflow:hidden;text-overflow:ellipsis}.monaco-workbench.hc-black .open-editors .editor-group,.monaco-workbench.hc-black .open-editors .open-editor,.monaco-workbench.hc-light .open-editors .editor-group,.monaco-workbench.hc-light .open-editors .open-editor{line-height:20px}\";\nn(css,{});\nexport { css, css as default };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { Action } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport { firstOrDefault } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { EditorResourceAccessor, DEFAULT_EDITOR_ASSOCIATION } from '../../../common/editor.js';\nimport { SideBySideEditorInput } from '../../../common/editor/sideBySideEditorInput.js';\nimport { IWorkbenchLayoutService } from '../../../services/layout/browser/layoutService.js';\nimport { IHistoryService } from '../../../services/history/common/history.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { SPLIT_EDITOR_UP, SPLIT_EDITOR_DOWN, CLOSE_EDITOR_COMMAND_ID, UNPIN_EDITOR_COMMAND_ID, COPY_ACTIVE_EDITOR_COMMAND_ID, LAYOUT_EDITOR_GROUPS_COMMAND_ID, splitEditor, SPLIT_EDITOR_LEFT, SPLIT_EDITOR_RIGHT, MOVE_ACTIVE_EDITOR_COMMAND_ID } from './editorCommands.js';\nimport { IEditorGroupsService, preferredSideBySideGroupDirection } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IWorkspacesService } from '../../../../platform/workspaces/common/workspaces.js';\nimport '../../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { IQuickInputService, ItemActivation } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { ActiveGroupEditorsByMostRecentlyUsedQuickAccess, AllEditorsByAppearanceQuickAccess, AllEditorsByMostRecentlyUsedQuickAccess } from './editorQuickAccess.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { IFilesConfigurationService } from '../../../services/filesConfiguration/common/filesConfigurationService.js';\nimport { IEditorResolverService } from '../../../services/editor/common/editorResolverService.js';\nimport { isNative, isWindows, isLinux } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { Action2, MenuId } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { KeyChord } from 'monaco-editor/esm/vs/base/common/keyCodes.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { Categories } from 'monaco-editor/esm/vs/platform/action/common/actionCommonCategories.js';\nimport { ActiveEditorGroupEmptyContext, ActiveEditorAvailableEditorIdsContext } from '../../../common/contextkeys.js';\nimport { IDialogService, IFileDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nclass ExecuteCommandAction extends Action2 {\n    constructor(desc, commandId, commandArgs) {\n        super(desc);\n        this.commandId = commandId;\n        this.commandArgs = commandArgs;\n    }\n    run(accessor) {\n        const commandService = accessor.get(ICommandService);\n        return commandService.executeCommand(this.commandId, this.commandArgs);\n    }\n}\nclass AbstractSplitEditorAction extends Action2 {\n    getDirection(configurationService) {\n        return preferredSideBySideGroupDirection(configurationService);\n    }\n    async run(accessor, context) {\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        const configurationService = accessor.get(IConfigurationService);\n        splitEditor(editorGroupService, this.getDirection(configurationService), context);\n    }\n}\nclass SplitEditorAction extends AbstractSplitEditorAction {\n    static { this.ID = 'workbench.action.splitEditor'; }\n    constructor() {\n        super({\n            id: SplitEditorAction.ID,\n            title: { value: ( localize('splitEditor', \"Split Editor\")), original: 'Split Editor' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: 2048  | 93\n            },\n            category: Categories.View\n        });\n    }\n}\nclass SplitEditorOrthogonalAction extends AbstractSplitEditorAction {\n    constructor() {\n        super({\n            id: 'workbench.action.splitEditorOrthogonal',\n            title: { value: ( localize('splitEditorOrthogonal', \"Split Editor Orthogonal\")), original: 'Split Editor Orthogonal' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 2048  | 93 )\n            },\n            category: Categories.View\n        });\n    }\n    getDirection(configurationService) {\n        const direction = preferredSideBySideGroupDirection(configurationService);\n        return direction === 3  ? 1  : 3 ;\n    }\n}\nclass SplitEditorLeftAction extends ExecuteCommandAction {\n    constructor() {\n        super({\n            id: SPLIT_EDITOR_LEFT,\n            title: { value: ( localize('splitEditorGroupLeft', \"Split Editor Left\")), original: 'Split Editor Left' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 2048  | 93 )\n            },\n            category: Categories.View\n        }, SPLIT_EDITOR_LEFT);\n    }\n}\nclass SplitEditorRightAction extends ExecuteCommandAction {\n    constructor() {\n        super({\n            id: SPLIT_EDITOR_RIGHT,\n            title: { value: ( localize('splitEditorGroupRight', \"Split Editor Right\")), original: 'Split Editor Right' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 2048  | 93 )\n            },\n            category: Categories.View\n        }, SPLIT_EDITOR_RIGHT);\n    }\n}\nclass SplitEditorUpAction extends ExecuteCommandAction {\n    static { this.LABEL = ( localize('splitEditorGroupUp', \"Split Editor Up\")); }\n    constructor() {\n        super({\n            id: SPLIT_EDITOR_UP,\n            title: { value: ( localize('splitEditorGroupUp', \"Split Editor Up\")), original: 'Split Editor Up' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 2048  | 93 )\n            },\n            category: Categories.View\n        }, SPLIT_EDITOR_UP);\n    }\n}\nclass SplitEditorDownAction extends ExecuteCommandAction {\n    static { this.LABEL = ( localize('splitEditorGroupDown', \"Split Editor Down\")); }\n    constructor() {\n        super({\n            id: SPLIT_EDITOR_DOWN,\n            title: { value: ( localize('splitEditorGroupDown', \"Split Editor Down\")), original: 'Split Editor Down' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 2048  | 93 )\n            },\n            category: Categories.View\n        }, SPLIT_EDITOR_DOWN);\n    }\n}\nclass JoinTwoGroupsAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.joinTwoGroups',\n            title: { value: ( localize('joinTwoGroups', \"Join Editor Group with Next Group\")), original: 'Join Editor Group with Next Group' },\n            f1: true,\n            category: Categories.View\n        });\n    }\n    async run(accessor, context) {\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        let sourceGroup;\n        if (context && typeof context.groupId === 'number') {\n            sourceGroup = editorGroupService.getGroup(context.groupId);\n        }\n        else {\n            sourceGroup = editorGroupService.activeGroup;\n        }\n        if (sourceGroup) {\n            const targetGroupDirections = [3 , 1 , 2 , 0 ];\n            for (const targetGroupDirection of targetGroupDirections) {\n                const targetGroup = editorGroupService.findGroup({ direction: targetGroupDirection }, sourceGroup);\n                if (targetGroup && sourceGroup !== targetGroup) {\n                    editorGroupService.mergeGroup(sourceGroup, targetGroup);\n                    break;\n                }\n            }\n        }\n    }\n}\nclass JoinAllGroupsAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.joinAllGroups',\n            title: { value: ( localize('joinAllGroups', \"Join All Editor Groups\")), original: 'Join All Editor Groups' },\n            f1: true,\n            category: Categories.View\n        });\n    }\n    async run(accessor) {\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        editorGroupService.mergeAllGroups();\n    }\n}\nclass NavigateBetweenGroupsAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.navigateEditorGroups',\n            title: { value: ( localize('navigateEditorGroups', \"Navigate Between Editor Groups\")), original: 'Navigate Between Editor Groups' },\n            f1: true,\n            category: Categories.View\n        });\n    }\n    async run(accessor) {\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        const nextGroup = editorGroupService.findGroup({ location: 2  }, editorGroupService.activeGroup, true);\n        nextGroup?.focus();\n    }\n}\nclass FocusActiveGroupAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.focusActiveEditorGroup',\n            title: { value: ( localize('focusActiveEditorGroup', \"Focus Active Editor Group\")), original: 'Focus Active Editor Group' },\n            f1: true,\n            category: Categories.View\n        });\n    }\n    async run(accessor) {\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        editorGroupService.activeGroup.focus();\n    }\n}\nclass AbstractFocusGroupAction extends Action2 {\n    constructor(desc, scope) {\n        super(desc);\n        this.scope = scope;\n    }\n    async run(accessor) {\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        const group = editorGroupService.findGroup(this.scope, editorGroupService.activeGroup, true);\n        group?.focus();\n    }\n}\nclass FocusFirstGroupAction extends AbstractFocusGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.focusFirstEditorGroup',\n            title: { value: ( localize('focusFirstEditorGroup', \"Focus First Editor Group\")), original: 'Focus First Editor Group' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: 2048  | 22\n            },\n            category: Categories.View\n        }, { location: 0  });\n    }\n}\nclass FocusLastGroupAction extends AbstractFocusGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.focusLastEditorGroup',\n            title: { value: ( localize('focusLastEditorGroup', \"Focus Last Editor Group\")), original: 'Focus Last Editor Group' },\n            f1: true,\n            category: Categories.View\n        }, { location: 1  });\n    }\n}\nclass FocusNextGroup extends AbstractFocusGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.focusNextGroup',\n            title: { value: ( localize('focusNextGroup', \"Focus Next Editor Group\")), original: 'Focus Next Editor Group' },\n            f1: true,\n            category: Categories.View\n        }, { location: 2  });\n    }\n}\nclass FocusPreviousGroup extends AbstractFocusGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.focusPreviousGroup',\n            title: { value: ( localize('focusPreviousGroup', \"Focus Previous Editor Group\")), original: 'Focus Previous Editor Group' },\n            f1: true,\n            category: Categories.View\n        }, { location: 3  });\n    }\n}\nclass FocusLeftGroup extends AbstractFocusGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.focusLeftGroup',\n            title: { value: ( localize('focusLeftGroup', \"Focus Left Editor Group\")), original: 'Focus Left Editor Group' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 2048  | 15 )\n            },\n            category: Categories.View\n        }, { direction: 2  });\n    }\n}\nclass FocusRightGroup extends AbstractFocusGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.focusRightGroup',\n            title: { value: ( localize('focusRightGroup', \"Focus Right Editor Group\")), original: 'Focus Right Editor Group' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 2048  | 17 )\n            },\n            category: Categories.View\n        }, { direction: 3  });\n    }\n}\nclass FocusAboveGroup extends AbstractFocusGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.focusAboveGroup',\n            title: { value: ( localize('focusAboveGroup', \"Focus Editor Group Above\")), original: 'Focus Editor Group Above' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 2048  | 16 )\n            },\n            category: Categories.View\n        }, { direction: 0  });\n    }\n}\nclass FocusBelowGroup extends AbstractFocusGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.focusBelowGroup',\n            title: { value: ( localize('focusBelowGroup', \"Focus Editor Group Below\")), original: 'Focus Editor Group Below' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 2048  | 18 )\n            },\n            category: Categories.View\n        }, { direction: 1  });\n    }\n}\nlet CloseEditorAction = class CloseEditorAction extends Action {\n    static { this.ID = 'workbench.action.closeActiveEditor'; }\n    static { this.LABEL = ( localize('closeEditor', \"Close Editor\")); }\n    constructor(id, label, commandService) {\n        super(id, label, ThemeIcon.asClassName(Codicon.close));\n        this.commandService = commandService;\n    }\n    run(context) {\n        return this.commandService.executeCommand(CLOSE_EDITOR_COMMAND_ID, undefined, context);\n    }\n};\nCloseEditorAction = ( __decorate([\n    ( __param(2, ICommandService))\n], CloseEditorAction));\nlet UnpinEditorAction = class UnpinEditorAction extends Action {\n    static { this.ID = 'workbench.action.unpinActiveEditor'; }\n    static { this.LABEL = ( localize('unpinEditor', \"Unpin Editor\")); }\n    constructor(id, label, commandService) {\n        super(id, label, ThemeIcon.asClassName(Codicon.pinned));\n        this.commandService = commandService;\n    }\n    run(context) {\n        return this.commandService.executeCommand(UNPIN_EDITOR_COMMAND_ID, undefined, context);\n    }\n};\nUnpinEditorAction = ( __decorate([\n    ( __param(2, ICommandService))\n], UnpinEditorAction));\nlet CloseOneEditorAction = class CloseOneEditorAction extends Action {\n    static { this.ID = 'workbench.action.closeActiveEditor'; }\n    static { this.LABEL = ( localize('closeOneEditor', \"Close\")); }\n    constructor(id, label, editorGroupService) {\n        super(id, label, ThemeIcon.asClassName(Codicon.close));\n        this.editorGroupService = editorGroupService;\n    }\n    async run(context) {\n        let group;\n        let editorIndex;\n        if (context) {\n            group = this.editorGroupService.getGroup(context.groupId);\n            if (group) {\n                editorIndex = context.editorIndex;\n            }\n        }\n        if (!group) {\n            group = this.editorGroupService.activeGroup;\n        }\n        if (typeof editorIndex === 'number') {\n            const editorAtIndex = group.getEditorByIndex(editorIndex);\n            if (editorAtIndex) {\n                await group.closeEditor(editorAtIndex, { preserveFocus: context?.preserveFocus });\n                return;\n            }\n        }\n        if (group.activeEditor) {\n            await group.closeEditor(group.activeEditor, { preserveFocus: context?.preserveFocus });\n            return;\n        }\n    }\n};\nCloseOneEditorAction = ( __decorate([\n    ( __param(2, IEditorGroupsService))\n], CloseOneEditorAction));\nclass RevertAndCloseEditorAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.revertAndCloseActiveEditor',\n            title: { value: ( localize('revertAndCloseActiveEditor', \"Revert and Close Editor\")), original: 'Revert and Close Editor' },\n            f1: true,\n            category: Categories.View\n        });\n    }\n    async run(accessor) {\n        const editorService = accessor.get(IEditorService);\n        const logService = accessor.get(ILogService);\n        const activeEditorPane = editorService.activeEditorPane;\n        if (activeEditorPane) {\n            const editor = activeEditorPane.input;\n            const group = activeEditorPane.group;\n            try {\n                await editorService.revert({ editor, groupId: group.id });\n            }\n            catch (error) {\n                logService.error(error);\n                await editorService.revert({ editor, groupId: group.id }, { soft: true });\n            }\n            await group.closeEditor(editor);\n        }\n    }\n}\nclass CloseLeftEditorsInGroupAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.closeEditorsToTheLeft',\n            title: { value: ( localize('closeEditorsToTheLeft', \"Close Editors to the Left in Group\")), original: 'Close Editors to the Left in Group' },\n            f1: true,\n            category: Categories.View\n        });\n    }\n    async run(accessor, context) {\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        const { group, editor } = this.getTarget(editorGroupService, context);\n        if (group && editor) {\n            await group.closeEditors({ direction: 0 , except: editor, excludeSticky: true });\n        }\n    }\n    getTarget(editorGroupService, context) {\n        if (context) {\n            return { editor: context.editor, group: editorGroupService.getGroup(context.groupId) };\n        }\n        return { group: editorGroupService.activeGroup, editor: editorGroupService.activeGroup.activeEditor };\n    }\n}\nclass AbstractCloseAllAction extends Action2 {\n    groupsToClose(editorGroupService) {\n        const groupsToClose = [];\n        const groups = editorGroupService.getGroups(2 );\n        for (let i = groups.length - 1; i >= 0; i--) {\n            groupsToClose.push(groups[i]);\n        }\n        return groupsToClose;\n    }\n    async run(accessor) {\n        const editorService = accessor.get(IEditorService);\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        const filesConfigurationService = accessor.get(IFilesConfigurationService);\n        const fileDialogService = accessor.get(IFileDialogService);\n        const dirtyEditorsWithDefaultConfirm = ( new Set());\n        const dirtyAutoSaveOnFocusChangeEditors = ( new Set());\n        const dirtyAutoSaveOnWindowChangeEditors = ( new Set());\n        const editorsWithCustomConfirm = ( new Map());\n        for (const { editor, groupId } of editorService.getEditors(1 , { excludeSticky: this.excludeSticky })) {\n            let confirmClose = false;\n            if (editor.closeHandler) {\n                confirmClose = editor.closeHandler.showConfirm();\n            }\n            else {\n                confirmClose = editor.isDirty() && !editor.isSaving();\n            }\n            if (!confirmClose) {\n                continue;\n            }\n            if (typeof editor.closeHandler?.confirm === 'function') {\n                let customEditorsToConfirm = editorsWithCustomConfirm.get(editor.typeId);\n                if (!customEditorsToConfirm) {\n                    customEditorsToConfirm = ( new Set());\n                    editorsWithCustomConfirm.set(editor.typeId, customEditorsToConfirm);\n                }\n                customEditorsToConfirm.add({ editor, groupId });\n            }\n            else if (filesConfigurationService.getAutoSaveMode() === 3  && !editor.hasCapability(4 )) {\n                dirtyAutoSaveOnFocusChangeEditors.add({ editor, groupId });\n            }\n            else if ((isNative && (isWindows || isLinux)) && filesConfigurationService.getAutoSaveMode() === 4  && !editor.hasCapability(4 )) {\n                dirtyAutoSaveOnWindowChangeEditors.add({ editor, groupId });\n            }\n            else {\n                dirtyEditorsWithDefaultConfirm.add({ editor, groupId });\n            }\n        }\n        if (dirtyEditorsWithDefaultConfirm.size > 0) {\n            const editors = Array.from(( dirtyEditorsWithDefaultConfirm.values()));\n            await this.revealEditorsToConfirm(editors, editorGroupService);\n            const confirmation = await fileDialogService.showSaveConfirm(( editors.map(({ editor }) => {\n                if (editor instanceof SideBySideEditorInput) {\n                    return editor.primary.getName();\n                }\n                return editor.getName();\n            })));\n            switch (confirmation) {\n                case 2 :\n                    return;\n                case 1 :\n                    await editorService.revert(editors, { soft: true });\n                    break;\n                case 0 :\n                    await editorService.save(editors, { reason: 1  });\n                    break;\n            }\n        }\n        for (const [, editorIdentifiers] of editorsWithCustomConfirm) {\n            const editors = Array.from(( editorIdentifiers.values()));\n            await this.revealEditorsToConfirm(editors, editorGroupService);\n            const confirmation = await firstOrDefault(editors)?.editor.closeHandler?.confirm?.(editors);\n            if (typeof confirmation === 'number') {\n                switch (confirmation) {\n                    case 2 :\n                        return;\n                    case 1 :\n                        await editorService.revert(editors, { soft: true });\n                        break;\n                    case 0 :\n                        await editorService.save(editors, { reason: 1  });\n                        break;\n                }\n            }\n        }\n        if (dirtyAutoSaveOnFocusChangeEditors.size > 0) {\n            const editors = Array.from(( dirtyAutoSaveOnFocusChangeEditors.values()));\n            await editorService.save(editors, { reason: 3  });\n        }\n        if (dirtyAutoSaveOnWindowChangeEditors.size > 0) {\n            const editors = Array.from(( dirtyAutoSaveOnWindowChangeEditors.values()));\n            await editorService.save(editors, { reason: 4  });\n        }\n        return this.doCloseAll(editorGroupService);\n    }\n    async revealEditorsToConfirm(editors, editorGroupService) {\n        try {\n            const handledGroups = ( new Set());\n            for (const { editor, groupId } of editors) {\n                if (( handledGroups.has(groupId))) {\n                    continue;\n                }\n                handledGroups.add(groupId);\n                const group = editorGroupService.getGroup(groupId);\n                await group?.openEditor(editor);\n            }\n        }\n        catch (error) {\n        }\n    }\n    async doCloseAll(editorGroupService) {\n        await Promise.all(( this.groupsToClose(editorGroupService).map(group => group.closeAllEditors({ excludeSticky: this.excludeSticky }))));\n    }\n}\nclass CloseAllEditorsAction extends AbstractCloseAllAction {\n    static { this.ID = 'workbench.action.closeAllEditors'; }\n    static { this.LABEL = { value: ( localize('closeAllEditors', \"Close All Editors\")), original: 'Close All Editors' }; }\n    constructor() {\n        super({\n            id: CloseAllEditorsAction.ID,\n            title: CloseAllEditorsAction.LABEL,\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 2048  | 53 )\n            },\n            icon: Codicon.closeAll,\n            category: Categories.View\n        });\n    }\n    get excludeSticky() {\n        return true;\n    }\n}\nclass CloseAllEditorGroupsAction extends AbstractCloseAllAction {\n    constructor() {\n        super({\n            id: 'workbench.action.closeAllGroups',\n            title: { value: ( localize('closeAllGroups', \"Close All Editor Groups\")), original: 'Close All Editor Groups' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 2048  | 1024  | 53 )\n            },\n            category: Categories.View\n        });\n    }\n    get excludeSticky() {\n        return false;\n    }\n    async doCloseAll(editorGroupService) {\n        await super.doCloseAll(editorGroupService);\n        for (const groupToClose of this.groupsToClose(editorGroupService)) {\n            editorGroupService.removeGroup(groupToClose);\n        }\n    }\n}\nclass CloseEditorsInOtherGroupsAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.closeEditorsInOtherGroups',\n            title: { value: ( localize('closeEditorsInOtherGroups', \"Close Editors in Other Groups\")), original: 'Close Editors in Other Groups' },\n            f1: true,\n            category: Categories.View\n        });\n    }\n    async run(accessor, context) {\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        const groupToSkip = context ? editorGroupService.getGroup(context.groupId) : editorGroupService.activeGroup;\n        await Promise.all(( editorGroupService.getGroups(1 ).map(async (group) => {\n            if (groupToSkip && group.id === groupToSkip.id) {\n                return;\n            }\n            return group.closeAllEditors({ excludeSticky: true });\n        })));\n    }\n}\nclass CloseEditorInAllGroupsAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.closeEditorInAllGroups',\n            title: { value: ( localize('closeEditorInAllGroups', \"Close Editor in All Groups\")), original: 'Close Editor in All Groups' },\n            f1: true,\n            category: Categories.View\n        });\n    }\n    async run(accessor) {\n        const editorService = accessor.get(IEditorService);\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        const activeEditor = editorService.activeEditor;\n        if (activeEditor) {\n            await Promise.all(( editorGroupService.getGroups(1 ).map(group => group.closeEditor(activeEditor))));\n        }\n    }\n}\nclass AbstractMoveCopyGroupAction extends Action2 {\n    constructor(desc, direction, isMove) {\n        super(desc);\n        this.direction = direction;\n        this.isMove = isMove;\n    }\n    async run(accessor, context) {\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        let sourceGroup;\n        if (context && typeof context.groupId === 'number') {\n            sourceGroup = editorGroupService.getGroup(context.groupId);\n        }\n        else {\n            sourceGroup = editorGroupService.activeGroup;\n        }\n        if (sourceGroup) {\n            let resultGroup = undefined;\n            if (this.isMove) {\n                const targetGroup = this.findTargetGroup(editorGroupService, sourceGroup);\n                if (targetGroup) {\n                    resultGroup = editorGroupService.moveGroup(sourceGroup, targetGroup, this.direction);\n                }\n            }\n            else {\n                resultGroup = editorGroupService.copyGroup(sourceGroup, sourceGroup, this.direction);\n            }\n            if (resultGroup) {\n                editorGroupService.activateGroup(resultGroup);\n            }\n        }\n    }\n    findTargetGroup(editorGroupService, sourceGroup) {\n        const targetNeighbours = [this.direction];\n        switch (this.direction) {\n            case 2 :\n            case 3 :\n                targetNeighbours.push(0 , 1 );\n                break;\n            case 0 :\n            case 1 :\n                targetNeighbours.push(2 , 3 );\n                break;\n        }\n        for (const targetNeighbour of targetNeighbours) {\n            const targetNeighbourGroup = editorGroupService.findGroup({ direction: targetNeighbour }, sourceGroup);\n            if (targetNeighbourGroup) {\n                return targetNeighbourGroup;\n            }\n        }\n        return undefined;\n    }\n}\nclass AbstractMoveGroupAction extends AbstractMoveCopyGroupAction {\n    constructor(desc, direction) {\n        super(desc, direction, true);\n    }\n}\nclass MoveGroupLeftAction extends AbstractMoveGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.moveActiveEditorGroupLeft',\n            title: { value: ( localize('moveActiveGroupLeft', \"Move Editor Group Left\")), original: 'Move Editor Group Left' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 15 )\n            },\n            category: Categories.View\n        }, 2 );\n    }\n}\nclass MoveGroupRightAction extends AbstractMoveGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.moveActiveEditorGroupRight',\n            title: { value: ( localize('moveActiveGroupRight', \"Move Editor Group Right\")), original: 'Move Editor Group Right' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 17 )\n            },\n            category: Categories.View\n        }, 3 );\n    }\n}\nclass MoveGroupUpAction extends AbstractMoveGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.moveActiveEditorGroupUp',\n            title: { value: ( localize('moveActiveGroupUp', \"Move Editor Group Up\")), original: 'Move Editor Group Up' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 16 )\n            },\n            category: Categories.View\n        }, 0 );\n    }\n}\nclass MoveGroupDownAction extends AbstractMoveGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.moveActiveEditorGroupDown',\n            title: { value: ( localize('moveActiveGroupDown', \"Move Editor Group Down\")), original: 'Move Editor Group Down' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 18 )\n            },\n            category: Categories.View\n        }, 1 );\n    }\n}\nclass AbstractDuplicateGroupAction extends AbstractMoveCopyGroupAction {\n    constructor(desc, direction) {\n        super(desc, direction, false);\n    }\n}\nclass DuplicateGroupLeftAction extends AbstractDuplicateGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.duplicateActiveEditorGroupLeft',\n            title: { value: ( localize('duplicateActiveGroupLeft', \"Duplicate Editor Group Left\")), original: 'Duplicate Editor Group Left' },\n            f1: true,\n            category: Categories.View\n        }, 2 );\n    }\n}\nclass DuplicateGroupRightAction extends AbstractDuplicateGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.duplicateActiveEditorGroupRight',\n            title: { value: ( localize('duplicateActiveGroupRight', \"Duplicate Editor Group Right\")), original: 'Duplicate Editor Group Right' },\n            f1: true,\n            category: Categories.View\n        }, 3 );\n    }\n}\nclass DuplicateGroupUpAction extends AbstractDuplicateGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.duplicateActiveEditorGroupUp',\n            title: { value: ( localize('duplicateActiveGroupUp', \"Duplicate Editor Group Up\")), original: 'Duplicate Editor Group Up' },\n            f1: true,\n            category: Categories.View\n        }, 0 );\n    }\n}\nclass DuplicateGroupDownAction extends AbstractDuplicateGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.duplicateActiveEditorGroupDown',\n            title: { value: ( localize('duplicateActiveGroupDown', \"Duplicate Editor Group Down\")), original: 'Duplicate Editor Group Down' },\n            f1: true,\n            category: Categories.View\n        }, 1 );\n    }\n}\nclass MinimizeOtherGroupsAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.minimizeOtherEditors',\n            title: { value: ( localize('minimizeOtherEditorGroups', \"Maximize Editor Group\")), original: 'Maximize Editor Group' },\n            f1: true,\n            category: Categories.View\n        });\n    }\n    async run(accessor) {\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        editorGroupService.arrangeGroups(0 );\n    }\n}\nclass ResetGroupSizesAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.evenEditorWidths',\n            title: { value: ( localize('evenEditorGroups', \"Reset Editor Group Sizes\")), original: 'Reset Editor Group Sizes' },\n            f1: true,\n            category: Categories.View\n        });\n    }\n    async run(accessor) {\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        editorGroupService.arrangeGroups(1 );\n    }\n}\nclass ToggleGroupSizesAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.toggleEditorWidths',\n            title: { value: ( localize('toggleEditorWidths', \"Toggle Editor Group Sizes\")), original: 'Toggle Editor Group Sizes' },\n            f1: true,\n            category: Categories.View\n        });\n    }\n    async run(accessor) {\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        editorGroupService.arrangeGroups(2 );\n    }\n}\nclass MaximizeGroupAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.maximizeEditor',\n            title: { value: ( localize('maximizeEditor', \"Maximize Editor Group and Hide Side Bars\")), original: 'Maximize Editor Group and Hide Side Bars' },\n            f1: true,\n            category: Categories.View\n        });\n    }\n    async run(accessor) {\n        const layoutService = accessor.get(IWorkbenchLayoutService);\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        const editorService = accessor.get(IEditorService);\n        if (editorService.activeEditor) {\n            layoutService.setPartHidden(true, \"workbench.parts.sidebar\" );\n            layoutService.setPartHidden(true, \"workbench.parts.auxiliarybar\" );\n            editorGroupService.arrangeGroups(0 );\n        }\n    }\n}\nclass AbstractNavigateEditorAction extends Action2 {\n    async run(accessor) {\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        const result = this.navigate(editorGroupService);\n        if (!result) {\n            return;\n        }\n        const { groupId, editor } = result;\n        if (!editor) {\n            return;\n        }\n        const group = editorGroupService.getGroup(groupId);\n        if (group) {\n            await group.openEditor(editor);\n        }\n    }\n}\nclass OpenNextEditor extends AbstractNavigateEditorAction {\n    constructor() {\n        super({\n            id: 'workbench.action.nextEditor',\n            title: { value: ( localize('openNextEditor', \"Open Next Editor\")), original: 'Open Next Editor' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: 2048  | 12 ,\n                mac: {\n                    primary: 2048  | 512  | 17 ,\n                    secondary: [2048  | 1024  | 94 ]\n                }\n            },\n            category: Categories.View\n        });\n    }\n    navigate(editorGroupService) {\n        const activeGroup = editorGroupService.activeGroup;\n        const activeGroupEditors = activeGroup.getEditors(1 );\n        const activeEditorIndex = activeGroup.activeEditor ? activeGroupEditors.indexOf(activeGroup.activeEditor) : -1;\n        if (activeEditorIndex + 1 < activeGroupEditors.length) {\n            return { editor: activeGroupEditors[activeEditorIndex + 1], groupId: activeGroup.id };\n        }\n        const handledGroups = ( new Set());\n        let currentGroup = editorGroupService.activeGroup;\n        while (currentGroup && !( handledGroups.has(currentGroup.id))) {\n            currentGroup = editorGroupService.findGroup({ location: 2  }, currentGroup, true);\n            if (currentGroup) {\n                handledGroups.add(currentGroup.id);\n                const groupEditors = currentGroup.getEditors(1 );\n                if (groupEditors.length > 0) {\n                    return { editor: groupEditors[0], groupId: currentGroup.id };\n                }\n            }\n        }\n        return undefined;\n    }\n}\nclass OpenPreviousEditor extends AbstractNavigateEditorAction {\n    constructor() {\n        super({\n            id: 'workbench.action.previousEditor',\n            title: { value: ( localize('openPreviousEditor', \"Open Previous Editor\")), original: 'Open Previous Editor' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: 2048  | 11 ,\n                mac: {\n                    primary: 2048  | 512  | 15 ,\n                    secondary: [2048  | 1024  | 92 ]\n                }\n            },\n            category: Categories.View\n        });\n    }\n    navigate(editorGroupService) {\n        const activeGroup = editorGroupService.activeGroup;\n        const activeGroupEditors = activeGroup.getEditors(1 );\n        const activeEditorIndex = activeGroup.activeEditor ? activeGroupEditors.indexOf(activeGroup.activeEditor) : -1;\n        if (activeEditorIndex > 0) {\n            return { editor: activeGroupEditors[activeEditorIndex - 1], groupId: activeGroup.id };\n        }\n        const handledGroups = ( new Set());\n        let currentGroup = editorGroupService.activeGroup;\n        while (currentGroup && !( handledGroups.has(currentGroup.id))) {\n            currentGroup = editorGroupService.findGroup({ location: 3  }, currentGroup, true);\n            if (currentGroup) {\n                handledGroups.add(currentGroup.id);\n                const groupEditors = currentGroup.getEditors(1 );\n                if (groupEditors.length > 0) {\n                    return { editor: groupEditors[groupEditors.length - 1], groupId: currentGroup.id };\n                }\n            }\n        }\n        return undefined;\n    }\n}\nclass OpenNextEditorInGroup extends AbstractNavigateEditorAction {\n    constructor() {\n        super({\n            id: 'workbench.action.nextEditorInGroup',\n            title: { value: ( localize('nextEditorInGroup', \"Open Next Editor in Group\")), original: 'Open Next Editor in Group' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 2048  | 12 ),\n                mac: {\n                    primary: KeyChord(2048  | 41 , 2048  | 512  | 17 )\n                }\n            },\n            category: Categories.View\n        });\n    }\n    navigate(editorGroupService) {\n        const group = editorGroupService.activeGroup;\n        const editors = group.getEditors(1 );\n        const index = group.activeEditor ? editors.indexOf(group.activeEditor) : -1;\n        return { editor: index + 1 < editors.length ? editors[index + 1] : editors[0], groupId: group.id };\n    }\n}\nclass OpenPreviousEditorInGroup extends AbstractNavigateEditorAction {\n    constructor() {\n        super({\n            id: 'workbench.action.previousEditorInGroup',\n            title: { value: ( localize('openPreviousEditorInGroup', \"Open Previous Editor in Group\")), original: 'Open Previous Editor in Group' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 2048  | 11 ),\n                mac: {\n                    primary: KeyChord(2048  | 41 , 2048  | 512  | 15 )\n                }\n            },\n            category: Categories.View\n        });\n    }\n    navigate(editorGroupService) {\n        const group = editorGroupService.activeGroup;\n        const editors = group.getEditors(1 );\n        const index = group.activeEditor ? editors.indexOf(group.activeEditor) : -1;\n        return { editor: index > 0 ? editors[index - 1] : editors[editors.length - 1], groupId: group.id };\n    }\n}\nclass OpenFirstEditorInGroup extends AbstractNavigateEditorAction {\n    constructor() {\n        super({\n            id: 'workbench.action.firstEditorInGroup',\n            title: { value: ( localize('firstEditorInGroup', \"Open First Editor in Group\")), original: 'Open First Editor in Group' },\n            f1: true,\n            category: Categories.View\n        });\n    }\n    navigate(editorGroupService) {\n        const group = editorGroupService.activeGroup;\n        const editors = group.getEditors(1 );\n        return { editor: editors[0], groupId: group.id };\n    }\n}\nclass OpenLastEditorInGroup extends AbstractNavigateEditorAction {\n    constructor() {\n        super({\n            id: 'workbench.action.lastEditorInGroup',\n            title: { value: ( localize('lastEditorInGroup', \"Open Last Editor in Group\")), original: 'Open Last Editor in Group' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: 512  | 21 ,\n                secondary: [2048  | 30 ],\n                mac: {\n                    primary: 256  | 21 ,\n                    secondary: [2048  | 30 ]\n                }\n            },\n            category: Categories.View\n        });\n    }\n    navigate(editorGroupService) {\n        const group = editorGroupService.activeGroup;\n        const editors = group.getEditors(1 );\n        return { editor: editors[editors.length - 1], groupId: group.id };\n    }\n}\nclass NavigateForwardAction extends Action2 {\n    static { this.ID = 'workbench.action.navigateForward'; }\n    static { this.LABEL = ( localize('navigateForward', \"Go Forward\")); }\n    constructor() {\n        super({\n            id: NavigateForwardAction.ID,\n            title: { value: ( localize('navigateForward', \"Go Forward\")), original: 'Go Forward', mnemonicTitle: ( localize({ key: 'miForward', comment: ['&& denotes a mnemonic'] }, \"&&Forward\")) },\n            f1: true,\n            icon: Codicon.arrowRight,\n            precondition: ( ContextKeyExpr.has('canNavigateForward')),\n            keybinding: {\n                weight: 200 ,\n                win: { primary: 512  | 17  },\n                mac: { primary: 256  | 1024  | 88  },\n                linux: { primary: 2048  | 1024  | 88  }\n            },\n            menu: [\n                { id: MenuId.MenubarGoMenu, group: '1_history_nav', order: 2 },\n                { id: MenuId.CommandCenter, order: 2 }\n            ]\n        });\n    }\n    async run(accessor) {\n        const historyService = accessor.get(IHistoryService);\n        await historyService.goForward(0 );\n    }\n}\nclass NavigateBackwardsAction extends Action2 {\n    static { this.ID = 'workbench.action.navigateBack'; }\n    static { this.LABEL = ( localize('navigateBack', \"Go Back\")); }\n    constructor() {\n        super({\n            id: NavigateBackwardsAction.ID,\n            title: { value: ( localize('navigateBack', \"Go Back\")), original: 'Go Back', mnemonicTitle: ( localize({ key: 'miBack', comment: ['&& denotes a mnemonic'] }, \"&&Back\")) },\n            f1: true,\n            precondition: ( ContextKeyExpr.has('canNavigateBack')),\n            icon: Codicon.arrowLeft,\n            keybinding: {\n                weight: 200 ,\n                win: { primary: 512  | 15  },\n                mac: { primary: 256  | 88  },\n                linux: { primary: 2048  | 512  | 88  }\n            },\n            menu: [\n                { id: MenuId.MenubarGoMenu, group: '1_history_nav', order: 1 },\n                { id: MenuId.CommandCenter, order: 1 }\n            ]\n        });\n    }\n    async run(accessor) {\n        const historyService = accessor.get(IHistoryService);\n        await historyService.goBack(0 );\n    }\n}\nclass NavigatePreviousAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.navigateLast',\n            title: { value: ( localize('navigatePrevious', \"Go Previous\")), original: 'Go Previous' },\n            f1: true\n        });\n    }\n    async run(accessor) {\n        const historyService = accessor.get(IHistoryService);\n        await historyService.goPrevious(0 );\n    }\n}\nclass NavigateForwardInEditsAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.navigateForwardInEditLocations',\n            title: { value: ( localize('navigateForwardInEdits', \"Go Forward in Edit Locations\")), original: 'Go Forward in Edit Locations' },\n            f1: true\n        });\n    }\n    async run(accessor) {\n        const historyService = accessor.get(IHistoryService);\n        await historyService.goForward(1 );\n    }\n}\nclass NavigateBackwardsInEditsAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.navigateBackInEditLocations',\n            title: { value: ( localize('navigateBackInEdits', \"Go Back in Edit Locations\")), original: 'Go Back in Edit Locations' },\n            f1: true\n        });\n    }\n    async run(accessor) {\n        const historyService = accessor.get(IHistoryService);\n        await historyService.goBack(1 );\n    }\n}\nclass NavigatePreviousInEditsAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.navigatePreviousInEditLocations',\n            title: { value: ( localize('navigatePreviousInEdits', \"Go Previous in Edit Locations\")), original: 'Go Previous in Edit Locations' },\n            f1: true\n        });\n    }\n    async run(accessor) {\n        const historyService = accessor.get(IHistoryService);\n        await historyService.goPrevious(1 );\n    }\n}\nclass NavigateToLastEditLocationAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.navigateToLastEditLocation',\n            title: { value: ( localize('navigateToLastEditLocation', \"Go to Last Edit Location\")), original: 'Go to Last Edit Location' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 2048  | 47 )\n            }\n        });\n    }\n    async run(accessor) {\n        const historyService = accessor.get(IHistoryService);\n        await historyService.goLast(1 );\n    }\n}\nclass NavigateForwardInNavigationsAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.navigateForwardInNavigationLocations',\n            title: { value: ( localize('navigateForwardInNavigations', \"Go Forward in Navigation Locations\")), original: 'Go Forward in Navigation Locations' },\n            f1: true\n        });\n    }\n    async run(accessor) {\n        const historyService = accessor.get(IHistoryService);\n        await historyService.goForward(2 );\n    }\n}\nclass NavigateBackwardsInNavigationsAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.navigateBackInNavigationLocations',\n            title: { value: ( localize('navigateBackInNavigations', \"Go Back in Navigation Locations\")), original: 'Go Back in Navigation Locations' },\n            f1: true\n        });\n    }\n    async run(accessor) {\n        const historyService = accessor.get(IHistoryService);\n        await historyService.goBack(2 );\n    }\n}\nclass NavigatePreviousInNavigationsAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.navigatePreviousInNavigationLocations',\n            title: { value: ( localize(\n                'navigatePreviousInNavigationLocations',\n                \"Go Previous in Navigation Locations\"\n            )), original: 'Go Previous in Navigation Locations' },\n            f1: true\n        });\n    }\n    async run(accessor) {\n        const historyService = accessor.get(IHistoryService);\n        await historyService.goPrevious(2 );\n    }\n}\nclass NavigateToLastNavigationLocationAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.navigateToLastNavigationLocation',\n            title: { value: ( localize('navigateToLastNavigationLocation', \"Go to Last Navigation Location\")), original: 'Go to Last Navigation Location' },\n            f1: true\n        });\n    }\n    async run(accessor) {\n        const historyService = accessor.get(IHistoryService);\n        await historyService.goLast(2 );\n    }\n}\nclass ReopenClosedEditorAction extends Action2 {\n    static { this.ID = 'workbench.action.reopenClosedEditor'; }\n    constructor() {\n        super({\n            id: ReopenClosedEditorAction.ID,\n            title: { value: ( localize('reopenClosedEditor', \"Reopen Closed Editor\")), original: 'Reopen Closed Editor' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: 2048  | 1024  | 50\n            },\n            category: Categories.View\n        });\n    }\n    async run(accessor) {\n        const historyService = accessor.get(IHistoryService);\n        await historyService.reopenLastClosedEditor();\n    }\n}\nclass ClearRecentFilesAction extends Action2 {\n    static { this.ID = 'workbench.action.clearRecentFiles'; }\n    constructor() {\n        super({\n            id: ClearRecentFilesAction.ID,\n            title: { value: ( localize('clearRecentFiles', \"Clear Recently Opened\")), original: 'Clear Recently Opened' },\n            f1: true,\n            category: Categories.File\n        });\n    }\n    async run(accessor) {\n        const dialogService = accessor.get(IDialogService);\n        const workspacesService = accessor.get(IWorkspacesService);\n        const historyService = accessor.get(IHistoryService);\n        const { confirmed } = await dialogService.confirm({\n            type: 'warning',\n            message: ( localize(\n                'confirmClearRecentsMessage',\n                \"Do you want to clear all recently opened files and workspaces?\"\n            )),\n            detail: ( localize('confirmClearDetail', \"This action is irreversible!\")),\n            primaryButton: ( localize({ key: 'clearButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Clear\"))\n        });\n        if (!confirmed) {\n            return;\n        }\n        workspacesService.clearRecentlyOpened();\n        historyService.clearRecentlyOpened();\n    }\n}\nclass ShowEditorsInActiveGroupByMostRecentlyUsedAction extends Action2 {\n    static { this.ID = 'workbench.action.showEditorsInActiveGroup'; }\n    constructor() {\n        super({\n            id: ShowEditorsInActiveGroupByMostRecentlyUsedAction.ID,\n            title: { value: ( localize(\n                'showEditorsInActiveGroup',\n                \"Show Editors in Active Group By Most Recently Used\"\n            )), original: 'Show Editors in Active Group By Most Recently Used' },\n            f1: true,\n            category: Categories.View\n        });\n    }\n    async run(accessor) {\n        const quickInputService = accessor.get(IQuickInputService);\n        quickInputService.quickAccess.show(ActiveGroupEditorsByMostRecentlyUsedQuickAccess.PREFIX);\n    }\n}\nclass ShowAllEditorsByAppearanceAction extends Action2 {\n    static { this.ID = 'workbench.action.showAllEditors'; }\n    constructor() {\n        super({\n            id: ShowAllEditorsByAppearanceAction.ID,\n            title: { value: ( localize('showAllEditors', \"Show All Editors By Appearance\")), original: 'Show All Editors By Appearance' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 2048  | 46 ),\n                mac: {\n                    primary: 2048  | 512  | 2\n                }\n            },\n            category: Categories.File\n        });\n    }\n    async run(accessor) {\n        const quickInputService = accessor.get(IQuickInputService);\n        quickInputService.quickAccess.show(AllEditorsByAppearanceQuickAccess.PREFIX);\n    }\n}\nclass ShowAllEditorsByMostRecentlyUsedAction extends Action2 {\n    static { this.ID = 'workbench.action.showAllEditorsByMostRecentlyUsed'; }\n    constructor() {\n        super({\n            id: ShowAllEditorsByMostRecentlyUsedAction.ID,\n            title: { value: ( localize(\n                'showAllEditorsByMostRecentlyUsed',\n                \"Show All Editors By Most Recently Used\"\n            )), original: 'Show All Editors By Most Recently Used' },\n            f1: true,\n            category: Categories.View\n        });\n    }\n    async run(accessor) {\n        const quickInputService = accessor.get(IQuickInputService);\n        quickInputService.quickAccess.show(AllEditorsByMostRecentlyUsedQuickAccess.PREFIX);\n    }\n}\nclass AbstractQuickAccessEditorAction extends Action2 {\n    constructor(desc, prefix, itemActivation) {\n        super(desc);\n        this.prefix = prefix;\n        this.itemActivation = itemActivation;\n    }\n    async run(accessor) {\n        const keybindingService = accessor.get(IKeybindingService);\n        const quickInputService = accessor.get(IQuickInputService);\n        const keybindings = keybindingService.lookupKeybindings(this.desc.id);\n        quickInputService.quickAccess.show(this.prefix, {\n            quickNavigateConfiguration: { keybindings },\n            itemActivation: this.itemActivation\n        });\n    }\n}\nclass QuickAccessPreviousRecentlyUsedEditorAction extends AbstractQuickAccessEditorAction {\n    constructor() {\n        super({\n            id: 'workbench.action.quickOpenPreviousRecentlyUsedEditor',\n            title: { value: ( localize(\n                'quickOpenPreviousRecentlyUsedEditor',\n                \"Quick Open Previous Recently Used Editor\"\n            )), original: 'Quick Open Previous Recently Used Editor' },\n            f1: true,\n            category: Categories.View\n        }, AllEditorsByMostRecentlyUsedQuickAccess.PREFIX, undefined);\n    }\n}\nclass QuickAccessLeastRecentlyUsedEditorAction extends AbstractQuickAccessEditorAction {\n    constructor() {\n        super({\n            id: 'workbench.action.quickOpenLeastRecentlyUsedEditor',\n            title: { value: ( localize(\n                'quickOpenLeastRecentlyUsedEditor',\n                \"Quick Open Least Recently Used Editor\"\n            )), original: 'Quick Open Least Recently Used Editor' },\n            f1: true,\n            category: Categories.View\n        }, AllEditorsByMostRecentlyUsedQuickAccess.PREFIX, undefined);\n    }\n}\nclass QuickAccessPreviousRecentlyUsedEditorInGroupAction extends AbstractQuickAccessEditorAction {\n    constructor() {\n        super({\n            id: 'workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup',\n            title: { value: ( localize(\n                'quickOpenPreviousRecentlyUsedEditorInGroup',\n                \"Quick Open Previous Recently Used Editor in Group\"\n            )), original: 'Quick Open Previous Recently Used Editor in Group' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: 2048  | 2 ,\n                mac: {\n                    primary: 256  | 2\n                }\n            },\n            precondition: ( ActiveEditorGroupEmptyContext.toNegated()),\n            category: Categories.View\n        }, ActiveGroupEditorsByMostRecentlyUsedQuickAccess.PREFIX, undefined);\n    }\n}\nclass QuickAccessLeastRecentlyUsedEditorInGroupAction extends AbstractQuickAccessEditorAction {\n    constructor() {\n        super({\n            id: 'workbench.action.quickOpenLeastRecentlyUsedEditorInGroup',\n            title: { value: ( localize(\n                'quickOpenLeastRecentlyUsedEditorInGroup',\n                \"Quick Open Least Recently Used Editor in Group\"\n            )), original: 'Quick Open Least Recently Used Editor in Group' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: 2048  | 1024  | 2 ,\n                mac: {\n                    primary: 256  | 1024  | 2\n                }\n            },\n            precondition: ( ActiveEditorGroupEmptyContext.toNegated()),\n            category: Categories.View\n        }, ActiveGroupEditorsByMostRecentlyUsedQuickAccess.PREFIX, ItemActivation.LAST);\n    }\n}\nclass QuickAccessPreviousEditorFromHistoryAction extends Action2 {\n    static { this.ID = 'workbench.action.openPreviousEditorFromHistory'; }\n    constructor() {\n        super({\n            id: QuickAccessPreviousEditorFromHistoryAction.ID,\n            title: { value: ( localize('navigateEditorHistoryByInput', \"Quick Open Previous Editor from History\")), original: 'Quick Open Previous Editor from History' },\n            f1: true\n        });\n    }\n    async run(accessor) {\n        const keybindingService = accessor.get(IKeybindingService);\n        const quickInputService = accessor.get(IQuickInputService);\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        const keybindings = keybindingService.lookupKeybindings(QuickAccessPreviousEditorFromHistoryAction.ID);\n        let itemActivation = undefined;\n        if (editorGroupService.activeGroup.count === 0) {\n            itemActivation = ItemActivation.FIRST;\n        }\n        quickInputService.quickAccess.show('', { quickNavigateConfiguration: { keybindings }, itemActivation });\n    }\n}\nclass OpenNextRecentlyUsedEditorAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.openNextRecentlyUsedEditor',\n            title: { value: ( localize('openNextRecentlyUsedEditor', \"Open Next Recently Used Editor\")), original: 'Open Next Recently Used Editor' },\n            f1: true,\n            category: Categories.View\n        });\n    }\n    async run(accessor) {\n        const historyService = accessor.get(IHistoryService);\n        historyService.openNextRecentlyUsedEditor();\n    }\n}\nclass OpenPreviousRecentlyUsedEditorAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.openPreviousRecentlyUsedEditor',\n            title: { value: ( localize('openPreviousRecentlyUsedEditor', \"Open Previous Recently Used Editor\")), original: 'Open Previous Recently Used Editor' },\n            f1: true,\n            category: Categories.View\n        });\n    }\n    async run(accessor) {\n        const historyService = accessor.get(IHistoryService);\n        historyService.openPreviouslyUsedEditor();\n    }\n}\nclass OpenNextRecentlyUsedEditorInGroupAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.openNextRecentlyUsedEditorInGroup',\n            title: { value: ( localize(\n                'openNextRecentlyUsedEditorInGroup',\n                \"Open Next Recently Used Editor In Group\"\n            )), original: 'Open Next Recently Used Editor In Group' },\n            f1: true,\n            category: Categories.View\n        });\n    }\n    async run(accessor) {\n        const historyService = accessor.get(IHistoryService);\n        const editorGroupsService = accessor.get(IEditorGroupsService);\n        historyService.openNextRecentlyUsedEditor(editorGroupsService.activeGroup.id);\n    }\n}\nclass OpenPreviousRecentlyUsedEditorInGroupAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.openPreviousRecentlyUsedEditorInGroup',\n            title: { value: ( localize(\n                'openPreviousRecentlyUsedEditorInGroup',\n                \"Open Previous Recently Used Editor In Group\"\n            )), original: 'Open Previous Recently Used Editor In Group' },\n            f1: true,\n            category: Categories.View\n        });\n    }\n    async run(accessor) {\n        const historyService = accessor.get(IHistoryService);\n        const editorGroupsService = accessor.get(IEditorGroupsService);\n        historyService.openPreviouslyUsedEditor(editorGroupsService.activeGroup.id);\n    }\n}\nclass ClearEditorHistoryAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.clearEditorHistory',\n            title: { value: ( localize('clearEditorHistory', \"Clear Editor History\")), original: 'Clear Editor History' },\n            f1: true\n        });\n    }\n    async run(accessor) {\n        const dialogService = accessor.get(IDialogService);\n        const historyService = accessor.get(IHistoryService);\n        const { confirmed } = await dialogService.confirm({\n            type: 'warning',\n            message: ( localize(\n                'confirmClearEditorHistoryMessage',\n                \"Do you want to clear the history of recently opened editors?\"\n            )),\n            detail: ( localize('confirmClearDetail', \"This action is irreversible!\")),\n            primaryButton: ( localize({ key: 'clearButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Clear\"))\n        });\n        if (!confirmed) {\n            return;\n        }\n        historyService.clear();\n    }\n}\nclass MoveEditorLeftInGroupAction extends ExecuteCommandAction {\n    constructor() {\n        super({\n            id: 'workbench.action.moveEditorLeftInGroup',\n            title: { value: ( localize('moveEditorLeft', \"Move Editor Left\")), original: 'Move Editor Left' },\n            keybinding: {\n                weight: 200 ,\n                primary: 2048  | 1024  | 11 ,\n                mac: {\n                    primary: KeyChord(2048  | 41 , 2048  | 1024  | 15 )\n                }\n            },\n            f1: true,\n            category: Categories.View\n        }, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'left' });\n    }\n}\nclass MoveEditorRightInGroupAction extends ExecuteCommandAction {\n    constructor() {\n        super({\n            id: 'workbench.action.moveEditorRightInGroup',\n            title: { value: ( localize('moveEditorRight', \"Move Editor Right\")), original: 'Move Editor Right' },\n            keybinding: {\n                weight: 200 ,\n                primary: 2048  | 1024  | 12 ,\n                mac: {\n                    primary: KeyChord(2048  | 41 , 2048  | 1024  | 17 )\n                }\n            },\n            f1: true,\n            category: Categories.View\n        }, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'right' });\n    }\n}\nclass MoveEditorToPreviousGroupAction extends ExecuteCommandAction {\n    constructor() {\n        super({\n            id: 'workbench.action.moveEditorToPreviousGroup',\n            title: { value: ( localize('moveEditorToPreviousGroup', \"Move Editor into Previous Group\")), original: 'Move Editor into Previous Group' },\n            keybinding: {\n                weight: 200 ,\n                primary: 2048  | 512  | 15 ,\n                mac: {\n                    primary: 2048  | 256  | 15\n                }\n            },\n            f1: true,\n            category: Categories.View,\n        }, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'previous', by: 'group' });\n    }\n}\nclass MoveEditorToNextGroupAction extends ExecuteCommandAction {\n    constructor() {\n        super({\n            id: 'workbench.action.moveEditorToNextGroup',\n            title: { value: ( localize('moveEditorToNextGroup', \"Move Editor into Next Group\")), original: 'Move Editor into Next Group' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: 2048  | 512  | 17 ,\n                mac: {\n                    primary: 2048  | 256  | 17\n                }\n            },\n            category: Categories.View\n        }, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'next', by: 'group' });\n    }\n}\nclass MoveEditorToAboveGroupAction extends ExecuteCommandAction {\n    constructor() {\n        super({\n            id: 'workbench.action.moveEditorToAboveGroup',\n            title: { value: ( localize('moveEditorToAboveGroup', \"Move Editor into Group Above\")), original: 'Move Editor into Group Above' },\n            f1: true,\n            category: Categories.View\n        }, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'up', by: 'group' });\n    }\n}\nclass MoveEditorToBelowGroupAction extends ExecuteCommandAction {\n    constructor() {\n        super({\n            id: 'workbench.action.moveEditorToBelowGroup',\n            title: { value: ( localize('moveEditorToBelowGroup', \"Move Editor into Group Below\")), original: 'Move Editor into Group Below' },\n            f1: true,\n            category: Categories.View\n        }, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'down', by: 'group' });\n    }\n}\nclass MoveEditorToLeftGroupAction extends ExecuteCommandAction {\n    constructor() {\n        super({\n            id: 'workbench.action.moveEditorToLeftGroup',\n            title: { value: ( localize('moveEditorToLeftGroup', \"Move Editor into Left Group\")), original: 'Move Editor into Left Group' },\n            f1: true,\n            category: Categories.View\n        }, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'left', by: 'group' });\n    }\n}\nclass MoveEditorToRightGroupAction extends ExecuteCommandAction {\n    constructor() {\n        super({\n            id: 'workbench.action.moveEditorToRightGroup',\n            title: { value: ( localize('moveEditorToRightGroup', \"Move Editor into Right Group\")), original: 'Move Editor into Right Group' },\n            f1: true,\n            category: Categories.View\n        }, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'right', by: 'group' });\n    }\n}\nclass MoveEditorToFirstGroupAction extends ExecuteCommandAction {\n    constructor() {\n        super({\n            id: 'workbench.action.moveEditorToFirstGroup',\n            title: { value: ( localize('moveEditorToFirstGroup', \"Move Editor into First Group\")), original: 'Move Editor into First Group' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: 1024  | 512  | 22 ,\n                mac: {\n                    primary: 2048  | 256  | 22\n                }\n            },\n            category: Categories.View\n        }, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'first', by: 'group' });\n    }\n}\nclass MoveEditorToLastGroupAction extends ExecuteCommandAction {\n    constructor() {\n        super({\n            id: 'workbench.action.moveEditorToLastGroup',\n            title: { value: ( localize('moveEditorToLastGroup', \"Move Editor into Last Group\")), original: 'Move Editor into Last Group' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: 1024  | 512  | 30 ,\n                mac: {\n                    primary: 2048  | 256  | 30\n                }\n            },\n            category: Categories.View\n        }, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'last', by: 'group' });\n    }\n}\nclass SplitEditorToPreviousGroupAction extends ExecuteCommandAction {\n    constructor() {\n        super({\n            id: 'workbench.action.splitEditorToPreviousGroup',\n            title: { value: ( localize('splitEditorToPreviousGroup', \"Split Editor into Previous Group\")), original: 'Split Editor into Previous Group' },\n            f1: true,\n            category: Categories.View\n        }, COPY_ACTIVE_EDITOR_COMMAND_ID, { to: 'previous', by: 'group' });\n    }\n}\nclass SplitEditorToNextGroupAction extends ExecuteCommandAction {\n    constructor() {\n        super({\n            id: 'workbench.action.splitEditorToNextGroup',\n            title: { value: ( localize('splitEditorToNextGroup', \"Split Editor into Next Group\")), original: 'Split Editor into Next Group' },\n            f1: true,\n            category: Categories.View\n        }, COPY_ACTIVE_EDITOR_COMMAND_ID, { to: 'next', by: 'group' });\n    }\n}\nclass SplitEditorToAboveGroupAction extends ExecuteCommandAction {\n    constructor() {\n        super({\n            id: 'workbench.action.splitEditorToAboveGroup',\n            title: { value: ( localize('splitEditorToAboveGroup', \"Split Editor into Group Above\")), original: 'Split Editor into Group Above' },\n            f1: true,\n            category: Categories.View\n        }, COPY_ACTIVE_EDITOR_COMMAND_ID, { to: 'up', by: 'group' });\n    }\n}\nclass SplitEditorToBelowGroupAction extends ExecuteCommandAction {\n    constructor() {\n        super({\n            id: 'workbench.action.splitEditorToBelowGroup',\n            title: { value: ( localize('splitEditorToBelowGroup', \"Split Editor into Group Below\")), original: 'Split Editor into Group Below' },\n            f1: true,\n            category: Categories.View\n        }, COPY_ACTIVE_EDITOR_COMMAND_ID, { to: 'down', by: 'group' });\n    }\n}\nclass SplitEditorToLeftGroupAction extends ExecuteCommandAction {\n    static { this.ID = 'workbench.action.splitEditorToLeftGroup'; }\n    static { this.LABEL = ( localize('splitEditorToLeftGroup', \"Split Editor into Left Group\")); }\n    constructor() {\n        super({\n            id: 'workbench.action.splitEditorToLeftGroup',\n            title: { value: ( localize('splitEditorToLeftGroup', \"Split Editor into Left Group\")), original: 'Split Editor into Left Group' },\n            f1: true,\n            category: Categories.View\n        }, COPY_ACTIVE_EDITOR_COMMAND_ID, { to: 'left', by: 'group' });\n    }\n}\nclass SplitEditorToRightGroupAction extends ExecuteCommandAction {\n    constructor() {\n        super({\n            id: 'workbench.action.splitEditorToRightGroup',\n            title: { value: ( localize('splitEditorToRightGroup', \"Split Editor into Right Group\")), original: 'Split Editor into Right Group' },\n            f1: true,\n            category: Categories.View\n        }, COPY_ACTIVE_EDITOR_COMMAND_ID, { to: 'right', by: 'group' });\n    }\n}\nclass SplitEditorToFirstGroupAction extends ExecuteCommandAction {\n    constructor() {\n        super({\n            id: 'workbench.action.splitEditorToFirstGroup',\n            title: { value: ( localize('splitEditorToFirstGroup', \"Split Editor into First Group\")), original: 'Split Editor into First Group' },\n            f1: true,\n            category: Categories.View\n        }, COPY_ACTIVE_EDITOR_COMMAND_ID, { to: 'first', by: 'group' });\n    }\n}\nclass SplitEditorToLastGroupAction extends ExecuteCommandAction {\n    constructor() {\n        super({\n            id: 'workbench.action.splitEditorToLastGroup',\n            title: { value: ( localize('splitEditorToLastGroup', \"Split Editor into Last Group\")), original: 'Split Editor into Last Group' },\n            f1: true,\n            category: Categories.View\n        }, COPY_ACTIVE_EDITOR_COMMAND_ID, { to: 'last', by: 'group' });\n    }\n}\nclass EditorLayoutSingleAction extends ExecuteCommandAction {\n    static { this.ID = 'workbench.action.editorLayoutSingle'; }\n    constructor() {\n        super({\n            id: EditorLayoutSingleAction.ID,\n            title: { value: ( localize('editorLayoutSingle', \"Single Column Editor Layout\")), original: 'Single Column Editor Layout' },\n            f1: true,\n            category: Categories.View\n        }, LAYOUT_EDITOR_GROUPS_COMMAND_ID, { groups: [{}] });\n    }\n}\nclass EditorLayoutTwoColumnsAction extends ExecuteCommandAction {\n    static { this.ID = 'workbench.action.editorLayoutTwoColumns'; }\n    constructor() {\n        super({\n            id: EditorLayoutTwoColumnsAction.ID,\n            title: { value: ( localize('editorLayoutTwoColumns', \"Two Columns Editor Layout\")), original: 'Two Columns Editor Layout' },\n            f1: true,\n            category: Categories.View\n        }, LAYOUT_EDITOR_GROUPS_COMMAND_ID, { groups: [{}, {}], orientation: 0  });\n    }\n}\nclass EditorLayoutThreeColumnsAction extends ExecuteCommandAction {\n    static { this.ID = 'workbench.action.editorLayoutThreeColumns'; }\n    constructor() {\n        super({\n            id: EditorLayoutThreeColumnsAction.ID,\n            title: { value: ( localize('editorLayoutThreeColumns', \"Three Columns Editor Layout\")), original: 'Three Columns Editor Layout' },\n            f1: true,\n            category: Categories.View\n        }, LAYOUT_EDITOR_GROUPS_COMMAND_ID, { groups: [{}, {}, {}], orientation: 0  });\n    }\n}\nclass EditorLayoutTwoRowsAction extends ExecuteCommandAction {\n    static { this.ID = 'workbench.action.editorLayoutTwoRows'; }\n    constructor() {\n        super({\n            id: EditorLayoutTwoRowsAction.ID,\n            title: { value: ( localize('editorLayoutTwoRows', \"Two Rows Editor Layout\")), original: 'Two Rows Editor Layout' },\n            f1: true,\n            category: Categories.View\n        }, LAYOUT_EDITOR_GROUPS_COMMAND_ID, { groups: [{}, {}], orientation: 1  });\n    }\n}\nclass EditorLayoutThreeRowsAction extends ExecuteCommandAction {\n    static { this.ID = 'workbench.action.editorLayoutThreeRows'; }\n    constructor() {\n        super({\n            id: EditorLayoutThreeRowsAction.ID,\n            title: { value: ( localize('editorLayoutThreeRows', \"Three Rows Editor Layout\")), original: 'Three Rows Editor Layout' },\n            f1: true,\n            category: Categories.View\n        }, LAYOUT_EDITOR_GROUPS_COMMAND_ID, { groups: [{}, {}, {}], orientation: 1  });\n    }\n}\nclass EditorLayoutTwoByTwoGridAction extends ExecuteCommandAction {\n    static { this.ID = 'workbench.action.editorLayoutTwoByTwoGrid'; }\n    constructor() {\n        super({\n            id: EditorLayoutTwoByTwoGridAction.ID,\n            title: { value: ( localize('editorLayoutTwoByTwoGrid', \"Grid Editor Layout (2x2)\")), original: 'Grid Editor Layout (2x2)' },\n            f1: true,\n            category: Categories.View\n        }, LAYOUT_EDITOR_GROUPS_COMMAND_ID, { groups: [{ groups: [{}, {}] }, { groups: [{}, {}] }] });\n    }\n}\nclass EditorLayoutTwoColumnsBottomAction extends ExecuteCommandAction {\n    static { this.ID = 'workbench.action.editorLayoutTwoColumnsBottom'; }\n    constructor() {\n        super({\n            id: EditorLayoutTwoColumnsBottomAction.ID,\n            title: { value: ( localize('editorLayoutTwoColumnsBottom', \"Two Columns Bottom Editor Layout\")), original: 'Two Columns Bottom Editor Layout' },\n            f1: true,\n            category: Categories.View\n        }, LAYOUT_EDITOR_GROUPS_COMMAND_ID, { groups: [{}, { groups: [{}, {}] }], orientation: 1  });\n    }\n}\nclass EditorLayoutTwoRowsRightAction extends ExecuteCommandAction {\n    static { this.ID = 'workbench.action.editorLayoutTwoRowsRight'; }\n    constructor() {\n        super({\n            id: EditorLayoutTwoRowsRightAction.ID,\n            title: { value: ( localize('editorLayoutTwoRowsRight', \"Two Rows Right Editor Layout\")), original: 'Two Rows Right Editor Layout' },\n            f1: true,\n            category: Categories.View\n        }, LAYOUT_EDITOR_GROUPS_COMMAND_ID, { groups: [{}, { groups: [{}, {}] }], orientation: 0  });\n    }\n}\nclass AbstractCreateEditorGroupAction extends Action2 {\n    constructor(desc, direction) {\n        super(desc);\n        this.direction = direction;\n    }\n    async run(accessor) {\n        const editorGroupService = accessor.get(IEditorGroupsService);\n        editorGroupService.addGroup(editorGroupService.activeGroup, this.direction, { activate: true });\n    }\n}\nclass NewEditorGroupLeftAction extends AbstractCreateEditorGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.newGroupLeft',\n            title: { value: ( localize('newGroupLeft', \"New Editor Group to the Left\")), original: 'New Editor Group to the Left' },\n            f1: true,\n            category: Categories.View\n        }, 2 );\n    }\n}\nclass NewEditorGroupRightAction extends AbstractCreateEditorGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.newGroupRight',\n            title: { value: ( localize('newGroupRight', \"New Editor Group to the Right\")), original: 'New Editor Group to the Right' },\n            f1: true,\n            category: Categories.View\n        }, 3 );\n    }\n}\nclass NewEditorGroupAboveAction extends AbstractCreateEditorGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.newGroupAbove',\n            title: { value: ( localize('newGroupAbove', \"New Editor Group Above\")), original: 'New Editor Group Above' },\n            f1: true,\n            category: Categories.View\n        }, 0 );\n    }\n}\nclass NewEditorGroupBelowAction extends AbstractCreateEditorGroupAction {\n    constructor() {\n        super({\n            id: 'workbench.action.newGroupBelow',\n            title: { value: ( localize('newGroupBelow', \"New Editor Group Below\")), original: 'New Editor Group Below' },\n            f1: true,\n            category: Categories.View\n        }, 1 );\n    }\n}\nclass ToggleEditorTypeAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.toggleEditorType',\n            title: { value: ( localize('toggleEditorType', \"Toggle Editor Type\")), original: 'Toggle Editor Type' },\n            f1: true,\n            category: Categories.View,\n            precondition: ActiveEditorAvailableEditorIdsContext\n        });\n    }\n    async run(accessor) {\n        const editorService = accessor.get(IEditorService);\n        const editorResolverService = accessor.get(IEditorResolverService);\n        const activeEditorPane = editorService.activeEditorPane;\n        if (!activeEditorPane) {\n            return;\n        }\n        const activeEditorResource = EditorResourceAccessor.getCanonicalUri(activeEditorPane.input);\n        if (!activeEditorResource) {\n            return;\n        }\n        const editorIds = ( editorResolverService.getEditors(activeEditorResource).map(editor => editor.id)).filter(id => id !== activeEditorPane.input.editorId);\n        if (editorIds.length === 0) {\n            return;\n        }\n        await editorService.replaceEditors([\n            {\n                editor: activeEditorPane.input,\n                replacement: {\n                    resource: activeEditorResource,\n                    options: {\n                        override: editorIds[0]\n                    }\n                }\n            }\n        ], activeEditorPane.group);\n    }\n}\nclass ReOpenInTextEditorAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.reopenTextEditor',\n            title: { value: ( localize('reopenTextEditor', \"Reopen Editor With Text Editor\")), original: 'Reopen Editor With Text Editor' },\n            f1: true,\n            category: Categories.View,\n            precondition: ActiveEditorAvailableEditorIdsContext\n        });\n    }\n    async run(accessor) {\n        const editorService = accessor.get(IEditorService);\n        const activeEditorPane = editorService.activeEditorPane;\n        if (!activeEditorPane) {\n            return;\n        }\n        const activeEditorResource = EditorResourceAccessor.getCanonicalUri(activeEditorPane.input);\n        if (!activeEditorResource) {\n            return;\n        }\n        await editorService.replaceEditors([\n            {\n                editor: activeEditorPane.input,\n                replacement: {\n                    resource: activeEditorResource,\n                    options: {\n                        override: DEFAULT_EDITOR_ASSOCIATION.id\n                    }\n                }\n            }\n        ], activeEditorPane.group);\n    }\n}\nexport { ClearEditorHistoryAction, ClearRecentFilesAction, CloseAllEditorGroupsAction, CloseAllEditorsAction, CloseEditorAction, CloseEditorInAllGroupsAction, CloseEditorsInOtherGroupsAction, CloseLeftEditorsInGroupAction, CloseOneEditorAction, DuplicateGroupDownAction, DuplicateGroupLeftAction, DuplicateGroupRightAction, DuplicateGroupUpAction, EditorLayoutSingleAction, EditorLayoutThreeColumnsAction, EditorLayoutThreeRowsAction, EditorLayoutTwoByTwoGridAction, EditorLayoutTwoColumnsAction, EditorLayoutTwoColumnsBottomAction, EditorLayoutTwoRowsAction, EditorLayoutTwoRowsRightAction, FocusAboveGroup, FocusActiveGroupAction, FocusBelowGroup, FocusFirstGroupAction, FocusLastGroupAction, FocusLeftGroup, FocusNextGroup, FocusPreviousGroup, FocusRightGroup, JoinAllGroupsAction, JoinTwoGroupsAction, MaximizeGroupAction, MinimizeOtherGroupsAction, MoveEditorLeftInGroupAction, MoveEditorRightInGroupAction, MoveEditorToAboveGroupAction, MoveEditorToBelowGroupAction, MoveEditorToFirstGroupAction, MoveEditorToLastGroupAction, MoveEditorToLeftGroupAction, MoveEditorToNextGroupAction, MoveEditorToPreviousGroupAction, MoveEditorToRightGroupAction, MoveGroupDownAction, MoveGroupLeftAction, MoveGroupRightAction, MoveGroupUpAction, NavigateBackwardsAction, NavigateBackwardsInEditsAction, NavigateBackwardsInNavigationsAction, NavigateBetweenGroupsAction, NavigateForwardAction, NavigateForwardInEditsAction, NavigateForwardInNavigationsAction, NavigatePreviousAction, NavigatePreviousInEditsAction, NavigatePreviousInNavigationsAction, NavigateToLastEditLocationAction, NavigateToLastNavigationLocationAction, NewEditorGroupAboveAction, NewEditorGroupBelowAction, NewEditorGroupLeftAction, NewEditorGroupRightAction, OpenFirstEditorInGroup, OpenLastEditorInGroup, OpenNextEditor, OpenNextEditorInGroup, OpenNextRecentlyUsedEditorAction, OpenNextRecentlyUsedEditorInGroupAction, OpenPreviousEditor, OpenPreviousEditorInGroup, OpenPreviousRecentlyUsedEditorAction, OpenPreviousRecentlyUsedEditorInGroupAction, QuickAccessLeastRecentlyUsedEditorAction, QuickAccessLeastRecentlyUsedEditorInGroupAction, QuickAccessPreviousEditorFromHistoryAction, QuickAccessPreviousRecentlyUsedEditorAction, QuickAccessPreviousRecentlyUsedEditorInGroupAction, ReOpenInTextEditorAction, ReopenClosedEditorAction, ResetGroupSizesAction, RevertAndCloseEditorAction, ShowAllEditorsByAppearanceAction, ShowAllEditorsByMostRecentlyUsedAction, ShowEditorsInActiveGroupByMostRecentlyUsedAction, SplitEditorAction, SplitEditorDownAction, SplitEditorLeftAction, SplitEditorOrthogonalAction, SplitEditorRightAction, SplitEditorToAboveGroupAction, SplitEditorToBelowGroupAction, SplitEditorToFirstGroupAction, SplitEditorToLastGroupAction, SplitEditorToLeftGroupAction, SplitEditorToNextGroupAction, SplitEditorToPreviousGroupAction, SplitEditorToRightGroupAction, SplitEditorUpAction, ToggleEditorTypeAction, ToggleGroupSizesAction, UnpinEditorAction };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { DragAndDropObserver, addDisposableListener, EventType, isAncestor } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { StandardMouseEvent } from 'monaco-editor/esm/vs/base/browser/mouseEvent.js';\nimport { Gesture, EventType as EventType$1 } from 'monaco-editor/esm/vs/base/browser/touch.js';\nimport { PaneView } from '../../../../base/browser/ui/splitview/paneview.js';\nimport { RunOnceScheduler } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { Emitter, Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { KeyChord } from 'monaco-editor/esm/vs/base/common/keyCodes.js';\nimport { toDisposable, dispose, combinedDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { assertIsDefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport './media/paneviewlet.css.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { createActionViewItem } from 'monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js';\nimport { MenuRegistry, MenuId, registerAction2, Action2, IMenuService } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { activeContrastBorder, asCssVariable } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { Themable, IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { CompositeMenuActions } from '../../actions.js';\nimport { CompositeDragAndDropObserver, toggleDropEffect } from '../../dnd.js';\nimport { Component } from '../../../common/component.js';\nimport { PANEL_SECTION_DRAG_AND_DROP_BACKGROUND, SIDE_BAR_DRAG_AND_DROP_BACKGROUND, PANEL_SECTION_HEADER_FOREGROUND, SIDE_BAR_SECTION_HEADER_FOREGROUND, PANEL_SECTION_HEADER_BACKGROUND, SIDE_BAR_SECTION_HEADER_BACKGROUND, PANEL_SECTION_HEADER_BORDER, SIDE_BAR_SECTION_HEADER_BORDER, PANEL_SECTION_BORDER } from '../../../common/theme.js';\nimport { ViewContainerLocationToString, IViewDescriptorService, ViewVisibilityState, IViewsService } from '../../../common/views.js';\nimport { FocusedViewContext } from '../../../common/contextkeys.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { IWorkbenchLayoutService } from '../../../services/layout/browser/layoutService.js';\nconst ViewsSubMenu = ( new MenuId('Views'));\nMenuRegistry.appendMenuItem(MenuId.ViewContainerTitle, {\n    submenu: ViewsSubMenu,\n    title: ( nls.localize('views', \"Views\")),\n    order: 1,\n    when: ( ContextKeyExpr.equals(\n        'viewContainerLocation',\n        ViewContainerLocationToString(0 )\n    )),\n});\nclass ViewPaneDropOverlay extends Themable {\n    static { this.OVERLAY_ID = 'monaco-pane-drop-overlay'; }\n    get currentDropOperation() {\n        return this._currentDropOperation;\n    }\n    constructor(paneElement, orientation, bounds, location, themeService) {\n        super(themeService);\n        this.paneElement = paneElement;\n        this.orientation = orientation;\n        this.bounds = bounds;\n        this.location = location;\n        this.cleanupOverlayScheduler = this._register(( new RunOnceScheduler(() => this.dispose(), 300)));\n        this.create();\n    }\n    get disposed() {\n        return !!this._disposed;\n    }\n    create() {\n        this.container = document.createElement('div');\n        this.container.id = ViewPaneDropOverlay.OVERLAY_ID;\n        this.container.style.top = '0px';\n        this.paneElement.appendChild(this.container);\n        this.paneElement.classList.add('dragged-over');\n        this._register(toDisposable(() => {\n            this.paneElement.removeChild(this.container);\n            this.paneElement.classList.remove('dragged-over');\n        }));\n        this.overlay = document.createElement('div');\n        this.overlay.classList.add('pane-overlay-indicator');\n        this.container.appendChild(this.overlay);\n        this.registerListeners();\n        this.updateStyles();\n    }\n    updateStyles() {\n        this.overlay.style.backgroundColor = this.getColor(this.location === 1  ? PANEL_SECTION_DRAG_AND_DROP_BACKGROUND : SIDE_BAR_DRAG_AND_DROP_BACKGROUND) || '';\n        const activeContrastBorderColor = this.getColor(activeContrastBorder);\n        this.overlay.style.outlineColor = activeContrastBorderColor || '';\n        this.overlay.style.outlineOffset = activeContrastBorderColor ? '-2px' : '';\n        this.overlay.style.outlineStyle = activeContrastBorderColor ? 'dashed' : '';\n        this.overlay.style.outlineWidth = activeContrastBorderColor ? '2px' : '';\n        this.overlay.style.borderColor = activeContrastBorderColor || '';\n        this.overlay.style.borderStyle = 'solid' ;\n        this.overlay.style.borderWidth = '0px';\n    }\n    registerListeners() {\n        this._register(( new DragAndDropObserver(this.container, {\n            onDragEnter: e => undefined,\n            onDragOver: e => {\n                this.positionOverlay(e.offsetX, e.offsetY);\n                if (this.cleanupOverlayScheduler.isScheduled()) {\n                    this.cleanupOverlayScheduler.cancel();\n                }\n            },\n            onDragLeave: e => this.dispose(),\n            onDragEnd: e => this.dispose(),\n            onDrop: e => {\n                this.dispose();\n            }\n        })));\n        this._register(addDisposableListener(this.container, EventType.MOUSE_OVER, () => {\n            if (!this.cleanupOverlayScheduler.isScheduled()) {\n                this.cleanupOverlayScheduler.schedule();\n            }\n        }));\n    }\n    positionOverlay(mousePosX, mousePosY) {\n        const paneWidth = this.paneElement.clientWidth;\n        const paneHeight = this.paneElement.clientHeight;\n        const splitWidthThreshold = paneWidth / 2;\n        const splitHeightThreshold = paneHeight / 2;\n        let dropDirection;\n        if (this.orientation === 0 ) {\n            if (mousePosY < splitHeightThreshold) {\n                dropDirection = 0 ;\n            }\n            else if (mousePosY >= splitHeightThreshold) {\n                dropDirection = 1 ;\n            }\n        }\n        else if (this.orientation === 1 ) {\n            if (mousePosX < splitWidthThreshold) {\n                dropDirection = 2 ;\n            }\n            else if (mousePosX >= splitWidthThreshold) {\n                dropDirection = 3 ;\n            }\n        }\n        switch (dropDirection) {\n            case 0 :\n                this.doPositionOverlay({ top: '0', left: '0', width: '100%', height: '50%' });\n                break;\n            case 1 :\n                this.doPositionOverlay({ bottom: '0', left: '0', width: '100%', height: '50%' });\n                break;\n            case 2 :\n                this.doPositionOverlay({ top: '0', left: '0', width: '50%', height: '100%' });\n                break;\n            case 3 :\n                this.doPositionOverlay({ top: '0', right: '0', width: '50%', height: '100%' });\n                break;\n            default: {\n                let top = '0';\n                let left = '0';\n                let width = '100%';\n                let height = '100%';\n                if (this.bounds) {\n                    const boundingRect = this.container.getBoundingClientRect();\n                    top = `${this.bounds.top - boundingRect.top}px`;\n                    left = `${this.bounds.left - boundingRect.left}px`;\n                    height = `${this.bounds.bottom - this.bounds.top}px`;\n                    width = `${this.bounds.right - this.bounds.left}px`;\n                }\n                this.doPositionOverlay({ top, left, width, height });\n            }\n        }\n        if ((this.orientation === 0  && paneHeight <= 25) ||\n            (this.orientation === 1  && paneWidth <= 25)) {\n            this.doUpdateOverlayBorder(dropDirection);\n        }\n        else {\n            this.doUpdateOverlayBorder(undefined);\n        }\n        this.overlay.style.opacity = '1';\n        setTimeout(() => this.overlay.classList.add('overlay-move-transition'), 0);\n        this._currentDropOperation = dropDirection;\n    }\n    doUpdateOverlayBorder(direction) {\n        this.overlay.style.borderTopWidth = direction === 0  ? '2px' : '0px';\n        this.overlay.style.borderLeftWidth = direction === 2  ? '2px' : '0px';\n        this.overlay.style.borderBottomWidth = direction === 1  ? '2px' : '0px';\n        this.overlay.style.borderRightWidth = direction === 3  ? '2px' : '0px';\n    }\n    doPositionOverlay(options) {\n        this.container.style.height = '100%';\n        this.overlay.style.top = options.top || '';\n        this.overlay.style.left = options.left || '';\n        this.overlay.style.bottom = options.bottom || '';\n        this.overlay.style.right = options.right || '';\n        this.overlay.style.width = options.width;\n        this.overlay.style.height = options.height;\n    }\n    contains(element) {\n        return element === this.container || element === this.overlay;\n    }\n    dispose() {\n        super.dispose();\n        this._disposed = true;\n    }\n}\nlet ViewContainerMenuActions = class ViewContainerMenuActions extends CompositeMenuActions {\n    constructor(element, viewContainer, viewDescriptorService, contextKeyService, menuService) {\n        const scopedContextKeyService = contextKeyService.createScoped(element);\n        scopedContextKeyService.createKey('viewContainer', viewContainer.id);\n        const viewContainerLocationKey = scopedContextKeyService.createKey('viewContainerLocation', ViewContainerLocationToString(viewDescriptorService.getViewContainerLocation(viewContainer)));\n        super(MenuId.ViewContainerTitle, MenuId.ViewContainerTitleContext, { shouldForwardArgs: true }, scopedContextKeyService, menuService);\n        this._register(scopedContextKeyService);\n        this._register(Event.filter(viewDescriptorService.onDidChangeContainerLocation, e => e.viewContainer === viewContainer)(() => viewContainerLocationKey.set(ViewContainerLocationToString(viewDescriptorService.getViewContainerLocation(viewContainer)))));\n    }\n};\nViewContainerMenuActions = ( __decorate([\n    ( __param(2, IViewDescriptorService)),\n    ( __param(3, IContextKeyService)),\n    ( __param(4, IMenuService))\n], ViewContainerMenuActions));\nlet ViewPaneContainer = class ViewPaneContainer extends Component {\n    get onDidSashChange() {\n        return assertIsDefined(this.paneview).onDidSashChange;\n    }\n    get panes() {\n        return ( this.paneItems.map(i => i.pane));\n    }\n    get views() {\n        return this.panes;\n    }\n    get length() {\n        return this.paneItems.length;\n    }\n    get menuActions() {\n        return this._menuActions;\n    }\n    constructor(id, options, instantiationService, configurationService, layoutService, contextMenuService, telemetryService, extensionService, themeService, storageService, contextService, viewDescriptorService) {\n        super(id, themeService, storageService);\n        this.options = options;\n        this.instantiationService = instantiationService;\n        this.configurationService = configurationService;\n        this.layoutService = layoutService;\n        this.contextMenuService = contextMenuService;\n        this.telemetryService = telemetryService;\n        this.extensionService = extensionService;\n        this.storageService = storageService;\n        this.contextService = contextService;\n        this.viewDescriptorService = viewDescriptorService;\n        this.paneItems = [];\n        this.visible = false;\n        this.areExtensionsReady = false;\n        this.didLayout = false;\n        this.viewDisposables = [];\n        this._onTitleAreaUpdate = this._register(( new Emitter()));\n        this.onTitleAreaUpdate = this._onTitleAreaUpdate.event;\n        this._onDidChangeVisibility = this._register(( new Emitter()));\n        this.onDidChangeVisibility = this._onDidChangeVisibility.event;\n        this._onDidAddViews = this._register(( new Emitter()));\n        this.onDidAddViews = this._onDidAddViews.event;\n        this._onDidRemoveViews = this._register(( new Emitter()));\n        this.onDidRemoveViews = this._onDidRemoveViews.event;\n        this._onDidChangeViewVisibility = this._register(( new Emitter()));\n        this.onDidChangeViewVisibility = this._onDidChangeViewVisibility.event;\n        this._onDidFocusView = this._register(( new Emitter()));\n        this.onDidFocusView = this._onDidFocusView.event;\n        this._onDidBlurView = this._register(( new Emitter()));\n        this.onDidBlurView = this._onDidBlurView.event;\n        const container = this.viewDescriptorService.getViewContainerById(id);\n        if (!container) {\n            throw new Error('Could not find container');\n        }\n        this.viewContainer = container;\n        this.visibleViewsStorageId = `${id}.numberOfVisibleViews`;\n        this.visibleViewsCountFromCache = this.storageService.getNumber(this.visibleViewsStorageId, 1 , undefined);\n        this._register(toDisposable(() => this.viewDisposables = dispose(this.viewDisposables)));\n        this.viewContainerModel = this.viewDescriptorService.getViewContainerModel(container);\n    }\n    create(parent) {\n        const options = this.options;\n        options.orientation = this.orientation;\n        this.paneview = this._register(( new PaneView(parent, this.options)));\n        if (this._boundarySashes) {\n            this.paneview.setBoundarySashes(this._boundarySashes);\n        }\n        this._register(this.paneview.onDidDrop(({ from, to }) => this.movePane(from, to)));\n        this._register(this.paneview.onDidScroll(_ => this.onDidScrollPane()));\n        this._register(this.paneview.onDidSashReset((index) => this.onDidSashReset(index)));\n        this._register(addDisposableListener(parent, EventType.CONTEXT_MENU, (e) => this.showContextMenu(( new StandardMouseEvent(e)))));\n        this._register(Gesture.addTarget(parent));\n        this._register(addDisposableListener(parent, EventType$1.Contextmenu, (e) => this.showContextMenu(( new StandardMouseEvent(e)))));\n        this._menuActions = this._register(this.instantiationService.createInstance(ViewContainerMenuActions, this.paneview.element, this.viewContainer));\n        this._register(this._menuActions.onDidChange(() => this.updateTitleArea()));\n        let overlay;\n        const getOverlayBounds = () => {\n            const fullSize = parent.getBoundingClientRect();\n            const lastPane = this.panes[this.panes.length - 1].element.getBoundingClientRect();\n            const top = this.orientation === 0  ? lastPane.bottom : fullSize.top;\n            const left = this.orientation === 1  ? lastPane.right : fullSize.left;\n            return {\n                top,\n                bottom: fullSize.bottom,\n                left,\n                right: fullSize.right,\n            };\n        };\n        const inBounds = (bounds, pos) => {\n            return pos.x >= bounds.left && pos.x <= bounds.right && pos.y >= bounds.top && pos.y <= bounds.bottom;\n        };\n        let bounds;\n        this._register(CompositeDragAndDropObserver.INSTANCE.registerTarget(parent, {\n            onDragEnter: (e) => {\n                bounds = getOverlayBounds();\n                if (overlay && overlay.disposed) {\n                    overlay = undefined;\n                }\n                if (!overlay && inBounds(bounds, e.eventData)) {\n                    const dropData = e.dragAndDropData.getData();\n                    if (dropData.type === 'view') {\n                        const oldViewContainer = this.viewDescriptorService.getViewContainerByViewId(dropData.id);\n                        const viewDescriptor = this.viewDescriptorService.getViewDescriptorById(dropData.id);\n                        if (oldViewContainer !== this.viewContainer && (!viewDescriptor || !viewDescriptor.canMoveView || this.viewContainer.rejectAddedViews)) {\n                            return;\n                        }\n                        overlay = ( new ViewPaneDropOverlay(\n                            parent,\n                            undefined,\n                            bounds,\n                            this.viewDescriptorService.getViewContainerLocation(this.viewContainer),\n                            this.themeService\n                        ));\n                    }\n                    if (dropData.type === 'composite' && dropData.id !== this.viewContainer.id) {\n                        const container = this.viewDescriptorService.getViewContainerById(dropData.id);\n                        const viewsToMove = this.viewDescriptorService.getViewContainerModel(container).allViewDescriptors;\n                        if (!( viewsToMove.some(v => !v.canMoveView)) && viewsToMove.length > 0) {\n                            overlay = ( new ViewPaneDropOverlay(\n                                parent,\n                                undefined,\n                                bounds,\n                                this.viewDescriptorService.getViewContainerLocation(this.viewContainer),\n                                this.themeService\n                            ));\n                        }\n                    }\n                }\n            },\n            onDragOver: (e) => {\n                if (overlay && overlay.disposed) {\n                    overlay = undefined;\n                }\n                if (overlay && !inBounds(bounds, e.eventData)) {\n                    overlay.dispose();\n                    overlay = undefined;\n                }\n                if (inBounds(bounds, e.eventData)) {\n                    toggleDropEffect(e.eventData.dataTransfer, 'move', overlay !== undefined);\n                }\n            },\n            onDragLeave: (e) => {\n                overlay?.dispose();\n                overlay = undefined;\n            },\n            onDrop: (e) => {\n                if (overlay) {\n                    const dropData = e.dragAndDropData.getData();\n                    const viewsToMove = [];\n                    if (dropData.type === 'composite' && dropData.id !== this.viewContainer.id) {\n                        const container = this.viewDescriptorService.getViewContainerById(dropData.id);\n                        const allViews = this.viewDescriptorService.getViewContainerModel(container).allViewDescriptors;\n                        if (!( allViews.some(v => !v.canMoveView))) {\n                            viewsToMove.push(...allViews);\n                        }\n                    }\n                    else if (dropData.type === 'view') {\n                        const oldViewContainer = this.viewDescriptorService.getViewContainerByViewId(dropData.id);\n                        const viewDescriptor = this.viewDescriptorService.getViewDescriptorById(dropData.id);\n                        if (oldViewContainer !== this.viewContainer && viewDescriptor && viewDescriptor.canMoveView) {\n                            this.viewDescriptorService.moveViewsToContainer([viewDescriptor], this.viewContainer);\n                        }\n                    }\n                    const paneCount = this.panes.length;\n                    if (viewsToMove.length > 0) {\n                        this.viewDescriptorService.moveViewsToContainer(viewsToMove, this.viewContainer);\n                    }\n                    if (paneCount > 0) {\n                        for (const view of viewsToMove) {\n                            const paneToMove = this.panes.find(p => p.id === view.id);\n                            if (paneToMove) {\n                                this.movePane(paneToMove, this.panes[this.panes.length - 1]);\n                            }\n                        }\n                    }\n                }\n                overlay?.dispose();\n                overlay = undefined;\n            }\n        }));\n        this._register(this.onDidSashChange(() => this.saveViewSizes()));\n        this._register(this.viewContainerModel.onDidAddVisibleViewDescriptors(added => this.onDidAddViewDescriptors(added)));\n        this._register(this.viewContainerModel.onDidRemoveVisibleViewDescriptors(removed => this.onDidRemoveViewDescriptors(removed)));\n        const addedViews = ( this.viewContainerModel.visibleViewDescriptors.map((viewDescriptor, index) => {\n            const size = this.viewContainerModel.getSize(viewDescriptor.id);\n            const collapsed = this.viewContainerModel.isCollapsed(viewDescriptor.id);\n            return ({ viewDescriptor, index, size, collapsed });\n        }));\n        if (addedViews.length) {\n            this.onDidAddViewDescriptors(addedViews);\n        }\n        this.extensionService.whenInstalledExtensionsRegistered().then(() => {\n            this.areExtensionsReady = true;\n            if (this.panes.length) {\n                this.updateTitleArea();\n                this.updateViewHeaders();\n            }\n        });\n        this._register(this.viewContainerModel.onDidChangeActiveViewDescriptors(() => this._onTitleAreaUpdate.fire()));\n    }\n    getTitle() {\n        const containerTitle = this.viewContainerModel.title;\n        if (this.isViewMergedWithContainer()) {\n            const paneItemTitle = this.paneItems[0].pane.title;\n            if (containerTitle === paneItemTitle) {\n                return this.paneItems[0].pane.title;\n            }\n            return paneItemTitle ? `${containerTitle}: ${paneItemTitle}` : containerTitle;\n        }\n        return containerTitle;\n    }\n    showContextMenu(event) {\n        for (const paneItem of this.paneItems) {\n            if (isAncestor(event.target, paneItem.pane.element)) {\n                return;\n            }\n        }\n        event.stopPropagation();\n        event.preventDefault();\n        this.contextMenuService.showContextMenu({\n            getAnchor: () => event,\n            getActions: () => this.menuActions?.getContextMenuActions() ?? []\n        });\n    }\n    getActionsContext() {\n        return undefined;\n    }\n    getActionViewItem(action) {\n        if (this.isViewMergedWithContainer()) {\n            return this.paneItems[0].pane.getActionViewItem(action);\n        }\n        return createActionViewItem(this.instantiationService, action);\n    }\n    focus() {\n        if (this.lastFocusedPane) {\n            this.lastFocusedPane.focus();\n        }\n        else if (this.paneItems.length > 0) {\n            for (const { pane: pane } of this.paneItems) {\n                if (pane.isExpanded()) {\n                    pane.focus();\n                    return;\n                }\n            }\n        }\n    }\n    get orientation() {\n        switch (this.viewDescriptorService.getViewContainerLocation(this.viewContainer)) {\n            case 0 :\n            case 2 :\n                return 0 ;\n            case 1 :\n                return this.layoutService.getPanelPosition() === 2  ? 1  : 0 ;\n        }\n        return 0 ;\n    }\n    layout(dimension) {\n        if (this.paneview) {\n            if (this.paneview.orientation !== this.orientation) {\n                this.paneview.flipOrientation(dimension.height, dimension.width);\n            }\n            this.paneview.layout(dimension.height, dimension.width);\n        }\n        this.dimension = dimension;\n        if (this.didLayout) {\n            this.saveViewSizes();\n        }\n        else {\n            this.didLayout = true;\n            this.restoreViewSizes();\n        }\n    }\n    setBoundarySashes(sashes) {\n        this._boundarySashes = sashes;\n        this.paneview?.setBoundarySashes(sashes);\n    }\n    getOptimalWidth() {\n        const additionalMargin = 16;\n        const optimalWidth = Math.max(...( this.panes.map(view => view.getOptimalWidth() || 0)));\n        return optimalWidth + additionalMargin;\n    }\n    addPanes(panes) {\n        const wasMerged = this.isViewMergedWithContainer();\n        for (const { pane: pane, size, index } of panes) {\n            this.addPane(pane, size, index);\n        }\n        this.updateViewHeaders();\n        if (this.isViewMergedWithContainer() !== wasMerged) {\n            this.updateTitleArea();\n        }\n        this._onDidAddViews.fire(( panes.map(({ pane }) => pane)));\n    }\n    setVisible(visible) {\n        if (this.visible !== !!visible) {\n            this.visible = visible;\n            this._onDidChangeVisibility.fire(visible);\n        }\n        this.panes.filter(view => view.isVisible() !== visible)\n            .forEach((view) => view.setVisible(visible));\n    }\n    isVisible() {\n        return this.visible;\n    }\n    updateTitleArea() {\n        this._onTitleAreaUpdate.fire();\n    }\n    createView(viewDescriptor, options) {\n        return this.instantiationService.createInstance(viewDescriptor.ctorDescriptor.ctor, ...(viewDescriptor.ctorDescriptor.staticArguments || []), options);\n    }\n    getView(id) {\n        return this.panes.filter(view => view.id === id)[0];\n    }\n    saveViewSizes() {\n        if (this.didLayout) {\n            this.viewContainerModel.setSizes(( this.panes.map(view => ({ id: view.id, size: this.getPaneSize(view) }))));\n        }\n    }\n    restoreViewSizes() {\n        if (this.didLayout) {\n            let initialSizes;\n            for (let i = 0; i < this.viewContainerModel.visibleViewDescriptors.length; i++) {\n                const pane = this.panes[i];\n                const viewDescriptor = this.viewContainerModel.visibleViewDescriptors[i];\n                const size = this.viewContainerModel.getSize(viewDescriptor.id);\n                if (typeof size === 'number') {\n                    this.resizePane(pane, size);\n                }\n                else {\n                    initialSizes = initialSizes ? initialSizes : this.computeInitialSizes();\n                    this.resizePane(pane, initialSizes.get(pane.id) || 200);\n                }\n            }\n        }\n    }\n    computeInitialSizes() {\n        const sizes = ( new Map());\n        if (this.dimension) {\n            const totalWeight = this.viewContainerModel.visibleViewDescriptors.reduce((totalWeight, { weight }) => totalWeight + (weight || 20), 0);\n            for (const viewDescriptor of this.viewContainerModel.visibleViewDescriptors) {\n                if (this.orientation === 0 ) {\n                    sizes.set(viewDescriptor.id, this.dimension.height * (viewDescriptor.weight || 20) / totalWeight);\n                }\n                else {\n                    sizes.set(viewDescriptor.id, this.dimension.width * (viewDescriptor.weight || 20) / totalWeight);\n                }\n            }\n        }\n        return sizes;\n    }\n    saveState() {\n        this.panes.forEach((view) => view.saveState());\n        this.storageService.store(this.visibleViewsStorageId, this.length, 1 , 1 );\n    }\n    onContextMenu(event, viewPane) {\n        event.stopPropagation();\n        event.preventDefault();\n        const actions = viewPane.menuActions.getContextMenuActions();\n        this.contextMenuService.showContextMenu({\n            getAnchor: () => event,\n            getActions: () => actions\n        });\n    }\n    openView(id, focus) {\n        let view = this.getView(id);\n        if (!view) {\n            this.toggleViewVisibility(id);\n        }\n        view = this.getView(id);\n        if (view) {\n            view.setExpanded(true);\n            if (focus) {\n                view.focus();\n            }\n        }\n        return view;\n    }\n    onDidAddViewDescriptors(added) {\n        const panesToAdd = [];\n        for (const { viewDescriptor, collapsed, index, size } of added) {\n            const pane = this.createView(viewDescriptor, {\n                id: viewDescriptor.id,\n                title: viewDescriptor.name,\n                fromExtensionId: viewDescriptor.extensionId,\n                expanded: !collapsed\n            });\n            pane.render();\n            const contextMenuDisposable = addDisposableListener(pane.draggableElement, 'contextmenu', e => {\n                e.stopPropagation();\n                e.preventDefault();\n                this.onContextMenu(( new StandardMouseEvent(e)), pane);\n            });\n            const collapseDisposable = Event.latch(( Event.map(pane.onDidChange, () => !pane.isExpanded())))(collapsed => {\n                this.viewContainerModel.setCollapsed(viewDescriptor.id, collapsed);\n            });\n            this.viewDisposables.splice(index, 0, combinedDisposable(contextMenuDisposable, collapseDisposable));\n            panesToAdd.push({ pane, size: size || pane.minimumSize, index });\n        }\n        this.addPanes(panesToAdd);\n        this.restoreViewSizes();\n        const panes = [];\n        for (const { pane } of panesToAdd) {\n            pane.setVisible(this.isVisible());\n            panes.push(pane);\n        }\n        return panes;\n    }\n    onDidRemoveViewDescriptors(removed) {\n        removed = removed.sort((a, b) => b.index - a.index);\n        const panesToRemove = [];\n        for (const { index } of removed) {\n            const [disposable] = this.viewDisposables.splice(index, 1);\n            disposable.dispose();\n            panesToRemove.push(this.panes[index]);\n        }\n        this.removePanes(panesToRemove);\n        for (const pane of panesToRemove) {\n            pane.setVisible(false);\n        }\n    }\n    toggleViewVisibility(viewId) {\n        if (( this.viewContainerModel.activeViewDescriptors.some(viewDescriptor => viewDescriptor.id === viewId))) {\n            const visible = !this.viewContainerModel.isVisible(viewId);\n            this.viewContainerModel.setVisible(viewId, visible);\n        }\n    }\n    addPane(pane, size, index = this.paneItems.length - 1) {\n        const onDidFocus = pane.onDidFocus(() => {\n            this._onDidFocusView.fire(pane);\n            this.lastFocusedPane = pane;\n        });\n        const onDidBlur = pane.onDidBlur(() => this._onDidBlurView.fire(pane));\n        const onDidChangeTitleArea = pane.onDidChangeTitleArea(() => {\n            if (this.isViewMergedWithContainer()) {\n                this.updateTitleArea();\n            }\n        });\n        const onDidChangeVisibility = pane.onDidChangeBodyVisibility(() => this._onDidChangeViewVisibility.fire(pane));\n        const onDidChange = pane.onDidChange(() => {\n            if (pane === this.lastFocusedPane && !pane.isExpanded()) {\n                this.lastFocusedPane = undefined;\n            }\n        });\n        const isPanel = this.viewDescriptorService.getViewContainerLocation(this.viewContainer) === 1 ;\n        pane.style({\n            headerForeground: asCssVariable(isPanel ? PANEL_SECTION_HEADER_FOREGROUND : SIDE_BAR_SECTION_HEADER_FOREGROUND),\n            headerBackground: asCssVariable(isPanel ? PANEL_SECTION_HEADER_BACKGROUND : SIDE_BAR_SECTION_HEADER_BACKGROUND),\n            headerBorder: asCssVariable(isPanel ? PANEL_SECTION_HEADER_BORDER : SIDE_BAR_SECTION_HEADER_BORDER),\n            dropBackground: asCssVariable(isPanel ? PANEL_SECTION_DRAG_AND_DROP_BACKGROUND : SIDE_BAR_DRAG_AND_DROP_BACKGROUND),\n            leftBorder: isPanel ? asCssVariable(PANEL_SECTION_BORDER) : undefined\n        });\n        const disposable = combinedDisposable(pane, onDidFocus, onDidBlur, onDidChangeTitleArea, onDidChange, onDidChangeVisibility);\n        const paneItem = { pane, disposable };\n        this.paneItems.splice(index, 0, paneItem);\n        assertIsDefined(this.paneview).addPane(pane, size, index);\n        let overlay;\n        this._register(CompositeDragAndDropObserver.INSTANCE.registerDraggable(pane.draggableElement, () => { return { type: 'view', id: pane.id }; }, {}));\n        this._register(CompositeDragAndDropObserver.INSTANCE.registerTarget(pane.dropTargetElement, {\n            onDragEnter: (e) => {\n                if (!overlay) {\n                    const dropData = e.dragAndDropData.getData();\n                    if (dropData.type === 'view' && dropData.id !== pane.id) {\n                        const oldViewContainer = this.viewDescriptorService.getViewContainerByViewId(dropData.id);\n                        const viewDescriptor = this.viewDescriptorService.getViewDescriptorById(dropData.id);\n                        if (oldViewContainer !== this.viewContainer && (!viewDescriptor || !viewDescriptor.canMoveView || this.viewContainer.rejectAddedViews)) {\n                            return;\n                        }\n                        overlay = ( new ViewPaneDropOverlay(\n                            pane.dropTargetElement,\n                            this.orientation ?? 0 ,\n                            undefined,\n                            this.viewDescriptorService.getViewContainerLocation(this.viewContainer),\n                            this.themeService\n                        ));\n                    }\n                    if (dropData.type === 'composite' && dropData.id !== this.viewContainer.id && !this.viewContainer.rejectAddedViews) {\n                        const container = this.viewDescriptorService.getViewContainerById(dropData.id);\n                        const viewsToMove = this.viewDescriptorService.getViewContainerModel(container).allViewDescriptors;\n                        if (!( viewsToMove.some(v => !v.canMoveView)) && viewsToMove.length > 0) {\n                            overlay = ( new ViewPaneDropOverlay(\n                                pane.dropTargetElement,\n                                this.orientation ?? 0 ,\n                                undefined,\n                                this.viewDescriptorService.getViewContainerLocation(this.viewContainer),\n                                this.themeService\n                            ));\n                        }\n                    }\n                }\n            },\n            onDragOver: (e) => {\n                toggleDropEffect(e.eventData.dataTransfer, 'move', overlay !== undefined);\n            },\n            onDragLeave: (e) => {\n                overlay?.dispose();\n                overlay = undefined;\n            },\n            onDrop: (e) => {\n                if (overlay) {\n                    const dropData = e.dragAndDropData.getData();\n                    const viewsToMove = [];\n                    let anchorView;\n                    if (dropData.type === 'composite' && dropData.id !== this.viewContainer.id && !this.viewContainer.rejectAddedViews) {\n                        const container = this.viewDescriptorService.getViewContainerById(dropData.id);\n                        const allViews = this.viewDescriptorService.getViewContainerModel(container).allViewDescriptors;\n                        if (allViews.length > 0 && !( allViews.some(v => !v.canMoveView))) {\n                            viewsToMove.push(...allViews);\n                            anchorView = allViews[0];\n                        }\n                    }\n                    else if (dropData.type === 'view') {\n                        const oldViewContainer = this.viewDescriptorService.getViewContainerByViewId(dropData.id);\n                        const viewDescriptor = this.viewDescriptorService.getViewDescriptorById(dropData.id);\n                        if (oldViewContainer !== this.viewContainer && viewDescriptor && viewDescriptor.canMoveView && !this.viewContainer.rejectAddedViews) {\n                            viewsToMove.push(viewDescriptor);\n                        }\n                        if (viewDescriptor) {\n                            anchorView = viewDescriptor;\n                        }\n                    }\n                    if (viewsToMove) {\n                        this.viewDescriptorService.moveViewsToContainer(viewsToMove, this.viewContainer);\n                    }\n                    if (anchorView) {\n                        if (overlay.currentDropOperation === 1  ||\n                            overlay.currentDropOperation === 3 ) {\n                            const fromIndex = this.panes.findIndex(p => p.id === anchorView.id);\n                            let toIndex = this.panes.findIndex(p => p.id === pane.id);\n                            if (fromIndex >= 0 && toIndex >= 0) {\n                                if (fromIndex > toIndex) {\n                                    toIndex++;\n                                }\n                                if (toIndex < this.panes.length && toIndex !== fromIndex) {\n                                    this.movePane(this.panes[fromIndex], this.panes[toIndex]);\n                                }\n                            }\n                        }\n                        if (overlay.currentDropOperation === 0  ||\n                            overlay.currentDropOperation === 2 ) {\n                            const fromIndex = this.panes.findIndex(p => p.id === anchorView.id);\n                            let toIndex = this.panes.findIndex(p => p.id === pane.id);\n                            if (fromIndex >= 0 && toIndex >= 0) {\n                                if (fromIndex < toIndex) {\n                                    toIndex--;\n                                }\n                                if (toIndex >= 0 && toIndex !== fromIndex) {\n                                    this.movePane(this.panes[fromIndex], this.panes[toIndex]);\n                                }\n                            }\n                        }\n                        if (viewsToMove.length > 1) {\n                            viewsToMove.slice(1).forEach(view => {\n                                let toIndex = this.panes.findIndex(p => p.id === anchorView.id);\n                                const fromIndex = this.panes.findIndex(p => p.id === view.id);\n                                if (fromIndex >= 0 && toIndex >= 0) {\n                                    if (fromIndex > toIndex) {\n                                        toIndex++;\n                                    }\n                                    if (toIndex < this.panes.length && toIndex !== fromIndex) {\n                                        this.movePane(this.panes[fromIndex], this.panes[toIndex]);\n                                        anchorView = view;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                }\n                overlay?.dispose();\n                overlay = undefined;\n            }\n        }));\n    }\n    removePanes(panes) {\n        const wasMerged = this.isViewMergedWithContainer();\n        panes.forEach(pane => this.removePane(pane));\n        this.updateViewHeaders();\n        if (wasMerged !== this.isViewMergedWithContainer()) {\n            this.updateTitleArea();\n        }\n        this._onDidRemoveViews.fire(panes);\n    }\n    removePane(pane) {\n        const index = this.paneItems.findIndex(i => i.pane === pane);\n        if (index === -1) {\n            return;\n        }\n        if (this.lastFocusedPane === pane) {\n            this.lastFocusedPane = undefined;\n        }\n        assertIsDefined(this.paneview).removePane(pane);\n        const [paneItem] = this.paneItems.splice(index, 1);\n        paneItem.disposable.dispose();\n    }\n    movePane(from, to) {\n        const fromIndex = this.paneItems.findIndex(item => item.pane === from);\n        const toIndex = this.paneItems.findIndex(item => item.pane === to);\n        const fromViewDescriptor = this.viewContainerModel.visibleViewDescriptors[fromIndex];\n        const toViewDescriptor = this.viewContainerModel.visibleViewDescriptors[toIndex];\n        if (fromIndex < 0 || fromIndex >= this.paneItems.length) {\n            return;\n        }\n        if (toIndex < 0 || toIndex >= this.paneItems.length) {\n            return;\n        }\n        const [paneItem] = this.paneItems.splice(fromIndex, 1);\n        this.paneItems.splice(toIndex, 0, paneItem);\n        assertIsDefined(this.paneview).movePane(from, to);\n        this.viewContainerModel.move(fromViewDescriptor.id, toViewDescriptor.id);\n        this.updateTitleArea();\n    }\n    resizePane(pane, size) {\n        assertIsDefined(this.paneview).resizePane(pane, size);\n    }\n    getPaneSize(pane) {\n        return assertIsDefined(this.paneview).getPaneSize(pane);\n    }\n    updateViewHeaders() {\n        if (this.isViewMergedWithContainer()) {\n            if (this.paneItems[0].pane.isExpanded()) {\n                this.lastMergedCollapsedPane = undefined;\n            }\n            else {\n                this.lastMergedCollapsedPane = this.paneItems[0].pane;\n                this.paneItems[0].pane.setExpanded(true);\n            }\n            this.paneItems[0].pane.headerVisible = false;\n        }\n        else {\n            this.paneItems.forEach(i => {\n                i.pane.headerVisible = true;\n                if (i.pane === this.lastMergedCollapsedPane) {\n                    i.pane.setExpanded(false);\n                }\n            });\n            this.lastMergedCollapsedPane = undefined;\n        }\n    }\n    isViewMergedWithContainer() {\n        if (!(this.options.mergeViewWithContainerWhenSingleView && this.paneItems.length === 1)) {\n            return false;\n        }\n        if (!this.areExtensionsReady) {\n            if (this.visibleViewsCountFromCache === undefined) {\n                return this.paneItems[0].pane.isExpanded();\n            }\n            return this.visibleViewsCountFromCache === 1;\n        }\n        return true;\n    }\n    onDidScrollPane() {\n        for (const pane of this.panes) {\n            pane.onDidScrollRoot();\n        }\n    }\n    onDidSashReset(index) {\n        let firstPane = undefined;\n        let secondPane = undefined;\n        for (let i = index; i >= 0; i--) {\n            if (this.paneItems[i].pane?.isVisible() && this.paneItems[i]?.pane.isExpanded()) {\n                firstPane = this.paneItems[i].pane;\n                break;\n            }\n        }\n        for (let i = index + 1; i < this.paneItems.length; i++) {\n            if (this.paneItems[i].pane?.isVisible() && this.paneItems[i]?.pane.isExpanded()) {\n                secondPane = this.paneItems[i].pane;\n                break;\n            }\n        }\n        if (firstPane && secondPane) {\n            const firstPaneSize = this.getPaneSize(firstPane);\n            const secondPaneSize = this.getPaneSize(secondPane);\n            const newFirstPaneSize = Math.ceil((firstPaneSize + secondPaneSize) / 2);\n            const newSecondPaneSize = Math.floor((firstPaneSize + secondPaneSize) / 2);\n            if (firstPaneSize > secondPaneSize) {\n                this.resizePane(firstPane, newFirstPaneSize);\n                this.resizePane(secondPane, newSecondPaneSize);\n            }\n            else {\n                this.resizePane(secondPane, newSecondPaneSize);\n                this.resizePane(firstPane, newFirstPaneSize);\n            }\n        }\n    }\n    dispose() {\n        super.dispose();\n        this.paneItems.forEach(i => i.disposable.dispose());\n        if (this.paneview) {\n            this.paneview.dispose();\n        }\n    }\n};\nViewPaneContainer = ( __decorate([\n    ( __param(2, IInstantiationService)),\n    ( __param(3, IConfigurationService)),\n    ( __param(4, IWorkbenchLayoutService)),\n    ( __param(5, IContextMenuService)),\n    ( __param(6, ITelemetryService)),\n    ( __param(7, IExtensionService)),\n    ( __param(8, IThemeService)),\n    ( __param(9, IStorageService)),\n    ( __param(10, IWorkspaceContextService)),\n    ( __param(11, IViewDescriptorService))\n], ViewPaneContainer));\nclass ViewPaneContainerAction extends Action2 {\n    constructor(desc) {\n        super(desc);\n        this.desc = desc;\n    }\n    run(accessor, ...args) {\n        const viewPaneContainer = accessor.get(IViewsService).getActiveViewPaneContainerWithId(this.desc.viewPaneContainerId);\n        if (viewPaneContainer) {\n            return this.runInViewPaneContainer(accessor, viewPaneContainer, ...args);\n        }\n    }\n}\nclass MoveViewPosition extends Action2 {\n    constructor(desc, offset) {\n        super(desc);\n        this.offset = offset;\n    }\n    async run(accessor) {\n        const viewDescriptorService = accessor.get(IViewDescriptorService);\n        const contextKeyService = accessor.get(IContextKeyService);\n        const viewId = FocusedViewContext.getValue(contextKeyService);\n        if (viewId === undefined) {\n            return;\n        }\n        const viewContainer = viewDescriptorService.getViewContainerByViewId(viewId);\n        const model = viewDescriptorService.getViewContainerModel(viewContainer);\n        const viewDescriptor = model.visibleViewDescriptors.find(vd => vd.id === viewId);\n        const currentIndex = model.visibleViewDescriptors.indexOf(viewDescriptor);\n        if (currentIndex + this.offset < 0 || currentIndex + this.offset >= model.visibleViewDescriptors.length) {\n            return;\n        }\n        const newPosition = model.visibleViewDescriptors[currentIndex + this.offset];\n        model.move(viewDescriptor.id, newPosition.id);\n    }\n}\nregisterAction2(class MoveViewUp extends MoveViewPosition {\n    constructor() {\n        super({\n            id: 'views.moveViewUp',\n            title: ( nls.localize('viewMoveUp', \"Move View Up\")),\n            keybinding: {\n                primary: KeyChord(2048  + 41 , 16 ),\n                weight: 200  + 1,\n                when: ( FocusedViewContext.notEqualsTo(''))\n            }\n        }, -1);\n    }\n});\nregisterAction2(class MoveViewLeft extends MoveViewPosition {\n    constructor() {\n        super({\n            id: 'views.moveViewLeft',\n            title: ( nls.localize('viewMoveLeft', \"Move View Left\")),\n            keybinding: {\n                primary: KeyChord(2048  + 41 , 15 ),\n                weight: 200  + 1,\n                when: ( FocusedViewContext.notEqualsTo(''))\n            }\n        }, -1);\n    }\n});\nregisterAction2(class MoveViewDown extends MoveViewPosition {\n    constructor() {\n        super({\n            id: 'views.moveViewDown',\n            title: ( nls.localize('viewMoveDown', \"Move View Down\")),\n            keybinding: {\n                primary: KeyChord(2048  + 41 , 18 ),\n                weight: 200  + 1,\n                when: ( FocusedViewContext.notEqualsTo(''))\n            }\n        }, 1);\n    }\n});\nregisterAction2(class MoveViewRight extends MoveViewPosition {\n    constructor() {\n        super({\n            id: 'views.moveViewRight',\n            title: ( nls.localize('viewMoveRight', \"Move View Right\")),\n            keybinding: {\n                primary: KeyChord(2048  + 41 , 17 ),\n                weight: 200  + 1,\n                when: ( FocusedViewContext.notEqualsTo(''))\n            }\n        }, 1);\n    }\n});\nregisterAction2(class MoveViews extends Action2 {\n    constructor() {\n        super({\n            id: 'vscode.moveViews',\n            title: ( nls.localize('viewsMove', \"Move Views\")),\n        });\n    }\n    async run(accessor, options) {\n        if (!Array.isArray(options?.viewIds) || typeof options?.destinationId !== 'string') {\n            return Promise.reject('Invalid arguments');\n        }\n        const viewDescriptorService = accessor.get(IViewDescriptorService);\n        const destination = viewDescriptorService.getViewContainerById(options.destinationId);\n        if (!destination) {\n            return;\n        }\n        for (const viewId of options.viewIds) {\n            const viewDescriptor = viewDescriptorService.getViewDescriptorById(viewId);\n            if (viewDescriptor?.canMoveView) {\n                viewDescriptorService.moveViewsToContainer([viewDescriptor], destination, ViewVisibilityState.Default);\n            }\n        }\n        await accessor.get(IViewsService).openViewContainer(destination.id, true);\n    }\n});\nexport { ViewPaneContainer, ViewPaneContainerAction, ViewsSubMenu };\n", "import { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { IWorkspaceContextService, hasWorkspaceFileExtension } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { IWorkspaceEditingService } from '../../services/workspaces/common/workspaceEditing.js';\nimport { IEditorService } from '../../services/editor/common/editorService.js';\nimport { ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { SET_ROOT_FOLDER_COMMAND_ID, ADD_ROOT_FOLDER_LABEL, ADD_ROOT_FOLDER_COMMAND_ID, PICK_WORKSPACE_FOLDER_COMMAND_ID } from './workspaceCommands.js';\nimport '../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { Action2 } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { OpenFolderWorkspaceSupportContext, WorkbenchStateContext, EnterMultiRootWorkspaceSupportContext, EmptyWorkspaceSupportContext, WorkspaceFolderCountContext } from '../../common/contextkeys.js';\nimport { IHostService } from '../../services/host/browser/host.js';\nimport { KeyChord } from 'monaco-editor/esm/vs/base/common/keyCodes.js';\nimport { ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IWorkbenchEnvironmentService } from '../../services/environment/common/environmentService.js';\nimport { IWorkspacesService } from '../../../platform/workspaces/common/workspaces.js';\nimport { IsMacNativeContext } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkeys.js';\nimport { Categories } from 'monaco-editor/esm/vs/platform/action/common/actionCommonCategories.js';\nimport { IFileDialogService } from '../../../platform/dialogs/common/dialogs.js';\nconst workspacesCategory = { value: ( localize('workspaces', \"Workspaces\")), original: 'Workspaces' };\nclass OpenFileAction extends Action2 {\n    static { this.ID = 'workbench.action.files.openFile'; }\n    constructor() {\n        super({\n            id: OpenFileAction.ID,\n            title: { value: ( localize('openFile', \"Open File...\")), original: 'Open File...' },\n            category: Categories.File,\n            f1: true,\n            precondition: ( IsMacNativeContext.toNegated()),\n            keybinding: {\n                weight: 200 ,\n                primary: 2048  | 45\n            }\n        });\n    }\n    async run(accessor, data) {\n        const fileDialogService = accessor.get(IFileDialogService);\n        return fileDialogService.pickFileAndOpen({ forceNewWindow: false, telemetryExtraData: data });\n    }\n}\nclass OpenFolderAction extends Action2 {\n    static { this.ID = 'workbench.action.files.openFolder'; }\n    constructor() {\n        super({\n            id: OpenFolderAction.ID,\n            title: { value: ( localize('openFolder', \"Open Folder...\")), original: 'Open Folder...' },\n            category: Categories.File,\n            f1: true,\n            precondition: OpenFolderWorkspaceSupportContext,\n            keybinding: {\n                weight: 200 ,\n                primary: undefined,\n                linux: {\n                    primary: KeyChord(2048  | 41 , 2048  | 45 )\n                },\n                win: {\n                    primary: KeyChord(2048  | 41 , 2048  | 45 )\n                }\n            }\n        });\n    }\n    async run(accessor, data) {\n        const fileDialogService = accessor.get(IFileDialogService);\n        return fileDialogService.pickFolderAndOpen({ forceNewWindow: false, telemetryExtraData: data });\n    }\n}\nclass OpenFolderViaWorkspaceAction extends Action2 {\n    static { this.ID = 'workbench.action.files.openFolderViaWorkspace'; }\n    constructor() {\n        super({\n            id: OpenFolderViaWorkspaceAction.ID,\n            title: { value: ( localize('openFolder', \"Open Folder...\")), original: 'Open Folder...' },\n            category: Categories.File,\n            f1: true,\n            precondition: ( ContextKeyExpr.and(( OpenFolderWorkspaceSupportContext.toNegated()), ( WorkbenchStateContext.isEqualTo('workspace')))),\n            keybinding: {\n                weight: 200 ,\n                primary: 2048  | 45\n            }\n        });\n    }\n    run(accessor) {\n        const commandService = accessor.get(ICommandService);\n        return commandService.executeCommand(SET_ROOT_FOLDER_COMMAND_ID);\n    }\n}\nclass OpenFileFolderAction extends Action2 {\n    static { this.ID = 'workbench.action.files.openFileFolder'; }\n    static { this.LABEL = { value: ( localize('openFileFolder', \"Open...\")), original: 'Open...' }; }\n    constructor() {\n        super({\n            id: OpenFileFolderAction.ID,\n            title: OpenFileFolderAction.LABEL,\n            category: Categories.File,\n            f1: true,\n            precondition: ( ContextKeyExpr.and(IsMacNativeContext, OpenFolderWorkspaceSupportContext)),\n            keybinding: {\n                weight: 200 ,\n                primary: 2048  | 45\n            }\n        });\n    }\n    async run(accessor, data) {\n        const fileDialogService = accessor.get(IFileDialogService);\n        return fileDialogService.pickFileFolderAndOpen({ forceNewWindow: false, telemetryExtraData: data });\n    }\n}\nclass OpenWorkspaceAction extends Action2 {\n    static { this.ID = 'workbench.action.openWorkspace'; }\n    constructor() {\n        super({\n            id: OpenWorkspaceAction.ID,\n            title: { value: ( localize('openWorkspaceAction', \"Open Workspace from File...\")), original: 'Open Workspace from File...' },\n            category: Categories.File,\n            f1: true,\n            precondition: EnterMultiRootWorkspaceSupportContext\n        });\n    }\n    async run(accessor, data) {\n        const fileDialogService = accessor.get(IFileDialogService);\n        return fileDialogService.pickWorkspaceAndOpen({ telemetryExtraData: data });\n    }\n}\nclass CloseWorkspaceAction extends Action2 {\n    static { this.ID = 'workbench.action.closeFolder'; }\n    constructor() {\n        super({\n            id: CloseWorkspaceAction.ID,\n            title: { value: ( localize('closeWorkspace', \"Close Workspace\")), original: 'Close Workspace' },\n            category: workspacesCategory,\n            f1: true,\n            precondition: ( ContextKeyExpr.and(( WorkbenchStateContext.notEqualsTo('empty')), EmptyWorkspaceSupportContext)),\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 36 )\n            }\n        });\n    }\n    async run(accessor) {\n        const hostService = accessor.get(IHostService);\n        const environmentService = accessor.get(IWorkbenchEnvironmentService);\n        return hostService.openWindow({ forceReuseWindow: true, remoteAuthority: environmentService.remoteAuthority });\n    }\n}\nclass OpenWorkspaceConfigFileAction extends Action2 {\n    static { this.ID = 'workbench.action.openWorkspaceConfigFile'; }\n    constructor() {\n        super({\n            id: OpenWorkspaceConfigFileAction.ID,\n            title: { value: ( localize('openWorkspaceConfigFile', \"Open Workspace Configuration File\")), original: 'Open Workspace Configuration File' },\n            category: workspacesCategory,\n            f1: true,\n            precondition: ( WorkbenchStateContext.isEqualTo('workspace'))\n        });\n    }\n    async run(accessor) {\n        const contextService = accessor.get(IWorkspaceContextService);\n        const editorService = accessor.get(IEditorService);\n        const configuration = contextService.getWorkspace().configuration;\n        if (configuration) {\n            await editorService.openEditor({ resource: configuration, options: { pinned: true } });\n        }\n    }\n}\nclass AddRootFolderAction extends Action2 {\n    static { this.ID = 'workbench.action.addRootFolder'; }\n    constructor() {\n        super({\n            id: AddRootFolderAction.ID,\n            title: ADD_ROOT_FOLDER_LABEL,\n            category: workspacesCategory,\n            f1: true,\n            precondition: ( ContextKeyExpr.or(EnterMultiRootWorkspaceSupportContext, ( WorkbenchStateContext.isEqualTo('workspace'))))\n        });\n    }\n    run(accessor) {\n        const commandService = accessor.get(ICommandService);\n        return commandService.executeCommand(ADD_ROOT_FOLDER_COMMAND_ID);\n    }\n}\nclass RemoveRootFolderAction extends Action2 {\n    static { this.ID = 'workbench.action.removeRootFolder'; }\n    constructor() {\n        super({\n            id: RemoveRootFolderAction.ID,\n            title: { value: ( localize('globalRemoveFolderFromWorkspace', \"Remove Folder from Workspace...\")), original: 'Remove Folder from Workspace...' },\n            category: workspacesCategory,\n            f1: true,\n            precondition: ( ContextKeyExpr.and(( WorkspaceFolderCountContext.notEqualsTo('0')), ( ContextKeyExpr.or(EnterMultiRootWorkspaceSupportContext, ( WorkbenchStateContext.isEqualTo('workspace'))))))\n        });\n    }\n    async run(accessor) {\n        const commandService = accessor.get(ICommandService);\n        const workspaceEditingService = accessor.get(IWorkspaceEditingService);\n        const folder = await commandService.executeCommand(PICK_WORKSPACE_FOLDER_COMMAND_ID);\n        if (folder) {\n            await workspaceEditingService.removeFolders([folder.uri]);\n        }\n    }\n}\nclass SaveWorkspaceAsAction extends Action2 {\n    static { this.ID = 'workbench.action.saveWorkspaceAs'; }\n    constructor() {\n        super({\n            id: SaveWorkspaceAsAction.ID,\n            title: { value: ( localize('saveWorkspaceAsAction', \"Save Workspace As...\")), original: 'Save Workspace As...' },\n            category: workspacesCategory,\n            f1: true,\n            precondition: EnterMultiRootWorkspaceSupportContext\n        });\n    }\n    async run(accessor) {\n        const workspaceEditingService = accessor.get(IWorkspaceEditingService);\n        const contextService = accessor.get(IWorkspaceContextService);\n        const configPathUri = await workspaceEditingService.pickNewWorkspacePath();\n        if (configPathUri && hasWorkspaceFileExtension(configPathUri)) {\n            switch (contextService.getWorkbenchState()) {\n                case 1 :\n                case 2 : {\n                    const folders = ( contextService.getWorkspace().folders.map(folder => ({ uri: folder.uri })));\n                    return workspaceEditingService.createAndEnterWorkspace(folders, configPathUri);\n                }\n                case 3 :\n                    return workspaceEditingService.saveAndEnterWorkspace(configPathUri);\n            }\n        }\n    }\n}\nclass DuplicateWorkspaceInNewWindowAction extends Action2 {\n    static { this.ID = 'workbench.action.duplicateWorkspaceInNewWindow'; }\n    constructor() {\n        super({\n            id: DuplicateWorkspaceInNewWindowAction.ID,\n            title: { value: ( localize('duplicateWorkspaceInNewWindow', \"Duplicate As Workspace in New Window\")), original: 'Duplicate As Workspace in New Window' },\n            category: workspacesCategory,\n            f1: true,\n            precondition: EnterMultiRootWorkspaceSupportContext\n        });\n    }\n    async run(accessor) {\n        const workspaceContextService = accessor.get(IWorkspaceContextService);\n        const workspaceEditingService = accessor.get(IWorkspaceEditingService);\n        const hostService = accessor.get(IHostService);\n        const workspacesService = accessor.get(IWorkspacesService);\n        const environmentService = accessor.get(IWorkbenchEnvironmentService);\n        const folders = workspaceContextService.getWorkspace().folders;\n        const remoteAuthority = environmentService.remoteAuthority;\n        const newWorkspace = await workspacesService.createUntitledWorkspace(folders, remoteAuthority);\n        await workspaceEditingService.copyWorkspaceSettings(newWorkspace);\n        return hostService.openWindow([{ workspaceUri: newWorkspace.configPath }], { forceNewWindow: true, remoteAuthority });\n    }\n}\nexport { AddRootFolderAction, OpenFileAction, OpenFileFolderAction, OpenFolderAction, OpenFolderViaWorkspaceAction, RemoveRootFolderAction };\n", "import { localize } from 'monaco-editor/esm/vs/nls.js';\nimport '../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nconst ADD_ROOT_FOLDER_COMMAND_ID = 'addRootFolder';\nconst ADD_ROOT_FOLDER_LABEL = { value: ( localize('addFolderToWorkspace', \"Add Folder to Workspace...\")), original: 'Add Folder to Workspace...' };\nconst SET_ROOT_FOLDER_COMMAND_ID = 'setRootFolder';\nconst PICK_WORKSPACE_FOLDER_COMMAND_ID = '_workbench.pickWorkspaceFolder';\nexport { ADD_ROOT_FOLDER_COMMAND_ID, ADD_ROOT_FOLDER_LABEL, PICK_WORKSPACE_FOLDER_COMMAND_ID, SET_ROOT_FOLDER_COMMAND_ID };\n"],
  "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",
  "names": ["_a", "WorkingCopyFileOperationParticipant", "timeout", "StoredFileWorkingCopySaveParticipant", "_a", "WorkingCopyFileService", "_a", "AbstractPathService", "basename", "init_extensions", "init_platform", "InitializeOtherResourcesContribution", "workbenchRegistry", "SettingValueType", "SettingMatchType", "UserDataProfileService", "profile", "init_platform", "Extensions", "ViewContainerLocation", "Extensions", "ViewContentGroups", "views", "ViewVisibilityState", "TreeItemCollapsibleState", "GoFilter", "GoScope", "VariableKind", "BrowserPathService", "range", "SearchErrorCode", "basename", "excluded", "request", "TunnelProtocol", "TunnelPrivacyId", "ProvidedOnAutoForward", "_a", "init_model", "_a", "init_model", "decoder", "encoder", "_a", "_a", "ConfirmResult", "RequestService", "_a", "init_model", "_a", "etag", "TextFileSaveParticipant", "_a", "TextFileEditorModelManager", "notificationService", "_a", "extname", "init_model", "DialogKind", "basename", "_a", "decoder", "isEqual", "basename", "EncodingOracle", "extname", "init_model", "BrowserTextFileService", "_a", "DecorationsService", "request", "_a", "UriIdentityService", "ignorePathCasing", "JSONEditingService", "parse", "extUri", "parse", "init_platform", "_a", "isEqual", "_a", "_a", "_a", "_a", "AbstractResourceEditorInput", "isEqual", "init_model", "TextResourceEditorModel", "AbstractTextResourceEditorInput", "_a", "isEqual", "_a", "isEqual", "init_platform", "Extensions", "RegisteredEditorPriority", "TextEditorService", "_a", "input", "basename", "_a", "init_platform", "OutputChannelUpdateMode", "Extensions", "init_platform", "init_model", "_a", "init_model", "FileOutputChannelModel", "_a", "OutputChannelBackedByFile", "DelegatedOutputChannelModel", "OutputChannelModelService", "OutputChannel", "OutputService", "registry", "Extensions", "_a", "channel", "LogContentProvider", "init_model", "TextFileContentProvider", "dirname", "_a", "isEqualOrParent", "_a", "init_platform", "Extensions", "init_model", "init_platform", "TitleEventSource", "TerminalLocation", "TerminalExitReason", "TerminalQuickFixType", "init_platform", "KeybindingsEditingService", "parse", "_a", "init_model", "match", "match", "match", "after", "match", "_a", "FolderMatch", "m", "dispose", "FolderMatchWithResource", "FolderMatchWorkspaceRoot", "FolderMatchNoRoot", "SearchResult", "match", "_a", "matches", "SearchModel", "SearchViewModelWorkbenchService", "WorkingCopyEditorService", "UserActivityService", "init_extensions", "ExtensionStatusBarItemService", "_a", "init_platform", "Extensions", "_a", "WebviewOriginStore", "ExtensionKeyedWebviewOriginStore", "_a", "_a", "isEqual", "_a", "_a", "Parts", "_a", "WebviewIconManager", "_a", "LazilyResolvedWebviewEditorInput", "_a", "WebviewEditorService", "init_platform", "Extensions", "_a", "url", "ExternalUriOpenerService", "WorkspaceTrustEnablementService", "WorkspaceTrustManagementService", "_a", "WorkspaceTrustRequestService", "trusted", "ExtensionManifestPropertiesService", "_a", "_a", "BrowserURLService", "_a", "init_platform", "init_actions", "_a", "init_actions", "init_platform", "Extensions", "TunnelType", "TunnelEditId", "NotebookExecutionType", "RelatedInformationType", "_a", "disposable", "init_platform", "resolve", "listener", "HostShutdownReason", "BrowserHostService", "_a", "accessor", "_a", "InjectedUserDataProfileService", "WorkspaceTrustRequestService", "MonacoSearchService", "UntitledTextEditorService", "TextEditorService", "SimpleExtensionResourceLoaderService", "SearchHistoryService", "WebviewService", "ExtensionManifestPropertiesService", "WorkspaceTrustEnablementService", "AiEmbeddingVectorService", "_a", "FileService", "stat", "_a", "basename", "error", "basename", "dirname", "FileType", "FilePermission", "FileSystemProviderCapabilities", "FileChangeType", "ByteSize", "init_platform", "init_model", "AbstractEditorWithViewState", "_a", "_a", "distinct", "AbstractTextEditor", "init_platform", "_a", "error", "isEqual", "init_actions", "css", "TriggerAction", "_a", "init_model", "queryIndex", "targetIndex", "match", "createMatches", "BaseEditorQuickAccessProvider", "_a", "css", "init_platform", "_a", "SideBySideEditor", "isEqual", "_a", "ExternalFileImport", "ImportChoice", "basename", "init_actions", "match", "BaseSaveAllAction", "_a", "name", "basename", "ClipboardContentProvider", "init_platform", "ResourcesDropHandler", "_a", "basename", "Extensions", "isEqual", "ResourceListDnDHandler", "toResource", "ExplorerDataSource", "children", "_a", "configurationService", "hoverService", "value", "FilesFilter", "FileSorter", "compareFileNames", "compareFileExtensions", "isNative", "ExplorerDecorationsProvider", "css", "init_platform", "css", "_a", "EventType", "init_actions", "ProgressIndicatorState", "init_actions", "CompositeMenuActions", "init_actions", "FilterWidget", "_a", "ViewPaneShowActions", "Extensions", "ViewWelcomeController", "id", "_a", "FilterViewPane", "init_actions", "init_model", "ResourceLabels", "label", "options", "ResourceLabel", "Redraw", "ResourceLabelWidget", "isEqual", "_a", "_a", "_a", "css", "init_actions", "_a", "_a", "init_actions", "$", "_a", "first", "init_actions", "ViewContainerMenuActions", "ViewPaneContainer", "EventType", "bounds", "_a", "totalWeight", "collapsed", "init_platform", "init_actions", "ExplorerViewletViewsContribution", "viewsRegistry", "ExplorerViewPaneContainer", "_a", "Extensions", "configurationRegistry", "Extensions", "FileType", "FilePermission", "FileType", "FilePermission", "MemoryFileService", "FileService"]
}

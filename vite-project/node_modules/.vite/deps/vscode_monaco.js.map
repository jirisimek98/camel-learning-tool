{
  "version": 3,
  "sources": ["../../vscode/monaco.js", "../../vscode/vscode/src/vs/editor/browser/config/editorConfiguration.js", "../../vscode/vscode/src/vs/workbench/api/common/jsonValidationExtensionPoint.js", "../../vscode/tools/injection.js", "../../vscode/vscode/src/vs/workbench/contrib/codeEditor/browser/workbenchReferenceSearch.js", "../../vscode/vscode/src/vs/workbench/contrib/codeEditor/browser/diffEditorHelper.js", "../../vscode/vscode/src/vs/workbench/browser/codeeditor.js", "../../vscode/vscode/src/vs/platform/actions/browser/floatingMenu.js", "../../vscode/vscode/src/vs/workbench/contrib/accessibility/browser/accessibleViewActions.js", "../../vscode/vscode/src/vs/workbench/contrib/codeEditor/browser/largeFileOptimizations.js", "../../vscode/vscode/src/vs/workbench/contrib/codeEditor/browser/inspectEditorTokens/inspectEditorTokens.js", "../../vscode/vscode/src/vs/workbench/contrib/codeEditor/browser/inspectEditorTokens/inspectEditorTokens.css.js", "../../vscode/vscode/src/vs/workbench/services/textMate/common/TMHelper.js", "../../vscode/vscode/src/vs/workbench/contrib/codeEditor/browser/saveParticipants.js", "../../vscode/vscode/src/vs/workbench/contrib/format/browser/formatModified.js", "../../vscode/vscode/src/vs/workbench/contrib/scm/browser/dirtydiffDecorator.js", "../../vscode/vscode/src/vs/workbench/contrib/scm/browser/media/dirtydiffDecorator.css.js", "../../vscode/vscode/src/vs/workbench/contrib/scm/browser/dirtyDiffSwitcher.js", "../../vscode/vscode/src/vs/workbench/contrib/codeEditor/browser/toggleMinimap.js", "../../vscode/vscode/src/vs/workbench/contrib/codeEditor/browser/toggleMultiCursorModifier.js", "../../vscode/vscode/src/vs/workbench/contrib/codeEditor/browser/toggleRenderControlCharacter.js", "../../vscode/vscode/src/vs/workbench/contrib/codeEditor/browser/toggleWordWrap.js", "../../vscode/vscode/src/vs/workbench/contrib/codeEditor/browser/toggleRenderWhitespace.js", "../../vscode/vscode/src/vs/workbench/contrib/codeEditor/browser/editorLineNumberMenu.js", "../../vscode/vscode/src/vs/workbench/contrib/folding/browser/folding.contribution.js", "../../vscode/vscode/src/vs/workbench/contrib/inlayHints/browser/inlayHintsAccessibilty.js", "../../vscode/vscode/src/vs/workbench/contrib/codeActions/browser/codeActions.contribution.js", "../../vscode/vscode/src/vs/workbench/contrib/codeActions/common/codeActionsExtensionPoint.js", "../../vscode/vscode/src/vs/workbench/contrib/codeActions/common/documentationExtensionPoint.js", "../../vscode/vscode/src/vs/workbench/contrib/codeActions/browser/codeActionsContribution.js", "../../vscode/vscode/src/vs/workbench/contrib/codeActions/browser/documentationContribution.js", "../../vscode/vscode/src/vs/workbench/contrib/list/browser/list.contribution.js"],
  "sourcesContent": ["import { __decorate, __param } from './external/tslib/tslib.es6.js';\nimport { StandaloneServices, StandaloneKeybindingService } from 'monaco-editor/esm/vs/editor/standalone/browser/standaloneServices.js';\nimport { ITextResourceConfigurationService } from 'monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { StandaloneDiffEditor, StandaloneEditor } from 'monaco-editor/esm/vs/editor/standalone/browser/standaloneCodeEditor.js';\nimport { isObject } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { distinct, deepClone } from 'monaco-editor/esm/vs/base/common/objects.js';\nexport { errorHandler } from 'monaco-editor/esm/vs/base/common/errors.js';\nexport { FoldingModel, setCollapseStateForMatchingLines } from 'monaco-editor/esm/vs/editor/contrib/folding/browser/foldingModel.js';\nexport { FoldingController } from 'monaco-editor/esm/vs/editor/contrib/folding/browser/folding.js';\nexport { DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nexport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { Extensions as Extensions$2 } from 'monaco-editor/esm/vs/platform/jsonschemas/common/jsonContributionRegistry.js';\nimport { ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nexport { CommandsRegistry } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nexport { MenuId, MenuRegistry } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nexport { KeybindingsRegistry } from 'monaco-editor/esm/vs/platform/keybinding/common/keybindingsRegistry.js';\nimport { Extensions as Extensions$3 } from 'monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js';\nimport { EditorOptionsUtil } from './vscode/src/vs/editor/browser/config/editorConfiguration.js';\nexport { registerColor } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { ITextModelService } from 'monaco-editor/esm/vs/editor/common/services/resolverService.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { VSBuffer } from 'monaco-editor/esm/vs/base/common/buffer.js';\nimport { JSONValidationExtensionPoint } from './vscode/src/vs/workbench/api/common/jsonValidationExtensionPoint.js';\nimport { Extensions as Extensions$1 } from './vscode/src/vs/workbench/common/contributions.js';\nimport { ColorExtensionPoint } from './vscode/src/vs/workbench/services/themes/common/colorExtensionPoint.js';\nimport { ServiceCollection } from 'monaco-editor/esm/vs/platform/instantiation/common/serviceCollection.js';\nimport { IQuickInputService } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { StandaloneQuickInputService } from 'monaco-editor/esm/vs/editor/standalone/browser/quickInput/standaloneQuickInputService.js';\nimport { SyncDescriptor } from 'monaco-editor/esm/vs/platform/instantiation/common/descriptors.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nexport { ContextKeyExpr, RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { ICodeEditorService } from 'monaco-editor/esm/vs/editor/browser/services/codeEditorService.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { createInjectedClass } from './tools/injection.js';\nimport './vscode/src/vs/workbench/contrib/codeEditor/browser/workbenchReferenceSearch.js';\nimport './vscode/src/vs/workbench/contrib/codeEditor/browser/menuPreventer.js';\nimport './vscode/src/vs/workbench/contrib/codeEditor/browser/diffEditorHelper.js';\nimport './vscode/src/vs/workbench/contrib/codeEditor/browser/largeFileOptimizations.js';\nimport './vscode/src/vs/workbench/contrib/codeEditor/browser/inspectEditorTokens/inspectEditorTokens.js';\nimport './vscode/src/vs/workbench/contrib/codeEditor/browser/saveParticipants.js';\nimport './vscode/src/vs/workbench/contrib/codeEditor/browser/toggleMinimap.js';\nimport './vscode/src/vs/workbench/contrib/codeEditor/browser/toggleMultiCursorModifier.js';\nimport './vscode/src/vs/workbench/contrib/codeEditor/browser/toggleRenderControlCharacter.js';\nimport './vscode/src/vs/workbench/contrib/codeEditor/browser/toggleWordWrap.js';\nimport './vscode/src/vs/workbench/contrib/codeEditor/browser/toggleRenderWhitespace.js';\nimport './vscode/src/vs/workbench/contrib/codeEditor/browser/editorLineNumberMenu.js';\nimport './vscode/src/vs/workbench/contrib/folding/browser/folding.contribution.js';\nimport './vscode/src/vs/workbench/contrib/inlayHints/browser/inlayHintsAccessibilty.js';\nimport './vscode/src/vs/workbench/contrib/codeActions/browser/codeActions.contribution.js';\nimport './vscode/src/vs/workbench/contrib/list/browser/list.contribution.js';\nlet ExtensionPoints = class ExtensionPoints {\n    constructor(instantiationService) {\n        this.instantiationService = instantiationService;\n        this.instantiationService.createInstance(JSONValidationExtensionPoint);\n        this.instantiationService.createInstance(ColorExtensionPoint);\n    }\n};\nExtensionPoints = __decorate([\n    ( __param(0, IInstantiationService))\n], ExtensionPoints);\n( Registry.as(Extensions$1.Workbench)).registerWorkbenchContribution(ExtensionPoints, 1 );\nfunction computeConfiguration(configuration, isDiffEditor, overrides) {\n    const editorConfiguration = isObject(configuration.editor) ? deepClone(configuration.editor) : Object.create(null);\n    if (isDiffEditor && isObject(configuration.diffEditor)) {\n        Object.assign(editorConfiguration, deepClone(configuration.diffEditor));\n    }\n    Object.assign(editorConfiguration, deepClone(overrides));\n    return editorConfiguration;\n}\nlet ConfiguredStandaloneEditor = class ConfiguredStandaloneEditor extends createInjectedClass(StandaloneEditor) {\n    constructor(domElement, isDiffEditor, _options = {}, instantiationService, textResourceConfigurationService) {\n        const { theme, autoDetectHighContrast, model, value, language, accessibilityHelpUrl, ariaContainerElement, overflowWidgetsDomNode, dimension, ...options } = _options;\n        const computedOptions = computeConfiguration(textResourceConfigurationService.getValue(_options.model?.uri), isDiffEditor, options);\n        super(instantiationService, domElement, { ...computedOptions, overflowWidgetsDomNode, dimension, theme, autoDetectHighContrast, model, value, language, accessibilityHelpUrl, ariaContainerElement });\n        this.isDiffEditor = isDiffEditor;\n        this.textResourceConfigurationService = textResourceConfigurationService;\n        this.optionsOverrides = {};\n        this.lastAppliedEditorOptions = computedOptions;\n        this.optionsOverrides = options;\n        this._register(textResourceConfigurationService.onDidChangeConfiguration(() => this.updateEditorConfiguration()));\n        this._register(this.onDidChangeModelLanguage(() => this.updateEditorConfiguration()));\n        this._register(this.onDidChangeModel(() => this.updateEditorConfiguration()));\n        this.updateEditorConfiguration();\n    }\n    updateEditorConfiguration() {\n        if (!this.hasModel() || this.textResourceConfigurationService == null) {\n            return;\n        }\n        const resource = this.getModel().uri;\n        const configuration = this.textResourceConfigurationService.getValue(resource);\n        if (configuration == null) {\n            return;\n        }\n        const editorConfiguration = computeConfiguration(configuration, this.isDiffEditor, this.optionsOverrides);\n        let editorSettingsToApply = editorConfiguration;\n        if (this.lastAppliedEditorOptions != null) {\n            editorSettingsToApply = distinct(this.lastAppliedEditorOptions, editorSettingsToApply);\n        }\n        if (( Object.keys(editorSettingsToApply)).length > 0) {\n            this.lastAppliedEditorOptions = editorConfiguration;\n            super.updateOptions(editorSettingsToApply);\n        }\n    }\n    updateOptions(newOptions) {\n        this.optionsOverrides ?? (this.optionsOverrides = {});\n        const didChange = EditorOptionsUtil.applyUpdate(this.optionsOverrides, newOptions);\n        if (!didChange) {\n            return;\n        }\n        this.updateEditorConfiguration();\n    }\n};\nConfiguredStandaloneEditor = __decorate([\n    ( __param(3, IInstantiationService)),\n    ( __param(4, ITextResourceConfigurationService))\n], ConfiguredStandaloneEditor);\nclass ConfiguredStandaloneDiffEditor extends StandaloneDiffEditor {\n    _createInnerEditor(instantiationService, container, options) {\n        return instantiationService.createInstance(ConfiguredStandaloneEditor, container, true, options);\n    }\n}\nasync function writeFile(uri, content) {\n    await StandaloneServices.get(IFileService).writeFile(uri, VSBuffer.fromString(content));\n}\nasync function deleteFile(uri, options) {\n    await StandaloneServices.get(IFileService).del(uri, options);\n}\nasync function createModelReference(resource, content) {\n    if (content != null) {\n        await writeFile(resource, content);\n    }\n    return (await StandaloneServices.get(ITextModelService).createModelReference(resource));\n}\nfunction isDynamicKeybindingService(keybindingService) {\n    return keybindingService.registerKeybindingProvider != null;\n}\nlet DelegateStandaloneKeybindingService = class DelegateStandaloneKeybindingService extends StandaloneKeybindingService {\n    constructor(delegate, contextKeyService, commandService, telemetryService, notificationService, logService, codeEditorService) {\n        super(contextKeyService, commandService, telemetryService, notificationService, logService, codeEditorService);\n        this.delegate = delegate;\n        this._register(delegate.registerKeybindingProvider(() => this.getUserKeybindingItems()));\n    }\n    _getResolver() {\n        return this.delegate._getResolver();\n    }\n    resolveKeyboardEvent(keyboardEvent) {\n        return this.delegate.resolveKeyboardEvent(keyboardEvent);\n    }\n};\nDelegateStandaloneKeybindingService = __decorate([\n    ( __param(1, IContextKeyService)),\n    ( __param(2, ICommandService)),\n    ( __param(3, ITelemetryService)),\n    ( __param(4, INotificationService)),\n    ( __param(5, ILogService)),\n    ( __param(6, ICodeEditorService))\n], DelegateStandaloneKeybindingService);\nlet standaloneEditorInstantiationService = null;\nfunction getStandaloneEditorInstantiationService() {\n    if (standaloneEditorInstantiationService == null) {\n        const serviceCollection = new ServiceCollection();\n        serviceCollection.set(IQuickInputService, new SyncDescriptor(StandaloneQuickInputService, undefined, true));\n        const keybindingService = StandaloneServices.get(IKeybindingService);\n        if (!(keybindingService instanceof StandaloneKeybindingService) && isDynamicKeybindingService(keybindingService)) {\n            serviceCollection.set(IKeybindingService, new SyncDescriptor(DelegateStandaloneKeybindingService, [keybindingService], true));\n        }\n        standaloneEditorInstantiationService = StandaloneServices.get(IInstantiationService).createChild(serviceCollection);\n    }\n    return standaloneEditorInstantiationService;\n}\nconst createConfiguredEditor = (domElement, options, override) => {\n    StandaloneServices.initialize(override ?? {});\n    return getStandaloneEditorInstantiationService().createInstance(ConfiguredStandaloneEditor, domElement, false, options);\n};\nconst createConfiguredDiffEditor = (domElement, options, override) => {\n    StandaloneServices.initialize(override ?? {});\n    return getStandaloneEditorInstantiationService().createInstance(ConfiguredStandaloneDiffEditor, domElement, options);\n};\nconst Extensions = {\n    ...Extensions$2,\n    ...Extensions$3\n};\nexport { Extensions, createConfiguredDiffEditor, createConfiguredEditor, createModelReference, deleteFile, writeFile };\n", "import * as arrays from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { editorOptionsRegistry, ConfigurationChangedEvent } from 'monaco-editor/esm/vs/editor/common/config/editorOptions.js';\nclass ValidatedEditorOptions {\n    constructor() {\n        this._values = [];\n    }\n    _read(option) {\n        return this._values[option];\n    }\n    get(id) {\n        return this._values[id];\n    }\n    _write(option, value) {\n        this._values[option] = value;\n    }\n}\nclass ComputedEditorOptions {\n    constructor() {\n        this._values = [];\n    }\n    _read(id) {\n        if (id >= this._values.length) {\n            throw new Error('Cannot read uninitialized value');\n        }\n        return this._values[id];\n    }\n    get(id) {\n        return this._read(id);\n    }\n    _write(id, value) {\n        this._values[id] = value;\n    }\n}\nclass EditorOptionsUtil {\n    static validateOptions(options) {\n        const result = ( new ValidatedEditorOptions());\n        for (const editorOption of editorOptionsRegistry) {\n            const value = (editorOption.name === '_never_' ? undefined : options[editorOption.name]);\n            result._write(editorOption.id, editorOption.validate(value));\n        }\n        return result;\n    }\n    static computeOptions(options, env) {\n        const result = ( new ComputedEditorOptions());\n        for (const editorOption of editorOptionsRegistry) {\n            result._write(editorOption.id, editorOption.compute(env, result, options._read(editorOption.id)));\n        }\n        return result;\n    }\n    static _deepEquals(a, b) {\n        if (typeof a !== 'object' || typeof b !== 'object' || !a || !b) {\n            return a === b;\n        }\n        if (Array.isArray(a) || Array.isArray(b)) {\n            return (Array.isArray(a) && Array.isArray(b) ? arrays.equals(a, b) : false);\n        }\n        if (( Object.keys(a)).length !== ( Object.keys(b)).length) {\n            return false;\n        }\n        for (const key in a) {\n            if (!EditorOptionsUtil._deepEquals(a[key], b[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static checkEquals(a, b) {\n        const result = [];\n        let somethingChanged = false;\n        for (const editorOption of editorOptionsRegistry) {\n            const changed = !EditorOptionsUtil._deepEquals(a._read(editorOption.id), b._read(editorOption.id));\n            result[editorOption.id] = changed;\n            if (changed) {\n                somethingChanged = true;\n            }\n        }\n        return (somethingChanged ? ( new ConfigurationChangedEvent(result)) : null);\n    }\n    static applyUpdate(options, update) {\n        let changed = false;\n        for (const editorOption of editorOptionsRegistry) {\n            if (update.hasOwnProperty(editorOption.name)) {\n                const result = editorOption.applyUpdate(options[editorOption.name], update[editorOption.name]);\n                options[editorOption.name] = result.newValue;\n                changed = changed || result.didChange;\n            }\n        }\n        return changed;\n    }\n}\nexport { ComputedEditorOptions, EditorOptionsUtil };\n", "import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { ExtensionsRegistry } from '../../services/extensions/common/extensionsRegistry.js';\nimport * as resources from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { isString } from 'monaco-editor/esm/vs/base/common/types.js';\nconst configurationExtPoint = ( ExtensionsRegistry.registerExtensionPoint({\n    extensionPoint: 'jsonValidation',\n    defaultExtensionKind: ['workspace', 'web'],\n    jsonSchema: {\n        description: ( nls.localize('contributes.jsonValidation', 'Contributes json schema configuration.')),\n        type: 'array',\n        defaultSnippets: [{ body: [{ fileMatch: '${1:file.json}', url: '${2:url}' }] }],\n        items: {\n            type: 'object',\n            defaultSnippets: [{ body: { fileMatch: '${1:file.json}', url: '${2:url}' } }],\n            properties: {\n                fileMatch: {\n                    type: ['string', 'array'],\n                    description: ( nls.localize(\n                        'contributes.jsonValidation.fileMatch',\n                        'The file pattern (or an array of patterns) to match, for example \"package.json\" or \"*.launch\". Exclusion patterns start with \\'!\\''\n                    )),\n                    items: {\n                        type: ['string']\n                    }\n                },\n                url: {\n                    description: ( nls.localize(\n                        'contributes.jsonValidation.url',\n                        'A schema URL (\\'http:\\', \\'https:\\') or relative path to the extension folder (\\'./\\').'\n                    )),\n                    type: 'string'\n                }\n            }\n        }\n    }\n}));\nclass JSONValidationExtensionPoint {\n    constructor() {\n        configurationExtPoint.setHandler((extensions) => {\n            for (const extension of extensions) {\n                const extensionValue = extension.value;\n                const collector = extension.collector;\n                const extensionLocation = extension.description.extensionLocation;\n                if (!extensionValue || !Array.isArray(extensionValue)) {\n                    collector.error(( nls.localize('invalid.jsonValidation', \"'configuration.jsonValidation' must be a array\")));\n                    return;\n                }\n                extensionValue.forEach(extension => {\n                    if (!isString(extension.fileMatch) && !(Array.isArray(extension.fileMatch) && extension.fileMatch.every(isString))) {\n                        collector.error(( nls.localize(\n                            'invalid.fileMatch',\n                            \"'configuration.jsonValidation.fileMatch' must be defined as a string or an array of strings.\"\n                        )));\n                        return;\n                    }\n                    const uri = extension.url;\n                    if (!isString(uri)) {\n                        collector.error(( nls.localize(\n                            'invalid.url',\n                            \"'configuration.jsonValidation.url' must be a URL or relative path\"\n                        )));\n                        return;\n                    }\n                    if (uri.startsWith('./')) {\n                        try {\n                            const colorThemeLocation = resources.joinPath(extensionLocation, uri);\n                            if (!resources.isEqualOrParent(colorThemeLocation, extensionLocation)) {\n                                collector.warn(( nls.localize(\n                                    'invalid.path.1',\n                                    \"Expected `contributes.{0}.url` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.\",\n                                    configurationExtPoint.name,\n                                    ( colorThemeLocation.toString()),\n                                    extensionLocation.path\n                                )));\n                            }\n                        }\n                        catch (e) {\n                            collector.error(( nls.localize(\n                                'invalid.url.fileschema',\n                                \"'configuration.jsonValidation.url' is an invalid relative URL: {0}\",\n                                e.message\n                            )));\n                        }\n                    }\n                    else if (!/^[^:/?#]+:\\/\\//.test(uri)) {\n                        collector.error(( nls.localize(\n                            'invalid.url.schema',\n                            \"'configuration.jsonValidation.url' must be an absolute URL or start with './'  to reference schemas located in the extension.\"\n                        )));\n                        return;\n                    }\n                });\n            }\n        });\n    }\n}\nexport { JSONValidationExtensionPoint };\n", "import { _util } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nfunction getInjectedParameters(instantiationService, ctor) {\n    return instantiationService.invokeFunction((accessor) => {\n        return ( _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index).map(d => accessor.get(d.id)));\n    });\n}\nfunction createInjectedClass(ctor) {\n    const _ctor = ctor;\n    return class extends _ctor {\n        constructor(...args) {\n            super(...args.slice(1), ...getInjectedParameters(args[0], ctor));\n        }\n    };\n}\nexport { createInjectedClass };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { registerEditorContribution } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport { ICodeEditorService } from 'monaco-editor/esm/vs/editor/browser/services/codeEditorService.js';\nimport { ReferencesController } from 'monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/peek/referencesController.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nlet WorkbenchReferencesController = class WorkbenchReferencesController extends ReferencesController {\n    constructor(editor, contextKeyService, editorService, notificationService, instantiationService, storageService, configurationService) {\n        super(false, editor, contextKeyService, editorService, notificationService, instantiationService, storageService, configurationService);\n    }\n};\nWorkbenchReferencesController = ( __decorate([\n    ( __param(1, IContextKeyService)),\n    ( __param(2, ICodeEditorService)),\n    ( __param(3, INotificationService)),\n    ( __param(4, IInstantiationService)),\n    ( __param(5, IStorageService)),\n    ( __param(6, IConfigurationService))\n], WorkbenchReferencesController));\nregisterEditorContribution(ReferencesController.ID, WorkbenchReferencesController, 4 );\nexport { WorkbenchReferencesController };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { observableFromEvent, autorunWithStore } from 'monaco-editor/esm/vs/base/common/observable.js';\nimport { registerDiffEditorContribution } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport { ICodeEditorService } from 'monaco-editor/esm/vs/editor/browser/services/codeEditorService.js';\nimport { AccessibleDiffViewerNext, AccessibleDiffViewerPrev } from 'monaco-editor/esm/vs/editor/browser/widget/diffEditor.contribution.js';\nimport { DiffEditorWidget2 } from 'monaco-editor/esm/vs/editor/browser/widget/diffEditorWidget2/diffEditorWidget2.js';\nimport { EmbeddedDiffEditorWidget, EmbeddedDiffEditorWidget2 } from 'monaco-editor/esm/vs/editor/browser/widget/embeddedCodeEditorWidget.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, ContextKeyEqualsExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { Severity, INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { FloatingEditorClickWidget } from '../../../browser/codeeditor.js';\nimport { IAccessibleViewService } from '../../accessibility/browser/accessibleView.js';\nimport { AccessibilityHelpAction } from '../../accessibility/browser/accessibleViewActions.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { Extensions } from '../../../common/configuration.js';\nlet DiffEditorHelperContribution = class DiffEditorHelperContribution extends Disposable {\n    static { this.ID = 'editor.contrib.diffEditorHelper'; }\n    constructor(_diffEditor, _instantiationService, _configurationService, _notificationService) {\n        super();\n        this._diffEditor = _diffEditor;\n        this._instantiationService = _instantiationService;\n        this._configurationService = _configurationService;\n        this._notificationService = _notificationService;\n        this._register(createScreenReaderHelp());\n        const isEmbeddedDiffEditor = (this._diffEditor instanceof EmbeddedDiffEditorWidget) || (this._diffEditor instanceof EmbeddedDiffEditorWidget2);\n        if (!isEmbeddedDiffEditor) {\n            const computationResult = observableFromEvent(e => this._diffEditor.onDidUpdateDiff(e), () => this._diffEditor.getDiffComputationResult());\n            const onlyWhiteSpaceChange = ( computationResult.map(r => r && !r.identical && r.changes2.length === 0));\n            this._register(autorunWithStore((reader, store) => {\n                if (onlyWhiteSpaceChange.read(reader)) {\n                    const helperWidget = store.add(this._instantiationService.createInstance(FloatingEditorClickWidget, this._diffEditor.getModifiedEditor(), ( localize('hintWhitespace', \"Show Whitespace Differences\")), null));\n                    store.add(helperWidget.onClick(() => {\n                        this._configurationService.updateValue('diffEditor.ignoreTrimWhitespace', false);\n                    }));\n                    helperWidget.render();\n                }\n            }));\n            this._register(this._diffEditor.onDidUpdateDiff(() => {\n                const diffComputationResult = this._diffEditor.getDiffComputationResult();\n                if (diffComputationResult && diffComputationResult.quitEarly) {\n                    this._notificationService.prompt(Severity.Warning, ( localize(\n                        'hintTimeout',\n                        \"The diff algorithm was stopped early (after {0} ms.)\",\n                        this._diffEditor.maxComputationTime\n                    )), [{\n                            label: ( localize('removeTimeout', \"Remove Limit\")),\n                            run: () => {\n                                this._configurationService.updateValue('diffEditor.maxComputationTime', 0);\n                            }\n                        }], {});\n                }\n            }));\n        }\n    }\n};\nDiffEditorHelperContribution = ( __decorate([\n    ( __param(1, IInstantiationService)),\n    ( __param(2, IConfigurationService)),\n    ( __param(3, INotificationService))\n], DiffEditorHelperContribution));\nfunction createScreenReaderHelp() {\n    return AccessibilityHelpAction.addImplementation(105, 'diff-editor', async (accessor) => {\n        const accessibleViewService = accessor.get(IAccessibleViewService);\n        const editorService = accessor.get(IEditorService);\n        const codeEditorService = accessor.get(ICodeEditorService);\n        const keybindingService = accessor.get(IKeybindingService);\n        const next = keybindingService.lookupKeybinding(AccessibleDiffViewerNext.id)?.getAriaLabel();\n        const previous = keybindingService.lookupKeybinding(AccessibleDiffViewerPrev.id)?.getAriaLabel();\n        if (!(editorService.activeTextEditorControl instanceof DiffEditorWidget2)) {\n            return;\n        }\n        const codeEditor = codeEditorService.getActiveCodeEditor() || codeEditorService.getFocusedCodeEditor();\n        if (!codeEditor) {\n            return;\n        }\n        const keys = ['audioCues.diffLineDeleted', 'audioCues.diffLineInserted', 'audioCues.diffLineModified'];\n        accessibleViewService.show({\n            verbositySettingKey: \"accessibility.verbosity.diffEditor\" ,\n            provideContent: () => [\n                ( localize('msg1', \"You are in a diff editor.\")),\n                ( localize(\n                    'msg2',\n                    \"Press {0} or {1} to view the next or previous diff in the diff review mode that is optimized for screen readers.\",\n                    next,\n                    previous\n                )),\n                ( localize(\n                    'msg3',\n                    \"To control which audio cues should be played, the following settings can be configured: {0}.\",\n                    keys.join(', ')\n                )),\n            ].join('\\n\\n'),\n            onClose: () => {\n                codeEditor.focus();\n            },\n            options: { type: \"help\"  }\n        });\n    }, ( ContextKeyExpr.and(\n        ContextKeyEqualsExpr.create('diffEditorVersion', 2),\n        ContextKeyEqualsExpr.create('isInDiffEditor', true)\n    )));\n}\nregisterDiffEditorContribution(DiffEditorHelperContribution.ID, DiffEditorHelperContribution);\n( Registry.as(Extensions.ConfigurationMigration))\n    .registerConfigurationMigrations([{\n        key: 'diffEditor.experimental.collapseUnchangedRegions',\n        migrateFn: (value, accessor) => {\n            return [\n                ['diffEditor.hideUnchangedRegions.enabled', { value }],\n                ['diffEditor.experimental.collapseUnchangedRegions', { value: undefined }]\n            ];\n        }\n    }]);\n", "import { __decorate, __param } from '../../../../../external/tslib/tslib.es6.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { isEqual } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { isCodeEditor, isCompositeEditor } from 'monaco-editor/esm/vs/editor/browser/editorBrowser.js';\nimport { EmbeddedCodeEditorWidget } from 'monaco-editor/esm/vs/editor/browser/widget/embeddedCodeEditorWidget.js';\nimport { ModelDecorationOptions } from 'monaco-editor/esm/vs/editor/common/model/textModel.js';\nimport { AbstractFloatingClickMenu, FloatingClickWidget } from '../../platform/actions/browser/floatingMenu.js';\nimport { MenuId, IMenuService } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { IEditorService } from '../services/editor/common/editorService.js';\nvar RangeHighlightDecorations_1;\nlet RangeHighlightDecorations = class RangeHighlightDecorations extends Disposable {\n    static { RangeHighlightDecorations_1 = this; }\n    constructor(editorService) {\n        super();\n        this.editorService = editorService;\n        this._onHighlightRemoved = this._register(( new Emitter()));\n        this.onHighlightRemoved = this._onHighlightRemoved.event;\n        this.rangeHighlightDecorationId = null;\n        this.editor = null;\n        this.editorDisposables = this._register(( new DisposableStore()));\n    }\n    removeHighlightRange() {\n        if (this.editor && this.rangeHighlightDecorationId) {\n            const decorationId = this.rangeHighlightDecorationId;\n            this.editor.changeDecorations((accessor) => {\n                accessor.removeDecoration(decorationId);\n            });\n            this._onHighlightRemoved.fire();\n        }\n        this.rangeHighlightDecorationId = null;\n    }\n    highlightRange(range, editor) {\n        editor = editor ?? this.getEditor(range);\n        if (isCodeEditor(editor)) {\n            this.doHighlightRange(editor, range);\n        }\n        else if (isCompositeEditor(editor) && isCodeEditor(editor.activeCodeEditor)) {\n            this.doHighlightRange(editor.activeCodeEditor, range);\n        }\n    }\n    doHighlightRange(editor, selectionRange) {\n        this.removeHighlightRange();\n        editor.changeDecorations((changeAccessor) => {\n            this.rangeHighlightDecorationId = changeAccessor.addDecoration(selectionRange.range, this.createRangeHighlightDecoration(selectionRange.isWholeLine));\n        });\n        this.setEditor(editor);\n    }\n    getEditor(resourceRange) {\n        const resource = this.editorService.activeEditor?.resource;\n        if (resource && isEqual(resource, resourceRange.resource) && isCodeEditor(this.editorService.activeTextEditorControl)) {\n            return this.editorService.activeTextEditorControl;\n        }\n        return undefined;\n    }\n    setEditor(editor) {\n        if (this.editor !== editor) {\n            this.editorDisposables.clear();\n            this.editor = editor;\n            this.editorDisposables.add(this.editor.onDidChangeCursorPosition((e) => {\n                if (e.reason === 0\n                    || e.reason === 3\n                    || e.reason === 5\n                    || e.reason === 6 ) {\n                    this.removeHighlightRange();\n                }\n            }));\n            this.editorDisposables.add(this.editor.onDidChangeModel(() => { this.removeHighlightRange(); }));\n            this.editorDisposables.add(this.editor.onDidDispose(() => {\n                this.removeHighlightRange();\n                this.editor = null;\n            }));\n        }\n    }\n    static { this._WHOLE_LINE_RANGE_HIGHLIGHT = ModelDecorationOptions.register({\n        description: 'codeeditor-range-highlight-whole',\n        stickiness: 1 ,\n        className: 'rangeHighlight',\n        isWholeLine: true\n    }); }\n    static { this._RANGE_HIGHLIGHT = ModelDecorationOptions.register({\n        description: 'codeeditor-range-highlight',\n        stickiness: 1 ,\n        className: 'rangeHighlight'\n    }); }\n    createRangeHighlightDecoration(isWholeLine = true) {\n        return (isWholeLine ? RangeHighlightDecorations_1._WHOLE_LINE_RANGE_HIGHLIGHT : RangeHighlightDecorations_1._RANGE_HIGHLIGHT);\n    }\n    dispose() {\n        super.dispose();\n        if (this.editor?.getModel()) {\n            this.removeHighlightRange();\n            this.editor = null;\n        }\n    }\n};\nRangeHighlightDecorations = RangeHighlightDecorations_1 = ( __decorate([\n    ( __param(0, IEditorService))\n], RangeHighlightDecorations));\nlet FloatingEditorClickWidget = class FloatingEditorClickWidget extends FloatingClickWidget {\n    constructor(editor, label, keyBindingAction, keybindingService) {\n        super(keyBindingAction && keybindingService.lookupKeybinding(keyBindingAction)\n            ? `${label} (${keybindingService.lookupKeybinding(keyBindingAction).getLabel()})`\n            : label);\n        this.editor = editor;\n    }\n    getId() {\n        return 'editor.overlayWidget.floatingClickWidget';\n    }\n    getPosition() {\n        return {\n            preference: 1\n        };\n    }\n    render() {\n        super.render();\n        this.editor.addOverlayWidget(this);\n    }\n    dispose() {\n        this.editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n};\nFloatingEditorClickWidget = ( __decorate([\n    ( __param(3, IKeybindingService))\n], FloatingEditorClickWidget));\nlet FloatingEditorClickMenu = class FloatingEditorClickMenu extends AbstractFloatingClickMenu {\n    static { this.ID = 'editor.contrib.floatingClickMenu'; }\n    constructor(editor, instantiationService, menuService, contextKeyService) {\n        super(MenuId.EditorContent, menuService, contextKeyService);\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.render();\n    }\n    createWidget(action) {\n        return this.instantiationService.createInstance(FloatingEditorClickWidget, this.editor, action.label, action.id);\n    }\n    isVisible() {\n        return !(this.editor instanceof EmbeddedCodeEditorWidget) && this.editor?.hasModel() && !this.editor.getOption(60 );\n    }\n    getActionArg() {\n        return this.editor.getModel()?.uri;\n    }\n};\nFloatingEditorClickMenu = ( __decorate([\n    ( __param(1, IInstantiationService)),\n    ( __param(2, IMenuService)),\n    ( __param(3, IContextKeyService))\n], FloatingEditorClickMenu));\nexport { FloatingEditorClickMenu, FloatingEditorClickWidget, RangeHighlightDecorations };\n", "import { __decorate, __param } from '../../../../../../external/tslib/tslib.es6.js';\nimport { $, clearNode, append } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { Widget } from 'monaco-editor/esm/vs/base/browser/ui/widget.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { createAndFillInActionBarActions } from 'monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js';\nimport { IMenuService } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { asCssVariableWithDefault, buttonBackground, asCssVariable, editorBackground, buttonForeground, editorForeground, contrastBorder } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nclass FloatingClickWidget extends Widget {\n    constructor(label) {\n        super();\n        this.label = label;\n        this._onClick = this._register(( new Emitter()));\n        this.onClick = this._onClick.event;\n        this._domNode = $('.floating-click-widget');\n        this._domNode.style.padding = '6px 11px';\n        this._domNode.style.borderRadius = '2px';\n        this._domNode.style.cursor = 'pointer';\n        this._domNode.style.zIndex = '1';\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    render() {\n        clearNode(this._domNode);\n        this._domNode.style.backgroundColor = asCssVariableWithDefault(buttonBackground, asCssVariable(editorBackground));\n        this._domNode.style.color = asCssVariableWithDefault(buttonForeground, asCssVariable(editorForeground));\n        this._domNode.style.border = `1px solid ${asCssVariable(contrastBorder)}`;\n        append(this._domNode, $('')).textContent = this.label;\n        this.onclick(this._domNode, () => this._onClick.fire());\n    }\n}\nlet AbstractFloatingClickMenu = class AbstractFloatingClickMenu extends Disposable {\n    constructor(menuId, menuService, contextKeyService) {\n        super();\n        this.renderEmitter = ( new Emitter());\n        this.onDidRender = this.renderEmitter.event;\n        this.menu = this._register(menuService.createMenu(menuId, contextKeyService));\n    }\n    render() {\n        const menuDisposables = this._register(( new DisposableStore()));\n        const renderMenuAsFloatingClickBtn = () => {\n            menuDisposables.clear();\n            if (!this.isVisible()) {\n                return;\n            }\n            const actions = [];\n            createAndFillInActionBarActions(this.menu, { renderShortTitle: true, shouldForwardArgs: true }, actions);\n            if (actions.length === 0) {\n                return;\n            }\n            const [first] = actions;\n            const widget = this.createWidget(first, menuDisposables);\n            menuDisposables.add(widget);\n            menuDisposables.add(widget.onClick(() => first.run(this.getActionArg())));\n            widget.render();\n        };\n        this._register(this.menu.onDidChange(renderMenuAsFloatingClickBtn));\n        renderMenuAsFloatingClickBtn();\n    }\n    getActionArg() {\n        return undefined;\n    }\n    isVisible() {\n        return true;\n    }\n};\nAbstractFloatingClickMenu = ( __decorate([\n    ( __param(1, IMenuService)),\n    ( __param(2, IContextKeyService))\n], AbstractFloatingClickMenu));\nexport { AbstractFloatingClickMenu, FloatingClickWidget };\n", "import { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { MultiCommand } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { registerAction2, Action2, MenuId } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { accessibleViewIsShown, accessibleViewSupportsNavigation, accessibilityHelpIsShown, accessibleViewGoToSymbolSupported, accessibleViewVerbosityEnabled, accessibleViewCurrentProviderId } from './accessibilityConfiguration.js';\nimport { IAccessibleViewService } from './accessibleView.js';\nimport { ICodeEditorService } from 'monaco-editor/esm/vs/editor/browser/services/codeEditorService.js';\nimport { InlineCompletionsController } from 'monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsController.js';\nimport { alert } from 'monaco-editor/esm/vs/base/browser/ui/aria/aria.js';\nconst accessibleViewMenu = {\n    id: MenuId.AccessibleView,\n    group: 'navigation',\n    when: accessibleViewIsShown\n};\nconst commandPalette = {\n    id: MenuId.CommandPalette,\n    group: '',\n    order: 1\n};\nclass AccessibleViewNextAction extends Action2 {\n    constructor() {\n        super({\n            id: \"editor.action.accessibleViewNext\" ,\n            precondition: ( ContextKeyExpr.and(accessibleViewIsShown, accessibleViewSupportsNavigation)),\n            keybinding: {\n                primary: 512  | 94 ,\n                weight: 200\n            },\n            menu: [\n                commandPalette,\n                {\n                    ...accessibleViewMenu,\n                    when: ( ContextKeyExpr.and(accessibleViewIsShown, accessibleViewSupportsNavigation)),\n                }\n            ],\n            icon: Codicon.arrowDown,\n            title: ( localize('editor.action.accessibleViewNext', \"Show Next in Accessible View\"))\n        });\n    }\n    run(accessor) {\n        accessor.get(IAccessibleViewService).next();\n    }\n}\nregisterAction2(AccessibleViewNextAction);\nclass AccessibleViewPreviousAction extends Action2 {\n    constructor() {\n        super({\n            id: \"editor.action.accessibleViewPrevious\" ,\n            precondition: ( ContextKeyExpr.and(accessibleViewIsShown, accessibleViewSupportsNavigation)),\n            keybinding: {\n                primary: 512  | 92 ,\n                weight: 200\n            },\n            icon: Codicon.arrowUp,\n            menu: [\n                commandPalette,\n                {\n                    ...accessibleViewMenu,\n                    when: ( ContextKeyExpr.and(accessibleViewIsShown, accessibleViewSupportsNavigation)),\n                }\n            ],\n            title: ( localize('editor.action.accessibleViewPrevious', \"Show Previous in Accessible View\"))\n        });\n    }\n    run(accessor) {\n        accessor.get(IAccessibleViewService).previous();\n    }\n}\nregisterAction2(AccessibleViewPreviousAction);\nclass AccessibleViewGoToSymbolAction extends Action2 {\n    constructor() {\n        super({\n            id: \"editor.action.accessibleViewGoToSymbol\" ,\n            precondition: ( ContextKeyExpr.and(( ContextKeyExpr.or(accessibleViewIsShown, accessibilityHelpIsShown)), accessibleViewGoToSymbolSupported)),\n            keybinding: {\n                primary: 2048  | 1024  | 45 ,\n                secondary: [2048  | 1024  | 89 ],\n                weight: 200  + 10\n            },\n            icon: Codicon.symbolField,\n            menu: [\n                commandPalette,\n                {\n                    ...accessibleViewMenu,\n                    when: ( ContextKeyExpr.and(( ContextKeyExpr.or(accessibleViewIsShown, accessibilityHelpIsShown)), accessibleViewGoToSymbolSupported)),\n                }\n            ],\n            title: ( localize(\n                'editor.action.accessibleViewGoToSymbol',\n                \"Go To Symbol in Accessible View\"\n            ))\n        });\n    }\n    run(accessor) {\n        accessor.get(IAccessibleViewService).goToSymbol();\n    }\n}\nregisterAction2(AccessibleViewGoToSymbolAction);\nfunction registerCommand(command) {\n    command.register();\n    return command;\n}\nconst AccessibilityHelpAction = registerCommand(( new MultiCommand({\n    id: \"editor.action.accessibilityHelp\" ,\n    precondition: undefined,\n    kbOpts: {\n        primary: 512  | 59 ,\n        weight: 200 ,\n        linux: {\n            primary: 512  | 1024  | 59 ,\n            secondary: [512  | 59 ]\n        }\n    },\n    menuOpts: [{\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: ( localize('editor.action.accessibilityHelp', \"Open Accessibility Help\")),\n            order: 1\n        }],\n})));\nconst AccessibleViewAction = registerCommand(( new MultiCommand({\n    id: \"editor.action.accessibleView\" ,\n    precondition: undefined,\n    kbOpts: {\n        primary: 512  | 60 ,\n        weight: 200 ,\n        linux: {\n            primary: 512  | 1024  | 60 ,\n            secondary: [512  | 60 ]\n        }\n    },\n    menuOpts: [{\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: ( localize('editor.action.accessibleView', \"Open Accessible View\")),\n            order: 1\n        }],\n})));\nclass AccessibleViewDisableHintAction extends Action2 {\n    constructor() {\n        super({\n            id: \"editor.action.accessibleViewDisableHint\" ,\n            precondition: ( ContextKeyExpr.and(( ContextKeyExpr.or(accessibleViewIsShown, accessibilityHelpIsShown)), accessibleViewVerbosityEnabled)),\n            keybinding: {\n                primary: 512  | 64 ,\n                weight: 200\n            },\n            icon: Codicon.bellSlash,\n            menu: [\n                commandPalette,\n                {\n                    id: MenuId.AccessibleView,\n                    group: 'navigation',\n                    when: ( ContextKeyExpr.and(( ContextKeyExpr.or(accessibleViewIsShown, accessibilityHelpIsShown)), accessibleViewVerbosityEnabled)),\n                }\n            ],\n            title: ( localize('editor.action.accessibleViewDisableHint', \"Disable Accessible View Hint\"))\n        });\n    }\n    run(accessor) {\n        accessor.get(IAccessibleViewService).disableHint();\n    }\n}\nregisterAction2(AccessibleViewDisableHintAction);\nclass AccessibleViewAcceptInlineCompletionAction extends Action2 {\n    constructor() {\n        super({\n            id: \"editor.action.accessibleViewAcceptInlineCompletion\" ,\n            precondition: ( ContextKeyExpr.and(accessibleViewIsShown, ( ContextKeyExpr.equals(\n                accessibleViewCurrentProviderId.key,\n                \"inlineCompletions\"\n            )))),\n            keybinding: {\n                primary: 2048  | 90 ,\n                mac: { primary: 256  | 90  },\n                weight: 200\n            },\n            icon: Codicon.check,\n            menu: [\n                commandPalette,\n                {\n                    id: MenuId.AccessibleView,\n                    group: 'navigation',\n                    order: 0,\n                    when: ( ContextKeyExpr.and(accessibleViewIsShown, ( ContextKeyExpr.equals(\n                        accessibleViewCurrentProviderId.key,\n                        \"inlineCompletions\"\n                    ))))\n                }\n            ],\n            title: ( localize(\n                'editor.action.accessibleViewAcceptInlineCompletionAction',\n                \"Accept Inline Completion\"\n            ))\n        });\n    }\n    async run(accessor) {\n        const codeEditorService = accessor.get(ICodeEditorService);\n        const editor = codeEditorService.getActiveCodeEditor() || codeEditorService.getFocusedCodeEditor();\n        if (!editor) {\n            return;\n        }\n        const model = InlineCompletionsController.get(editor)?.model.get();\n        const state = model?.state.get();\n        if (!model || !state) {\n            return;\n        }\n        await model.accept(editor);\n        alert('Accepted');\n        model.stop();\n        editor.focus();\n    }\n}\nregisterAction2(AccessibleViewAcceptInlineCompletionAction);\nexport { AccessibilityHelpAction, AccessibleViewAction };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport * as path from 'monaco-editor/esm/vs/base/common/path.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { registerEditorContribution } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { Severity, INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nlet LargeFileOptimizationsWarner = class LargeFileOptimizationsWarner extends Disposable {\n    static { this.ID = 'editor.contrib.largeFileOptimizationsWarner'; }\n    constructor(_editor, _notificationService, _configurationService) {\n        super();\n        this._editor = _editor;\n        this._notificationService = _notificationService;\n        this._configurationService = _configurationService;\n        this._register(this._editor.onDidChangeModel((e) => this._update()));\n        this._update();\n    }\n    _update() {\n        const model = this._editor.getModel();\n        if (!model) {\n            return;\n        }\n        if (model.isTooLargeForTokenization()) {\n            const message = ( nls.localize({\n                key: 'largeFile',\n                comment: [\n                    'Variable 0 will be a file name.'\n                ]\n            }, \"{0}: tokenization, wrapping, folding and sticky scroll have been turned off for this large file in order to reduce memory usage and avoid freezing or crashing.\", path.basename(model.uri.path)));\n            this._notificationService.prompt(Severity.Info, message, [\n                {\n                    label: ( nls.localize('removeOptimizations', \"Forcefully Enable Features\")),\n                    run: () => {\n                        this._configurationService.updateValue(`editor.largeFileOptimizations`, false).then(() => {\n                            this._notificationService.info(( nls.localize(\n                                'reopenFilePrompt',\n                                \"Please reopen file in order for this setting to take effect.\"\n                            )));\n                        }, (err) => {\n                            this._notificationService.error(err);\n                        });\n                    }\n                }\n            ], { neverShowAgain: { id: 'editor.contrib.largeFileOptimizationsWarner' } });\n        }\n    }\n};\nLargeFileOptimizationsWarner = ( __decorate([\n    ( __param(1, INotificationService)),\n    ( __param(2, IConfigurationService))\n], LargeFileOptimizationsWarner));\nregisterEditorContribution(LargeFileOptimizationsWarner.ID, LargeFileOptimizationsWarner, 1 );\nexport { LargeFileOptimizationsWarner };\n", "import { __decorate, __param } from '../../../../../../../../external/tslib/tslib.es6.js';\nimport './inspectEditorTokens.css.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { Color } from 'monaco-editor/esm/vs/base/common/color.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { registerEditorContribution, registerEditorAction, EditorAction } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { TokenMetadata } from 'monaco-editor/esm/vs/editor/common/encodedTokenAttributes.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { findMatchingThemeRule } from '../../../../services/textMate/common/TMHelper.js';\nimport { ITextMateTokenizationService } from '../../../../services/textMate/browser/textMateTokenizationFeature.js';\nimport { IWorkbenchThemeService } from '../../../../services/themes/common/workbenchThemeService.js';\nimport { CancellationTokenSource } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { SemanticTokenRule } from '../../../../../platform/theme/common/tokenClassificationRegistry.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { SEMANTIC_HIGHLIGHTING_SETTING_ID } from 'monaco-editor/esm/vs/editor/contrib/semanticTokens/common/semanticTokensConfig.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { ILanguageFeaturesService } from 'monaco-editor/esm/vs/editor/common/services/languageFeatures.js';\nvar InspectEditorTokensController_1;\nconst $ = dom.$;\nlet InspectEditorTokensController = class InspectEditorTokensController extends Disposable {\n    static { InspectEditorTokensController_1 = this; }\n    static { this.ID = 'editor.contrib.inspectEditorTokens'; }\n    static get(editor) {\n        return editor.getContribution(InspectEditorTokensController_1.ID);\n    }\n    constructor(editor, textMateService, languageService, themeService, notificationService, configurationService, languageFeaturesService) {\n        super();\n        this._editor = editor;\n        this._textMateService = textMateService;\n        this._themeService = themeService;\n        this._languageService = languageService;\n        this._notificationService = notificationService;\n        this._configurationService = configurationService;\n        this._languageFeaturesService = languageFeaturesService;\n        this._widget = null;\n        this._register(this._editor.onDidChangeModel((e) => this.stop()));\n        this._register(this._editor.onDidChangeModelLanguage((e) => this.stop()));\n        this._register(this._editor.onKeyUp((e) => e.keyCode === 9  && this.stop()));\n    }\n    dispose() {\n        this.stop();\n        super.dispose();\n    }\n    launch() {\n        if (this._widget) {\n            return;\n        }\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        if (this._editor.getModel().uri.scheme === Schemas.vscodeNotebookCell) {\n            return;\n        }\n        this._widget = ( new InspectEditorTokensWidget(\n            this._editor,\n            this._textMateService,\n            this._languageService,\n            this._themeService,\n            this._notificationService,\n            this._configurationService,\n            this._languageFeaturesService\n        ));\n    }\n    stop() {\n        if (this._widget) {\n            this._widget.dispose();\n            this._widget = null;\n        }\n    }\n    toggle() {\n        if (!this._widget) {\n            this.launch();\n        }\n        else {\n            this.stop();\n        }\n    }\n};\nInspectEditorTokensController = InspectEditorTokensController_1 = ( __decorate([\n    ( __param(1, ITextMateTokenizationService)),\n    ( __param(2, ILanguageService)),\n    ( __param(3, IWorkbenchThemeService)),\n    ( __param(4, INotificationService)),\n    ( __param(5, IConfigurationService)),\n    ( __param(6, ILanguageFeaturesService))\n], InspectEditorTokensController));\nclass InspectEditorTokens extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inspectTMScopes',\n            label: ( nls.localize('inspectEditorTokens', \"Developer: Inspect Editor Tokens and Scopes\")),\n            alias: 'Developer: Inspect Editor Tokens and Scopes',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const controller = InspectEditorTokensController.get(editor);\n        controller?.toggle();\n    }\n}\nfunction renderTokenText(tokenText) {\n    if (tokenText.length > 40) {\n        tokenText = tokenText.substr(0, 20) + '…' + tokenText.substr(tokenText.length - 20);\n    }\n    let result = '';\n    for (let charIndex = 0, len = tokenText.length; charIndex < len; charIndex++) {\n        const charCode = tokenText.charCodeAt(charIndex);\n        switch (charCode) {\n            case 9 :\n                result += '\\u2192';\n                break;\n            case 32 :\n                result += '\\u00B7';\n                break;\n            default:\n                result += String.fromCharCode(charCode);\n        }\n    }\n    return result;\n}\nclass InspectEditorTokensWidget extends Disposable {\n    static { this._ID = 'editor.contrib.inspectEditorTokensWidget'; }\n    constructor(editor, textMateService, languageService, themeService, notificationService, configurationService, languageFeaturesService) {\n        super();\n        this.allowEditorOverflow = true;\n        this._isDisposed = false;\n        this._editor = editor;\n        this._languageService = languageService;\n        this._themeService = themeService;\n        this._textMateService = textMateService;\n        this._notificationService = notificationService;\n        this._configurationService = configurationService;\n        this._languageFeaturesService = languageFeaturesService;\n        this._model = this._editor.getModel();\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'token-inspect-widget';\n        this._currentRequestCancellationTokenSource = ( new CancellationTokenSource());\n        this._beginCompute(this._editor.getPosition());\n        this._register(this._editor.onDidChangeCursorPosition((e) => this._beginCompute(this._editor.getPosition())));\n        this._register(themeService.onDidColorThemeChange(_ => this._beginCompute(this._editor.getPosition())));\n        this._register(configurationService.onDidChangeConfiguration(e => e.affectsConfiguration('editor.semanticHighlighting.enabled') && this._beginCompute(this._editor.getPosition())));\n        this._editor.addContentWidget(this);\n    }\n    dispose() {\n        this._isDisposed = true;\n        this._editor.removeContentWidget(this);\n        this._currentRequestCancellationTokenSource.cancel();\n        super.dispose();\n    }\n    getId() {\n        return InspectEditorTokensWidget._ID;\n    }\n    _beginCompute(position) {\n        const grammar = this._textMateService.createTokenizer(this._model.getLanguageId());\n        const semanticTokens = this._computeSemanticTokens(position);\n        dom.clearNode(this._domNode);\n        this._domNode.appendChild(document.createTextNode(( nls.localize('inspectTMScopesWidget.loading', \"Loading...\"))));\n        Promise.all([grammar, semanticTokens]).then(([grammar, semanticTokens]) => {\n            if (this._isDisposed) {\n                return;\n            }\n            this._compute(grammar, semanticTokens, position);\n            this._domNode.style.maxWidth = `${Math.max(this._editor.getLayoutInfo().width * 0.66, 500)}px`;\n            this._editor.layoutContentWidget(this);\n        }, (err) => {\n            this._notificationService.warn(err);\n            setTimeout(() => {\n                InspectEditorTokensController.get(this._editor)?.stop();\n            });\n        });\n    }\n    _isSemanticColoringEnabled() {\n        const setting = this._configurationService.getValue(SEMANTIC_HIGHLIGHTING_SETTING_ID, { overrideIdentifier: this._model.getLanguageId(), resource: this._model.uri })?.enabled;\n        if (typeof setting === 'boolean') {\n            return setting;\n        }\n        return this._themeService.getColorTheme().semanticHighlighting;\n    }\n    _compute(grammar, semanticTokens, position) {\n        const textMateTokenInfo = grammar && this._getTokensAtPosition(grammar, position);\n        const semanticTokenInfo = semanticTokens && this._getSemanticTokenAtPosition(semanticTokens, position);\n        if (!textMateTokenInfo && !semanticTokenInfo) {\n            dom.reset(this._domNode, 'No grammar or semantic tokens available.');\n            return;\n        }\n        const tmMetadata = textMateTokenInfo?.metadata;\n        const semMetadata = semanticTokenInfo?.metadata;\n        const semTokenText = semanticTokenInfo && renderTokenText(this._model.getValueInRange(semanticTokenInfo.range));\n        const tmTokenText = textMateTokenInfo && renderTokenText(this._model.getLineContent(position.lineNumber).substring(textMateTokenInfo.token.startIndex, textMateTokenInfo.token.endIndex));\n        const tokenText = semTokenText || tmTokenText || '';\n        dom.reset(this._domNode, $('h2.tiw-token', undefined, tokenText, $('span.tiw-token-length', undefined, `${tokenText.length} ${tokenText.length === 1 ? 'char' : 'chars'}`)));\n        dom.append(this._domNode, $('hr.tiw-metadata-separator', { 'style': 'clear:both' }));\n        dom.append(this._domNode, $('table.tiw-metadata-table', undefined, $('tbody', undefined, $('tr', undefined, $('td.tiw-metadata-key', undefined, 'language'), $('td.tiw-metadata-value', undefined, tmMetadata?.languageId || '')), $('tr', undefined, $('td.tiw-metadata-key', undefined, 'standard token type'), $('td.tiw-metadata-value', undefined, this._tokenTypeToString(tmMetadata?.tokenType || 0 ))), ...this._formatMetadata(semMetadata, tmMetadata))));\n        if (semanticTokenInfo) {\n            dom.append(this._domNode, $('hr.tiw-metadata-separator'));\n            const table = dom.append(this._domNode, $('table.tiw-metadata-table', undefined));\n            const tbody = dom.append(table, $('tbody', undefined, $('tr', undefined, $('td.tiw-metadata-key', undefined, 'semantic token type'), $('td.tiw-metadata-value', undefined, semanticTokenInfo.type))));\n            if (semanticTokenInfo.modifiers.length) {\n                dom.append(tbody, $('tr', undefined, $('td.tiw-metadata-key', undefined, 'modifiers'), $('td.tiw-metadata-value', undefined, semanticTokenInfo.modifiers.join(' '))));\n            }\n            if (semanticTokenInfo.metadata) {\n                const properties = ['foreground', 'bold', 'italic', 'underline', 'strikethrough'];\n                const propertiesByDefValue = {};\n                const allDefValues = ( new Array());\n                for (const property of properties) {\n                    if (semanticTokenInfo.metadata[property] !== undefined) {\n                        const definition = semanticTokenInfo.definitions[property];\n                        const defValue = this._renderTokenStyleDefinition(definition, property);\n                        const defValueStr = ( defValue.map(el => el instanceof HTMLElement ? el.outerHTML : el)).join();\n                        let properties = propertiesByDefValue[defValueStr];\n                        if (!properties) {\n                            propertiesByDefValue[defValueStr] = properties = [];\n                            allDefValues.push([defValue, defValueStr]);\n                        }\n                        properties.push(property);\n                    }\n                }\n                for (const [defValue, defValueStr] of allDefValues) {\n                    dom.append(tbody, $('tr', undefined, $('td.tiw-metadata-key', undefined, propertiesByDefValue[defValueStr].join(', ')), $('td.tiw-metadata-value', undefined, ...defValue)));\n                }\n            }\n        }\n        if (textMateTokenInfo) {\n            const theme = this._themeService.getColorTheme();\n            dom.append(this._domNode, $('hr.tiw-metadata-separator'));\n            const table = dom.append(this._domNode, $('table.tiw-metadata-table'));\n            const tbody = dom.append(table, $('tbody'));\n            if (tmTokenText && tmTokenText !== tokenText) {\n                dom.append(tbody, $('tr', undefined, $('td.tiw-metadata-key', undefined, 'textmate token'), $('td.tiw-metadata-value', undefined, `${tmTokenText} (${tmTokenText.length})`)));\n            }\n            const scopes = ( new Array());\n            for (let i = textMateTokenInfo.token.scopes.length - 1; i >= 0; i--) {\n                scopes.push(textMateTokenInfo.token.scopes[i]);\n                if (i > 0) {\n                    scopes.push($('br'));\n                }\n            }\n            dom.append(tbody, $('tr', undefined, $('td.tiw-metadata-key', undefined, 'textmate scopes'), $('td.tiw-metadata-value.tiw-metadata-scopes', undefined, ...scopes)));\n            const matchingRule = findMatchingThemeRule(theme, textMateTokenInfo.token.scopes, false);\n            const semForeground = semanticTokenInfo?.metadata?.foreground;\n            if (matchingRule) {\n                if (semForeground !== textMateTokenInfo.metadata.foreground) {\n                    let defValue = $('code.tiw-theme-selector', undefined, matchingRule.rawSelector, $('br'), JSON.stringify(matchingRule.settings, null, '\\t'));\n                    if (semForeground) {\n                        defValue = $('s', undefined, defValue);\n                    }\n                    dom.append(tbody, $('tr', undefined, $('td.tiw-metadata-key', undefined, 'foreground'), $('td.tiw-metadata-value', undefined, defValue)));\n                }\n            }\n            else if (!semForeground) {\n                dom.append(tbody, $('tr', undefined, $('td.tiw-metadata-key', undefined, 'foreground'), $('td.tiw-metadata-value', undefined, 'No theme selector')));\n            }\n        }\n    }\n    _formatMetadata(semantic, tm) {\n        const elements = ( new Array());\n        function render(property) {\n            const value = semantic?.[property] || tm?.[property];\n            if (value !== undefined) {\n                const semanticStyle = semantic?.[property] ? 'tiw-metadata-semantic' : '';\n                elements.push($('tr', undefined, $('td.tiw-metadata-key', undefined, property), $(`td.tiw-metadata-value.${semanticStyle}`, undefined, value)));\n            }\n            return value;\n        }\n        const foreground = render('foreground');\n        const background = render('background');\n        if (foreground && background) {\n            const backgroundColor = ( Color.fromHex(background)), foregroundColor = ( Color.fromHex(foreground));\n            if (backgroundColor.isOpaque()) {\n                elements.push($('tr', undefined, $('td.tiw-metadata-key', undefined, 'contrast ratio'), $('td.tiw-metadata-value', undefined, backgroundColor.getContrastRatio(foregroundColor.makeOpaque(backgroundColor)).toFixed(2))));\n            }\n            else {\n                elements.push($('tr', undefined, $('td.tiw-metadata-key', undefined, 'Contrast ratio cannot be precise for background colors that use transparency'), $('td.tiw-metadata-value')));\n            }\n        }\n        const fontStyleLabels = ( new Array());\n        function addStyle(key) {\n            let label;\n            if (semantic && semantic[key]) {\n                label = $('span.tiw-metadata-semantic', undefined, key);\n            }\n            else if (tm && tm[key]) {\n                label = key;\n            }\n            if (label) {\n                if (fontStyleLabels.length) {\n                    fontStyleLabels.push(' ');\n                }\n                fontStyleLabels.push(label);\n            }\n        }\n        addStyle('bold');\n        addStyle('italic');\n        addStyle('underline');\n        addStyle('strikethrough');\n        if (fontStyleLabels.length) {\n            elements.push($('tr', undefined, $('td.tiw-metadata-key', undefined, 'font style'), $('td.tiw-metadata-value', undefined, ...fontStyleLabels)));\n        }\n        return elements;\n    }\n    _decodeMetadata(metadata) {\n        const colorMap = this._themeService.getColorTheme().tokenColorMap;\n        const languageId = TokenMetadata.getLanguageId(metadata);\n        const tokenType = TokenMetadata.getTokenType(metadata);\n        const fontStyle = TokenMetadata.getFontStyle(metadata);\n        const foreground = TokenMetadata.getForeground(metadata);\n        const background = TokenMetadata.getBackground(metadata);\n        return {\n            languageId: this._languageService.languageIdCodec.decodeLanguageId(languageId),\n            tokenType: tokenType,\n            bold: ((fontStyle & 2) ) ? true : undefined,\n            italic: ((fontStyle & 1) ) ? true : undefined,\n            underline: ((fontStyle & 4) ) ? true : undefined,\n            strikethrough: ((fontStyle & 8) ) ? true : undefined,\n            foreground: colorMap[foreground],\n            background: colorMap[background]\n        };\n    }\n    _tokenTypeToString(tokenType) {\n        switch (tokenType) {\n            case 0 : return 'Other';\n            case 1 : return 'Comment';\n            case 2 : return 'String';\n            case 3 : return 'RegEx';\n            default: return '??';\n        }\n    }\n    _getTokensAtPosition(grammar, position) {\n        const lineNumber = position.lineNumber;\n        const stateBeforeLine = this._getStateBeforeLine(grammar, lineNumber);\n        const tokenizationResult1 = grammar.tokenizeLine(this._model.getLineContent(lineNumber), stateBeforeLine);\n        const tokenizationResult2 = grammar.tokenizeLine2(this._model.getLineContent(lineNumber), stateBeforeLine);\n        let token1Index = 0;\n        for (let i = tokenizationResult1.tokens.length - 1; i >= 0; i--) {\n            const t = tokenizationResult1.tokens[i];\n            if (position.column - 1 >= t.startIndex) {\n                token1Index = i;\n                break;\n            }\n        }\n        let token2Index = 0;\n        for (let i = (tokenizationResult2.tokens.length >>> 1); i >= 0; i--) {\n            if (position.column - 1 >= tokenizationResult2.tokens[(i << 1)]) {\n                token2Index = i;\n                break;\n            }\n        }\n        return {\n            token: tokenizationResult1.tokens[token1Index],\n            metadata: this._decodeMetadata(tokenizationResult2.tokens[(token2Index << 1) + 1])\n        };\n    }\n    _getStateBeforeLine(grammar, lineNumber) {\n        let state = null;\n        for (let i = 1; i < lineNumber; i++) {\n            const tokenizationResult = grammar.tokenizeLine(this._model.getLineContent(i), state);\n            state = tokenizationResult.ruleStack;\n        }\n        return state;\n    }\n    isSemanticTokens(token) {\n        return token && token.data;\n    }\n    async _computeSemanticTokens(position) {\n        if (!this._isSemanticColoringEnabled()) {\n            return null;\n        }\n        const tokenProviders = this._languageFeaturesService.documentSemanticTokensProvider.ordered(this._model);\n        if (tokenProviders.length) {\n            const provider = tokenProviders[0];\n            const tokens = await Promise.resolve(provider.provideDocumentSemanticTokens(this._model, null, this._currentRequestCancellationTokenSource.token));\n            if (this.isSemanticTokens(tokens)) {\n                return { tokens, legend: provider.getLegend() };\n            }\n        }\n        const rangeTokenProviders = this._languageFeaturesService.documentRangeSemanticTokensProvider.ordered(this._model);\n        if (rangeTokenProviders.length) {\n            const provider = rangeTokenProviders[0];\n            const lineNumber = position.lineNumber;\n            const range = ( new Range(lineNumber, 1, lineNumber, this._model.getLineMaxColumn(lineNumber)));\n            const tokens = await Promise.resolve(provider.provideDocumentRangeSemanticTokens(this._model, range, this._currentRequestCancellationTokenSource.token));\n            if (this.isSemanticTokens(tokens)) {\n                return { tokens, legend: provider.getLegend() };\n            }\n        }\n        return null;\n    }\n    _getSemanticTokenAtPosition(semanticTokens, pos) {\n        const tokenData = semanticTokens.tokens.data;\n        const defaultLanguage = this._model.getLanguageId();\n        let lastLine = 0;\n        let lastCharacter = 0;\n        const posLine = pos.lineNumber - 1, posCharacter = pos.column - 1;\n        for (let i = 0; i < tokenData.length; i += 5) {\n            const lineDelta = tokenData[i], charDelta = tokenData[i + 1], len = tokenData[i + 2], typeIdx = tokenData[i + 3], modSet = tokenData[i + 4];\n            const line = lastLine + lineDelta;\n            const character = lineDelta === 0 ? lastCharacter + charDelta : charDelta;\n            if (posLine === line && character <= posCharacter && posCharacter < character + len) {\n                const type = semanticTokens.legend.tokenTypes[typeIdx] || 'not in legend (ignored)';\n                const modifiers = [];\n                let modifierSet = modSet;\n                for (let modifierIndex = 0; modifierSet > 0 && modifierIndex < semanticTokens.legend.tokenModifiers.length; modifierIndex++) {\n                    if (modifierSet & 1) {\n                        modifiers.push(semanticTokens.legend.tokenModifiers[modifierIndex]);\n                    }\n                    modifierSet = modifierSet >> 1;\n                }\n                if (modifierSet > 0) {\n                    modifiers.push('not in legend (ignored)');\n                }\n                const range = ( new Range(line + 1, character + 1, line + 1, character + 1 + len));\n                const definitions = {};\n                const colorMap = this._themeService.getColorTheme().tokenColorMap;\n                const theme = this._themeService.getColorTheme();\n                const tokenStyle = theme.getTokenStyleMetadata(type, modifiers, defaultLanguage, true, definitions);\n                let metadata = undefined;\n                if (tokenStyle) {\n                    metadata = {\n                        languageId: undefined,\n                        tokenType: 0 ,\n                        bold: tokenStyle?.bold,\n                        italic: tokenStyle?.italic,\n                        underline: tokenStyle?.underline,\n                        strikethrough: tokenStyle?.strikethrough,\n                        foreground: colorMap[tokenStyle?.foreground || 0 ],\n                        background: undefined\n                    };\n                }\n                return { type, modifiers, range, metadata, definitions };\n            }\n            lastLine = line;\n            lastCharacter = character;\n        }\n        return null;\n    }\n    _renderTokenStyleDefinition(definition, property) {\n        const elements = ( new Array());\n        if (definition === undefined) {\n            return elements;\n        }\n        const theme = this._themeService.getColorTheme();\n        if (Array.isArray(definition)) {\n            const scopesDefinition = {};\n            theme.resolveScopes(definition, scopesDefinition);\n            const matchingRule = scopesDefinition[property];\n            if (matchingRule && scopesDefinition.scope) {\n                const scopes = $('ul.tiw-metadata-values');\n                const strScopes = Array.isArray(matchingRule.scope) ? matchingRule.scope : [String(matchingRule.scope)];\n                for (const strScope of strScopes) {\n                    scopes.appendChild($('li.tiw-metadata-value.tiw-metadata-scopes', undefined, strScope));\n                }\n                elements.push(scopesDefinition.scope.join(' '), scopes, $('code.tiw-theme-selector', undefined, JSON.stringify(matchingRule.settings, null, '\\t')));\n                return elements;\n            }\n            return elements;\n        }\n        else if (SemanticTokenRule.is(definition)) {\n            const scope = theme.getTokenStylingRuleScope(definition);\n            if (scope === 'setting') {\n                elements.push(`User settings: ${definition.selector.id} - ${this._renderStyleProperty(definition.style, property)}`);\n                return elements;\n            }\n            else if (scope === 'theme') {\n                elements.push(`Color theme: ${definition.selector.id} - ${this._renderStyleProperty(definition.style, property)}`);\n                return elements;\n            }\n            return elements;\n        }\n        else {\n            const style = theme.resolveTokenStyleValue(definition);\n            elements.push(`Default: ${style ? this._renderStyleProperty(style, property) : ''}`);\n            return elements;\n        }\n    }\n    _renderStyleProperty(style, property) {\n        switch (property) {\n            case 'foreground': return style.foreground ? Color.Format.CSS.formatHexA(style.foreground, true) : '';\n            default: return style[property] !== undefined ? String(style[property]) : '';\n        }\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return {\n            position: this._editor.getPosition(),\n            preference: [2 , 1 ]\n        };\n    }\n}\nregisterEditorContribution(InspectEditorTokensController.ID, InspectEditorTokensController, 4 );\nregisterEditorAction(InspectEditorTokens);\n", "import n from '../../../../../../../../external/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".token-inspect-widget{border:1px solid var(--vscode-editorHoverWidget-border);padding:10px;user-select:text;-webkit-user-select:text;z-index:50}.hc-black .tokens-inspect-widget,.hc-light .tokens-inspect-widget{border-width:2px}.monaco-editor .token-inspect-widget{background-color:var(--vscode-editorHoverWidget-background)}.monaco-editor .token-inspect-widget .tiw-metadata-separator{background-color:var(--vscode-editorHoverWidget-border)}.tiw-token{font-family:var(--monaco-monospace-font)}.tiw-metadata-separator{border:0;height:1px}.tiw-token-length{float:right;font-size:60%;font-weight:400}.tiw-metadata-table{width:100%}.tiw-metadata-value{font-family:var(--monaco-monospace-font);word-break:break-word}.tiw-metadata-values{list-style:none;margin-right:-10px;max-height:300px;overflow-y:auto;padding-left:0}.tiw-metadata-values>.tiw-metadata-value{margin-right:10px}.tiw-metadata-key{min-width:150px;padding-right:10px;vertical-align:top;white-space:nowrap;width:1px}.tiw-metadata-semantic{font-style:italic}.tiw-metadata-scopes{line-height:normal}.tiw-theme-selector{font-family:var(--monaco-monospace-font)}\";\nn(css,{});\nexport { css, css as default };\n", "function findMatchingThemeRule(theme, scopes, onlyColorRules = true) {\n    for (let i = scopes.length - 1; i >= 0; i--) {\n        const parentScopes = scopes.slice(0, i);\n        const scope = scopes[i];\n        const r = findMatchingThemeRule2(theme, scope, parentScopes, onlyColorRules);\n        if (r) {\n            return r;\n        }\n    }\n    return null;\n}\nfunction findMatchingThemeRule2(theme, scope, parentScopes, onlyColorRules) {\n    let result = null;\n    for (let i = theme.tokenColors.length - 1; i >= 0; i--) {\n        const rule = theme.tokenColors[i];\n        if (onlyColorRules && !rule.settings.foreground) {\n            continue;\n        }\n        let selectors;\n        if (typeof rule.scope === 'string') {\n            selectors = ( rule.scope.split(/,/).map(scope => scope.trim()));\n        }\n        else if (Array.isArray(rule.scope)) {\n            selectors = rule.scope;\n        }\n        else {\n            continue;\n        }\n        for (let j = 0, lenJ = selectors.length; j < lenJ; j++) {\n            const rawSelector = selectors[j];\n            const themeRule = ( new ThemeRule(rawSelector, rule.settings));\n            if (themeRule.matches(scope, parentScopes)) {\n                if (themeRule.isMoreSpecific(result)) {\n                    result = themeRule;\n                }\n            }\n        }\n    }\n    return result;\n}\nclass ThemeRule {\n    constructor(rawSelector, settings) {\n        this.rawSelector = rawSelector;\n        this.settings = settings;\n        const rawSelectorPieces = this.rawSelector.split(/ /);\n        this.scope = rawSelectorPieces[rawSelectorPieces.length - 1];\n        this.parentScopes = rawSelectorPieces.slice(0, rawSelectorPieces.length - 1);\n    }\n    matches(scope, parentScopes) {\n        return ThemeRule._matches(this.scope, this.parentScopes, scope, parentScopes);\n    }\n    static _cmp(a, b) {\n        if (a === null && b === null) {\n            return 0;\n        }\n        if (a === null) {\n            return -1;\n        }\n        if (b === null) {\n            return 1;\n        }\n        if (a.scope.length !== b.scope.length) {\n            return a.scope.length - b.scope.length;\n        }\n        const aParentScopesLen = a.parentScopes.length;\n        const bParentScopesLen = b.parentScopes.length;\n        if (aParentScopesLen !== bParentScopesLen) {\n            return aParentScopesLen - bParentScopesLen;\n        }\n        for (let i = 0; i < aParentScopesLen; i++) {\n            const aLen = a.parentScopes[i].length;\n            const bLen = b.parentScopes[i].length;\n            if (aLen !== bLen) {\n                return aLen - bLen;\n            }\n        }\n        return 0;\n    }\n    isMoreSpecific(other) {\n        return (ThemeRule._cmp(this, other) > 0);\n    }\n    static _matchesOne(selectorScope, scope) {\n        const selectorPrefix = selectorScope + '.';\n        if (selectorScope === scope || scope.substring(0, selectorPrefix.length) === selectorPrefix) {\n            return true;\n        }\n        return false;\n    }\n    static _matches(selectorScope, selectorParentScopes, scope, parentScopes) {\n        if (!this._matchesOne(selectorScope, scope)) {\n            return false;\n        }\n        let selectorParentIndex = selectorParentScopes.length - 1;\n        let parentIndex = parentScopes.length - 1;\n        while (selectorParentIndex >= 0 && parentIndex >= 0) {\n            if (this._matchesOne(selectorParentScopes[selectorParentIndex], parentScopes[parentIndex])) {\n                selectorParentIndex--;\n            }\n            parentIndex--;\n        }\n        if (selectorParentIndex === -1) {\n            return true;\n        }\n        return false;\n    }\n}\nexport { ThemeRule, findMatchingThemeRule };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport * as strings from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { isCodeEditor } from 'monaco-editor/esm/vs/editor/browser/editorBrowser.js';\nimport { ICodeEditorService } from 'monaco-editor/esm/vs/editor/browser/services/codeEditorService.js';\nimport { trimTrailingWhitespace } from 'monaco-editor/esm/vs/editor/common/commands/trimTrailingWhitespaceCommand.js';\nimport { EditOperation } from 'monaco-editor/esm/vs/editor/common/core/editOperation.js';\nimport { Position } from 'monaco-editor/esm/vs/editor/common/core/position.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { applyCodeAction, ApplyCodeActionReason, getCodeActions } from 'monaco-editor/esm/vs/editor/contrib/codeAction/browser/codeAction.js';\nimport { CodeActionKind, CodeActionTriggerSource } from 'monaco-editor/esm/vs/editor/contrib/codeAction/common/types.js';\nimport { formatDocumentWithSelectedProvider, formatDocumentRangesWithSelectedProvider } from 'monaco-editor/esm/vs/editor/contrib/format/browser/format.js';\nimport { SnippetController2 } from 'monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetController2.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Progress } from 'monaco-editor/esm/vs/platform/progress/common/progress.js';\nimport { ITextFileService } from '../../../services/textfile/common/textfiles.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { Extensions } from '../../../common/contributions.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { getModifiedRanges } from '../../format/browser/formatModified.js';\nimport { ILanguageFeaturesService } from 'monaco-editor/esm/vs/editor/common/services/languageFeatures.js';\nlet TrimWhitespaceParticipant = class TrimWhitespaceParticipant {\n    constructor(configurationService, codeEditorService) {\n        this.configurationService = configurationService;\n        this.codeEditorService = codeEditorService;\n    }\n    async participate(model, env) {\n        if (!model.textEditorModel) {\n            return;\n        }\n        if (this.configurationService.getValue('files.trimTrailingWhitespace', { overrideIdentifier: model.textEditorModel.getLanguageId(), resource: model.resource })) {\n            this.doTrimTrailingWhitespace(model.textEditorModel, env.reason === 2 );\n        }\n    }\n    doTrimTrailingWhitespace(model, isAutoSaved) {\n        let prevSelection = [];\n        let cursors = [];\n        const editor = findEditor(model, this.codeEditorService);\n        if (editor) {\n            prevSelection = editor.getSelections();\n            if (isAutoSaved) {\n                cursors = ( prevSelection.map(s => s.getPosition()));\n                const snippetsRange = SnippetController2.get(editor)?.getSessionEnclosingRange();\n                if (snippetsRange) {\n                    for (let lineNumber = snippetsRange.startLineNumber; lineNumber <= snippetsRange.endLineNumber; lineNumber++) {\n                        cursors.push(( new Position(lineNumber, model.getLineMaxColumn(lineNumber))));\n                    }\n                }\n            }\n        }\n        const ops = trimTrailingWhitespace(model, cursors);\n        if (!ops.length) {\n            return;\n        }\n        model.pushEditOperations(prevSelection, ops, (_edits) => prevSelection);\n    }\n};\nTrimWhitespaceParticipant = ( __decorate([\n    ( __param(0, IConfigurationService)),\n    ( __param(1, ICodeEditorService))\n], TrimWhitespaceParticipant));\nfunction findEditor(model, codeEditorService) {\n    let candidate = null;\n    if (model.isAttachedToEditor()) {\n        for (const editor of codeEditorService.listCodeEditors()) {\n            if (editor.hasModel() && editor.getModel() === model) {\n                if (editor.hasTextFocus()) {\n                    return editor;\n                }\n                candidate = editor;\n            }\n        }\n    }\n    return candidate;\n}\nlet FinalNewLineParticipant = class FinalNewLineParticipant {\n    constructor(configurationService, codeEditorService) {\n        this.configurationService = configurationService;\n        this.codeEditorService = codeEditorService;\n    }\n    async participate(model, _env) {\n        if (!model.textEditorModel) {\n            return;\n        }\n        if (this.configurationService.getValue('files.insertFinalNewline', { overrideIdentifier: model.textEditorModel.getLanguageId(), resource: model.resource })) {\n            this.doInsertFinalNewLine(model.textEditorModel);\n        }\n    }\n    doInsertFinalNewLine(model) {\n        const lineCount = model.getLineCount();\n        const lastLine = model.getLineContent(lineCount);\n        const lastLineIsEmptyOrWhitespace = strings.lastNonWhitespaceIndex(lastLine) === -1;\n        if (!lineCount || lastLineIsEmptyOrWhitespace) {\n            return;\n        }\n        const edits = [EditOperation.insert(( new Position(lineCount, model.getLineMaxColumn(lineCount))), model.getEOL())];\n        const editor = findEditor(model, this.codeEditorService);\n        if (editor) {\n            editor.executeEdits('insertFinalNewLine', edits, editor.getSelections());\n        }\n        else {\n            model.pushEditOperations([], edits, () => null);\n        }\n    }\n};\nFinalNewLineParticipant = ( __decorate([\n    ( __param(0, IConfigurationService)),\n    ( __param(1, ICodeEditorService))\n], FinalNewLineParticipant));\nlet TrimFinalNewLinesParticipant = class TrimFinalNewLinesParticipant {\n    constructor(configurationService, codeEditorService) {\n        this.configurationService = configurationService;\n        this.codeEditorService = codeEditorService;\n    }\n    async participate(model, env) {\n        if (!model.textEditorModel) {\n            return;\n        }\n        if (this.configurationService.getValue('files.trimFinalNewlines', { overrideIdentifier: model.textEditorModel.getLanguageId(), resource: model.resource })) {\n            this.doTrimFinalNewLines(model.textEditorModel, env.reason === 2 );\n        }\n    }\n    findLastNonEmptyLine(model) {\n        for (let lineNumber = model.getLineCount(); lineNumber >= 1; lineNumber--) {\n            const lineContent = model.getLineContent(lineNumber);\n            if (lineContent.length > 0) {\n                return lineNumber;\n            }\n        }\n        return 0;\n    }\n    doTrimFinalNewLines(model, isAutoSaved) {\n        const lineCount = model.getLineCount();\n        if (lineCount === 1) {\n            return;\n        }\n        let prevSelection = [];\n        let cannotTouchLineNumber = 0;\n        const editor = findEditor(model, this.codeEditorService);\n        if (editor) {\n            prevSelection = editor.getSelections();\n            if (isAutoSaved) {\n                for (let i = 0, len = prevSelection.length; i < len; i++) {\n                    const positionLineNumber = prevSelection[i].positionLineNumber;\n                    if (positionLineNumber > cannotTouchLineNumber) {\n                        cannotTouchLineNumber = positionLineNumber;\n                    }\n                }\n            }\n        }\n        const lastNonEmptyLine = this.findLastNonEmptyLine(model);\n        const deleteFromLineNumber = Math.max(lastNonEmptyLine + 1, cannotTouchLineNumber + 1);\n        const deletionRange = model.validateRange(( new Range(deleteFromLineNumber, 1, lineCount, model.getLineMaxColumn(lineCount))));\n        if (deletionRange.isEmpty()) {\n            return;\n        }\n        model.pushEditOperations(prevSelection, [EditOperation.delete(deletionRange)], _edits => prevSelection);\n        editor?.setSelections(prevSelection);\n    }\n};\nTrimFinalNewLinesParticipant = ( __decorate([\n    ( __param(0, IConfigurationService)),\n    ( __param(1, ICodeEditorService))\n], TrimFinalNewLinesParticipant));\nlet FormatOnSaveParticipant = class FormatOnSaveParticipant {\n    constructor(configurationService, codeEditorService, instantiationService) {\n        this.configurationService = configurationService;\n        this.codeEditorService = codeEditorService;\n        this.instantiationService = instantiationService;\n    }\n    async participate(model, env, progress, token) {\n        if (!model.textEditorModel) {\n            return;\n        }\n        if (env.reason === 2 ) {\n            return undefined;\n        }\n        const textEditorModel = model.textEditorModel;\n        const overrides = { overrideIdentifier: textEditorModel.getLanguageId(), resource: textEditorModel.uri };\n        const nestedProgress = ( new Progress(provider => {\n            progress.report({\n                message: ( localize(\n                    { key: 'formatting2', comment: ['[configure]({1}) is a link. Only translate `configure`. Do not change brackets and parentheses or {1}'] },\n                    \"Running '{0}' Formatter ([configure]({1})).\",\n                    provider.displayName || provider.extensionId && provider.extensionId.value || '???',\n                    'command:workbench.action.openSettings?%5B%22editor.formatOnSave%22%5D'\n                ))\n            });\n        }));\n        const enabled = this.configurationService.getValue('editor.formatOnSave', overrides);\n        if (!enabled) {\n            return undefined;\n        }\n        const editorOrModel = findEditor(textEditorModel, this.codeEditorService) || textEditorModel;\n        const mode = this.configurationService.getValue('editor.formatOnSaveMode', overrides);\n        if (mode === 'file') {\n            await this.instantiationService.invokeFunction(formatDocumentWithSelectedProvider, editorOrModel, 2 , nestedProgress, token);\n        }\n        else {\n            const ranges = await this.instantiationService.invokeFunction(getModifiedRanges, isCodeEditor(editorOrModel) ? editorOrModel.getModel() : editorOrModel);\n            if (ranges === null && mode === 'modificationsIfAvailable') {\n                await this.instantiationService.invokeFunction(formatDocumentWithSelectedProvider, editorOrModel, 2 , nestedProgress, token);\n            }\n            else if (ranges) {\n                await this.instantiationService.invokeFunction(formatDocumentRangesWithSelectedProvider, editorOrModel, ranges, 2 , nestedProgress, token);\n            }\n        }\n    }\n};\nFormatOnSaveParticipant = ( __decorate([\n    ( __param(0, IConfigurationService)),\n    ( __param(1, ICodeEditorService)),\n    ( __param(2, IInstantiationService))\n], FormatOnSaveParticipant));\nlet CodeActionOnSaveParticipant = class CodeActionOnSaveParticipant {\n    constructor(configurationService, instantiationService, languageFeaturesService) {\n        this.configurationService = configurationService;\n        this.instantiationService = instantiationService;\n        this.languageFeaturesService = languageFeaturesService;\n    }\n    async participate(model, env, progress, token) {\n        if (!model.textEditorModel) {\n            return;\n        }\n        if (env.reason !== 1 ) {\n            return undefined;\n        }\n        const textEditorModel = model.textEditorModel;\n        const settingsOverrides = { overrideIdentifier: textEditorModel.getLanguageId(), resource: model.resource };\n        const setting = this.configurationService.getValue('editor.codeActionsOnSave', settingsOverrides);\n        if (!setting) {\n            return undefined;\n        }\n        const settingItems = Array.isArray(setting)\n            ? setting\n            : ( Object.keys(setting)).filter(x => setting[x]);\n        const codeActionsOnSave = this.createCodeActionsOnSave(settingItems);\n        if (!Array.isArray(setting)) {\n            codeActionsOnSave.sort((a, b) => {\n                if (CodeActionKind.SourceFixAll.contains(a)) {\n                    if (CodeActionKind.SourceFixAll.contains(b)) {\n                        return 0;\n                    }\n                    return -1;\n                }\n                if (CodeActionKind.SourceFixAll.contains(b)) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n        if (!codeActionsOnSave.length) {\n            return undefined;\n        }\n        const excludedActions = Array.isArray(setting)\n            ? []\n            : ( ( Object.keys(setting))\n                .filter(x => setting[x] === false)\n                .map(x => ( new CodeActionKind(x))));\n        progress.report({ message: ( localize('codeaction', \"Quick Fixes\")) });\n        await this.applyOnSaveActions(textEditorModel, codeActionsOnSave, excludedActions, progress, token);\n    }\n    createCodeActionsOnSave(settingItems) {\n        const kinds = ( settingItems.map(x => ( new CodeActionKind(x))));\n        return kinds.filter(kind => {\n            return kinds.every(otherKind => otherKind.equals(kind) || !otherKind.contains(kind));\n        });\n    }\n    async applyOnSaveActions(model, codeActionsOnSave, excludes, progress, token) {\n        const getActionProgress = new (class {\n            constructor() {\n                this._names = ( new Set());\n            }\n            _report() {\n                progress.report({\n                    message: ( localize(\n                        { key: 'codeaction.get2', comment: ['[configure]({1}) is a link. Only translate `configure`. Do not change brackets and parentheses or {1}'] },\n                        \"Getting code actions from '{0}' ([configure]({1})).\",\n                        ( [...this._names].map(name => `'${name}'`)).join(', '),\n                        'command:workbench.action.openSettings?%5B%22editor.codeActionsOnSave%22%5D'\n                    ))\n                });\n            }\n            report(provider) {\n                if (provider.displayName && !( this._names.has(provider.displayName))) {\n                    this._names.add(provider.displayName);\n                    this._report();\n                }\n            }\n        });\n        for (const codeActionKind of codeActionsOnSave) {\n            const actionsToRun = await this.getActionsToRun(model, codeActionKind, excludes, getActionProgress, token);\n            if (token.isCancellationRequested) {\n                actionsToRun.dispose();\n                return;\n            }\n            try {\n                for (const action of actionsToRun.validActions) {\n                    progress.report({ message: ( localize('codeAction.apply', \"Applying code action '{0}'.\", action.action.title)) });\n                    await this.instantiationService.invokeFunction(applyCodeAction, action, ApplyCodeActionReason.OnSave, {}, token);\n                    if (token.isCancellationRequested) {\n                        return;\n                    }\n                }\n            }\n            catch {\n            }\n            finally {\n                actionsToRun.dispose();\n            }\n        }\n    }\n    getActionsToRun(model, codeActionKind, excludes, progress, token) {\n        return getCodeActions(this.languageFeaturesService.codeActionProvider, model, model.getFullModelRange(), {\n            type: 2 ,\n            triggerAction: CodeActionTriggerSource.OnSave,\n            filter: { include: codeActionKind, excludes: excludes, includeSourceActions: true },\n        }, progress, token);\n    }\n};\nCodeActionOnSaveParticipant = ( __decorate([\n    ( __param(0, IConfigurationService)),\n    ( __param(1, IInstantiationService)),\n    ( __param(2, ILanguageFeaturesService))\n], CodeActionOnSaveParticipant));\nlet SaveParticipantsContribution = class SaveParticipantsContribution extends Disposable {\n    constructor(instantiationService, textFileService) {\n        super();\n        this.instantiationService = instantiationService;\n        this.textFileService = textFileService;\n        this.registerSaveParticipants();\n    }\n    registerSaveParticipants() {\n        this._register(this.textFileService.files.addSaveParticipant(this.instantiationService.createInstance(TrimWhitespaceParticipant)));\n        this._register(this.textFileService.files.addSaveParticipant(this.instantiationService.createInstance(CodeActionOnSaveParticipant)));\n        this._register(this.textFileService.files.addSaveParticipant(this.instantiationService.createInstance(FormatOnSaveParticipant)));\n        this._register(this.textFileService.files.addSaveParticipant(this.instantiationService.createInstance(FinalNewLineParticipant)));\n        this._register(this.textFileService.files.addSaveParticipant(this.instantiationService.createInstance(TrimFinalNewLinesParticipant)));\n    }\n};\nSaveParticipantsContribution = ( __decorate([\n    ( __param(0, IInstantiationService)),\n    ( __param(1, ITextFileService))\n], SaveParticipantsContribution));\nconst workbenchContributionsRegistry = ( Registry.as(Extensions.Workbench));\nworkbenchContributionsRegistry.registerWorkbenchContribution(SaveParticipantsContribution, 3 );\nexport { FinalNewLineParticipant, SaveParticipantsContribution, TrimFinalNewLinesParticipant, TrimWhitespaceParticipant };\n", "import { isNonEmptyArray } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { CancellationToken } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { registerEditorAction, EditorAction } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { EditorContextKeys } from 'monaco-editor/esm/vs/editor/common/editorContextKeys.js';\nimport { shouldSynchronizeModel } from 'monaco-editor/esm/vs/editor/common/model.js';\nimport { IEditorWorkerService } from 'monaco-editor/esm/vs/editor/common/services/editorWorker.js';\nimport { ITextModelService } from 'monaco-editor/esm/vs/editor/common/services/resolverService.js';\nimport { formatDocumentRangesWithSelectedProvider } from 'monaco-editor/esm/vs/editor/contrib/format/browser/format.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Progress } from 'monaco-editor/esm/vs/platform/progress/common/progress.js';\nimport { getOriginalResource } from '../../scm/browser/dirtydiffDecorator.js';\nimport { IQuickDiffService } from '../../scm/common/quickDiff.js';\nregisterEditorAction(class FormatModifiedAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.formatChanges',\n            label: ( nls.localize('formatChanges', \"Format Modified Lines\")),\n            alias: 'Format Modified Lines',\n            precondition: ( ContextKeyExpr.and(\n                EditorContextKeys.writable,\n                EditorContextKeys.hasDocumentSelectionFormattingProvider\n            )),\n        });\n    }\n    async run(accessor, editor) {\n        const instaService = accessor.get(IInstantiationService);\n        if (!editor.hasModel()) {\n            return;\n        }\n        const ranges = await instaService.invokeFunction(getModifiedRanges, editor.getModel());\n        if (isNonEmptyArray(ranges)) {\n            return instaService.invokeFunction(formatDocumentRangesWithSelectedProvider, editor, ranges, 1 , Progress.None, CancellationToken.None);\n        }\n    }\n});\nasync function getModifiedRanges(accessor, modified) {\n    const quickDiffService = accessor.get(IQuickDiffService);\n    const workerService = accessor.get(IEditorWorkerService);\n    const modelService = accessor.get(ITextModelService);\n    const original = await getOriginalResource(quickDiffService, modified.uri, modified.getLanguageId(), shouldSynchronizeModel(modified));\n    if (!original) {\n        return null;\n    }\n    const ranges = [];\n    const ref = await modelService.createModelReference(original);\n    try {\n        if (!workerService.canComputeDirtyDiff(original, modified.uri)) {\n            return undefined;\n        }\n        const changes = await workerService.computeDirtyDiff(original, modified.uri, false);\n        if (!isNonEmptyArray(changes)) {\n            return undefined;\n        }\n        for (const change of changes) {\n            ranges.push(modified.validateRange(( new Range(\n                change.modifiedStartLineNumber,\n                1,\n                change.modifiedEndLineNumber || change.modifiedStartLineNumber ,\n                Number.MAX_SAFE_INTEGER\n            ))));\n        }\n    }\n    finally {\n        ref.dispose();\n    }\n    return ranges;\n}\nexport { getModifiedRanges };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport './media/dirtydiffDecorator.css.js';\nimport { Disposable, DisposableStore, toDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { registerColor, editorErrorForeground, transparent } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { registerEditorAction, registerEditorContribution, EditorAction } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport { getOuterEditor, PeekViewWidget, peekViewBorder, peekViewTitleBackground, peekViewTitleForeground, peekViewTitleInfoForeground } from 'monaco-editor/esm/vs/editor/contrib/peekView/browser/peekView.js';\nimport { ContextKeyExpr, RawContextKey, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { EditorContextKeys } from 'monaco-editor/esm/vs/editor/common/editorContextKeys.js';\nimport { Position } from 'monaco-editor/esm/vs/editor/common/core/position.js';\nimport { rot } from 'monaco-editor/esm/vs/base/common/numbers.js';\nimport { KeybindingsRegistry } from 'monaco-editor/esm/vs/platform/keybinding/common/keybindingsRegistry.js';\nimport { EmbeddedDiffEditorWidget } from 'monaco-editor/esm/vs/editor/browser/widget/embeddedCodeEditorWidget.js';\nimport { Action, ActionRunner } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { basename } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { MenuRegistry, MenuId, IMenuService, MenuItemAction } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { createAndFillInActionBarActions } from 'monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js';\nimport { ICodeEditorService } from 'monaco-editor/esm/vs/editor/browser/services/codeEditorService.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { gotoPreviousLocation, gotoNextLocation } from 'monaco-editor/esm/vs/platform/theme/common/iconRegistry.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { TextCompareEditorActiveContext } from '../../../common/contextkeys.js';\nimport { Color } from 'monaco-editor/esm/vs/base/common/color.js';\nimport { IAudioCueService, AudioCue } from 'monaco-editor/esm/vs/platform/audioCues/browser/audioCueService.js';\nimport { IAccessibilityService } from 'monaco-editor/esm/vs/platform/accessibility/common/accessibility.js';\nimport { SwitchQuickDiffViewItem, SwitchQuickDiffBaseAction } from './dirtyDiffSwitcher.js';\nvar DirtyDiffController_1;\nclass DiffActionRunner extends ActionRunner {\n    runAction(action, context) {\n        if (action instanceof MenuItemAction) {\n            return action.run(...context);\n        }\n        return super.runAction(action, context);\n    }\n}\nconst isDirtyDiffVisible = ( new RawContextKey('dirtyDiffVisible', false));\nfunction getChangeHeight(change) {\n    const modified = change.modifiedEndLineNumber - change.modifiedStartLineNumber + 1;\n    const original = change.originalEndLineNumber - change.originalStartLineNumber + 1;\n    if (change.originalEndLineNumber === 0) {\n        return modified;\n    }\n    else if (change.modifiedEndLineNumber === 0) {\n        return original;\n    }\n    else {\n        return modified + original;\n    }\n}\nfunction getModifiedEndLineNumber(change) {\n    if (change.modifiedEndLineNumber === 0) {\n        return change.modifiedStartLineNumber === 0 ? 1 : change.modifiedStartLineNumber;\n    }\n    else {\n        return change.modifiedEndLineNumber;\n    }\n}\nfunction lineIntersectsChange(lineNumber, change) {\n    if (lineNumber === 1 && change.modifiedStartLineNumber === 0 && change.modifiedEndLineNumber === 0) {\n        return true;\n    }\n    return lineNumber >= change.modifiedStartLineNumber && lineNumber <= (change.modifiedEndLineNumber || change.modifiedStartLineNumber);\n}\nlet UIEditorAction = class UIEditorAction extends Action {\n    constructor(editor, action, cssClass, keybindingService, instantiationService) {\n        const keybinding = keybindingService.lookupKeybinding(action.id);\n        const label = action.label + (keybinding ? ` (${keybinding.getLabel()})` : '');\n        super(action.id, label, cssClass);\n        this.instantiationService = instantiationService;\n        this.action = action;\n        this.editor = editor;\n    }\n    run() {\n        return Promise.resolve(this.instantiationService.invokeFunction(accessor => this.action.run(accessor, this.editor, null)));\n    }\n};\nUIEditorAction = ( __decorate([\n    ( __param(3, IKeybindingService)),\n    ( __param(4, IInstantiationService))\n], UIEditorAction));\nvar ChangeType;\n( (function(ChangeType) {\n    ChangeType[ChangeType[\"Modify\"] = 0] = \"Modify\";\n    ChangeType[ChangeType[\"Add\"] = 1] = \"Add\";\n    ChangeType[ChangeType[\"Delete\"] = 2] = \"Delete\";\n})(ChangeType || (ChangeType = {})));\nfunction getChangeType(change) {\n    if (change.originalEndLineNumber === 0) {\n        return ChangeType.Add;\n    }\n    else if (change.modifiedEndLineNumber === 0) {\n        return ChangeType.Delete;\n    }\n    else {\n        return ChangeType.Modify;\n    }\n}\nfunction getChangeTypeColor(theme, changeType) {\n    switch (changeType) {\n        case ChangeType.Modify: return theme.getColor(editorGutterModifiedBackground);\n        case ChangeType.Add: return theme.getColor(editorGutterAddedBackground);\n        case ChangeType.Delete: return theme.getColor(editorGutterDeletedBackground);\n    }\n}\nfunction getOuterEditorFromDiffEditor(accessor) {\n    const diffEditors = accessor.get(ICodeEditorService).listDiffEditors();\n    for (const diffEditor of diffEditors) {\n        if (diffEditor.hasTextFocus() && diffEditor instanceof EmbeddedDiffEditorWidget) {\n            return diffEditor.getParentEditor();\n        }\n    }\n    return getOuterEditor(accessor);\n}\nlet DirtyDiffWidget = class DirtyDiffWidget extends PeekViewWidget {\n    constructor(editor, model, themeService, instantiationService, menuService, contextKeyService) {\n        super(editor, { isResizeable: true, frameWidth: 1, keepEditorSelection: true, className: 'dirty-diff' }, instantiationService);\n        this.model = model;\n        this.themeService = themeService;\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n        this._index = 0;\n        this._provider = '';\n        this.height = undefined;\n        this._disposables.add(themeService.onDidColorThemeChange(this._applyTheme, this));\n        this._applyTheme(themeService.getColorTheme());\n        if (this.model.original.length > 0) {\n            contextKeyService = contextKeyService.createOverlay([['originalResourceScheme', this.model.original[0].uri.scheme], ['originalResourceSchemes', ( this.model.original.map(original => original.uri.scheme))]]);\n        }\n        this.create();\n        if (editor.hasModel()) {\n            this.title = basename(editor.getModel().uri);\n        }\n        else {\n            this.title = '';\n        }\n        this.setTitle(this.title);\n    }\n    get provider() {\n        return this._provider;\n    }\n    get index() {\n        return this._index;\n    }\n    get visibleRange() {\n        const visibleRanges = this.diffEditor.getModifiedEditor().getVisibleRanges();\n        return visibleRanges.length >= 0 ? visibleRanges[0] : undefined;\n    }\n    showChange(index, usePosition = true) {\n        const labeledChange = this.model.changes[index];\n        const change = labeledChange.change;\n        this._index = index;\n        this.contextKeyService.createKey('originalResourceScheme', this.model.changes[index].uri.scheme);\n        this.updateActions();\n        this._provider = labeledChange.label;\n        this.change = change;\n        const originalModel = this.model.original;\n        if (!originalModel) {\n            return;\n        }\n        const onFirstDiffUpdate = Event.once(this.diffEditor.onDidUpdateDiff);\n        onFirstDiffUpdate(() => setTimeout(() => this.revealChange(change), 0));\n        const diffEditorModel = this.model.getDiffEditorModel(( labeledChange.uri.toString()));\n        if (!diffEditorModel) {\n            return;\n        }\n        this.diffEditor.setModel(diffEditorModel);\n        this.dropdown?.setSelection(labeledChange.label);\n        const position = ( new Position(getModifiedEndLineNumber(change), 1));\n        const lineHeight = this.editor.getOption(65 );\n        const editorHeight = this.editor.getLayoutInfo().height;\n        const editorHeightInLines = Math.floor(editorHeight / lineHeight);\n        const height = Math.min(getChangeHeight(change) +  8, Math.floor(editorHeightInLines / 3));\n        this.renderTitle(labeledChange.label);\n        const changeType = getChangeType(change);\n        const changeTypeColor = getChangeTypeColor(this.themeService.getColorTheme(), changeType);\n        this.style({ frameColor: changeTypeColor, arrowColor: changeTypeColor });\n        const providerSpecificChanges = [];\n        let contextIndex = index;\n        for (const change of this.model.changes) {\n            if (change.label === this.model.changes[this._index].label) {\n                providerSpecificChanges.push(change.change);\n                if (labeledChange === change) {\n                    contextIndex = providerSpecificChanges.length - 1;\n                }\n            }\n        }\n        this._actionbarWidget.context = [diffEditorModel.modified.uri, providerSpecificChanges, contextIndex];\n        if (usePosition) {\n            this.show(position, height);\n        }\n        this.editor.focus();\n    }\n    renderTitle(label) {\n        const providerChanges = this.model.mapChanges.get(label);\n        const providerIndex = providerChanges.indexOf(this._index);\n        let detail;\n        if (!this.shouldUseDropdown()) {\n            detail = this.model.changes.length > 1\n                ? ( nls.localize(\n                'changes',\n                \"{0} - {1} of {2} changes\",\n                label,\n                providerIndex + 1,\n                providerChanges.length\n            ))\n                : ( nls.localize(\n                'change',\n                \"{0} - {1} of {2} change\",\n                label,\n                providerIndex + 1,\n                providerChanges.length\n            ));\n            this.dropdownContainer.style.display = 'none';\n        }\n        else {\n            detail = this.model.changes.length > 1\n                ? ( nls.localize(\n                'multiChanges',\n                \"{0} of {1} changes\",\n                providerIndex + 1,\n                providerChanges.length\n            ))\n                : ( nls.localize(\n                'multiChange',\n                \"{0} of {1} change\",\n                providerIndex + 1,\n                providerChanges.length\n            ));\n            this.dropdownContainer.style.display = 'inherit';\n        }\n        this.setTitle(this.title, detail);\n    }\n    switchQuickDiff(event) {\n        const newProvider = event?.provider;\n        if (newProvider === this.model.changes[this._index].label) {\n            return;\n        }\n        let closestGreaterIndex = this._index < this.model.changes.length - 1 ? this._index + 1 : 0;\n        for (let i = closestGreaterIndex; i !== this._index; i < this.model.changes.length - 1 ? i++ : i = 0) {\n            if (this.model.changes[i].label === newProvider) {\n                closestGreaterIndex = i;\n                break;\n            }\n        }\n        let closestLesserIndex = this._index > 0 ? this._index - 1 : this.model.changes.length - 1;\n        for (let i = closestLesserIndex; i !== this._index; i >= 0 ? i-- : i = this.model.changes.length - 1) {\n            if (this.model.changes[i].label === newProvider) {\n                closestLesserIndex = i;\n                break;\n            }\n        }\n        const closestIndex = Math.abs(this.model.changes[closestGreaterIndex].change.modifiedEndLineNumber - this.model.changes[this._index].change.modifiedEndLineNumber)\n            < Math.abs(this.model.changes[closestLesserIndex].change.modifiedEndLineNumber - this.model.changes[this._index].change.modifiedEndLineNumber)\n            ? closestGreaterIndex : closestLesserIndex;\n        this.showChange(closestIndex, false);\n    }\n    shouldUseDropdown() {\n        let providersWithChangesCount = 0;\n        if (this.model.mapChanges.size > 1) {\n            const keys = Array.from(( this.model.mapChanges.keys()));\n            for (let i = 0; (i < keys.length) && (providersWithChangesCount <= 1); i++) {\n                if (this.model.mapChanges.get(keys[i]).length > 0) {\n                    providersWithChangesCount++;\n                }\n            }\n        }\n        return providersWithChangesCount >= 2;\n    }\n    updateActions() {\n        if (!this._actionbarWidget) {\n            return;\n        }\n        const previous = this.instantiationService.createInstance(UIEditorAction, this.editor, ( new ShowPreviousChangeAction(this.editor)), ThemeIcon.asClassName(gotoPreviousLocation));\n        const next = this.instantiationService.createInstance(UIEditorAction, this.editor, ( new ShowNextChangeAction(this.editor)), ThemeIcon.asClassName(gotoNextLocation));\n        this._disposables.add(previous);\n        this._disposables.add(next);\n        const actions = [];\n        if (this.menu) {\n            this.menu.dispose();\n        }\n        this.menu = this.menuService.createMenu(MenuId.SCMChangeContext, this.contextKeyService);\n        createAndFillInActionBarActions(this.menu, { shouldForwardArgs: true }, actions);\n        this._actionbarWidget.clear();\n        this._actionbarWidget.push(actions.reverse(), { label: false, icon: true });\n        this._actionbarWidget.push([next, previous], { label: false, icon: true });\n        this._actionbarWidget.push(( new Action('peekview.close', ( nls.localize('label.close', \"Close\")), ThemeIcon.asClassName(Codicon.close), true, () => this.dispose())), { label: false, icon: true });\n    }\n    _fillHead(container) {\n        super._fillHead(container, true);\n        this.dropdownContainer = dom.prepend(this._titleElement, dom.$('.dropdown'));\n        this.dropdown = this.instantiationService.createInstance(SwitchQuickDiffViewItem, ( new SwitchQuickDiffBaseAction((event) => this.switchQuickDiff(event))), ( this.model.quickDiffs.map(quickDiffer => quickDiffer.label)), this.model.changes[this._index].label);\n        this.dropdown.render(this.dropdownContainer);\n        this.updateActions();\n    }\n    _getActionBarOptions() {\n        const actionRunner = ( new DiffActionRunner());\n        actionRunner.onDidRun(e => {\n            if (!(e.action instanceof UIEditorAction) && !e.error) {\n                this.dispose();\n            }\n        });\n        return {\n            ...super._getActionBarOptions(),\n            actionRunner\n        };\n    }\n    _fillBody(container) {\n        const options = {\n            scrollBeyondLastLine: true,\n            scrollbar: {\n                verticalScrollbarSize: 14,\n                horizontal: 'auto',\n                useShadows: true,\n                verticalHasArrows: false,\n                horizontalHasArrows: false\n            },\n            overviewRulerLanes: 2,\n            fixedOverflowWidgets: true,\n            minimap: { enabled: false },\n            renderSideBySide: false,\n            readOnly: false,\n            renderIndicators: false,\n            diffAlgorithm: 'advanced',\n            stickyScroll: { enabled: false }\n        };\n        this.diffEditor = this.instantiationService.createInstance(EmbeddedDiffEditorWidget, container, options, {}, this.editor);\n        this._disposables.add(this.diffEditor);\n    }\n    _onWidth(width) {\n        if (typeof this.height === 'undefined') {\n            return;\n        }\n        this.diffEditor.layout({ height: this.height, width });\n    }\n    _doLayoutBody(height, width) {\n        super._doLayoutBody(height, width);\n        this.diffEditor.layout({ height, width });\n        if (typeof this.height === 'undefined' && this.change) {\n            this.revealChange(this.change);\n        }\n        this.height = height;\n    }\n    revealChange(change) {\n        let start, end;\n        if (change.modifiedEndLineNumber === 0) {\n            start = change.modifiedStartLineNumber;\n            end = change.modifiedStartLineNumber + 1;\n        }\n        else if (change.originalEndLineNumber > 0) {\n            start = change.modifiedStartLineNumber - 1;\n            end = change.modifiedEndLineNumber + 1;\n        }\n        else {\n            start = change.modifiedStartLineNumber;\n            end = change.modifiedEndLineNumber;\n        }\n        this.diffEditor.revealLinesInCenter(start, end, 1 );\n    }\n    _applyTheme(theme) {\n        const borderColor = theme.getColor(peekViewBorder) || Color.transparent;\n        this.style({\n            arrowColor: borderColor,\n            frameColor: borderColor,\n            headerBackgroundColor: theme.getColor(peekViewTitleBackground) || Color.transparent,\n            primaryHeadingColor: theme.getColor(peekViewTitleForeground),\n            secondaryHeadingColor: theme.getColor(peekViewTitleInfoForeground)\n        });\n    }\n    revealRange(range) {\n        this.editor.revealLineInCenterIfOutsideViewport(range.endLineNumber, 0 );\n    }\n    hasFocus() {\n        return this.diffEditor.hasTextFocus();\n    }\n    dispose() {\n        super.dispose();\n        this.menu?.dispose();\n    }\n};\nDirtyDiffWidget = ( __decorate([\n    ( __param(2, IThemeService)),\n    ( __param(3, IInstantiationService)),\n    ( __param(4, IMenuService)),\n    ( __param(5, IContextKeyService))\n], DirtyDiffWidget));\nclass ShowPreviousChangeAction extends EditorAction {\n    constructor(outerEditor) {\n        super({\n            id: 'editor.action.dirtydiff.previous',\n            label: ( nls.localize('show previous change', \"Show Previous Change\")),\n            alias: 'Show Previous Change',\n            precondition: ( TextCompareEditorActiveContext.toNegated()),\n            kbOpts: { kbExpr: EditorContextKeys.editorTextFocus, primary: 1024  | 512  | 61 , weight: 100  }\n        });\n        this.outerEditor = outerEditor;\n    }\n    run(accessor) {\n        const outerEditor = this.outerEditor ?? getOuterEditorFromDiffEditor(accessor);\n        if (!outerEditor) {\n            return;\n        }\n        const controller = DirtyDiffController.get(outerEditor);\n        if (!controller) {\n            return;\n        }\n        if (!controller.canNavigate()) {\n            return;\n        }\n        controller.previous();\n    }\n}\nregisterEditorAction(ShowPreviousChangeAction);\nclass ShowNextChangeAction extends EditorAction {\n    constructor(outerEditor) {\n        super({\n            id: 'editor.action.dirtydiff.next',\n            label: ( nls.localize('show next change', \"Show Next Change\")),\n            alias: 'Show Next Change',\n            precondition: ( TextCompareEditorActiveContext.toNegated()),\n            kbOpts: { kbExpr: EditorContextKeys.editorTextFocus, primary: 512  | 61 , weight: 100  }\n        });\n        this.outerEditor = outerEditor;\n    }\n    run(accessor) {\n        const outerEditor = this.outerEditor ?? getOuterEditorFromDiffEditor(accessor);\n        if (!outerEditor) {\n            return;\n        }\n        const controller = DirtyDiffController.get(outerEditor);\n        if (!controller) {\n            return;\n        }\n        if (!controller.canNavigate()) {\n            return;\n        }\n        controller.next();\n    }\n}\nregisterEditorAction(ShowNextChangeAction);\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n    group: '7_change_nav',\n    command: {\n        id: 'editor.action.dirtydiff.next',\n        title: ( nls.localize(\n            { key: 'miGotoNextChange', comment: ['&& denotes a mnemonic'] },\n            \"Next &&Change\"\n        ))\n    },\n    order: 1\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n    group: '7_change_nav',\n    command: {\n        id: 'editor.action.dirtydiff.previous',\n        title: ( nls.localize(\n            { key: 'miGotoPreviousChange', comment: ['&& denotes a mnemonic'] },\n            \"Previous &&Change\"\n        ))\n    },\n    order: 2\n});\nclass GotoPreviousChangeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'workbench.action.editor.previousChange',\n            label: ( nls.localize('move to previous change', \"Go to Previous Change\")),\n            alias: 'Go to Previous Change',\n            precondition: ( TextCompareEditorActiveContext.toNegated()),\n            kbOpts: { kbExpr: EditorContextKeys.editorTextFocus, primary: 1024  | 512  | 63 , weight: 100  }\n        });\n    }\n    async run(accessor) {\n        const outerEditor = getOuterEditorFromDiffEditor(accessor);\n        const audioCueService = accessor.get(IAudioCueService);\n        const accessibilityService = accessor.get(IAccessibilityService);\n        const codeEditorService = accessor.get(ICodeEditorService);\n        if (!outerEditor || !outerEditor.hasModel()) {\n            return;\n        }\n        const controller = DirtyDiffController.get(outerEditor);\n        if (!controller || !controller.modelRegistry) {\n            return;\n        }\n        const lineNumber = outerEditor.getPosition().lineNumber;\n        const model = controller.modelRegistry.getModel(outerEditor.getModel());\n        if (!model || model.changes.length === 0) {\n            return;\n        }\n        const index = model.findPreviousClosestChange(lineNumber, false);\n        const change = model.changes[index];\n        await playAudioCueForChange(change.change, audioCueService);\n        setPositionAndSelection(change.change, outerEditor, accessibilityService, codeEditorService);\n    }\n}\nregisterEditorAction(GotoPreviousChangeAction);\nclass GotoNextChangeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'workbench.action.editor.nextChange',\n            label: ( nls.localize('move to next change', \"Go to Next Change\")),\n            alias: 'Go to Next Change',\n            precondition: ( TextCompareEditorActiveContext.toNegated()),\n            kbOpts: { kbExpr: EditorContextKeys.editorTextFocus, primary: 512  | 63 , weight: 100  }\n        });\n    }\n    async run(accessor) {\n        const audioCueService = accessor.get(IAudioCueService);\n        const outerEditor = getOuterEditorFromDiffEditor(accessor);\n        const accessibilityService = accessor.get(IAccessibilityService);\n        const codeEditorService = accessor.get(ICodeEditorService);\n        if (!outerEditor || !outerEditor.hasModel()) {\n            return;\n        }\n        const controller = DirtyDiffController.get(outerEditor);\n        if (!controller || !controller.modelRegistry) {\n            return;\n        }\n        const lineNumber = outerEditor.getPosition().lineNumber;\n        const model = controller.modelRegistry.getModel(outerEditor.getModel());\n        if (!model || model.changes.length === 0) {\n            return;\n        }\n        const index = model.findNextClosestChange(lineNumber, false);\n        const change = model.changes[index].change;\n        await playAudioCueForChange(change, audioCueService);\n        setPositionAndSelection(change, outerEditor, accessibilityService, codeEditorService);\n    }\n}\nfunction setPositionAndSelection(change, editor, accessibilityService, codeEditorService) {\n    const position = ( new Position(change.modifiedStartLineNumber, 1));\n    editor.setPosition(position);\n    editor.revealPositionInCenter(position);\n    if (accessibilityService.isScreenReaderOptimized()) {\n        editor.setSelection({ startLineNumber: change.modifiedStartLineNumber, startColumn: 0, endLineNumber: change.modifiedStartLineNumber, endColumn: Number.MAX_VALUE });\n        codeEditorService.getActiveCodeEditor()?.writeScreenReaderContent('diff-navigation');\n    }\n}\nasync function playAudioCueForChange(change, audioCueService) {\n    const changeType = getChangeType(change);\n    switch (changeType) {\n        case ChangeType.Add:\n            audioCueService.playAudioCue(AudioCue.diffLineInserted, { allowManyInParallel: true, source: 'dirtyDiffDecoration' });\n            break;\n        case ChangeType.Delete:\n            audioCueService.playAudioCue(AudioCue.diffLineDeleted, { allowManyInParallel: true, source: 'dirtyDiffDecoration' });\n            break;\n        case ChangeType.Modify:\n            audioCueService.playAudioCue(AudioCue.diffLineModified, { allowManyInParallel: true, source: 'dirtyDiffDecoration' });\n            break;\n    }\n}\nregisterEditorAction(GotoNextChangeAction);\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'closeDirtyDiff',\n    weight: 100  + 50,\n    primary: 9 ,\n    secondary: [1024  | 9 ],\n    when: ( ContextKeyExpr.and(isDirtyDiffVisible)),\n    handler: (accessor) => {\n        const outerEditor = getOuterEditorFromDiffEditor(accessor);\n        if (!outerEditor) {\n            return;\n        }\n        const controller = DirtyDiffController.get(outerEditor);\n        if (!controller) {\n            return;\n        }\n        controller.close();\n    }\n});\nlet DirtyDiffController = class DirtyDiffController extends Disposable {\n    static { DirtyDiffController_1 = this; }\n    static { this.ID = 'editor.contrib.dirtydiff'; }\n    static get(editor) {\n        return editor.getContribution(DirtyDiffController_1.ID);\n    }\n    constructor(editor, contextKeyService, configurationService, instantiationService) {\n        super();\n        this.editor = editor;\n        this.configurationService = configurationService;\n        this.instantiationService = instantiationService;\n        this.modelRegistry = null;\n        this.model = null;\n        this.widget = null;\n        this.session = Disposable.None;\n        this.mouseDownInfo = null;\n        this.enabled = false;\n        this.gutterActionDisposables = ( new DisposableStore());\n        this.enabled = !contextKeyService.getContextKeyValue('isInDiffEditor');\n        this.stylesheet = dom.createStyleSheet();\n        this._register(toDisposable(() => this.stylesheet.remove()));\n        if (this.enabled) {\n            this.isDirtyDiffVisible = isDirtyDiffVisible.bindTo(contextKeyService);\n            this._register(editor.onDidChangeModel(() => this.close()));\n            const onDidChangeGutterAction = Event.filter(configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('scm.diffDecorationsGutterAction'));\n            this._register(onDidChangeGutterAction(this.onDidChangeGutterAction, this));\n            this.onDidChangeGutterAction();\n        }\n    }\n    onDidChangeGutterAction() {\n        const gutterAction = this.configurationService.getValue('scm.diffDecorationsGutterAction');\n        this.gutterActionDisposables.dispose();\n        this.gutterActionDisposables = ( new DisposableStore());\n        if (gutterAction === 'diff') {\n            this.gutterActionDisposables.add(this.editor.onMouseDown(e => this.onEditorMouseDown(e)));\n            this.gutterActionDisposables.add(this.editor.onMouseUp(e => this.onEditorMouseUp(e)));\n            this.stylesheet.textContent = `\n\t\t\t\t.monaco-editor .dirty-diff-glyph {\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t}\n\n\t\t\t\t.monaco-editor .margin-view-overlays .dirty-diff-glyph:hover::before {\n\t\t\t\t\theight: 100%;\n\t\t\t\t\twidth: 6px;\n\t\t\t\t\tleft: -6px;\n\t\t\t\t}\n\n\t\t\t\t.monaco-editor .margin-view-overlays .dirty-diff-deleted:hover::after {\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\tborder-top-width: 0;\n\t\t\t\t\tborder-bottom-width: 0;\n\t\t\t\t}\n\t\t\t`;\n        }\n        else {\n            this.stylesheet.textContent = ``;\n        }\n    }\n    canNavigate() {\n        return !this.widget || (this.widget?.index === -1) || (!!this.model && this.model.changes.length > 1);\n    }\n    refresh() {\n        this.widget?.showChange(this.widget.index, false);\n    }\n    next(lineNumber) {\n        if (!this.assertWidget()) {\n            return;\n        }\n        if (!this.widget || !this.model) {\n            return;\n        }\n        let index;\n        if (this.editor.hasModel() && (typeof lineNumber === 'number' || !this.widget.provider)) {\n            index = this.model.findNextClosestChange(typeof lineNumber === 'number' ? lineNumber : this.editor.getPosition().lineNumber, true, this.widget.provider);\n        }\n        else {\n            const providerChanges = this.model.mapChanges.get(this.widget.provider) ?? ( this.model.mapChanges.values()).next().value;\n            const mapIndex = providerChanges.findIndex(value => value === this.widget.index);\n            index = providerChanges[rot(mapIndex + 1, providerChanges.length)];\n        }\n        this.widget.showChange(index);\n    }\n    previous(lineNumber) {\n        if (!this.assertWidget()) {\n            return;\n        }\n        if (!this.widget || !this.model) {\n            return;\n        }\n        let index;\n        if (this.editor.hasModel() && (typeof lineNumber === 'number')) {\n            index = this.model.findPreviousClosestChange(typeof lineNumber === 'number' ? lineNumber : this.editor.getPosition().lineNumber, true, this.widget.provider);\n        }\n        else {\n            const providerChanges = this.model.mapChanges.get(this.widget.provider) ?? ( this.model.mapChanges.values()).next().value;\n            const mapIndex = providerChanges.findIndex(value => value === this.widget.index);\n            index = providerChanges[rot(mapIndex - 1, providerChanges.length)];\n        }\n        this.widget.showChange(index);\n    }\n    close() {\n        this.session.dispose();\n        this.session = Disposable.None;\n    }\n    assertWidget() {\n        if (!this.enabled) {\n            return false;\n        }\n        if (this.widget) {\n            if (!this.model || this.model.changes.length === 0) {\n                this.close();\n                return false;\n            }\n            return true;\n        }\n        if (!this.modelRegistry) {\n            return false;\n        }\n        const editorModel = this.editor.getModel();\n        if (!editorModel) {\n            return false;\n        }\n        const model = this.modelRegistry.getModel(editorModel);\n        if (!model) {\n            return false;\n        }\n        if (model.changes.length === 0) {\n            return false;\n        }\n        this.model = model;\n        this.widget = this.instantiationService.createInstance(DirtyDiffWidget, this.editor, model);\n        this.isDirtyDiffVisible.set(true);\n        const disposables = ( new DisposableStore());\n        disposables.add(Event.once(this.widget.onDidClose)(this.close, this));\n        ( Event.chain(model.onDidChange)\n            .filter(e => e.diff.length > 0)\n            .map(e => e.diff))\n            .event(this.onDidModelChange, this, disposables);\n        disposables.add(this.widget);\n        disposables.add(toDisposable(() => {\n            this.model = null;\n            this.widget = null;\n            this.isDirtyDiffVisible.set(false);\n            this.editor.focus();\n        }));\n        this.session = disposables;\n        return true;\n    }\n    onDidModelChange(splices) {\n        if (!this.model || !this.widget || this.widget.hasFocus()) {\n            return;\n        }\n        for (const splice of splices) {\n            if (splice.start <= this.widget.index) {\n                this.next();\n                return;\n            }\n        }\n        this.refresh();\n    }\n    onEditorMouseDown(e) {\n        this.mouseDownInfo = null;\n        const range = e.target.range;\n        if (!range) {\n            return;\n        }\n        if (!e.event.leftButton) {\n            return;\n        }\n        if (e.target.type !== 4 ) {\n            return;\n        }\n        if (!e.target.element) {\n            return;\n        }\n        if (e.target.element.className.indexOf('dirty-diff-glyph') < 0) {\n            return;\n        }\n        const data = e.target.detail;\n        const offsetLeftInGutter = e.target.element.offsetLeft;\n        const gutterOffsetX = data.offsetX - offsetLeftInGutter;\n        if (gutterOffsetX < -3 || gutterOffsetX > 3) {\n            return;\n        }\n        this.mouseDownInfo = { lineNumber: range.startLineNumber };\n    }\n    onEditorMouseUp(e) {\n        if (!this.mouseDownInfo) {\n            return;\n        }\n        const { lineNumber } = this.mouseDownInfo;\n        this.mouseDownInfo = null;\n        const range = e.target.range;\n        if (!range || range.startLineNumber !== lineNumber) {\n            return;\n        }\n        if (e.target.type !== 4 ) {\n            return;\n        }\n        if (!this.modelRegistry) {\n            return;\n        }\n        const editorModel = this.editor.getModel();\n        if (!editorModel) {\n            return;\n        }\n        const model = this.modelRegistry.getModel(editorModel);\n        if (!model) {\n            return;\n        }\n        const index = model.changes.findIndex(change => lineIntersectsChange(lineNumber, change.change));\n        if (index < 0) {\n            return;\n        }\n        if (index === this.widget?.index) {\n            this.close();\n        }\n        else {\n            this.next(lineNumber);\n        }\n    }\n    getChanges() {\n        if (!this.modelRegistry) {\n            return [];\n        }\n        if (!this.editor.hasModel()) {\n            return [];\n        }\n        const model = this.modelRegistry.getModel(this.editor.getModel());\n        if (!model) {\n            return [];\n        }\n        return ( model.changes.map(change => change.change));\n    }\n    dispose() {\n        this.gutterActionDisposables.dispose();\n        super.dispose();\n    }\n};\nDirtyDiffController = DirtyDiffController_1 = ( __decorate([\n    ( __param(1, IContextKeyService)),\n    ( __param(2, IConfigurationService)),\n    ( __param(3, IInstantiationService))\n], DirtyDiffController));\nconst editorGutterModifiedBackground = registerColor('editorGutter.modifiedBackground', {\n    dark: '#1B81A8',\n    light: '#2090D3',\n    hcDark: '#1B81A8',\n    hcLight: '#2090D3'\n}, ( nls.localize(\n    'editorGutterModifiedBackground',\n    \"Editor gutter background color for lines that are modified.\"\n)));\nconst editorGutterAddedBackground = registerColor('editorGutter.addedBackground', {\n    dark: '#487E02',\n    light: '#48985D',\n    hcDark: '#487E02',\n    hcLight: '#48985D'\n}, ( nls.localize(\n    'editorGutterAddedBackground',\n    \"Editor gutter background color for lines that are added.\"\n)));\nconst editorGutterDeletedBackground = registerColor('editorGutter.deletedBackground', {\n    dark: editorErrorForeground,\n    light: editorErrorForeground,\n    hcDark: editorErrorForeground,\n    hcLight: editorErrorForeground\n}, ( nls.localize(\n    'editorGutterDeletedBackground',\n    \"Editor gutter background color for lines that are deleted.\"\n)));\nregisterColor('minimapGutter.modifiedBackground', {\n    dark: editorGutterModifiedBackground,\n    light: editorGutterModifiedBackground,\n    hcDark: editorGutterModifiedBackground,\n    hcLight: editorGutterModifiedBackground\n}, ( nls.localize(\n    'minimapGutterModifiedBackground',\n    \"Minimap gutter background color for lines that are modified.\"\n)));\nregisterColor('minimapGutter.addedBackground', {\n    dark: editorGutterAddedBackground,\n    light: editorGutterAddedBackground,\n    hcDark: editorGutterAddedBackground,\n    hcLight: editorGutterAddedBackground\n}, ( nls.localize(\n    'minimapGutterAddedBackground',\n    \"Minimap gutter background color for lines that are added.\"\n)));\nregisterColor('minimapGutter.deletedBackground', {\n    dark: editorGutterDeletedBackground,\n    light: editorGutterDeletedBackground,\n    hcDark: editorGutterDeletedBackground,\n    hcLight: editorGutterDeletedBackground\n}, ( nls.localize(\n    'minimapGutterDeletedBackground',\n    \"Minimap gutter background color for lines that are deleted.\"\n)));\nregisterColor('editorOverviewRuler.modifiedForeground', { dark: ( transparent(editorGutterModifiedBackground, 0.6)), light: ( transparent(editorGutterModifiedBackground, 0.6)), hcDark: ( transparent(editorGutterModifiedBackground, 0.6)), hcLight: ( transparent(editorGutterModifiedBackground, 0.6)) }, ( nls.localize(\n    'overviewRulerModifiedForeground',\n    'Overview ruler marker color for modified content.'\n)));\nregisterColor('editorOverviewRuler.addedForeground', { dark: ( transparent(editorGutterAddedBackground, 0.6)), light: ( transparent(editorGutterAddedBackground, 0.6)), hcDark: ( transparent(editorGutterAddedBackground, 0.6)), hcLight: ( transparent(editorGutterAddedBackground, 0.6)) }, ( nls.localize(\n    'overviewRulerAddedForeground',\n    'Overview ruler marker color for added content.'\n)));\nregisterColor('editorOverviewRuler.deletedForeground', { dark: ( transparent(editorGutterDeletedBackground, 0.6)), light: ( transparent(editorGutterDeletedBackground, 0.6)), hcDark: ( transparent(editorGutterDeletedBackground, 0.6)), hcLight: ( transparent(editorGutterDeletedBackground, 0.6)) }, ( nls.localize(\n    'overviewRulerDeletedForeground',\n    'Overview ruler marker color for deleted content.'\n)));\nasync function getOriginalResource(quickDiffService, uri, language, isSynchronized) {\n    const quickDiffs = await quickDiffService.getQuickDiffs(uri, language, isSynchronized);\n    return quickDiffs.length > 0 ? quickDiffs[0].originalResource : null;\n}\nregisterEditorContribution(DirtyDiffController.ID, DirtyDiffController, 1 );\nexport { DirtyDiffController, GotoNextChangeAction, GotoPreviousChangeAction, ShowNextChangeAction, ShowPreviousChangeAction, getOriginalResource, isDirtyDiffVisible };\n", "import n from '../../../../../../../../external/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".monaco-editor .dirty-diff-glyph{margin-left:5px;z-index:5}.monaco-editor .dirty-diff-glyph:before{content:\\\"\\\";height:100%;left:-2px;position:absolute;width:0}.monaco-workbench:not(.reduce-motion) .monaco-editor .dirty-diff-glyph:before{transition:width 80ms linear,left 80ms linear,transform 80ms linear}.monaco-editor.modified-in-monaco-diff-editor .margin-view-overlays>div>.dirty-diff-glyph{display:none}.monaco-editor .dirty-diff-added{border-left-color:var(--vscode-editorGutter-addedBackground);border-left-style:solid}.monaco-editor .dirty-diff-added:before{background:var(--vscode-editorGutter-addedBackground)}.monaco-editor .dirty-diff-added-pattern{background-repeat:repeat-y}.monaco-editor .dirty-diff-added-pattern,.monaco-editor .dirty-diff-added-pattern:before{background-image:linear-gradient(-45deg,var(--vscode-editorGutter-addedBackground) 25%,var(--vscode-editorGutter-background) 25%,var(--vscode-editorGutter-background) 50%,var(--vscode-editorGutter-addedBackground) 50%,var(--vscode-editorGutter-addedBackground) 75%,var(--vscode-editorGutter-background) 75%,var(--vscode-editorGutter-background))}.monaco-editor .dirty-diff-added-pattern:before{transform:translateX(3px)}.monaco-editor .dirty-diff-modified{border-left-color:var(--vscode-editorGutter-modifiedBackground);border-left-style:solid}.monaco-editor .dirty-diff-modified:before{background:var(--vscode-editorGutter-modifiedBackground)}.monaco-editor .dirty-diff-modified-pattern{background-image:linear-gradient(-45deg,var(--vscode-editorGutter-modifiedBackground) 25%,var(--vscode-editorGutter-background) 25%,var(--vscode-editorGutter-background) 50%,var(--vscode-editorGutter-modifiedBackground) 50%,var(--vscode-editorGutter-modifiedBackground) 75%,var(--vscode-editorGutter-background) 75%,var(--vscode-editorGutter-background));background-repeat:repeat-y}.monaco-workbench:not(.reduce-motion) .monaco-editor .dirty-diff-added,.monaco-workbench:not(.reduce-motion) .monaco-editor .dirty-diff-added-pattern,.monaco-workbench:not(.reduce-motion) .monaco-editor .dirty-diff-modified,.monaco-workbench:not(.reduce-motion) .monaco-editor .dirty-diff-modified-pattern{transition:opacity .5s}.monaco-editor .dirty-diff-modified-pattern:before{background-image:linear-gradient(-45deg,var(--vscode-editorGutter-modifiedBackground) 25%,var(--vscode-editorGutter-background) 25%,var(--vscode-editorGutter-background) 50%,var(--vscode-editorGutter-modifiedBackground) 50%,var(--vscode-editorGutter-modifiedBackground) 75%,var(--vscode-editorGutter-background) 75%,var(--vscode-editorGutter-background));transform:translateX(3px)}.monaco-editor .margin:hover .dirty-diff-added,.monaco-editor .margin:hover .dirty-diff-added-pattern,.monaco-editor .margin:hover .dirty-diff-modified,.monaco-editor .margin:hover .dirty-diff-modified-pattern{opacity:1}.monaco-editor .dirty-diff-deleted:after{border-bottom:4px solid transparent;border-left:4px solid var(--vscode-editorGutter-deletedBackground);border-top:4px solid transparent;bottom:-4px;box-sizing:border-box;content:\\\"\\\";height:0;pointer-events:none;position:absolute;width:4px;z-index:9}.monaco-workbench:not(.reduce-motion) .monaco-editor .dirty-diff-deleted:after{transition:border-top-width 80ms linear,border-bottom-width 80ms linear,bottom 80ms linear,opacity .5s}.monaco-editor .dirty-diff-deleted:before{background:var(--vscode-editorGutter-deletedBackground);bottom:0;height:0;margin-left:3px}.monaco-workbench:not(.reduce-motion) .monaco-editor .dirty-diff-deleted:before{transition:height 80ms linear}.dirty-diff .peekview-title .dropdown{margin-right:10px}.dirty-diff .peekview-title .dropdown.select-container{cursor:default}.dirty-diff .peekview-title .dropdown .monaco-select-box{cursor:pointer;min-height:18px;min-width:100px;padding:0 23px 0 8px}\";\nn(css,{});\nexport { css, css as default };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { Action } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport { IContextViewService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { SelectActionViewItem } from 'monaco-editor/esm/vs/base/browser/ui/actionbar/actionViewItems.js';\nimport { defaultSelectBoxStyles } from 'monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { peekViewTitleBackground } from 'monaco-editor/esm/vs/editor/contrib/peekView/browser/peekView.js';\nimport { editorBackground } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nlet SwitchQuickDiffViewItem = class SwitchQuickDiffViewItem extends SelectActionViewItem {\n    constructor(action, providers, selected, contextViewService, themeService) {\n        const items = ( providers.map(provider => ({ provider, text: provider })));\n        let startingSelection = providers.indexOf(selected);\n        if (startingSelection === -1) {\n            startingSelection = 0;\n        }\n        const styles = { ...defaultSelectBoxStyles };\n        const theme = themeService.getColorTheme();\n        const editorBackgroundColor = theme.getColor(editorBackground);\n        const peekTitleColor = theme.getColor(peekViewTitleBackground);\n        const opaqueTitleColor = peekTitleColor?.makeOpaque(editorBackgroundColor) ?? editorBackgroundColor;\n        styles.selectBackground = ( ( opaqueTitleColor.lighten(.6)).toString());\n        super(null, action, items, startingSelection, contextViewService, styles, { ariaLabel: ( nls.localize('remotes', 'Switch quick diff base')) });\n        this.optionsItems = items;\n    }\n    setSelection(provider) {\n        const index = this.optionsItems.findIndex(item => item.provider === provider);\n        this.select(index);\n    }\n    getActionContext(_, index) {\n        return this.optionsItems[index];\n    }\n    render(container) {\n        super.render(container);\n        this.setFocusable(true);\n    }\n};\nSwitchQuickDiffViewItem = ( __decorate([\n    ( __param(3, IContextViewService)),\n    ( __param(4, IThemeService))\n], SwitchQuickDiffViewItem));\nclass SwitchQuickDiffBaseAction extends Action {\n    static { this.ID = 'quickDiff.base.switch'; }\n    static { this.LABEL = ( nls.localize('quickDiff.base.switch', \"Switch Quick Diff Base\")); }\n    constructor(callback) {\n        super(SwitchQuickDiffBaseAction.ID, SwitchQuickDiffBaseAction.LABEL, undefined, undefined);\n        this.callback = callback;\n    }\n    async run(event) {\n        return this.callback(event);\n    }\n}\nexport { SwitchQuickDiffBaseAction, SwitchQuickDiffViewItem };\n", "import { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { Action2, MenuId, registerAction2 } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { Categories } from 'monaco-editor/esm/vs/platform/action/common/actionCommonCategories.js';\nclass ToggleMinimapAction extends Action2 {\n    static { this.ID = 'editor.action.toggleMinimap'; }\n    constructor() {\n        super({\n            id: ToggleMinimapAction.ID,\n            title: {\n                value: ( localize('toggleMinimap', \"Toggle Minimap\")),\n                original: 'Toggle Minimap',\n                mnemonicTitle: ( localize({ key: 'miMinimap', comment: ['&& denotes a mnemonic'] }, \"&&Minimap\"))\n            },\n            category: Categories.View,\n            f1: true,\n            toggled: ( ContextKeyExpr.equals('config.editor.minimap.enabled', true)),\n            menu: {\n                id: MenuId.MenubarAppearanceMenu,\n                group: '4_editor',\n                order: 1\n            }\n        });\n    }\n    async run(accessor) {\n        const configurationService = accessor.get(IConfigurationService);\n        const newValue = !configurationService.getValue('editor.minimap.enabled');\n        return configurationService.updateValue('editor.minimap.enabled', newValue);\n    }\n}\nregisterAction2(ToggleMinimapAction);\nexport { ToggleMinimapAction };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { isMacintosh } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { Action2, registerAction2, MenuRegistry, MenuId } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { RawContextKey, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { Extensions } from '../../../common/contributions.js';\nclass ToggleMultiCursorModifierAction extends Action2 {\n    static { this.ID = 'workbench.action.toggleMultiCursorModifier'; }\n    static { this.multiCursorModifierConfigurationKey = 'editor.multiCursorModifier'; }\n    constructor() {\n        super({\n            id: ToggleMultiCursorModifierAction.ID,\n            title: { value: ( localize('toggleLocation', \"Toggle Multi-Cursor Modifier\")), original: 'Toggle Multi-Cursor Modifier' },\n            f1: true\n        });\n    }\n    run(accessor) {\n        const configurationService = accessor.get(IConfigurationService);\n        const editorConf = configurationService.getValue('editor');\n        const newValue = (editorConf.multiCursorModifier === 'ctrlCmd' ? 'alt' : 'ctrlCmd');\n        return configurationService.updateValue(ToggleMultiCursorModifierAction.multiCursorModifierConfigurationKey, newValue);\n    }\n}\nconst multiCursorModifier = ( new RawContextKey('multiCursorModifier', 'altKey'));\nlet MultiCursorModifierContextKeyController = class MultiCursorModifierContextKeyController {\n    constructor(configurationService, contextKeyService) {\n        this.configurationService = configurationService;\n        this._multiCursorModifier = multiCursorModifier.bindTo(contextKeyService);\n        this._update();\n        configurationService.onDidChangeConfiguration((e) => {\n            if (e.affectsConfiguration('editor.multiCursorModifier')) {\n                this._update();\n            }\n        });\n    }\n    _update() {\n        const editorConf = this.configurationService.getValue('editor');\n        const value = (editorConf.multiCursorModifier === 'ctrlCmd' ? 'ctrlCmd' : 'altKey');\n        this._multiCursorModifier.set(value);\n    }\n};\nMultiCursorModifierContextKeyController = ( __decorate([\n    ( __param(0, IConfigurationService)),\n    ( __param(1, IContextKeyService))\n], MultiCursorModifierContextKeyController));\n( Registry.as(Extensions.Workbench)).registerWorkbenchContribution(MultiCursorModifierContextKeyController, 3 );\nregisterAction2(ToggleMultiCursorModifierAction);\nMenuRegistry.appendMenuItem(MenuId.MenubarSelectionMenu, {\n    group: '4_config',\n    command: {\n        id: ToggleMultiCursorModifierAction.ID,\n        title: ( localize('miMultiCursorAlt', \"Switch to Alt+Click for Multi-Cursor\"))\n    },\n    when: ( multiCursorModifier.isEqualTo('ctrlCmd')),\n    order: 1\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSelectionMenu, {\n    group: '4_config',\n    command: {\n        id: ToggleMultiCursorModifierAction.ID,\n        title: (isMacintosh\n            ? ( localize('miMultiCursorCmd', \"Switch to Cmd+Click for Multi-Cursor\"))\n            : ( localize('miMultiCursorCtrl', \"Switch to Ctrl+Click for Multi-Cursor\")))\n    },\n    when: ( multiCursorModifier.isEqualTo('altKey')),\n    order: 1\n});\nexport { ToggleMultiCursorModifierAction };\n", "import { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { Action2, MenuId, registerAction2 } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { Categories } from 'monaco-editor/esm/vs/platform/action/common/actionCommonCategories.js';\nclass ToggleRenderControlCharacterAction extends Action2 {\n    static { this.ID = 'editor.action.toggleRenderControlCharacter'; }\n    constructor() {\n        super({\n            id: ToggleRenderControlCharacterAction.ID,\n            title: {\n                value: ( localize('toggleRenderControlCharacters', \"Toggle Control Characters\")),\n                mnemonicTitle: ( localize(\n                    { key: 'miToggleRenderControlCharacters', comment: ['&& denotes a mnemonic'] },\n                    \"Render &&Control Characters\"\n                )),\n                original: 'Toggle Control Characters'\n            },\n            category: Categories.View,\n            f1: true,\n            toggled: ( ContextKeyExpr.equals('config.editor.renderControlCharacters', true)),\n            menu: {\n                id: MenuId.MenubarAppearanceMenu,\n                group: '4_editor',\n                order: 5\n            }\n        });\n    }\n    run(accessor) {\n        const configurationService = accessor.get(IConfigurationService);\n        const newRenderControlCharacters = !configurationService.getValue('editor.renderControlCharacters');\n        return configurationService.updateValue('editor.renderControlCharacters', newRenderControlCharacters);\n    }\n}\nregisterAction2(ToggleRenderControlCharacterAction);\nexport { ToggleRenderControlCharacterAction };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { Disposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { registerEditorContribution, registerDiffEditorContribution, registerEditorAction, EditorAction } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport { ICodeEditorService } from 'monaco-editor/esm/vs/editor/browser/services/codeEditorService.js';\nimport { MenuRegistry, MenuId } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { ContextKeyExpr, RawContextKey, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { EditorContextKeys } from 'monaco-editor/esm/vs/editor/common/editorContextKeys.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { Extensions } from '../../../common/contributions.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nconst transientWordWrapState = 'transientWordWrapState';\nconst isWordWrapMinifiedKey = 'isWordWrapMinified';\nconst isDominatedByLongLinesKey = 'isDominatedByLongLines';\nconst CAN_TOGGLE_WORD_WRAP = ( new RawContextKey('canToggleWordWrap', false, true));\nconst EDITOR_WORD_WRAP = ( new RawContextKey('editorWordWrap', false, ( nls.localize('editorWordWrap', 'Whether the editor is currently using word wrapping.'))));\nfunction writeTransientState(model, state, codeEditorService) {\n    codeEditorService.setTransientModelProperty(model, transientWordWrapState, state);\n}\nfunction readTransientState(model, codeEditorService) {\n    return codeEditorService.getTransientModelProperty(model, transientWordWrapState);\n}\nconst TOGGLE_WORD_WRAP_ID = 'editor.action.toggleWordWrap';\nclass ToggleWordWrapAction extends EditorAction {\n    constructor() {\n        super({\n            id: TOGGLE_WORD_WRAP_ID,\n            label: ( nls.localize('toggle.wordwrap', \"View: Toggle Word Wrap\")),\n            alias: 'View: Toggle Word Wrap',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 512  | 56 ,\n                weight: 100\n            }\n        });\n    }\n    run(accessor, editor) {\n        const codeEditorService = accessor.get(ICodeEditorService);\n        if (!canToggleWordWrap(codeEditorService, editor)) {\n            return;\n        }\n        const model = editor.getModel();\n        const transientState = readTransientState(model, codeEditorService);\n        let newState;\n        if (transientState) {\n            newState = null;\n        }\n        else {\n            const actualWrappingInfo = editor.getOption(143 );\n            const wordWrapOverride = (actualWrappingInfo.wrappingColumn === -1 ? 'on' : 'off');\n            newState = { wordWrapOverride };\n        }\n        writeTransientState(model, newState, codeEditorService);\n        const diffEditor = findDiffEditorContainingCodeEditor(editor, codeEditorService);\n        if (diffEditor) {\n            const originalEditor = diffEditor.getOriginalEditor();\n            const modifiedEditor = diffEditor.getModifiedEditor();\n            const otherEditor = (originalEditor === editor ? modifiedEditor : originalEditor);\n            if (canToggleWordWrap(codeEditorService, otherEditor)) {\n                writeTransientState(otherEditor.getModel(), newState, codeEditorService);\n                diffEditor.updateOptions({});\n            }\n        }\n    }\n}\nfunction findDiffEditorContainingCodeEditor(editor, codeEditorService) {\n    if (!editor.getOption(60 )) {\n        return null;\n    }\n    for (const diffEditor of codeEditorService.listDiffEditors()) {\n        const originalEditor = diffEditor.getOriginalEditor();\n        const modifiedEditor = diffEditor.getModifiedEditor();\n        if (originalEditor === editor || modifiedEditor === editor) {\n            return diffEditor;\n        }\n    }\n    return null;\n}\nlet ToggleWordWrapController = class ToggleWordWrapController extends Disposable {\n    static { this.ID = 'editor.contrib.toggleWordWrapController'; }\n    constructor(_editor, _contextKeyService, _codeEditorService) {\n        super();\n        this._editor = _editor;\n        this._contextKeyService = _contextKeyService;\n        this._codeEditorService = _codeEditorService;\n        const options = this._editor.getOptions();\n        const wrappingInfo = options.get(143 );\n        const isWordWrapMinified = this._contextKeyService.createKey(isWordWrapMinifiedKey, wrappingInfo.isWordWrapMinified);\n        const isDominatedByLongLines = this._contextKeyService.createKey(isDominatedByLongLinesKey, wrappingInfo.isDominatedByLongLines);\n        let currentlyApplyingEditorConfig = false;\n        this._register(_editor.onDidChangeConfiguration((e) => {\n            if (!e.hasChanged(143 )) {\n                return;\n            }\n            const options = this._editor.getOptions();\n            const wrappingInfo = options.get(143 );\n            isWordWrapMinified.set(wrappingInfo.isWordWrapMinified);\n            isDominatedByLongLines.set(wrappingInfo.isDominatedByLongLines);\n            if (!currentlyApplyingEditorConfig) {\n                ensureWordWrapSettings();\n            }\n        }));\n        this._register(_editor.onDidChangeModel((e) => {\n            ensureWordWrapSettings();\n        }));\n        this._register(_codeEditorService.onDidChangeTransientModelProperty(() => {\n            ensureWordWrapSettings();\n        }));\n        const ensureWordWrapSettings = () => {\n            if (!canToggleWordWrap(this._codeEditorService, this._editor)) {\n                return;\n            }\n            const transientState = readTransientState(this._editor.getModel(), this._codeEditorService);\n            try {\n                currentlyApplyingEditorConfig = true;\n                this._applyWordWrapState(transientState);\n            }\n            finally {\n                currentlyApplyingEditorConfig = false;\n            }\n        };\n    }\n    _applyWordWrapState(state) {\n        const wordWrapOverride2 = state ? state.wordWrapOverride : 'inherit';\n        this._editor.updateOptions({\n            wordWrapOverride2: wordWrapOverride2\n        });\n    }\n};\nToggleWordWrapController = ( __decorate([\n    ( __param(1, IContextKeyService)),\n    ( __param(2, ICodeEditorService))\n], ToggleWordWrapController));\nlet DiffToggleWordWrapController = class DiffToggleWordWrapController extends Disposable {\n    static { this.ID = 'diffeditor.contrib.toggleWordWrapController'; }\n    constructor(_diffEditor, _codeEditorService) {\n        super();\n        this._diffEditor = _diffEditor;\n        this._codeEditorService = _codeEditorService;\n        this._register(this._diffEditor.onDidChangeModel(() => {\n            this._ensureSyncedWordWrapToggle();\n        }));\n    }\n    _ensureSyncedWordWrapToggle() {\n        const originalEditor = this._diffEditor.getOriginalEditor();\n        const modifiedEditor = this._diffEditor.getModifiedEditor();\n        if (!originalEditor.hasModel() || !modifiedEditor.hasModel()) {\n            return;\n        }\n        const originalTransientState = readTransientState(originalEditor.getModel(), this._codeEditorService);\n        const modifiedTransientState = readTransientState(modifiedEditor.getModel(), this._codeEditorService);\n        if (originalTransientState && !modifiedTransientState && canToggleWordWrap(this._codeEditorService, originalEditor)) {\n            writeTransientState(modifiedEditor.getModel(), originalTransientState, this._codeEditorService);\n            this._diffEditor.updateOptions({});\n        }\n        if (!originalTransientState && modifiedTransientState && canToggleWordWrap(this._codeEditorService, modifiedEditor)) {\n            writeTransientState(originalEditor.getModel(), modifiedTransientState, this._codeEditorService);\n            this._diffEditor.updateOptions({});\n        }\n    }\n};\nDiffToggleWordWrapController = ( __decorate([\n    ( __param(1, ICodeEditorService))\n], DiffToggleWordWrapController));\nfunction canToggleWordWrap(codeEditorService, editor) {\n    if (!editor) {\n        return false;\n    }\n    if (editor.isSimpleWidget) {\n        return false;\n    }\n    const model = editor.getModel();\n    if (!model) {\n        return false;\n    }\n    if (model.uri.scheme === 'output') {\n        return false;\n    }\n    if (editor.getOption(60 )) {\n        for (const diffEditor of codeEditorService.listDiffEditors()) {\n            if (diffEditor.getOriginalEditor() === editor && !diffEditor.renderSideBySide) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nlet EditorWordWrapContextKeyTracker = class EditorWordWrapContextKeyTracker {\n    constructor(_editorService, _codeEditorService, _contextService) {\n        this._editorService = _editorService;\n        this._codeEditorService = _codeEditorService;\n        this._contextService = _contextService;\n        window.addEventListener('focus', () => this._update(), true);\n        window.addEventListener('blur', () => this._update(), true);\n        this._editorService.onDidActiveEditorChange(() => this._update());\n        this._canToggleWordWrap = CAN_TOGGLE_WORD_WRAP.bindTo(this._contextService);\n        this._editorWordWrap = EDITOR_WORD_WRAP.bindTo(this._contextService);\n        this._activeEditor = null;\n        this._activeEditorListener = ( new DisposableStore());\n        this._update();\n    }\n    _update() {\n        const activeEditor = this._codeEditorService.getFocusedCodeEditor() || this._codeEditorService.getActiveCodeEditor();\n        if (this._activeEditor === activeEditor) {\n            return;\n        }\n        this._activeEditorListener.clear();\n        this._activeEditor = activeEditor;\n        if (activeEditor) {\n            this._activeEditorListener.add(activeEditor.onDidChangeModel(() => this._updateFromCodeEditor()));\n            this._activeEditorListener.add(activeEditor.onDidChangeConfiguration((e) => {\n                if (e.hasChanged(143 )) {\n                    this._updateFromCodeEditor();\n                }\n            }));\n            this._updateFromCodeEditor();\n        }\n    }\n    _updateFromCodeEditor() {\n        if (!canToggleWordWrap(this._codeEditorService, this._activeEditor)) {\n            return this._setValues(false, false);\n        }\n        else {\n            const wrappingInfo = this._activeEditor.getOption(143 );\n            this._setValues(true, wrappingInfo.wrappingColumn !== -1);\n        }\n    }\n    _setValues(canToggleWordWrap, isWordWrap) {\n        this._canToggleWordWrap.set(canToggleWordWrap);\n        this._editorWordWrap.set(isWordWrap);\n    }\n};\nEditorWordWrapContextKeyTracker = ( __decorate([\n    ( __param(0, IEditorService)),\n    ( __param(1, ICodeEditorService)),\n    ( __param(2, IContextKeyService))\n], EditorWordWrapContextKeyTracker));\nconst workbenchRegistry = ( Registry.as(Extensions.Workbench));\nworkbenchRegistry.registerWorkbenchContribution(EditorWordWrapContextKeyTracker, 2 );\nregisterEditorContribution(ToggleWordWrapController.ID, ToggleWordWrapController, 0 );\nregisterDiffEditorContribution(DiffToggleWordWrapController.ID, DiffToggleWordWrapController);\nregisterEditorAction(ToggleWordWrapAction);\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n    command: {\n        id: TOGGLE_WORD_WRAP_ID,\n        title: ( nls.localize('unwrapMinified', \"Disable wrapping for this file\")),\n        icon: Codicon.wordWrap\n    },\n    group: 'navigation',\n    order: 1,\n    when: ( ContextKeyExpr.and(( ContextKeyExpr.has(isDominatedByLongLinesKey)), ( ContextKeyExpr.has(isWordWrapMinifiedKey))))\n});\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n    command: {\n        id: TOGGLE_WORD_WRAP_ID,\n        title: ( nls.localize('wrapMinified', \"Enable wrapping for this file\")),\n        icon: Codicon.wordWrap\n    },\n    group: 'navigation',\n    order: 1,\n    when: ( ContextKeyExpr.and(( EditorContextKeys.inDiffEditor.negate()), ( ContextKeyExpr.has(isDominatedByLongLinesKey)), ContextKeyExpr.not(isWordWrapMinifiedKey)))\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n    command: {\n        id: TOGGLE_WORD_WRAP_ID,\n        title: ( nls.localize(\n            { key: 'miToggleWordWrap', comment: ['&& denotes a mnemonic'] },\n            \"&&Word Wrap\"\n        )),\n        toggled: EDITOR_WORD_WRAP,\n        precondition: CAN_TOGGLE_WORD_WRAP\n    },\n    order: 1,\n    group: '5_editor'\n});\nexport { readTransientState, writeTransientState };\n", "import { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { Action2, MenuId, registerAction2 } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { Categories } from 'monaco-editor/esm/vs/platform/action/common/actionCommonCategories.js';\nclass ToggleRenderWhitespaceAction extends Action2 {\n    static { this.ID = 'editor.action.toggleRenderWhitespace'; }\n    constructor() {\n        super({\n            id: ToggleRenderWhitespaceAction.ID,\n            title: {\n                value: ( localize('toggleRenderWhitespace', \"Toggle Render Whitespace\")),\n                mnemonicTitle: ( localize(\n                    { key: 'miToggleRenderWhitespace', comment: ['&& denotes a mnemonic'] },\n                    \"&&Render Whitespace\"\n                )),\n                original: 'Toggle Render Whitespace'\n            },\n            category: Categories.View,\n            f1: true,\n            toggled: ( ContextKeyExpr.notEquals('config.editor.renderWhitespace', 'none')),\n            menu: {\n                id: MenuId.MenubarAppearanceMenu,\n                group: '4_editor',\n                order: 4\n            }\n        });\n    }\n    run(accessor) {\n        const configurationService = accessor.get(IConfigurationService);\n        const renderWhitespace = configurationService.getValue('editor.renderWhitespace');\n        let newRenderWhitespace;\n        if (renderWhitespace === 'none') {\n            newRenderWhitespace = 'all';\n        }\n        else {\n            newRenderWhitespace = 'none';\n        }\n        return configurationService.updateValue('editor.renderWhitespace', newRenderWhitespace);\n    }\n}\nregisterAction2(ToggleRenderWhitespaceAction);\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { Separator } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { isMacintosh } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { registerEditorContribution } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport { MenuId, IMenuService } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nclass GutterActionsRegistryImpl {\n    constructor() {\n        this._registeredGutterActionsGenerators = ( new Set());\n    }\n    registerGutterActionsGenerator(gutterActionsGenerator) {\n        this._registeredGutterActionsGenerators.add(gutterActionsGenerator);\n        return {\n            dispose: () => {\n                this._registeredGutterActionsGenerators.delete(gutterActionsGenerator);\n            }\n        };\n    }\n    getGutterActionsGenerators() {\n        return Array.from(( this._registeredGutterActionsGenerators.values()));\n    }\n}\nRegistry.add('gutterActionsRegistry', ( new GutterActionsRegistryImpl()));\nconst GutterActionsRegistry = ( Registry.as('gutterActionsRegistry'));\nlet EditorLineNumberContextMenu = class EditorLineNumberContextMenu extends Disposable {\n    static { this.ID = 'workbench.contrib.editorLineNumberContextMenu'; }\n    constructor(editor, contextMenuService, menuService, contextKeyService, instantiationService) {\n        super();\n        this.editor = editor;\n        this.contextMenuService = contextMenuService;\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n        this.instantiationService = instantiationService;\n        this._register(this.editor.onMouseDown((e) => this.doShow(e, false)));\n    }\n    show(e) {\n        this.doShow(e, true);\n    }\n    doShow(e, force) {\n        const model = this.editor.getModel();\n        if (!e.event.rightButton && !(isMacintosh && e.event.leftButton && e.event.ctrlKey) && !force\n            || e.target.type !== 3  && e.target.type !== 2\n            || !e.target.position || !model) {\n            return;\n        }\n        const lineNumber = e.target.position.lineNumber;\n        const contextKeyService = this.contextKeyService.createOverlay([['editorLineNumber', lineNumber]]);\n        const menu = this.menuService.createMenu(MenuId.EditorLineNumberContext, contextKeyService);\n        const allActions = [];\n        this.instantiationService.invokeFunction(accessor => {\n            for (const generator of GutterActionsRegistry.getGutterActionsGenerators()) {\n                const collectedActions = ( new Map());\n                generator({ lineNumber, editor: this.editor, accessor }, {\n                    push: (action, group = 'navigation') => {\n                        const actions = (collectedActions.get(group) ?? []);\n                        actions.push(action);\n                        collectedActions.set(group, actions);\n                    }\n                });\n                for (const [group, actions] of collectedActions.entries()) {\n                    allActions.push([group, actions]);\n                }\n            }\n            allActions.sort((a, b) => a[0].localeCompare(b[0]));\n            const menuActions = menu.getActions({ arg: { lineNumber, uri: model.uri }, shouldForwardArgs: true });\n            allActions.push(...menuActions);\n            if (e.target.type === 3 ) {\n                const currentSelections = this.editor.getSelections();\n                const lineRange = {\n                    startLineNumber: lineNumber,\n                    endLineNumber: lineNumber,\n                    startColumn: 1,\n                    endColumn: model.getLineLength(lineNumber) + 1\n                };\n                const containsSelection = currentSelections?.some(selection => !selection.isEmpty() && selection.intersectRanges(lineRange) !== null);\n                if (!containsSelection) {\n                    this.editor.setSelection(lineRange, \"api\" );\n                }\n            }\n            this.contextMenuService.showContextMenu({\n                getAnchor: () => e.event,\n                getActions: () => Separator.join(...( allActions.map((a) => a[1]))),\n                onHide: () => menu.dispose(),\n            });\n        });\n    }\n};\nEditorLineNumberContextMenu = ( __decorate([\n    ( __param(1, IContextMenuService)),\n    ( __param(2, IMenuService)),\n    ( __param(3, IContextKeyService)),\n    ( __param(4, IInstantiationService))\n], EditorLineNumberContextMenu));\nregisterEditorContribution(EditorLineNumberContextMenu.ID, EditorLineNumberContextMenu, 1 );\nexport { EditorLineNumberContextMenu, GutterActionsRegistry, GutterActionsRegistryImpl };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { FoldingController } from 'monaco-editor/esm/vs/editor/contrib/folding/browser/folding.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { Extensions as Extensions$1 } from '../../../common/contributions.js';\nimport { Extensions } from 'monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js';\nimport { editorConfigurationBaseNode } from 'monaco-editor/esm/vs/editor/common/config/editorConfigurationSchema.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nvar DefaultFoldingRangeProvider_1;\nlet DefaultFoldingRangeProvider = class DefaultFoldingRangeProvider extends Disposable {\n    static { DefaultFoldingRangeProvider_1 = this; }\n    static { this.configName = 'editor.defaultFoldingRangeProvider'; }\n    static { this.extensionIds = []; }\n    static { this.extensionItemLabels = []; }\n    static { this.extensionDescriptions = []; }\n    constructor(_extensionService, _configurationService) {\n        super();\n        this._extensionService = _extensionService;\n        this._configurationService = _configurationService;\n        this._store.add(this._extensionService.onDidChangeExtensions(this._updateConfigValues, this));\n        this._store.add(FoldingController.setFoldingRangeProviderSelector(this._selectFoldingRangeProvider.bind(this)));\n        this._updateConfigValues();\n    }\n    async _updateConfigValues() {\n        await this._extensionService.whenInstalledExtensionsRegistered();\n        DefaultFoldingRangeProvider_1.extensionIds.length = 0;\n        DefaultFoldingRangeProvider_1.extensionItemLabels.length = 0;\n        DefaultFoldingRangeProvider_1.extensionDescriptions.length = 0;\n        DefaultFoldingRangeProvider_1.extensionIds.push(null);\n        DefaultFoldingRangeProvider_1.extensionItemLabels.push(( nls.localize('null', 'All')));\n        DefaultFoldingRangeProvider_1.extensionDescriptions.push(( nls.localize('nullFormatterDescription', \"All active folding range providers\")));\n        const languageExtensions = [];\n        const otherExtensions = [];\n        for (const extension of this._extensionService.extensions) {\n            if (extension.main || extension.browser) {\n                if (extension.categories?.find(cat => cat === 'Programming Languages')) {\n                    languageExtensions.push(extension);\n                }\n                else {\n                    otherExtensions.push(extension);\n                }\n            }\n        }\n        const sorter = (a, b) => a.name.localeCompare(b.name);\n        for (const extension of languageExtensions.sort(sorter)) {\n            DefaultFoldingRangeProvider_1.extensionIds.push(extension.identifier.value);\n            DefaultFoldingRangeProvider_1.extensionItemLabels.push(extension.displayName ?? '');\n            DefaultFoldingRangeProvider_1.extensionDescriptions.push(extension.description ?? '');\n        }\n        for (const extension of otherExtensions.sort(sorter)) {\n            DefaultFoldingRangeProvider_1.extensionIds.push(extension.identifier.value);\n            DefaultFoldingRangeProvider_1.extensionItemLabels.push(extension.displayName ?? '');\n            DefaultFoldingRangeProvider_1.extensionDescriptions.push(extension.description ?? '');\n        }\n    }\n    _selectFoldingRangeProvider(providers, document) {\n        const value = this._configurationService.getValue(DefaultFoldingRangeProvider_1.configName, { overrideIdentifier: document.getLanguageId() });\n        if (value) {\n            return providers.filter(p => p.id === value);\n        }\n        return undefined;\n    }\n};\nDefaultFoldingRangeProvider = DefaultFoldingRangeProvider_1 = ( __decorate([\n    ( __param(0, IExtensionService)),\n    ( __param(1, IConfigurationService))\n], DefaultFoldingRangeProvider));\n( Registry.as(Extensions.Configuration)).registerConfiguration({\n    ...editorConfigurationBaseNode,\n    properties: {\n        [DefaultFoldingRangeProvider.configName]: {\n            description: ( nls.localize(\n                'formatter.default',\n                \"Defines a default folding range provider that takes precedence over all other folding range providers. Must be the identifier of an extension contributing a folding range provider.\"\n            )),\n            type: ['string', 'null'],\n            default: null,\n            enum: DefaultFoldingRangeProvider.extensionIds,\n            enumItemLabels: DefaultFoldingRangeProvider.extensionItemLabels,\n            markdownEnumDescriptions: DefaultFoldingRangeProvider.extensionDescriptions\n        }\n    }\n});\n( Registry.as(Extensions$1.Workbench)).registerWorkbenchContribution(DefaultFoldingRangeProvider, 3 );\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { CancellationTokenSource } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { EditorAction2, registerEditorContribution } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport { EditorContextKeys } from 'monaco-editor/esm/vs/editor/common/editorContextKeys.js';\nimport { asCommandLink } from 'monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHints.js';\nimport { InlayHintsController } from 'monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsController.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { registerAction2 } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { AudioCue, IAudioCueService } from 'monaco-editor/esm/vs/platform/audioCues/browser/audioCueService.js';\nimport { RawContextKey, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Link } from 'monaco-editor/esm/vs/platform/opener/browser/link.js';\nvar InlayHintsAccessibility_1;\nlet InlayHintsAccessibility = class InlayHintsAccessibility {\n    static { InlayHintsAccessibility_1 = this; }\n    static { this.IsReading = ( new RawContextKey(\n        'isReadingLineWithInlayHints',\n        false,\n        { type: 'boolean', description: ( localize(\n            'isReadingLineWithInlayHints',\n            \"Whether the current line and its inlay hints are currently focused\"\n        )) }\n    )); }\n    static { this.ID = 'editor.contrib.InlayHintsAccessibility'; }\n    static get(editor) {\n        return editor.getContribution(InlayHintsAccessibility_1.ID) ?? undefined;\n    }\n    constructor(_editor, contextKeyService, _audioCueService, _instaService) {\n        this._editor = _editor;\n        this._audioCueService = _audioCueService;\n        this._instaService = _instaService;\n        this._sessionDispoosables = ( new DisposableStore());\n        this._ariaElement = document.createElement('span');\n        this._ariaElement.style.position = 'fixed';\n        this._ariaElement.className = 'inlayhint-accessibility-element';\n        this._ariaElement.tabIndex = 0;\n        this._ariaElement.setAttribute('aria-description', ( localize('description', \"Code with Inlay Hint Information\")));\n        this._ctxIsReading = InlayHintsAccessibility_1.IsReading.bindTo(contextKeyService);\n    }\n    dispose() {\n        this._sessionDispoosables.dispose();\n        this._ctxIsReading.reset();\n        this._ariaElement.remove();\n    }\n    _reset() {\n        dom.clearNode(this._ariaElement);\n        this._sessionDispoosables.clear();\n        this._ctxIsReading.reset();\n    }\n    async _read(line, hints) {\n        this._sessionDispoosables.clear();\n        if (!this._ariaElement.isConnected) {\n            this._editor.getDomNode()?.appendChild(this._ariaElement);\n        }\n        if (!this._editor.hasModel() || !this._ariaElement.isConnected) {\n            this._ctxIsReading.set(false);\n            return;\n        }\n        const cts = ( new CancellationTokenSource());\n        this._sessionDispoosables.add(cts);\n        for (const hint of hints) {\n            await hint.resolve(cts.token);\n        }\n        if (cts.token.isCancellationRequested) {\n            return;\n        }\n        const model = this._editor.getModel();\n        const newChildren = [];\n        let start = 0;\n        let tooLongToRead = false;\n        for (const item of hints) {\n            const part = model.getValueInRange({ startLineNumber: line, startColumn: start + 1, endLineNumber: line, endColumn: item.hint.position.column });\n            if (part.length > 0) {\n                newChildren.push(part);\n                start = item.hint.position.column - 1;\n            }\n            if (start > 750) {\n                newChildren.push('…');\n                tooLongToRead = true;\n                break;\n            }\n            const em = document.createElement('em');\n            const { label } = item.hint;\n            if (typeof label === 'string') {\n                em.innerText = label;\n            }\n            else {\n                for (const part of label) {\n                    if (part.command) {\n                        const link = this._instaService.createInstance(Link, em, { href: asCommandLink(part.command), label: part.label, title: part.command.title }, undefined);\n                        this._sessionDispoosables.add(link);\n                    }\n                    else {\n                        em.innerText += part.label;\n                    }\n                }\n            }\n            newChildren.push(em);\n        }\n        if (!tooLongToRead) {\n            newChildren.push(model.getValueInRange({ startLineNumber: line, startColumn: start + 1, endLineNumber: line, endColumn: Number.MAX_SAFE_INTEGER }));\n        }\n        dom.reset(this._ariaElement, ...newChildren);\n        this._ariaElement.focus();\n        this._ctxIsReading.set(true);\n        this._sessionDispoosables.add(dom.addDisposableListener(this._ariaElement, 'focusout', () => {\n            this._reset();\n        }));\n    }\n    startInlayHintsReading() {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const line = this._editor.getPosition().lineNumber;\n        const hints = InlayHintsController.get(this._editor)?.getInlayHintsForLine(line);\n        if (!hints || hints.length === 0) {\n            this._audioCueService.playAudioCue(AudioCue.noInlayHints);\n        }\n        else {\n            this._read(line, hints);\n        }\n    }\n    stopInlayHintsReading() {\n        this._reset();\n        this._editor.focus();\n    }\n};\nInlayHintsAccessibility = InlayHintsAccessibility_1 = ( __decorate([\n    ( __param(1, IContextKeyService)),\n    ( __param(2, IAudioCueService)),\n    ( __param(3, IInstantiationService))\n], InlayHintsAccessibility));\nregisterAction2(class StartReadHints extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'inlayHints.startReadingLineWithHint',\n            title: {\n                value: ( localize('read.title', 'Read Line With Inline Hints')),\n                original: 'Read Line With Inline Hints'\n            },\n            precondition: EditorContextKeys.hasInlayHintsProvider,\n            f1: true\n        });\n    }\n    runEditorCommand(_accessor, editor) {\n        const ctrl = InlayHintsAccessibility.get(editor);\n        ctrl?.startInlayHintsReading();\n    }\n});\nregisterAction2(class StopReadHints extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'inlayHints.stopReadingLineWithHint',\n            title: {\n                value: ( localize('stop.title', 'Stop Inlay Hints Reading')),\n                original: 'Stop Inlay Hints Reading'\n            },\n            precondition: InlayHintsAccessibility.IsReading,\n            f1: true,\n            keybinding: {\n                weight: 100 ,\n                primary: 9\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor) {\n        const ctrl = InlayHintsAccessibility.get(editor);\n        ctrl?.stopInlayHintsReading();\n    }\n});\nregisterEditorContribution(InlayHintsAccessibility.ID, InlayHintsAccessibility, 4 );\nexport { InlayHintsAccessibility };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { Extensions } from 'monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { Extensions as Extensions$1 } from '../../../common/contributions.js';\nimport { codeActionsExtensionPointDescriptor } from '../common/codeActionsExtensionPoint.js';\nimport { documentationExtensionPointDescriptor } from '../common/documentationExtensionPoint.js';\nimport { ExtensionsRegistry } from '../../../services/extensions/common/extensionsRegistry.js';\nimport { editorConfiguration, CodeActionsContribution } from './codeActionsContribution.js';\nimport { CodeActionDocumentationContribution } from './documentationContribution.js';\nconst codeActionsExtensionPoint = ( ExtensionsRegistry.registerExtensionPoint(codeActionsExtensionPointDescriptor));\nconst documentationExtensionPoint = ( ExtensionsRegistry.registerExtensionPoint(documentationExtensionPointDescriptor));\n( Registry.as(Extensions.Configuration))\n    .registerConfiguration(editorConfiguration);\nlet WorkbenchConfigurationContribution = class WorkbenchConfigurationContribution {\n    constructor(instantiationService) {\n        instantiationService.createInstance(CodeActionsContribution, codeActionsExtensionPoint);\n        instantiationService.createInstance(CodeActionDocumentationContribution, documentationExtensionPoint);\n    }\n};\nWorkbenchConfigurationContribution = ( __decorate([\n    ( __param(0, IInstantiationService))\n], WorkbenchConfigurationContribution));\n( Registry.as(Extensions$1.Workbench))\n    .registerWorkbenchContribution(WorkbenchConfigurationContribution, 4 );\n", "import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { languagesExtPoint } from '../../../services/language/common/languageService.js';\nvar CodeActionExtensionPointFields;\n( (function(CodeActionExtensionPointFields) {\n    CodeActionExtensionPointFields[\"languages\"] = \"languages\";\n    CodeActionExtensionPointFields[\"actions\"] = \"actions\";\n    CodeActionExtensionPointFields[\"kind\"] = \"kind\";\n    CodeActionExtensionPointFields[\"title\"] = \"title\";\n    CodeActionExtensionPointFields[\"description\"] = \"description\";\n})(CodeActionExtensionPointFields || (CodeActionExtensionPointFields = {})));\nconst codeActionsExtensionPointSchema = ( Object.freeze({\n    type: 'array',\n    markdownDescription: ( nls.localize('contributes.codeActions', \"Configure which editor to use for a resource.\")),\n    items: {\n        type: 'object',\n        required: [CodeActionExtensionPointFields.languages, CodeActionExtensionPointFields.actions],\n        properties: {\n            [CodeActionExtensionPointFields.languages]: {\n                type: 'array',\n                description: ( nls.localize(\n                    'contributes.codeActions.languages',\n                    \"Language modes that the code actions are enabled for.\"\n                )),\n                items: { type: 'string' }\n            },\n            [CodeActionExtensionPointFields.actions]: {\n                type: 'object',\n                required: [CodeActionExtensionPointFields.kind, CodeActionExtensionPointFields.title],\n                properties: {\n                    [CodeActionExtensionPointFields.kind]: {\n                        type: 'string',\n                        markdownDescription: ( nls.localize(\n                            'contributes.codeActions.kind',\n                            \"`CodeActionKind` of the contributed code action.\"\n                        )),\n                    },\n                    [CodeActionExtensionPointFields.title]: {\n                        type: 'string',\n                        description: ( nls.localize(\n                            'contributes.codeActions.title',\n                            \"Label for the code action used in the UI.\"\n                        )),\n                    },\n                    [CodeActionExtensionPointFields.description]: {\n                        type: 'string',\n                        description: ( nls.localize(\n                            'contributes.codeActions.description',\n                            \"Description of what the code action does.\"\n                        )),\n                    },\n                }\n            }\n        }\n    }\n}));\nconst codeActionsExtensionPointDescriptor = {\n    extensionPoint: 'codeActions',\n    deps: [languagesExtPoint],\n    jsonSchema: codeActionsExtensionPointSchema\n};\nexport { codeActionsExtensionPointDescriptor };\n", "import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { languagesExtPoint } from '../../../services/language/common/languageService.js';\nvar DocumentationExtensionPointFields;\n( (function(DocumentationExtensionPointFields) {\n    DocumentationExtensionPointFields[\"when\"] = \"when\";\n    DocumentationExtensionPointFields[\"title\"] = \"title\";\n    DocumentationExtensionPointFields[\"command\"] = \"command\";\n})(\n    DocumentationExtensionPointFields || (DocumentationExtensionPointFields = {})\n));\nconst documentationExtensionPointSchema = ( Object.freeze({\n    type: 'object',\n    description: ( nls.localize('contributes.documentation', \"Contributed documentation.\")),\n    properties: {\n        'refactoring': {\n            type: 'array',\n            description: ( nls.localize(\n                'contributes.documentation.refactorings',\n                \"Contributed documentation for refactorings.\"\n            )),\n            items: {\n                type: 'object',\n                description: ( nls.localize(\n                    'contributes.documentation.refactoring',\n                    \"Contributed documentation for refactoring.\"\n                )),\n                required: [\n                    DocumentationExtensionPointFields.title,\n                    DocumentationExtensionPointFields.when,\n                    DocumentationExtensionPointFields.command\n                ],\n                properties: {\n                    [DocumentationExtensionPointFields.title]: {\n                        type: 'string',\n                        description: ( nls.localize(\n                            'contributes.documentation.refactoring.title',\n                            \"Label for the documentation used in the UI.\"\n                        )),\n                    },\n                    [DocumentationExtensionPointFields.when]: {\n                        type: 'string',\n                        description: ( nls.localize('contributes.documentation.refactoring.when', \"When clause.\")),\n                    },\n                    [DocumentationExtensionPointFields.command]: {\n                        type: 'string',\n                        description: ( nls.localize('contributes.documentation.refactoring.command', \"Command executed.\")),\n                    },\n                },\n            }\n        }\n    }\n}));\nconst documentationExtensionPointDescriptor = {\n    extensionPoint: 'documentation',\n    deps: [languagesExtPoint],\n    jsonSchema: documentationExtensionPointSchema\n};\nexport { documentationExtensionPointDescriptor };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { editorConfigurationBaseNode } from 'monaco-editor/esm/vs/editor/common/config/editorConfigurationSchema.js';\nimport { codeActionCommandId, refactorCommandId, sourceActionCommandId } from 'monaco-editor/esm/vs/editor/contrib/codeAction/browser/codeAction.js';\nimport { CodeActionKind } from 'monaco-editor/esm/vs/editor/contrib/codeAction/common/types.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { Extensions } from 'monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nconst codeActionsOnSaveDefaultProperties = ( Object.freeze({\n    'source.fixAll': {\n        type: 'boolean',\n        description: ( nls.localize(\n            'codeActionsOnSave.fixAll',\n            \"Controls whether auto fix action should be run on file save.\"\n        ))\n    }\n}));\nconst codeActionsOnSaveSchema = {\n    oneOf: [\n        {\n            type: 'object',\n            properties: codeActionsOnSaveDefaultProperties,\n            additionalProperties: {\n                type: 'boolean'\n            },\n        },\n        {\n            type: 'array',\n            items: { type: 'string' }\n        }\n    ],\n    default: {},\n    description: ( nls.localize('codeActionsOnSave', \"Code Action kinds to be run on save.\")),\n    scope: 5 ,\n};\nconst editorConfiguration = ( Object.freeze({\n    ...editorConfigurationBaseNode,\n    properties: {\n        'editor.codeActionsOnSave': codeActionsOnSaveSchema\n    }\n}));\nlet CodeActionsContribution = class CodeActionsContribution extends Disposable {\n    constructor(codeActionsExtensionPoint, keybindingService) {\n        super();\n        this._contributedCodeActions = [];\n        this._onDidChangeContributions = this._register(( new Emitter()));\n        codeActionsExtensionPoint.setHandler(extensionPoints => {\n            this._contributedCodeActions = ( extensionPoints.map(x => x.value)).flat();\n            this.updateConfigurationSchema(this._contributedCodeActions);\n            this._onDidChangeContributions.fire();\n        });\n        keybindingService.registerSchemaContribution({\n            getSchemaAdditions: () => this.getSchemaAdditions(),\n            onDidChange: this._onDidChangeContributions.event,\n        });\n    }\n    updateConfigurationSchema(codeActionContributions) {\n        const newProperties = { ...codeActionsOnSaveDefaultProperties };\n        for (const [sourceAction, props] of this.getSourceActions(codeActionContributions)) {\n            newProperties[sourceAction] = {\n                type: 'boolean',\n                description: ( nls.localize(\n                    'codeActionsOnSave.generic',\n                    \"Controls whether '{0}' actions should be run on file save.\",\n                    props.title\n                ))\n            };\n        }\n        codeActionsOnSaveSchema.properties = newProperties;\n        ( Registry.as(Extensions.Configuration))\n            .notifyConfigurationSchemaUpdated(editorConfiguration);\n    }\n    getSourceActions(contributions) {\n        const defaultKinds = ( ( Object.keys(codeActionsOnSaveDefaultProperties)).map(value => ( new CodeActionKind(value))));\n        const sourceActions = ( new Map());\n        for (const contribution of contributions) {\n            for (const action of contribution.actions) {\n                const kind = ( new CodeActionKind(action.kind));\n                if (CodeActionKind.Source.contains(kind)\n                    && !( defaultKinds.some(defaultKind => defaultKind.contains(kind)))) {\n                    sourceActions.set(kind.value, action);\n                }\n            }\n        }\n        return sourceActions;\n    }\n    getSchemaAdditions() {\n        const conditionalSchema = (command, actions) => {\n            return {\n                if: {\n                    required: ['command'],\n                    properties: {\n                        'command': { const: command }\n                    }\n                },\n                then: {\n                    properties: {\n                        'args': {\n                            required: ['kind'],\n                            properties: {\n                                'kind': {\n                                    anyOf: [\n                                        {\n                                            enum: ( actions.map(action => action.kind)),\n                                            enumDescriptions: ( actions.map(action => action.description ?? action.title)),\n                                        },\n                                        { type: 'string' },\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                }\n            };\n        };\n        const getActions = (ofKind) => {\n            const allActions = ( this._contributedCodeActions.map(desc => desc.actions)).flat();\n            const out = ( new Map());\n            for (const action of allActions) {\n                if (!( out.has(action.kind)) && ofKind.contains(( new CodeActionKind(action.kind)))) {\n                    out.set(action.kind, action);\n                }\n            }\n            return Array.from(( out.values()));\n        };\n        return [\n            conditionalSchema(codeActionCommandId, getActions(CodeActionKind.Empty)),\n            conditionalSchema(refactorCommandId, getActions(CodeActionKind.Refactor)),\n            conditionalSchema(sourceActionCommandId, getActions(CodeActionKind.Source)),\n        ];\n    }\n};\nCodeActionsContribution = ( __decorate([\n    ( __param(1, IKeybindingService))\n], CodeActionsContribution));\nexport { CodeActionsContribution, editorConfiguration };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from 'monaco-editor/esm/vs/editor/common/services/languageFeatures.js';\nimport { CodeActionKind } from 'monaco-editor/esm/vs/editor/contrib/codeAction/common/types.js';\nimport { ContextKeyExpr, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nlet CodeActionDocumentationContribution = class CodeActionDocumentationContribution extends Disposable {\n    constructor(extensionPoint, contextKeyService, languageFeaturesService) {\n        super();\n        this.contextKeyService = contextKeyService;\n        this.contributions = [];\n        this.emptyCodeActionsList = {\n            actions: [],\n            dispose: () => { }\n        };\n        this._register(languageFeaturesService.codeActionProvider.register('*', this));\n        extensionPoint.setHandler(points => {\n            this.contributions = [];\n            for (const documentation of points) {\n                if (!documentation.value.refactoring) {\n                    continue;\n                }\n                for (const contribution of documentation.value.refactoring) {\n                    const precondition = ContextKeyExpr.deserialize(contribution.when);\n                    if (!precondition) {\n                        continue;\n                    }\n                    this.contributions.push({\n                        title: contribution.title,\n                        when: precondition,\n                        command: contribution.command\n                    });\n                }\n            }\n        });\n    }\n    async provideCodeActions(_model, _range, context, _token) {\n        return this.emptyCodeActionsList;\n    }\n    _getAdditionalMenuItems(context, actions) {\n        if (context.only !== CodeActionKind.Refactor.value) {\n            if (!( actions.some(action => action.kind && CodeActionKind.Refactor.contains(( new CodeActionKind(action.kind)))))) {\n                return [];\n            }\n        }\n        return ( this.contributions\n            .filter(contribution => this.contextKeyService.contextMatchesRules(contribution.when))\n            .map(contribution => {\n            return {\n                id: contribution.command,\n                title: contribution.title\n            };\n        }));\n    }\n};\nCodeActionDocumentationContribution = ( __decorate([\n    ( __param(1, IContextKeyService)),\n    ( __param(2, ILanguageFeaturesService))\n], CodeActionDocumentationContribution));\nexport { CodeActionDocumentationContribution };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { Extensions } from '../../../common/contributions.js';\nlet ListContext = class ListContext {\n    constructor(contextKeyService) {\n        contextKeyService.createKey('listSupportsTypeNavigation', true);\n        contextKeyService.createKey('listSupportsKeyboardNavigation', true);\n    }\n};\nListContext = ( __decorate([\n    ( __param(0, IContextKeyService))\n], ListContext));\n( Registry.as(Extensions.Workbench)).registerWorkbenchContribution(ListContext, 1 );\nexport { ListContext };\n"],
  "mappings": "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",
  "names": ["init_platform", "init_actions", "extension", "WorkbenchReferencesController", "init_actions", "AbstractFloatingClickMenu", "init_actions", "_a", "FloatingEditorClickWidget", "init_actions", "_a", "init_platform", "_a", "Extensions", "_a", "scope", "$", "_a", "grammar", "semanticTokens", "properties", "init_platform", "css", "init_actions", "SwitchQuickDiffViewItem", "UIEditorAction", "ChangeType", "DirtyDiffWidget", "basename", "_a", "change", "TrimWhitespaceParticipant", "_a", "FinalNewLineParticipant", "TrimFinalNewLinesParticipant", "FormatOnSaveParticipant", "CodeActionOnSaveParticipant", "SaveParticipantsContribution", "Extensions", "init_actions", "init_actions", "init_platform", "MultiCursorModifierContextKeyController", "Extensions", "init_actions", "init_actions", "init_platform", "_a", "options", "wrappingInfo", "EditorWordWrapContextKeyTracker", "canToggleWordWrap", "Extensions", "init_actions", "init_actions", "init_platform", "_a", "init_platform", "_a", "document", "Extensions", "init_actions", "_a", "part", "init_platform", "CodeActionExtensionPointFields", "DocumentationExtensionPointFields", "init_platform", "CodeActionsContribution", "codeActionsExtensionPoint", "Extensions", "CodeActionDocumentationContribution", "Extensions", "WorkbenchConfigurationContribution", "init_platform", "ListContext", "Extensions", "ExtensionPoints", "Extensions", "editorConfiguration", "ConfiguredStandaloneEditor", "_a", "DelegateStandaloneKeybindingService"]
}

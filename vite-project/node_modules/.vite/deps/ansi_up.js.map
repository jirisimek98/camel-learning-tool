{
  "version": 3,
  "sources": ["../../ansi_up/ansi_up.js"],
  "sourcesContent": ["\"use strict\";\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar PacketKind;\n(function (PacketKind) {\n    PacketKind[PacketKind[\"EOS\"] = 0] = \"EOS\";\n    PacketKind[PacketKind[\"Text\"] = 1] = \"Text\";\n    PacketKind[PacketKind[\"Incomplete\"] = 2] = \"Incomplete\";\n    PacketKind[PacketKind[\"ESC\"] = 3] = \"ESC\";\n    PacketKind[PacketKind[\"Unknown\"] = 4] = \"Unknown\";\n    PacketKind[PacketKind[\"SGR\"] = 5] = \"SGR\";\n    PacketKind[PacketKind[\"OSCURL\"] = 6] = \"OSCURL\";\n})(PacketKind || (PacketKind = {}));\nexport class AnsiUp {\n    constructor() {\n        this.VERSION = \"6.0.2\";\n        this.setup_palettes();\n        this._use_classes = false;\n        this.bold = false;\n        this.faint = false;\n        this.italic = false;\n        this.underline = false;\n        this.fg = this.bg = null;\n        this._buffer = '';\n        this._url_allowlist = { 'http': 1, 'https': 1 };\n        this._escape_html = true;\n        this.boldStyle = 'font-weight:bold';\n        this.faintStyle = 'opacity:0.7';\n        this.italicStyle = 'font-style:italic';\n        this.underlineStyle = 'text-decoration:underline';\n    }\n    set use_classes(arg) {\n        this._use_classes = arg;\n    }\n    get use_classes() {\n        return this._use_classes;\n    }\n    set url_allowlist(arg) {\n        this._url_allowlist = arg;\n    }\n    get url_allowlist() {\n        return this._url_allowlist;\n    }\n    set escape_html(arg) {\n        this._escape_html = arg;\n    }\n    get escape_html() {\n        return this._escape_html;\n    }\n    set boldStyle(arg) { this._boldStyle = arg; }\n    get boldStyle() { return this._boldStyle; }\n    set faintStyle(arg) { this._faintStyle = arg; }\n    get faintStyle() { return this._faintStyle; }\n    set italicStyle(arg) { this._italicStyle = arg; }\n    get italicStyle() { return this._italicStyle; }\n    set underlineStyle(arg) { this._underlineStyle = arg; }\n    get underlineStyle() { return this._underlineStyle; }\n    setup_palettes() {\n        this.ansi_colors =\n            [\n                [\n                    { rgb: [0, 0, 0], class_name: \"ansi-black\" },\n                    { rgb: [187, 0, 0], class_name: \"ansi-red\" },\n                    { rgb: [0, 187, 0], class_name: \"ansi-green\" },\n                    { rgb: [187, 187, 0], class_name: \"ansi-yellow\" },\n                    { rgb: [0, 0, 187], class_name: \"ansi-blue\" },\n                    { rgb: [187, 0, 187], class_name: \"ansi-magenta\" },\n                    { rgb: [0, 187, 187], class_name: \"ansi-cyan\" },\n                    { rgb: [255, 255, 255], class_name: \"ansi-white\" }\n                ],\n                [\n                    { rgb: [85, 85, 85], class_name: \"ansi-bright-black\" },\n                    { rgb: [255, 85, 85], class_name: \"ansi-bright-red\" },\n                    { rgb: [0, 255, 0], class_name: \"ansi-bright-green\" },\n                    { rgb: [255, 255, 85], class_name: \"ansi-bright-yellow\" },\n                    { rgb: [85, 85, 255], class_name: \"ansi-bright-blue\" },\n                    { rgb: [255, 85, 255], class_name: \"ansi-bright-magenta\" },\n                    { rgb: [85, 255, 255], class_name: \"ansi-bright-cyan\" },\n                    { rgb: [255, 255, 255], class_name: \"ansi-bright-white\" }\n                ]\n            ];\n        this.palette_256 = [];\n        this.ansi_colors.forEach(palette => {\n            palette.forEach(rec => {\n                this.palette_256.push(rec);\n            });\n        });\n        let levels = [0, 95, 135, 175, 215, 255];\n        for (let r = 0; r < 6; ++r) {\n            for (let g = 0; g < 6; ++g) {\n                for (let b = 0; b < 6; ++b) {\n                    let col = { rgb: [levels[r], levels[g], levels[b]], class_name: 'truecolor' };\n                    this.palette_256.push(col);\n                }\n            }\n        }\n        let grey_level = 8;\n        for (let i = 0; i < 24; ++i, grey_level += 10) {\n            let gry = { rgb: [grey_level, grey_level, grey_level], class_name: 'truecolor' };\n            this.palette_256.push(gry);\n        }\n    }\n    escape_txt_for_html(txt) {\n        if (!this._escape_html)\n            return txt;\n        return txt.replace(/[&<>\"']/gm, (str) => {\n            if (str === \"&\")\n                return \"&amp;\";\n            if (str === \"<\")\n                return \"&lt;\";\n            if (str === \">\")\n                return \"&gt;\";\n            if (str === \"\\\"\")\n                return \"&quot;\";\n            if (str === \"'\")\n                return \"&#x27;\";\n        });\n    }\n    append_buffer(txt) {\n        var str = this._buffer + txt;\n        this._buffer = str;\n    }\n    get_next_packet() {\n        var pkt = {\n            kind: PacketKind.EOS,\n            text: '',\n            url: ''\n        };\n        var len = this._buffer.length;\n        if (len == 0)\n            return pkt;\n        var pos = this._buffer.indexOf(\"\\x1B\");\n        if (pos == -1) {\n            pkt.kind = PacketKind.Text;\n            pkt.text = this._buffer;\n            this._buffer = '';\n            return pkt;\n        }\n        if (pos > 0) {\n            pkt.kind = PacketKind.Text;\n            pkt.text = this._buffer.slice(0, pos);\n            this._buffer = this._buffer.slice(pos);\n            return pkt;\n        }\n        if (pos == 0) {\n            if (len < 3) {\n                pkt.kind = PacketKind.Incomplete;\n                return pkt;\n            }\n            var next_char = this._buffer.charAt(1);\n            if ((next_char != '[') && (next_char != ']') && (next_char != '(')) {\n                pkt.kind = PacketKind.ESC;\n                pkt.text = this._buffer.slice(0, 1);\n                this._buffer = this._buffer.slice(1);\n                return pkt;\n            }\n            if (next_char == '[') {\n                if (!this._csi_regex) {\n                    this._csi_regex = rgx(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n                        ^                           # beginning of line\\n                                                    #\\n                                                    # First attempt\\n                        (?:                         # legal sequence\\n                          \\u001B[                      # CSI\\n                          ([<-?]?)              # private-mode char\\n                          ([d;]*)                    # any digits or semicolons\\n                          ([ -/]?               # an intermediate modifier\\n                          [@-~])                # the command\\n                        )\\n                        |                           # alternate (second attempt)\\n                        (?:                         # illegal sequence\\n                          \\u001B[                      # CSI\\n                          [ -~]*                # anything legal\\n                          ([\\0-\\u001F:])              # anything illegal\\n                        )\\n                    \"], [\"\\n                        ^                           # beginning of line\\n                                                    #\\n                                                    # First attempt\\n                        (?:                         # legal sequence\\n                          \\\\x1b\\\\[                      # CSI\\n                          ([\\\\x3c-\\\\x3f]?)              # private-mode char\\n                          ([\\\\d;]*)                    # any digits or semicolons\\n                          ([\\\\x20-\\\\x2f]?               # an intermediate modifier\\n                          [\\\\x40-\\\\x7e])                # the command\\n                        )\\n                        |                           # alternate (second attempt)\\n                        (?:                         # illegal sequence\\n                          \\\\x1b\\\\[                      # CSI\\n                          [\\\\x20-\\\\x7e]*                # anything legal\\n                          ([\\\\x00-\\\\x1f:])              # anything illegal\\n                        )\\n                    \"])));\n                }\n                let match = this._buffer.match(this._csi_regex);\n                if (match === null) {\n                    pkt.kind = PacketKind.Incomplete;\n                    return pkt;\n                }\n                if (match[4]) {\n                    pkt.kind = PacketKind.ESC;\n                    pkt.text = this._buffer.slice(0, 1);\n                    this._buffer = this._buffer.slice(1);\n                    return pkt;\n                }\n                if ((match[1] != '') || (match[3] != 'm'))\n                    pkt.kind = PacketKind.Unknown;\n                else\n                    pkt.kind = PacketKind.SGR;\n                pkt.text = match[2];\n                var rpos = match[0].length;\n                this._buffer = this._buffer.slice(rpos);\n                return pkt;\n            }\n            else if (next_char == ']') {\n                if (len < 4) {\n                    pkt.kind = PacketKind.Incomplete;\n                    return pkt;\n                }\n                if ((this._buffer.charAt(2) != '8')\n                    || (this._buffer.charAt(3) != ';')) {\n                    pkt.kind = PacketKind.ESC;\n                    pkt.text = this._buffer.slice(0, 1);\n                    this._buffer = this._buffer.slice(1);\n                    return pkt;\n                }\n                if (!this._osc_st) {\n                    this._osc_st = rgxG(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n                        (?:                         # legal sequence\\n                          (\\u001B\\\\)                    # ESC                           |                           # alternate\\n                          (\\u0007)                      # BEL (what xterm did)\\n                        )\\n                        |                           # alternate (second attempt)\\n                        (                           # illegal sequence\\n                          [\\0-\\u0006]                 # anything illegal\\n                          |                           # alternate\\n                          [\\b-\\u001A]                 # anything illegal\\n                          |                           # alternate\\n                          [\\u001C-\\u001F]                 # anything illegal\\n                        )\\n                    \"], [\"\\n                        (?:                         # legal sequence\\n                          (\\\\x1b\\\\\\\\)                    # ESC \\\\\\n                          |                           # alternate\\n                          (\\\\x07)                      # BEL (what xterm did)\\n                        )\\n                        |                           # alternate (second attempt)\\n                        (                           # illegal sequence\\n                          [\\\\x00-\\\\x06]                 # anything illegal\\n                          |                           # alternate\\n                          [\\\\x08-\\\\x1a]                 # anything illegal\\n                          |                           # alternate\\n                          [\\\\x1c-\\\\x1f]                 # anything illegal\\n                        )\\n                    \"])));\n                }\n                this._osc_st.lastIndex = 0;\n                {\n                    let match = this._osc_st.exec(this._buffer);\n                    if (match === null) {\n                        pkt.kind = PacketKind.Incomplete;\n                        return pkt;\n                    }\n                    if (match[3]) {\n                        pkt.kind = PacketKind.ESC;\n                        pkt.text = this._buffer.slice(0, 1);\n                        this._buffer = this._buffer.slice(1);\n                        return pkt;\n                    }\n                }\n                {\n                    let match = this._osc_st.exec(this._buffer);\n                    if (match === null) {\n                        pkt.kind = PacketKind.Incomplete;\n                        return pkt;\n                    }\n                    if (match[3]) {\n                        pkt.kind = PacketKind.ESC;\n                        pkt.text = this._buffer.slice(0, 1);\n                        this._buffer = this._buffer.slice(1);\n                        return pkt;\n                    }\n                }\n                if (!this._osc_regex) {\n                    this._osc_regex = rgx(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n                        ^                           # beginning of line\\n                                                    #\\n                        \\u001B]8;                    # OSC Hyperlink\\n                        [ -:<-~]*       # params (excluding ;)\\n                        ;                           # end of params\\n                        ([!-~]{0,512})        # URL capture\\n                        (?:                         # ST\\n                          (?:\\u001B\\\\)                  # ESC                           |                           # alternate\\n                          (?:\\u0007)                    # BEL (what xterm did)\\n                        )\\n                        ([ -~]+)              # TEXT capture\\n                        \\u001B]8;;                   # OSC Hyperlink End\\n                        (?:                         # ST\\n                          (?:\\u001B\\\\)                  # ESC                           |                           # alternate\\n                          (?:\\u0007)                    # BEL (what xterm did)\\n                        )\\n                    \"], [\"\\n                        ^                           # beginning of line\\n                                                    #\\n                        \\\\x1b\\\\]8;                    # OSC Hyperlink\\n                        [\\\\x20-\\\\x3a\\\\x3c-\\\\x7e]*       # params (excluding ;)\\n                        ;                           # end of params\\n                        ([\\\\x21-\\\\x7e]{0,512})        # URL capture\\n                        (?:                         # ST\\n                          (?:\\\\x1b\\\\\\\\)                  # ESC \\\\\\n                          |                           # alternate\\n                          (?:\\\\x07)                    # BEL (what xterm did)\\n                        )\\n                        ([\\\\x20-\\\\x7e]+)              # TEXT capture\\n                        \\\\x1b\\\\]8;;                   # OSC Hyperlink End\\n                        (?:                         # ST\\n                          (?:\\\\x1b\\\\\\\\)                  # ESC \\\\\\n                          |                           # alternate\\n                          (?:\\\\x07)                    # BEL (what xterm did)\\n                        )\\n                    \"])));\n                }\n                let match = this._buffer.match(this._osc_regex);\n                if (match === null) {\n                    pkt.kind = PacketKind.ESC;\n                    pkt.text = this._buffer.slice(0, 1);\n                    this._buffer = this._buffer.slice(1);\n                    return pkt;\n                }\n                pkt.kind = PacketKind.OSCURL;\n                pkt.url = match[1];\n                pkt.text = match[2];\n                var rpos = match[0].length;\n                this._buffer = this._buffer.slice(rpos);\n                return pkt;\n            }\n            else if (next_char == '(') {\n                pkt.kind = PacketKind.Unknown;\n                this._buffer = this._buffer.slice(3);\n                return pkt;\n            }\n        }\n    }\n    ansi_to_html(txt) {\n        this.append_buffer(txt);\n        var blocks = [];\n        while (true) {\n            var packet = this.get_next_packet();\n            if ((packet.kind == PacketKind.EOS)\n                || (packet.kind == PacketKind.Incomplete))\n                break;\n            if ((packet.kind == PacketKind.ESC)\n                || (packet.kind == PacketKind.Unknown))\n                continue;\n            if (packet.kind == PacketKind.Text)\n                blocks.push(this.transform_to_html(this.with_state(packet)));\n            else if (packet.kind == PacketKind.SGR)\n                this.process_ansi(packet);\n            else if (packet.kind == PacketKind.OSCURL)\n                blocks.push(this.process_hyperlink(packet));\n        }\n        return blocks.join(\"\");\n    }\n    with_state(pkt) {\n        return { bold: this.bold, faint: this.faint, italic: this.italic, underline: this.underline, fg: this.fg, bg: this.bg, text: pkt.text };\n    }\n    process_ansi(pkt) {\n        let sgr_cmds = pkt.text.split(';');\n        while (sgr_cmds.length > 0) {\n            let sgr_cmd_str = sgr_cmds.shift();\n            let num = parseInt(sgr_cmd_str, 10);\n            if (isNaN(num) || num === 0) {\n                this.fg = null;\n                this.bg = null;\n                this.bold = false;\n                this.faint = false;\n                this.italic = false;\n                this.underline = false;\n            }\n            else if (num === 1) {\n                this.bold = true;\n            }\n            else if (num === 2) {\n                this.faint = true;\n            }\n            else if (num === 3) {\n                this.italic = true;\n            }\n            else if (num === 4) {\n                this.underline = true;\n            }\n            else if (num === 21) {\n                this.bold = false;\n            }\n            else if (num === 22) {\n                this.faint = false;\n                this.bold = false;\n            }\n            else if (num === 23) {\n                this.italic = false;\n            }\n            else if (num === 24) {\n                this.underline = false;\n            }\n            else if (num === 39) {\n                this.fg = null;\n            }\n            else if (num === 49) {\n                this.bg = null;\n            }\n            else if ((num >= 30) && (num < 38)) {\n                this.fg = this.ansi_colors[0][(num - 30)];\n            }\n            else if ((num >= 40) && (num < 48)) {\n                this.bg = this.ansi_colors[0][(num - 40)];\n            }\n            else if ((num >= 90) && (num < 98)) {\n                this.fg = this.ansi_colors[1][(num - 90)];\n            }\n            else if ((num >= 100) && (num < 108)) {\n                this.bg = this.ansi_colors[1][(num - 100)];\n            }\n            else if (num === 38 || num === 48) {\n                if (sgr_cmds.length > 0) {\n                    let is_foreground = (num === 38);\n                    let mode_cmd = sgr_cmds.shift();\n                    if (mode_cmd === '5' && sgr_cmds.length > 0) {\n                        let palette_index = parseInt(sgr_cmds.shift(), 10);\n                        if (palette_index >= 0 && palette_index <= 255) {\n                            if (is_foreground)\n                                this.fg = this.palette_256[palette_index];\n                            else\n                                this.bg = this.palette_256[palette_index];\n                        }\n                    }\n                    if (mode_cmd === '2' && sgr_cmds.length > 2) {\n                        let r = parseInt(sgr_cmds.shift(), 10);\n                        let g = parseInt(sgr_cmds.shift(), 10);\n                        let b = parseInt(sgr_cmds.shift(), 10);\n                        if ((r >= 0 && r <= 255) && (g >= 0 && g <= 255) && (b >= 0 && b <= 255)) {\n                            let c = { rgb: [r, g, b], class_name: 'truecolor' };\n                            if (is_foreground)\n                                this.fg = c;\n                            else\n                                this.bg = c;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    transform_to_html(fragment) {\n        let txt = fragment.text;\n        if (txt.length === 0)\n            return txt;\n        txt = this.escape_txt_for_html(txt);\n        if (!fragment.bold && !fragment.italic && !fragment.underline && fragment.fg === null && fragment.bg === null)\n            return txt;\n        let styles = [];\n        let classes = [];\n        let fg = fragment.fg;\n        let bg = fragment.bg;\n        if (fragment.bold)\n            styles.push(this._boldStyle);\n        if (fragment.faint)\n            styles.push(this._faintStyle);\n        if (fragment.italic)\n            styles.push(this._italicStyle);\n        if (fragment.underline)\n            styles.push(this._underlineStyle);\n        if (!this._use_classes) {\n            if (fg)\n                styles.push(`color:rgb(${fg.rgb.join(',')})`);\n            if (bg)\n                styles.push(`background-color:rgb(${bg.rgb})`);\n        }\n        else {\n            if (fg) {\n                if (fg.class_name !== 'truecolor') {\n                    classes.push(`${fg.class_name}-fg`);\n                }\n                else {\n                    styles.push(`color:rgb(${fg.rgb.join(',')})`);\n                }\n            }\n            if (bg) {\n                if (bg.class_name !== 'truecolor') {\n                    classes.push(`${bg.class_name}-bg`);\n                }\n                else {\n                    styles.push(`background-color:rgb(${bg.rgb.join(',')})`);\n                }\n            }\n        }\n        let class_string = '';\n        let style_string = '';\n        if (classes.length)\n            class_string = ` class=\"${classes.join(' ')}\"`;\n        if (styles.length)\n            style_string = ` style=\"${styles.join(';')}\"`;\n        return `<span${style_string}${class_string}>${txt}</span>`;\n    }\n    ;\n    process_hyperlink(pkt) {\n        let parts = pkt.url.split(':');\n        if (parts.length < 1)\n            return '';\n        if (!this._url_allowlist[parts[0]])\n            return '';\n        let result = `<a href=\"${this.escape_txt_for_html(pkt.url)}\">${this.escape_txt_for_html(pkt.text)}</a>`;\n        return result;\n    }\n}\nfunction rgx(tmplObj, ...subst) {\n    let regexText = tmplObj.raw[0];\n    let wsrgx = /^\\s+|\\s+\\n|\\s*#[\\s\\S]*?\\n|\\n/gm;\n    let txt2 = regexText.replace(wsrgx, '');\n    return new RegExp(txt2);\n}\nfunction rgxG(tmplObj, ...subst) {\n    let regexText = tmplObj.raw[0];\n    let wsrgx = /^\\s+|\\s+\\n|\\s*#[\\s\\S]*?\\n|\\n/gm;\n    let txt2 = regexText.replace(wsrgx, '');\n    return new RegExp(txt2, 'g');\n}\nvar templateObject_1, templateObject_2, templateObject_3;\n"],
  "mappings": "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",
  "names": ["PacketKind", "match"]
}

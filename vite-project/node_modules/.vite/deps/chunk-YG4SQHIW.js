import {
  Extensions,
  ILifecycleService
} from "./chunk-UI7MTZPM.js";
import {
  Barrier,
  Registry,
  RunOnceScheduler,
  init_async,
  init_platform,
  runWhenIdle
} from "./chunk-Z3Z4BZM7.js";
import {
  Emitter,
  init_event
} from "./chunk-N5MAMNNV.js";

// node_modules/vscode/lifecycle.js
init_platform();
init_async();
init_event();
var renderWorkbenchEmitter = new Emitter();
var onRenderWorkbench = renderWorkbenchEmitter.event;
var serviceInitializedBarrier = new Barrier();
var serviceInitializePreParticipants = [];
var serviceInitializeParticipants = [];
var serviceInitializePostParticipants = [];
function registerServiceInitializePreParticipant(participant) {
  serviceInitializePreParticipants.push(participant);
}
function registerServiceInitializeParticipant(participant) {
  serviceInitializeParticipants.push(participant);
}
async function startup(instantiationService) {
  await instantiationService.invokeFunction(async (accessor) => {
    await Promise.all(serviceInitializePreParticipants.map((participant) => participant(accessor)));
  });
  await instantiationService.invokeFunction(async (accessor) => {
    const lifecycleService = accessor.get(ILifecycleService);
    await Promise.all(serviceInitializeParticipants.map((participant) => participant(accessor)));
    lifecycleService.phase = 2;
  });
  await instantiationService.invokeFunction(async (accessor) => {
    await Promise.all(serviceInitializePostParticipants.map((participant) => participant(accessor)));
  });
  serviceInitializedBarrier.open();
  instantiationService.invokeFunction((accessor) => {
    const lifecycleService = accessor.get(ILifecycleService);
    Registry.as(Extensions.Workbench).start(accessor);
    renderWorkbenchEmitter.fire(accessor);
    lifecycleService.phase = 3;
    const eventuallyPhaseScheduler = new RunOnceScheduler(() => {
      runWhenIdle(() => {
        lifecycleService.phase = 4;
      }, 2500);
    }, 2500);
    eventuallyPhaseScheduler.schedule();
  });
}

export {
  onRenderWorkbench,
  serviceInitializedBarrier,
  registerServiceInitializePreParticipant,
  registerServiceInitializeParticipant,
  startup
};
//# sourceMappingURL=chunk-YG4SQHIW.js.map

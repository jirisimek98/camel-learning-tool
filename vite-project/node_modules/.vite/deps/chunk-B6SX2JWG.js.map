{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/editor/contrib/format/browser/formattingEdit.js", "../../monaco-editor/esm/vs/editor/contrib/format/browser/format.js", "../../monaco-editor/esm/vs/editor/contrib/folding/browser/foldingModel.js", "../../monaco-editor/esm/vs/editor/contrib/folding/browser/foldingRanges.js", "../../monaco-editor/esm/vs/editor/contrib/folding/browser/folding.js", "../../monaco-editor/esm/vs/editor/contrib/folding/browser/hiddenRangeModel.js", "../../monaco-editor/esm/vs/editor/contrib/folding/browser/indentRangeProvider.js", "../../monaco-editor/esm/vs/editor/contrib/folding/browser/foldingDecorations.js", "../../monaco-editor/esm/vs/editor/contrib/folding/browser/syntaxRangeProvider.js", "../../monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/peek/referencesController.js", "../../monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/referencesModel.js", "../../monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/peek/referencesWidget.js", "../../monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/peek/referencesTree.js", "../../monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/goToCommands.js", "../../monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/symbolNavigation.js", "../../monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/goToSymbol.js", "../../monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHints.js", "../../monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsController.js", "../../monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/link/clickLinkGesture.js", "../../monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsLocations.js", "../../monaco-editor/esm/vs/editor/common/commands/trimTrailingWhitespaceCommand.js", "../../monaco-editor/esm/vs/editor/contrib/semanticTokens/common/semanticTokensConfig.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsHintsWidget.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/commandIds.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsController.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextWidget.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostText.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/utils.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsModel.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsSource.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/provideInlineCompletions.js", "../../monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/fixBrackets.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/singleTextEdit.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetInlineCompletionProvider.js"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nexport class FormattingEdit {\n    static _handleEolEdits(editor, edits) {\n        let newEol = undefined;\n        const singleEdits = [];\n        for (const edit of edits) {\n            if (typeof edit.eol === 'number') {\n                newEol = edit.eol;\n            }\n            if (edit.range && typeof edit.text === 'string') {\n                singleEdits.push(edit);\n            }\n        }\n        if (typeof newEol === 'number') {\n            if (editor.hasModel()) {\n                editor.getModel().pushEOL(newEol);\n            }\n        }\n        return singleEdits;\n    }\n    static _isFullModelReplaceEdit(editor, edit) {\n        if (!editor.hasModel()) {\n            return false;\n        }\n        const model = editor.getModel();\n        const editRange = model.validateRange(edit.range);\n        const fullModelRange = model.getFullModelRange();\n        return fullModelRange.equalsRange(editRange);\n    }\n    static execute(editor, _edits, addUndoStops) {\n        if (addUndoStops) {\n            editor.pushUndoStop();\n        }\n        const scrollState = StableEditorScrollState.capture(editor);\n        const edits = FormattingEdit._handleEolEdits(editor, _edits);\n        if (edits.length === 1 && FormattingEdit._isFullModelReplaceEdit(editor, edits[0])) {\n            // We use replace semantics and hope that markers stay put...\n            editor.executeEdits('formatEditsCommand', edits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\n        }\n        else {\n            editor.executeEdits('formatEditsCommand', edits.map(edit => EditOperation.replaceMove(Range.lift(edit.range), edit.text)));\n        }\n        if (addUndoStops) {\n            editor.pushUndoStop();\n        }\n        scrollState.restoreRelativeVerticalPositionOfCursor(editor);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { asArray, isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { LinkedList } from '../../../../base/common/linkedList.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorStateCancellationTokenSource, TextModelCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { isCodeEditor } from '../../../browser/editorBrowser.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { FormattingEdit } from './formattingEdit.js';\nimport * as nls from '../../../../nls.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ExtensionIdentifierSet } from '../../../../platform/extensions/common/extensions.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nexport function alertFormattingEdits(edits) {\n    edits = edits.filter(edit => edit.range);\n    if (!edits.length) {\n        return;\n    }\n    let { range } = edits[0];\n    for (let i = 1; i < edits.length; i++) {\n        range = Range.plusRange(range, edits[i].range);\n    }\n    const { startLineNumber, endLineNumber } = range;\n    if (startLineNumber === endLineNumber) {\n        if (edits.length === 1) {\n            alert(nls.localize('hint11', \"Made 1 formatting edit on line {0}\", startLineNumber));\n        }\n        else {\n            alert(nls.localize('hintn1', \"Made {0} formatting edits on line {1}\", edits.length, startLineNumber));\n        }\n    }\n    else {\n        if (edits.length === 1) {\n            alert(nls.localize('hint1n', \"Made 1 formatting edit between lines {0} and {1}\", startLineNumber, endLineNumber));\n        }\n        else {\n            alert(nls.localize('hintnn', \"Made {0} formatting edits between lines {1} and {2}\", edits.length, startLineNumber, endLineNumber));\n        }\n    }\n}\nexport function getRealAndSyntheticDocumentFormattersOrdered(documentFormattingEditProvider, documentRangeFormattingEditProvider, model) {\n    const result = [];\n    const seen = new ExtensionIdentifierSet();\n    // (1) add all document formatter\n    const docFormatter = documentFormattingEditProvider.ordered(model);\n    for (const formatter of docFormatter) {\n        result.push(formatter);\n        if (formatter.extensionId) {\n            seen.add(formatter.extensionId);\n        }\n    }\n    // (2) add all range formatter as document formatter (unless the same extension already did that)\n    const rangeFormatter = documentRangeFormattingEditProvider.ordered(model);\n    for (const formatter of rangeFormatter) {\n        if (formatter.extensionId) {\n            if (seen.has(formatter.extensionId)) {\n                continue;\n            }\n            seen.add(formatter.extensionId);\n        }\n        result.push({\n            displayName: formatter.displayName,\n            extensionId: formatter.extensionId,\n            provideDocumentFormattingEdits(model, options, token) {\n                return formatter.provideDocumentRangeFormattingEdits(model, model.getFullModelRange(), options, token);\n            }\n        });\n    }\n    return result;\n}\nexport class FormattingConflicts {\n    static setFormatterSelector(selector) {\n        const remove = FormattingConflicts._selectors.unshift(selector);\n        return { dispose: remove };\n    }\n    static select(formatter, document, mode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (formatter.length === 0) {\n                return undefined;\n            }\n            const selector = Iterable.first(FormattingConflicts._selectors);\n            if (selector) {\n                return yield selector(formatter, document, mode);\n            }\n            return undefined;\n        });\n    }\n}\nFormattingConflicts._selectors = new LinkedList();\nexport function formatDocumentRangesWithSelectedProvider(accessor, editorOrModel, rangeOrRanges, mode, progress, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const instaService = accessor.get(IInstantiationService);\n        const { documentRangeFormattingEditProvider: documentRangeFormattingEditProviderRegistry } = accessor.get(ILanguageFeaturesService);\n        const model = isCodeEditor(editorOrModel) ? editorOrModel.getModel() : editorOrModel;\n        const provider = documentRangeFormattingEditProviderRegistry.ordered(model);\n        const selected = yield FormattingConflicts.select(provider, model, mode);\n        if (selected) {\n            progress.report(selected);\n            yield instaService.invokeFunction(formatDocumentRangesWithProvider, selected, editorOrModel, rangeOrRanges, token);\n        }\n    });\n}\nexport function formatDocumentRangesWithProvider(accessor, provider, editorOrModel, rangeOrRanges, token) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n        const workerService = accessor.get(IEditorWorkerService);\n        const logService = accessor.get(ILogService);\n        let model;\n        let cts;\n        if (isCodeEditor(editorOrModel)) {\n            model = editorOrModel.getModel();\n            cts = new EditorStateCancellationTokenSource(editorOrModel, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */, undefined, token);\n        }\n        else {\n            model = editorOrModel;\n            cts = new TextModelCancellationTokenSource(editorOrModel, token);\n        }\n        // make sure that ranges don't overlap nor touch each other\n        const ranges = [];\n        let len = 0;\n        for (const range of asArray(rangeOrRanges).sort(Range.compareRangesUsingStarts)) {\n            if (len > 0 && Range.areIntersectingOrTouching(ranges[len - 1], range)) {\n                ranges[len - 1] = Range.fromPositions(ranges[len - 1].getStartPosition(), range.getEndPosition());\n            }\n            else {\n                len = ranges.push(range);\n            }\n        }\n        const computeEdits = (range) => __awaiter(this, void 0, void 0, function* () {\n            var _c, _d;\n            logService.trace(`[format][provideDocumentRangeFormattingEdits] (request)`, (_c = provider.extensionId) === null || _c === void 0 ? void 0 : _c.value, range);\n            const result = (yield provider.provideDocumentRangeFormattingEdits(model, range, model.getFormattingOptions(), cts.token)) || [];\n            logService.trace(`[format][provideDocumentRangeFormattingEdits] (response)`, (_d = provider.extensionId) === null || _d === void 0 ? void 0 : _d.value, result);\n            return result;\n        });\n        const hasIntersectingEdit = (a, b) => {\n            if (!a.length || !b.length) {\n                return false;\n            }\n            // quick exit if the list of ranges are completely unrelated [O(n)]\n            const mergedA = a.reduce((acc, val) => { return Range.plusRange(acc, val.range); }, a[0].range);\n            if (!b.some(x => { return Range.intersectRanges(mergedA, x.range); })) {\n                return false;\n            }\n            // fallback to a complete check [O(n^2)]\n            for (const edit of a) {\n                for (const otherEdit of b) {\n                    if (Range.intersectRanges(edit.range, otherEdit.range)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n        const allEdits = [];\n        const rawEditsList = [];\n        try {\n            if (typeof provider.provideDocumentRangesFormattingEdits === 'function') {\n                logService.trace(`[format][provideDocumentRangeFormattingEdits] (request)`, (_a = provider.extensionId) === null || _a === void 0 ? void 0 : _a.value, ranges);\n                const result = (yield provider.provideDocumentRangesFormattingEdits(model, ranges, model.getFormattingOptions(), cts.token)) || [];\n                logService.trace(`[format][provideDocumentRangeFormattingEdits] (response)`, (_b = provider.extensionId) === null || _b === void 0 ? void 0 : _b.value, result);\n                rawEditsList.push(result);\n            }\n            else {\n                for (const range of ranges) {\n                    if (cts.token.isCancellationRequested) {\n                        return true;\n                    }\n                    rawEditsList.push(yield computeEdits(range));\n                }\n                for (let i = 0; i < ranges.length; ++i) {\n                    for (let j = i + 1; j < ranges.length; ++j) {\n                        if (cts.token.isCancellationRequested) {\n                            return true;\n                        }\n                        if (hasIntersectingEdit(rawEditsList[i], rawEditsList[j])) {\n                            // Merge ranges i and j into a single range, recompute the associated edits\n                            const mergedRange = Range.plusRange(ranges[i], ranges[j]);\n                            const edits = yield computeEdits(mergedRange);\n                            ranges.splice(j, 1);\n                            ranges.splice(i, 1);\n                            ranges.push(mergedRange);\n                            rawEditsList.splice(j, 1);\n                            rawEditsList.splice(i, 1);\n                            rawEditsList.push(edits);\n                            // Restart scanning\n                            i = 0;\n                            j = 0;\n                        }\n                    }\n                }\n            }\n            for (const rawEdits of rawEditsList) {\n                if (cts.token.isCancellationRequested) {\n                    return true;\n                }\n                const minimalEdits = yield workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n                if (minimalEdits) {\n                    allEdits.push(...minimalEdits);\n                }\n            }\n        }\n        finally {\n            cts.dispose();\n        }\n        if (allEdits.length === 0) {\n            return false;\n        }\n        if (isCodeEditor(editorOrModel)) {\n            // use editor to apply edits\n            FormattingEdit.execute(editorOrModel, allEdits, true);\n            alertFormattingEdits(allEdits);\n            editorOrModel.revealPositionInCenterIfOutsideViewport(editorOrModel.getPosition(), 1 /* ScrollType.Immediate */);\n        }\n        else {\n            // use model to apply edits\n            const [{ range }] = allEdits;\n            const initialSelection = new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n            model.pushEditOperations([initialSelection], allEdits.map(edit => {\n                return {\n                    text: edit.text,\n                    range: Range.lift(edit.range),\n                    forceMoveMarkers: true\n                };\n            }), undoEdits => {\n                for (const { range } of undoEdits) {\n                    if (Range.areIntersectingOrTouching(range, initialSelection)) {\n                        return [new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn)];\n                    }\n                }\n                return null;\n            });\n        }\n        return true;\n    });\n}\nexport function formatDocumentWithSelectedProvider(accessor, editorOrModel, mode, progress, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const instaService = accessor.get(IInstantiationService);\n        const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n        const model = isCodeEditor(editorOrModel) ? editorOrModel.getModel() : editorOrModel;\n        const provider = getRealAndSyntheticDocumentFormattersOrdered(languageFeaturesService.documentFormattingEditProvider, languageFeaturesService.documentRangeFormattingEditProvider, model);\n        const selected = yield FormattingConflicts.select(provider, model, mode);\n        if (selected) {\n            progress.report(selected);\n            yield instaService.invokeFunction(formatDocumentWithProvider, selected, editorOrModel, mode, token);\n        }\n    });\n}\nexport function formatDocumentWithProvider(accessor, provider, editorOrModel, mode, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const workerService = accessor.get(IEditorWorkerService);\n        let model;\n        let cts;\n        if (isCodeEditor(editorOrModel)) {\n            model = editorOrModel.getModel();\n            cts = new EditorStateCancellationTokenSource(editorOrModel, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */, undefined, token);\n        }\n        else {\n            model = editorOrModel;\n            cts = new TextModelCancellationTokenSource(editorOrModel, token);\n        }\n        let edits;\n        try {\n            const rawEdits = yield provider.provideDocumentFormattingEdits(model, model.getFormattingOptions(), cts.token);\n            edits = yield workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n            if (cts.token.isCancellationRequested) {\n                return true;\n            }\n        }\n        finally {\n            cts.dispose();\n        }\n        if (!edits || edits.length === 0) {\n            return false;\n        }\n        if (isCodeEditor(editorOrModel)) {\n            // use editor to apply edits\n            FormattingEdit.execute(editorOrModel, edits, mode !== 2 /* FormattingMode.Silent */);\n            if (mode !== 2 /* FormattingMode.Silent */) {\n                alertFormattingEdits(edits);\n                editorOrModel.revealPositionInCenterIfOutsideViewport(editorOrModel.getPosition(), 1 /* ScrollType.Immediate */);\n            }\n        }\n        else {\n            // use model to apply edits\n            const [{ range }] = edits;\n            const initialSelection = new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n            model.pushEditOperations([initialSelection], edits.map(edit => {\n                return {\n                    text: edit.text,\n                    range: Range.lift(edit.range),\n                    forceMoveMarkers: true\n                };\n            }), undoEdits => {\n                for (const { range } of undoEdits) {\n                    if (Range.areIntersectingOrTouching(range, initialSelection)) {\n                        return [new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn)];\n                    }\n                }\n                return null;\n            });\n        }\n        return true;\n    });\n}\nexport function getDocumentRangeFormattingEditsUntilResult(workerService, languageFeaturesService, model, range, options, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const providers = languageFeaturesService.documentRangeFormattingEditProvider.ordered(model);\n        for (const provider of providers) {\n            const rawEdits = yield Promise.resolve(provider.provideDocumentRangeFormattingEdits(model, range, options, token)).catch(onUnexpectedExternalError);\n            if (isNonEmptyArray(rawEdits)) {\n                return yield workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n            }\n        }\n        return undefined;\n    });\n}\nexport function getDocumentFormattingEditsUntilResult(workerService, languageFeaturesService, model, options, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const providers = getRealAndSyntheticDocumentFormattersOrdered(languageFeaturesService.documentFormattingEditProvider, languageFeaturesService.documentRangeFormattingEditProvider, model);\n        for (const provider of providers) {\n            const rawEdits = yield Promise.resolve(provider.provideDocumentFormattingEdits(model, options, token)).catch(onUnexpectedExternalError);\n            if (isNonEmptyArray(rawEdits)) {\n                return yield workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n            }\n        }\n        return undefined;\n    });\n}\nexport function getOnTypeFormattingEdits(workerService, languageFeaturesService, model, position, ch, options, token) {\n    const providers = languageFeaturesService.onTypeFormattingEditProvider.ordered(model);\n    if (providers.length === 0) {\n        return Promise.resolve(undefined);\n    }\n    if (providers[0].autoFormatTriggerCharacters.indexOf(ch) < 0) {\n        return Promise.resolve(undefined);\n    }\n    return Promise.resolve(providers[0].provideOnTypeFormattingEdits(model, position, ch, options, token)).catch(onUnexpectedExternalError).then(edits => {\n        return workerService.computeMoreMinimalEdits(model.uri, edits);\n    });\n}\nCommandsRegistry.registerCommand('_executeFormatRangeProvider', function (accessor, ...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [resource, range, options] = args;\n        assertType(URI.isUri(resource));\n        assertType(Range.isIRange(range));\n        const resolverService = accessor.get(ITextModelService);\n        const workerService = accessor.get(IEditorWorkerService);\n        const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n        const reference = yield resolverService.createModelReference(resource);\n        try {\n            return getDocumentRangeFormattingEditsUntilResult(workerService, languageFeaturesService, reference.object.textEditorModel, Range.lift(range), options, CancellationToken.None);\n        }\n        finally {\n            reference.dispose();\n        }\n    });\n});\nCommandsRegistry.registerCommand('_executeFormatDocumentProvider', function (accessor, ...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [resource, options] = args;\n        assertType(URI.isUri(resource));\n        const resolverService = accessor.get(ITextModelService);\n        const workerService = accessor.get(IEditorWorkerService);\n        const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n        const reference = yield resolverService.createModelReference(resource);\n        try {\n            return getDocumentFormattingEditsUntilResult(workerService, languageFeaturesService, reference.object.textEditorModel, options, CancellationToken.None);\n        }\n        finally {\n            reference.dispose();\n        }\n    });\n});\nCommandsRegistry.registerCommand('_executeFormatOnTypeProvider', function (accessor, ...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [resource, position, ch, options] = args;\n        assertType(URI.isUri(resource));\n        assertType(Position.isIPosition(position));\n        assertType(typeof ch === 'string');\n        const resolverService = accessor.get(ITextModelService);\n        const workerService = accessor.get(IEditorWorkerService);\n        const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n        const reference = yield resolverService.createModelReference(resource);\n        try {\n            return getOnTypeFormattingEdits(workerService, languageFeaturesService, reference.object.textEditorModel, Position.lift(position), ch, options, CancellationToken.None);\n        }\n        finally {\n            reference.dispose();\n        }\n    });\n});\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { FoldingRegions } from './foldingRanges.js';\nimport { hash } from '../../../../base/common/hash.js';\nexport class FoldingModel {\n    get regions() { return this._regions; }\n    get textModel() { return this._textModel; }\n    get decorationProvider() { return this._decorationProvider; }\n    constructor(textModel, decorationProvider) {\n        this._updateEventEmitter = new Emitter();\n        this.onDidChange = this._updateEventEmitter.event;\n        this._textModel = textModel;\n        this._decorationProvider = decorationProvider;\n        this._regions = new FoldingRegions(new Uint32Array(0), new Uint32Array(0));\n        this._editorDecorationIds = [];\n    }\n    toggleCollapseState(toggledRegions) {\n        if (!toggledRegions.length) {\n            return;\n        }\n        toggledRegions = toggledRegions.sort((r1, r2) => r1.regionIndex - r2.regionIndex);\n        const processed = {};\n        this._decorationProvider.changeDecorations(accessor => {\n            let k = 0; // index from [0 ... this.regions.length]\n            let dirtyRegionEndLine = -1; // end of the range where decorations need to be updated\n            let lastHiddenLine = -1; // the end of the last hidden lines\n            const updateDecorationsUntil = (index) => {\n                while (k < index) {\n                    const endLineNumber = this._regions.getEndLineNumber(k);\n                    const isCollapsed = this._regions.isCollapsed(k);\n                    if (endLineNumber <= dirtyRegionEndLine) {\n                        const isManual = this.regions.getSource(k) !== 0 /* FoldSource.provider */;\n                        accessor.changeDecorationOptions(this._editorDecorationIds[k], this._decorationProvider.getDecorationOption(isCollapsed, endLineNumber <= lastHiddenLine, isManual));\n                    }\n                    if (isCollapsed && endLineNumber > lastHiddenLine) {\n                        lastHiddenLine = endLineNumber;\n                    }\n                    k++;\n                }\n            };\n            for (const region of toggledRegions) {\n                const index = region.regionIndex;\n                const editorDecorationId = this._editorDecorationIds[index];\n                if (editorDecorationId && !processed[editorDecorationId]) {\n                    processed[editorDecorationId] = true;\n                    updateDecorationsUntil(index); // update all decorations up to current index using the old dirtyRegionEndLine\n                    const newCollapseState = !this._regions.isCollapsed(index);\n                    this._regions.setCollapsed(index, newCollapseState);\n                    dirtyRegionEndLine = Math.max(dirtyRegionEndLine, this._regions.getEndLineNumber(index));\n                }\n            }\n            updateDecorationsUntil(this._regions.length);\n        });\n        this._updateEventEmitter.fire({ model: this, collapseStateChanged: toggledRegions });\n    }\n    removeManualRanges(ranges) {\n        const newFoldingRanges = new Array();\n        const intersects = (foldRange) => {\n            for (const range of ranges) {\n                if (!(range.startLineNumber > foldRange.endLineNumber || foldRange.startLineNumber > range.endLineNumber)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        for (let i = 0; i < this._regions.length; i++) {\n            const foldRange = this._regions.toFoldRange(i);\n            if (foldRange.source === 0 /* FoldSource.provider */ || !intersects(foldRange)) {\n                newFoldingRanges.push(foldRange);\n            }\n        }\n        this.updatePost(FoldingRegions.fromFoldRanges(newFoldingRanges));\n    }\n    update(newRegions, blockedLineNumers = []) {\n        const foldedOrManualRanges = this._currentFoldedOrManualRanges(blockedLineNumers);\n        const newRanges = FoldingRegions.sanitizeAndMerge(newRegions, foldedOrManualRanges, this._textModel.getLineCount());\n        this.updatePost(FoldingRegions.fromFoldRanges(newRanges));\n    }\n    updatePost(newRegions) {\n        const newEditorDecorations = [];\n        let lastHiddenLine = -1;\n        for (let index = 0, limit = newRegions.length; index < limit; index++) {\n            const startLineNumber = newRegions.getStartLineNumber(index);\n            const endLineNumber = newRegions.getEndLineNumber(index);\n            const isCollapsed = newRegions.isCollapsed(index);\n            const isManual = newRegions.getSource(index) !== 0 /* FoldSource.provider */;\n            const decorationRange = {\n                startLineNumber: startLineNumber,\n                startColumn: this._textModel.getLineMaxColumn(startLineNumber),\n                endLineNumber: endLineNumber,\n                endColumn: this._textModel.getLineMaxColumn(endLineNumber) + 1\n            };\n            newEditorDecorations.push({ range: decorationRange, options: this._decorationProvider.getDecorationOption(isCollapsed, endLineNumber <= lastHiddenLine, isManual) });\n            if (isCollapsed && endLineNumber > lastHiddenLine) {\n                lastHiddenLine = endLineNumber;\n            }\n        }\n        this._decorationProvider.changeDecorations(accessor => this._editorDecorationIds = accessor.deltaDecorations(this._editorDecorationIds, newEditorDecorations));\n        this._regions = newRegions;\n        this._updateEventEmitter.fire({ model: this });\n    }\n    _currentFoldedOrManualRanges(blockedLineNumers = []) {\n        const isBlocked = (startLineNumber, endLineNumber) => {\n            for (const blockedLineNumber of blockedLineNumers) {\n                if (startLineNumber < blockedLineNumber && blockedLineNumber <= endLineNumber) { // first line is visible\n                    return true;\n                }\n            }\n            return false;\n        };\n        const foldedRanges = [];\n        for (let i = 0, limit = this._regions.length; i < limit; i++) {\n            let isCollapsed = this.regions.isCollapsed(i);\n            const source = this.regions.getSource(i);\n            if (isCollapsed || source !== 0 /* FoldSource.provider */) {\n                const foldRange = this._regions.toFoldRange(i);\n                const decRange = this._textModel.getDecorationRange(this._editorDecorationIds[i]);\n                if (decRange) {\n                    if (isCollapsed && isBlocked(decRange.startLineNumber, decRange.endLineNumber)) {\n                        isCollapsed = false; // uncollapse is the range is blocked\n                    }\n                    foldedRanges.push({\n                        startLineNumber: decRange.startLineNumber,\n                        endLineNumber: decRange.endLineNumber,\n                        type: foldRange.type,\n                        isCollapsed,\n                        source\n                    });\n                }\n            }\n        }\n        return foldedRanges;\n    }\n    /**\n     * Collapse state memento, for persistence only\n     */\n    getMemento() {\n        const foldedOrManualRanges = this._currentFoldedOrManualRanges();\n        const result = [];\n        const maxLineNumber = this._textModel.getLineCount();\n        for (let i = 0, limit = foldedOrManualRanges.length; i < limit; i++) {\n            const range = foldedOrManualRanges[i];\n            if (range.startLineNumber >= range.endLineNumber || range.startLineNumber < 1 || range.endLineNumber > maxLineNumber) {\n                continue;\n            }\n            const checksum = this._getLinesChecksum(range.startLineNumber + 1, range.endLineNumber);\n            result.push({\n                startLineNumber: range.startLineNumber,\n                endLineNumber: range.endLineNumber,\n                isCollapsed: range.isCollapsed,\n                source: range.source,\n                checksum: checksum\n            });\n        }\n        return (result.length > 0) ? result : undefined;\n    }\n    /**\n     * Apply persisted state, for persistence only\n     */\n    applyMemento(state) {\n        var _a, _b;\n        if (!Array.isArray(state)) {\n            return;\n        }\n        const rangesToRestore = [];\n        const maxLineNumber = this._textModel.getLineCount();\n        for (const range of state) {\n            if (range.startLineNumber >= range.endLineNumber || range.startLineNumber < 1 || range.endLineNumber > maxLineNumber) {\n                continue;\n            }\n            const checksum = this._getLinesChecksum(range.startLineNumber + 1, range.endLineNumber);\n            if (!range.checksum || checksum === range.checksum) {\n                rangesToRestore.push({\n                    startLineNumber: range.startLineNumber,\n                    endLineNumber: range.endLineNumber,\n                    type: undefined,\n                    isCollapsed: (_a = range.isCollapsed) !== null && _a !== void 0 ? _a : true,\n                    source: (_b = range.source) !== null && _b !== void 0 ? _b : 0 /* FoldSource.provider */\n                });\n            }\n        }\n        const newRanges = FoldingRegions.sanitizeAndMerge(this._regions, rangesToRestore, maxLineNumber);\n        this.updatePost(FoldingRegions.fromFoldRanges(newRanges));\n    }\n    _getLinesChecksum(lineNumber1, lineNumber2) {\n        const h = hash(this._textModel.getLineContent(lineNumber1)\n            + this._textModel.getLineContent(lineNumber2));\n        return h % 1000000; // 6 digits is plenty\n    }\n    dispose() {\n        this._decorationProvider.removeDecorations(this._editorDecorationIds);\n    }\n    getAllRegionsAtLine(lineNumber, filter) {\n        const result = [];\n        if (this._regions) {\n            let index = this._regions.findRange(lineNumber);\n            let level = 1;\n            while (index >= 0) {\n                const current = this._regions.toRegion(index);\n                if (!filter || filter(current, level)) {\n                    result.push(current);\n                }\n                level++;\n                index = current.parentIndex;\n            }\n        }\n        return result;\n    }\n    getRegionAtLine(lineNumber) {\n        if (this._regions) {\n            const index = this._regions.findRange(lineNumber);\n            if (index >= 0) {\n                return this._regions.toRegion(index);\n            }\n        }\n        return null;\n    }\n    getRegionsInside(region, filter) {\n        const result = [];\n        const index = region ? region.regionIndex + 1 : 0;\n        const endLineNumber = region ? region.endLineNumber : Number.MAX_VALUE;\n        if (filter && filter.length === 2) {\n            const levelStack = [];\n            for (let i = index, len = this._regions.length; i < len; i++) {\n                const current = this._regions.toRegion(i);\n                if (this._regions.getStartLineNumber(i) < endLineNumber) {\n                    while (levelStack.length > 0 && !current.containedBy(levelStack[levelStack.length - 1])) {\n                        levelStack.pop();\n                    }\n                    levelStack.push(current);\n                    if (filter(current, levelStack.length)) {\n                        result.push(current);\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        else {\n            for (let i = index, len = this._regions.length; i < len; i++) {\n                const current = this._regions.toRegion(i);\n                if (this._regions.getStartLineNumber(i) < endLineNumber) {\n                    if (!filter || filter(current)) {\n                        result.push(current);\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n}\n/**\n * Collapse or expand the regions at the given locations\n * @param levels The number of levels. Use 1 to only impact the regions at the location, use Number.MAX_VALUE for all levels.\n * @param lineNumbers the location of the regions to collapse or expand, or if not set, all regions in the model.\n */\nexport function toggleCollapseState(foldingModel, levels, lineNumbers) {\n    const toToggle = [];\n    for (const lineNumber of lineNumbers) {\n        const region = foldingModel.getRegionAtLine(lineNumber);\n        if (region) {\n            const doCollapse = !region.isCollapsed;\n            toToggle.push(region);\n            if (levels > 1) {\n                const regionsInside = foldingModel.getRegionsInside(region, (r, level) => r.isCollapsed !== doCollapse && level < levels);\n                toToggle.push(...regionsInside);\n            }\n        }\n    }\n    foldingModel.toggleCollapseState(toToggle);\n}\n/**\n * Collapse or expand the regions at the given locations including all children.\n * @param doCollapse Whether to collapse or expand\n * @param levels The number of levels. Use 1 to only impact the regions at the location, use Number.MAX_VALUE for all levels.\n * @param lineNumbers the location of the regions to collapse or expand, or if not set, all regions in the model.\n */\nexport function setCollapseStateLevelsDown(foldingModel, doCollapse, levels = Number.MAX_VALUE, lineNumbers) {\n    const toToggle = [];\n    if (lineNumbers && lineNumbers.length > 0) {\n        for (const lineNumber of lineNumbers) {\n            const region = foldingModel.getRegionAtLine(lineNumber);\n            if (region) {\n                if (region.isCollapsed !== doCollapse) {\n                    toToggle.push(region);\n                }\n                if (levels > 1) {\n                    const regionsInside = foldingModel.getRegionsInside(region, (r, level) => r.isCollapsed !== doCollapse && level < levels);\n                    toToggle.push(...regionsInside);\n                }\n            }\n        }\n    }\n    else {\n        const regionsInside = foldingModel.getRegionsInside(null, (r, level) => r.isCollapsed !== doCollapse && level < levels);\n        toToggle.push(...regionsInside);\n    }\n    foldingModel.toggleCollapseState(toToggle);\n}\n/**\n * Collapse or expand the regions at the given locations including all parents.\n * @param doCollapse Whether to collapse or expand\n * @param levels The number of levels. Use 1 to only impact the regions at the location, use Number.MAX_VALUE for all levels.\n * @param lineNumbers the location of the regions to collapse or expand.\n */\nexport function setCollapseStateLevelsUp(foldingModel, doCollapse, levels, lineNumbers) {\n    const toToggle = [];\n    for (const lineNumber of lineNumbers) {\n        const regions = foldingModel.getAllRegionsAtLine(lineNumber, (region, level) => region.isCollapsed !== doCollapse && level <= levels);\n        toToggle.push(...regions);\n    }\n    foldingModel.toggleCollapseState(toToggle);\n}\n/**\n * Collapse or expand a region at the given locations. If the inner most region is already collapsed/expanded, uses the first parent instead.\n * @param doCollapse Whether to collapse or expand\n * @param lineNumbers the location of the regions to collapse or expand.\n */\nexport function setCollapseStateUp(foldingModel, doCollapse, lineNumbers) {\n    const toToggle = [];\n    for (const lineNumber of lineNumbers) {\n        const regions = foldingModel.getAllRegionsAtLine(lineNumber, (region) => region.isCollapsed !== doCollapse);\n        if (regions.length > 0) {\n            toToggle.push(regions[0]);\n        }\n    }\n    foldingModel.toggleCollapseState(toToggle);\n}\n/**\n * Folds or unfolds all regions that have a given level, except if they contain one of the blocked lines.\n * @param foldLevel level. Level == 1 is the top level\n * @param doCollapse Whether to collapse or expand\n*/\nexport function setCollapseStateAtLevel(foldingModel, foldLevel, doCollapse, blockedLineNumbers) {\n    const filter = (region, level) => level === foldLevel && region.isCollapsed !== doCollapse && !blockedLineNumbers.some(line => region.containsLine(line));\n    const toToggle = foldingModel.getRegionsInside(null, filter);\n    foldingModel.toggleCollapseState(toToggle);\n}\n/**\n * Folds or unfolds all regions, except if they contain or are contained by a region of one of the blocked lines.\n * @param doCollapse Whether to collapse or expand\n * @param blockedLineNumbers the location of regions to not collapse or expand\n */\nexport function setCollapseStateForRest(foldingModel, doCollapse, blockedLineNumbers) {\n    const filteredRegions = [];\n    for (const lineNumber of blockedLineNumbers) {\n        const regions = foldingModel.getAllRegionsAtLine(lineNumber, undefined);\n        if (regions.length > 0) {\n            filteredRegions.push(regions[0]);\n        }\n    }\n    const filter = (region) => filteredRegions.every((filteredRegion) => !filteredRegion.containedBy(region) && !region.containedBy(filteredRegion)) && region.isCollapsed !== doCollapse;\n    const toToggle = foldingModel.getRegionsInside(null, filter);\n    foldingModel.toggleCollapseState(toToggle);\n}\n/**\n * Folds all regions for which the lines start with a given regex\n * @param foldingModel the folding model\n */\nexport function setCollapseStateForMatchingLines(foldingModel, regExp, doCollapse) {\n    const editorModel = foldingModel.textModel;\n    const regions = foldingModel.regions;\n    const toToggle = [];\n    for (let i = regions.length - 1; i >= 0; i--) {\n        if (doCollapse !== regions.isCollapsed(i)) {\n            const startLineNumber = regions.getStartLineNumber(i);\n            if (regExp.test(editorModel.getLineContent(startLineNumber))) {\n                toToggle.push(regions.toRegion(i));\n            }\n        }\n    }\n    foldingModel.toggleCollapseState(toToggle);\n}\n/**\n * Folds all regions of the given type\n * @param foldingModel the folding model\n */\nexport function setCollapseStateForType(foldingModel, type, doCollapse) {\n    const regions = foldingModel.regions;\n    const toToggle = [];\n    for (let i = regions.length - 1; i >= 0; i--) {\n        if (doCollapse !== regions.isCollapsed(i) && type === regions.getType(i)) {\n            toToggle.push(regions.toRegion(i));\n        }\n    }\n    foldingModel.toggleCollapseState(toToggle);\n}\n/**\n * Get line to go to for parent fold of current line\n * @param lineNumber the current line number\n * @param foldingModel the folding model\n *\n * @return Parent fold start line\n */\nexport function getParentFoldLine(lineNumber, foldingModel) {\n    let startLineNumber = null;\n    const foldingRegion = foldingModel.getRegionAtLine(lineNumber);\n    if (foldingRegion !== null) {\n        startLineNumber = foldingRegion.startLineNumber;\n        // If current line is not the start of the current fold, go to top line of current fold. If not, go to parent fold\n        if (lineNumber === startLineNumber) {\n            const parentFoldingIdx = foldingRegion.parentIndex;\n            if (parentFoldingIdx !== -1) {\n                startLineNumber = foldingModel.regions.getStartLineNumber(parentFoldingIdx);\n            }\n            else {\n                startLineNumber = null;\n            }\n        }\n    }\n    return startLineNumber;\n}\n/**\n * Get line to go to for previous fold at the same level of current line\n * @param lineNumber the current line number\n * @param foldingModel the folding model\n *\n * @return Previous fold start line\n */\nexport function getPreviousFoldLine(lineNumber, foldingModel) {\n    let foldingRegion = foldingModel.getRegionAtLine(lineNumber);\n    // If on the folding range start line, go to previous sibling.\n    if (foldingRegion !== null && foldingRegion.startLineNumber === lineNumber) {\n        // If current line is not the start of the current fold, go to top line of current fold. If not, go to previous fold.\n        if (lineNumber !== foldingRegion.startLineNumber) {\n            return foldingRegion.startLineNumber;\n        }\n        else {\n            // Find min line number to stay within parent.\n            const expectedParentIndex = foldingRegion.parentIndex;\n            let minLineNumber = 0;\n            if (expectedParentIndex !== -1) {\n                minLineNumber = foldingModel.regions.getStartLineNumber(foldingRegion.parentIndex);\n            }\n            // Find fold at same level.\n            while (foldingRegion !== null) {\n                if (foldingRegion.regionIndex > 0) {\n                    foldingRegion = foldingModel.regions.toRegion(foldingRegion.regionIndex - 1);\n                    // Keep at same level.\n                    if (foldingRegion.startLineNumber <= minLineNumber) {\n                        return null;\n                    }\n                    else if (foldingRegion.parentIndex === expectedParentIndex) {\n                        return foldingRegion.startLineNumber;\n                    }\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n    }\n    else {\n        // Go to last fold that's before the current line.\n        if (foldingModel.regions.length > 0) {\n            foldingRegion = foldingModel.regions.toRegion(foldingModel.regions.length - 1);\n            while (foldingRegion !== null) {\n                // Found fold before current line.\n                if (foldingRegion.startLineNumber < lineNumber) {\n                    return foldingRegion.startLineNumber;\n                }\n                if (foldingRegion.regionIndex > 0) {\n                    foldingRegion = foldingModel.regions.toRegion(foldingRegion.regionIndex - 1);\n                }\n                else {\n                    foldingRegion = null;\n                }\n            }\n        }\n    }\n    return null;\n}\n/**\n * Get line to go to next fold at the same level of current line\n * @param lineNumber the current line number\n * @param foldingModel the folding model\n *\n * @return Next fold start line\n */\nexport function getNextFoldLine(lineNumber, foldingModel) {\n    let foldingRegion = foldingModel.getRegionAtLine(lineNumber);\n    // If on the folding range start line, go to next sibling.\n    if (foldingRegion !== null && foldingRegion.startLineNumber === lineNumber) {\n        // Find max line number to stay within parent.\n        const expectedParentIndex = foldingRegion.parentIndex;\n        let maxLineNumber = 0;\n        if (expectedParentIndex !== -1) {\n            maxLineNumber = foldingModel.regions.getEndLineNumber(foldingRegion.parentIndex);\n        }\n        else if (foldingModel.regions.length === 0) {\n            return null;\n        }\n        else {\n            maxLineNumber = foldingModel.regions.getEndLineNumber(foldingModel.regions.length - 1);\n        }\n        // Find fold at same level.\n        while (foldingRegion !== null) {\n            if (foldingRegion.regionIndex < foldingModel.regions.length) {\n                foldingRegion = foldingModel.regions.toRegion(foldingRegion.regionIndex + 1);\n                // Keep at same level.\n                if (foldingRegion.startLineNumber >= maxLineNumber) {\n                    return null;\n                }\n                else if (foldingRegion.parentIndex === expectedParentIndex) {\n                    return foldingRegion.startLineNumber;\n                }\n            }\n            else {\n                return null;\n            }\n        }\n    }\n    else {\n        // Go to first fold that's after the current line.\n        if (foldingModel.regions.length > 0) {\n            foldingRegion = foldingModel.regions.toRegion(0);\n            while (foldingRegion !== null) {\n                // Found fold after current line.\n                if (foldingRegion.startLineNumber > lineNumber) {\n                    return foldingRegion.startLineNumber;\n                }\n                if (foldingRegion.regionIndex < foldingModel.regions.length) {\n                    foldingRegion = foldingModel.regions.toRegion(foldingRegion.regionIndex + 1);\n                }\n                else {\n                    foldingRegion = null;\n                }\n            }\n        }\n    }\n    return null;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const foldSourceAbbr = {\n    [0 /* FoldSource.provider */]: ' ',\n    [1 /* FoldSource.userDefined */]: 'u',\n    [2 /* FoldSource.recovered */]: 'r',\n};\nexport const MAX_FOLDING_REGIONS = 0xFFFF;\nexport const MAX_LINE_NUMBER = 0xFFFFFF;\nconst MASK_INDENT = 0xFF000000;\nclass BitField {\n    constructor(size) {\n        const numWords = Math.ceil(size / 32);\n        this._states = new Uint32Array(numWords);\n    }\n    get(index) {\n        const arrayIndex = (index / 32) | 0;\n        const bit = index % 32;\n        return (this._states[arrayIndex] & (1 << bit)) !== 0;\n    }\n    set(index, newState) {\n        const arrayIndex = (index / 32) | 0;\n        const bit = index % 32;\n        const value = this._states[arrayIndex];\n        if (newState) {\n            this._states[arrayIndex] = value | (1 << bit);\n        }\n        else {\n            this._states[arrayIndex] = value & ~(1 << bit);\n        }\n    }\n}\nexport class FoldingRegions {\n    constructor(startIndexes, endIndexes, types) {\n        if (startIndexes.length !== endIndexes.length || startIndexes.length > MAX_FOLDING_REGIONS) {\n            throw new Error('invalid startIndexes or endIndexes size');\n        }\n        this._startIndexes = startIndexes;\n        this._endIndexes = endIndexes;\n        this._collapseStates = new BitField(startIndexes.length);\n        this._userDefinedStates = new BitField(startIndexes.length);\n        this._recoveredStates = new BitField(startIndexes.length);\n        this._types = types;\n        this._parentsComputed = false;\n    }\n    ensureParentIndices() {\n        if (!this._parentsComputed) {\n            this._parentsComputed = true;\n            const parentIndexes = [];\n            const isInsideLast = (startLineNumber, endLineNumber) => {\n                const index = parentIndexes[parentIndexes.length - 1];\n                return this.getStartLineNumber(index) <= startLineNumber && this.getEndLineNumber(index) >= endLineNumber;\n            };\n            for (let i = 0, len = this._startIndexes.length; i < len; i++) {\n                const startLineNumber = this._startIndexes[i];\n                const endLineNumber = this._endIndexes[i];\n                if (startLineNumber > MAX_LINE_NUMBER || endLineNumber > MAX_LINE_NUMBER) {\n                    throw new Error('startLineNumber or endLineNumber must not exceed ' + MAX_LINE_NUMBER);\n                }\n                while (parentIndexes.length > 0 && !isInsideLast(startLineNumber, endLineNumber)) {\n                    parentIndexes.pop();\n                }\n                const parentIndex = parentIndexes.length > 0 ? parentIndexes[parentIndexes.length - 1] : -1;\n                parentIndexes.push(i);\n                this._startIndexes[i] = startLineNumber + ((parentIndex & 0xFF) << 24);\n                this._endIndexes[i] = endLineNumber + ((parentIndex & 0xFF00) << 16);\n            }\n        }\n    }\n    get length() {\n        return this._startIndexes.length;\n    }\n    getStartLineNumber(index) {\n        return this._startIndexes[index] & MAX_LINE_NUMBER;\n    }\n    getEndLineNumber(index) {\n        return this._endIndexes[index] & MAX_LINE_NUMBER;\n    }\n    getType(index) {\n        return this._types ? this._types[index] : undefined;\n    }\n    hasTypes() {\n        return !!this._types;\n    }\n    isCollapsed(index) {\n        return this._collapseStates.get(index);\n    }\n    setCollapsed(index, newState) {\n        this._collapseStates.set(index, newState);\n    }\n    isUserDefined(index) {\n        return this._userDefinedStates.get(index);\n    }\n    setUserDefined(index, newState) {\n        return this._userDefinedStates.set(index, newState);\n    }\n    isRecovered(index) {\n        return this._recoveredStates.get(index);\n    }\n    setRecovered(index, newState) {\n        return this._recoveredStates.set(index, newState);\n    }\n    getSource(index) {\n        if (this.isUserDefined(index)) {\n            return 1 /* FoldSource.userDefined */;\n        }\n        else if (this.isRecovered(index)) {\n            return 2 /* FoldSource.recovered */;\n        }\n        return 0 /* FoldSource.provider */;\n    }\n    setSource(index, source) {\n        if (source === 1 /* FoldSource.userDefined */) {\n            this.setUserDefined(index, true);\n            this.setRecovered(index, false);\n        }\n        else if (source === 2 /* FoldSource.recovered */) {\n            this.setUserDefined(index, false);\n            this.setRecovered(index, true);\n        }\n        else {\n            this.setUserDefined(index, false);\n            this.setRecovered(index, false);\n        }\n    }\n    setCollapsedAllOfType(type, newState) {\n        let hasChanged = false;\n        if (this._types) {\n            for (let i = 0; i < this._types.length; i++) {\n                if (this._types[i] === type) {\n                    this.setCollapsed(i, newState);\n                    hasChanged = true;\n                }\n            }\n        }\n        return hasChanged;\n    }\n    toRegion(index) {\n        return new FoldingRegion(this, index);\n    }\n    getParentIndex(index) {\n        this.ensureParentIndices();\n        const parent = ((this._startIndexes[index] & MASK_INDENT) >>> 24) + ((this._endIndexes[index] & MASK_INDENT) >>> 16);\n        if (parent === MAX_FOLDING_REGIONS) {\n            return -1;\n        }\n        return parent;\n    }\n    contains(index, line) {\n        return this.getStartLineNumber(index) <= line && this.getEndLineNumber(index) >= line;\n    }\n    findIndex(line) {\n        let low = 0, high = this._startIndexes.length;\n        if (high === 0) {\n            return -1; // no children\n        }\n        while (low < high) {\n            const mid = Math.floor((low + high) / 2);\n            if (line < this.getStartLineNumber(mid)) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        return low - 1;\n    }\n    findRange(line) {\n        let index = this.findIndex(line);\n        if (index >= 0) {\n            const endLineNumber = this.getEndLineNumber(index);\n            if (endLineNumber >= line) {\n                return index;\n            }\n            index = this.getParentIndex(index);\n            while (index !== -1) {\n                if (this.contains(index, line)) {\n                    return index;\n                }\n                index = this.getParentIndex(index);\n            }\n        }\n        return -1;\n    }\n    toString() {\n        const res = [];\n        for (let i = 0; i < this.length; i++) {\n            res[i] = `[${foldSourceAbbr[this.getSource(i)]}${this.isCollapsed(i) ? '+' : '-'}] ${this.getStartLineNumber(i)}/${this.getEndLineNumber(i)}`;\n        }\n        return res.join(', ');\n    }\n    toFoldRange(index) {\n        return {\n            startLineNumber: this._startIndexes[index] & MAX_LINE_NUMBER,\n            endLineNumber: this._endIndexes[index] & MAX_LINE_NUMBER,\n            type: this._types ? this._types[index] : undefined,\n            isCollapsed: this.isCollapsed(index),\n            source: this.getSource(index)\n        };\n    }\n    static fromFoldRanges(ranges) {\n        const rangesLength = ranges.length;\n        const startIndexes = new Uint32Array(rangesLength);\n        const endIndexes = new Uint32Array(rangesLength);\n        let types = [];\n        let gotTypes = false;\n        for (let i = 0; i < rangesLength; i++) {\n            const range = ranges[i];\n            startIndexes[i] = range.startLineNumber;\n            endIndexes[i] = range.endLineNumber;\n            types.push(range.type);\n            if (range.type) {\n                gotTypes = true;\n            }\n        }\n        if (!gotTypes) {\n            types = undefined;\n        }\n        const regions = new FoldingRegions(startIndexes, endIndexes, types);\n        for (let i = 0; i < rangesLength; i++) {\n            if (ranges[i].isCollapsed) {\n                regions.setCollapsed(i, true);\n            }\n            regions.setSource(i, ranges[i].source);\n        }\n        return regions;\n    }\n    /**\n     * Two inputs, each a FoldingRegions or a FoldRange[], are merged.\n     * Each input must be pre-sorted on startLineNumber.\n     * The first list is assumed to always include all regions currently defined by range providers.\n     * The second list only contains the previously collapsed and all manual ranges.\n     * If the line position matches, the range of the new range is taken, and the range is no longer manual\n     * When an entry in one list overlaps an entry in the other, the second list's entry \"wins\" and\n     * overlapping entries in the first list are discarded.\n     * Invalid entries are discarded. An entry is invalid if:\n     * \t\tthe start and end line numbers aren't a valid range of line numbers,\n     * \t\tit is out of sequence or has the same start line as a preceding entry,\n     * \t\tit overlaps a preceding entry and is not fully contained by that entry.\n     */\n    static sanitizeAndMerge(rangesA, rangesB, maxLineNumber) {\n        maxLineNumber = maxLineNumber !== null && maxLineNumber !== void 0 ? maxLineNumber : Number.MAX_VALUE;\n        const getIndexedFunction = (r, limit) => {\n            return Array.isArray(r)\n                ? ((i) => { return (i < limit) ? r[i] : undefined; })\n                : ((i) => { return (i < limit) ? r.toFoldRange(i) : undefined; });\n        };\n        const getA = getIndexedFunction(rangesA, rangesA.length);\n        const getB = getIndexedFunction(rangesB, rangesB.length);\n        let indexA = 0;\n        let indexB = 0;\n        let nextA = getA(0);\n        let nextB = getB(0);\n        const stackedRanges = [];\n        let topStackedRange;\n        let prevLineNumber = 0;\n        const resultRanges = [];\n        while (nextA || nextB) {\n            let useRange = undefined;\n            if (nextB && (!nextA || nextA.startLineNumber >= nextB.startLineNumber)) {\n                if (nextA && nextA.startLineNumber === nextB.startLineNumber) {\n                    if (nextB.source === 1 /* FoldSource.userDefined */) {\n                        // a user defined range (possibly unfolded)\n                        useRange = nextB;\n                    }\n                    else {\n                        // a previously folded range or a (possibly unfolded) recovered range\n                        useRange = nextA;\n                        useRange.isCollapsed = nextB.isCollapsed && nextA.endLineNumber === nextB.endLineNumber;\n                        useRange.source = 0 /* FoldSource.provider */;\n                    }\n                    nextA = getA(++indexA); // not necessary, just for speed\n                }\n                else {\n                    useRange = nextB;\n                    if (nextB.isCollapsed && nextB.source === 0 /* FoldSource.provider */) {\n                        // a previously collapsed range\n                        useRange.source = 2 /* FoldSource.recovered */;\n                    }\n                }\n                nextB = getB(++indexB);\n            }\n            else {\n                // nextA is next. The user folded B set takes precedence and we sometimes need to look\n                // ahead in it to check for an upcoming conflict.\n                let scanIndex = indexB;\n                let prescanB = nextB;\n                while (true) {\n                    if (!prescanB || prescanB.startLineNumber > nextA.endLineNumber) {\n                        useRange = nextA;\n                        break; // no conflict, use this nextA\n                    }\n                    if (prescanB.source === 1 /* FoldSource.userDefined */ && prescanB.endLineNumber > nextA.endLineNumber) {\n                        // we found a user folded range, it wins\n                        break; // without setting nextResult, so this nextA gets skipped\n                    }\n                    prescanB = getB(++scanIndex);\n                }\n                nextA = getA(++indexA);\n            }\n            if (useRange) {\n                while (topStackedRange\n                    && topStackedRange.endLineNumber < useRange.startLineNumber) {\n                    topStackedRange = stackedRanges.pop();\n                }\n                if (useRange.endLineNumber > useRange.startLineNumber\n                    && useRange.startLineNumber > prevLineNumber\n                    && useRange.endLineNumber <= maxLineNumber\n                    && (!topStackedRange\n                        || topStackedRange.endLineNumber >= useRange.endLineNumber)) {\n                    resultRanges.push(useRange);\n                    prevLineNumber = useRange.startLineNumber;\n                    if (topStackedRange) {\n                        stackedRanges.push(topStackedRange);\n                    }\n                    topStackedRange = useRange;\n                }\n            }\n        }\n        return resultRanges;\n    }\n}\nexport class FoldingRegion {\n    constructor(ranges, index) {\n        this.ranges = ranges;\n        this.index = index;\n    }\n    get startLineNumber() {\n        return this.ranges.getStartLineNumber(this.index);\n    }\n    get endLineNumber() {\n        return this.ranges.getEndLineNumber(this.index);\n    }\n    get regionIndex() {\n        return this.index;\n    }\n    get parentIndex() {\n        return this.ranges.getParentIndex(this.index);\n    }\n    get isCollapsed() {\n        return this.ranges.isCollapsed(this.index);\n    }\n    containedBy(range) {\n        return range.startLineNumber <= this.startLineNumber && range.endLineNumber >= this.endLineNumber;\n    }\n    containsLine(lineNumber) {\n        return this.startLineNumber <= lineNumber && lineNumber <= this.endLineNumber;\n    }\n    hidesLine(lineNumber) {\n        return this.startLineNumber < lineNumber && lineNumber <= this.endLineNumber;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar FoldingController_1;\nimport { createCancelablePromise, Delayer, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { illegalArgument, onUnexpectedError } from '../../../../base/common/errors.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { escapeRegExpCharacters } from '../../../../base/common/strings.js';\nimport * as types from '../../../../base/common/types.js';\nimport './folding.css';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution, registerInstantiatedEditorAction } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { FoldingRangeKind } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { FoldingModel, getNextFoldLine, getParentFoldLine as getParentFoldLine, getPreviousFoldLine, setCollapseStateAtLevel, setCollapseStateForMatchingLines, setCollapseStateForRest, setCollapseStateForType, setCollapseStateLevelsDown, setCollapseStateLevelsUp, setCollapseStateUp, toggleCollapseState } from './foldingModel.js';\nimport { HiddenRangeModel } from './hiddenRangeModel.js';\nimport { IndentRangeProvider } from './indentRangeProvider.js';\nimport * as nls from '../../../../nls.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { FoldingDecorationProvider } from './foldingDecorations.js';\nimport { FoldingRegions } from './foldingRanges.js';\nimport { SyntaxRangeProvider } from './syntaxRangeProvider.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nconst CONTEXT_FOLDING_ENABLED = new RawContextKey('foldingEnabled', false);\nlet FoldingController = FoldingController_1 = class FoldingController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(FoldingController_1.ID);\n    }\n    static getFoldingRangeProviders(languageFeaturesService, model) {\n        var _a, _b;\n        const foldingRangeProviders = languageFeaturesService.foldingRangeProvider.ordered(model);\n        return (_b = ((_a = FoldingController_1._foldingRangeSelector) === null || _a === void 0 ? void 0 : _a.call(FoldingController_1, foldingRangeProviders, model))) !== null && _b !== void 0 ? _b : foldingRangeProviders;\n    }\n    static setFoldingRangeProviderSelector(foldingRangeSelector) {\n        FoldingController_1._foldingRangeSelector = foldingRangeSelector;\n        return { dispose: () => { FoldingController_1._foldingRangeSelector = undefined; } };\n    }\n    constructor(editor, contextKeyService, languageConfigurationService, notificationService, languageFeatureDebounceService, languageFeaturesService) {\n        super();\n        this.contextKeyService = contextKeyService;\n        this.languageConfigurationService = languageConfigurationService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.localToDispose = this._register(new DisposableStore());\n        this.editor = editor;\n        this._foldingLimitReporter = new RangesLimitReporter(editor);\n        const options = this.editor.getOptions();\n        this._isEnabled = options.get(42 /* EditorOption.folding */);\n        this._useFoldingProviders = options.get(43 /* EditorOption.foldingStrategy */) !== 'indentation';\n        this._unfoldOnClickAfterEndOfLine = options.get(47 /* EditorOption.unfoldOnClickAfterEndOfLine */);\n        this._restoringViewState = false;\n        this._currentModelHasFoldedImports = false;\n        this._foldingImportsByDefault = options.get(45 /* EditorOption.foldingImportsByDefault */);\n        this.updateDebounceInfo = languageFeatureDebounceService.for(languageFeaturesService.foldingRangeProvider, 'Folding', { min: 200 });\n        this.foldingModel = null;\n        this.hiddenRangeModel = null;\n        this.rangeProvider = null;\n        this.foldingRegionPromise = null;\n        this.foldingModelPromise = null;\n        this.updateScheduler = null;\n        this.cursorChangedScheduler = null;\n        this.mouseDownInfo = null;\n        this.foldingDecorationProvider = new FoldingDecorationProvider(editor);\n        this.foldingDecorationProvider.showFoldingControls = options.get(108 /* EditorOption.showFoldingControls */);\n        this.foldingDecorationProvider.showFoldingHighlights = options.get(44 /* EditorOption.foldingHighlight */);\n        this.foldingEnabled = CONTEXT_FOLDING_ENABLED.bindTo(this.contextKeyService);\n        this.foldingEnabled.set(this._isEnabled);\n        this._register(this.editor.onDidChangeModel(() => this.onModelChanged()));\n        this._register(this.editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(42 /* EditorOption.folding */)) {\n                this._isEnabled = this.editor.getOptions().get(42 /* EditorOption.folding */);\n                this.foldingEnabled.set(this._isEnabled);\n                this.onModelChanged();\n            }\n            if (e.hasChanged(46 /* EditorOption.foldingMaximumRegions */)) {\n                this.onModelChanged();\n            }\n            if (e.hasChanged(108 /* EditorOption.showFoldingControls */) || e.hasChanged(44 /* EditorOption.foldingHighlight */)) {\n                const options = this.editor.getOptions();\n                this.foldingDecorationProvider.showFoldingControls = options.get(108 /* EditorOption.showFoldingControls */);\n                this.foldingDecorationProvider.showFoldingHighlights = options.get(44 /* EditorOption.foldingHighlight */);\n                this.triggerFoldingModelChanged();\n            }\n            if (e.hasChanged(43 /* EditorOption.foldingStrategy */)) {\n                this._useFoldingProviders = this.editor.getOptions().get(43 /* EditorOption.foldingStrategy */) !== 'indentation';\n                this.onFoldingStrategyChanged();\n            }\n            if (e.hasChanged(47 /* EditorOption.unfoldOnClickAfterEndOfLine */)) {\n                this._unfoldOnClickAfterEndOfLine = this.editor.getOptions().get(47 /* EditorOption.unfoldOnClickAfterEndOfLine */);\n            }\n            if (e.hasChanged(45 /* EditorOption.foldingImportsByDefault */)) {\n                this._foldingImportsByDefault = this.editor.getOptions().get(45 /* EditorOption.foldingImportsByDefault */);\n            }\n        }));\n        this.onModelChanged();\n    }\n    get limitReporter() {\n        return this._foldingLimitReporter;\n    }\n    /**\n     * Store view state.\n     */\n    saveViewState() {\n        const model = this.editor.getModel();\n        if (!model || !this._isEnabled || model.isTooLargeForTokenization()) {\n            return {};\n        }\n        if (this.foldingModel) { // disposed ?\n            const collapsedRegions = this.foldingModel.getMemento();\n            const provider = this.rangeProvider ? this.rangeProvider.id : undefined;\n            return { collapsedRegions, lineCount: model.getLineCount(), provider, foldedImports: this._currentModelHasFoldedImports };\n        }\n        return undefined;\n    }\n    /**\n     * Restore view state.\n     */\n    restoreViewState(state) {\n        const model = this.editor.getModel();\n        if (!model || !this._isEnabled || model.isTooLargeForTokenization() || !this.hiddenRangeModel) {\n            return;\n        }\n        if (!state) {\n            return;\n        }\n        this._currentModelHasFoldedImports = !!state.foldedImports;\n        if (state.collapsedRegions && state.collapsedRegions.length > 0 && this.foldingModel) {\n            this._restoringViewState = true;\n            try {\n                this.foldingModel.applyMemento(state.collapsedRegions);\n            }\n            finally {\n                this._restoringViewState = false;\n            }\n        }\n    }\n    onModelChanged() {\n        this.localToDispose.clear();\n        const model = this.editor.getModel();\n        if (!this._isEnabled || !model || model.isTooLargeForTokenization()) {\n            // huge files get no view model, so they cannot support hidden areas\n            return;\n        }\n        this._currentModelHasFoldedImports = false;\n        this.foldingModel = new FoldingModel(model, this.foldingDecorationProvider);\n        this.localToDispose.add(this.foldingModel);\n        this.hiddenRangeModel = new HiddenRangeModel(this.foldingModel);\n        this.localToDispose.add(this.hiddenRangeModel);\n        this.localToDispose.add(this.hiddenRangeModel.onDidChange(hr => this.onHiddenRangesChanges(hr)));\n        this.updateScheduler = new Delayer(this.updateDebounceInfo.get(model));\n        this.cursorChangedScheduler = new RunOnceScheduler(() => this.revealCursor(), 200);\n        this.localToDispose.add(this.cursorChangedScheduler);\n        this.localToDispose.add(this.languageFeaturesService.foldingRangeProvider.onDidChange(() => this.onFoldingStrategyChanged()));\n        this.localToDispose.add(this.editor.onDidChangeModelLanguageConfiguration(() => this.onFoldingStrategyChanged())); // covers model language changes as well\n        this.localToDispose.add(this.editor.onDidChangeModelContent(e => this.onDidChangeModelContent(e)));\n        this.localToDispose.add(this.editor.onDidChangeCursorPosition(() => this.onCursorPositionChanged()));\n        this.localToDispose.add(this.editor.onMouseDown(e => this.onEditorMouseDown(e)));\n        this.localToDispose.add(this.editor.onMouseUp(e => this.onEditorMouseUp(e)));\n        this.localToDispose.add({\n            dispose: () => {\n                var _a, _b;\n                if (this.foldingRegionPromise) {\n                    this.foldingRegionPromise.cancel();\n                    this.foldingRegionPromise = null;\n                }\n                (_a = this.updateScheduler) === null || _a === void 0 ? void 0 : _a.cancel();\n                this.updateScheduler = null;\n                this.foldingModel = null;\n                this.foldingModelPromise = null;\n                this.hiddenRangeModel = null;\n                this.cursorChangedScheduler = null;\n                (_b = this.rangeProvider) === null || _b === void 0 ? void 0 : _b.dispose();\n                this.rangeProvider = null;\n            }\n        });\n        this.triggerFoldingModelChanged();\n    }\n    onFoldingStrategyChanged() {\n        var _a;\n        (_a = this.rangeProvider) === null || _a === void 0 ? void 0 : _a.dispose();\n        this.rangeProvider = null;\n        this.triggerFoldingModelChanged();\n    }\n    getRangeProvider(editorModel) {\n        if (this.rangeProvider) {\n            return this.rangeProvider;\n        }\n        const indentRangeProvider = new IndentRangeProvider(editorModel, this.languageConfigurationService, this._foldingLimitReporter);\n        this.rangeProvider = indentRangeProvider; // fallback\n        if (this._useFoldingProviders && this.foldingModel) {\n            const selectedProviders = FoldingController_1.getFoldingRangeProviders(this.languageFeaturesService, editorModel);\n            if (selectedProviders.length > 0) {\n                this.rangeProvider = new SyntaxRangeProvider(editorModel, selectedProviders, () => this.triggerFoldingModelChanged(), this._foldingLimitReporter, indentRangeProvider);\n            }\n        }\n        return this.rangeProvider;\n    }\n    getFoldingModel() {\n        return this.foldingModelPromise;\n    }\n    onDidChangeModelContent(e) {\n        var _a;\n        (_a = this.hiddenRangeModel) === null || _a === void 0 ? void 0 : _a.notifyChangeModelContent(e);\n        this.triggerFoldingModelChanged();\n    }\n    triggerFoldingModelChanged() {\n        if (this.updateScheduler) {\n            if (this.foldingRegionPromise) {\n                this.foldingRegionPromise.cancel();\n                this.foldingRegionPromise = null;\n            }\n            this.foldingModelPromise = this.updateScheduler.trigger(() => {\n                const foldingModel = this.foldingModel;\n                if (!foldingModel) { // null if editor has been disposed, or folding turned off\n                    return null;\n                }\n                const sw = new StopWatch();\n                const provider = this.getRangeProvider(foldingModel.textModel);\n                const foldingRegionPromise = this.foldingRegionPromise = createCancelablePromise(token => provider.compute(token));\n                return foldingRegionPromise.then(foldingRanges => {\n                    if (foldingRanges && foldingRegionPromise === this.foldingRegionPromise) { // new request or cancelled in the meantime?\n                        let scrollState;\n                        if (this._foldingImportsByDefault && !this._currentModelHasFoldedImports) {\n                            const hasChanges = foldingRanges.setCollapsedAllOfType(FoldingRangeKind.Imports.value, true);\n                            if (hasChanges) {\n                                scrollState = StableEditorScrollState.capture(this.editor);\n                                this._currentModelHasFoldedImports = hasChanges;\n                            }\n                        }\n                        // some cursors might have moved into hidden regions, make sure they are in expanded regions\n                        const selections = this.editor.getSelections();\n                        const selectionLineNumbers = selections ? selections.map(s => s.startLineNumber) : [];\n                        foldingModel.update(foldingRanges, selectionLineNumbers);\n                        scrollState === null || scrollState === void 0 ? void 0 : scrollState.restore(this.editor);\n                        // update debounce info\n                        const newValue = this.updateDebounceInfo.update(foldingModel.textModel, sw.elapsed());\n                        if (this.updateScheduler) {\n                            this.updateScheduler.defaultDelay = newValue;\n                        }\n                    }\n                    return foldingModel;\n                });\n            }).then(undefined, (err) => {\n                onUnexpectedError(err);\n                return null;\n            });\n        }\n    }\n    onHiddenRangesChanges(hiddenRanges) {\n        if (this.hiddenRangeModel && hiddenRanges.length && !this._restoringViewState) {\n            const selections = this.editor.getSelections();\n            if (selections) {\n                if (this.hiddenRangeModel.adjustSelections(selections)) {\n                    this.editor.setSelections(selections);\n                }\n            }\n        }\n        this.editor.setHiddenAreas(hiddenRanges, this);\n    }\n    onCursorPositionChanged() {\n        if (this.hiddenRangeModel && this.hiddenRangeModel.hasRanges()) {\n            this.cursorChangedScheduler.schedule();\n        }\n    }\n    revealCursor() {\n        const foldingModel = this.getFoldingModel();\n        if (!foldingModel) {\n            return;\n        }\n        foldingModel.then(foldingModel => {\n            if (foldingModel) {\n                const selections = this.editor.getSelections();\n                if (selections && selections.length > 0) {\n                    const toToggle = [];\n                    for (const selection of selections) {\n                        const lineNumber = selection.selectionStartLineNumber;\n                        if (this.hiddenRangeModel && this.hiddenRangeModel.isHidden(lineNumber)) {\n                            toToggle.push(...foldingModel.getAllRegionsAtLine(lineNumber, r => r.isCollapsed && lineNumber > r.startLineNumber));\n                        }\n                    }\n                    if (toToggle.length) {\n                        foldingModel.toggleCollapseState(toToggle);\n                        this.reveal(selections[0].getPosition());\n                    }\n                }\n            }\n        }).then(undefined, onUnexpectedError);\n    }\n    onEditorMouseDown(e) {\n        this.mouseDownInfo = null;\n        if (!this.hiddenRangeModel || !e.target || !e.target.range) {\n            return;\n        }\n        if (!e.event.leftButton && !e.event.middleButton) {\n            return;\n        }\n        const range = e.target.range;\n        let iconClicked = false;\n        switch (e.target.type) {\n            case 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */: {\n                const data = e.target.detail;\n                const offsetLeftInGutter = e.target.element.offsetLeft;\n                const gutterOffsetX = data.offsetX - offsetLeftInGutter;\n                // const gutterOffsetX = data.offsetX - data.glyphMarginWidth - data.lineNumbersWidth - data.glyphMarginLeft;\n                // TODO@joao TODO@alex TODO@martin this is such that we don't collide with dirty diff\n                if (gutterOffsetX < 4) { // the whitespace between the border and the real folding icon border is 4px\n                    return;\n                }\n                iconClicked = true;\n                break;\n            }\n            case 7 /* MouseTargetType.CONTENT_EMPTY */: {\n                if (this._unfoldOnClickAfterEndOfLine && this.hiddenRangeModel.hasRanges()) {\n                    const data = e.target.detail;\n                    if (!data.isAfterLines) {\n                        break;\n                    }\n                }\n                return;\n            }\n            case 6 /* MouseTargetType.CONTENT_TEXT */: {\n                if (this.hiddenRangeModel.hasRanges()) {\n                    const model = this.editor.getModel();\n                    if (model && range.startColumn === model.getLineMaxColumn(range.startLineNumber)) {\n                        break;\n                    }\n                }\n                return;\n            }\n            default:\n                return;\n        }\n        this.mouseDownInfo = { lineNumber: range.startLineNumber, iconClicked };\n    }\n    onEditorMouseUp(e) {\n        const foldingModel = this.foldingModel;\n        if (!foldingModel || !this.mouseDownInfo || !e.target) {\n            return;\n        }\n        const lineNumber = this.mouseDownInfo.lineNumber;\n        const iconClicked = this.mouseDownInfo.iconClicked;\n        const range = e.target.range;\n        if (!range || range.startLineNumber !== lineNumber) {\n            return;\n        }\n        if (iconClicked) {\n            if (e.target.type !== 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */) {\n                return;\n            }\n        }\n        else {\n            const model = this.editor.getModel();\n            if (!model || range.startColumn !== model.getLineMaxColumn(lineNumber)) {\n                return;\n            }\n        }\n        const region = foldingModel.getRegionAtLine(lineNumber);\n        if (region && region.startLineNumber === lineNumber) {\n            const isCollapsed = region.isCollapsed;\n            if (iconClicked || isCollapsed) {\n                const surrounding = e.event.altKey;\n                let toToggle = [];\n                if (surrounding) {\n                    const filter = (otherRegion) => !otherRegion.containedBy(region) && !region.containedBy(otherRegion);\n                    const toMaybeToggle = foldingModel.getRegionsInside(null, filter);\n                    for (const r of toMaybeToggle) {\n                        if (r.isCollapsed) {\n                            toToggle.push(r);\n                        }\n                    }\n                    // if any surrounding regions are folded, unfold those. Otherwise, fold all surrounding\n                    if (toToggle.length === 0) {\n                        toToggle = toMaybeToggle;\n                    }\n                }\n                else {\n                    const recursive = e.event.middleButton || e.event.shiftKey;\n                    if (recursive) {\n                        for (const r of foldingModel.getRegionsInside(region)) {\n                            if (r.isCollapsed === isCollapsed) {\n                                toToggle.push(r);\n                            }\n                        }\n                    }\n                    // when recursive, first only collapse all children. If all are already folded or there are no children, also fold parent.\n                    if (isCollapsed || !recursive || toToggle.length === 0) {\n                        toToggle.push(region);\n                    }\n                }\n                foldingModel.toggleCollapseState(toToggle);\n                this.reveal({ lineNumber, column: 1 });\n            }\n        }\n    }\n    reveal(position) {\n        this.editor.revealPositionInCenterIfOutsideViewport(position, 0 /* ScrollType.Smooth */);\n    }\n};\nFoldingController.ID = 'editor.contrib.folding';\nFoldingController = FoldingController_1 = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, ILanguageConfigurationService),\n    __param(3, INotificationService),\n    __param(4, ILanguageFeatureDebounceService),\n    __param(5, ILanguageFeaturesService)\n], FoldingController);\nexport { FoldingController };\nexport class RangesLimitReporter {\n    constructor(editor) {\n        this.editor = editor;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._computed = 0;\n        this._limited = false;\n    }\n    get limit() {\n        return this.editor.getOptions().get(46 /* EditorOption.foldingMaximumRegions */);\n    }\n    get computed() {\n        return this._computed;\n    }\n    get limited() {\n        return this._limited;\n    }\n    update(computed, limited) {\n        if (computed !== this._computed || limited !== this._limited) {\n            this._computed = computed;\n            this._limited = limited;\n            this._onDidChange.fire();\n        }\n    }\n}\nclass FoldingAction extends EditorAction {\n    runEditorCommand(accessor, editor, args) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const foldingController = FoldingController.get(editor);\n        if (!foldingController) {\n            return;\n        }\n        const foldingModelPromise = foldingController.getFoldingModel();\n        if (foldingModelPromise) {\n            this.reportTelemetry(accessor, editor);\n            return foldingModelPromise.then(foldingModel => {\n                if (foldingModel) {\n                    this.invoke(foldingController, foldingModel, editor, args, languageConfigurationService);\n                    const selection = editor.getSelection();\n                    if (selection) {\n                        foldingController.reveal(selection.getStartPosition());\n                    }\n                }\n            });\n        }\n    }\n    getSelectedLines(editor) {\n        const selections = editor.getSelections();\n        return selections ? selections.map(s => s.startLineNumber) : [];\n    }\n    getLineNumbers(args, editor) {\n        if (args && args.selectionLines) {\n            return args.selectionLines.map(l => l + 1); // to 0-bases line numbers\n        }\n        return this.getSelectedLines(editor);\n    }\n    run(_accessor, _editor) {\n    }\n}\nfunction foldingArgumentsConstraint(args) {\n    if (!types.isUndefined(args)) {\n        if (!types.isObject(args)) {\n            return false;\n        }\n        const foldingArgs = args;\n        if (!types.isUndefined(foldingArgs.levels) && !types.isNumber(foldingArgs.levels)) {\n            return false;\n        }\n        if (!types.isUndefined(foldingArgs.direction) && !types.isString(foldingArgs.direction)) {\n            return false;\n        }\n        if (!types.isUndefined(foldingArgs.selectionLines) && (!Array.isArray(foldingArgs.selectionLines) || !foldingArgs.selectionLines.every(types.isNumber))) {\n            return false;\n        }\n    }\n    return true;\n}\nclass UnfoldAction extends FoldingAction {\n    constructor() {\n        super({\n            id: 'editor.unfold',\n            label: nls.localize('unfoldAction.label', \"Unfold\"),\n            alias: 'Unfold',\n            precondition: CONTEXT_FOLDING_ENABLED,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 94 /* KeyCode.BracketRight */,\n                mac: {\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 94 /* KeyCode.BracketRight */\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            description: {\n                description: 'Unfold the content in the editor',\n                args: [\n                    {\n                        name: 'Unfold editor argument',\n                        description: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t\t* 'levels': Number of levels to unfold. If not set, defaults to 1.\n\t\t\t\t\t\t* 'direction': If 'up', unfold given number of levels up otherwise unfolds down.\n\t\t\t\t\t\t* 'selectionLines': Array of the start lines (0-based) of the editor selections to apply the unfold action to. If not set, the active selection(s) will be used.\n\t\t\t\t\t\t`,\n                        constraint: foldingArgumentsConstraint,\n                        schema: {\n                            'type': 'object',\n                            'properties': {\n                                'levels': {\n                                    'type': 'number',\n                                    'default': 1\n                                },\n                                'direction': {\n                                    'type': 'string',\n                                    'enum': ['up', 'down'],\n                                    'default': 'down'\n                                },\n                                'selectionLines': {\n                                    'type': 'array',\n                                    'items': {\n                                        'type': 'number'\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ]\n            }\n        });\n    }\n    invoke(_foldingController, foldingModel, editor, args) {\n        const levels = args && args.levels || 1;\n        const lineNumbers = this.getLineNumbers(args, editor);\n        if (args && args.direction === 'up') {\n            setCollapseStateLevelsUp(foldingModel, false, levels, lineNumbers);\n        }\n        else {\n            setCollapseStateLevelsDown(foldingModel, false, levels, lineNumbers);\n        }\n    }\n}\nclass UnFoldRecursivelyAction extends FoldingAction {\n    constructor() {\n        super({\n            id: 'editor.unfoldRecursively',\n            label: nls.localize('unFoldRecursivelyAction.label', \"Unfold Recursively\"),\n            alias: 'Unfold Recursively',\n            precondition: CONTEXT_FOLDING_ENABLED,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 94 /* KeyCode.BracketRight */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    invoke(_foldingController, foldingModel, editor, _args) {\n        setCollapseStateLevelsDown(foldingModel, false, Number.MAX_VALUE, this.getSelectedLines(editor));\n    }\n}\nclass FoldAction extends FoldingAction {\n    constructor() {\n        super({\n            id: 'editor.fold',\n            label: nls.localize('foldAction.label', \"Fold\"),\n            alias: 'Fold',\n            precondition: CONTEXT_FOLDING_ENABLED,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 92 /* KeyCode.BracketLeft */,\n                mac: {\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 92 /* KeyCode.BracketLeft */\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            description: {\n                description: 'Fold the content in the editor',\n                args: [\n                    {\n                        name: 'Fold editor argument',\n                        description: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t\t\t* 'levels': Number of levels to fold.\n\t\t\t\t\t\t\t* 'direction': If 'up', folds given number of levels up otherwise folds down.\n\t\t\t\t\t\t\t* 'selectionLines': Array of the start lines (0-based) of the editor selections to apply the fold action to. If not set, the active selection(s) will be used.\n\t\t\t\t\t\t\tIf no levels or direction is set, folds the region at the locations or if already collapsed, the first uncollapsed parent instead.\n\t\t\t\t\t\t`,\n                        constraint: foldingArgumentsConstraint,\n                        schema: {\n                            'type': 'object',\n                            'properties': {\n                                'levels': {\n                                    'type': 'number',\n                                },\n                                'direction': {\n                                    'type': 'string',\n                                    'enum': ['up', 'down'],\n                                },\n                                'selectionLines': {\n                                    'type': 'array',\n                                    'items': {\n                                        'type': 'number'\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ]\n            }\n        });\n    }\n    invoke(_foldingController, foldingModel, editor, args) {\n        const lineNumbers = this.getLineNumbers(args, editor);\n        const levels = args && args.levels;\n        const direction = args && args.direction;\n        if (typeof levels !== 'number' && typeof direction !== 'string') {\n            // fold the region at the location or if already collapsed, the first uncollapsed parent instead.\n            setCollapseStateUp(foldingModel, true, lineNumbers);\n        }\n        else {\n            if (direction === 'up') {\n                setCollapseStateLevelsUp(foldingModel, true, levels || 1, lineNumbers);\n            }\n            else {\n                setCollapseStateLevelsDown(foldingModel, true, levels || 1, lineNumbers);\n            }\n        }\n    }\n}\nclass ToggleFoldAction extends FoldingAction {\n    constructor() {\n        super({\n            id: 'editor.toggleFold',\n            label: nls.localize('toggleFoldAction.label', \"Toggle Fold\"),\n            alias: 'Toggle Fold',\n            precondition: CONTEXT_FOLDING_ENABLED,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 42 /* KeyCode.KeyL */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    invoke(_foldingController, foldingModel, editor) {\n        const selectedLines = this.getSelectedLines(editor);\n        toggleCollapseState(foldingModel, 1, selectedLines);\n    }\n}\nclass FoldRecursivelyAction extends FoldingAction {\n    constructor() {\n        super({\n            id: 'editor.foldRecursively',\n            label: nls.localize('foldRecursivelyAction.label', \"Fold Recursively\"),\n            alias: 'Fold Recursively',\n            precondition: CONTEXT_FOLDING_ENABLED,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 92 /* KeyCode.BracketLeft */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    invoke(_foldingController, foldingModel, editor) {\n        const selectedLines = this.getSelectedLines(editor);\n        setCollapseStateLevelsDown(foldingModel, true, Number.MAX_VALUE, selectedLines);\n    }\n}\nclass FoldAllBlockCommentsAction extends FoldingAction {\n    constructor() {\n        super({\n            id: 'editor.foldAllBlockComments',\n            label: nls.localize('foldAllBlockComments.label', \"Fold All Block Comments\"),\n            alias: 'Fold All Block Comments',\n            precondition: CONTEXT_FOLDING_ENABLED,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 90 /* KeyCode.Slash */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    invoke(_foldingController, foldingModel, editor, args, languageConfigurationService) {\n        if (foldingModel.regions.hasTypes()) {\n            setCollapseStateForType(foldingModel, FoldingRangeKind.Comment.value, true);\n        }\n        else {\n            const editorModel = editor.getModel();\n            if (!editorModel) {\n                return;\n            }\n            const comments = languageConfigurationService.getLanguageConfiguration(editorModel.getLanguageId()).comments;\n            if (comments && comments.blockCommentStartToken) {\n                const regExp = new RegExp('^\\\\s*' + escapeRegExpCharacters(comments.blockCommentStartToken));\n                setCollapseStateForMatchingLines(foldingModel, regExp, true);\n            }\n        }\n    }\n}\nclass FoldAllRegionsAction extends FoldingAction {\n    constructor() {\n        super({\n            id: 'editor.foldAllMarkerRegions',\n            label: nls.localize('foldAllMarkerRegions.label', \"Fold All Regions\"),\n            alias: 'Fold All Regions',\n            precondition: CONTEXT_FOLDING_ENABLED,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 29 /* KeyCode.Digit8 */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    invoke(_foldingController, foldingModel, editor, args, languageConfigurationService) {\n        if (foldingModel.regions.hasTypes()) {\n            setCollapseStateForType(foldingModel, FoldingRangeKind.Region.value, true);\n        }\n        else {\n            const editorModel = editor.getModel();\n            if (!editorModel) {\n                return;\n            }\n            const foldingRules = languageConfigurationService.getLanguageConfiguration(editorModel.getLanguageId()).foldingRules;\n            if (foldingRules && foldingRules.markers && foldingRules.markers.start) {\n                const regExp = new RegExp(foldingRules.markers.start);\n                setCollapseStateForMatchingLines(foldingModel, regExp, true);\n            }\n        }\n    }\n}\nclass UnfoldAllRegionsAction extends FoldingAction {\n    constructor() {\n        super({\n            id: 'editor.unfoldAllMarkerRegions',\n            label: nls.localize('unfoldAllMarkerRegions.label', \"Unfold All Regions\"),\n            alias: 'Unfold All Regions',\n            precondition: CONTEXT_FOLDING_ENABLED,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 30 /* KeyCode.Digit9 */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    invoke(_foldingController, foldingModel, editor, args, languageConfigurationService) {\n        if (foldingModel.regions.hasTypes()) {\n            setCollapseStateForType(foldingModel, FoldingRangeKind.Region.value, false);\n        }\n        else {\n            const editorModel = editor.getModel();\n            if (!editorModel) {\n                return;\n            }\n            const foldingRules = languageConfigurationService.getLanguageConfiguration(editorModel.getLanguageId()).foldingRules;\n            if (foldingRules && foldingRules.markers && foldingRules.markers.start) {\n                const regExp = new RegExp(foldingRules.markers.start);\n                setCollapseStateForMatchingLines(foldingModel, regExp, false);\n            }\n        }\n    }\n}\nclass FoldAllExceptAction extends FoldingAction {\n    constructor() {\n        super({\n            id: 'editor.foldAllExcept',\n            label: nls.localize('foldAllExcept.label', \"Fold All Except Selected\"),\n            alias: 'Fold All Except Selected',\n            precondition: CONTEXT_FOLDING_ENABLED,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 88 /* KeyCode.Minus */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    invoke(_foldingController, foldingModel, editor) {\n        const selectedLines = this.getSelectedLines(editor);\n        setCollapseStateForRest(foldingModel, true, selectedLines);\n    }\n}\nclass UnfoldAllExceptAction extends FoldingAction {\n    constructor() {\n        super({\n            id: 'editor.unfoldAllExcept',\n            label: nls.localize('unfoldAllExcept.label', \"Unfold All Except Selected\"),\n            alias: 'Unfold All Except Selected',\n            precondition: CONTEXT_FOLDING_ENABLED,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 86 /* KeyCode.Equal */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    invoke(_foldingController, foldingModel, editor) {\n        const selectedLines = this.getSelectedLines(editor);\n        setCollapseStateForRest(foldingModel, false, selectedLines);\n    }\n}\nclass FoldAllAction extends FoldingAction {\n    constructor() {\n        super({\n            id: 'editor.foldAll',\n            label: nls.localize('foldAllAction.label', \"Fold All\"),\n            alias: 'Fold All',\n            precondition: CONTEXT_FOLDING_ENABLED,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 21 /* KeyCode.Digit0 */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    invoke(_foldingController, foldingModel, _editor) {\n        setCollapseStateLevelsDown(foldingModel, true);\n    }\n}\nclass UnfoldAllAction extends FoldingAction {\n    constructor() {\n        super({\n            id: 'editor.unfoldAll',\n            label: nls.localize('unfoldAllAction.label', \"Unfold All\"),\n            alias: 'Unfold All',\n            precondition: CONTEXT_FOLDING_ENABLED,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 40 /* KeyCode.KeyJ */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    invoke(_foldingController, foldingModel, _editor) {\n        setCollapseStateLevelsDown(foldingModel, false);\n    }\n}\nclass FoldLevelAction extends FoldingAction {\n    getFoldingLevel() {\n        return parseInt(this.id.substr(FoldLevelAction.ID_PREFIX.length));\n    }\n    invoke(_foldingController, foldingModel, editor) {\n        setCollapseStateAtLevel(foldingModel, this.getFoldingLevel(), true, this.getSelectedLines(editor));\n    }\n}\nFoldLevelAction.ID_PREFIX = 'editor.foldLevel';\nFoldLevelAction.ID = (level) => FoldLevelAction.ID_PREFIX + level;\n/** Action to go to the parent fold of current line */\nclass GotoParentFoldAction extends FoldingAction {\n    constructor() {\n        super({\n            id: 'editor.gotoParentFold',\n            label: nls.localize('gotoParentFold.label', \"Go to Parent Fold\"),\n            alias: 'Go to Parent Fold',\n            precondition: CONTEXT_FOLDING_ENABLED,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    invoke(_foldingController, foldingModel, editor) {\n        const selectedLines = this.getSelectedLines(editor);\n        if (selectedLines.length > 0) {\n            const startLineNumber = getParentFoldLine(selectedLines[0], foldingModel);\n            if (startLineNumber !== null) {\n                editor.setSelection({\n                    startLineNumber: startLineNumber,\n                    startColumn: 1,\n                    endLineNumber: startLineNumber,\n                    endColumn: 1\n                });\n            }\n        }\n    }\n}\n/** Action to go to the previous fold of current line */\nclass GotoPreviousFoldAction extends FoldingAction {\n    constructor() {\n        super({\n            id: 'editor.gotoPreviousFold',\n            label: nls.localize('gotoPreviousFold.label', \"Go to Previous Folding Range\"),\n            alias: 'Go to Previous Folding Range',\n            precondition: CONTEXT_FOLDING_ENABLED,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    invoke(_foldingController, foldingModel, editor) {\n        const selectedLines = this.getSelectedLines(editor);\n        if (selectedLines.length > 0) {\n            const startLineNumber = getPreviousFoldLine(selectedLines[0], foldingModel);\n            if (startLineNumber !== null) {\n                editor.setSelection({\n                    startLineNumber: startLineNumber,\n                    startColumn: 1,\n                    endLineNumber: startLineNumber,\n                    endColumn: 1\n                });\n            }\n        }\n    }\n}\n/** Action to go to the next fold of current line */\nclass GotoNextFoldAction extends FoldingAction {\n    constructor() {\n        super({\n            id: 'editor.gotoNextFold',\n            label: nls.localize('gotoNextFold.label', \"Go to Next Folding Range\"),\n            alias: 'Go to Next Folding Range',\n            precondition: CONTEXT_FOLDING_ENABLED,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    invoke(_foldingController, foldingModel, editor) {\n        const selectedLines = this.getSelectedLines(editor);\n        if (selectedLines.length > 0) {\n            const startLineNumber = getNextFoldLine(selectedLines[0], foldingModel);\n            if (startLineNumber !== null) {\n                editor.setSelection({\n                    startLineNumber: startLineNumber,\n                    startColumn: 1,\n                    endLineNumber: startLineNumber,\n                    endColumn: 1\n                });\n            }\n        }\n    }\n}\nclass FoldRangeFromSelectionAction extends FoldingAction {\n    constructor() {\n        super({\n            id: 'editor.createFoldingRangeFromSelection',\n            label: nls.localize('createManualFoldRange.label', \"Create Folding Range from Selection\"),\n            alias: 'Create Folding Range from Selection',\n            precondition: CONTEXT_FOLDING_ENABLED,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 87 /* KeyCode.Comma */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    invoke(_foldingController, foldingModel, editor) {\n        var _a;\n        const collapseRanges = [];\n        const selections = editor.getSelections();\n        if (selections) {\n            for (const selection of selections) {\n                let endLineNumber = selection.endLineNumber;\n                if (selection.endColumn === 1) {\n                    --endLineNumber;\n                }\n                if (endLineNumber > selection.startLineNumber) {\n                    collapseRanges.push({\n                        startLineNumber: selection.startLineNumber,\n                        endLineNumber: endLineNumber,\n                        type: undefined,\n                        isCollapsed: true,\n                        source: 1 /* FoldSource.userDefined */\n                    });\n                    editor.setSelection({\n                        startLineNumber: selection.startLineNumber,\n                        startColumn: 1,\n                        endLineNumber: selection.startLineNumber,\n                        endColumn: 1\n                    });\n                }\n            }\n            if (collapseRanges.length > 0) {\n                collapseRanges.sort((a, b) => {\n                    return a.startLineNumber - b.startLineNumber;\n                });\n                const newRanges = FoldingRegions.sanitizeAndMerge(foldingModel.regions, collapseRanges, (_a = editor.getModel()) === null || _a === void 0 ? void 0 : _a.getLineCount());\n                foldingModel.updatePost(FoldingRegions.fromFoldRanges(newRanges));\n            }\n        }\n    }\n}\nclass RemoveFoldRangeFromSelectionAction extends FoldingAction {\n    constructor() {\n        super({\n            id: 'editor.removeManualFoldingRanges',\n            label: nls.localize('removeManualFoldingRanges.label', \"Remove Manual Folding Ranges\"),\n            alias: 'Remove Manual Folding Ranges',\n            precondition: CONTEXT_FOLDING_ENABLED,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.Period */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    invoke(foldingController, foldingModel, editor) {\n        const selections = editor.getSelections();\n        if (selections) {\n            const ranges = [];\n            for (const selection of selections) {\n                const { startLineNumber, endLineNumber } = selection;\n                ranges.push(endLineNumber >= startLineNumber ? { startLineNumber, endLineNumber } : { endLineNumber, startLineNumber });\n            }\n            foldingModel.removeManualRanges(ranges);\n            foldingController.triggerFoldingModelChanged();\n        }\n    }\n}\nregisterEditorContribution(FoldingController.ID, FoldingController, 0 /* EditorContributionInstantiation.Eager */); // eager because it uses `saveViewState`/`restoreViewState`\nregisterEditorAction(UnfoldAction);\nregisterEditorAction(UnFoldRecursivelyAction);\nregisterEditorAction(FoldAction);\nregisterEditorAction(FoldRecursivelyAction);\nregisterEditorAction(FoldAllAction);\nregisterEditorAction(UnfoldAllAction);\nregisterEditorAction(FoldAllBlockCommentsAction);\nregisterEditorAction(FoldAllRegionsAction);\nregisterEditorAction(UnfoldAllRegionsAction);\nregisterEditorAction(FoldAllExceptAction);\nregisterEditorAction(UnfoldAllExceptAction);\nregisterEditorAction(ToggleFoldAction);\nregisterEditorAction(GotoParentFoldAction);\nregisterEditorAction(GotoPreviousFoldAction);\nregisterEditorAction(GotoNextFoldAction);\nregisterEditorAction(FoldRangeFromSelectionAction);\nregisterEditorAction(RemoveFoldRangeFromSelectionAction);\nfor (let i = 1; i <= 7; i++) {\n    registerInstantiatedEditorAction(new FoldLevelAction({\n        id: FoldLevelAction.ID(i),\n        label: nls.localize('foldLevelAction.label', \"Fold Level {0}\", i),\n        alias: `Fold Level ${i}`,\n        precondition: CONTEXT_FOLDING_ENABLED,\n        kbOpts: {\n            kbExpr: EditorContextKeys.editorTextFocus,\n            primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | (21 /* KeyCode.Digit0 */ + i)),\n            weight: 100 /* KeybindingWeight.EditorContrib */\n        }\n    }));\n}\nCommandsRegistry.registerCommand('_executeFoldingRangeProvider', function (accessor, ...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [resource] = args;\n        if (!(resource instanceof URI)) {\n            throw illegalArgument();\n        }\n        const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n        const model = accessor.get(IModelService).getModel(resource);\n        if (!model) {\n            throw illegalArgument();\n        }\n        const configurationService = accessor.get(IConfigurationService);\n        if (!configurationService.getValue('editor.folding', { resource })) {\n            return [];\n        }\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const strategy = configurationService.getValue('editor.foldingStrategy', { resource });\n        const foldingLimitReporter = {\n            get limit() {\n                return configurationService.getValue('editor.foldingMaximumRegions', { resource });\n            },\n            update: (computed, limited) => { }\n        };\n        const indentRangeProvider = new IndentRangeProvider(model, languageConfigurationService, foldingLimitReporter);\n        let rangeProvider = indentRangeProvider;\n        if (strategy !== 'indentation') {\n            const providers = FoldingController.getFoldingRangeProviders(languageFeaturesService, model);\n            if (providers.length) {\n                rangeProvider = new SyntaxRangeProvider(model, providers, () => { }, foldingLimitReporter, indentRangeProvider);\n            }\n        }\n        const ranges = yield rangeProvider.compute(CancellationToken.None);\n        const result = [];\n        try {\n            if (ranges) {\n                for (let i = 0; i < ranges.length; i++) {\n                    const type = ranges.getType(i);\n                    result.push({ start: ranges.getStartLineNumber(i), end: ranges.getEndLineNumber(i), kind: type ? FoldingRangeKind.fromValue(type) : undefined });\n                }\n            }\n            return result;\n        }\n        finally {\n            rangeProvider.dispose();\n        }\n    });\n});\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { findFirstInSorted } from '../../../../base/common/arrays.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Range } from '../../../common/core/range.js';\nimport { countEOL } from '../../../common/core/eolCounter.js';\nexport class HiddenRangeModel {\n    get onDidChange() { return this._updateEventEmitter.event; }\n    get hiddenRanges() { return this._hiddenRanges; }\n    constructor(model) {\n        this._updateEventEmitter = new Emitter();\n        this._hasLineChanges = false;\n        this._foldingModel = model;\n        this._foldingModelListener = model.onDidChange(_ => this.updateHiddenRanges());\n        this._hiddenRanges = [];\n        if (model.regions.length) {\n            this.updateHiddenRanges();\n        }\n    }\n    notifyChangeModelContent(e) {\n        if (this._hiddenRanges.length && !this._hasLineChanges) {\n            this._hasLineChanges = e.changes.some(change => {\n                return change.range.endLineNumber !== change.range.startLineNumber || countEOL(change.text)[0] !== 0;\n            });\n        }\n    }\n    updateHiddenRanges() {\n        let updateHiddenAreas = false;\n        const newHiddenAreas = [];\n        let i = 0; // index into hidden\n        let k = 0;\n        let lastCollapsedStart = Number.MAX_VALUE;\n        let lastCollapsedEnd = -1;\n        const ranges = this._foldingModel.regions;\n        for (; i < ranges.length; i++) {\n            if (!ranges.isCollapsed(i)) {\n                continue;\n            }\n            const startLineNumber = ranges.getStartLineNumber(i) + 1; // the first line is not hidden\n            const endLineNumber = ranges.getEndLineNumber(i);\n            if (lastCollapsedStart <= startLineNumber && endLineNumber <= lastCollapsedEnd) {\n                // ignore ranges contained in collapsed regions\n                continue;\n            }\n            if (!updateHiddenAreas && k < this._hiddenRanges.length && this._hiddenRanges[k].startLineNumber === startLineNumber && this._hiddenRanges[k].endLineNumber === endLineNumber) {\n                // reuse the old ranges\n                newHiddenAreas.push(this._hiddenRanges[k]);\n                k++;\n            }\n            else {\n                updateHiddenAreas = true;\n                newHiddenAreas.push(new Range(startLineNumber, 1, endLineNumber, 1));\n            }\n            lastCollapsedStart = startLineNumber;\n            lastCollapsedEnd = endLineNumber;\n        }\n        if (this._hasLineChanges || updateHiddenAreas || k < this._hiddenRanges.length) {\n            this.applyHiddenRanges(newHiddenAreas);\n        }\n    }\n    applyHiddenRanges(newHiddenAreas) {\n        this._hiddenRanges = newHiddenAreas;\n        this._hasLineChanges = false;\n        this._updateEventEmitter.fire(newHiddenAreas);\n    }\n    hasRanges() {\n        return this._hiddenRanges.length > 0;\n    }\n    isHidden(line) {\n        return findRange(this._hiddenRanges, line) !== null;\n    }\n    adjustSelections(selections) {\n        let hasChanges = false;\n        const editorModel = this._foldingModel.textModel;\n        let lastRange = null;\n        const adjustLine = (line) => {\n            if (!lastRange || !isInside(line, lastRange)) {\n                lastRange = findRange(this._hiddenRanges, line);\n            }\n            if (lastRange) {\n                return lastRange.startLineNumber - 1;\n            }\n            return null;\n        };\n        for (let i = 0, len = selections.length; i < len; i++) {\n            let selection = selections[i];\n            const adjustedStartLine = adjustLine(selection.startLineNumber);\n            if (adjustedStartLine) {\n                selection = selection.setStartPosition(adjustedStartLine, editorModel.getLineMaxColumn(adjustedStartLine));\n                hasChanges = true;\n            }\n            const adjustedEndLine = adjustLine(selection.endLineNumber);\n            if (adjustedEndLine) {\n                selection = selection.setEndPosition(adjustedEndLine, editorModel.getLineMaxColumn(adjustedEndLine));\n                hasChanges = true;\n            }\n            selections[i] = selection;\n        }\n        return hasChanges;\n    }\n    dispose() {\n        if (this.hiddenRanges.length > 0) {\n            this._hiddenRanges = [];\n            this._updateEventEmitter.fire(this._hiddenRanges);\n        }\n        if (this._foldingModelListener) {\n            this._foldingModelListener.dispose();\n            this._foldingModelListener = null;\n        }\n    }\n}\nfunction isInside(line, range) {\n    return line >= range.startLineNumber && line <= range.endLineNumber;\n}\nfunction findRange(ranges, line) {\n    const i = findFirstInSorted(ranges, r => line < r.startLineNumber) - 1;\n    if (i >= 0 && ranges[i].endLineNumber >= line) {\n        return ranges[i];\n    }\n    return null;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { computeIndentLevel } from '../../../common/model/utils.js';\nimport { FoldingRegions, MAX_LINE_NUMBER } from './foldingRanges.js';\nconst MAX_FOLDING_REGIONS_FOR_INDENT_DEFAULT = 5000;\nconst ID_INDENT_PROVIDER = 'indent';\nexport class IndentRangeProvider {\n    constructor(editorModel, languageConfigurationService, foldingRangesLimit) {\n        this.editorModel = editorModel;\n        this.languageConfigurationService = languageConfigurationService;\n        this.foldingRangesLimit = foldingRangesLimit;\n        this.id = ID_INDENT_PROVIDER;\n    }\n    dispose() { }\n    compute(cancelationToken) {\n        const foldingRules = this.languageConfigurationService.getLanguageConfiguration(this.editorModel.getLanguageId()).foldingRules;\n        const offSide = foldingRules && !!foldingRules.offSide;\n        const markers = foldingRules && foldingRules.markers;\n        return Promise.resolve(computeRanges(this.editorModel, offSide, markers, this.foldingRangesLimit));\n    }\n}\n// public only for testing\nexport class RangesCollector {\n    constructor(foldingRangesLimit) {\n        this._startIndexes = [];\n        this._endIndexes = [];\n        this._indentOccurrences = [];\n        this._length = 0;\n        this._foldingRangesLimit = foldingRangesLimit;\n    }\n    insertFirst(startLineNumber, endLineNumber, indent) {\n        if (startLineNumber > MAX_LINE_NUMBER || endLineNumber > MAX_LINE_NUMBER) {\n            return;\n        }\n        const index = this._length;\n        this._startIndexes[index] = startLineNumber;\n        this._endIndexes[index] = endLineNumber;\n        this._length++;\n        if (indent < 1000) {\n            this._indentOccurrences[indent] = (this._indentOccurrences[indent] || 0) + 1;\n        }\n    }\n    toIndentRanges(model) {\n        const limit = this._foldingRangesLimit.limit;\n        if (this._length <= limit) {\n            this._foldingRangesLimit.update(this._length, false);\n            // reverse and create arrays of the exact length\n            const startIndexes = new Uint32Array(this._length);\n            const endIndexes = new Uint32Array(this._length);\n            for (let i = this._length - 1, k = 0; i >= 0; i--, k++) {\n                startIndexes[k] = this._startIndexes[i];\n                endIndexes[k] = this._endIndexes[i];\n            }\n            return new FoldingRegions(startIndexes, endIndexes);\n        }\n        else {\n            this._foldingRangesLimit.update(this._length, limit);\n            let entries = 0;\n            let maxIndent = this._indentOccurrences.length;\n            for (let i = 0; i < this._indentOccurrences.length; i++) {\n                const n = this._indentOccurrences[i];\n                if (n) {\n                    if (n + entries > limit) {\n                        maxIndent = i;\n                        break;\n                    }\n                    entries += n;\n                }\n            }\n            const tabSize = model.getOptions().tabSize;\n            // reverse and create arrays of the exact length\n            const startIndexes = new Uint32Array(limit);\n            const endIndexes = new Uint32Array(limit);\n            for (let i = this._length - 1, k = 0; i >= 0; i--) {\n                const startIndex = this._startIndexes[i];\n                const lineContent = model.getLineContent(startIndex);\n                const indent = computeIndentLevel(lineContent, tabSize);\n                if (indent < maxIndent || (indent === maxIndent && entries++ < limit)) {\n                    startIndexes[k] = startIndex;\n                    endIndexes[k] = this._endIndexes[i];\n                    k++;\n                }\n            }\n            return new FoldingRegions(startIndexes, endIndexes);\n        }\n    }\n}\nconst foldingRangesLimitDefault = {\n    limit: MAX_FOLDING_REGIONS_FOR_INDENT_DEFAULT,\n    update: () => { }\n};\nexport function computeRanges(model, offSide, markers, foldingRangesLimit = foldingRangesLimitDefault) {\n    const tabSize = model.getOptions().tabSize;\n    const result = new RangesCollector(foldingRangesLimit);\n    let pattern = undefined;\n    if (markers) {\n        pattern = new RegExp(`(${markers.start.source})|(?:${markers.end.source})`);\n    }\n    const previousRegions = [];\n    const line = model.getLineCount() + 1;\n    previousRegions.push({ indent: -1, endAbove: line, line }); // sentinel, to make sure there's at least one entry\n    for (let line = model.getLineCount(); line > 0; line--) {\n        const lineContent = model.getLineContent(line);\n        const indent = computeIndentLevel(lineContent, tabSize);\n        let previous = previousRegions[previousRegions.length - 1];\n        if (indent === -1) {\n            if (offSide) {\n                // for offSide languages, empty lines are associated to the previous block\n                // note: the next block is already written to the results, so this only\n                // impacts the end position of the block before\n                previous.endAbove = line;\n            }\n            continue; // only whitespace\n        }\n        let m;\n        if (pattern && (m = lineContent.match(pattern))) {\n            // folding pattern match\n            if (m[1]) { // start pattern match\n                // discard all regions until the folding pattern\n                let i = previousRegions.length - 1;\n                while (i > 0 && previousRegions[i].indent !== -2) {\n                    i--;\n                }\n                if (i > 0) {\n                    previousRegions.length = i + 1;\n                    previous = previousRegions[i];\n                    // new folding range from pattern, includes the end line\n                    result.insertFirst(line, previous.line, indent);\n                    previous.line = line;\n                    previous.indent = indent;\n                    previous.endAbove = line;\n                    continue;\n                }\n                else {\n                    // no end marker found, treat line as a regular line\n                }\n            }\n            else { // end pattern match\n                previousRegions.push({ indent: -2, endAbove: line, line });\n                continue;\n            }\n        }\n        if (previous.indent > indent) {\n            // discard all regions with larger indent\n            do {\n                previousRegions.pop();\n                previous = previousRegions[previousRegions.length - 1];\n            } while (previous.indent > indent);\n            // new folding range\n            const endLineNumber = previous.endAbove - 1;\n            if (endLineNumber - line >= 1) { // needs at east size 1\n                result.insertFirst(line, endLineNumber, indent);\n            }\n        }\n        if (previous.indent === indent) {\n            previous.endAbove = line;\n        }\n        else { // previous.indent < indent\n            // new region with a bigger indent\n            previousRegions.push({ indent, endAbove: line, line });\n        }\n    }\n    return result.toIndentRanges(model);\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { MinimapPosition } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { localize } from '../../../../nls.js';\nimport { editorSelectionBackground, iconForeground, registerColor, transparent } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nconst foldBackground = registerColor('editor.foldBackground', { light: transparent(editorSelectionBackground, 0.3), dark: transparent(editorSelectionBackground, 0.3), hcDark: null, hcLight: null }, localize('foldBackgroundBackground', \"Background color behind folded ranges. The color must not be opaque so as not to hide underlying decorations.\"), true);\nregisterColor('editorGutter.foldingControlForeground', { dark: iconForeground, light: iconForeground, hcDark: iconForeground, hcLight: iconForeground }, localize('editorGutter.foldingControlForeground', 'Color of the folding control in the editor gutter.'));\nexport const foldingExpandedIcon = registerIcon('folding-expanded', Codicon.chevronDown, localize('foldingExpandedIcon', 'Icon for expanded ranges in the editor glyph margin.'));\nexport const foldingCollapsedIcon = registerIcon('folding-collapsed', Codicon.chevronRight, localize('foldingCollapsedIcon', 'Icon for collapsed ranges in the editor glyph margin.'));\nexport const foldingManualCollapsedIcon = registerIcon('folding-manual-collapsed', foldingCollapsedIcon, localize('foldingManualCollapedIcon', 'Icon for manually collapsed ranges in the editor glyph margin.'));\nexport const foldingManualExpandedIcon = registerIcon('folding-manual-expanded', foldingExpandedIcon, localize('foldingManualExpandedIcon', 'Icon for manually expanded ranges in the editor glyph margin.'));\nconst foldedBackgroundMinimap = { color: themeColorFromId(foldBackground), position: MinimapPosition.Inline };\nexport class FoldingDecorationProvider {\n    constructor(editor) {\n        this.editor = editor;\n        this.showFoldingControls = 'mouseover';\n        this.showFoldingHighlights = true;\n    }\n    getDecorationOption(isCollapsed, isHidden, isManual) {\n        if (isHidden) { // is inside another collapsed region\n            return FoldingDecorationProvider.HIDDEN_RANGE_DECORATION;\n        }\n        if (this.showFoldingControls === 'never') {\n            if (isCollapsed) {\n                return this.showFoldingHighlights ? FoldingDecorationProvider.NO_CONTROLS_COLLAPSED_HIGHLIGHTED_RANGE_DECORATION : FoldingDecorationProvider.NO_CONTROLS_COLLAPSED_RANGE_DECORATION;\n            }\n            return FoldingDecorationProvider.NO_CONTROLS_EXPANDED_RANGE_DECORATION;\n        }\n        if (isCollapsed) {\n            return isManual ?\n                (this.showFoldingHighlights ? FoldingDecorationProvider.MANUALLY_COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION : FoldingDecorationProvider.MANUALLY_COLLAPSED_VISUAL_DECORATION)\n                : (this.showFoldingHighlights ? FoldingDecorationProvider.COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION : FoldingDecorationProvider.COLLAPSED_VISUAL_DECORATION);\n        }\n        else if (this.showFoldingControls === 'mouseover') {\n            return isManual ? FoldingDecorationProvider.MANUALLY_EXPANDED_AUTO_HIDE_VISUAL_DECORATION : FoldingDecorationProvider.EXPANDED_AUTO_HIDE_VISUAL_DECORATION;\n        }\n        else {\n            return isManual ? FoldingDecorationProvider.MANUALLY_EXPANDED_VISUAL_DECORATION : FoldingDecorationProvider.EXPANDED_VISUAL_DECORATION;\n        }\n    }\n    changeDecorations(callback) {\n        return this.editor.changeDecorations(callback);\n    }\n    removeDecorations(decorationIds) {\n        this.editor.removeDecorations(decorationIds);\n    }\n}\nFoldingDecorationProvider.COLLAPSED_VISUAL_DECORATION = ModelDecorationOptions.register({\n    description: 'folding-collapsed-visual-decoration',\n    stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n    afterContentClassName: 'inline-folded',\n    isWholeLine: true,\n    firstLineDecorationClassName: ThemeIcon.asClassName(foldingCollapsedIcon),\n});\nFoldingDecorationProvider.COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION = ModelDecorationOptions.register({\n    description: 'folding-collapsed-highlighted-visual-decoration',\n    stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n    afterContentClassName: 'inline-folded',\n    className: 'folded-background',\n    minimap: foldedBackgroundMinimap,\n    isWholeLine: true,\n    firstLineDecorationClassName: ThemeIcon.asClassName(foldingCollapsedIcon)\n});\nFoldingDecorationProvider.MANUALLY_COLLAPSED_VISUAL_DECORATION = ModelDecorationOptions.register({\n    description: 'folding-manually-collapsed-visual-decoration',\n    stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n    afterContentClassName: 'inline-folded',\n    isWholeLine: true,\n    firstLineDecorationClassName: ThemeIcon.asClassName(foldingManualCollapsedIcon)\n});\nFoldingDecorationProvider.MANUALLY_COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION = ModelDecorationOptions.register({\n    description: 'folding-manually-collapsed-highlighted-visual-decoration',\n    stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n    afterContentClassName: 'inline-folded',\n    className: 'folded-background',\n    minimap: foldedBackgroundMinimap,\n    isWholeLine: true,\n    firstLineDecorationClassName: ThemeIcon.asClassName(foldingManualCollapsedIcon)\n});\nFoldingDecorationProvider.NO_CONTROLS_COLLAPSED_RANGE_DECORATION = ModelDecorationOptions.register({\n    description: 'folding-no-controls-range-decoration',\n    stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n    afterContentClassName: 'inline-folded',\n    isWholeLine: true\n});\nFoldingDecorationProvider.NO_CONTROLS_COLLAPSED_HIGHLIGHTED_RANGE_DECORATION = ModelDecorationOptions.register({\n    description: 'folding-no-controls-range-decoration',\n    stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n    afterContentClassName: 'inline-folded',\n    className: 'folded-background',\n    minimap: foldedBackgroundMinimap,\n    isWholeLine: true\n});\nFoldingDecorationProvider.EXPANDED_VISUAL_DECORATION = ModelDecorationOptions.register({\n    description: 'folding-expanded-visual-decoration',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    isWholeLine: true,\n    firstLineDecorationClassName: 'alwaysShowFoldIcons ' + ThemeIcon.asClassName(foldingExpandedIcon)\n});\nFoldingDecorationProvider.EXPANDED_AUTO_HIDE_VISUAL_DECORATION = ModelDecorationOptions.register({\n    description: 'folding-expanded-auto-hide-visual-decoration',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    isWholeLine: true,\n    firstLineDecorationClassName: ThemeIcon.asClassName(foldingExpandedIcon)\n});\nFoldingDecorationProvider.MANUALLY_EXPANDED_VISUAL_DECORATION = ModelDecorationOptions.register({\n    description: 'folding-manually-expanded-visual-decoration',\n    stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n    isWholeLine: true,\n    firstLineDecorationClassName: 'alwaysShowFoldIcons ' + ThemeIcon.asClassName(foldingManualExpandedIcon)\n});\nFoldingDecorationProvider.MANUALLY_EXPANDED_AUTO_HIDE_VISUAL_DECORATION = ModelDecorationOptions.register({\n    description: 'folding-manually-expanded-auto-hide-visual-decoration',\n    stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n    isWholeLine: true,\n    firstLineDecorationClassName: ThemeIcon.asClassName(foldingManualExpandedIcon)\n});\nFoldingDecorationProvider.NO_CONTROLS_EXPANDED_RANGE_DECORATION = ModelDecorationOptions.register({\n    description: 'folding-no-controls-range-decoration',\n    stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n    isWholeLine: true\n});\nFoldingDecorationProvider.HIDDEN_RANGE_DECORATION = ModelDecorationOptions.register({\n    description: 'folding-hidden-range-decoration',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */\n});\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { FoldingRegions, MAX_LINE_NUMBER } from './foldingRanges.js';\nconst foldingContext = {};\nconst ID_SYNTAX_PROVIDER = 'syntax';\nexport class SyntaxRangeProvider {\n    constructor(editorModel, providers, handleFoldingRangesChange, foldingRangesLimit, fallbackRangeProvider // used when all providers return null\n    ) {\n        this.editorModel = editorModel;\n        this.providers = providers;\n        this.handleFoldingRangesChange = handleFoldingRangesChange;\n        this.foldingRangesLimit = foldingRangesLimit;\n        this.fallbackRangeProvider = fallbackRangeProvider;\n        this.id = ID_SYNTAX_PROVIDER;\n        this.disposables = new DisposableStore();\n        if (fallbackRangeProvider) {\n            this.disposables.add(fallbackRangeProvider);\n        }\n        for (const provider of providers) {\n            if (typeof provider.onDidChange === 'function') {\n                this.disposables.add(provider.onDidChange(handleFoldingRangesChange));\n            }\n        }\n    }\n    compute(cancellationToken) {\n        return collectSyntaxRanges(this.providers, this.editorModel, cancellationToken).then(ranges => {\n            var _a, _b;\n            if (ranges) {\n                const res = sanitizeRanges(ranges, this.foldingRangesLimit);\n                return res;\n            }\n            return (_b = (_a = this.fallbackRangeProvider) === null || _a === void 0 ? void 0 : _a.compute(cancellationToken)) !== null && _b !== void 0 ? _b : null;\n        });\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\nfunction collectSyntaxRanges(providers, model, cancellationToken) {\n    let rangeData = null;\n    const promises = providers.map((provider, i) => {\n        return Promise.resolve(provider.provideFoldingRanges(model, foldingContext, cancellationToken)).then(ranges => {\n            if (cancellationToken.isCancellationRequested) {\n                return;\n            }\n            if (Array.isArray(ranges)) {\n                if (!Array.isArray(rangeData)) {\n                    rangeData = [];\n                }\n                const nLines = model.getLineCount();\n                for (const r of ranges) {\n                    if (r.start > 0 && r.end > r.start && r.end <= nLines) {\n                        rangeData.push({ start: r.start, end: r.end, rank: i, kind: r.kind });\n                    }\n                }\n            }\n        }, onUnexpectedExternalError);\n    });\n    return Promise.all(promises).then(_ => {\n        return rangeData;\n    });\n}\nclass RangesCollector {\n    constructor(foldingRangesLimit) {\n        this._startIndexes = [];\n        this._endIndexes = [];\n        this._nestingLevels = [];\n        this._nestingLevelCounts = [];\n        this._types = [];\n        this._length = 0;\n        this._foldingRangesLimit = foldingRangesLimit;\n    }\n    add(startLineNumber, endLineNumber, type, nestingLevel) {\n        if (startLineNumber > MAX_LINE_NUMBER || endLineNumber > MAX_LINE_NUMBER) {\n            return;\n        }\n        const index = this._length;\n        this._startIndexes[index] = startLineNumber;\n        this._endIndexes[index] = endLineNumber;\n        this._nestingLevels[index] = nestingLevel;\n        this._types[index] = type;\n        this._length++;\n        if (nestingLevel < 30) {\n            this._nestingLevelCounts[nestingLevel] = (this._nestingLevelCounts[nestingLevel] || 0) + 1;\n        }\n    }\n    toIndentRanges() {\n        const limit = this._foldingRangesLimit.limit;\n        if (this._length <= limit) {\n            this._foldingRangesLimit.update(this._length, false);\n            const startIndexes = new Uint32Array(this._length);\n            const endIndexes = new Uint32Array(this._length);\n            for (let i = 0; i < this._length; i++) {\n                startIndexes[i] = this._startIndexes[i];\n                endIndexes[i] = this._endIndexes[i];\n            }\n            return new FoldingRegions(startIndexes, endIndexes, this._types);\n        }\n        else {\n            this._foldingRangesLimit.update(this._length, limit);\n            let entries = 0;\n            let maxLevel = this._nestingLevelCounts.length;\n            for (let i = 0; i < this._nestingLevelCounts.length; i++) {\n                const n = this._nestingLevelCounts[i];\n                if (n) {\n                    if (n + entries > limit) {\n                        maxLevel = i;\n                        break;\n                    }\n                    entries += n;\n                }\n            }\n            const startIndexes = new Uint32Array(limit);\n            const endIndexes = new Uint32Array(limit);\n            const types = [];\n            for (let i = 0, k = 0; i < this._length; i++) {\n                const level = this._nestingLevels[i];\n                if (level < maxLevel || (level === maxLevel && entries++ < limit)) {\n                    startIndexes[k] = this._startIndexes[i];\n                    endIndexes[k] = this._endIndexes[i];\n                    types[k] = this._types[i];\n                    k++;\n                }\n            }\n            return new FoldingRegions(startIndexes, endIndexes, types);\n        }\n    }\n}\nexport function sanitizeRanges(rangeData, foldingRangesLimit) {\n    const sorted = rangeData.sort((d1, d2) => {\n        let diff = d1.start - d2.start;\n        if (diff === 0) {\n            diff = d1.rank - d2.rank;\n        }\n        return diff;\n    });\n    const collector = new RangesCollector(foldingRangesLimit);\n    let top = undefined;\n    const previous = [];\n    for (const entry of sorted) {\n        if (!top) {\n            top = entry;\n            collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\n        }\n        else {\n            if (entry.start > top.start) {\n                if (entry.end <= top.end) {\n                    previous.push(top);\n                    top = entry;\n                    collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\n                }\n                else {\n                    if (entry.start > top.end) {\n                        do {\n                            top = previous.pop();\n                        } while (top && entry.start > top.end);\n                        if (top) {\n                            previous.push(top);\n                        }\n                        top = entry;\n                    }\n                    collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\n                }\n            }\n        }\n    }\n    return collector.toIndentRanges();\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar ReferencesController_1;\nimport { createCancelablePromise } from '../../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../../base/common/errors.js';\nimport { KeyChord } from '../../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { ICodeEditorService } from '../../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { getOuterEditor, PeekContext } from '../../../peekView/browser/peekView.js';\nimport * as nls from '../../../../../nls.js';\nimport { CommandsRegistry } from '../../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IListService, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse, WorkbenchTreeElementCanExpand } from '../../../../../platform/list/browser/listService.js';\nimport { INotificationService } from '../../../../../platform/notification/common/notification.js';\nimport { IStorageService } from '../../../../../platform/storage/common/storage.js';\nimport { OneReference } from '../referencesModel.js';\nimport { LayoutData, ReferenceWidget } from './referencesWidget.js';\nexport const ctxReferenceSearchVisible = new RawContextKey('referenceSearchVisible', false, nls.localize('referenceSearchVisible', \"Whether reference peek is visible, like 'Peek References' or 'Peek Definition'\"));\nlet ReferencesController = ReferencesController_1 = class ReferencesController {\n    static get(editor) {\n        return editor.getContribution(ReferencesController_1.ID);\n    }\n    constructor(_defaultTreeKeyboardSupport, _editor, contextKeyService, _editorService, _notificationService, _instantiationService, _storageService, _configurationService) {\n        this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\n        this._editor = _editor;\n        this._editorService = _editorService;\n        this._notificationService = _notificationService;\n        this._instantiationService = _instantiationService;\n        this._storageService = _storageService;\n        this._configurationService = _configurationService;\n        this._disposables = new DisposableStore();\n        this._requestIdPool = 0;\n        this._ignoreModelChangeEvent = false;\n        this._referenceSearchVisible = ctxReferenceSearchVisible.bindTo(contextKeyService);\n    }\n    dispose() {\n        var _a, _b;\n        this._referenceSearchVisible.reset();\n        this._disposables.dispose();\n        (_a = this._widget) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this._model) === null || _b === void 0 ? void 0 : _b.dispose();\n        this._widget = undefined;\n        this._model = undefined;\n    }\n    toggleWidget(range, modelPromise, peekMode) {\n        // close current widget and return early is position didn't change\n        let widgetPosition;\n        if (this._widget) {\n            widgetPosition = this._widget.position;\n        }\n        this.closeWidget();\n        if (!!widgetPosition && range.containsPosition(widgetPosition)) {\n            return;\n        }\n        this._peekMode = peekMode;\n        this._referenceSearchVisible.set(true);\n        // close the widget on model/mode changes\n        this._disposables.add(this._editor.onDidChangeModelLanguage(() => { this.closeWidget(); }));\n        this._disposables.add(this._editor.onDidChangeModel(() => {\n            if (!this._ignoreModelChangeEvent) {\n                this.closeWidget();\n            }\n        }));\n        const storageKey = 'peekViewLayout';\n        const data = LayoutData.fromJSON(this._storageService.get(storageKey, 0 /* StorageScope.PROFILE */, '{}'));\n        this._widget = this._instantiationService.createInstance(ReferenceWidget, this._editor, this._defaultTreeKeyboardSupport, data);\n        this._widget.setTitle(nls.localize('labelLoading', \"Loading...\"));\n        this._widget.show(range);\n        this._disposables.add(this._widget.onDidClose(() => {\n            modelPromise.cancel();\n            if (this._widget) {\n                this._storageService.store(storageKey, JSON.stringify(this._widget.layoutData), 0 /* StorageScope.PROFILE */, 1 /* StorageTarget.MACHINE */);\n                this._widget = undefined;\n            }\n            this.closeWidget();\n        }));\n        this._disposables.add(this._widget.onDidSelectReference(event => {\n            const { element, kind } = event;\n            if (!element) {\n                return;\n            }\n            switch (kind) {\n                case 'open':\n                    if (event.source !== 'editor' || !this._configurationService.getValue('editor.stablePeek')) {\n                        // when stable peek is configured we don't close\n                        // the peek window on selecting the editor\n                        this.openReference(element, false, false);\n                    }\n                    break;\n                case 'side':\n                    this.openReference(element, true, false);\n                    break;\n                case 'goto':\n                    if (peekMode) {\n                        this._gotoReference(element, true);\n                    }\n                    else {\n                        this.openReference(element, false, true);\n                    }\n                    break;\n            }\n        }));\n        const requestId = ++this._requestIdPool;\n        modelPromise.then(model => {\n            var _a;\n            // still current request? widget still open?\n            if (requestId !== this._requestIdPool || !this._widget) {\n                model.dispose();\n                return undefined;\n            }\n            (_a = this._model) === null || _a === void 0 ? void 0 : _a.dispose();\n            this._model = model;\n            // show widget\n            return this._widget.setModel(this._model).then(() => {\n                if (this._widget && this._model && this._editor.hasModel()) { // might have been closed\n                    // set title\n                    if (!this._model.isEmpty) {\n                        this._widget.setMetaTitle(nls.localize('metaTitle.N', \"{0} ({1})\", this._model.title, this._model.references.length));\n                    }\n                    else {\n                        this._widget.setMetaTitle('');\n                    }\n                    // set 'best' selection\n                    const uri = this._editor.getModel().uri;\n                    const pos = new Position(range.startLineNumber, range.startColumn);\n                    const selection = this._model.nearestReference(uri, pos);\n                    if (selection) {\n                        return this._widget.setSelection(selection).then(() => {\n                            if (this._widget && this._editor.getOption(85 /* EditorOption.peekWidgetDefaultFocus */) === 'editor') {\n                                this._widget.focusOnPreviewEditor();\n                            }\n                        });\n                    }\n                }\n                return undefined;\n            });\n        }, error => {\n            this._notificationService.error(error);\n        });\n    }\n    changeFocusBetweenPreviewAndReferences() {\n        if (!this._widget) {\n            // can be called while still resolving...\n            return;\n        }\n        if (this._widget.isPreviewEditorFocused()) {\n            this._widget.focusOnReferenceTree();\n        }\n        else {\n            this._widget.focusOnPreviewEditor();\n        }\n    }\n    goToNextOrPreviousReference(fwd) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._editor.hasModel() || !this._model || !this._widget) {\n                // can be called while still resolving...\n                return;\n            }\n            const currentPosition = this._widget.position;\n            if (!currentPosition) {\n                return;\n            }\n            const source = this._model.nearestReference(this._editor.getModel().uri, currentPosition);\n            if (!source) {\n                return;\n            }\n            const target = this._model.nextOrPreviousReference(source, fwd);\n            const editorFocus = this._editor.hasTextFocus();\n            const previewEditorFocus = this._widget.isPreviewEditorFocused();\n            yield this._widget.setSelection(target);\n            yield this._gotoReference(target, false);\n            if (editorFocus) {\n                this._editor.focus();\n            }\n            else if (this._widget && previewEditorFocus) {\n                this._widget.focusOnPreviewEditor();\n            }\n        });\n    }\n    revealReference(reference) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._editor.hasModel() || !this._model || !this._widget) {\n                // can be called while still resolving...\n                return;\n            }\n            yield this._widget.revealReference(reference);\n        });\n    }\n    closeWidget(focusEditor = true) {\n        var _a, _b;\n        (_a = this._widget) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this._model) === null || _b === void 0 ? void 0 : _b.dispose();\n        this._referenceSearchVisible.reset();\n        this._disposables.clear();\n        this._widget = undefined;\n        this._model = undefined;\n        if (focusEditor) {\n            this._editor.focus();\n        }\n        this._requestIdPool += 1; // Cancel pending requests\n    }\n    _gotoReference(ref, pinned) {\n        var _a;\n        (_a = this._widget) === null || _a === void 0 ? void 0 : _a.hide();\n        this._ignoreModelChangeEvent = true;\n        const range = Range.lift(ref.range).collapseToStart();\n        return this._editorService.openCodeEditor({\n            resource: ref.uri,\n            options: { selection: range, selectionSource: \"code.jump\" /* TextEditorSelectionSource.JUMP */, pinned }\n        }, this._editor).then(openedEditor => {\n            var _a;\n            this._ignoreModelChangeEvent = false;\n            if (!openedEditor || !this._widget) {\n                // something went wrong...\n                this.closeWidget();\n                return;\n            }\n            if (this._editor === openedEditor) {\n                //\n                this._widget.show(range);\n                this._widget.focusOnReferenceTree();\n            }\n            else {\n                // we opened a different editor instance which means a different controller instance.\n                // therefore we stop with this controller and continue with the other\n                const other = ReferencesController_1.get(openedEditor);\n                const model = this._model.clone();\n                this.closeWidget();\n                openedEditor.focus();\n                other === null || other === void 0 ? void 0 : other.toggleWidget(range, createCancelablePromise(_ => Promise.resolve(model)), (_a = this._peekMode) !== null && _a !== void 0 ? _a : false);\n            }\n        }, (err) => {\n            this._ignoreModelChangeEvent = false;\n            onUnexpectedError(err);\n        });\n    }\n    openReference(ref, sideBySide, pinned) {\n        // clear stage\n        if (!sideBySide) {\n            this.closeWidget();\n        }\n        const { uri, range } = ref;\n        this._editorService.openCodeEditor({\n            resource: uri,\n            options: { selection: range, selectionSource: \"code.jump\" /* TextEditorSelectionSource.JUMP */, pinned }\n        }, this._editor, sideBySide);\n    }\n};\nReferencesController.ID = 'editor.contrib.referencesController';\nReferencesController = ReferencesController_1 = __decorate([\n    __param(2, IContextKeyService),\n    __param(3, ICodeEditorService),\n    __param(4, INotificationService),\n    __param(5, IInstantiationService),\n    __param(6, IStorageService),\n    __param(7, IConfigurationService)\n], ReferencesController);\nexport { ReferencesController };\nfunction withController(accessor, fn) {\n    const outerEditor = getOuterEditor(accessor);\n    if (!outerEditor) {\n        return;\n    }\n    const controller = ReferencesController.get(outerEditor);\n    if (controller) {\n        fn(controller);\n    }\n}\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'togglePeekWidgetFocus',\n    weight: 100 /* KeybindingWeight.EditorContrib */,\n    primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 60 /* KeyCode.F2 */),\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n    handler(accessor) {\n        withController(accessor, controller => {\n            controller.changeFocusBetweenPreviewAndReferences();\n        });\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'goToNextReference',\n    weight: 100 /* KeybindingWeight.EditorContrib */ - 10,\n    primary: 62 /* KeyCode.F4 */,\n    secondary: [70 /* KeyCode.F12 */],\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n    handler(accessor) {\n        withController(accessor, controller => {\n            controller.goToNextOrPreviousReference(true);\n        });\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'goToPreviousReference',\n    weight: 100 /* KeybindingWeight.EditorContrib */ - 10,\n    primary: 1024 /* KeyMod.Shift */ | 62 /* KeyCode.F4 */,\n    secondary: [1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */],\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n    handler(accessor) {\n        withController(accessor, controller => {\n            controller.goToNextOrPreviousReference(false);\n        });\n    }\n});\n// commands that aren't needed anymore because there is now ContextKeyExpr.OR\nCommandsRegistry.registerCommandAlias('goToNextReferenceFromEmbeddedEditor', 'goToNextReference');\nCommandsRegistry.registerCommandAlias('goToPreviousReferenceFromEmbeddedEditor', 'goToPreviousReference');\n// close\nCommandsRegistry.registerCommandAlias('closeReferenceSearchEditor', 'closeReferenceSearch');\nCommandsRegistry.registerCommand('closeReferenceSearch', accessor => withController(accessor, controller => controller.closeWidget()));\nKeybindingsRegistry.registerKeybindingRule({\n    id: 'closeReferenceSearch',\n    weight: 100 /* KeybindingWeight.EditorContrib */ - 101,\n    primary: 9 /* KeyCode.Escape */,\n    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */],\n    when: ContextKeyExpr.and(PeekContext.inPeekEditor, ContextKeyExpr.not('config.editor.stablePeek'))\n});\nKeybindingsRegistry.registerKeybindingRule({\n    id: 'closeReferenceSearch',\n    weight: 200 /* KeybindingWeight.WorkbenchContrib */ + 50,\n    primary: 9 /* KeyCode.Escape */,\n    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */],\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, ContextKeyExpr.not('config.editor.stablePeek'))\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'revealReference',\n    weight: 200 /* KeybindingWeight.WorkbenchContrib */,\n    primary: 3 /* KeyCode.Enter */,\n    mac: {\n        primary: 3 /* KeyCode.Enter */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */]\n    },\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse.negate(), WorkbenchTreeElementCanExpand.negate()),\n    handler(accessor) {\n        var _a;\n        const listService = accessor.get(IListService);\n        const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\n        if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n            withController(accessor, controller => controller.revealReference(focus[0]));\n        }\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'openReferenceToSide',\n    weight: 100 /* KeybindingWeight.EditorContrib */,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n    mac: {\n        primary: 256 /* KeyMod.WinCtrl */ | 3 /* KeyCode.Enter */\n    },\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse.negate(), WorkbenchTreeElementCanExpand.negate()),\n    handler(accessor) {\n        var _a;\n        const listService = accessor.get(IListService);\n        const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\n        if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n            withController(accessor, controller => controller.openReference(focus[0], true, true));\n        }\n    }\n});\nCommandsRegistry.registerCommand('openReference', (accessor) => {\n    var _a;\n    const listService = accessor.get(IListService);\n    const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\n    if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n        withController(accessor, controller => controller.openReference(focus[0], false, true));\n    }\n});\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { defaultGenerator } from '../../../../base/common/idGenerator.js';\nimport { dispose } from '../../../../base/common/lifecycle.js';\nimport { ResourceMap } from '../../../../base/common/map.js';\nimport { basename, extUri } from '../../../../base/common/resources.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { localize } from '../../../../nls.js';\nexport class OneReference {\n    constructor(isProviderFirst, parent, link, _rangeCallback) {\n        this.isProviderFirst = isProviderFirst;\n        this.parent = parent;\n        this.link = link;\n        this._rangeCallback = _rangeCallback;\n        this.id = defaultGenerator.nextId();\n    }\n    get uri() {\n        return this.link.uri;\n    }\n    get range() {\n        var _a, _b;\n        return (_b = (_a = this._range) !== null && _a !== void 0 ? _a : this.link.targetSelectionRange) !== null && _b !== void 0 ? _b : this.link.range;\n    }\n    set range(value) {\n        this._range = value;\n        this._rangeCallback(this);\n    }\n    get ariaMessage() {\n        var _a;\n        const preview = (_a = this.parent.getPreview(this)) === null || _a === void 0 ? void 0 : _a.preview(this.range);\n        if (!preview) {\n            return localize('aria.oneReference', \"in {0} on line {1} at column {2}\", basename(this.uri), this.range.startLineNumber, this.range.startColumn);\n        }\n        else {\n            return localize({ key: 'aria.oneReference.preview', comment: ['Placeholders are: 0: filename, 1:line number, 2: column number, 3: preview snippet of source code'] }, \"{0} in {1} on line {2} at column {3}\", preview.value, basename(this.uri), this.range.startLineNumber, this.range.startColumn);\n        }\n    }\n}\nexport class FilePreview {\n    constructor(_modelReference) {\n        this._modelReference = _modelReference;\n    }\n    dispose() {\n        this._modelReference.dispose();\n    }\n    preview(range, n = 8) {\n        const model = this._modelReference.object.textEditorModel;\n        if (!model) {\n            return undefined;\n        }\n        const { startLineNumber, startColumn, endLineNumber, endColumn } = range;\n        const word = model.getWordUntilPosition({ lineNumber: startLineNumber, column: startColumn - n });\n        const beforeRange = new Range(startLineNumber, word.startColumn, startLineNumber, startColumn);\n        const afterRange = new Range(endLineNumber, endColumn, endLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        const before = model.getValueInRange(beforeRange).replace(/^\\s+/, '');\n        const inside = model.getValueInRange(range);\n        const after = model.getValueInRange(afterRange).replace(/\\s+$/, '');\n        return {\n            value: before + inside + after,\n            highlight: { start: before.length, end: before.length + inside.length }\n        };\n    }\n}\nexport class FileReferences {\n    constructor(parent, uri) {\n        this.parent = parent;\n        this.uri = uri;\n        this.children = [];\n        this._previews = new ResourceMap();\n    }\n    dispose() {\n        dispose(this._previews.values());\n        this._previews.clear();\n    }\n    getPreview(child) {\n        return this._previews.get(child.uri);\n    }\n    get ariaMessage() {\n        const len = this.children.length;\n        if (len === 1) {\n            return localize('aria.fileReferences.1', \"1 symbol in {0}, full path {1}\", basename(this.uri), this.uri.fsPath);\n        }\n        else {\n            return localize('aria.fileReferences.N', \"{0} symbols in {1}, full path {2}\", len, basename(this.uri), this.uri.fsPath);\n        }\n    }\n    resolve(textModelResolverService) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._previews.size !== 0) {\n                return this;\n            }\n            for (const child of this.children) {\n                if (this._previews.has(child.uri)) {\n                    continue;\n                }\n                try {\n                    const ref = yield textModelResolverService.createModelReference(child.uri);\n                    this._previews.set(child.uri, new FilePreview(ref));\n                }\n                catch (err) {\n                    onUnexpectedError(err);\n                }\n            }\n            return this;\n        });\n    }\n}\nexport class ReferencesModel {\n    constructor(links, title) {\n        this.groups = [];\n        this.references = [];\n        this._onDidChangeReferenceRange = new Emitter();\n        this.onDidChangeReferenceRange = this._onDidChangeReferenceRange.event;\n        this._links = links;\n        this._title = title;\n        // grouping and sorting\n        const [providersFirst] = links;\n        links.sort(ReferencesModel._compareReferences);\n        let current;\n        for (const link of links) {\n            if (!current || !extUri.isEqual(current.uri, link.uri, true)) {\n                // new group\n                current = new FileReferences(this, link.uri);\n                this.groups.push(current);\n            }\n            // append, check for equality first!\n            if (current.children.length === 0 || ReferencesModel._compareReferences(link, current.children[current.children.length - 1]) !== 0) {\n                const oneRef = new OneReference(providersFirst === link, current, link, ref => this._onDidChangeReferenceRange.fire(ref));\n                this.references.push(oneRef);\n                current.children.push(oneRef);\n            }\n        }\n    }\n    dispose() {\n        dispose(this.groups);\n        this._onDidChangeReferenceRange.dispose();\n        this.groups.length = 0;\n    }\n    clone() {\n        return new ReferencesModel(this._links, this._title);\n    }\n    get title() {\n        return this._title;\n    }\n    get isEmpty() {\n        return this.groups.length === 0;\n    }\n    get ariaMessage() {\n        if (this.isEmpty) {\n            return localize('aria.result.0', \"No results found\");\n        }\n        else if (this.references.length === 1) {\n            return localize('aria.result.1', \"Found 1 symbol in {0}\", this.references[0].uri.fsPath);\n        }\n        else if (this.groups.length === 1) {\n            return localize('aria.result.n1', \"Found {0} symbols in {1}\", this.references.length, this.groups[0].uri.fsPath);\n        }\n        else {\n            return localize('aria.result.nm', \"Found {0} symbols in {1} files\", this.references.length, this.groups.length);\n        }\n    }\n    nextOrPreviousReference(reference, next) {\n        const { parent } = reference;\n        let idx = parent.children.indexOf(reference);\n        const childCount = parent.children.length;\n        const groupCount = parent.parent.groups.length;\n        if (groupCount === 1 || next && idx + 1 < childCount || !next && idx > 0) {\n            // cycling within one file\n            if (next) {\n                idx = (idx + 1) % childCount;\n            }\n            else {\n                idx = (idx + childCount - 1) % childCount;\n            }\n            return parent.children[idx];\n        }\n        idx = parent.parent.groups.indexOf(parent);\n        if (next) {\n            idx = (idx + 1) % groupCount;\n            return parent.parent.groups[idx].children[0];\n        }\n        else {\n            idx = (idx + groupCount - 1) % groupCount;\n            return parent.parent.groups[idx].children[parent.parent.groups[idx].children.length - 1];\n        }\n    }\n    nearestReference(resource, position) {\n        const nearest = this.references.map((ref, idx) => {\n            return {\n                idx,\n                prefixLen: strings.commonPrefixLength(ref.uri.toString(), resource.toString()),\n                offsetDist: Math.abs(ref.range.startLineNumber - position.lineNumber) * 100 + Math.abs(ref.range.startColumn - position.column)\n            };\n        }).sort((a, b) => {\n            if (a.prefixLen > b.prefixLen) {\n                return -1;\n            }\n            else if (a.prefixLen < b.prefixLen) {\n                return 1;\n            }\n            else if (a.offsetDist < b.offsetDist) {\n                return -1;\n            }\n            else if (a.offsetDist > b.offsetDist) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        })[0];\n        if (nearest) {\n            return this.references[nearest.idx];\n        }\n        return undefined;\n    }\n    referenceAt(resource, position) {\n        for (const ref of this.references) {\n            if (ref.uri.toString() === resource.toString()) {\n                if (Range.containsPosition(ref.range, position)) {\n                    return ref;\n                }\n            }\n        }\n        return undefined;\n    }\n    firstReference() {\n        for (const ref of this.references) {\n            if (ref.isProviderFirst) {\n                return ref;\n            }\n        }\n        return this.references[0];\n    }\n    static _compareReferences(a, b) {\n        return extUri.compare(a.uri, b.uri) || Range.compareRangesUsingStarts(a.range, b.range);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { Sizing, SplitView } from '../../../../../base/browser/ui/splitview/splitview.js';\nimport { Color } from '../../../../../base/common/color.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { DisposableStore, dispose } from '../../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport { basenameOrAuthority, dirname } from '../../../../../base/common/resources.js';\nimport './referencesWidget.css';\nimport { EmbeddedCodeEditorWidget } from '../../../../browser/widget/embeddedCodeEditorWidget.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { ModelDecorationOptions, TextModel } from '../../../../common/model/textModel.js';\nimport { ILanguageConfigurationService } from '../../../../common/languages/languageConfigurationRegistry.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../../../../common/languages/modesRegistry.js';\nimport { ILanguageService } from '../../../../common/languages/language.js';\nimport { ITextModelService } from '../../../../common/services/resolverService.js';\nimport { AccessibilityProvider, DataSource, Delegate, FileReferencesRenderer, IdentityProvider, OneReferenceRenderer, StringRepresentationProvider } from './referencesTree.js';\nimport * as peekView from '../../../peekView/browser/peekView.js';\nimport * as nls from '../../../../../nls.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { WorkbenchAsyncDataTree } from '../../../../../platform/list/browser/listService.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { IUndoRedoService } from '../../../../../platform/undoRedo/common/undoRedo.js';\nimport { FileReferences, OneReference } from '../referencesModel.js';\nclass DecorationsManager {\n    constructor(_editor, _model) {\n        this._editor = _editor;\n        this._model = _model;\n        this._decorations = new Map();\n        this._decorationIgnoreSet = new Set();\n        this._callOnDispose = new DisposableStore();\n        this._callOnModelChange = new DisposableStore();\n        this._callOnDispose.add(this._editor.onDidChangeModel(() => this._onModelChanged()));\n        this._onModelChanged();\n    }\n    dispose() {\n        this._callOnModelChange.dispose();\n        this._callOnDispose.dispose();\n        this.removeDecorations();\n    }\n    _onModelChanged() {\n        this._callOnModelChange.clear();\n        const model = this._editor.getModel();\n        if (!model) {\n            return;\n        }\n        for (const ref of this._model.references) {\n            if (ref.uri.toString() === model.uri.toString()) {\n                this._addDecorations(ref.parent);\n                return;\n            }\n        }\n    }\n    _addDecorations(reference) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        this._callOnModelChange.add(this._editor.getModel().onDidChangeDecorations(() => this._onDecorationChanged()));\n        const newDecorations = [];\n        const newDecorationsActualIndex = [];\n        for (let i = 0, len = reference.children.length; i < len; i++) {\n            const oneReference = reference.children[i];\n            if (this._decorationIgnoreSet.has(oneReference.id)) {\n                continue;\n            }\n            if (oneReference.uri.toString() !== this._editor.getModel().uri.toString()) {\n                continue;\n            }\n            newDecorations.push({\n                range: oneReference.range,\n                options: DecorationsManager.DecorationOptions\n            });\n            newDecorationsActualIndex.push(i);\n        }\n        this._editor.changeDecorations((changeAccessor) => {\n            const decorations = changeAccessor.deltaDecorations([], newDecorations);\n            for (let i = 0; i < decorations.length; i++) {\n                this._decorations.set(decorations[i], reference.children[newDecorationsActualIndex[i]]);\n            }\n        });\n    }\n    _onDecorationChanged() {\n        const toRemove = [];\n        const model = this._editor.getModel();\n        if (!model) {\n            return;\n        }\n        for (const [decorationId, reference] of this._decorations) {\n            const newRange = model.getDecorationRange(decorationId);\n            if (!newRange) {\n                continue;\n            }\n            let ignore = false;\n            if (Range.equalsRange(newRange, reference.range)) {\n                continue;\n            }\n            if (Range.spansMultipleLines(newRange)) {\n                ignore = true;\n            }\n            else {\n                const lineLength = reference.range.endColumn - reference.range.startColumn;\n                const newLineLength = newRange.endColumn - newRange.startColumn;\n                if (lineLength !== newLineLength) {\n                    ignore = true;\n                }\n            }\n            if (ignore) {\n                this._decorationIgnoreSet.add(reference.id);\n                toRemove.push(decorationId);\n            }\n            else {\n                reference.range = newRange;\n            }\n        }\n        for (let i = 0, len = toRemove.length; i < len; i++) {\n            this._decorations.delete(toRemove[i]);\n        }\n        this._editor.removeDecorations(toRemove);\n    }\n    removeDecorations() {\n        this._editor.removeDecorations([...this._decorations.keys()]);\n        this._decorations.clear();\n    }\n}\nDecorationsManager.DecorationOptions = ModelDecorationOptions.register({\n    description: 'reference-decoration',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'reference-decoration'\n});\nexport class LayoutData {\n    constructor() {\n        this.ratio = 0.7;\n        this.heightInLines = 18;\n    }\n    static fromJSON(raw) {\n        let ratio;\n        let heightInLines;\n        try {\n            const data = JSON.parse(raw);\n            ratio = data.ratio;\n            heightInLines = data.heightInLines;\n        }\n        catch (_a) {\n            //\n        }\n        return {\n            ratio: ratio || 0.7,\n            heightInLines: heightInLines || 18\n        };\n    }\n}\nclass ReferencesTree extends WorkbenchAsyncDataTree {\n}\n/**\n * ZoneWidget that is shown inside the editor\n */\nlet ReferenceWidget = class ReferenceWidget extends peekView.PeekViewWidget {\n    constructor(editor, _defaultTreeKeyboardSupport, layoutData, themeService, _textModelResolverService, _instantiationService, _peekViewService, _uriLabel, _undoRedoService, _keybindingService, _languageService, _languageConfigurationService) {\n        super(editor, { showFrame: false, showArrow: true, isResizeable: true, isAccessible: true, supportOnTitleClick: true }, _instantiationService);\n        this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\n        this.layoutData = layoutData;\n        this._textModelResolverService = _textModelResolverService;\n        this._instantiationService = _instantiationService;\n        this._peekViewService = _peekViewService;\n        this._uriLabel = _uriLabel;\n        this._undoRedoService = _undoRedoService;\n        this._keybindingService = _keybindingService;\n        this._languageService = _languageService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._disposeOnNewModel = new DisposableStore();\n        this._callOnDispose = new DisposableStore();\n        this._onDidSelectReference = new Emitter();\n        this.onDidSelectReference = this._onDidSelectReference.event;\n        this._dim = new dom.Dimension(0, 0);\n        this._applyTheme(themeService.getColorTheme());\n        this._callOnDispose.add(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\n        this._peekViewService.addExclusiveWidget(editor, this);\n        this.create();\n    }\n    dispose() {\n        this.setModel(undefined);\n        this._callOnDispose.dispose();\n        this._disposeOnNewModel.dispose();\n        dispose(this._preview);\n        dispose(this._previewNotAvailableMessage);\n        dispose(this._tree);\n        dispose(this._previewModelReference);\n        this._splitView.dispose();\n        super.dispose();\n    }\n    _applyTheme(theme) {\n        const borderColor = theme.getColor(peekView.peekViewBorder) || Color.transparent;\n        this.style({\n            arrowColor: borderColor,\n            frameColor: borderColor,\n            headerBackgroundColor: theme.getColor(peekView.peekViewTitleBackground) || Color.transparent,\n            primaryHeadingColor: theme.getColor(peekView.peekViewTitleForeground),\n            secondaryHeadingColor: theme.getColor(peekView.peekViewTitleInfoForeground)\n        });\n    }\n    show(where) {\n        super.show(where, this.layoutData.heightInLines || 18);\n    }\n    focusOnReferenceTree() {\n        this._tree.domFocus();\n    }\n    focusOnPreviewEditor() {\n        this._preview.focus();\n    }\n    isPreviewEditorFocused() {\n        return this._preview.hasTextFocus();\n    }\n    _onTitleClick(e) {\n        if (this._preview && this._preview.getModel()) {\n            this._onDidSelectReference.fire({\n                element: this._getFocusedReference(),\n                kind: e.ctrlKey || e.metaKey || e.altKey ? 'side' : 'open',\n                source: 'title'\n            });\n        }\n    }\n    _fillBody(containerElement) {\n        this.setCssClass('reference-zone-widget');\n        // message pane\n        this._messageContainer = dom.append(containerElement, dom.$('div.messages'));\n        dom.hide(this._messageContainer);\n        this._splitView = new SplitView(containerElement, { orientation: 1 /* Orientation.HORIZONTAL */ });\n        // editor\n        this._previewContainer = dom.append(containerElement, dom.$('div.preview.inline'));\n        const options = {\n            scrollBeyondLastLine: false,\n            scrollbar: {\n                verticalScrollbarSize: 14,\n                horizontal: 'auto',\n                useShadows: true,\n                verticalHasArrows: false,\n                horizontalHasArrows: false,\n                alwaysConsumeMouseWheel: true\n            },\n            overviewRulerLanes: 2,\n            fixedOverflowWidgets: true,\n            minimap: {\n                enabled: false\n            }\n        };\n        this._preview = this._instantiationService.createInstance(EmbeddedCodeEditorWidget, this._previewContainer, options, {}, this.editor);\n        dom.hide(this._previewContainer);\n        this._previewNotAvailableMessage = new TextModel(nls.localize('missingPreviewMessage', \"no preview available\"), PLAINTEXT_LANGUAGE_ID, TextModel.DEFAULT_CREATION_OPTIONS, null, this._undoRedoService, this._languageService, this._languageConfigurationService);\n        // tree\n        this._treeContainer = dom.append(containerElement, dom.$('div.ref-tree.inline'));\n        const treeOptions = {\n            keyboardSupport: this._defaultTreeKeyboardSupport,\n            accessibilityProvider: new AccessibilityProvider(),\n            keyboardNavigationLabelProvider: this._instantiationService.createInstance(StringRepresentationProvider),\n            identityProvider: new IdentityProvider(),\n            openOnSingleClick: true,\n            selectionNavigation: true,\n            overrideStyles: {\n                listBackground: peekView.peekViewResultsBackground\n            }\n        };\n        if (this._defaultTreeKeyboardSupport) {\n            // the tree will consume `Escape` and prevent the widget from closing\n            this._callOnDispose.add(dom.addStandardDisposableListener(this._treeContainer, 'keydown', (e) => {\n                if (e.equals(9 /* KeyCode.Escape */)) {\n                    this._keybindingService.dispatchEvent(e, e.target);\n                    e.stopPropagation();\n                }\n            }, true));\n        }\n        this._tree = this._instantiationService.createInstance(ReferencesTree, 'ReferencesWidget', this._treeContainer, new Delegate(), [\n            this._instantiationService.createInstance(FileReferencesRenderer),\n            this._instantiationService.createInstance(OneReferenceRenderer),\n        ], this._instantiationService.createInstance(DataSource), treeOptions);\n        // split stuff\n        this._splitView.addView({\n            onDidChange: Event.None,\n            element: this._previewContainer,\n            minimumSize: 200,\n            maximumSize: Number.MAX_VALUE,\n            layout: (width) => {\n                this._preview.layout({ height: this._dim.height, width });\n            }\n        }, Sizing.Distribute);\n        this._splitView.addView({\n            onDidChange: Event.None,\n            element: this._treeContainer,\n            minimumSize: 100,\n            maximumSize: Number.MAX_VALUE,\n            layout: (width) => {\n                this._treeContainer.style.height = `${this._dim.height}px`;\n                this._treeContainer.style.width = `${width}px`;\n                this._tree.layout(this._dim.height, width);\n            }\n        }, Sizing.Distribute);\n        this._disposables.add(this._splitView.onDidSashChange(() => {\n            if (this._dim.width) {\n                this.layoutData.ratio = this._splitView.getViewSize(0) / this._dim.width;\n            }\n        }, undefined));\n        // listen on selection and focus\n        const onEvent = (element, kind) => {\n            if (element instanceof OneReference) {\n                if (kind === 'show') {\n                    this._revealReference(element, false);\n                }\n                this._onDidSelectReference.fire({ element, kind, source: 'tree' });\n            }\n        };\n        this._tree.onDidOpen(e => {\n            if (e.sideBySide) {\n                onEvent(e.element, 'side');\n            }\n            else if (e.editorOptions.pinned) {\n                onEvent(e.element, 'goto');\n            }\n            else {\n                onEvent(e.element, 'show');\n            }\n        });\n        dom.hide(this._treeContainer);\n    }\n    _onWidth(width) {\n        if (this._dim) {\n            this._doLayoutBody(this._dim.height, width);\n        }\n    }\n    _doLayoutBody(heightInPixel, widthInPixel) {\n        super._doLayoutBody(heightInPixel, widthInPixel);\n        this._dim = new dom.Dimension(widthInPixel, heightInPixel);\n        this.layoutData.heightInLines = this._viewZone ? this._viewZone.heightInLines : this.layoutData.heightInLines;\n        this._splitView.layout(widthInPixel);\n        this._splitView.resizeView(0, widthInPixel * this.layoutData.ratio);\n    }\n    setSelection(selection) {\n        return this._revealReference(selection, true).then(() => {\n            if (!this._model) {\n                // disposed\n                return;\n            }\n            // show in tree\n            this._tree.setSelection([selection]);\n            this._tree.setFocus([selection]);\n        });\n    }\n    setModel(newModel) {\n        // clean up\n        this._disposeOnNewModel.clear();\n        this._model = newModel;\n        if (this._model) {\n            return this._onNewModel();\n        }\n        return Promise.resolve();\n    }\n    _onNewModel() {\n        if (!this._model) {\n            return Promise.resolve(undefined);\n        }\n        if (this._model.isEmpty) {\n            this.setTitle('');\n            this._messageContainer.innerText = nls.localize('noResults', \"No results\");\n            dom.show(this._messageContainer);\n            return Promise.resolve(undefined);\n        }\n        dom.hide(this._messageContainer);\n        this._decorationsManager = new DecorationsManager(this._preview, this._model);\n        this._disposeOnNewModel.add(this._decorationsManager);\n        // listen on model changes\n        this._disposeOnNewModel.add(this._model.onDidChangeReferenceRange(reference => this._tree.rerender(reference)));\n        // listen on editor\n        this._disposeOnNewModel.add(this._preview.onMouseDown(e => {\n            const { event, target } = e;\n            if (event.detail !== 2) {\n                return;\n            }\n            const element = this._getFocusedReference();\n            if (!element) {\n                return;\n            }\n            this._onDidSelectReference.fire({\n                element: { uri: element.uri, range: target.range },\n                kind: (event.ctrlKey || event.metaKey || event.altKey) ? 'side' : 'open',\n                source: 'editor'\n            });\n        }));\n        // make sure things are rendered\n        this.container.classList.add('results-loaded');\n        dom.show(this._treeContainer);\n        dom.show(this._previewContainer);\n        this._splitView.layout(this._dim.width);\n        this.focusOnReferenceTree();\n        // pick input and a reference to begin with\n        return this._tree.setInput(this._model.groups.length === 1 ? this._model.groups[0] : this._model);\n    }\n    _getFocusedReference() {\n        const [element] = this._tree.getFocus();\n        if (element instanceof OneReference) {\n            return element;\n        }\n        else if (element instanceof FileReferences) {\n            if (element.children.length > 0) {\n                return element.children[0];\n            }\n        }\n        return undefined;\n    }\n    revealReference(reference) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._revealReference(reference, false);\n            this._onDidSelectReference.fire({ element: reference, kind: 'goto', source: 'tree' });\n        });\n    }\n    _revealReference(reference, revealParent) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // check if there is anything to do...\n            if (this._revealedReference === reference) {\n                return;\n            }\n            this._revealedReference = reference;\n            // Update widget header\n            if (reference.uri.scheme !== Schemas.inMemory) {\n                this.setTitle(basenameOrAuthority(reference.uri), this._uriLabel.getUriLabel(dirname(reference.uri)));\n            }\n            else {\n                this.setTitle(nls.localize('peekView.alternateTitle', \"References\"));\n            }\n            const promise = this._textModelResolverService.createModelReference(reference.uri);\n            if (this._tree.getInput() === reference.parent) {\n                this._tree.reveal(reference);\n            }\n            else {\n                if (revealParent) {\n                    this._tree.reveal(reference.parent);\n                }\n                yield this._tree.expand(reference.parent);\n                this._tree.reveal(reference);\n            }\n            const ref = yield promise;\n            if (!this._model) {\n                // disposed\n                ref.dispose();\n                return;\n            }\n            dispose(this._previewModelReference);\n            // show in editor\n            const model = ref.object;\n            if (model) {\n                const scrollType = this._preview.getModel() === model.textEditorModel ? 0 /* ScrollType.Smooth */ : 1 /* ScrollType.Immediate */;\n                const sel = Range.lift(reference.range).collapseToStart();\n                this._previewModelReference = ref;\n                this._preview.setModel(model.textEditorModel);\n                this._preview.setSelection(sel);\n                this._preview.revealRangeInCenter(sel, scrollType);\n            }\n            else {\n                this._preview.setModel(this._previewNotAvailableMessage);\n                ref.dispose();\n            }\n        });\n    }\n};\nReferenceWidget = __decorate([\n    __param(3, IThemeService),\n    __param(4, ITextModelService),\n    __param(5, IInstantiationService),\n    __param(6, peekView.IPeekViewService),\n    __param(7, ILabelService),\n    __param(8, IUndoRedoService),\n    __param(9, IKeybindingService),\n    __param(10, ILanguageService),\n    __param(11, ILanguageConfigurationService)\n], ReferenceWidget);\nexport { ReferenceWidget };\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar FileReferencesRenderer_1;\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { CountBadge } from '../../../../../base/browser/ui/countBadge/countBadge.js';\nimport { HighlightedLabel } from '../../../../../base/browser/ui/highlightedlabel/highlightedLabel.js';\nimport { IconLabel } from '../../../../../base/browser/ui/iconLabel/iconLabel.js';\nimport { createMatches, FuzzyScore } from '../../../../../base/common/filters.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { basename, dirname } from '../../../../../base/common/resources.js';\nimport { ITextModelService } from '../../../../common/services/resolverService.js';\nimport { localize } from '../../../../../nls.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { defaultCountBadgeStyles } from '../../../../../platform/theme/browser/defaultStyles.js';\nimport { FileReferences, OneReference, ReferencesModel } from '../referencesModel.js';\nlet DataSource = class DataSource {\n    constructor(_resolverService) {\n        this._resolverService = _resolverService;\n    }\n    hasChildren(element) {\n        if (element instanceof ReferencesModel) {\n            return true;\n        }\n        if (element instanceof FileReferences) {\n            return true;\n        }\n        return false;\n    }\n    getChildren(element) {\n        if (element instanceof ReferencesModel) {\n            return element.groups;\n        }\n        if (element instanceof FileReferences) {\n            return element.resolve(this._resolverService).then(val => {\n                // if (element.failure) {\n                // \t// refresh the element on failure so that\n                // \t// we can update its rendering\n                // \treturn tree.refresh(element).then(() => val.children);\n                // }\n                return val.children;\n            });\n        }\n        throw new Error('bad tree');\n    }\n};\nDataSource = __decorate([\n    __param(0, ITextModelService)\n], DataSource);\nexport { DataSource };\n//#endregion\nexport class Delegate {\n    getHeight() {\n        return 23;\n    }\n    getTemplateId(element) {\n        if (element instanceof FileReferences) {\n            return FileReferencesRenderer.id;\n        }\n        else {\n            return OneReferenceRenderer.id;\n        }\n    }\n}\nlet StringRepresentationProvider = class StringRepresentationProvider {\n    constructor(_keybindingService) {\n        this._keybindingService = _keybindingService;\n    }\n    getKeyboardNavigationLabel(element) {\n        var _a;\n        if (element instanceof OneReference) {\n            const parts = (_a = element.parent.getPreview(element)) === null || _a === void 0 ? void 0 : _a.preview(element.range);\n            if (parts) {\n                return parts.value;\n            }\n        }\n        // FileReferences or unresolved OneReference\n        return basename(element.uri);\n    }\n    mightProducePrintableCharacter(event) {\n        return this._keybindingService.mightProducePrintableCharacter(event);\n    }\n};\nStringRepresentationProvider = __decorate([\n    __param(0, IKeybindingService)\n], StringRepresentationProvider);\nexport { StringRepresentationProvider };\nexport class IdentityProvider {\n    getId(element) {\n        return element instanceof OneReference ? element.id : element.uri;\n    }\n}\n//#region render: File\nlet FileReferencesTemplate = class FileReferencesTemplate extends Disposable {\n    constructor(container, _labelService) {\n        super();\n        this._labelService = _labelService;\n        const parent = document.createElement('div');\n        parent.classList.add('reference-file');\n        this.file = this._register(new IconLabel(parent, { supportHighlights: true }));\n        this.badge = new CountBadge(dom.append(parent, dom.$('.count')), {}, defaultCountBadgeStyles);\n        container.appendChild(parent);\n    }\n    set(element, matches) {\n        const parent = dirname(element.uri);\n        this.file.setLabel(this._labelService.getUriBasenameLabel(element.uri), this._labelService.getUriLabel(parent, { relative: true }), { title: this._labelService.getUriLabel(element.uri), matches });\n        const len = element.children.length;\n        this.badge.setCount(len);\n        if (len > 1) {\n            this.badge.setTitleFormat(localize('referencesCount', \"{0} references\", len));\n        }\n        else {\n            this.badge.setTitleFormat(localize('referenceCount', \"{0} reference\", len));\n        }\n    }\n};\nFileReferencesTemplate = __decorate([\n    __param(1, ILabelService)\n], FileReferencesTemplate);\nlet FileReferencesRenderer = FileReferencesRenderer_1 = class FileReferencesRenderer {\n    constructor(_instantiationService) {\n        this._instantiationService = _instantiationService;\n        this.templateId = FileReferencesRenderer_1.id;\n    }\n    renderTemplate(container) {\n        return this._instantiationService.createInstance(FileReferencesTemplate, container);\n    }\n    renderElement(node, index, template) {\n        template.set(node.element, createMatches(node.filterData));\n    }\n    disposeTemplate(templateData) {\n        templateData.dispose();\n    }\n};\nFileReferencesRenderer.id = 'FileReferencesRenderer';\nFileReferencesRenderer = FileReferencesRenderer_1 = __decorate([\n    __param(0, IInstantiationService)\n], FileReferencesRenderer);\nexport { FileReferencesRenderer };\n//#endregion\n//#region render: Reference\nclass OneReferenceTemplate {\n    constructor(container) {\n        this.label = new HighlightedLabel(container);\n    }\n    set(element, score) {\n        var _a;\n        const preview = (_a = element.parent.getPreview(element)) === null || _a === void 0 ? void 0 : _a.preview(element.range);\n        if (!preview || !preview.value) {\n            // this means we FAILED to resolve the document or the value is the empty string\n            this.label.set(`${basename(element.uri)}:${element.range.startLineNumber + 1}:${element.range.startColumn + 1}`);\n        }\n        else {\n            // render search match as highlight unless\n            // we have score, then render the score\n            const { value, highlight } = preview;\n            if (score && !FuzzyScore.isDefault(score)) {\n                this.label.element.classList.toggle('referenceMatch', false);\n                this.label.set(value, createMatches(score));\n            }\n            else {\n                this.label.element.classList.toggle('referenceMatch', true);\n                this.label.set(value, [highlight]);\n            }\n        }\n    }\n}\nexport class OneReferenceRenderer {\n    constructor() {\n        this.templateId = OneReferenceRenderer.id;\n    }\n    renderTemplate(container) {\n        return new OneReferenceTemplate(container);\n    }\n    renderElement(node, index, templateData) {\n        templateData.set(node.element, node.filterData);\n    }\n    disposeTemplate() {\n    }\n}\nOneReferenceRenderer.id = 'OneReferenceRenderer';\n//#endregion\nexport class AccessibilityProvider {\n    getWidgetAriaLabel() {\n        return localize('treeAriaLabel', \"References\");\n    }\n    getAriaLabel(element) {\n        return element.ariaMessage;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a, _b, _c, _d, _e, _f, _g, _h;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { isCodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction2 } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/embeddedCodeEditorWidget.js';\nimport * as corePosition from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { isLocationLink } from '../../../common/languages.js';\nimport { ReferencesController } from './peek/referencesController.js';\nimport { ReferencesModel } from './referencesModel.js';\nimport { ISymbolNavigationService } from './symbolNavigation.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, MenuRegistry, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { getDeclarationsAtPosition, getDefinitionsAtPosition, getImplementationsAtPosition, getReferencesAtPosition, getTypeDefinitionsAtPosition } from './goToSymbol.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { IsWebContext } from '../../../../platform/contextkey/common/contextkeys.js';\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n    submenu: MenuId.EditorContextPeek,\n    title: nls.localize('peek.submenu', \"Peek\"),\n    group: 'navigation',\n    order: 100\n});\nexport class SymbolNavigationAnchor {\n    static is(thing) {\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        if (thing instanceof SymbolNavigationAnchor) {\n            return true;\n        }\n        if (corePosition.Position.isIPosition(thing.position) && thing.model) {\n            return true;\n        }\n        return false;\n    }\n    constructor(model, position) {\n        this.model = model;\n        this.position = position;\n    }\n}\nexport class SymbolNavigationAction extends EditorAction2 {\n    static all() {\n        return SymbolNavigationAction._allSymbolNavigationCommands.values();\n    }\n    static _patchConfig(opts) {\n        const result = Object.assign(Object.assign({}, opts), { f1: true });\n        // patch context menu when clause\n        if (result.menu) {\n            for (const item of Iterable.wrap(result.menu)) {\n                if (item.id === MenuId.EditorContext || item.id === MenuId.EditorContextPeek) {\n                    item.when = ContextKeyExpr.and(opts.precondition, item.when);\n                }\n            }\n        }\n        return result;\n    }\n    constructor(configuration, opts) {\n        super(SymbolNavigationAction._patchConfig(opts));\n        this.configuration = configuration;\n        SymbolNavigationAction._allSymbolNavigationCommands.set(opts.id, this);\n    }\n    runEditorCommand(accessor, editor, arg, range) {\n        if (!editor.hasModel()) {\n            return Promise.resolve(undefined);\n        }\n        const notificationService = accessor.get(INotificationService);\n        const editorService = accessor.get(ICodeEditorService);\n        const progressService = accessor.get(IEditorProgressService);\n        const symbolNavService = accessor.get(ISymbolNavigationService);\n        const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n        const instaService = accessor.get(IInstantiationService);\n        const model = editor.getModel();\n        const position = editor.getPosition();\n        const anchor = SymbolNavigationAnchor.is(arg) ? arg : new SymbolNavigationAnchor(model, position);\n        const cts = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n        const promise = raceCancellation(this._getLocationModel(languageFeaturesService, anchor.model, anchor.position, cts.token), cts.token).then((references) => __awaiter(this, void 0, void 0, function* () {\n            var _j;\n            if (!references || cts.token.isCancellationRequested) {\n                return;\n            }\n            alert(references.ariaMessage);\n            let altAction;\n            if (references.referenceAt(model.uri, position)) {\n                const altActionId = this._getAlternativeCommand(editor);\n                if (!SymbolNavigationAction._activeAlternativeCommands.has(altActionId) && SymbolNavigationAction._allSymbolNavigationCommands.has(altActionId)) {\n                    altAction = SymbolNavigationAction._allSymbolNavigationCommands.get(altActionId);\n                }\n            }\n            const referenceCount = references.references.length;\n            if (referenceCount === 0) {\n                // no result -> show message\n                if (!this.configuration.muteMessage) {\n                    const info = model.getWordAtPosition(position);\n                    (_j = MessageController.get(editor)) === null || _j === void 0 ? void 0 : _j.showMessage(this._getNoResultFoundMessage(info), position);\n                }\n            }\n            else if (referenceCount === 1 && altAction) {\n                // already at the only result, run alternative\n                SymbolNavigationAction._activeAlternativeCommands.add(this.desc.id);\n                instaService.invokeFunction((accessor) => altAction.runEditorCommand(accessor, editor, arg, range).finally(() => {\n                    SymbolNavigationAction._activeAlternativeCommands.delete(this.desc.id);\n                }));\n            }\n            else {\n                // normal results handling\n                return this._onResult(editorService, symbolNavService, editor, references, range);\n            }\n        }), (err) => {\n            // report an error\n            notificationService.error(err);\n        }).finally(() => {\n            cts.dispose();\n        });\n        progressService.showWhile(promise, 250);\n        return promise;\n    }\n    _onResult(editorService, symbolNavService, editor, model, range) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const gotoLocation = this._getGoToPreference(editor);\n            if (!(editor instanceof EmbeddedCodeEditorWidget) && (this.configuration.openInPeek || (gotoLocation === 'peek' && model.references.length > 1))) {\n                this._openInPeek(editor, model, range);\n            }\n            else {\n                const next = model.firstReference();\n                const peek = model.references.length > 1 && gotoLocation === 'gotoAndPeek';\n                const targetEditor = yield this._openReference(editor, editorService, next, this.configuration.openToSide, !peek);\n                if (peek && targetEditor) {\n                    this._openInPeek(targetEditor, model, range);\n                }\n                else {\n                    model.dispose();\n                }\n                // keep remaining locations around when using\n                // 'goto'-mode\n                if (gotoLocation === 'goto') {\n                    symbolNavService.put(next);\n                }\n            }\n        });\n    }\n    _openReference(editor, editorService, reference, sideBySide, highlight) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // range is the target-selection-range when we have one\n            // and the fallback is the 'full' range\n            let range = undefined;\n            if (isLocationLink(reference)) {\n                range = reference.targetSelectionRange;\n            }\n            if (!range) {\n                range = reference.range;\n            }\n            if (!range) {\n                return undefined;\n            }\n            const targetEditor = yield editorService.openCodeEditor({\n                resource: reference.uri,\n                options: {\n                    selection: Range.collapseToStart(range),\n                    selectionRevealType: 3 /* TextEditorSelectionRevealType.NearTopIfOutsideViewport */,\n                    selectionSource: \"code.jump\" /* TextEditorSelectionSource.JUMP */\n                }\n            }, editor, sideBySide);\n            if (!targetEditor) {\n                return undefined;\n            }\n            if (highlight) {\n                const modelNow = targetEditor.getModel();\n                const decorations = targetEditor.createDecorationsCollection([{ range, options: { description: 'symbol-navigate-action-highlight', className: 'symbolHighlight' } }]);\n                setTimeout(() => {\n                    if (targetEditor.getModel() === modelNow) {\n                        decorations.clear();\n                    }\n                }, 350);\n            }\n            return targetEditor;\n        });\n    }\n    _openInPeek(target, model, range) {\n        const controller = ReferencesController.get(target);\n        if (controller && target.hasModel()) {\n            controller.toggleWidget(range !== null && range !== void 0 ? range : target.getSelection(), createCancelablePromise(_ => Promise.resolve(model)), this.configuration.openInPeek);\n        }\n        else {\n            model.dispose();\n        }\n    }\n}\nSymbolNavigationAction._allSymbolNavigationCommands = new Map();\nSymbolNavigationAction._activeAlternativeCommands = new Set();\n//#region --- DEFINITION\nexport class DefinitionAction extends SymbolNavigationAction {\n    _getLocationModel(languageFeaturesService, model, position, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new ReferencesModel(yield getDefinitionsAtPosition(languageFeaturesService.definitionProvider, model, position, token), nls.localize('def.title', 'Definitions'));\n        });\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('noResultWord', \"No definition found for '{0}'\", info.word)\n            : nls.localize('generic.noResults', \"No definition found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(57 /* EditorOption.gotoLocation */).alternativeDefinitionCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(57 /* EditorOption.gotoLocation */).multipleDefinitions;\n    }\n}\nregisterAction2((_a = class GoToDefinitionAction extends DefinitionAction {\n        constructor() {\n            super({\n                openToSide: false,\n                openInPeek: false,\n                muteMessage: false\n            }, {\n                id: _a.id,\n                title: {\n                    value: nls.localize('actions.goToDecl.label', \"Go to Definition\"),\n                    original: 'Go to Definition',\n                    mnemonicTitle: nls.localize({ key: 'miGotoDefinition', comment: ['&& denotes a mnemonic'] }, \"Go to &&Definition\")\n                },\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n                keybinding: [{\n                        when: EditorContextKeys.editorTextFocus,\n                        primary: 70 /* KeyCode.F12 */,\n                        weight: 100 /* KeybindingWeight.EditorContrib */\n                    }, {\n                        when: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, IsWebContext),\n                        primary: 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */,\n                        weight: 100 /* KeybindingWeight.EditorContrib */\n                    }],\n                menu: [{\n                        id: MenuId.EditorContext,\n                        group: 'navigation',\n                        order: 1.1\n                    }, {\n                        id: MenuId.MenubarGoMenu,\n                        precondition: null,\n                        group: '4_symbol_nav',\n                        order: 2,\n                    }]\n            });\n            CommandsRegistry.registerCommandAlias('editor.action.goToDeclaration', _a.id);\n        }\n    },\n    _a.id = 'editor.action.revealDefinition',\n    _a));\nregisterAction2((_b = class OpenDefinitionToSideAction extends DefinitionAction {\n        constructor() {\n            super({\n                openToSide: true,\n                openInPeek: false,\n                muteMessage: false\n            }, {\n                id: _b.id,\n                title: {\n                    value: nls.localize('actions.goToDeclToSide.label', \"Open Definition to the Side\"),\n                    original: 'Open Definition to the Side'\n                },\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n                keybinding: [{\n                        when: EditorContextKeys.editorTextFocus,\n                        primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 70 /* KeyCode.F12 */),\n                        weight: 100 /* KeybindingWeight.EditorContrib */\n                    }, {\n                        when: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, IsWebContext),\n                        primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */),\n                        weight: 100 /* KeybindingWeight.EditorContrib */\n                    }]\n            });\n            CommandsRegistry.registerCommandAlias('editor.action.openDeclarationToTheSide', _b.id);\n        }\n    },\n    _b.id = 'editor.action.revealDefinitionAside',\n    _b));\nregisterAction2((_c = class PeekDefinitionAction extends DefinitionAction {\n        constructor() {\n            super({\n                openToSide: false,\n                openInPeek: true,\n                muteMessage: false\n            }, {\n                id: _c.id,\n                title: {\n                    value: nls.localize('actions.previewDecl.label', \"Peek Definition\"),\n                    original: 'Peek Definition'\n                },\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n                keybinding: {\n                    when: EditorContextKeys.editorTextFocus,\n                    primary: 512 /* KeyMod.Alt */ | 70 /* KeyCode.F12 */,\n                    linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 68 /* KeyCode.F10 */ },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                },\n                menu: {\n                    id: MenuId.EditorContextPeek,\n                    group: 'peek',\n                    order: 2\n                }\n            });\n            CommandsRegistry.registerCommandAlias('editor.action.previewDeclaration', _c.id);\n        }\n    },\n    _c.id = 'editor.action.peekDefinition',\n    _c));\n//#endregion\n//#region --- DECLARATION\nclass DeclarationAction extends SymbolNavigationAction {\n    _getLocationModel(languageFeaturesService, model, position, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new ReferencesModel(yield getDeclarationsAtPosition(languageFeaturesService.declarationProvider, model, position, token), nls.localize('decl.title', 'Declarations'));\n        });\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word)\n            : nls.localize('decl.generic.noResults', \"No declaration found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(57 /* EditorOption.gotoLocation */).alternativeDeclarationCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(57 /* EditorOption.gotoLocation */).multipleDeclarations;\n    }\n}\nregisterAction2((_d = class GoToDeclarationAction extends DeclarationAction {\n        constructor() {\n            super({\n                openToSide: false,\n                openInPeek: false,\n                muteMessage: false\n            }, {\n                id: _d.id,\n                title: {\n                    value: nls.localize('actions.goToDeclaration.label', \"Go to Declaration\"),\n                    original: 'Go to Declaration',\n                    mnemonicTitle: nls.localize({ key: 'miGotoDeclaration', comment: ['&& denotes a mnemonic'] }, \"Go to &&Declaration\")\n                },\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n                menu: [{\n                        id: MenuId.EditorContext,\n                        group: 'navigation',\n                        order: 1.3\n                    }, {\n                        id: MenuId.MenubarGoMenu,\n                        precondition: null,\n                        group: '4_symbol_nav',\n                        order: 3,\n                    }],\n            });\n        }\n        _getNoResultFoundMessage(info) {\n            return info && info.word\n                ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word)\n                : nls.localize('decl.generic.noResults', \"No declaration found\");\n        }\n    },\n    _d.id = 'editor.action.revealDeclaration',\n    _d));\nregisterAction2(class PeekDeclarationAction extends DeclarationAction {\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: true,\n            muteMessage: false\n        }, {\n            id: 'editor.action.peekDeclaration',\n            title: {\n                value: nls.localize('actions.peekDecl.label', \"Peek Declaration\"),\n                original: 'Peek Declaration'\n            },\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n            menu: {\n                id: MenuId.EditorContextPeek,\n                group: 'peek',\n                order: 3\n            }\n        });\n    }\n});\n//#endregion\n//#region --- TYPE DEFINITION\nclass TypeDefinitionAction extends SymbolNavigationAction {\n    _getLocationModel(languageFeaturesService, model, position, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new ReferencesModel(yield getTypeDefinitionsAtPosition(languageFeaturesService.typeDefinitionProvider, model, position, token), nls.localize('typedef.title', 'Type Definitions'));\n        });\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('goToTypeDefinition.noResultWord', \"No type definition found for '{0}'\", info.word)\n            : nls.localize('goToTypeDefinition.generic.noResults', \"No type definition found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(57 /* EditorOption.gotoLocation */).alternativeTypeDefinitionCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(57 /* EditorOption.gotoLocation */).multipleTypeDefinitions;\n    }\n}\nregisterAction2((_e = class GoToTypeDefinitionAction extends TypeDefinitionAction {\n        constructor() {\n            super({\n                openToSide: false,\n                openInPeek: false,\n                muteMessage: false\n            }, {\n                id: _e.ID,\n                title: {\n                    value: nls.localize('actions.goToTypeDefinition.label', \"Go to Type Definition\"),\n                    original: 'Go to Type Definition',\n                    mnemonicTitle: nls.localize({ key: 'miGotoTypeDefinition', comment: ['&& denotes a mnemonic'] }, \"Go to &&Type Definition\")\n                },\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n                keybinding: {\n                    when: EditorContextKeys.editorTextFocus,\n                    primary: 0,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                },\n                menu: [{\n                        id: MenuId.EditorContext,\n                        group: 'navigation',\n                        order: 1.4\n                    }, {\n                        id: MenuId.MenubarGoMenu,\n                        precondition: null,\n                        group: '4_symbol_nav',\n                        order: 3,\n                    }]\n            });\n        }\n    },\n    _e.ID = 'editor.action.goToTypeDefinition',\n    _e));\nregisterAction2((_f = class PeekTypeDefinitionAction extends TypeDefinitionAction {\n        constructor() {\n            super({\n                openToSide: false,\n                openInPeek: true,\n                muteMessage: false\n            }, {\n                id: _f.ID,\n                title: {\n                    value: nls.localize('actions.peekTypeDefinition.label', \"Peek Type Definition\"),\n                    original: 'Peek Type Definition'\n                },\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n                menu: {\n                    id: MenuId.EditorContextPeek,\n                    group: 'peek',\n                    order: 4\n                }\n            });\n        }\n    },\n    _f.ID = 'editor.action.peekTypeDefinition',\n    _f));\n//#endregion\n//#region --- IMPLEMENTATION\nclass ImplementationAction extends SymbolNavigationAction {\n    _getLocationModel(languageFeaturesService, model, position, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new ReferencesModel(yield getImplementationsAtPosition(languageFeaturesService.implementationProvider, model, position, token), nls.localize('impl.title', 'Implementations'));\n        });\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('goToImplementation.noResultWord', \"No implementation found for '{0}'\", info.word)\n            : nls.localize('goToImplementation.generic.noResults', \"No implementation found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(57 /* EditorOption.gotoLocation */).alternativeImplementationCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(57 /* EditorOption.gotoLocation */).multipleImplementations;\n    }\n}\nregisterAction2((_g = class GoToImplementationAction extends ImplementationAction {\n        constructor() {\n            super({\n                openToSide: false,\n                openInPeek: false,\n                muteMessage: false\n            }, {\n                id: _g.ID,\n                title: {\n                    value: nls.localize('actions.goToImplementation.label', \"Go to Implementations\"),\n                    original: 'Go to Implementations',\n                    mnemonicTitle: nls.localize({ key: 'miGotoImplementation', comment: ['&& denotes a mnemonic'] }, \"Go to &&Implementations\")\n                },\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n                keybinding: {\n                    when: EditorContextKeys.editorTextFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                },\n                menu: [{\n                        id: MenuId.EditorContext,\n                        group: 'navigation',\n                        order: 1.45\n                    }, {\n                        id: MenuId.MenubarGoMenu,\n                        precondition: null,\n                        group: '4_symbol_nav',\n                        order: 4,\n                    }]\n            });\n        }\n    },\n    _g.ID = 'editor.action.goToImplementation',\n    _g));\nregisterAction2((_h = class PeekImplementationAction extends ImplementationAction {\n        constructor() {\n            super({\n                openToSide: false,\n                openInPeek: true,\n                muteMessage: false\n            }, {\n                id: _h.ID,\n                title: {\n                    value: nls.localize('actions.peekImplementation.label', \"Peek Implementations\"),\n                    original: 'Peek Implementations'\n                },\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n                keybinding: {\n                    when: EditorContextKeys.editorTextFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                },\n                menu: {\n                    id: MenuId.EditorContextPeek,\n                    group: 'peek',\n                    order: 5\n                }\n            });\n        }\n    },\n    _h.ID = 'editor.action.peekImplementation',\n    _h));\n//#endregion\n//#region --- REFERENCES\nclass ReferencesAction extends SymbolNavigationAction {\n    _getNoResultFoundMessage(info) {\n        return info\n            ? nls.localize('references.no', \"No references found for '{0}'\", info.word)\n            : nls.localize('references.noGeneric', \"No references found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(57 /* EditorOption.gotoLocation */).alternativeReferenceCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(57 /* EditorOption.gotoLocation */).multipleReferences;\n    }\n}\nregisterAction2(class GoToReferencesAction extends ReferencesAction {\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: 'editor.action.goToReferences',\n            title: {\n                value: nls.localize('goToReferences.label', \"Go to References\"),\n                original: 'Go to References',\n                mnemonicTitle: nls.localize({ key: 'miGotoReference', comment: ['&& denotes a mnemonic'] }, \"Go to &&References\")\n            },\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n            keybinding: {\n                when: EditorContextKeys.editorTextFocus,\n                primary: 1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menu: [{\n                    id: MenuId.EditorContext,\n                    group: 'navigation',\n                    order: 1.45\n                }, {\n                    id: MenuId.MenubarGoMenu,\n                    precondition: null,\n                    group: '4_symbol_nav',\n                    order: 5,\n                }]\n        });\n    }\n    _getLocationModel(languageFeaturesService, model, position, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new ReferencesModel(yield getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, true, token), nls.localize('ref.title', 'References'));\n        });\n    }\n});\nregisterAction2(class PeekReferencesAction extends ReferencesAction {\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: true,\n            muteMessage: false\n        }, {\n            id: 'editor.action.referenceSearch.trigger',\n            title: {\n                value: nls.localize('references.action.label', \"Peek References\"),\n                original: 'Peek References'\n            },\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n            menu: {\n                id: MenuId.EditorContextPeek,\n                group: 'peek',\n                order: 6\n            }\n        });\n    }\n    _getLocationModel(languageFeaturesService, model, position, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new ReferencesModel(yield getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, false, token), nls.localize('ref.title', 'References'));\n        });\n    }\n});\n//#endregion\n//#region --- GENERIC goto symbols command\nclass GenericGoToLocationAction extends SymbolNavigationAction {\n    constructor(config, _references, _gotoMultipleBehaviour) {\n        super(config, {\n            id: 'editor.action.goToLocation',\n            title: {\n                value: nls.localize('label.generic', \"Go to Any Symbol\"),\n                original: 'Go to Any Symbol'\n            },\n            precondition: ContextKeyExpr.and(PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n        });\n        this._references = _references;\n        this._gotoMultipleBehaviour = _gotoMultipleBehaviour;\n    }\n    _getLocationModel(languageFeaturesService, _model, _position, _token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new ReferencesModel(this._references, nls.localize('generic.title', 'Locations'));\n        });\n    }\n    _getNoResultFoundMessage(info) {\n        return info && nls.localize('generic.noResult', \"No results for '{0}'\", info.word) || '';\n    }\n    _getGoToPreference(editor) {\n        var _j;\n        return (_j = this._gotoMultipleBehaviour) !== null && _j !== void 0 ? _j : editor.getOption(57 /* EditorOption.gotoLocation */).multipleReferences;\n    }\n    _getAlternativeCommand() { return ''; }\n}\nCommandsRegistry.registerCommand({\n    id: 'editor.action.goToLocations',\n    description: {\n        description: 'Go to locations from a position in a file',\n        args: [\n            { name: 'uri', description: 'The text document in which to start', constraint: URI },\n            { name: 'position', description: 'The position at which to start', constraint: corePosition.Position.isIPosition },\n            { name: 'locations', description: 'An array of locations.', constraint: Array },\n            { name: 'multiple', description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto' },\n            { name: 'noResultsMessage', description: 'Human readable message that shows when locations is empty.' },\n        ]\n    },\n    handler: (accessor, resource, position, references, multiple, noResultsMessage, openInPeek) => __awaiter(void 0, void 0, void 0, function* () {\n        assertType(URI.isUri(resource));\n        assertType(corePosition.Position.isIPosition(position));\n        assertType(Array.isArray(references));\n        assertType(typeof multiple === 'undefined' || typeof multiple === 'string');\n        assertType(typeof openInPeek === 'undefined' || typeof openInPeek === 'boolean');\n        const editorService = accessor.get(ICodeEditorService);\n        const editor = yield editorService.openCodeEditor({ resource }, editorService.getFocusedCodeEditor());\n        if (isCodeEditor(editor)) {\n            editor.setPosition(position);\n            editor.revealPositionInCenterIfOutsideViewport(position, 0 /* ScrollType.Smooth */);\n            return editor.invokeWithinContext(accessor => {\n                const command = new class extends GenericGoToLocationAction {\n                    _getNoResultFoundMessage(info) {\n                        return noResultsMessage || super._getNoResultFoundMessage(info);\n                    }\n                }({\n                    muteMessage: !Boolean(noResultsMessage),\n                    openInPeek: Boolean(openInPeek),\n                    openToSide: false\n                }, references, multiple);\n                accessor.get(IInstantiationService).invokeFunction(command.run.bind(command), editor);\n            });\n        }\n    })\n});\nCommandsRegistry.registerCommand({\n    id: 'editor.action.peekLocations',\n    description: {\n        description: 'Peek locations from a position in a file',\n        args: [\n            { name: 'uri', description: 'The text document in which to start', constraint: URI },\n            { name: 'position', description: 'The position at which to start', constraint: corePosition.Position.isIPosition },\n            { name: 'locations', description: 'An array of locations.', constraint: Array },\n            { name: 'multiple', description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto' },\n        ]\n    },\n    handler: (accessor, resource, position, references, multiple) => __awaiter(void 0, void 0, void 0, function* () {\n        accessor.get(ICommandService).executeCommand('editor.action.goToLocations', resource, position, references, multiple, undefined, true);\n    })\n});\n//#endregion\n//#region --- REFERENCE search special commands\nCommandsRegistry.registerCommand({\n    id: 'editor.action.findReferences',\n    handler: (accessor, resource, position) => {\n        assertType(URI.isUri(resource));\n        assertType(corePosition.Position.isIPosition(position));\n        const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n        const codeEditorService = accessor.get(ICodeEditorService);\n        return codeEditorService.openCodeEditor({ resource }, codeEditorService.getFocusedCodeEditor()).then(control => {\n            if (!isCodeEditor(control) || !control.hasModel()) {\n                return undefined;\n            }\n            const controller = ReferencesController.get(control);\n            if (!controller) {\n                return undefined;\n            }\n            const references = createCancelablePromise(token => getReferencesAtPosition(languageFeaturesService.referenceProvider, control.getModel(), corePosition.Position.lift(position), false, token).then(references => new ReferencesModel(references, nls.localize('ref.title', 'References'))));\n            const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n            return Promise.resolve(controller.toggleWidget(range, references, false));\n        });\n    }\n});\n// use NEW command\nCommandsRegistry.registerCommandAlias('editor.action.showReferences', 'editor.action.peekLocations');\n//#endregion\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Emitter } from '../../../../base/common/event.js';\nimport { combinedDisposable, DisposableStore, dispose } from '../../../../base/common/lifecycle.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { EditorCommand, registerEditorCommand } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Range } from '../../../common/core/range.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { KeybindingsRegistry } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nexport const ctxHasSymbols = new RawContextKey('hasSymbols', false, localize('hasSymbols', \"Whether there are symbol locations that can be navigated via keyboard-only.\"));\nexport const ISymbolNavigationService = createDecorator('ISymbolNavigationService');\nlet SymbolNavigationService = class SymbolNavigationService {\n    constructor(contextKeyService, _editorService, _notificationService, _keybindingService) {\n        this._editorService = _editorService;\n        this._notificationService = _notificationService;\n        this._keybindingService = _keybindingService;\n        this._currentModel = undefined;\n        this._currentIdx = -1;\n        this._ignoreEditorChange = false;\n        this._ctxHasSymbols = ctxHasSymbols.bindTo(contextKeyService);\n    }\n    reset() {\n        var _a, _b;\n        this._ctxHasSymbols.reset();\n        (_a = this._currentState) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this._currentMessage) === null || _b === void 0 ? void 0 : _b.dispose();\n        this._currentModel = undefined;\n        this._currentIdx = -1;\n    }\n    put(anchor) {\n        const refModel = anchor.parent.parent;\n        if (refModel.references.length <= 1) {\n            this.reset();\n            return;\n        }\n        this._currentModel = refModel;\n        this._currentIdx = refModel.references.indexOf(anchor);\n        this._ctxHasSymbols.set(true);\n        this._showMessage();\n        const editorState = new EditorState(this._editorService);\n        const listener = editorState.onDidChange(_ => {\n            if (this._ignoreEditorChange) {\n                return;\n            }\n            const editor = this._editorService.getActiveCodeEditor();\n            if (!editor) {\n                return;\n            }\n            const model = editor.getModel();\n            const position = editor.getPosition();\n            if (!model || !position) {\n                return;\n            }\n            let seenUri = false;\n            let seenPosition = false;\n            for (const reference of refModel.references) {\n                if (isEqual(reference.uri, model.uri)) {\n                    seenUri = true;\n                    seenPosition = seenPosition || Range.containsPosition(reference.range, position);\n                }\n                else if (seenUri) {\n                    break;\n                }\n            }\n            if (!seenUri || !seenPosition) {\n                this.reset();\n            }\n        });\n        this._currentState = combinedDisposable(editorState, listener);\n    }\n    revealNext(source) {\n        if (!this._currentModel) {\n            return Promise.resolve();\n        }\n        // get next result and advance\n        this._currentIdx += 1;\n        this._currentIdx %= this._currentModel.references.length;\n        const reference = this._currentModel.references[this._currentIdx];\n        // status\n        this._showMessage();\n        // open editor, ignore events while that happens\n        this._ignoreEditorChange = true;\n        return this._editorService.openCodeEditor({\n            resource: reference.uri,\n            options: {\n                selection: Range.collapseToStart(reference.range),\n                selectionRevealType: 3 /* TextEditorSelectionRevealType.NearTopIfOutsideViewport */\n            }\n        }, source).finally(() => {\n            this._ignoreEditorChange = false;\n        });\n    }\n    _showMessage() {\n        var _a;\n        (_a = this._currentMessage) === null || _a === void 0 ? void 0 : _a.dispose();\n        const kb = this._keybindingService.lookupKeybinding('editor.gotoNextSymbolFromResult');\n        const message = kb\n            ? localize('location.kb', \"Symbol {0} of {1}, {2} for next\", this._currentIdx + 1, this._currentModel.references.length, kb.getLabel())\n            : localize('location', \"Symbol {0} of {1}\", this._currentIdx + 1, this._currentModel.references.length);\n        this._currentMessage = this._notificationService.status(message);\n    }\n};\nSymbolNavigationService = __decorate([\n    __param(0, IContextKeyService),\n    __param(1, ICodeEditorService),\n    __param(2, INotificationService),\n    __param(3, IKeybindingService)\n], SymbolNavigationService);\nregisterSingleton(ISymbolNavigationService, SymbolNavigationService, 1 /* InstantiationType.Delayed */);\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: 'editor.gotoNextSymbolFromResult',\n            precondition: ctxHasSymbols,\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 70 /* KeyCode.F12 */\n            }\n        });\n    }\n    runEditorCommand(accessor, editor) {\n        return accessor.get(ISymbolNavigationService).revealNext(editor);\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'editor.gotoNextSymbolFromResult.cancel',\n    weight: 100 /* KeybindingWeight.EditorContrib */,\n    when: ctxHasSymbols,\n    primary: 9 /* KeyCode.Escape */,\n    handler(accessor) {\n        accessor.get(ISymbolNavigationService).reset();\n    }\n});\n//\nlet EditorState = class EditorState {\n    constructor(editorService) {\n        this._listener = new Map();\n        this._disposables = new DisposableStore();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._disposables.add(editorService.onCodeEditorRemove(this._onDidRemoveEditor, this));\n        this._disposables.add(editorService.onCodeEditorAdd(this._onDidAddEditor, this));\n        editorService.listCodeEditors().forEach(this._onDidAddEditor, this);\n    }\n    dispose() {\n        this._disposables.dispose();\n        this._onDidChange.dispose();\n        dispose(this._listener.values());\n    }\n    _onDidAddEditor(editor) {\n        this._listener.set(editor, combinedDisposable(editor.onDidChangeCursorPosition(_ => this._onDidChange.fire({ editor })), editor.onDidChangeModelContent(_ => this._onDidChange.fire({ editor }))));\n    }\n    _onDidRemoveEditor(editor) {\n        var _a;\n        (_a = this._listener.get(editor)) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._listener.delete(editor);\n    }\n};\nEditorState = __decorate([\n    __param(0, ICodeEditorService)\n], EditorState);\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ReferencesModel } from './referencesModel.js';\nfunction getLocationLinks(model, position, registry, provide) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const provider = registry.ordered(model);\n        // get results\n        const promises = provider.map((provider) => {\n            return Promise.resolve(provide(provider, model, position)).then(undefined, err => {\n                onUnexpectedExternalError(err);\n                return undefined;\n            });\n        });\n        const values = yield Promise.all(promises);\n        return coalesce(values.flat());\n    });\n}\nexport function getDefinitionsAtPosition(registry, model, position, token) {\n    return getLocationLinks(model, position, registry, (provider, model, position) => {\n        return provider.provideDefinition(model, position, token);\n    });\n}\nexport function getDeclarationsAtPosition(registry, model, position, token) {\n    return getLocationLinks(model, position, registry, (provider, model, position) => {\n        return provider.provideDeclaration(model, position, token);\n    });\n}\nexport function getImplementationsAtPosition(registry, model, position, token) {\n    return getLocationLinks(model, position, registry, (provider, model, position) => {\n        return provider.provideImplementation(model, position, token);\n    });\n}\nexport function getTypeDefinitionsAtPosition(registry, model, position, token) {\n    return getLocationLinks(model, position, registry, (provider, model, position) => {\n        return provider.provideTypeDefinition(model, position, token);\n    });\n}\nexport function getReferencesAtPosition(registry, model, position, compact, token) {\n    return getLocationLinks(model, position, registry, (provider, model, position) => __awaiter(this, void 0, void 0, function* () {\n        const result = yield provider.provideReferences(model, position, { includeDeclaration: true }, token);\n        if (!compact || !result || result.length !== 2) {\n            return result;\n        }\n        const resultWithoutDeclaration = yield provider.provideReferences(model, position, { includeDeclaration: false }, token);\n        if (resultWithoutDeclaration && resultWithoutDeclaration.length === 1) {\n            return resultWithoutDeclaration;\n        }\n        return result;\n    }));\n}\n// -- API commands ----\nfunction _sortedAndDeduped(callback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const rawLinks = yield callback();\n        const model = new ReferencesModel(rawLinks, '');\n        const modelLinks = model.references.map(ref => ref.link);\n        model.dispose();\n        return modelLinks;\n    });\n}\nregisterModelAndPositionCommand('_executeDefinitionProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const promise = getDefinitionsAtPosition(languageFeaturesService.definitionProvider, model, position, CancellationToken.None);\n    return _sortedAndDeduped(() => promise);\n});\nregisterModelAndPositionCommand('_executeTypeDefinitionProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const promise = getTypeDefinitionsAtPosition(languageFeaturesService.typeDefinitionProvider, model, position, CancellationToken.None);\n    return _sortedAndDeduped(() => promise);\n});\nregisterModelAndPositionCommand('_executeDeclarationProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const promise = getDeclarationsAtPosition(languageFeaturesService.declarationProvider, model, position, CancellationToken.None);\n    return _sortedAndDeduped(() => promise);\n});\nregisterModelAndPositionCommand('_executeReferenceProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const promise = getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, false, CancellationToken.None);\n    return _sortedAndDeduped(() => promise);\n});\nregisterModelAndPositionCommand('_executeImplementationProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const promise = getImplementationsAtPosition(languageFeaturesService.implementationProvider, model, position, CancellationToken.None);\n    return _sortedAndDeduped(() => promise);\n});\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { URI } from '../../../../base/common/uri.js';\nexport class InlayHintAnchor {\n    constructor(range, direction) {\n        this.range = range;\n        this.direction = direction;\n    }\n}\nexport class InlayHintItem {\n    constructor(hint, anchor, provider) {\n        this.hint = hint;\n        this.anchor = anchor;\n        this.provider = provider;\n        this._isResolved = false;\n    }\n    with(delta) {\n        const result = new InlayHintItem(this.hint, delta.anchor, this.provider);\n        result._isResolved = this._isResolved;\n        result._currentResolve = this._currentResolve;\n        return result;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.provider.resolveInlayHint !== 'function') {\n                return;\n            }\n            if (this._currentResolve) {\n                // wait for an active resolve operation and try again\n                // when that's done.\n                yield this._currentResolve;\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                return this.resolve(token);\n            }\n            if (!this._isResolved) {\n                this._currentResolve = this._doResolve(token)\n                    .finally(() => this._currentResolve = undefined);\n            }\n            yield this._currentResolve;\n        });\n    }\n    _doResolve(token) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const newHint = yield Promise.resolve(this.provider.resolveInlayHint(this.hint, token));\n                this.hint.tooltip = (_a = newHint === null || newHint === void 0 ? void 0 : newHint.tooltip) !== null && _a !== void 0 ? _a : this.hint.tooltip;\n                this.hint.label = (_b = newHint === null || newHint === void 0 ? void 0 : newHint.label) !== null && _b !== void 0 ? _b : this.hint.label;\n                this._isResolved = true;\n            }\n            catch (err) {\n                onUnexpectedExternalError(err);\n                this._isResolved = false;\n            }\n        });\n    }\n}\nexport class InlayHintsFragments {\n    static create(registry, model, ranges, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = [];\n            const promises = registry.ordered(model).reverse().map(provider => ranges.map((range) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const result = yield provider.provideInlayHints(model, range, token);\n                    if (result === null || result === void 0 ? void 0 : result.hints.length) {\n                        data.push([result, provider]);\n                    }\n                }\n                catch (err) {\n                    onUnexpectedExternalError(err);\n                }\n            })));\n            yield Promise.all(promises.flat());\n            if (token.isCancellationRequested || model.isDisposed()) {\n                throw new CancellationError();\n            }\n            return new InlayHintsFragments(ranges, data, model);\n        });\n    }\n    constructor(ranges, data, model) {\n        this._disposables = new DisposableStore();\n        this.ranges = ranges;\n        this.provider = new Set();\n        const items = [];\n        for (const [list, provider] of data) {\n            this._disposables.add(list);\n            this.provider.add(provider);\n            for (const hint of list.hints) {\n                // compute the range to which the item should be attached to\n                const position = model.validatePosition(hint.position);\n                let direction = 'before';\n                const wordRange = InlayHintsFragments._getRangeAtPosition(model, position);\n                let range;\n                if (wordRange.getStartPosition().isBefore(position)) {\n                    range = Range.fromPositions(wordRange.getStartPosition(), position);\n                    direction = 'after';\n                }\n                else {\n                    range = Range.fromPositions(position, wordRange.getEndPosition());\n                    direction = 'before';\n                }\n                items.push(new InlayHintItem(hint, new InlayHintAnchor(range, direction), provider));\n            }\n        }\n        this.items = items.sort((a, b) => Position.compare(a.hint.position, b.hint.position));\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    static _getRangeAtPosition(model, position) {\n        const line = position.lineNumber;\n        const word = model.getWordAtPosition(position);\n        if (word) {\n            // always prefer the word range\n            return new Range(line, word.startColumn, line, word.endColumn);\n        }\n        model.tokenization.tokenizeIfCheap(line);\n        const tokens = model.tokenization.getLineTokens(line);\n        const offset = position.column - 1;\n        const idx = tokens.findTokenIndexAtOffset(offset);\n        let start = tokens.getStartOffset(idx);\n        let end = tokens.getEndOffset(idx);\n        if (end - start === 1) {\n            // single character token, when at its end try leading/trailing token instead\n            if (start === offset && idx > 1) {\n                // leading token\n                start = tokens.getStartOffset(idx - 1);\n                end = tokens.getEndOffset(idx - 1);\n            }\n            else if (end === offset && idx < tokens.getCount() - 1) {\n                // trailing token\n                start = tokens.getStartOffset(idx + 1);\n                end = tokens.getEndOffset(idx + 1);\n            }\n        }\n        return new Range(line, start + 1, line, end + 1);\n    }\n}\nexport function asCommandLink(command) {\n    return URI.from({\n        scheme: Schemas.command,\n        path: command.id,\n        query: command.arguments && encodeURIComponent(JSON.stringify(command.arguments))\n    }).toString();\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar InlayHintsController_1;\nimport { ModifierKeyEmitter } from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DynamicCssRules } from '../../../browser/editorDom.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EDITOR_FONT_DEFAULTS } from '../../../common/config/editorOptions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport * as languages from '../../../common/languages.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { InlayHintAnchor, InlayHintsFragments } from './inlayHints.js';\nimport { goToDefinitionWithLocation, showGoToContextMenu } from './inlayHintsLocations.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport * as colors from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\n// --- hint caching service (per session)\nclass InlayHintsCache {\n    constructor() {\n        this._entries = new LRUCache(50);\n    }\n    get(model) {\n        const key = InlayHintsCache._key(model);\n        return this._entries.get(key);\n    }\n    set(model, value) {\n        const key = InlayHintsCache._key(model);\n        this._entries.set(key, value);\n    }\n    static _key(model) {\n        return `${model.uri.toString()}/${model.getVersionId()}`;\n    }\n}\nconst IInlayHintsCache = createDecorator('IInlayHintsCache');\nregisterSingleton(IInlayHintsCache, InlayHintsCache, 1 /* InstantiationType.Delayed */);\n// --- rendered label\nexport class RenderedInlayHintLabelPart {\n    constructor(item, index) {\n        this.item = item;\n        this.index = index;\n    }\n    get part() {\n        const label = this.item.hint.label;\n        if (typeof label === 'string') {\n            return { label };\n        }\n        else {\n            return label[this.index];\n        }\n    }\n}\nclass ActiveInlayHintInfo {\n    constructor(part, hasTriggerModifier) {\n        this.part = part;\n        this.hasTriggerModifier = hasTriggerModifier;\n    }\n}\n// --- controller\nlet InlayHintsController = InlayHintsController_1 = class InlayHintsController {\n    static get(editor) {\n        var _a;\n        return (_a = editor.getContribution(InlayHintsController_1.ID)) !== null && _a !== void 0 ? _a : undefined;\n    }\n    constructor(_editor, _languageFeaturesService, _featureDebounce, _inlayHintsCache, _commandService, _notificationService, _instaService) {\n        this._editor = _editor;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._inlayHintsCache = _inlayHintsCache;\n        this._commandService = _commandService;\n        this._notificationService = _notificationService;\n        this._instaService = _instaService;\n        this._disposables = new DisposableStore();\n        this._sessionDisposables = new DisposableStore();\n        this._decorationsMetadata = new Map();\n        this._ruleFactory = new DynamicCssRules(this._editor);\n        this._activeRenderMode = 0 /* RenderMode.Normal */;\n        this._debounceInfo = _featureDebounce.for(_languageFeaturesService.inlayHintsProvider, 'InlayHint', { min: 25 });\n        this._disposables.add(_languageFeaturesService.inlayHintsProvider.onDidChange(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModel(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\n        this._disposables.add(_editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(138 /* EditorOption.inlayHints */)) {\n                this._update();\n            }\n        }));\n        this._update();\n    }\n    dispose() {\n        this._sessionDisposables.dispose();\n        this._removeAllDecorations();\n        this._disposables.dispose();\n    }\n    _update() {\n        this._sessionDisposables.clear();\n        this._removeAllDecorations();\n        const options = this._editor.getOption(138 /* EditorOption.inlayHints */);\n        if (options.enabled === 'off') {\n            return;\n        }\n        const model = this._editor.getModel();\n        if (!model || !this._languageFeaturesService.inlayHintsProvider.has(model)) {\n            return;\n        }\n        // iff possible, quickly update from cache\n        const cached = this._inlayHintsCache.get(model);\n        if (cached) {\n            this._updateHintsDecorators([model.getFullModelRange()], cached);\n        }\n        this._sessionDisposables.add(toDisposable(() => {\n            // cache items when switching files etc\n            if (!model.isDisposed()) {\n                this._cacheHintsForFastRestore(model);\n            }\n        }));\n        let cts;\n        const watchedProviders = new Set();\n        const scheduler = new RunOnceScheduler(() => __awaiter(this, void 0, void 0, function* () {\n            const t1 = Date.now();\n            cts === null || cts === void 0 ? void 0 : cts.dispose(true);\n            cts = new CancellationTokenSource();\n            const listener = model.onWillDispose(() => cts === null || cts === void 0 ? void 0 : cts.cancel());\n            try {\n                const myToken = cts.token;\n                const inlayHints = yield InlayHintsFragments.create(this._languageFeaturesService.inlayHintsProvider, model, this._getHintsRanges(), myToken);\n                scheduler.delay = this._debounceInfo.update(model, Date.now() - t1);\n                if (myToken.isCancellationRequested) {\n                    inlayHints.dispose();\n                    return;\n                }\n                // listen to provider changes\n                for (const provider of inlayHints.provider) {\n                    if (typeof provider.onDidChangeInlayHints === 'function' && !watchedProviders.has(provider)) {\n                        watchedProviders.add(provider);\n                        this._sessionDisposables.add(provider.onDidChangeInlayHints(() => {\n                            if (!scheduler.isScheduled()) { // ignore event when request is already scheduled\n                                scheduler.schedule();\n                            }\n                        }));\n                    }\n                }\n                this._sessionDisposables.add(inlayHints);\n                this._updateHintsDecorators(inlayHints.ranges, inlayHints.items);\n                this._cacheHintsForFastRestore(model);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                cts.dispose();\n                listener.dispose();\n            }\n        }), this._debounceInfo.get(model));\n        this._sessionDisposables.add(scheduler);\n        this._sessionDisposables.add(toDisposable(() => cts === null || cts === void 0 ? void 0 : cts.dispose(true)));\n        scheduler.schedule(0);\n        this._sessionDisposables.add(this._editor.onDidScrollChange((e) => {\n            // update when scroll position changes\n            // uses scrollTopChanged has weak heuristic to differenatiate between scrolling due to\n            // typing or due to \"actual\" scrolling\n            if (e.scrollTopChanged || !scheduler.isScheduled()) {\n                scheduler.schedule();\n            }\n        }));\n        this._sessionDisposables.add(this._editor.onDidChangeModelContent((e) => {\n            // update less aggressive when typing\n            const delay = Math.max(scheduler.delay, 1250);\n            scheduler.schedule(delay);\n        }));\n        if (options.enabled === 'on') {\n            // different \"on\" modes: always\n            this._activeRenderMode = 0 /* RenderMode.Normal */;\n        }\n        else {\n            // different \"on\" modes: offUnlessPressed, or onUnlessPressed\n            let defaultMode;\n            let altMode;\n            if (options.enabled === 'onUnlessPressed') {\n                defaultMode = 0 /* RenderMode.Normal */;\n                altMode = 1 /* RenderMode.Invisible */;\n            }\n            else {\n                defaultMode = 1 /* RenderMode.Invisible */;\n                altMode = 0 /* RenderMode.Normal */;\n            }\n            this._activeRenderMode = defaultMode;\n            this._sessionDisposables.add(ModifierKeyEmitter.getInstance().event(e => {\n                if (!this._editor.hasModel()) {\n                    return;\n                }\n                const newRenderMode = e.altKey && e.ctrlKey && !(e.shiftKey || e.metaKey) ? altMode : defaultMode;\n                if (newRenderMode !== this._activeRenderMode) {\n                    this._activeRenderMode = newRenderMode;\n                    const model = this._editor.getModel();\n                    const copies = this._copyInlayHintsWithCurrentAnchor(model);\n                    this._updateHintsDecorators([model.getFullModelRange()], copies);\n                    scheduler.schedule(0);\n                }\n            }));\n        }\n        // mouse gestures\n        this._sessionDisposables.add(this._installDblClickGesture(() => scheduler.schedule(0)));\n        this._sessionDisposables.add(this._installLinkGesture());\n        this._sessionDisposables.add(this._installContextMenu());\n    }\n    _installLinkGesture() {\n        const store = new DisposableStore();\n        const gesture = store.add(new ClickLinkGesture(this._editor));\n        // let removeHighlight = () => { };\n        const sessionStore = new DisposableStore();\n        store.add(sessionStore);\n        store.add(gesture.onMouseMoveOrRelevantKeyDown(e => {\n            const [mouseEvent] = e;\n            const labelPart = this._getInlayHintLabelPart(mouseEvent);\n            const model = this._editor.getModel();\n            if (!labelPart || !model) {\n                sessionStore.clear();\n                return;\n            }\n            // resolve the item\n            const cts = new CancellationTokenSource();\n            sessionStore.add(toDisposable(() => cts.dispose(true)));\n            labelPart.item.resolve(cts.token);\n            // render link => when the modifier is pressed and when there is a command or location\n            this._activeInlayHintPart = labelPart.part.command || labelPart.part.location\n                ? new ActiveInlayHintInfo(labelPart, mouseEvent.hasTriggerModifier)\n                : undefined;\n            const lineNumber = model.validatePosition(labelPart.item.hint.position).lineNumber;\n            const range = new Range(lineNumber, 1, lineNumber, model.getLineMaxColumn(lineNumber));\n            const lineHints = this._getInlineHintsForRange(range);\n            this._updateHintsDecorators([range], lineHints);\n            sessionStore.add(toDisposable(() => {\n                this._activeInlayHintPart = undefined;\n                this._updateHintsDecorators([range], lineHints);\n            }));\n        }));\n        store.add(gesture.onCancel(() => sessionStore.clear()));\n        store.add(gesture.onExecute((e) => __awaiter(this, void 0, void 0, function* () {\n            const label = this._getInlayHintLabelPart(e);\n            if (label) {\n                const part = label.part;\n                if (part.location) {\n                    // location -> execute go to def\n                    this._instaService.invokeFunction(goToDefinitionWithLocation, e, this._editor, part.location);\n                }\n                else if (languages.Command.is(part.command)) {\n                    // command -> execute it\n                    yield this._invokeCommand(part.command, label.item);\n                }\n            }\n        })));\n        return store;\n    }\n    _getInlineHintsForRange(range) {\n        const lineHints = new Set();\n        for (const data of this._decorationsMetadata.values()) {\n            if (range.containsRange(data.item.anchor.range)) {\n                lineHints.add(data.item);\n            }\n        }\n        return Array.from(lineHints);\n    }\n    _installDblClickGesture(updateInlayHints) {\n        return this._editor.onMouseUp((e) => __awaiter(this, void 0, void 0, function* () {\n            if (e.event.detail !== 2) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (!part) {\n                return;\n            }\n            e.event.preventDefault();\n            yield part.item.resolve(CancellationToken.None);\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                const edits = part.item.hint.textEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text));\n                this._editor.executeEdits('inlayHint.default', edits);\n                updateInlayHints();\n            }\n        }));\n    }\n    _installContextMenu() {\n        return this._editor.onContextMenu((e) => __awaiter(this, void 0, void 0, function* () {\n            if (!(e.event.target instanceof HTMLElement)) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (part) {\n                yield this._instaService.invokeFunction(showGoToContextMenu, this._editor, e.event.target, part);\n            }\n        }));\n    }\n    _getInlayHintLabelPart(e) {\n        var _a;\n        if (e.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return undefined;\n        }\n        const options = (_a = e.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (options instanceof ModelDecorationInjectedTextOptions && (options === null || options === void 0 ? void 0 : options.attachedData) instanceof RenderedInlayHintLabelPart) {\n            return options.attachedData;\n        }\n        return undefined;\n    }\n    _invokeCommand(command, item) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._commandService.executeCommand(command.id, ...((_a = command.arguments) !== null && _a !== void 0 ? _a : []));\n            }\n            catch (err) {\n                this._notificationService.notify({\n                    severity: Severity.Error,\n                    source: item.provider.displayName,\n                    message: err\n                });\n            }\n        });\n    }\n    _cacheHintsForFastRestore(model) {\n        const hints = this._copyInlayHintsWithCurrentAnchor(model);\n        this._inlayHintsCache.set(model, hints);\n    }\n    // return inlay hints but with an anchor that reflects \"updates\"\n    // that happened after receiving them, e.g adding new lines before a hint\n    _copyInlayHintsWithCurrentAnchor(model) {\n        const items = new Map();\n        for (const [id, obj] of this._decorationsMetadata) {\n            if (items.has(obj.item)) {\n                // an inlay item can be rendered as multiple decorations\n                // but they will all uses the same range\n                continue;\n            }\n            const range = model.getDecorationRange(id);\n            if (range) {\n                // update range with whatever the editor has tweaked it to\n                const anchor = new InlayHintAnchor(range, obj.item.anchor.direction);\n                const copy = obj.item.with({ anchor });\n                items.set(obj.item, copy);\n            }\n        }\n        return Array.from(items.values());\n    }\n    _getHintsRanges() {\n        const extra = 30;\n        const model = this._editor.getModel();\n        const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\n        const result = [];\n        for (const range of visibleRanges.sort(Range.compareRangesUsingStarts)) {\n            const extendedRange = model.validateRange(new Range(range.startLineNumber - extra, range.startColumn, range.endLineNumber + extra, range.endColumn));\n            if (result.length === 0 || !Range.areIntersectingOrTouching(result[result.length - 1], extendedRange)) {\n                result.push(extendedRange);\n            }\n            else {\n                result[result.length - 1] = Range.plusRange(result[result.length - 1], extendedRange);\n            }\n        }\n        return result;\n    }\n    _updateHintsDecorators(ranges, items) {\n        var _a, _b;\n        // utils to collect/create injected text decorations\n        const newDecorationsData = [];\n        const addInjectedText = (item, ref, content, cursorStops, attachedData) => {\n            const opts = {\n                content,\n                inlineClassNameAffectsLetterSpacing: true,\n                inlineClassName: ref.className,\n                cursorStops,\n                attachedData\n            };\n            newDecorationsData.push({\n                item,\n                classNameRef: ref,\n                decoration: {\n                    range: item.anchor.range,\n                    options: {\n                        // className: \"rangeHighlight\", // DEBUG highlight to see to what range a hint is attached\n                        description: 'InlayHint',\n                        showIfCollapsed: item.anchor.range.isEmpty(),\n                        collapseOnReplaceEdit: !item.anchor.range.isEmpty(),\n                        stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n                        [item.anchor.direction]: this._activeRenderMode === 0 /* RenderMode.Normal */ ? opts : undefined\n                    }\n                }\n            });\n        };\n        const addInjectedWhitespace = (item, isLast) => {\n            const marginRule = this._ruleFactory.createClassNameRef({\n                width: `${(fontSize / 3) | 0}px`,\n                display: 'inline-block'\n            });\n            addInjectedText(item, marginRule, '\\u200a', isLast ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None);\n        };\n        //\n        const { fontSize, fontFamily, padding, isUniform } = this._getLayoutInfo();\n        const fontFamilyVar = '--code-editorInlayHintsFontFamily';\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily);\n        for (const item of items) {\n            // whitespace leading the actual label\n            if (item.hint.paddingLeft) {\n                addInjectedWhitespace(item, false);\n            }\n            // the label with its parts\n            const parts = typeof item.hint.label === 'string'\n                ? [{ label: item.hint.label }]\n                : item.hint.label;\n            for (let i = 0; i < parts.length; i++) {\n                const part = parts[i];\n                const isFirst = i === 0;\n                const isLast = i === parts.length - 1;\n                const cssProperties = {\n                    fontSize: `${fontSize}px`,\n                    fontFamily: `var(${fontFamilyVar}), ${EDITOR_FONT_DEFAULTS.fontFamily}`,\n                    verticalAlign: isUniform ? 'baseline' : 'middle',\n                    unicodeBidi: 'isolate'\n                };\n                if (isNonEmptyArray(item.hint.textEdits)) {\n                    cssProperties.cursor = 'default';\n                }\n                this._fillInColors(cssProperties, item.hint);\n                if ((part.command || part.location) && ((_a = this._activeInlayHintPart) === null || _a === void 0 ? void 0 : _a.part.item) === item && this._activeInlayHintPart.part.index === i) {\n                    // active link!\n                    cssProperties.textDecoration = 'underline';\n                    if (this._activeInlayHintPart.hasTriggerModifier) {\n                        cssProperties.color = themeColorFromId(colors.editorActiveLinkForeground);\n                        cssProperties.cursor = 'pointer';\n                    }\n                }\n                if (padding) {\n                    if (isFirst && isLast) {\n                        // only element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isFirst) {\n                        // first element\n                        cssProperties.padding = `1px 0 1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px 0 0 ${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isLast) {\n                        // last element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px 1px 0`;\n                        cssProperties.borderRadius = `0 ${(fontSize / 4) | 0}px ${(fontSize / 4) | 0}px 0`;\n                    }\n                    else {\n                        cssProperties.padding = `1px 0 1px 0`;\n                    }\n                }\n                addInjectedText(item, this._ruleFactory.createClassNameRef(cssProperties), fixSpace(part.label), isLast && !item.hint.paddingRight ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None, new RenderedInlayHintLabelPart(item, i));\n            }\n            // whitespace trailing the actual label\n            if (item.hint.paddingRight) {\n                addInjectedWhitespace(item, true);\n            }\n            if (newDecorationsData.length > InlayHintsController_1._MAX_DECORATORS) {\n                break;\n            }\n        }\n        // collect all decoration ids that are affected by the ranges\n        // and only update those decorations\n        const decorationIdsToReplace = [];\n        for (const range of ranges) {\n            for (const { id } of (_b = this._editor.getDecorationsInRange(range)) !== null && _b !== void 0 ? _b : []) {\n                const metadata = this._decorationsMetadata.get(id);\n                if (metadata) {\n                    decorationIdsToReplace.push(id);\n                    metadata.classNameRef.dispose();\n                    this._decorationsMetadata.delete(id);\n                }\n            }\n        }\n        const scrollState = StableEditorScrollState.capture(this._editor);\n        this._editor.changeDecorations(accessor => {\n            const newDecorationIds = accessor.deltaDecorations(decorationIdsToReplace, newDecorationsData.map(d => d.decoration));\n            for (let i = 0; i < newDecorationIds.length; i++) {\n                const data = newDecorationsData[i];\n                this._decorationsMetadata.set(newDecorationIds[i], data);\n            }\n        });\n        scrollState.restore(this._editor);\n    }\n    _fillInColors(props, hint) {\n        if (hint.kind === languages.InlayHintKind.Parameter) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintParameterBackground);\n            props.color = themeColorFromId(colors.editorInlayHintParameterForeground);\n        }\n        else if (hint.kind === languages.InlayHintKind.Type) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintTypeBackground);\n            props.color = themeColorFromId(colors.editorInlayHintTypeForeground);\n        }\n        else {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintBackground);\n            props.color = themeColorFromId(colors.editorInlayHintForeground);\n        }\n    }\n    _getLayoutInfo() {\n        const options = this._editor.getOption(138 /* EditorOption.inlayHints */);\n        const padding = options.padding;\n        const editorFontSize = this._editor.getOption(51 /* EditorOption.fontSize */);\n        const editorFontFamily = this._editor.getOption(48 /* EditorOption.fontFamily */);\n        let fontSize = options.fontSize;\n        if (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\n            fontSize = editorFontSize;\n        }\n        const fontFamily = options.fontFamily || editorFontFamily;\n        const isUniform = !padding\n            && fontFamily === editorFontFamily\n            && fontSize === editorFontSize;\n        return { fontSize, fontFamily, padding, isUniform };\n    }\n    _removeAllDecorations() {\n        this._editor.removeDecorations(Array.from(this._decorationsMetadata.keys()));\n        for (const obj of this._decorationsMetadata.values()) {\n            obj.classNameRef.dispose();\n        }\n        this._decorationsMetadata.clear();\n    }\n    // --- accessibility\n    getInlayHintsForLine(line) {\n        if (!this._editor.hasModel()) {\n            return [];\n        }\n        const set = new Set();\n        const result = [];\n        for (const deco of this._editor.getLineDecorations(line)) {\n            const data = this._decorationsMetadata.get(deco.id);\n            if (data && !set.has(data.item.hint)) {\n                set.add(data.item.hint);\n                result.push(data.item);\n            }\n        }\n        return result;\n    }\n};\nInlayHintsController.ID = 'editor.contrib.InlayHints';\nInlayHintsController._MAX_DECORATORS = 1500;\nInlayHintsController = InlayHintsController_1 = __decorate([\n    __param(1, ILanguageFeaturesService),\n    __param(2, ILanguageFeatureDebounceService),\n    __param(3, IInlayHintsCache),\n    __param(4, ICommandService),\n    __param(5, INotificationService),\n    __param(6, IInstantiationService)\n], InlayHintsController);\nexport { InlayHintsController };\n// Prevents the view from potentially visible whitespace\nfunction fixSpace(str) {\n    const noBreakWhitespace = '\\xa0';\n    return str.replace(/[ \\t]/g, noBreakWhitespace);\n}\nCommandsRegistry.registerCommand('_executeInlayHintProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    const [uri, range] = args;\n    assertType(URI.isUri(uri));\n    assertType(Range.isIRange(range));\n    const { inlayHintsProvider } = accessor.get(ILanguageFeaturesService);\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\n    try {\n        const model = yield InlayHintsFragments.create(inlayHintsProvider, ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\n        const result = model.items.map(i => i.hint);\n        setTimeout(() => model.dispose(), 0); // dispose after sending to ext host\n        return result;\n    }\n    finally {\n        ref.dispose();\n    }\n}));\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../../base/common/platform.js';\nfunction hasModifier(e, modifier) {\n    return !!e[modifier];\n}\n/**\n * An event that encapsulates the various trigger modifiers logic needed for go to definition.\n */\nexport class ClickLinkMouseEvent {\n    constructor(source, opts) {\n        this.target = source.target;\n        this.isLeftClick = source.event.leftButton;\n        this.isMiddleClick = source.event.middleButton;\n        this.isRightClick = source.event.rightButton;\n        this.hasTriggerModifier = hasModifier(source.event, opts.triggerModifier);\n        this.hasSideBySideModifier = hasModifier(source.event, opts.triggerSideBySideModifier);\n        this.isNoneOrSingleMouseDown = (source.event.detail <= 1);\n    }\n}\n/**\n * An event that encapsulates the various trigger modifiers logic needed for go to definition.\n */\nexport class ClickLinkKeyboardEvent {\n    constructor(source, opts) {\n        this.keyCodeIsTriggerKey = (source.keyCode === opts.triggerKey);\n        this.keyCodeIsSideBySideKey = (source.keyCode === opts.triggerSideBySideKey);\n        this.hasTriggerModifier = hasModifier(source, opts.triggerModifier);\n    }\n}\nexport class ClickLinkOptions {\n    constructor(triggerKey, triggerModifier, triggerSideBySideKey, triggerSideBySideModifier) {\n        this.triggerKey = triggerKey;\n        this.triggerModifier = triggerModifier;\n        this.triggerSideBySideKey = triggerSideBySideKey;\n        this.triggerSideBySideModifier = triggerSideBySideModifier;\n    }\n    equals(other) {\n        return (this.triggerKey === other.triggerKey\n            && this.triggerModifier === other.triggerModifier\n            && this.triggerSideBySideKey === other.triggerSideBySideKey\n            && this.triggerSideBySideModifier === other.triggerSideBySideModifier);\n    }\n}\nfunction createOptions(multiCursorModifier) {\n    if (multiCursorModifier === 'altKey') {\n        if (platform.isMacintosh) {\n            return new ClickLinkOptions(57 /* KeyCode.Meta */, 'metaKey', 6 /* KeyCode.Alt */, 'altKey');\n        }\n        return new ClickLinkOptions(5 /* KeyCode.Ctrl */, 'ctrlKey', 6 /* KeyCode.Alt */, 'altKey');\n    }\n    if (platform.isMacintosh) {\n        return new ClickLinkOptions(6 /* KeyCode.Alt */, 'altKey', 57 /* KeyCode.Meta */, 'metaKey');\n    }\n    return new ClickLinkOptions(6 /* KeyCode.Alt */, 'altKey', 5 /* KeyCode.Ctrl */, 'ctrlKey');\n}\nexport class ClickLinkGesture extends Disposable {\n    constructor(editor, opts) {\n        var _a;\n        super();\n        this._onMouseMoveOrRelevantKeyDown = this._register(new Emitter());\n        this.onMouseMoveOrRelevantKeyDown = this._onMouseMoveOrRelevantKeyDown.event;\n        this._onExecute = this._register(new Emitter());\n        this.onExecute = this._onExecute.event;\n        this._onCancel = this._register(new Emitter());\n        this.onCancel = this._onCancel.event;\n        this._editor = editor;\n        this._extractLineNumberFromMouseEvent = (_a = opts === null || opts === void 0 ? void 0 : opts.extractLineNumberFromMouseEvent) !== null && _a !== void 0 ? _a : ((e) => e.target.position ? e.target.position.lineNumber : 0);\n        this._opts = createOptions(this._editor.getOption(76 /* EditorOption.multiCursorModifier */));\n        this._lastMouseMoveEvent = null;\n        this._hasTriggerKeyOnMouseDown = false;\n        this._lineNumberOnMouseDown = 0;\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(76 /* EditorOption.multiCursorModifier */)) {\n                const newOpts = createOptions(this._editor.getOption(76 /* EditorOption.multiCursorModifier */));\n                if (this._opts.equals(newOpts)) {\n                    return;\n                }\n                this._opts = newOpts;\n                this._lastMouseMoveEvent = null;\n                this._hasTriggerKeyOnMouseDown = false;\n                this._lineNumberOnMouseDown = 0;\n                this._onCancel.fire();\n            }\n        }));\n        this._register(this._editor.onMouseMove((e) => this._onEditorMouseMove(new ClickLinkMouseEvent(e, this._opts))));\n        this._register(this._editor.onMouseDown((e) => this._onEditorMouseDown(new ClickLinkMouseEvent(e, this._opts))));\n        this._register(this._editor.onMouseUp((e) => this._onEditorMouseUp(new ClickLinkMouseEvent(e, this._opts))));\n        this._register(this._editor.onKeyDown((e) => this._onEditorKeyDown(new ClickLinkKeyboardEvent(e, this._opts))));\n        this._register(this._editor.onKeyUp((e) => this._onEditorKeyUp(new ClickLinkKeyboardEvent(e, this._opts))));\n        this._register(this._editor.onMouseDrag(() => this._resetHandler()));\n        this._register(this._editor.onDidChangeCursorSelection((e) => this._onDidChangeCursorSelection(e)));\n        this._register(this._editor.onDidChangeModel((e) => this._resetHandler()));\n        this._register(this._editor.onDidChangeModelContent(() => this._resetHandler()));\n        this._register(this._editor.onDidScrollChange((e) => {\n            if (e.scrollTopChanged || e.scrollLeftChanged) {\n                this._resetHandler();\n            }\n        }));\n    }\n    _onDidChangeCursorSelection(e) {\n        if (e.selection && e.selection.startColumn !== e.selection.endColumn) {\n            this._resetHandler(); // immediately stop this feature if the user starts to select (https://github.com/microsoft/vscode/issues/7827)\n        }\n    }\n    _onEditorMouseMove(mouseEvent) {\n        this._lastMouseMoveEvent = mouseEvent;\n        this._onMouseMoveOrRelevantKeyDown.fire([mouseEvent, null]);\n    }\n    _onEditorMouseDown(mouseEvent) {\n        // We need to record if we had the trigger key on mouse down because someone might select something in the editor\n        // holding the mouse down and then while mouse is down start to press Ctrl/Cmd to start a copy operation and then\n        // release the mouse button without wanting to do the navigation.\n        // With this flag we prevent goto definition if the mouse was down before the trigger key was pressed.\n        this._hasTriggerKeyOnMouseDown = mouseEvent.hasTriggerModifier;\n        this._lineNumberOnMouseDown = this._extractLineNumberFromMouseEvent(mouseEvent);\n    }\n    _onEditorMouseUp(mouseEvent) {\n        const currentLineNumber = this._extractLineNumberFromMouseEvent(mouseEvent);\n        if (this._hasTriggerKeyOnMouseDown && this._lineNumberOnMouseDown && this._lineNumberOnMouseDown === currentLineNumber) {\n            this._onExecute.fire(mouseEvent);\n        }\n    }\n    _onEditorKeyDown(e) {\n        if (this._lastMouseMoveEvent\n            && (e.keyCodeIsTriggerKey // User just pressed Ctrl/Cmd (normal goto definition)\n                || (e.keyCodeIsSideBySideKey && e.hasTriggerModifier) // User pressed Ctrl/Cmd+Alt (goto definition to the side)\n            )) {\n            this._onMouseMoveOrRelevantKeyDown.fire([this._lastMouseMoveEvent, e]);\n        }\n        else if (e.hasTriggerModifier) {\n            this._onCancel.fire(); // remove decorations if user holds another key with ctrl/cmd to prevent accident goto declaration\n        }\n    }\n    _onEditorKeyUp(e) {\n        if (e.keyCodeIsTriggerKey) {\n            this._onCancel.fire();\n        }\n    }\n    _resetHandler() {\n        this._lastMouseMoveEvent = null;\n        this._hasTriggerKeyOnMouseDown = false;\n        this._onCancel.fire();\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { DefinitionAction, SymbolNavigationAction, SymbolNavigationAnchor } from '../../gotoSymbol/browser/goToCommands.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport { isIMenuItem, MenuId, MenuItemAction, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nexport function showGoToContextMenu(accessor, editor, anchor, part) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const contextMenuService = accessor.get(IContextMenuService);\n        const commandService = accessor.get(ICommandService);\n        const instaService = accessor.get(IInstantiationService);\n        const notificationService = accessor.get(INotificationService);\n        yield part.item.resolve(CancellationToken.None);\n        if (!part.part.location) {\n            return;\n        }\n        const location = part.part.location;\n        const menuActions = [];\n        // from all registered (not active) context menu actions select those\n        // that are a symbol navigation actions\n        const filter = new Set(MenuRegistry.getMenuItems(MenuId.EditorContext)\n            .map(item => isIMenuItem(item) ? item.command.id : generateUuid()));\n        for (const delegate of SymbolNavigationAction.all()) {\n            if (filter.has(delegate.desc.id)) {\n                menuActions.push(new Action(delegate.desc.id, MenuItemAction.label(delegate.desc, { renderShortTitle: true }), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                    const ref = yield resolverService.createModelReference(location.uri);\n                    try {\n                        const symbolAnchor = new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range));\n                        const range = part.item.anchor.range;\n                        yield instaService.invokeFunction(delegate.runEditorCommand.bind(delegate), editor, symbolAnchor, range);\n                    }\n                    finally {\n                        ref.dispose();\n                    }\n                })));\n            }\n        }\n        if (part.part.command) {\n            const { command } = part.part;\n            menuActions.push(new Separator());\n            menuActions.push(new Action(command.id, command.title, undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                var _b;\n                try {\n                    yield commandService.executeCommand(command.id, ...((_b = command.arguments) !== null && _b !== void 0 ? _b : []));\n                }\n                catch (err) {\n                    notificationService.notify({\n                        severity: Severity.Error,\n                        source: part.item.provider.displayName,\n                        message: err\n                    });\n                }\n            })));\n        }\n        // show context menu\n        const useShadowDOM = editor.getOption(125 /* EditorOption.useShadowDOM */);\n        contextMenuService.showContextMenu({\n            domForShadowRoot: useShadowDOM ? (_a = editor.getDomNode()) !== null && _a !== void 0 ? _a : undefined : undefined,\n            getAnchor: () => {\n                const box = dom.getDomNodePagePosition(anchor);\n                return { x: box.left, y: box.top + box.height + 8 };\n            },\n            getActions: () => menuActions,\n            onHide: () => {\n                editor.focus();\n            },\n            autoSelectFirstItem: true,\n        });\n    });\n}\nexport function goToDefinitionWithLocation(accessor, event, editor, location) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const ref = yield resolverService.createModelReference(location.uri);\n        yield editor.invokeWithinContext((accessor) => __awaiter(this, void 0, void 0, function* () {\n            const openToSide = event.hasSideBySideModifier;\n            const contextKeyService = accessor.get(IContextKeyService);\n            const isInPeek = PeekContext.inPeekEditor.getValue(contextKeyService);\n            const canPeek = !openToSide && editor.getOption(86 /* EditorOption.definitionLinkOpensInPeek */) && !isInPeek;\n            const action = new DefinitionAction({ openToSide, openInPeek: canPeek, muteMessage: true }, { title: { value: '', original: '' }, id: '', precondition: undefined });\n            return action.run(accessor, new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range)), Range.lift(location.range));\n        }));\n        ref.dispose();\n    });\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { EditOperation } from '../core/editOperation.js';\nimport { Range } from '../core/range.js';\nexport class TrimTrailingWhitespaceCommand {\n    constructor(selection, cursors) {\n        this._selection = selection;\n        this._cursors = cursors;\n        this._selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        const ops = trimTrailingWhitespace(model, this._cursors);\n        for (let i = 0, len = ops.length; i < len; i++) {\n            const op = ops[i];\n            builder.addEditOperation(op.range, op.text);\n        }\n        this._selectionId = builder.trackSelection(this._selection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._selectionId);\n    }\n}\n/**\n * Generate commands for trimming trailing whitespace on a model and ignore lines on which cursors are sitting.\n */\nexport function trimTrailingWhitespace(model, cursors) {\n    // Sort cursors ascending\n    cursors.sort((a, b) => {\n        if (a.lineNumber === b.lineNumber) {\n            return a.column - b.column;\n        }\n        return a.lineNumber - b.lineNumber;\n    });\n    // Reduce multiple cursors on the same line and only keep the last one on the line\n    for (let i = cursors.length - 2; i >= 0; i--) {\n        if (cursors[i].lineNumber === cursors[i + 1].lineNumber) {\n            // Remove cursor at `i`\n            cursors.splice(i, 1);\n        }\n    }\n    const r = [];\n    let rLen = 0;\n    let cursorIndex = 0;\n    const cursorLen = cursors.length;\n    for (let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\n        const lineContent = model.getLineContent(lineNumber);\n        const maxLineColumn = lineContent.length + 1;\n        let minEditColumn = 0;\n        if (cursorIndex < cursorLen && cursors[cursorIndex].lineNumber === lineNumber) {\n            minEditColumn = cursors[cursorIndex].column;\n            cursorIndex++;\n            if (minEditColumn === maxLineColumn) {\n                // The cursor is at the end of the line => no edits for sure on this line\n                continue;\n            }\n        }\n        if (lineContent.length === 0) {\n            continue;\n        }\n        const lastNonWhitespaceIndex = strings.lastNonWhitespaceIndex(lineContent);\n        let fromColumn = 0;\n        if (lastNonWhitespaceIndex === -1) {\n            // Entire line is whitespace\n            fromColumn = 1;\n        }\n        else if (lastNonWhitespaceIndex !== lineContent.length - 1) {\n            // There is trailing whitespace\n            fromColumn = lastNonWhitespaceIndex + 2;\n        }\n        else {\n            // There is no trailing whitespace\n            continue;\n        }\n        fromColumn = Math.max(minEditColumn, fromColumn);\n        r[rLen++] = EditOperation.delete(new Range(lineNumber, fromColumn, lineNumber, maxLineColumn));\n    }\n    return r;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const SEMANTIC_HIGHLIGHTING_SETTING_ID = 'editor.semanticHighlighting';\nexport function isSemanticColoringEnabled(model, themeService, configurationService) {\n    var _a;\n    const setting = (_a = configurationService.getValue(SEMANTIC_HIGHLIGHTING_SETTING_ID, { overrideIdentifier: model.getLanguageId(), resource: model.uri })) === null || _a === void 0 ? void 0 : _a.enabled;\n    if (typeof setting === 'boolean') {\n        return setting;\n    }\n    return themeService.getColorTheme().semanticHighlighting;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar InlineSuggestionHintsContentWidget_1;\nimport { h } from '../../../../base/browser/dom.js';\nimport { ActionViewItem } from '../../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { KeybindingLabel, unthemedKeybindingLabelOptions } from '../../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { equals } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, observableFromEvent } from '../../../../base/common/observable.js';\nimport { OS } from '../../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './inlineCompletionsHintsWidget.css';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId } from './commandIds.js';\nimport { localize } from '../../../../nls.js';\nimport { MenuEntryActionViewItem, createAndFillInActionBarActions } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { WorkbenchToolBar } from '../../../../platform/actions/browser/toolbar.js';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nlet InlineCompletionsHintsWidget = class InlineCompletionsHintsWidget extends Disposable {\n    constructor(editor, model, instantiationService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.instantiationService = instantiationService;\n        this.alwaysShowToolbar = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(61 /* EditorOption.inlineSuggest */).showToolbar === 'always');\n        this.sessionPosition = undefined;\n        this.position = derived(reader => {\n            var _a, _b, _c;\n            /** @description position */\n            const ghostText = (_a = this.model.read(reader)) === null || _a === void 0 ? void 0 : _a.ghostText.read(reader);\n            if (!this.alwaysShowToolbar.read(reader) || !ghostText || ghostText.parts.length === 0) {\n                this.sessionPosition = undefined;\n                return null;\n            }\n            const firstColumn = ghostText.parts[0].column;\n            if (this.sessionPosition && this.sessionPosition.lineNumber !== ghostText.lineNumber) {\n                this.sessionPosition = undefined;\n            }\n            const position = new Position(ghostText.lineNumber, Math.min(firstColumn, (_c = (_b = this.sessionPosition) === null || _b === void 0 ? void 0 : _b.column) !== null && _c !== void 0 ? _c : Number.MAX_SAFE_INTEGER));\n            this.sessionPosition = position;\n            return position;\n        });\n        this._register(autorunWithStore((reader, store) => {\n            /** @description setup content widget */\n            const model = this.model.read(reader);\n            if (!model || !this.alwaysShowToolbar.read(reader)) {\n                return;\n            }\n            const contentWidget = store.add(this.instantiationService.createInstance(InlineSuggestionHintsContentWidget, this.editor, true, this.position, model.selectedInlineCompletionIndex, model.inlineCompletionsCount, model.selectedInlineCompletion.map(v => { var _a; return (_a = v === null || v === void 0 ? void 0 : v.inlineCompletion.source.inlineCompletions.commands) !== null && _a !== void 0 ? _a : []; })));\n            editor.addContentWidget(contentWidget);\n            store.add(toDisposable(() => editor.removeContentWidget(contentWidget)));\n            store.add(autorun(reader => {\n                /** @description request explicit */\n                const position = this.position.read(reader);\n                if (!position) {\n                    return;\n                }\n                if (model.lastTriggerKind.read(reader) !== InlineCompletionTriggerKind.Explicit) {\n                    model.triggerExplicitly();\n                }\n            }));\n        }));\n    }\n};\nInlineCompletionsHintsWidget = __decorate([\n    __param(2, IInstantiationService)\n], InlineCompletionsHintsWidget);\nexport { InlineCompletionsHintsWidget };\nconst inlineSuggestionHintsNextIcon = registerIcon('inline-suggestion-hints-next', Codicon.chevronRight, localize('parameterHintsNextIcon', 'Icon for show next parameter hint.'));\nconst inlineSuggestionHintsPreviousIcon = registerIcon('inline-suggestion-hints-previous', Codicon.chevronLeft, localize('parameterHintsPreviousIcon', 'Icon for show previous parameter hint.'));\nlet InlineSuggestionHintsContentWidget = InlineSuggestionHintsContentWidget_1 = class InlineSuggestionHintsContentWidget extends Disposable {\n    static get dropDownVisible() { return this._dropDownVisible; }\n    createCommandAction(commandId, label, iconClassName) {\n        const action = new Action(commandId, label, iconClassName, true, () => this._commandService.executeCommand(commandId));\n        const kb = this.keybindingService.lookupKeybinding(commandId, this._contextKeyService);\n        let tooltip = label;\n        if (kb) {\n            tooltip = localize({ key: 'content', comment: ['A label', 'A keybinding'] }, '{0} ({1})', label, kb.getLabel());\n        }\n        action.tooltip = tooltip;\n        return action;\n    }\n    constructor(editor, withBorder, _position, _currentSuggestionIdx, _suggestionCount, _extraCommands, _commandService, instantiationService, keybindingService, _contextKeyService, _menuService) {\n        super();\n        this.editor = editor;\n        this.withBorder = withBorder;\n        this._position = _position;\n        this._currentSuggestionIdx = _currentSuggestionIdx;\n        this._suggestionCount = _suggestionCount;\n        this._extraCommands = _extraCommands;\n        this._commandService = _commandService;\n        this.keybindingService = keybindingService;\n        this._contextKeyService = _contextKeyService;\n        this._menuService = _menuService;\n        this.id = `InlineSuggestionHintsContentWidget${InlineSuggestionHintsContentWidget_1.id++}`;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = false;\n        this.nodes = h('div.inlineSuggestionsHints', { className: this.withBorder ? '.withBorder' : '' }, [\n            h('div@toolBar'),\n        ]);\n        this.previousAction = this.createCommandAction(showPreviousInlineSuggestionActionId, localize('previous', 'Previous'), ThemeIcon.asClassName(inlineSuggestionHintsPreviousIcon));\n        this.availableSuggestionCountAction = new Action('inlineSuggestionHints.availableSuggestionCount', '', undefined, false);\n        this.nextAction = this.createCommandAction(showNextInlineSuggestionActionId, localize('next', 'Next'), ThemeIcon.asClassName(inlineSuggestionHintsNextIcon));\n        // TODO@hediet: deprecate MenuId.InlineCompletionsActions\n        this.inlineCompletionsActionsMenus = this._register(this._menuService.createMenu(MenuId.InlineCompletionsActions, this._contextKeyService));\n        this.clearAvailableSuggestionCountLabelDebounced = this._register(new RunOnceScheduler(() => {\n            this.availableSuggestionCountAction.label = '';\n        }, 100));\n        this.disableButtonsDebounced = this._register(new RunOnceScheduler(() => {\n            this.previousAction.enabled = this.nextAction.enabled = false;\n        }, 100));\n        this.lastCommands = [];\n        this.toolBar = this._register(instantiationService.createInstance(CustomizedMenuWorkbenchToolBar, this.nodes.toolBar, MenuId.InlineSuggestionToolbar, {\n            menuOptions: { renderShortTitle: true },\n            toolbarOptions: { primaryGroup: g => g.startsWith('primary') },\n            actionViewItemProvider: (action, options) => {\n                if (action instanceof MenuItemAction) {\n                    return instantiationService.createInstance(StatusBarViewItem, action, undefined);\n                }\n                if (action === this.availableSuggestionCountAction) {\n                    const a = new ActionViewItemWithClassName(undefined, action, { label: true, icon: false });\n                    a.setClass('availableSuggestionCount');\n                    return a;\n                }\n                return undefined;\n            },\n            telemetrySource: 'InlineSuggestionToolbar',\n        }));\n        this.toolBar.setPrependedPrimaryActions([\n            this.previousAction,\n            this.availableSuggestionCountAction,\n            this.nextAction,\n        ]);\n        this._register(this.toolBar.onDidChangeDropdownVisibility(e => {\n            InlineSuggestionHintsContentWidget_1._dropDownVisible = e;\n        }));\n        this._register(autorun(reader => {\n            /** @description update position */\n            this._position.read(reader);\n            this.editor.layoutContentWidget(this);\n        }));\n        this._register(autorun(reader => {\n            /** @description counts */\n            const suggestionCount = this._suggestionCount.read(reader);\n            const currentSuggestionIdx = this._currentSuggestionIdx.read(reader);\n            if (suggestionCount !== undefined) {\n                this.clearAvailableSuggestionCountLabelDebounced.cancel();\n                this.availableSuggestionCountAction.label = `${currentSuggestionIdx + 1}/${suggestionCount}`;\n            }\n            else {\n                this.clearAvailableSuggestionCountLabelDebounced.schedule();\n            }\n            if (suggestionCount !== undefined && suggestionCount > 1) {\n                this.disableButtonsDebounced.cancel();\n                this.previousAction.enabled = this.nextAction.enabled = true;\n            }\n            else {\n                this.disableButtonsDebounced.schedule();\n            }\n        }));\n        this._register(autorun(reader => {\n            /** @description extra commands */\n            const extraCommands = this._extraCommands.read(reader);\n            if (equals(this.lastCommands, extraCommands)) {\n                // nothing to update\n                return;\n            }\n            this.lastCommands = extraCommands;\n            const extraActions = extraCommands.map(c => ({\n                class: undefined,\n                id: c.id,\n                enabled: true,\n                tooltip: c.tooltip || '',\n                label: c.title,\n                run: (event) => {\n                    return this._commandService.executeCommand(c.id);\n                },\n            }));\n            for (const [_, group] of this.inlineCompletionsActionsMenus.getActions()) {\n                for (const action of group) {\n                    if (action instanceof MenuItemAction) {\n                        extraActions.push(action);\n                    }\n                }\n            }\n            if (extraActions.length > 0) {\n                extraActions.unshift(new Separator());\n            }\n            this.toolBar.setAdditionalSecondaryActions(extraActions);\n        }));\n    }\n    getId() { return this.id; }\n    getDomNode() {\n        return this.nodes.root;\n    }\n    getPosition() {\n        return {\n            position: this._position.get(),\n            preference: [1 /* ContentWidgetPositionPreference.ABOVE */, 2 /* ContentWidgetPositionPreference.BELOW */],\n            positionAffinity: 3 /* PositionAffinity.LeftOfInjectedText */,\n        };\n    }\n};\nInlineSuggestionHintsContentWidget._dropDownVisible = false;\nInlineSuggestionHintsContentWidget.id = 0;\nInlineSuggestionHintsContentWidget = InlineSuggestionHintsContentWidget_1 = __decorate([\n    __param(6, ICommandService),\n    __param(7, IInstantiationService),\n    __param(8, IKeybindingService),\n    __param(9, IContextKeyService),\n    __param(10, IMenuService)\n], InlineSuggestionHintsContentWidget);\nexport { InlineSuggestionHintsContentWidget };\nclass ActionViewItemWithClassName extends ActionViewItem {\n    constructor() {\n        super(...arguments);\n        this._className = undefined;\n    }\n    setClass(className) {\n        this._className = className;\n    }\n    render(container) {\n        super.render(container);\n        if (this._className) {\n            container.classList.add(this._className);\n        }\n    }\n}\nclass StatusBarViewItem extends MenuEntryActionViewItem {\n    updateLabel() {\n        const kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\n        if (!kb) {\n            return super.updateLabel();\n        }\n        if (this.label) {\n            const div = h('div.keybinding').root;\n            const k = new KeybindingLabel(div, OS, Object.assign({ disableTitle: true }, unthemedKeybindingLabelOptions));\n            k.set(kb);\n            this.label.textContent = this._action.label;\n            this.label.appendChild(div);\n            this.label.classList.add('inlineSuggestionStatusBarItemLabel');\n        }\n    }\n}\nlet CustomizedMenuWorkbenchToolBar = class CustomizedMenuWorkbenchToolBar extends WorkbenchToolBar {\n    constructor(container, menuId, options2, menuService, contextKeyService, contextMenuService, keybindingService, telemetryService) {\n        super(container, Object.assign({ resetMenu: menuId }, options2), menuService, contextKeyService, contextMenuService, keybindingService, telemetryService);\n        this.menuId = menuId;\n        this.options2 = options2;\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n        this.menu = this._store.add(this.menuService.createMenu(this.menuId, this.contextKeyService, { emitEventsForSubmenuChanges: true }));\n        this.additionalActions = [];\n        this.prependedPrimaryActions = [];\n        this._store.add(this.menu.onDidChange(() => this.updateToolbar()));\n        this.updateToolbar();\n    }\n    updateToolbar() {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const primary = [];\n        const secondary = [];\n        createAndFillInActionBarActions(this.menu, (_a = this.options2) === null || _a === void 0 ? void 0 : _a.menuOptions, { primary, secondary }, (_c = (_b = this.options2) === null || _b === void 0 ? void 0 : _b.toolbarOptions) === null || _c === void 0 ? void 0 : _c.primaryGroup, (_e = (_d = this.options2) === null || _d === void 0 ? void 0 : _d.toolbarOptions) === null || _e === void 0 ? void 0 : _e.shouldInlineSubmenu, (_g = (_f = this.options2) === null || _f === void 0 ? void 0 : _f.toolbarOptions) === null || _g === void 0 ? void 0 : _g.useSeparatorsInPrimaryActions);\n        secondary.push(...this.additionalActions);\n        primary.unshift(...this.prependedPrimaryActions);\n        this.setActions(primary, secondary);\n    }\n    setPrependedPrimaryActions(actions) {\n        if (equals(this.prependedPrimaryActions, actions, (a, b) => a === b)) {\n            return;\n        }\n        this.prependedPrimaryActions = actions;\n        this.updateToolbar();\n    }\n    setAdditionalSecondaryActions(actions) {\n        if (equals(this.additionalActions, actions, (a, b) => a === b)) {\n            return;\n        }\n        this.additionalActions = actions;\n        this.updateToolbar();\n    }\n};\nCustomizedMenuWorkbenchToolBar = __decorate([\n    __param(3, IMenuService),\n    __param(4, IContextKeyService),\n    __param(5, IContextMenuService),\n    __param(6, IKeybindingService),\n    __param(7, ITelemetryService)\n], CustomizedMenuWorkbenchToolBar);\nexport { CustomizedMenuWorkbenchToolBar };\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const inlineSuggestCommitId = 'editor.action.inlineSuggest.commit';\nexport const showPreviousInlineSuggestionActionId = 'editor.action.inlineSuggest.showPrevious';\nexport const showNextInlineSuggestionActionId = 'editor.action.inlineSuggest.showNext';\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar InlineCompletionsController_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, disposableObservableValue, observableFromEvent, observableValue, transaction } from '../../../../base/common/observable.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { inlineSuggestCommitId } from './commandIds.js';\nimport { GhostTextWidget } from './ghostTextWidget.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsHintsWidget, InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\nimport { InlineCompletionsModel, VersionIdChangeReason } from './inlineCompletionsModel.js';\nimport { SuggestWidgetAdaptor } from './suggestWidgetInlineCompletionProvider.js';\nimport { localize } from '../../../../nls.js';\nimport { AudioCue, IAudioCueService } from '../../../../platform/audioCues/browser/audioCueService.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nlet InlineCompletionsController = InlineCompletionsController_1 = class InlineCompletionsController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(InlineCompletionsController_1.ID);\n    }\n    constructor(editor, instantiationService, contextKeyService, configurationService, commandService, debounceService, languageFeaturesService, audioCueService, _keybindingService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.configurationService = configurationService;\n        this.commandService = commandService;\n        this.debounceService = debounceService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.audioCueService = audioCueService;\n        this._keybindingService = _keybindingService;\n        this.model = disposableObservableValue('inlineCompletionModel', undefined);\n        this.textModelVersionId = observableValue('textModelVersionId', -1);\n        this.cursorPosition = observableValue('cursorPosition', new Position(1, 1));\n        this.suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(this.editor, () => { var _a, _b; return (_b = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.selectedInlineCompletion.get()) === null || _b === void 0 ? void 0 : _b.toSingleTextEdit(undefined); }, (tx) => this.updateObservables(tx, VersionIdChangeReason.Other), (item) => {\n            transaction(tx => {\n                var _a;\n                /** @description handleSuggestAccepted */\n                this.updateObservables(tx, VersionIdChangeReason.Other);\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.handleSuggestAccepted(item);\n            });\n        }));\n        this._enabled = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(61 /* EditorOption.inlineSuggest */).enabled);\n        this.ghostTextWidget = this._register(this.instantiationService.createInstance(GhostTextWidget, this.editor, {\n            ghostText: this.model.map((v, reader) => v === null || v === void 0 ? void 0 : v.ghostText.read(reader)),\n            minReservedLineCount: constObservable(0),\n            targetTextModel: this.model.map(v => v === null || v === void 0 ? void 0 : v.textModel),\n        }));\n        this._debounceValue = this.debounceService.for(this.languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', { min: 50, max: 50 });\n        this._register(new InlineCompletionContextKeys(this.contextKeyService, this.model));\n        this._register(Event.runAndSubscribe(editor.onDidChangeModel, () => transaction(tx => {\n            /** @description onDidChangeModel */\n            this.model.set(undefined, tx);\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            const textModel = editor.getModel();\n            if (textModel) {\n                const model = instantiationService.createInstance(InlineCompletionsModel, textModel, this.suggestWidgetAdaptor.selectedItem, this.cursorPosition, this.textModelVersionId, this._debounceValue, observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(116 /* EditorOption.suggest */).preview), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(116 /* EditorOption.suggest */).previewMode), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(61 /* EditorOption.inlineSuggest */).mode), this._enabled);\n                this.model.set(model, tx);\n            }\n        })));\n        const getReason = (e) => {\n            var _a;\n            if (e.isUndoing) {\n                return VersionIdChangeReason.Undo;\n            }\n            if (e.isRedoing) {\n                return VersionIdChangeReason.Redo;\n            }\n            if ((_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.isAcceptingPartially) {\n                return VersionIdChangeReason.AcceptWord;\n            }\n            return VersionIdChangeReason.Other;\n        };\n        this._register(editor.onDidChangeModelContent((e) => transaction(tx => \n        /** @description onDidChangeModelContent */\n        this.updateObservables(tx, getReason(e)))));\n        this._register(editor.onDidChangeCursorPosition(e => transaction(tx => {\n            var _a;\n            /** @description onDidChangeCursorPosition */\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            if (e.reason === 3 /* CursorChangeReason.Explicit */ || e.source === 'api') {\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            }\n        })));\n        this._register(editor.onDidType(() => transaction(tx => {\n            var _a;\n            /** @description onDidType */\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            if (this._enabled.get()) {\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n            }\n        })));\n        this._register(this.commandService.onDidExecuteCommand((e) => {\n            // These commands don't trigger onDidType.\n            const commands = new Set([\n                CoreEditingCommands.Tab.id,\n                CoreEditingCommands.DeleteLeft.id,\n                CoreEditingCommands.DeleteRight.id,\n                inlineSuggestCommitId,\n                'acceptSelectedSuggestion',\n            ]);\n            if (commands.has(e.commandId) && editor.hasTextFocus() && this._enabled.get()) {\n                transaction(tx => {\n                    var _a;\n                    /** @description onDidExecuteCommand */\n                    (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n                });\n            }\n        }));\n        this._register(this.editor.onDidBlurEditorWidget(() => {\n            // This is a hidden setting very useful for debugging\n            if (this.contextKeyService.getContextKeyValue('accessibleViewIsShown') || this.configurationService.getValue('editor.inlineSuggest.keepOnBlur') ||\n                editor.getOption(61 /* EditorOption.inlineSuggest */).keepOnBlur) {\n                return;\n            }\n            if (InlineSuggestionHintsContentWidget.dropDownVisible) {\n                return;\n            }\n            transaction(tx => {\n                var _a;\n                /** @description onDidBlurEditorWidget */\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            });\n        }));\n        this._register(autorun(reader => {\n            var _a;\n            /** @description forceRenderingAbove */\n            const state = (_a = this.model.read(reader)) === null || _a === void 0 ? void 0 : _a.state.read(reader);\n            if (state === null || state === void 0 ? void 0 : state.suggestItem) {\n                if (state.ghostText.lineCount >= 2) {\n                    this.suggestWidgetAdaptor.forceRenderingAbove();\n                }\n            }\n            else {\n                this.suggestWidgetAdaptor.stopForceRenderingAbove();\n            }\n        }));\n        this._register(toDisposable(() => {\n            this.suggestWidgetAdaptor.stopForceRenderingAbove();\n        }));\n        let lastInlineCompletionId = undefined;\n        this._register(autorun(reader => {\n            /** @description play audio cue & read suggestion */\n            const model = this.model.read(reader);\n            const state = model === null || model === void 0 ? void 0 : model.state.read(reader);\n            if (!model || !state || !state.inlineCompletion) {\n                lastInlineCompletionId = undefined;\n                return;\n            }\n            if (state.inlineCompletion.semanticId !== lastInlineCompletionId) {\n                lastInlineCompletionId = state.inlineCompletion.semanticId;\n                const lineText = model.textModel.getLineContent(state.ghostText.lineNumber);\n                this.audioCueService.playAudioCue(AudioCue.inlineSuggestion).then(() => {\n                    if (this.editor.getOption(7 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n                        this.provideScreenReaderUpdate(state.ghostText.renderForScreenReader(lineText));\n                    }\n                });\n            }\n        }));\n        this._register(new InlineCompletionsHintsWidget(this.editor, this.model, this.instantiationService));\n        this._register(this.configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('accessibility.verbosity.inlineCompletions')) {\n                this.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this.configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n            }\n        }));\n        this.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this.configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n    }\n    provideScreenReaderUpdate(content) {\n        const accessibleViewShowing = this.contextKeyService.getContextKeyValue('accessibleViewIsShown');\n        const accessibleViewKeybinding = this._keybindingService.lookupKeybinding('editor.action.accessibleView');\n        let hint;\n        if (!accessibleViewShowing && accessibleViewKeybinding && this.editor.getOption(146 /* EditorOption.inlineCompletionsAccessibilityVerbose */)) {\n            hint = localize('showAccessibleViewHint', \"Inspect this in the accessible view ({0})\", accessibleViewKeybinding.getAriaLabel());\n        }\n        hint ? alert(content + ', ' + hint) : alert(content);\n    }\n    /**\n     * Copies over the relevant state from the text model to observables.\n     * This solves all kind of eventing issues, as we make sure we always operate on the latest state,\n     * regardless of who calls into us.\n     */\n    updateObservables(tx, changeReason) {\n        var _a, _b;\n        const newModel = this.editor.getModel();\n        this.textModelVersionId.set((_a = newModel === null || newModel === void 0 ? void 0 : newModel.getVersionId()) !== null && _a !== void 0 ? _a : -1, tx, changeReason);\n        this.cursorPosition.set((_b = this.editor.getPosition()) !== null && _b !== void 0 ? _b : new Position(1, 1), tx);\n    }\n    shouldShowHoverAt(range) {\n        var _a;\n        const ghostText = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.ghostText.get();\n        if (ghostText) {\n            return ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\n        }\n        return false;\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        return this.ghostTextWidget.ownsViewZone(viewZoneId);\n    }\n    hide() {\n        transaction(tx => {\n            var _a;\n            (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n        });\n    }\n};\nInlineCompletionsController.ID = 'editor.contrib.inlineCompletionsController';\nInlineCompletionsController = InlineCompletionsController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService),\n    __param(3, IConfigurationService),\n    __param(4, ICommandService),\n    __param(5, ILanguageFeatureDebounceService),\n    __param(6, ILanguageFeaturesService),\n    __param(7, IAudioCueService),\n    __param(8, IKeybindingService)\n], InlineCompletionsController);\nexport { InlineCompletionsController };\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createTrustedTypesPolicy } from '../../../../base/browser/trustedTypes.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, observableFromEvent, observableSignalFromEvent, observableValue } from '../../../../base/common/observable.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './ghostText.css';\nimport { applyFontInfo } from '../../../browser/config/domFontInfo.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { LineTokens } from '../../../common/tokens/lineTokens.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { GhostTextReplacement } from './ghostText.js';\nimport { ColumnRange, applyObservableDecorations } from './utils.js';\nlet GhostTextWidget = class GhostTextWidget extends Disposable {\n    constructor(editor, model, languageService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.languageService = languageService;\n        this.isDisposed = observableValue('isDisposed', false);\n        this.currentTextModel = observableFromEvent(this.editor.onDidChangeModel, () => this.editor.getModel());\n        this.uiState = derived(reader => {\n            /** @description uiState */\n            if (this.isDisposed.read(reader)) {\n                return undefined;\n            }\n            const textModel = this.currentTextModel.read(reader);\n            if (textModel !== this.model.targetTextModel.read(reader)) {\n                return undefined;\n            }\n            const ghostText = this.model.ghostText.read(reader);\n            if (!ghostText) {\n                return undefined;\n            }\n            const replacedRange = ghostText instanceof GhostTextReplacement ? ghostText.columnRange : undefined;\n            const inlineTexts = [];\n            const additionalLines = [];\n            function addToAdditionalLines(lines, className) {\n                if (additionalLines.length > 0) {\n                    const lastLine = additionalLines[additionalLines.length - 1];\n                    if (className) {\n                        lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* InlineDecorationType.Regular */));\n                    }\n                    lastLine.content += lines[0];\n                    lines = lines.slice(1);\n                }\n                for (const line of lines) {\n                    additionalLines.push({\n                        content: line,\n                        decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* InlineDecorationType.Regular */)] : []\n                    });\n                }\n            }\n            const textBufferLine = textModel.getLineContent(ghostText.lineNumber);\n            let hiddenTextStartColumn = undefined;\n            let lastIdx = 0;\n            for (const part of ghostText.parts) {\n                let lines = part.lines;\n                if (hiddenTextStartColumn === undefined) {\n                    inlineTexts.push({\n                        column: part.column,\n                        text: lines[0],\n                        preview: part.preview,\n                    });\n                    lines = lines.slice(1);\n                }\n                else {\n                    addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\n                }\n                if (lines.length > 0) {\n                    addToAdditionalLines(lines, 'ghost-text');\n                    if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n                        hiddenTextStartColumn = part.column;\n                    }\n                }\n                lastIdx = part.column - 1;\n            }\n            if (hiddenTextStartColumn !== undefined) {\n                addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\n            }\n            const hiddenRange = hiddenTextStartColumn !== undefined ? new ColumnRange(hiddenTextStartColumn, textBufferLine.length + 1) : undefined;\n            return {\n                replacedRange,\n                inlineTexts,\n                additionalLines,\n                hiddenRange,\n                lineNumber: ghostText.lineNumber,\n                additionalReservedLineCount: this.model.minReservedLineCount.read(reader),\n                targetTextModel: textModel,\n            };\n        });\n        this.decorations = derived(reader => {\n            /** @description decorations */\n            const uiState = this.uiState.read(reader);\n            if (!uiState) {\n                return [];\n            }\n            const decorations = [];\n            if (uiState.replacedRange) {\n                decorations.push({\n                    range: uiState.replacedRange.toRange(uiState.lineNumber),\n                    options: { inlineClassName: 'inline-completion-text-to-replace', description: 'GhostTextReplacement' }\n                });\n            }\n            if (uiState.hiddenRange) {\n                decorations.push({\n                    range: uiState.hiddenRange.toRange(uiState.lineNumber),\n                    options: { inlineClassName: 'ghost-text-hidden', description: 'ghost-text-hidden', }\n                });\n            }\n            for (const p of uiState.inlineTexts) {\n                decorations.push({\n                    range: Range.fromPositions(new Position(uiState.lineNumber, p.column)),\n                    options: {\n                        description: 'ghost-text',\n                        after: { content: p.text, inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration', cursorStops: InjectedTextCursorStops.Left },\n                        showIfCollapsed: true,\n                    }\n                });\n            }\n            return decorations;\n        });\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor, this.languageService.languageIdCodec, derived(reader => {\n            /** @description lines */\n            const uiState = this.uiState.read(reader);\n            return uiState ? {\n                lineNumber: uiState.lineNumber,\n                additionalLines: uiState.additionalLines,\n                minReservedLineCount: uiState.additionalReservedLineCount,\n                targetTextModel: uiState.targetTextModel,\n            } : undefined;\n        })));\n        this._register(toDisposable(() => { this.isDisposed.set(true, undefined); }));\n        this._register(applyObservableDecorations(this.editor, this.decorations));\n    }\n    ownsViewZone(viewZoneId) {\n        return this.additionalLinesWidget.viewZoneId === viewZoneId;\n    }\n};\nGhostTextWidget = __decorate([\n    __param(2, ILanguageService)\n], GhostTextWidget);\nexport { GhostTextWidget };\nclass AdditionalLinesWidget extends Disposable {\n    get viewZoneId() { return this._viewZoneId; }\n    constructor(editor, languageIdCodec, lines) {\n        super();\n        this.editor = editor;\n        this.languageIdCodec = languageIdCodec;\n        this.lines = lines;\n        this._viewZoneId = undefined;\n        this.editorOptionsChanged = observableSignalFromEvent('editorOptionChanged', Event.filter(this.editor.onDidChangeConfiguration, e => e.hasChanged(32 /* EditorOption.disableMonospaceOptimizations */)\n            || e.hasChanged(115 /* EditorOption.stopRenderingLineAfter */)\n            || e.hasChanged(97 /* EditorOption.renderWhitespace */)\n            || e.hasChanged(92 /* EditorOption.renderControlCharacters */)\n            || e.hasChanged(50 /* EditorOption.fontLigatures */)\n            || e.hasChanged(49 /* EditorOption.fontInfo */)\n            || e.hasChanged(65 /* EditorOption.lineHeight */)));\n        this._register(autorun(reader => {\n            /** @description update view zone */\n            const lines = this.lines.read(reader);\n            this.editorOptionsChanged.read(reader);\n            if (lines) {\n                this.updateLines(lines.lineNumber, lines.additionalLines, lines.minReservedLineCount);\n            }\n            else {\n                this.clear();\n            }\n        }));\n    }\n    dispose() {\n        super.dispose();\n        this.clear();\n    }\n    clear() {\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n        });\n    }\n    updateLines(lineNumber, additionalLines, minReservedLineCount) {\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const { tabSize } = textModel.getOptions();\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\n            if (heightInLines > 0) {\n                const domNode = document.createElement('div');\n                renderLines(domNode, tabSize, additionalLines, this.editor.getOptions(), this.languageIdCodec);\n                this._viewZoneId = changeAccessor.addZone({\n                    afterLineNumber: lineNumber,\n                    heightInLines: heightInLines,\n                    domNode,\n                    afterColumnAffinity: 1 /* PositionAffinity.Right */\n                });\n            }\n        });\n    }\n}\nfunction renderLines(domNode, tabSize, lines, opts, languageIdCodec) {\n    const disableMonospaceOptimizations = opts.get(32 /* EditorOption.disableMonospaceOptimizations */);\n    const stopRenderingLineAfter = opts.get(115 /* EditorOption.stopRenderingLineAfter */);\n    // To avoid visual confusion, we don't want to render visible whitespace\n    const renderWhitespace = 'none';\n    const renderControlCharacters = opts.get(92 /* EditorOption.renderControlCharacters */);\n    const fontLigatures = opts.get(50 /* EditorOption.fontLigatures */);\n    const fontInfo = opts.get(49 /* EditorOption.fontInfo */);\n    const lineHeight = opts.get(65 /* EditorOption.lineHeight */);\n    const sb = new StringBuilder(10000);\n    sb.appendString('<div class=\"suggest-preview-text\">');\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const lineData = lines[i];\n        const line = lineData.content;\n        sb.appendString('<div class=\"view-line');\n        sb.appendString('\" style=\"top:');\n        sb.appendString(String(i * lineHeight));\n        sb.appendString('px;width:1000000px;\">');\n        const isBasicASCII = strings.isBasicASCII(line);\n        const containsRTL = strings.containsRTL(line);\n        const lineTokens = LineTokens.createEmpty(line, languageIdCodec);\n        renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\n        sb.appendString('</div>');\n    }\n    sb.appendString('</div>');\n    applyFontInfo(domNode, fontInfo);\n    const html = sb.build();\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n    domNode.innerHTML = trustedhtml;\n}\nconst ttPolicy = createTrustedTypesPolicy('editorGhostText', { createHTML: value => value });\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { applyEdits } from './utils.js';\nexport class GhostText {\n    constructor(lineNumber, parts) {\n        this.lineNumber = lineNumber;\n        this.parts = parts;\n    }\n    equals(other) {\n        return this.lineNumber === other.lineNumber &&\n            this.parts.length === other.parts.length &&\n            this.parts.every((part, index) => part.equals(other.parts[index]));\n    }\n    /**\n     * Only used for testing/debugging.\n    */\n    render(documentText, debug = false) {\n        const l = this.lineNumber;\n        return applyEdits(documentText, [\n            ...this.parts.map(p => ({\n                range: { startLineNumber: l, endLineNumber: l, startColumn: p.column, endColumn: p.column },\n                text: debug ? `[${p.lines.join('\\n')}]` : p.lines.join('\\n')\n            })),\n        ]);\n    }\n    renderForScreenReader(lineText) {\n        if (this.parts.length === 0) {\n            return '';\n        }\n        const lastPart = this.parts[this.parts.length - 1];\n        const cappedLineText = lineText.substr(0, lastPart.column - 1);\n        const text = applyEdits(cappedLineText, this.parts.map(p => ({\n            range: { startLineNumber: 1, endLineNumber: 1, startColumn: p.column, endColumn: p.column },\n            text: p.lines.join('\\n')\n        })));\n        return text.substring(this.parts[0].column - 1);\n    }\n    isEmpty() {\n        return this.parts.every(p => p.lines.length === 0);\n    }\n    get lineCount() {\n        return 1 + this.parts.reduce((r, p) => r + p.lines.length - 1, 0);\n    }\n}\nexport class GhostTextPart {\n    constructor(column, lines, \n    /**\n     * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.\n    */\n    preview) {\n        this.column = column;\n        this.lines = lines;\n        this.preview = preview;\n    }\n    equals(other) {\n        return this.column === other.column &&\n            this.lines.length === other.lines.length &&\n            this.lines.every((line, index) => line === other.lines[index]);\n    }\n}\nexport class GhostTextReplacement {\n    constructor(lineNumber, columnRange, newLines, additionalReservedLineCount = 0) {\n        this.lineNumber = lineNumber;\n        this.columnRange = columnRange;\n        this.newLines = newLines;\n        this.additionalReservedLineCount = additionalReservedLineCount;\n        this.parts = [\n            new GhostTextPart(this.columnRange.endColumnExclusive, this.newLines, false),\n        ];\n    }\n    renderForScreenReader(_lineText) {\n        return this.newLines.join('\\n');\n    }\n    render(documentText, debug = false) {\n        const replaceRange = this.columnRange.toRange(this.lineNumber);\n        if (debug) {\n            return applyEdits(documentText, [\n                { range: Range.fromPositions(replaceRange.getStartPosition()), text: `(` },\n                { range: Range.fromPositions(replaceRange.getEndPosition()), text: `)[${this.newLines.join('\\n')}]` }\n            ]);\n        }\n        else {\n            return applyEdits(documentText, [\n                { range: replaceRange, text: this.newLines.join('\\n') }\n            ]);\n        }\n    }\n    get lineCount() {\n        return this.newLines.length;\n    }\n    isEmpty() {\n        return this.parts.every(p => p.lines.length === 0);\n    }\n    equals(other) {\n        return this.lineNumber === other.lineNumber &&\n            this.columnRange.equals(other.columnRange) &&\n            this.newLines.length === other.newLines.length &&\n            this.newLines.every((line, index) => line === other.newLines[index]) &&\n            this.additionalReservedLineCount === other.additionalReservedLineCount;\n    }\n}\nexport function ghostTextOrReplacementEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    if (a instanceof GhostText && b instanceof GhostText) {\n        return a.equals(b);\n    }\n    if (a instanceof GhostTextReplacement && b instanceof GhostTextReplacement) {\n        return a.equals(b);\n    }\n    return false;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { autorunOpts } from '../../../../base/common/observable.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nexport function applyEdits(text, edits) {\n    const transformer = new PositionOffsetTransformer(text);\n    const offsetEdits = edits.map(e => {\n        const range = Range.lift(e.range);\n        return ({\n            startOffset: transformer.getOffset(range.getStartPosition()),\n            endOffset: transformer.getOffset(range.getEndPosition()),\n            text: e.text\n        });\n    });\n    offsetEdits.sort((a, b) => b.startOffset - a.startOffset);\n    for (const edit of offsetEdits) {\n        text = text.substring(0, edit.startOffset) + edit.text + text.substring(edit.endOffset);\n    }\n    return text;\n}\nclass PositionOffsetTransformer {\n    constructor(text) {\n        this.lineStartOffsetByLineIdx = [];\n        this.lineStartOffsetByLineIdx.push(0);\n        for (let i = 0; i < text.length; i++) {\n            if (text.charAt(i) === '\\n') {\n                this.lineStartOffsetByLineIdx.push(i + 1);\n            }\n        }\n    }\n    getOffset(position) {\n        return this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\n    }\n}\nconst array = [];\nexport function getReadonlyEmptyArray() {\n    return array;\n}\nexport class ColumnRange {\n    constructor(startColumn, endColumnExclusive) {\n        this.startColumn = startColumn;\n        this.endColumnExclusive = endColumnExclusive;\n        if (startColumn > endColumnExclusive) {\n            throw new BugIndicatingError(`startColumn ${startColumn} cannot be after endColumnExclusive ${endColumnExclusive}`);\n        }\n    }\n    toRange(lineNumber) {\n        return new Range(lineNumber, this.startColumn, lineNumber, this.endColumnExclusive);\n    }\n    equals(other) {\n        return this.startColumn === other.startColumn\n            && this.endColumnExclusive === other.endColumnExclusive;\n    }\n}\nexport function applyObservableDecorations(editor, decorations) {\n    const d = new DisposableStore();\n    const decorationsCollection = editor.createDecorationsCollection();\n    d.add(autorunOpts({ debugName: () => `Apply decorations from ${decorations.debugName}` }, reader => {\n        const d = decorations.read(reader);\n        decorationsCollection.set(d);\n    }));\n    d.add({\n        dispose: () => {\n            decorationsCollection.clear();\n        }\n    });\n    return d;\n}\nexport function addPositions(pos1, pos2) {\n    return new Position(pos1.lineNumber + pos2.lineNumber - 1, pos2.lineNumber === 1 ? pos1.column + pos2.column - 1 : pos2.column);\n}\nexport function lengthOfText(text) {\n    let line = 1;\n    let column = 1;\n    for (const c of text) {\n        if (c === '\\n') {\n            line++;\n            column = 1;\n        }\n        else {\n            column++;\n        }\n    }\n    return new Position(line, column);\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { mapFind } from '../../../../base/common/arrays.js';\nimport { BugIndicatingError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, derivedHandleChanges, derivedOpts, keepAlive, observableSignal, observableValue, subtransaction, transaction } from '../../../../base/common/observable.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { GhostText, ghostTextOrReplacementEquals } from './ghostText.js';\nimport { InlineCompletionsSource } from './inlineCompletionsSource.js';\nimport { addPositions, lengthOfText } from './utils.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nexport var VersionIdChangeReason;\n(function (VersionIdChangeReason) {\n    VersionIdChangeReason[VersionIdChangeReason[\"Undo\"] = 0] = \"Undo\";\n    VersionIdChangeReason[VersionIdChangeReason[\"Redo\"] = 1] = \"Redo\";\n    VersionIdChangeReason[VersionIdChangeReason[\"AcceptWord\"] = 2] = \"AcceptWord\";\n    VersionIdChangeReason[VersionIdChangeReason[\"Other\"] = 3] = \"Other\";\n})(VersionIdChangeReason || (VersionIdChangeReason = {}));\nlet InlineCompletionsModel = class InlineCompletionsModel extends Disposable {\n    get isAcceptingPartially() { return this._isAcceptingPartially; }\n    constructor(textModel, selectedSuggestItem, cursorPosition, textModelVersionId, _debounceValue, _suggestPreviewEnabled, _suggestPreviewMode, _inlineSuggestMode, _enabled, _instantiationService, _commandService, _languageConfigurationService) {\n        super();\n        this.textModel = textModel;\n        this.selectedSuggestItem = selectedSuggestItem;\n        this.cursorPosition = cursorPosition;\n        this.textModelVersionId = textModelVersionId;\n        this._debounceValue = _debounceValue;\n        this._suggestPreviewEnabled = _suggestPreviewEnabled;\n        this._suggestPreviewMode = _suggestPreviewMode;\n        this._inlineSuggestMode = _inlineSuggestMode;\n        this._enabled = _enabled;\n        this._instantiationService = _instantiationService;\n        this._commandService = _commandService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._source = this._register(this._instantiationService.createInstance(InlineCompletionsSource, this.textModel, this.textModelVersionId, this._debounceValue));\n        this._isActive = observableValue('isActive', false);\n        this._forceUpdate = observableSignal('forceUpdate');\n        // We use a semantic id to keep the same inline completion selected even if the provider reorders the completions.\n        this._selectedInlineCompletionId = observableValue('selectedInlineCompletionId', undefined);\n        this._isAcceptingPartially = false;\n        this._preserveCurrentCompletionReasons = new Set([\n            VersionIdChangeReason.Redo,\n            VersionIdChangeReason.Undo,\n            VersionIdChangeReason.AcceptWord,\n        ]);\n        this._fetchInlineCompletions = derivedHandleChanges('fetch inline completions', {\n            createEmptyChangeSummary: () => ({\n                preserveCurrentCompletion: false,\n                inlineCompletionTriggerKind: InlineCompletionTriggerKind.Automatic\n            }),\n            handleChange: (ctx, changeSummary) => {\n                if (ctx.didChange(this.textModelVersionId) && this._preserveCurrentCompletionReasons.has(ctx.change)) {\n                    changeSummary.preserveCurrentCompletion = true;\n                }\n                else if (ctx.didChange(this._forceUpdate)) {\n                    changeSummary.inlineCompletionTriggerKind = ctx.change;\n                }\n                return true;\n            },\n        }, (reader, changeSummary) => {\n            this._forceUpdate.read(reader);\n            const shouldUpdate = (this._enabled.read(reader) && this.selectedSuggestItem.read(reader)) || this._isActive.read(reader);\n            if (!shouldUpdate) {\n                this._source.cancelUpdate();\n                return undefined;\n            }\n            this.textModelVersionId.read(reader); // Refetch on text change\n            const itemToPreserveCandidate = this.selectedInlineCompletion.get();\n            const itemToPreserve = changeSummary.preserveCurrentCompletion || (itemToPreserveCandidate === null || itemToPreserveCandidate === void 0 ? void 0 : itemToPreserveCandidate.forwardStable)\n                ? itemToPreserveCandidate : undefined;\n            const suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.get();\n            const suggestItem = this.selectedSuggestItem.read(reader);\n            if (suggestWidgetInlineCompletions && !suggestItem) {\n                const inlineCompletions = this._source.inlineCompletions.get();\n                transaction(tx => {\n                    /** @description Seed inline completions with (newer) suggest widget inline completions */\n                    if (inlineCompletions && suggestWidgetInlineCompletions.request.versionId > inlineCompletions.request.versionId) {\n                        this._source.inlineCompletions.set(suggestWidgetInlineCompletions.clone(), tx);\n                    }\n                    this._source.clearSuggestWidgetInlineCompletions(tx);\n                });\n            }\n            const cursorPosition = this.cursorPosition.read(reader);\n            const context = {\n                triggerKind: changeSummary.inlineCompletionTriggerKind,\n                selectedSuggestionInfo: suggestItem === null || suggestItem === void 0 ? void 0 : suggestItem.toSelectedSuggestionInfo(),\n            };\n            return this._source.fetch(cursorPosition, context, itemToPreserve);\n        });\n        this._filteredInlineCompletionItems = derived(reader => {\n            /** @description _filteredInlineCompletionItems */\n            const c = this._source.inlineCompletions.read(reader);\n            if (!c) {\n                return [];\n            }\n            const cursorPosition = this.cursorPosition.read(reader);\n            const filteredCompletions = c.inlineCompletions.filter(c => c.isVisible(this.textModel, cursorPosition, reader));\n            return filteredCompletions;\n        });\n        this.selectedInlineCompletionIndex = derived((reader) => {\n            /** @description selectedInlineCompletionIndex */\n            const selectedInlineCompletionId = this._selectedInlineCompletionId.read(reader);\n            const filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n            const idx = this._selectedInlineCompletionId === undefined ? -1\n                : filteredCompletions.findIndex(v => v.semanticId === selectedInlineCompletionId);\n            if (idx === -1) {\n                // Reset the selection so that the selection does not jump back when it appears again\n                this._selectedInlineCompletionId.set(undefined, undefined);\n                return 0;\n            }\n            return idx;\n        });\n        this.selectedInlineCompletion = derived((reader) => {\n            /** @description selectedCachedCompletion */\n            const filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n            const idx = this.selectedInlineCompletionIndex.read(reader);\n            return filteredCompletions[idx];\n        });\n        this.lastTriggerKind = this._source.inlineCompletions.map(v => /** @description lastTriggerKind */ v === null || v === void 0 ? void 0 : v.request.context.triggerKind);\n        this.inlineCompletionsCount = derived(reader => {\n            /** @description inlineCompletionsCount */\n            if (this.lastTriggerKind.read(reader) === InlineCompletionTriggerKind.Explicit) {\n                return this._filteredInlineCompletionItems.read(reader).length;\n            }\n            else {\n                return undefined;\n            }\n        });\n        this.state = derivedOpts({\n            equalityComparer: (a, b) => {\n                if (!a || !b) {\n                    return a === b;\n                }\n                return ghostTextOrReplacementEquals(a.ghostText, b.ghostText)\n                    && a.inlineCompletion === b.inlineCompletion\n                    && a.suggestItem === b.suggestItem;\n            }\n        }, (reader) => {\n            var _a;\n            /** @description ghostTextAndCompletion */\n            const model = this.textModel;\n            const suggestItem = this.selectedSuggestItem.read(reader);\n            if (suggestItem) {\n                const suggestCompletion = suggestItem.toSingleTextEdit().removeCommonPrefix(model);\n                const augmentedCompletion = this._computeAugmentedCompletion(suggestCompletion, reader);\n                const isSuggestionPreviewEnabled = this._suggestPreviewEnabled.read(reader);\n                if (!isSuggestionPreviewEnabled && !augmentedCompletion) {\n                    return undefined;\n                }\n                const edit = (_a = augmentedCompletion === null || augmentedCompletion === void 0 ? void 0 : augmentedCompletion.edit) !== null && _a !== void 0 ? _a : suggestCompletion;\n                const editPreviewLength = augmentedCompletion ? augmentedCompletion.edit.text.length - suggestCompletion.text.length : 0;\n                const mode = this._suggestPreviewMode.read(reader);\n                const cursor = this.cursorPosition.read(reader);\n                const newGhostText = edit.computeGhostText(model, mode, cursor, editPreviewLength);\n                // Show an invisible ghost text to reserve space\n                const ghostText = newGhostText !== null && newGhostText !== void 0 ? newGhostText : new GhostText(edit.range.endLineNumber, []);\n                return { ghostText, inlineCompletion: augmentedCompletion === null || augmentedCompletion === void 0 ? void 0 : augmentedCompletion.completion, suggestItem };\n            }\n            else {\n                if (!this._isActive.read(reader)) {\n                    return undefined;\n                }\n                const item = this.selectedInlineCompletion.read(reader);\n                if (!item) {\n                    return undefined;\n                }\n                const replacement = item.toSingleTextEdit(reader);\n                const mode = this._inlineSuggestMode.read(reader);\n                const cursor = this.cursorPosition.read(reader);\n                const ghostText = replacement.computeGhostText(model, mode, cursor);\n                return ghostText ? { ghostText, inlineCompletion: item, suggestItem: undefined } : undefined;\n            }\n        });\n        this.ghostText = derivedOpts({\n            equalityComparer: ghostTextOrReplacementEquals\n        }, reader => {\n            /** @description ghostText */\n            const v = this.state.read(reader);\n            if (!v) {\n                return undefined;\n            }\n            return v.ghostText;\n        });\n        this._register(keepAlive(this._fetchInlineCompletions, true));\n        let lastItem = undefined;\n        this._register(autorun(reader => {\n            var _a, _b;\n            /** @description call handleItemDidShow */\n            const item = this.state.read(reader);\n            const completion = item === null || item === void 0 ? void 0 : item.inlineCompletion;\n            if ((completion === null || completion === void 0 ? void 0 : completion.semanticId) !== (lastItem === null || lastItem === void 0 ? void 0 : lastItem.semanticId)) {\n                lastItem = completion;\n                if (completion) {\n                    const i = completion.inlineCompletion;\n                    const src = i.source;\n                    (_b = (_a = src.provider).handleItemDidShow) === null || _b === void 0 ? void 0 : _b.call(_a, src.inlineCompletions, i.sourceInlineCompletion, i.insertText);\n                }\n            }\n        }));\n    }\n    trigger(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._isActive.set(true, tx);\n            yield this._fetchInlineCompletions.get();\n        });\n    }\n    triggerExplicitly(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            subtransaction(tx, tx => {\n                this._isActive.set(true, tx);\n                this._forceUpdate.trigger(tx, InlineCompletionTriggerKind.Explicit);\n            });\n            yield this._fetchInlineCompletions.get();\n        });\n    }\n    stop(tx) {\n        subtransaction(tx, tx => {\n            this._isActive.set(false, tx);\n            this._source.clear(tx);\n        });\n    }\n    _computeAugmentedCompletion(suggestCompletion, reader) {\n        const model = this.textModel;\n        const suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.read(reader);\n        const candidateInlineCompletions = suggestWidgetInlineCompletions\n            ? suggestWidgetInlineCompletions.inlineCompletions\n            : [this.selectedInlineCompletion.read(reader)].filter(isDefined);\n        const augmentedCompletion = mapFind(candidateInlineCompletions, completion => {\n            let r = completion.toSingleTextEdit(reader);\n            r = r.removeCommonPrefix(model, Range.fromPositions(r.range.getStartPosition(), suggestCompletion.range.getEndPosition()));\n            return r.augments(suggestCompletion) ? { edit: r, completion } : undefined;\n        });\n        return augmentedCompletion;\n    }\n    _deltaSelectedInlineCompletionIndex(delta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.triggerExplicitly();\n            const completions = this._filteredInlineCompletionItems.get() || [];\n            if (completions.length > 0) {\n                const newIdx = (this.selectedInlineCompletionIndex.get() + delta + completions.length) % completions.length;\n                this._selectedInlineCompletionId.set(completions[newIdx].semanticId, undefined);\n            }\n            else {\n                this._selectedInlineCompletionId.set(undefined, undefined);\n            }\n        });\n    }\n    next() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._deltaSelectedInlineCompletionIndex(1);\n        });\n    }\n    previous() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._deltaSelectedInlineCompletionIndex(-1);\n        });\n    }\n    accept(editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (editor.getModel() !== this.textModel) {\n                throw new BugIndicatingError();\n            }\n            const state = this.state.get();\n            if (!state || state.ghostText.isEmpty() || !state.inlineCompletion) {\n                return;\n            }\n            const completion = state.inlineCompletion.toInlineCompletion(undefined);\n            editor.pushUndoStop();\n            if (completion.snippetInfo) {\n                editor.executeEdits('inlineSuggestion.accept', [\n                    EditOperation.replaceMove(completion.range, ''),\n                    ...completion.additionalTextEdits\n                ]);\n                editor.setPosition(completion.snippetInfo.range.getStartPosition());\n                (_a = SnippetController2.get(editor)) === null || _a === void 0 ? void 0 : _a.insert(completion.snippetInfo.snippet, { undoStopBefore: false });\n            }\n            else {\n                editor.executeEdits('inlineSuggestion.accept', [\n                    EditOperation.replaceMove(completion.range, completion.insertText),\n                    ...completion.additionalTextEdits\n                ]);\n            }\n            if (completion.command) {\n                // Make sure the completion list will not be disposed.\n                completion.source.addRef();\n            }\n            // Reset before invoking the command, since the command might cause a follow up trigger.\n            transaction(tx => {\n                this._source.clear(tx);\n                // Potentially, isActive will get set back to true by the typing or accept inline suggest event\n                // if automatic inline suggestions are enabled.\n                this._isActive.set(false, tx);\n            });\n            if (completion.command) {\n                yield this._commandService\n                    .executeCommand(completion.command.id, ...(completion.command.arguments || []))\n                    .then(undefined, onUnexpectedExternalError);\n                completion.source.removeRef();\n            }\n        });\n    }\n    acceptNextWord(editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._acceptNext(editor, (pos, text) => {\n                const langId = this.textModel.getLanguageIdAtPosition(pos.lineNumber, pos.column);\n                const config = this._languageConfigurationService.getLanguageConfiguration(langId);\n                const wordRegExp = new RegExp(config.wordDefinition.source, config.wordDefinition.flags.replace('g', ''));\n                const m1 = text.match(wordRegExp);\n                let acceptUntilIndexExclusive = 0;\n                if (m1 && m1.index !== undefined) {\n                    if (m1.index === 0) {\n                        acceptUntilIndexExclusive = m1[0].length;\n                    }\n                    else {\n                        acceptUntilIndexExclusive = m1.index;\n                    }\n                }\n                else {\n                    acceptUntilIndexExclusive = text.length;\n                }\n                const wsRegExp = /\\s+/g;\n                const m2 = wsRegExp.exec(text);\n                if (m2 && m2.index !== undefined) {\n                    if (m2.index + m2[0].length < acceptUntilIndexExclusive) {\n                        acceptUntilIndexExclusive = m2.index + m2[0].length;\n                    }\n                }\n                return acceptUntilIndexExclusive;\n            });\n        });\n    }\n    acceptNextLine(editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._acceptNext(editor, (pos, text) => {\n                const m = text.match(/\\n/);\n                if (m && m.index !== undefined) {\n                    return m.index + 1;\n                }\n                return text.length;\n            });\n        });\n    }\n    _acceptNext(editor, getAcceptUntilIndex) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (editor.getModel() !== this.textModel) {\n                throw new BugIndicatingError();\n            }\n            const state = this.state.get();\n            if (!state || state.ghostText.isEmpty() || !state.inlineCompletion) {\n                return;\n            }\n            const ghostText = state.ghostText;\n            const completion = state.inlineCompletion.toInlineCompletion(undefined);\n            if (completion.snippetInfo || completion.filterText !== completion.insertText) {\n                // not in WYSIWYG mode, partial commit might change completion, thus it is not supported\n                yield this.accept(editor);\n                return;\n            }\n            const firstPart = ghostText.parts[0];\n            const position = new Position(ghostText.lineNumber, firstPart.column);\n            const line = firstPart.lines.join('\\n');\n            const acceptUntilIndexExclusive = getAcceptUntilIndex(position, line);\n            if (acceptUntilIndexExclusive === line.length && ghostText.parts.length === 1) {\n                this.accept(editor);\n                return;\n            }\n            const partialText = line.substring(0, acceptUntilIndexExclusive);\n            this._isAcceptingPartially = true;\n            try {\n                editor.pushUndoStop();\n                editor.executeEdits('inlineSuggestion.accept', [\n                    EditOperation.replace(Range.fromPositions(position), partialText),\n                ]);\n                const length = lengthOfText(partialText);\n                editor.setPosition(addPositions(position, length));\n            }\n            finally {\n                this._isAcceptingPartially = false;\n            }\n            if (completion.source.provider.handlePartialAccept) {\n                const acceptedRange = Range.fromPositions(completion.range.getStartPosition(), addPositions(position, lengthOfText(partialText)));\n                // This assumes that the inline completion and the model use the same EOL style.\n                const text = editor.getModel().getValueInRange(acceptedRange, 1 /* EndOfLinePreference.LF */);\n                completion.source.provider.handlePartialAccept(completion.source.inlineCompletions, completion.sourceInlineCompletion, text.length);\n            }\n        });\n    }\n    handleSuggestAccepted(item) {\n        var _a, _b;\n        const itemEdit = item.toSingleTextEdit().removeCommonPrefix(this.textModel);\n        const augmentedCompletion = this._computeAugmentedCompletion(itemEdit, undefined);\n        if (!augmentedCompletion) {\n            return;\n        }\n        const inlineCompletion = augmentedCompletion.completion.inlineCompletion;\n        (_b = (_a = inlineCompletion.source.provider).handlePartialAccept) === null || _b === void 0 ? void 0 : _b.call(_a, inlineCompletion.source.inlineCompletions, inlineCompletion.sourceInlineCompletion, itemEdit.text.length);\n    }\n};\nInlineCompletionsModel = __decorate([\n    __param(9, IInstantiationService),\n    __param(10, ICommandService),\n    __param(11, ILanguageConfigurationService)\n], InlineCompletionsModel);\nexport { InlineCompletionsModel };\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { matchesSubString } from '../../../../base/common/filters.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { derived, disposableObservableValue, transaction } from '../../../../base/common/observable.js';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { provideInlineCompletions } from './provideInlineCompletions.js';\nimport { SingleTextEdit } from './singleTextEdit.js';\nlet InlineCompletionsSource = class InlineCompletionsSource extends Disposable {\n    constructor(textModel, versionId, _debounceValue, languageFeaturesService, languageConfigurationService) {\n        super();\n        this.textModel = textModel;\n        this.versionId = versionId;\n        this._debounceValue = _debounceValue;\n        this.languageFeaturesService = languageFeaturesService;\n        this.languageConfigurationService = languageConfigurationService;\n        this._updateOperation = this._register(new MutableDisposable());\n        this.inlineCompletions = disposableObservableValue('inlineCompletions', undefined);\n        this.suggestWidgetInlineCompletions = disposableObservableValue('suggestWidgetInlineCompletions', undefined);\n        this._register(this.textModel.onDidChangeContent(() => {\n            this._updateOperation.clear();\n        }));\n    }\n    fetch(position, context, activeInlineCompletion) {\n        var _a, _b;\n        const request = new UpdateRequest(position, context, this.textModel.getVersionId());\n        const target = context.selectedSuggestionInfo ? this.suggestWidgetInlineCompletions : this.inlineCompletions;\n        if ((_a = this._updateOperation.value) === null || _a === void 0 ? void 0 : _a.request.satisfies(request)) {\n            return this._updateOperation.value.promise;\n        }\n        else if ((_b = target.get()) === null || _b === void 0 ? void 0 : _b.request.satisfies(request)) {\n            return Promise.resolve(true);\n        }\n        const updateOngoing = !!this._updateOperation.value;\n        this._updateOperation.clear();\n        const source = new CancellationTokenSource();\n        const promise = (() => __awaiter(this, void 0, void 0, function* () {\n            const shouldDebounce = updateOngoing || context.triggerKind === InlineCompletionTriggerKind.Automatic;\n            if (shouldDebounce) {\n                // This debounces the operation\n                yield wait(this._debounceValue.get(this.textModel));\n            }\n            if (source.token.isCancellationRequested || this.textModel.getVersionId() !== request.versionId) {\n                return false;\n            }\n            const startTime = new Date();\n            const updatedCompletions = yield provideInlineCompletions(this.languageFeaturesService.inlineCompletionsProvider, position, this.textModel, context, source.token, this.languageConfigurationService);\n            if (source.token.isCancellationRequested || this.textModel.getVersionId() !== request.versionId) {\n                return false;\n            }\n            const endTime = new Date();\n            this._debounceValue.update(this.textModel, endTime.getTime() - startTime.getTime());\n            const completions = new UpToDateInlineCompletions(updatedCompletions, request, this.textModel, this.versionId);\n            if (activeInlineCompletion) {\n                const asInlineCompletion = activeInlineCompletion.toInlineCompletion(undefined);\n                if (activeInlineCompletion.canBeReused(this.textModel, position) && !updatedCompletions.has(asInlineCompletion)) {\n                    completions.prepend(activeInlineCompletion.inlineCompletion, asInlineCompletion.range, true);\n                }\n            }\n            this._updateOperation.clear();\n            transaction(tx => {\n                /** @description Update completions with provider result */\n                target.set(completions, tx);\n            });\n            return true;\n        }))();\n        const updateOperation = new UpdateOperation(request, source, promise);\n        this._updateOperation.value = updateOperation;\n        return promise;\n    }\n    clear(tx) {\n        this._updateOperation.clear();\n        this.inlineCompletions.set(undefined, tx);\n        this.suggestWidgetInlineCompletions.set(undefined, tx);\n    }\n    clearSuggestWidgetInlineCompletions(tx) {\n        var _a;\n        if ((_a = this._updateOperation.value) === null || _a === void 0 ? void 0 : _a.request.context.selectedSuggestionInfo) {\n            this._updateOperation.clear();\n        }\n        this.suggestWidgetInlineCompletions.set(undefined, tx);\n    }\n    cancelUpdate() {\n        this._updateOperation.clear();\n    }\n};\nInlineCompletionsSource = __decorate([\n    __param(3, ILanguageFeaturesService),\n    __param(4, ILanguageConfigurationService)\n], InlineCompletionsSource);\nexport { InlineCompletionsSource };\nfunction wait(ms, cancellationToken) {\n    return new Promise(resolve => {\n        let d = undefined;\n        const handle = setTimeout(() => {\n            if (d) {\n                d.dispose();\n            }\n            resolve();\n        }, ms);\n        if (cancellationToken) {\n            d = cancellationToken.onCancellationRequested(() => {\n                clearTimeout(handle);\n                if (d) {\n                    d.dispose();\n                }\n                resolve();\n            });\n        }\n    });\n}\nclass UpdateRequest {\n    constructor(position, context, versionId) {\n        this.position = position;\n        this.context = context;\n        this.versionId = versionId;\n    }\n    satisfies(other) {\n        return this.position.equals(other.position)\n            && equals(this.context.selectedSuggestionInfo, other.context.selectedSuggestionInfo, (v1, v2) => v1.equals(v2))\n            && (other.context.triggerKind === InlineCompletionTriggerKind.Automatic\n                || this.context.triggerKind === InlineCompletionTriggerKind.Explicit)\n            && this.versionId === other.versionId;\n    }\n}\nfunction equals(v1, v2, equals) {\n    if (!v1 || !v2) {\n        return v1 === v2;\n    }\n    return equals(v1, v2);\n}\nclass UpdateOperation {\n    constructor(request, cancellationTokenSource, promise) {\n        this.request = request;\n        this.cancellationTokenSource = cancellationTokenSource;\n        this.promise = promise;\n    }\n    dispose() {\n        this.cancellationTokenSource.cancel();\n    }\n}\nexport class UpToDateInlineCompletions {\n    get inlineCompletions() { return this._inlineCompletions; }\n    constructor(inlineCompletionProviderResult, request, textModel, versionId) {\n        this.inlineCompletionProviderResult = inlineCompletionProviderResult;\n        this.request = request;\n        this.textModel = textModel;\n        this.versionId = versionId;\n        this._refCount = 1;\n        this._prependedInlineCompletionItems = [];\n        this._rangeVersionIdValue = 0;\n        this._rangeVersionId = derived(reader => {\n            /** @description ranges */\n            this.versionId.read(reader);\n            let changed = false;\n            for (const i of this._inlineCompletions) {\n                changed = changed || i._updateRange(this.textModel);\n            }\n            if (changed) {\n                this._rangeVersionIdValue++;\n            }\n            return this._rangeVersionIdValue;\n        });\n        const ids = textModel.deltaDecorations([], inlineCompletionProviderResult.completions.map(i => ({\n            range: i.range,\n            options: {\n                description: 'inline-completion-tracking-range'\n            },\n        })));\n        this._inlineCompletions = inlineCompletionProviderResult.completions.map((i, index) => new InlineCompletionWithUpdatedRange(i, ids[index], this._rangeVersionId));\n    }\n    clone() {\n        this._refCount++;\n        return this;\n    }\n    dispose() {\n        this._refCount--;\n        if (this._refCount === 0) {\n            setTimeout(() => {\n                // To fix https://github.com/microsoft/vscode/issues/188348\n                if (!this.textModel.isDisposed()) {\n                    // This is just cleanup. It's ok if it happens with a delay.\n                    this.textModel.deltaDecorations(this._inlineCompletions.map(i => i.decorationId), []);\n                }\n            }, 0);\n            this.inlineCompletionProviderResult.dispose();\n            for (const i of this._prependedInlineCompletionItems) {\n                i.source.removeRef();\n            }\n        }\n    }\n    prepend(inlineCompletion, range, addRefToSource) {\n        if (addRefToSource) {\n            inlineCompletion.source.addRef();\n        }\n        const id = this.textModel.deltaDecorations([], [{\n                range,\n                options: {\n                    description: 'inline-completion-tracking-range'\n                },\n            }])[0];\n        this._inlineCompletions.unshift(new InlineCompletionWithUpdatedRange(inlineCompletion, id, this._rangeVersionId, range));\n        this._prependedInlineCompletionItems.push(inlineCompletion);\n    }\n}\nexport class InlineCompletionWithUpdatedRange {\n    get forwardStable() {\n        var _a;\n        return (_a = this.inlineCompletion.source.inlineCompletions.enableForwardStability) !== null && _a !== void 0 ? _a : false;\n    }\n    constructor(inlineCompletion, decorationId, rangeVersion, initialRange) {\n        this.inlineCompletion = inlineCompletion;\n        this.decorationId = decorationId;\n        this.rangeVersion = rangeVersion;\n        this.semanticId = JSON.stringify([\n            this.inlineCompletion.filterText,\n            this.inlineCompletion.insertText,\n            this.inlineCompletion.range.getStartPosition().toString()\n        ]);\n        this._isValid = true;\n        this._updatedRange = initialRange !== null && initialRange !== void 0 ? initialRange : inlineCompletion.range;\n    }\n    toInlineCompletion(reader) {\n        return this.inlineCompletion.withRange(this._getUpdatedRange(reader));\n    }\n    toSingleTextEdit(reader) {\n        return new SingleTextEdit(this._getUpdatedRange(reader), this.inlineCompletion.insertText);\n    }\n    isVisible(model, cursorPosition, reader) {\n        const minimizedReplacement = this._toFilterTextReplacement(reader).removeCommonPrefix(model);\n        if (!this._isValid\n            || !this.inlineCompletion.range.getStartPosition().equals(this._getUpdatedRange(reader).getStartPosition())\n            || cursorPosition.lineNumber !== minimizedReplacement.range.startLineNumber) {\n            return false;\n        }\n        const originalValue = model.getValueInRange(minimizedReplacement.range, 1 /* EndOfLinePreference.LF */).toLowerCase();\n        const filterText = minimizedReplacement.text.toLowerCase();\n        const cursorPosIndex = Math.max(0, cursorPosition.column - minimizedReplacement.range.startColumn);\n        let filterTextBefore = filterText.substring(0, cursorPosIndex);\n        let filterTextAfter = filterText.substring(cursorPosIndex);\n        let originalValueBefore = originalValue.substring(0, cursorPosIndex);\n        let originalValueAfter = originalValue.substring(cursorPosIndex);\n        const originalValueIndent = model.getLineIndentColumn(minimizedReplacement.range.startLineNumber);\n        if (minimizedReplacement.range.startColumn <= originalValueIndent) {\n            // Remove indentation\n            originalValueBefore = originalValueBefore.trimStart();\n            if (originalValueBefore.length === 0) {\n                originalValueAfter = originalValueAfter.trimStart();\n            }\n            filterTextBefore = filterTextBefore.trimStart();\n            if (filterTextBefore.length === 0) {\n                filterTextAfter = filterTextAfter.trimStart();\n            }\n        }\n        return filterTextBefore.startsWith(originalValueBefore)\n            && !!matchesSubString(originalValueAfter, filterTextAfter);\n    }\n    canBeReused(model, position) {\n        const result = this._isValid\n            && this._getUpdatedRange(undefined).containsPosition(position)\n            && this.isVisible(model, position, undefined)\n            && !this._isSmallerThanOriginal(undefined);\n        return result;\n    }\n    _toFilterTextReplacement(reader) {\n        return new SingleTextEdit(this._getUpdatedRange(reader), this.inlineCompletion.filterText);\n    }\n    _isSmallerThanOriginal(reader) {\n        return length(this._getUpdatedRange(reader)).isBefore(length(this.inlineCompletion.range));\n    }\n    _getUpdatedRange(reader) {\n        this.rangeVersion.read(reader); // This makes sure all the ranges are updated.\n        return this._updatedRange;\n    }\n    _updateRange(textModel) {\n        const range = textModel.getDecorationRange(this.decorationId);\n        if (!range) {\n            // A setValue call might flush all decorations.\n            this._isValid = false;\n            return true;\n        }\n        if (!this._updatedRange.equalsRange(range)) {\n            this._updatedRange = range;\n            return true;\n        }\n        return false;\n    }\n}\nfunction length(range) {\n    if (range.startLineNumber === range.endLineNumber) {\n        return new Position(1, 1 + range.endColumn - range.startColumn);\n    }\n    else {\n        return new Position(1 + range.endLineNumber - range.startLineNumber, range.endColumn);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { assertNever } from '../../../../base/common/assert.js';\nimport { DeferredPromise } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { SetMap } from '../../../../base/common/collections.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Range } from '../../../common/core/range.js';\nimport { fixBracketsInLine } from '../../../common/model/bracketPairsTextModelPart/fixBrackets.js';\nimport { SingleTextEdit } from './singleTextEdit.js';\nimport { getReadonlyEmptyArray } from './utils.js';\nimport { SnippetParser, Text } from '../../snippet/browser/snippetParser.js';\nexport function provideInlineCompletions(registry, position, model, context, token = CancellationToken.None, languageConfigurationService) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Important: Don't use position after the await calls, as the model could have been changed in the meantime!\n        const defaultReplaceRange = getDefaultRange(position, model);\n        const providers = registry.all(model);\n        const multiMap = new SetMap();\n        for (const provider of providers) {\n            if (provider.groupId) {\n                multiMap.add(provider.groupId, provider);\n            }\n        }\n        function getPreferredProviders(provider) {\n            if (!provider.yieldsToGroupIds) {\n                return [];\n            }\n            const result = [];\n            for (const groupId of provider.yieldsToGroupIds || []) {\n                const providers = multiMap.get(groupId);\n                for (const p of providers) {\n                    result.push(p);\n                }\n            }\n            return result;\n        }\n        const states = new Map();\n        const seen = new Set();\n        function findPreferredProviderCircle(provider, stack) {\n            stack = [...stack, provider];\n            if (seen.has(provider)) {\n                return stack;\n            }\n            seen.add(provider);\n            try {\n                const preferred = getPreferredProviders(provider);\n                for (const p of preferred) {\n                    const c = findPreferredProviderCircle(p, stack);\n                    if (c) {\n                        return c;\n                    }\n                }\n            }\n            finally {\n                seen.delete(provider);\n            }\n            return undefined;\n        }\n        function processProvider(provider) {\n            const state = states.get(provider);\n            if (state) {\n                return state;\n            }\n            const circle = findPreferredProviderCircle(provider, []);\n            if (circle) {\n                onUnexpectedExternalError(new Error(`Inline completions: cyclic yield-to dependency detected. Path: ${circle.map(s => s.toString ? s.toString() : ('' + s)).join(' -> ')}`));\n            }\n            const deferredPromise = new DeferredPromise();\n            states.set(provider, deferredPromise.p);\n            (() => __awaiter(this, void 0, void 0, function* () {\n                if (!circle) {\n                    const preferred = getPreferredProviders(provider);\n                    for (const p of preferred) {\n                        const result = yield processProvider(p);\n                        if (result && result.items.length > 0) {\n                            // Skip provider\n                            return undefined;\n                        }\n                    }\n                }\n                try {\n                    const completions = yield provider.provideInlineCompletions(model, position, context, token);\n                    return completions;\n                }\n                catch (e) {\n                    onUnexpectedExternalError(e);\n                    return undefined;\n                }\n            }))().then(c => deferredPromise.complete(c), e => deferredPromise.error(e));\n            return deferredPromise.p;\n        }\n        const providerResults = yield Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () { return ({ provider, completions: yield processProvider(provider) }); })));\n        const itemsByHash = new Map();\n        const lists = [];\n        for (const result of providerResults) {\n            const completions = result.completions;\n            if (!completions) {\n                continue;\n            }\n            const list = new InlineCompletionList(completions, result.provider);\n            lists.push(list);\n            for (const item of completions.items) {\n                const inlineCompletionItem = InlineCompletionItem.from(item, list, defaultReplaceRange, model, languageConfigurationService);\n                itemsByHash.set(inlineCompletionItem.hash(), inlineCompletionItem);\n            }\n        }\n        return new InlineCompletionProviderResult(Array.from(itemsByHash.values()), new Set(itemsByHash.keys()), lists);\n    });\n}\nexport class InlineCompletionProviderResult {\n    constructor(\n    /**\n     * Free of duplicates.\n     */\n    completions, hashs, providerResults) {\n        this.completions = completions;\n        this.hashs = hashs;\n        this.providerResults = providerResults;\n    }\n    has(item) {\n        return this.hashs.has(item.hash());\n    }\n    dispose() {\n        for (const result of this.providerResults) {\n            result.removeRef();\n        }\n    }\n}\n/**\n * A ref counted pointer to the computed `InlineCompletions` and the `InlineCompletionsProvider` that\n * computed them.\n */\nexport class InlineCompletionList {\n    constructor(inlineCompletions, provider) {\n        this.inlineCompletions = inlineCompletions;\n        this.provider = provider;\n        this.refCount = 1;\n    }\n    addRef() {\n        this.refCount++;\n    }\n    removeRef() {\n        this.refCount--;\n        if (this.refCount === 0) {\n            this.provider.freeInlineCompletions(this.inlineCompletions);\n        }\n    }\n}\nexport class InlineCompletionItem {\n    static from(inlineCompletion, source, defaultReplaceRange, textModel, languageConfigurationService) {\n        let insertText;\n        let snippetInfo;\n        let range = inlineCompletion.range ? Range.lift(inlineCompletion.range) : defaultReplaceRange;\n        if (typeof inlineCompletion.insertText === 'string') {\n            insertText = inlineCompletion.insertText;\n            if (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n                insertText = closeBrackets(insertText, range.getStartPosition(), textModel, languageConfigurationService);\n                // Modify range depending on if brackets are added or removed\n                const diff = insertText.length - inlineCompletion.insertText.length;\n                if (diff !== 0) {\n                    range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                }\n            }\n            snippetInfo = undefined;\n        }\n        else if ('snippet' in inlineCompletion.insertText) {\n            const preBracketCompletionLength = inlineCompletion.insertText.snippet.length;\n            if (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n                inlineCompletion.insertText.snippet = closeBrackets(inlineCompletion.insertText.snippet, range.getStartPosition(), textModel, languageConfigurationService);\n                // Modify range depending on if brackets are added or removed\n                const diff = inlineCompletion.insertText.snippet.length - preBracketCompletionLength;\n                if (diff !== 0) {\n                    range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                }\n            }\n            const snippet = new SnippetParser().parse(inlineCompletion.insertText.snippet);\n            if (snippet.children.length === 1 && snippet.children[0] instanceof Text) {\n                insertText = snippet.children[0].value;\n                snippetInfo = undefined;\n            }\n            else {\n                insertText = snippet.toString();\n                snippetInfo = {\n                    snippet: inlineCompletion.insertText.snippet,\n                    range: range\n                };\n            }\n        }\n        else {\n            assertNever(inlineCompletion.insertText);\n        }\n        return new InlineCompletionItem(insertText, inlineCompletion.command, range, insertText, snippetInfo, inlineCompletion.additionalTextEdits || getReadonlyEmptyArray(), inlineCompletion, source);\n    }\n    constructor(filterText, command, range, insertText, snippetInfo, additionalTextEdits, \n    /**\n     * A reference to the original inline completion this inline completion has been constructed from.\n     * Used for event data to ensure referential equality.\n    */\n    sourceInlineCompletion, \n    /**\n     * A reference to the original inline completion list this inline completion has been constructed from.\n     * Used for event data to ensure referential equality.\n    */\n    source) {\n        this.filterText = filterText;\n        this.command = command;\n        this.range = range;\n        this.insertText = insertText;\n        this.snippetInfo = snippetInfo;\n        this.additionalTextEdits = additionalTextEdits;\n        this.sourceInlineCompletion = sourceInlineCompletion;\n        this.source = source;\n        filterText = filterText.replace(/\\r\\n|\\r/g, '\\n');\n        insertText = filterText.replace(/\\r\\n|\\r/g, '\\n');\n    }\n    withRange(updatedRange) {\n        return new InlineCompletionItem(this.filterText, this.command, updatedRange, this.insertText, this.snippetInfo, this.additionalTextEdits, this.sourceInlineCompletion, this.source);\n    }\n    hash() {\n        return JSON.stringify({ insertText: this.insertText, range: this.range.toString() });\n    }\n    toSingleTextEdit() {\n        return new SingleTextEdit(this.range, this.insertText);\n    }\n}\nfunction getDefaultRange(position, model) {\n    const word = model.getWordAtPosition(position);\n    const maxColumn = model.getLineMaxColumn(position.lineNumber);\n    // By default, always replace up until the end of the current line.\n    // This default might be subject to change!\n    return word\n        ? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\n        : Range.fromPositions(position, position.with(undefined, maxColumn));\n}\nfunction closeBrackets(text, position, model, languageConfigurationService) {\n    const lineStart = model.getLineContent(position.lineNumber).substring(0, position.column - 1);\n    const newLine = lineStart + text;\n    const newTokens = model.tokenization.tokenizeLineWithEdit(position, newLine.length - (position.column - 1), text);\n    const slicedTokens = newTokens === null || newTokens === void 0 ? void 0 : newTokens.sliceAndInflate(position.column - 1, newLine.length, 0);\n    if (!slicedTokens) {\n        return text;\n    }\n    const newText = fixBracketsInLine(slicedTokens, languageConfigurationService);\n    return newText;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LanguageAgnosticBracketTokens } from './bracketPairsTree/brackets.js';\nimport { lengthAdd, lengthGetColumnCountIfZeroLineCount, lengthZero } from './bracketPairsTree/length.js';\nimport { parseDocument } from './bracketPairsTree/parser.js';\nimport { DenseKeyProvider } from './bracketPairsTree/smallImmutableSet.js';\nimport { TextBufferTokenizer } from './bracketPairsTree/tokenizer.js';\nexport function fixBracketsInLine(tokens, languageConfigurationService) {\n    const denseKeyProvider = new DenseKeyProvider();\n    const bracketTokens = new LanguageAgnosticBracketTokens(denseKeyProvider, (languageId) => languageConfigurationService.getLanguageConfiguration(languageId));\n    const tokenizer = new TextBufferTokenizer(new StaticTokenizerSource([tokens]), bracketTokens);\n    const node = parseDocument(tokenizer, [], undefined, true);\n    let str = '';\n    const line = tokens.getLineContent();\n    function processNode(node, offset) {\n        if (node.kind === 2 /* AstNodeKind.Pair */) {\n            processNode(node.openingBracket, offset);\n            offset = lengthAdd(offset, node.openingBracket.length);\n            if (node.child) {\n                processNode(node.child, offset);\n                offset = lengthAdd(offset, node.child.length);\n            }\n            if (node.closingBracket) {\n                processNode(node.closingBracket, offset);\n                offset = lengthAdd(offset, node.closingBracket.length);\n            }\n            else {\n                const singleLangBracketTokens = bracketTokens.getSingleLanguageBracketTokens(node.openingBracket.languageId);\n                const closingTokenText = singleLangBracketTokens.findClosingTokenText(node.openingBracket.bracketIds);\n                str += closingTokenText;\n            }\n        }\n        else if (node.kind === 3 /* AstNodeKind.UnexpectedClosingBracket */) {\n            // remove the bracket\n        }\n        else if (node.kind === 0 /* AstNodeKind.Text */ || node.kind === 1 /* AstNodeKind.Bracket */) {\n            str += line.substring(lengthGetColumnCountIfZeroLineCount(offset), lengthGetColumnCountIfZeroLineCount(lengthAdd(offset, node.length)));\n        }\n        else if (node.kind === 4 /* AstNodeKind.List */) {\n            for (const child of node.children) {\n                processNode(child, offset);\n                offset = lengthAdd(offset, child.length);\n            }\n        }\n    }\n    processNode(node, lengthZero);\n    return str;\n}\nclass StaticTokenizerSource {\n    constructor(lines) {\n        this.lines = lines;\n        this.tokenization = {\n            getLineTokens: (lineNumber) => {\n                return this.lines[lineNumber - 1];\n            }\n        };\n    }\n    getValue() {\n        return this.lines.map(l => l.getLineContent()).join('\\n');\n    }\n    getLineCount() {\n        return this.lines.length;\n    }\n    getLineLength(lineNumber) {\n        return this.lines[lineNumber - 1].getLineContent().length;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../../base/common/diff/diff.js';\nimport { commonPrefixLength, getLeadingWhitespace, splitLines } from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { GhostText, GhostTextPart } from './ghostText.js';\nimport { addPositions, lengthOfText } from './utils.js';\nexport class SingleTextEdit {\n    constructor(range, text) {\n        this.range = range;\n        this.text = text;\n    }\n    removeCommonPrefix(model, validModelRange) {\n        const modelRange = validModelRange ? this.range.intersectRanges(validModelRange) : this.range;\n        if (!modelRange) {\n            return this;\n        }\n        const valueToReplace = model.getValueInRange(modelRange, 1 /* EndOfLinePreference.LF */);\n        const commonPrefixLen = commonPrefixLength(valueToReplace, this.text);\n        const start = addPositions(this.range.getStartPosition(), lengthOfText(valueToReplace.substring(0, commonPrefixLen)));\n        const text = this.text.substring(commonPrefixLen);\n        const range = Range.fromPositions(start, this.range.getEndPosition());\n        return new SingleTextEdit(range, text);\n    }\n    augments(base) {\n        // The augmented completion must replace the base range, but can replace even more\n        return this.text.startsWith(base.text) && rangeExtends(this.range, base.range);\n    }\n    /**\n     * @param previewSuffixLength Sets where to split `inlineCompletion.text`.\n     * \tIf the text is `hello` and the suffix length is 2, the non-preview part is `hel` and the preview-part is `lo`.\n    */\n    computeGhostText(model, mode, cursorPosition, previewSuffixLength = 0) {\n        let edit = this.removeCommonPrefix(model);\n        if (edit.range.endLineNumber !== edit.range.startLineNumber) {\n            // This edit might span multiple lines, but the first lines must be a common prefix.\n            return undefined;\n        }\n        const sourceLine = model.getLineContent(edit.range.startLineNumber);\n        const sourceIndentationLength = getLeadingWhitespace(sourceLine).length;\n        const suggestionTouchesIndentation = edit.range.startColumn - 1 <= sourceIndentationLength;\n        if (suggestionTouchesIndentation) {\n            // source:      ··········[······abc]\n            //                         ^^^^^^^^^ inlineCompletion.range\n            //              ^^^^^^^^^^ ^^^^^^ sourceIndentationLength\n            //                         ^^^^^^ replacedIndentation.length\n            //                               ^^^ rangeThatDoesNotReplaceIndentation\n            // inlineCompletion.text: '··foo'\n            //                         ^^ suggestionAddedIndentationLength\n            const suggestionAddedIndentationLength = getLeadingWhitespace(edit.text).length;\n            const replacedIndentation = sourceLine.substring(edit.range.startColumn - 1, sourceIndentationLength);\n            const [startPosition, endPosition] = [edit.range.getStartPosition(), edit.range.getEndPosition()];\n            const newStartPosition = startPosition.column + replacedIndentation.length <= endPosition.column\n                ? startPosition.delta(0, replacedIndentation.length)\n                : endPosition;\n            const rangeThatDoesNotReplaceIndentation = Range.fromPositions(newStartPosition, endPosition);\n            const suggestionWithoutIndentationChange = edit.text.startsWith(replacedIndentation)\n                // Adds more indentation without changing existing indentation: We can add ghost text for this\n                ? edit.text.substring(replacedIndentation.length)\n                // Changes or removes existing indentation. Only add ghost text for the non-indentation part.\n                : edit.text.substring(suggestionAddedIndentationLength);\n            edit = new SingleTextEdit(rangeThatDoesNotReplaceIndentation, suggestionWithoutIndentationChange);\n        }\n        // This is a single line string\n        const valueToBeReplaced = model.getValueInRange(edit.range);\n        const changes = cachingDiff(valueToBeReplaced, edit.text);\n        if (!changes) {\n            // No ghost text in case the diff would be too slow to compute\n            return undefined;\n        }\n        const lineNumber = edit.range.startLineNumber;\n        const parts = new Array();\n        if (mode === 'prefix') {\n            const filteredChanges = changes.filter(c => c.originalLength === 0);\n            if (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) {\n                // Prefixes only have a single change.\n                return undefined;\n            }\n        }\n        const previewStartInCompletionText = edit.text.length - previewSuffixLength;\n        for (const c of changes) {\n            const insertColumn = edit.range.startColumn + c.originalStart + c.originalLength;\n            if (mode === 'subwordSmart' && cursorPosition && cursorPosition.lineNumber === edit.range.startLineNumber && insertColumn < cursorPosition.column) {\n                // No ghost text before cursor\n                return undefined;\n            }\n            if (c.originalLength > 0) {\n                return undefined;\n            }\n            if (c.modifiedLength === 0) {\n                continue;\n            }\n            const modifiedEnd = c.modifiedStart + c.modifiedLength;\n            const nonPreviewTextEnd = Math.max(c.modifiedStart, Math.min(modifiedEnd, previewStartInCompletionText));\n            const nonPreviewText = edit.text.substring(c.modifiedStart, nonPreviewTextEnd);\n            const italicText = edit.text.substring(nonPreviewTextEnd, Math.max(c.modifiedStart, modifiedEnd));\n            if (nonPreviewText.length > 0) {\n                const lines = splitLines(nonPreviewText);\n                parts.push(new GhostTextPart(insertColumn, lines, false));\n            }\n            if (italicText.length > 0) {\n                const lines = splitLines(italicText);\n                parts.push(new GhostTextPart(insertColumn, lines, true));\n            }\n        }\n        return new GhostText(lineNumber, parts);\n    }\n}\nfunction rangeExtends(extendingRange, rangeToExtend) {\n    return rangeToExtend.getStartPosition().equals(extendingRange.getStartPosition())\n        && rangeToExtend.getEndPosition().isBeforeOrEqual(extendingRange.getEndPosition());\n}\nlet lastRequest = undefined;\nfunction cachingDiff(originalValue, newValue) {\n    if ((lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.originalValue) === originalValue && (lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.newValue) === newValue) {\n        return lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.changes;\n    }\n    else {\n        let changes = smartDiff(originalValue, newValue, true);\n        if (changes) {\n            const deletedChars = deletedCharacters(changes);\n            if (deletedChars > 0) {\n                // For performance reasons, don't compute diff if there is nothing to improve\n                const newChanges = smartDiff(originalValue, newValue, false);\n                if (newChanges && deletedCharacters(newChanges) < deletedChars) {\n                    // Disabling smartness seems to be better here\n                    changes = newChanges;\n                }\n            }\n        }\n        lastRequest = {\n            originalValue,\n            newValue,\n            changes\n        };\n        return changes;\n    }\n}\nfunction deletedCharacters(changes) {\n    let sum = 0;\n    for (const c of changes) {\n        sum += c.originalLength;\n    }\n    return sum;\n}\n/**\n * When matching `if ()` with `if (f() = 1) { g(); }`,\n * align it like this:        `if (       )`\n * Not like this:\t\t\t  `if (  )`\n * Also not like this:\t\t  `if (             )`.\n *\n * The parenthesis are preprocessed to ensure that they match correctly.\n */\nfunction smartDiff(originalValue, newValue, smartBracketMatching) {\n    if (originalValue.length > 5000 || newValue.length > 5000) {\n        // We don't want to work on strings that are too big\n        return undefined;\n    }\n    function getMaxCharCode(val) {\n        let maxCharCode = 0;\n        for (let i = 0, len = val.length; i < len; i++) {\n            const charCode = val.charCodeAt(i);\n            if (charCode > maxCharCode) {\n                maxCharCode = charCode;\n            }\n        }\n        return maxCharCode;\n    }\n    const maxCharCode = Math.max(getMaxCharCode(originalValue), getMaxCharCode(newValue));\n    function getUniqueCharCode(id) {\n        if (id < 0) {\n            throw new Error('unexpected');\n        }\n        return maxCharCode + id + 1;\n    }\n    function getElements(source) {\n        let level = 0;\n        let group = 0;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            // TODO support more brackets\n            if (smartBracketMatching && source[i] === '(') {\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id);\n                level++;\n            }\n            else if (smartBracketMatching && source[i] === ')') {\n                level = Math.max(level - 1, 0);\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id + 1);\n                if (level === 0) {\n                    group++;\n                }\n            }\n            else {\n                characters[i] = source.charCodeAt(i);\n            }\n        }\n        return characters;\n    }\n    const elements1 = getElements(originalValue);\n    const elements2 = getElements(newValue);\n    return new LcsDiff({ getElements: () => elements1 }, { getElements: () => elements2 }).ComputeDiff(false).changes;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SelectedSuggestionInfo } from '../../../common/languages.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../snippet/browser/snippetSession.js';\nimport { SuggestController } from '../../suggest/browser/suggestController.js';\nimport { observableValue, transaction } from '../../../../base/common/observable.js';\nimport { SingleTextEdit } from './singleTextEdit.js';\nimport { compareBy, findMaxBy, numberComparator } from '../../../../base/common/arrays.js';\nexport class SuggestWidgetAdaptor extends Disposable {\n    get selectedItem() {\n        return this._selectedItem;\n    }\n    constructor(editor, suggestControllerPreselector, checkModelVersion, onWillAccept) {\n        super();\n        this.editor = editor;\n        this.suggestControllerPreselector = suggestControllerPreselector;\n        this.checkModelVersion = checkModelVersion;\n        this.onWillAccept = onWillAccept;\n        this.isSuggestWidgetVisible = false;\n        this.isShiftKeyPressed = false;\n        this._isActive = false;\n        this._currentSuggestItemInfo = undefined;\n        this._selectedItem = observableValue('suggestWidgetInlineCompletionProvider.selectedItem', undefined);\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n        this._register(editor.onKeyDown(e => {\n            if (e.shiftKey && !this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = true;\n                this.update(this._isActive);\n            }\n        }));\n        this._register(editor.onKeyUp(e => {\n            if (e.shiftKey && this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = false;\n                this.update(this._isActive);\n            }\n        }));\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            this._register(suggestController.registerSelector({\n                priority: 100,\n                select: (model, pos, suggestItems) => {\n                    var _a;\n                    transaction(tx => this.checkModelVersion(tx));\n                    const textModel = this.editor.getModel();\n                    if (!textModel) {\n                        // Should not happen\n                        return -1;\n                    }\n                    const itemToPreselect = (_a = this.suggestControllerPreselector()) === null || _a === void 0 ? void 0 : _a.removeCommonPrefix(textModel);\n                    if (!itemToPreselect) {\n                        return -1;\n                    }\n                    const position = Position.lift(pos);\n                    const candidates = suggestItems\n                        .map((suggestItem, index) => {\n                        const suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, textModel, position, suggestItem, this.isShiftKeyPressed);\n                        const suggestItemTextEdit = suggestItemInfo.toSingleTextEdit().removeCommonPrefix(textModel);\n                        const valid = itemToPreselect.augments(suggestItemTextEdit);\n                        return { index, valid, prefixLength: suggestItemTextEdit.text.length, suggestItem };\n                    })\n                        .filter(item => item && item.valid && item.prefixLength > 0);\n                    const result = findMaxBy(candidates, compareBy(s => s.prefixLength, numberComparator));\n                    return result ? result.index : -1;\n                }\n            }));\n            let isBoundToSuggestWidget = false;\n            const bindToSuggestWidget = () => {\n                if (isBoundToSuggestWidget) {\n                    return;\n                }\n                isBoundToSuggestWidget = true;\n                this._register(suggestController.widget.value.onDidShow(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n                this._register(suggestController.widget.value.onDidHide(() => {\n                    this.isSuggestWidgetVisible = false;\n                    this.update(false);\n                }));\n                this._register(suggestController.widget.value.onDidFocus(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n            };\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\n                bindToSuggestWidget();\n            }));\n            this._register(suggestController.onWillInsertSuggestItem(e => {\n                const position = this.editor.getPosition();\n                const model = this.editor.getModel();\n                if (!position || !model) {\n                    return undefined;\n                }\n                const suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, model, position, e.item, this.isShiftKeyPressed);\n                this.onWillAccept(suggestItemInfo);\n            }));\n        }\n        this.update(this._isActive);\n    }\n    update(newActive) {\n        const newInlineCompletion = this.getSuggestItemInfo();\n        if (this._isActive !== newActive || !suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n            this._isActive = newActive;\n            this._currentSuggestItemInfo = newInlineCompletion;\n            transaction(tx => {\n                /** @description Update state from suggest widget */\n                this.checkModelVersion(tx);\n                this._selectedItem.set(this._isActive ? this._currentSuggestItemInfo : undefined, tx);\n            });\n        }\n    }\n    getSuggestItemInfo() {\n        const suggestController = SuggestController.get(this.editor);\n        if (!suggestController || !this.isSuggestWidgetVisible) {\n            return undefined;\n        }\n        const focusedItem = suggestController.widget.value.getFocusedItem();\n        const position = this.editor.getPosition();\n        const model = this.editor.getModel();\n        if (!focusedItem || !position || !model) {\n            return undefined;\n        }\n        return SuggestItemInfo.fromSuggestion(suggestController, model, position, focusedItem.item, this.isShiftKeyPressed);\n    }\n    stopForceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.stopForceRenderingAbove();\n    }\n    forceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.forceRenderingAbove();\n    }\n}\nexport class SuggestItemInfo {\n    static fromSuggestion(suggestController, model, position, item, toggleMode) {\n        let { insertText } = item.completion;\n        let isSnippetText = false;\n        if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */) {\n            const snippet = new SnippetParser().parse(insertText);\n            if (snippet.children.length < 100) {\n                // Adjust whitespace is expensive.\n                SnippetSession.adjustWhitespace(model, position, true, snippet);\n            }\n            insertText = snippet.toString();\n            isSnippetText = true;\n        }\n        const info = suggestController.getOverwriteInfo(item, toggleMode);\n        return new SuggestItemInfo(Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))), insertText, item.completion.kind, isSnippetText);\n    }\n    constructor(range, insertText, completionItemKind, isSnippetText) {\n        this.range = range;\n        this.insertText = insertText;\n        this.completionItemKind = completionItemKind;\n        this.isSnippetText = isSnippetText;\n    }\n    equals(other) {\n        return this.range.equalsRange(other.range)\n            && this.insertText === other.insertText\n            && this.completionItemKind === other.completionItemKind\n            && this.isSnippetText === other.isSnippetText;\n    }\n    toSelectedSuggestionInfo() {\n        return new SelectedSuggestionInfo(this.range, this.insertText, this.completionItemKind, this.isSnippetText);\n    }\n    toSingleTextEdit() {\n        return new SingleTextEdit(this.range, this.insertText);\n    }\n}\nfunction suggestItemInfoEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.equals(b);\n}\n"],
  "mappings": "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",
  "names": ["model", "__awaiter", "_a", "_b", "_c", "_d", "range", "document", "_a", "_b", "h", "line", "_a", "_b", "RangesCollector", "init_model", "FoldingController", "_a", "_b", "options", "foldingModel", "_a", "__awaiter", "_a", "_b", "__decorate", "__param", "DataSource", "StringRepresentationProvider", "_a", "__decorate", "__param", "FileReferencesTemplate", "__decorate", "__param", "FileReferencesRenderer", "_a", "__decorate", "__param", "__awaiter", "_a", "ReferenceWidget", "__decorate", "__param", "__awaiter", "ReferencesController", "_a", "_b", "_a", "init_extensions", "__decorate", "__param", "SymbolNavigationService", "_a", "_b", "EditorState", "init_actions", "__awaiter", "provider", "model", "position", "__awaiter", "accessor", "references", "__awaiter", "_a", "_b", "_a", "init_actions", "__awaiter", "_a", "_b", "accessor", "init_extensions", "__decorate", "__param", "__awaiter", "InlayHintsController", "_a", "model", "_b", "__awaiter", "lastNonWhitespaceIndex", "_a", "init_actions", "__decorate", "__param", "InlineCompletionsHintsWidget", "_a", "_b", "_c", "model", "reader", "InlineSuggestionHintsContentWidget", "__decorate", "__param", "CustomizedMenuWorkbenchToolBar", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "__decorate", "__param", "d", "__decorate", "__param", "GhostTextWidget", "lines", "isBasicASCII", "containsRTL", "node", "maxCharCode", "__awaiter", "providers", "__decorate", "__param", "__awaiter", "InlineCompletionsSource", "_a", "_b", "equals", "_a", "__decorate", "__param", "__awaiter", "VersionIdChangeReason", "InlineCompletionsModel", "cursorPosition", "c", "_a", "_b", "tx", "length", "_a", "__decorate", "__param", "InlineCompletionsController", "_a", "_b"]
}

import {
  LanguageConfigurationFileHandler
} from "./chunk-ICNEG4YE.js";
import {
  getServiceOverride
} from "./chunk-TD525AGN.js";
import {
  Extensions,
  WorkbenchLanguageService
} from "./chunk-ETI4KOTI.js";
import {
  __decorate,
  __param,
  init_tslib_es6
} from "./chunk-GJDIUAXO.js";
import {
  ILanguageService,
  Registry,
  SyncDescriptor,
  init_descriptors,
  init_language,
  init_platform
} from "./chunk-O3SOEW3V.js";
import {
  IInstantiationService,
  init_instantiation
} from "./chunk-N5MAMNNV.js";

// node_modules/vscode/service-override/languages.js
init_tslib_es6();
init_descriptors();
init_platform();
init_instantiation();
init_language();
var ExtensionPoints = class ExtensionPoints2 {
  constructor(instantiationService) {
    this.instantiationService = instantiationService;
    this.instantiationService.createInstance(LanguageConfigurationFileHandler);
  }
};
ExtensionPoints = __decorate([
  __param(0, IInstantiationService)
], ExtensionPoints);
Registry.as(Extensions.Workbench).registerWorkbenchContribution(ExtensionPoints, 1);
function getServiceOverride2() {
  return {
    ...getServiceOverride(),
    [ILanguageService.toString()]: new SyncDescriptor(WorkbenchLanguageService, [], false)
  };
}

export {
  ExtensionPoints,
  getServiceOverride2 as getServiceOverride
};
//# sourceMappingURL=chunk-P4YZWEAQ.js.map

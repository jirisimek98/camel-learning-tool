{
  "version": 3,
  "sources": ["../../vscode/vscode/src/vs/platform/extensionManagement/common/extensionManagementUtil.js", "../../vscode/vscode/src/vs/workbench/services/extensions/common/extensions.js", "../../vscode/vscode/src/vs/platform/extensionManagement/common/implicitActivationEvents.js", "../../vscode/vscode/src/vs/workbench/common/contributions.js", "../../vscode/vscode/src/vs/workbench/services/lifecycle/common/lifecycle.js", "../../vscode/vscode/src/vs/workbench/services/textMate/browser/textMateTokenizationFeature.js", "../../vscode/vscode/src/vs/workbench/contrib/codeEditor/browser/menuPreventer.js", "../../vscode/vscode/src/vs/workbench/services/language/common/languageService.js", "../../vscode/vscode/src/vs/workbench/services/extensions/common/extensionsRegistry.js", "../../vscode/vscode/src/vs/platform/extensionManagement/common/extensionManagement.js", "../../vscode/vscode/src/vs/workbench/services/extensions/common/extensionsApiProposals.js", "../../monaco-editor/esm/vs/platform/product/common/productService.js", "../../vscode/vscode/src/vs/workbench/common/editor.js", "../../vscode/vscode/src/vs/workbench/services/editor/common/editorGroupsService.js", "../../vscode/vscode/src/vs/workbench/services/editor/common/editorService.js", "../../vscode/vscode/src/vs/workbench/services/remote/common/remoteAgentService.js", "../../vscode/vscode/src/vs/workbench/services/textfile/common/textfiles.js", "../../vscode/vscode/src/vs/workbench/services/userDataProfile/common/userDataProfile.js", "../../vscode/vscode/src/vs/workbench/contrib/snippets/browser/snippets.js", "../../vscode/vscode/src/vs/workbench/common/configuration.js", "../../vscode/vscode/src/vs/platform/extensionResourceLoader/common/extensionResourceLoader.js", "../../vscode/vscode/src/vs/platform/externalServices/common/serviceMachineId.js", "../../vscode/vscode/src/vs/workbench/contrib/accessibility/browser/accessibleView.js", "../../vscode/vscode/src/vs/workbench/contrib/accessibility/browser/accessibilityConfiguration.js", "../../vscode/vscode/src/vs/workbench/contrib/snippets/browser/tabCompletion.js", "../../vscode/vscode/src/vs/workbench/contrib/snippets/browser/snippetsService.js", "../../vscode/vscode/src/vs/workbench/contrib/snippets/browser/snippetsFile.js", "../../vscode/vscode/src/vs/workbench/contrib/snippets/browser/snippetCompletionProvider.js", "../../vscode/vscode/src/vs/workbench/contrib/codeEditor/browser/simpleEditorOptions.js", "../../vscode/vscode/src/vs/workbench/contrib/scm/common/quickDiff.js", "../../vscode/external/rollup-plugin-styles/dist/runtime/inject-css.js", "../../vscode/vscode/src/vs/workbench/common/contextkeys.js"],
  "sourcesContent": ["import { compareIgnoreCase } from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { UNDEFINED_PUBLISHER } from 'monaco-editor/esm/vs/platform/extensions/common/extensions.js';\nfunction areSameExtensions(a, b) {\n    if (a.uuid && b.uuid) {\n        return a.uuid === b.uuid;\n    }\n    if (a.id === b.id) {\n        return true;\n    }\n    return compareIgnoreCase(a.id, b.id) === 0;\n}\nfunction getExtensionId(publisher, name) {\n    return `${publisher}.${name}`;\n}\nfunction adoptToGalleryExtensionId(id) {\n    return id.toLowerCase();\n}\nfunction getGalleryExtensionId(publisher, name) {\n    return adoptToGalleryExtensionId(getExtensionId(publisher ?? UNDEFINED_PUBLISHER, name));\n}\nfunction getExtensionDependencies(installedExtensions, extension) {\n    const dependencies = [];\n    const extensions = extension.manifest.extensionDependencies?.slice(0) ?? [];\n    while (extensions.length) {\n        const id = extensions.shift();\n        if (id && dependencies.every(e => !areSameExtensions(e.identifier, { id }))) {\n            const ext = installedExtensions.filter(e => areSameExtensions(e.identifier, { id }));\n            if (ext.length === 1) {\n                dependencies.push(ext[0]);\n                extensions.push(...(ext[0].manifest.extensionDependencies?.slice(0) ?? []));\n            }\n        }\n    }\n    return dependencies;\n}\nexport { adoptToGalleryExtensionId, areSameExtensions, getExtensionDependencies, getExtensionId, getGalleryExtensionId };\n", "import { Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { getGalleryExtensionId, getExtensionId } from '../../../../platform/extensionManagement/common/extensionManagementUtil.js';\nimport { ImplicitActivationEvents } from '../../../../platform/extensionManagement/common/implicitActivationEvents.js';\nimport { ExtensionIdentifier, ExtensionIdentifierSet, ExtensionIdentifierMap } from 'monaco-editor/esm/vs/platform/extensions/common/extensions.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst nullExtensionDescription = ( Object.freeze({\n    identifier: ( new ExtensionIdentifier('nullExtensionDescription')),\n    name: 'Null Extension Description',\n    version: '0.0.0',\n    publisher: 'vscode',\n    engines: { vscode: '' },\n    extensionLocation: ( URI.parse('void:location')),\n    isBuiltin: false,\n    targetPlatform: \"undefined\" ,\n    isUserBuiltin: false,\n    isUnderDevelopment: false,\n}));\nconst IExtensionService = ( createDecorator('extensionService'));\nclass MissingExtensionDependency {\n    constructor(dependency) {\n        this.dependency = dependency;\n    }\n}\nclass ExtensionHostExtensions {\n    constructor() {\n        this._allExtensions = [];\n        this._myExtensions = [];\n    }\n    toDelta() {\n        return {\n            toRemove: [],\n            toAdd: this._allExtensions,\n            addActivationEvents: ImplicitActivationEvents.createActivationEventsMap(this._allExtensions),\n            myToRemove: [],\n            myToAdd: this._myExtensions\n        };\n    }\n    set(allExtensions, myExtensions) {\n        const toRemove = [];\n        const toAdd = [];\n        const myToRemove = [];\n        const myToAdd = [];\n        const oldExtensionsMap = extensionDescriptionArrayToMap(this._allExtensions);\n        const newExtensionsMap = extensionDescriptionArrayToMap(allExtensions);\n        const extensionsAreTheSame = (a, b) => {\n            return ((( a.extensionLocation.toString()) === ( b.extensionLocation.toString()))\n                || (a.isBuiltin === b.isBuiltin)\n                || (a.isUserBuiltin === b.isUserBuiltin) || (a.isUnderDevelopment === b.isUnderDevelopment));\n        };\n        for (const oldExtension of this._allExtensions) {\n            const newExtension = newExtensionsMap.get(oldExtension.identifier);\n            if (!newExtension) {\n                toRemove.push(oldExtension.identifier);\n                oldExtensionsMap.delete(oldExtension.identifier);\n                continue;\n            }\n            if (!extensionsAreTheSame(oldExtension, newExtension)) {\n                toRemove.push(oldExtension.identifier);\n                oldExtensionsMap.delete(oldExtension.identifier);\n                continue;\n            }\n        }\n        for (const newExtension of allExtensions) {\n            const oldExtension = oldExtensionsMap.get(newExtension.identifier);\n            if (!oldExtension) {\n                toAdd.push(newExtension);\n                continue;\n            }\n            if (!extensionsAreTheSame(oldExtension, newExtension)) {\n                toRemove.push(oldExtension.identifier);\n                oldExtensionsMap.delete(oldExtension.identifier);\n                continue;\n            }\n        }\n        const myOldExtensionsSet = ( new ExtensionIdentifierSet(this._myExtensions));\n        const myNewExtensionsSet = ( new ExtensionIdentifierSet(myExtensions));\n        for (const oldExtensionId of this._myExtensions) {\n            if (!( myNewExtensionsSet.has(oldExtensionId))) {\n                myToRemove.push(oldExtensionId);\n            }\n        }\n        for (const newExtensionId of myExtensions) {\n            if (!( myOldExtensionsSet.has(newExtensionId))) {\n                myToAdd.push(newExtensionId);\n            }\n        }\n        const addActivationEvents = ImplicitActivationEvents.createActivationEventsMap(toAdd);\n        const delta = { toRemove, toAdd, addActivationEvents, myToRemove, myToAdd };\n        this.delta(delta);\n        return delta;\n    }\n    delta(extensionsDelta) {\n        const { toRemove, toAdd, myToRemove, myToAdd } = extensionsDelta;\n        const toRemoveSet = ( new ExtensionIdentifierSet(toRemove));\n        const myToRemoveSet = ( new ExtensionIdentifierSet(myToRemove));\n        for (let i = 0; i < this._allExtensions.length; i++) {\n            if (( toRemoveSet.has(this._allExtensions[i].identifier))) {\n                this._allExtensions.splice(i, 1);\n                i--;\n            }\n        }\n        for (let i = 0; i < this._myExtensions.length; i++) {\n            if (( myToRemoveSet.has(this._myExtensions[i]))) {\n                this._myExtensions.splice(i, 1);\n                i--;\n            }\n        }\n        for (const extension of toAdd) {\n            this._allExtensions.push(extension);\n        }\n        for (const extensionId of myToAdd) {\n            this._myExtensions.push(extensionId);\n        }\n    }\n    containsExtension(extensionId) {\n        for (const myExtensionId of this._myExtensions) {\n            if (ExtensionIdentifier.equals(myExtensionId, extensionId)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nfunction extensionDescriptionArrayToMap(extensions) {\n    const result = ( new ExtensionIdentifierMap());\n    for (const extension of extensions) {\n        result.set(extension.identifier, extension);\n    }\n    return result;\n}\nfunction isProposedApiEnabled(extension, proposal) {\n    if (!extension.enabledApiProposals) {\n        return false;\n    }\n    return extension.enabledApiProposals.includes(proposal);\n}\nfunction checkProposedApiEnabled(extension, proposal) {\n    if (!isProposedApiEnabled(extension, proposal)) {\n        throw new Error(`Extension '${extension.identifier.value}' CANNOT use API proposal: ${proposal}.\\nIts package.json#enabledApiProposals-property declares: ${extension.enabledApiProposals?.join(', ') ?? '[]'} but NOT ${proposal}.\\n The missing proposal MUST be added and you must start in extension development mode or use the following command line switch: --enable-proposed-api ${extension.identifier.value}`);\n    }\n}\nclass ActivationTimes {\n    constructor(codeLoadingTime, activateCallTime, activateResolvedTime, activationReason) {\n        this.codeLoadingTime = codeLoadingTime;\n        this.activateCallTime = activateCallTime;\n        this.activateResolvedTime = activateResolvedTime;\n        this.activationReason = activationReason;\n    }\n}\nclass ExtensionPointContribution {\n    constructor(description, value) {\n        this.description = description;\n        this.value = value;\n    }\n}\nfunction toExtension(extensionDescription) {\n    return {\n        type: extensionDescription.isBuiltin ? 0  : 1 ,\n        isBuiltin: extensionDescription.isBuiltin || extensionDescription.isUserBuiltin,\n        identifier: { id: getGalleryExtensionId(extensionDescription.publisher, extensionDescription.name), uuid: extensionDescription.uuid },\n        manifest: extensionDescription,\n        location: extensionDescription.extensionLocation,\n        targetPlatform: extensionDescription.targetPlatform,\n        validations: [],\n        isValid: true\n    };\n}\nfunction toExtensionDescription(extension, isUnderDevelopment) {\n    return {\n        identifier: ( new ExtensionIdentifier(getExtensionId(extension.manifest.publisher, extension.manifest.name))),\n        isBuiltin: extension.type === 0 ,\n        isUserBuiltin: extension.type === 1  && extension.isBuiltin,\n        isUnderDevelopment: !!isUnderDevelopment,\n        extensionLocation: extension.location,\n        ...extension.manifest,\n        uuid: extension.identifier.uuid,\n        targetPlatform: extension.targetPlatform\n    };\n}\nclass NullExtensionService {\n    constructor() {\n        this.onDidRegisterExtensions = Event.None;\n        this.onDidChangeExtensionsStatus = Event.None;\n        this.onDidChangeExtensions = Event.None;\n        this.onWillActivateByEvent = Event.None;\n        this.onDidChangeResponsiveChange = Event.None;\n        this.onWillStop = Event.None;\n        this.extensions = [];\n    }\n    activateByEvent(_activationEvent) { return Promise.resolve(undefined); }\n    activationEventIsDone(_activationEvent) { return false; }\n    whenInstalledExtensionsRegistered() { return Promise.resolve(true); }\n    getExtension() { return Promise.resolve(undefined); }\n    readExtensionPointContributions(_extPoint) { return Promise.resolve(Object.create(null)); }\n    getExtensionsStatus() { return Object.create(null); }\n    getInspectPorts(_extensionHostKind, _tryEnableInspector) { return Promise.resolve([]); }\n    stopExtensionHosts() { }\n    async startExtensionHosts() { }\n    async setRemoteEnvironment(_env) { }\n    canAddExtension() { return false; }\n    canRemoveExtension() { return false; }\n}\nexport { ActivationTimes, ExtensionHostExtensions, ExtensionPointContribution, IExtensionService, MissingExtensionDependency, NullExtensionService, checkProposedApiEnabled, isProposedApiEnabled, nullExtensionDescription, toExtension, toExtensionDescription };\n", "import { onUnexpectedError } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { ExtensionIdentifier } from 'monaco-editor/esm/vs/platform/extensions/common/extensions.js';\nclass ImplicitActivationEventsImpl {\n    constructor() {\n        this._generators = ( new Map());\n        this._cache = ( new WeakMap());\n    }\n    register(extensionPointName, generator) {\n        this._generators.set(extensionPointName, generator);\n    }\n    readActivationEvents(extensionDescription) {\n        if (!( this._cache.has(extensionDescription))) {\n            this._cache.set(extensionDescription, this._readActivationEvents(extensionDescription));\n        }\n        return this._cache.get(extensionDescription);\n    }\n    createActivationEventsMap(extensionDescriptions) {\n        const result = Object.create(null);\n        for (const extensionDescription of extensionDescriptions) {\n            const activationEvents = this.readActivationEvents(extensionDescription);\n            if (activationEvents.length > 0) {\n                result[ExtensionIdentifier.toKey(extensionDescription.identifier)] = activationEvents;\n            }\n        }\n        return result;\n    }\n    _readActivationEvents(desc) {\n        if (typeof desc.main === 'undefined' && typeof desc.browser === 'undefined') {\n            return [];\n        }\n        const activationEvents = (Array.isArray(desc.activationEvents) ? desc.activationEvents.slice(0) : []);\n        if (!desc.contributes) {\n            return activationEvents;\n        }\n        for (const extPointName in desc.contributes) {\n            const generator = this._generators.get(extPointName);\n            if (!generator) {\n                continue;\n            }\n            const contrib = desc.contributes[extPointName];\n            const contribArr = Array.isArray(contrib) ? contrib : [contrib];\n            try {\n                generator(contribArr, activationEvents);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n        }\n        return activationEvents;\n    }\n}\nconst ImplicitActivationEvents = ( new ImplicitActivationEventsImpl());\nexport { ImplicitActivationEvents, ImplicitActivationEventsImpl };\n", "import { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ILifecycleService } from '../services/lifecycle/common/lifecycle.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { DeferredPromise, runWhenIdle } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { mark } from 'monaco-editor/esm/vs/base/common/performance.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { IEnvironmentService } from 'monaco-editor/esm/vs/platform/environment/common/environment.js';\nvar Extensions;\n( (function(Extensions) {\n    Extensions.Workbench = 'workbench.contributions.kind';\n})(Extensions || (Extensions = {})));\nclass WorkbenchContributionsRegistry {\n    constructor() {\n        this.contributions = ( new Map());\n        this.pendingRestoredContributions = ( new DeferredPromise());\n    }\n    registerWorkbenchContribution(contribution, phase = 1 ) {\n        if (this.instantiationService && this.lifecycleService && this.logService && this.environmentService && this.lifecycleService.phase >= phase) {\n            this.safeCreateContribution(this.instantiationService, this.logService, this.environmentService, contribution, phase);\n        }\n        else {\n            let contributions = this.contributions.get(phase);\n            if (!contributions) {\n                contributions = [];\n                this.contributions.set(phase, contributions);\n            }\n            contributions.push(contribution);\n        }\n    }\n    start(accessor) {\n        const instantiationService = this.instantiationService = accessor.get(IInstantiationService);\n        const lifecycleService = this.lifecycleService = accessor.get(ILifecycleService);\n        const logService = this.logService = accessor.get(ILogService);\n        const environmentService = this.environmentService = accessor.get(IEnvironmentService);\n        for (const phase of [1 , 2 , 3 , 4 ]) {\n            this.instantiateByPhase(instantiationService, lifecycleService, logService, environmentService, phase);\n        }\n    }\n    instantiateByPhase(instantiationService, lifecycleService, logService, environmentService, phase) {\n        if (lifecycleService.phase >= phase) {\n            this.doInstantiateByPhase(instantiationService, logService, environmentService, phase);\n        }\n        else {\n            lifecycleService.when(phase).then(() => this.doInstantiateByPhase(instantiationService, logService, environmentService, phase));\n        }\n    }\n    async doInstantiateByPhase(instantiationService, logService, environmentService, phase) {\n        const contributions = this.contributions.get(phase);\n        if (contributions) {\n            this.contributions.delete(phase);\n            switch (phase) {\n                case 1 :\n                case 2 : {\n                    mark(`code/willCreateWorkbenchContributions/${phase}`);\n                    for (const contribution of contributions) {\n                        this.safeCreateContribution(instantiationService, logService, environmentService, contribution, phase);\n                    }\n                    mark(`code/didCreateWorkbenchContributions/${phase}`);\n                    break;\n                }\n                case 3 :\n                case 4 : {\n                    if (phase === 4 ) {\n                        await this.pendingRestoredContributions.p;\n                    }\n                    this.doInstantiateWhenIdle(contributions, instantiationService, logService, environmentService, phase);\n                    break;\n                }\n            }\n        }\n    }\n    doInstantiateWhenIdle(contributions, instantiationService, logService, environmentService, phase) {\n        mark(`code/willCreateWorkbenchContributions/${phase}`);\n        let i = 0;\n        const forcedTimeout = phase === 4  ? 3000 : 500;\n        const instantiateSome = (idle) => {\n            while (i < contributions.length) {\n                const contribution = contributions[i++];\n                this.safeCreateContribution(instantiationService, logService, environmentService, contribution, phase);\n                if (idle.timeRemaining() < 1) {\n                    runWhenIdle(instantiateSome, forcedTimeout);\n                    break;\n                }\n            }\n            if (i === contributions.length) {\n                mark(`code/didCreateWorkbenchContributions/${phase}`);\n                if (phase === 3 ) {\n                    this.pendingRestoredContributions.complete();\n                }\n            }\n        };\n        runWhenIdle(instantiateSome, forcedTimeout);\n    }\n    safeCreateContribution(instantiationService, logService, environmentService, contribution, phase) {\n        const now = phase < 3  ? Date.now() : undefined;\n        try {\n            instantiationService.createInstance(contribution);\n        }\n        catch (error) {\n            logService.error(`Unable to create workbench contribution ${contribution.name}.`, error);\n        }\n        if (typeof now === 'number' && !environmentService.isBuilt ) {\n            const time = Date.now() - now;\n            if (time > 20) {\n                logService.warn(`Workbench contribution ${contribution.name} blocked restore phase by ${time}ms.`);\n            }\n        }\n    }\n}\nRegistry.add(Extensions.Workbench, ( new WorkbenchContributionsRegistry()));\nexport { Extensions };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ILifecycleService = ( createDecorator('lifecycleService'));\nfunction LifecyclePhaseToString(phase) {\n    switch (phase) {\n        case 1 : return 'Starting';\n        case 2 : return 'Ready';\n        case 3 : return 'Restored';\n        case 4 : return 'Eventually';\n    }\n}\nexport { ILifecycleService, LifecyclePhaseToString };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ITextMateTokenizationService = ( createDecorator('textMateTokenizationFeature'));\nexport { ITextMateTokenizationService };\n", "import { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { registerEditorContribution } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nclass MenuPreventer extends Disposable {\n    static { this.ID = 'editor.contrib.menuPreventer'; }\n    constructor(editor) {\n        super();\n        this._editor = editor;\n        this._altListeningMouse = false;\n        this._altMouseTriggered = false;\n        this._register(this._editor.onMouseDown((e) => {\n            if (this._altListeningMouse) {\n                this._altMouseTriggered = true;\n            }\n        }));\n        this._register(this._editor.onKeyDown((e) => {\n            if (e.equals(512 )) {\n                if (!this._altListeningMouse) {\n                    this._altMouseTriggered = false;\n                }\n                this._altListeningMouse = true;\n            }\n        }));\n        this._register(this._editor.onKeyUp((e) => {\n            if (e.equals(512 )) {\n                if (this._altMouseTriggered) {\n                    e.preventDefault();\n                }\n                this._altListeningMouse = false;\n                this._altMouseTriggered = false;\n            }\n        }));\n    }\n}\nregisterEditorContribution(MenuPreventer.ID, MenuPreventer, 2 );\nexport { MenuPreventer };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { clearConfiguredLanguageAssociations, registerConfiguredLanguageAssociation } from 'monaco-editor/esm/vs/editor/common/services/languagesAssociations.js';\nimport { joinPath } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { LanguageService } from 'monaco-editor/esm/vs/editor/common/services/languageService.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IEnvironmentService } from 'monaco-editor/esm/vs/platform/environment/common/environment.js';\nimport { FILES_ASSOCIATIONS_CONFIG } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { IExtensionService } from '../../extensions/common/extensions.js';\nimport { ExtensionsRegistry } from '../../extensions/common/extensionsRegistry.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nconst languagesExtPoint = ( ExtensionsRegistry.registerExtensionPoint({\n    extensionPoint: 'languages',\n    jsonSchema: {\n        description: ( localize(\n            'vscode.extension.contributes.languages',\n            'Contributes language declarations.'\n        )),\n        type: 'array',\n        items: {\n            type: 'object',\n            defaultSnippets: [{ body: { id: '${1:languageId}', aliases: ['${2:label}'], extensions: ['${3:extension}'], configuration: './language-configuration.json' } }],\n            properties: {\n                id: {\n                    description: ( localize('vscode.extension.contributes.languages.id', 'ID of the language.')),\n                    type: 'string'\n                },\n                aliases: {\n                    description: ( localize(\n                        'vscode.extension.contributes.languages.aliases',\n                        'Name aliases for the language.'\n                    )),\n                    type: 'array',\n                    items: {\n                        type: 'string'\n                    }\n                },\n                extensions: {\n                    description: ( localize(\n                        'vscode.extension.contributes.languages.extensions',\n                        'File extensions associated to the language.'\n                    )),\n                    default: ['.foo'],\n                    type: 'array',\n                    items: {\n                        type: 'string'\n                    }\n                },\n                filenames: {\n                    description: ( localize(\n                        'vscode.extension.contributes.languages.filenames',\n                        'File names associated to the language.'\n                    )),\n                    type: 'array',\n                    items: {\n                        type: 'string'\n                    }\n                },\n                filenamePatterns: {\n                    description: ( localize(\n                        'vscode.extension.contributes.languages.filenamePatterns',\n                        'File name glob patterns associated to the language.'\n                    )),\n                    type: 'array',\n                    items: {\n                        type: 'string'\n                    }\n                },\n                mimetypes: {\n                    description: ( localize(\n                        'vscode.extension.contributes.languages.mimetypes',\n                        'Mime types associated to the language.'\n                    )),\n                    type: 'array',\n                    items: {\n                        type: 'string'\n                    }\n                },\n                firstLine: {\n                    description: ( localize(\n                        'vscode.extension.contributes.languages.firstLine',\n                        'A regular expression matching the first line of a file of the language.'\n                    )),\n                    type: 'string'\n                },\n                configuration: {\n                    description: ( localize(\n                        'vscode.extension.contributes.languages.configuration',\n                        'A relative path to a file containing configuration options for the language.'\n                    )),\n                    type: 'string',\n                    default: './language-configuration.json'\n                },\n                icon: {\n                    type: 'object',\n                    description: ( localize(\n                        'vscode.extension.contributes.languages.icon',\n                        'A icon to use as file icon, if no icon theme provides one for the language.'\n                    )),\n                    properties: {\n                        light: {\n                            description: ( localize(\n                                'vscode.extension.contributes.languages.icon.light',\n                                'Icon path when a light theme is used'\n                            )),\n                            type: 'string'\n                        },\n                        dark: {\n                            description: ( localize(\n                                'vscode.extension.contributes.languages.icon.dark',\n                                'Icon path when a dark theme is used'\n                            )),\n                            type: 'string'\n                        }\n                    }\n                }\n            }\n        }\n    },\n    activationEventsGenerator: (languageContributions, result) => {\n        for (const languageContribution of languageContributions) {\n            if (languageContribution.id && languageContribution.configuration) {\n                result.push(`onLanguage:${languageContribution.id}`);\n            }\n        }\n    }\n}));\nlet WorkbenchLanguageService = class WorkbenchLanguageService extends LanguageService {\n    constructor(extensionService, configurationService, environmentService, logService) {\n        super(environmentService.verbose || environmentService.isExtensionDevelopment || !environmentService.isBuilt);\n        this.logService = logService;\n        this._configurationService = configurationService;\n        this._extensionService = extensionService;\n        languagesExtPoint.setHandler((extensions) => {\n            const allValidLanguages = [];\n            for (let i = 0, len = extensions.length; i < len; i++) {\n                const extension = extensions[i];\n                if (!Array.isArray(extension.value)) {\n                    extension.collector.error(( localize(\n                        'invalid',\n                        \"Invalid `contributes.{0}`. Expected an array.\",\n                        languagesExtPoint.name\n                    )));\n                    continue;\n                }\n                for (let j = 0, lenJ = extension.value.length; j < lenJ; j++) {\n                    const ext = extension.value[j];\n                    if (isValidLanguageExtensionPoint(ext, extension.description, extension.collector)) {\n                        let configuration = undefined;\n                        if (ext.configuration) {\n                            configuration = joinPath(extension.description.extensionLocation, ext.configuration);\n                        }\n                        allValidLanguages.push({\n                            id: ext.id,\n                            extensions: ext.extensions,\n                            filenames: ext.filenames,\n                            filenamePatterns: ext.filenamePatterns,\n                            firstLine: ext.firstLine,\n                            aliases: ext.aliases,\n                            mimetypes: ext.mimetypes,\n                            configuration: configuration,\n                            icon: ext.icon && {\n                                light: joinPath(extension.description.extensionLocation, ext.icon.light),\n                                dark: joinPath(extension.description.extensionLocation, ext.icon.dark)\n                            }\n                        });\n                    }\n                }\n            }\n            this._registry.setDynamicLanguages(allValidLanguages);\n        });\n        this.updateMime();\n        this._configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(FILES_ASSOCIATIONS_CONFIG)) {\n                this.updateMime();\n            }\n        });\n        this._extensionService.whenInstalledExtensionsRegistered().then(() => {\n            this.updateMime();\n        });\n        this._register(this.onDidRequestRichLanguageFeatures((languageId) => {\n            this._extensionService.activateByEvent(`onLanguage:${languageId}`);\n            this._extensionService.activateByEvent(`onLanguage`);\n        }));\n    }\n    updateMime() {\n        const configuration = this._configurationService.getValue();\n        clearConfiguredLanguageAssociations();\n        if (configuration.files?.associations) {\n            ( Object.keys(configuration.files.associations)).forEach(pattern => {\n                const langId = configuration.files.associations[pattern];\n                if (typeof langId !== 'string') {\n                    this.logService.warn(`Ignoring configured 'files.associations' for '${pattern}' because its type is not a string but '${typeof langId}'`);\n                    return;\n                }\n                const mimeType = this.getMimeType(langId) || `text/x-${langId}`;\n                registerConfiguredLanguageAssociation({ id: langId, mime: mimeType, filepattern: pattern });\n            });\n        }\n        this._onDidChange.fire();\n    }\n};\nWorkbenchLanguageService = ( __decorate([\n    ( __param(0, IExtensionService)),\n    ( __param(1, IConfigurationService)),\n    ( __param(2, IEnvironmentService)),\n    ( __param(3, ILogService))\n], WorkbenchLanguageService));\nfunction isUndefinedOrStringArray(value) {\n    if (typeof value === 'undefined') {\n        return true;\n    }\n    if (!Array.isArray(value)) {\n        return false;\n    }\n    return value.every(item => typeof item === 'string');\n}\nfunction isValidLanguageExtensionPoint(value, extension, collector) {\n    if (!value) {\n        collector.error(( localize(\n            'invalid.empty',\n            \"Empty value for `contributes.{0}`\",\n            languagesExtPoint.name\n        )));\n        return false;\n    }\n    if (typeof value.id !== 'string') {\n        collector.error(( localize(\n            'require.id',\n            \"property `{0}` is mandatory and must be of type `string`\",\n            'id'\n        )));\n        return false;\n    }\n    if (!isUndefinedOrStringArray(value.extensions)) {\n        collector.error(( localize(\n            'opt.extensions',\n            \"property `{0}` can be omitted and must be of type `string[]`\",\n            'extensions'\n        )));\n        return false;\n    }\n    if (!isUndefinedOrStringArray(value.filenames)) {\n        collector.error(( localize(\n            'opt.filenames',\n            \"property `{0}` can be omitted and must be of type `string[]`\",\n            'filenames'\n        )));\n        return false;\n    }\n    if (typeof value.firstLine !== 'undefined' && typeof value.firstLine !== 'string') {\n        collector.error(( localize(\n            'opt.firstLine',\n            \"property `{0}` can be omitted and must be of type `string`\",\n            'firstLine'\n        )));\n        return false;\n    }\n    if (typeof value.configuration !== 'undefined' && typeof value.configuration !== 'string') {\n        collector.error(( localize(\n            'opt.configuration',\n            \"property `{0}` can be omitted and must be of type `string`\",\n            'configuration'\n        )));\n        return false;\n    }\n    if (!isUndefinedOrStringArray(value.aliases)) {\n        collector.error(( localize(\n            'opt.aliases',\n            \"property `{0}` can be omitted and must be of type `string[]`\",\n            'aliases'\n        )));\n        return false;\n    }\n    if (!isUndefinedOrStringArray(value.mimetypes)) {\n        collector.error(( localize(\n            'opt.mimetypes',\n            \"property `{0}` can be omitted and must be of type `string[]`\",\n            'mimetypes'\n        )));\n        return false;\n    }\n    if (typeof value.icon !== 'undefined') {\n        if (typeof value.icon !== 'object' || typeof value.icon.light !== 'string' || typeof value.icon.dark !== 'string') {\n            collector.error(( localize(\n                'opt.icon',\n                \"property `{0}` can be omitted and must be of type `object` with properties `{1}` and `{2}` of type `string`\",\n                'icon',\n                'light',\n                'dark'\n            )));\n            return false;\n        }\n    }\n    return true;\n}\nexport { WorkbenchLanguageService, languagesExtPoint };\n", "import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { onUnexpectedError } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport Severity from 'monaco-editor/esm/vs/base/common/severity.js';\nimport { EXTENSION_IDENTIFIER_PATTERN } from '../../../../platform/extensionManagement/common/extensionManagement.js';\nimport { Extensions } from 'monaco-editor/esm/vs/platform/jsonschemas/common/jsonContributionRegistry.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { EXTENSION_CATEGORIES, ExtensionIdentifierSet } from 'monaco-editor/esm/vs/platform/extensions/common/extensions.js';\nimport { allApiProposals } from './extensionsApiProposals.js';\nimport { productSchemaId } from 'monaco-editor/esm/vs/platform/product/common/productService.js';\nimport { ImplicitActivationEvents } from '../../../../platform/extensionManagement/common/implicitActivationEvents.js';\nconst schemaRegistry = ( Registry.as(Extensions.JSONContribution));\nclass ExtensionMessageCollector {\n    constructor(messageHandler, extension, extensionPointId) {\n        this._messageHandler = messageHandler;\n        this._extension = extension;\n        this._extensionPointId = extensionPointId;\n    }\n    _msg(type, message) {\n        this._messageHandler({\n            type: type,\n            message: message,\n            extensionId: this._extension.identifier,\n            extensionPointId: this._extensionPointId\n        });\n    }\n    error(message) {\n        this._msg(Severity.Error, message);\n    }\n    warn(message) {\n        this._msg(Severity.Warning, message);\n    }\n    info(message) {\n        this._msg(Severity.Info, message);\n    }\n}\nclass ExtensionPointUserDelta {\n    static _toSet(arr) {\n        const result = ( new ExtensionIdentifierSet());\n        for (let i = 0, len = arr.length; i < len; i++) {\n            result.add(arr[i].description.identifier);\n        }\n        return result;\n    }\n    static compute(previous, current) {\n        if (!previous || !previous.length) {\n            return ( new ExtensionPointUserDelta(current, []));\n        }\n        if (!current || !current.length) {\n            return ( new ExtensionPointUserDelta([], previous));\n        }\n        const previousSet = this._toSet(previous);\n        const currentSet = this._toSet(current);\n        const added = current.filter(user => !( previousSet.has(user.description.identifier)));\n        const removed = previous.filter(user => !( currentSet.has(user.description.identifier)));\n        return ( new ExtensionPointUserDelta(added, removed));\n    }\n    constructor(added, removed) {\n        this.added = added;\n        this.removed = removed;\n    }\n}\nclass ExtensionPoint {\n    constructor(name, defaultExtensionKind) {\n        this.name = name;\n        this.defaultExtensionKind = defaultExtensionKind;\n        this._handler = null;\n        this._users = null;\n        this._delta = null;\n    }\n    setHandler(handler) {\n        if (this._handler !== null) {\n            throw new Error('Handler already set!');\n        }\n        this._handler = handler;\n        this._handle();\n    }\n    acceptUsers(users) {\n        this._delta = ExtensionPointUserDelta.compute(this._users, users);\n        this._users = users;\n        this._handle();\n    }\n    _handle() {\n        if (this._handler === null || this._users === null || this._delta === null) {\n            return;\n        }\n        try {\n            this._handler(this._users, this._delta);\n        }\n        catch (err) {\n            onUnexpectedError(err);\n        }\n    }\n}\nconst extensionKindSchema = {\n    type: 'string',\n    enum: [\n        'ui',\n        'workspace'\n    ],\n    enumDescriptions: [\n        ( nls.localize(\n            'ui',\n            \"UI extension kind. In a remote window, such extensions are enabled only when available on the local machine.\"\n        )),\n        ( nls.localize(\n            'workspace',\n            \"Workspace extension kind. In a remote window, such extensions are enabled only when available on the remote.\"\n        )),\n    ],\n};\nconst schemaId = 'vscode://schemas/vscode-extensions';\nconst schema = {\n    properties: {\n        engines: {\n            type: 'object',\n            description: ( nls.localize('vscode.extension.engines', \"Engine compatibility.\")),\n            properties: {\n                'vscode': {\n                    type: 'string',\n                    description: ( nls.localize(\n                        'vscode.extension.engines.vscode',\n                        'For VS Code extensions, specifies the VS Code version that the extension is compatible with. Cannot be *. For example: ^0.10.5 indicates compatibility with a minimum VS Code version of 0.10.5.'\n                    )),\n                    default: '^1.22.0',\n                }\n            }\n        },\n        publisher: {\n            description: ( nls.localize('vscode.extension.publisher', 'The publisher of the VS Code extension.')),\n            type: 'string'\n        },\n        displayName: {\n            description: ( nls.localize(\n                'vscode.extension.displayName',\n                'The display name for the extension used in the VS Code gallery.'\n            )),\n            type: 'string'\n        },\n        categories: {\n            description: ( nls.localize(\n                'vscode.extension.categories',\n                'The categories used by the VS Code gallery to categorize the extension.'\n            )),\n            type: 'array',\n            uniqueItems: true,\n            items: {\n                oneOf: [{\n                        type: 'string',\n                        enum: EXTENSION_CATEGORIES,\n                    },\n                    {\n                        type: 'string',\n                        const: 'Languages',\n                        deprecationMessage: ( nls.localize(\n                            'vscode.extension.category.languages.deprecated',\n                            'Use \\'Programming  Languages\\' instead'\n                        )),\n                    }]\n            }\n        },\n        galleryBanner: {\n            type: 'object',\n            description: ( nls.localize(\n                'vscode.extension.galleryBanner',\n                'Banner used in the VS Code marketplace.'\n            )),\n            properties: {\n                color: {\n                    description: ( nls.localize(\n                        'vscode.extension.galleryBanner.color',\n                        'The banner color on the VS Code marketplace page header.'\n                    )),\n                    type: 'string'\n                },\n                theme: {\n                    description: ( nls.localize(\n                        'vscode.extension.galleryBanner.theme',\n                        'The color theme for the font used in the banner.'\n                    )),\n                    type: 'string',\n                    enum: ['dark', 'light']\n                }\n            }\n        },\n        contributes: {\n            description: ( nls.localize(\n                'vscode.extension.contributes',\n                'All contributions of the VS Code extension represented by this package.'\n            )),\n            type: 'object',\n            properties: {\n            },\n            default: {}\n        },\n        preview: {\n            type: 'boolean',\n            description: ( nls.localize(\n                'vscode.extension.preview',\n                'Sets the extension to be flagged as a Preview in the Marketplace.'\n            )),\n        },\n        enableProposedApi: {\n            type: 'boolean',\n            deprecationMessage: ( nls.localize(\n                'vscode.extension.enableProposedApi.deprecated',\n                'Use `enabledApiProposals` instead.'\n            )),\n        },\n        enabledApiProposals: {\n            markdownDescription: ( nls.localize(\n                'vscode.extension.enabledApiProposals',\n                'Enable API proposals to try them out. Only valid **during development**. Extensions **cannot be published** with this property. For more details visit: https://code.visualstudio.com/api/advanced-topics/using-proposed-api'\n            )),\n            type: 'array',\n            uniqueItems: true,\n            items: {\n                type: 'string',\n                enum: ( Object.keys(allApiProposals)),\n                markdownEnumDescriptions: ( Object.values(allApiProposals))\n            }\n        },\n        api: {\n            markdownDescription: ( nls.localize(\n                'vscode.extension.api',\n                'Describe the API provided by this extension. For more details visit: https://code.visualstudio.com/api/advanced-topics/remote-extensions#handling-dependencies-with-remote-extensions'\n            )),\n            type: 'string',\n            enum: ['none'],\n            enumDescriptions: [\n                ( nls.localize(\n                    'vscode.extension.api.none',\n                    \"Give up entirely the ability to export any APIs. This allows other extensions that depend on this extension to run in a separate extension host process or in a remote machine.\"\n                ))\n            ]\n        },\n        activationEvents: {\n            description: ( nls.localize(\n                'vscode.extension.activationEvents',\n                'Activation events for the VS Code extension.'\n            )),\n            type: 'array',\n            items: {\n                type: 'string',\n                defaultSnippets: [\n                    {\n                        label: 'onWebviewPanel',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onWebviewPanel',\n                            'An activation event emmited when a webview is loaded of a certain viewType'\n                        )),\n                        body: 'onWebviewPanel:viewType'\n                    },\n                    {\n                        label: 'onLanguage',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onLanguage',\n                            'An activation event emitted whenever a file that resolves to the specified language gets opened.'\n                        )),\n                        body: 'onLanguage:${1:languageId}'\n                    },\n                    {\n                        label: 'onCommand',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onCommand',\n                            'An activation event emitted whenever the specified command gets invoked.'\n                        )),\n                        body: 'onCommand:${2:commandId}'\n                    },\n                    {\n                        label: 'onDebug',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onDebug',\n                            'An activation event emitted whenever a user is about to start debugging or about to setup debug configurations.'\n                        )),\n                        body: 'onDebug'\n                    },\n                    {\n                        label: 'onDebugInitialConfigurations',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onDebugInitialConfigurations',\n                            'An activation event emitted whenever a \"launch.json\" needs to be created (and all provideDebugConfigurations methods need to be called).'\n                        )),\n                        body: 'onDebugInitialConfigurations'\n                    },\n                    {\n                        label: 'onDebugDynamicConfigurations',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onDebugDynamicConfigurations',\n                            'An activation event emitted whenever a list of all debug configurations needs to be created (and all provideDebugConfigurations methods for the \"dynamic\" scope need to be called).'\n                        )),\n                        body: 'onDebugDynamicConfigurations'\n                    },\n                    {\n                        label: 'onDebugResolve',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onDebugResolve',\n                            'An activation event emitted whenever a debug session with the specific type is about to be launched (and a corresponding resolveDebugConfiguration method needs to be called).'\n                        )),\n                        body: 'onDebugResolve:${6:type}'\n                    },\n                    {\n                        label: 'onDebugAdapterProtocolTracker',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onDebugAdapterProtocolTracker',\n                            'An activation event emitted whenever a debug session with the specific type is about to be launched and a debug protocol tracker might be needed.'\n                        )),\n                        body: 'onDebugAdapterProtocolTracker:${6:type}'\n                    },\n                    {\n                        label: 'workspaceContains',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.workspaceContains',\n                            'An activation event emitted whenever a folder is opened that contains at least a file matching the specified glob pattern.'\n                        )),\n                        body: 'workspaceContains:${4:filePattern}'\n                    },\n                    {\n                        label: 'onStartupFinished',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onStartupFinished',\n                            'An activation event emitted after the start-up finished (after all `*` activated extensions have finished activating).'\n                        )),\n                        body: 'onStartupFinished'\n                    },\n                    {\n                        label: 'onTaskType',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onTaskType',\n                            'An activation event emitted whenever tasks of a certain type need to be listed or resolved.'\n                        )),\n                        body: 'onTaskType:${1:taskType}'\n                    },\n                    {\n                        label: 'onFileSystem',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onFileSystem',\n                            'An activation event emitted whenever a file or folder is accessed with the given scheme.'\n                        )),\n                        body: 'onFileSystem:${1:scheme}'\n                    },\n                    {\n                        label: 'onEditSession',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onEditSession',\n                            'An activation event emitted whenever an edit session is accessed with the given scheme.'\n                        )),\n                        body: 'onEditSession:${1:scheme}'\n                    },\n                    {\n                        label: 'onSearch',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onSearch',\n                            'An activation event emitted whenever a search is started in the folder with the given scheme.'\n                        )),\n                        body: 'onSearch:${7:scheme}'\n                    },\n                    {\n                        label: 'onView',\n                        body: 'onView:${5:viewId}',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onView',\n                            'An activation event emitted whenever the specified view is expanded.'\n                        )),\n                    },\n                    {\n                        label: 'onUri',\n                        body: 'onUri',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onUri',\n                            'An activation event emitted whenever a system-wide Uri directed towards this extension is open.'\n                        )),\n                    },\n                    {\n                        label: 'onOpenExternalUri',\n                        body: 'onOpenExternalUri',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onOpenExternalUri',\n                            'An activation event emitted whenever a external uri (such as an http or https link) is being opened.'\n                        )),\n                    },\n                    {\n                        label: 'onCustomEditor',\n                        body: 'onCustomEditor:${9:viewType}',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onCustomEditor',\n                            'An activation event emitted whenever the specified custom editor becomes visible.'\n                        )),\n                    },\n                    {\n                        label: 'onNotebook',\n                        body: 'onNotebook:${1:type}',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onNotebook',\n                            'An activation event emitted whenever the specified notebook document is opened.'\n                        )),\n                    },\n                    {\n                        label: 'onAuthenticationRequest',\n                        body: 'onAuthenticationRequest:${11:authenticationProviderId}',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onAuthenticationRequest',\n                            'An activation event emitted whenever sessions are requested from the specified authentication provider.'\n                        ))\n                    },\n                    {\n                        label: 'onRenderer',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onRenderer',\n                            'An activation event emitted whenever a notebook output renderer is used.'\n                        )),\n                        body: 'onRenderer:${11:rendererId}'\n                    },\n                    {\n                        label: 'onTerminalProfile',\n                        body: 'onTerminalProfile:${1:terminalId}',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onTerminalProfile',\n                            'An activation event emitted when a specific terminal profile is launched.'\n                        )),\n                    },\n                    {\n                        label: 'onTerminalQuickFixRequest',\n                        body: 'onTerminalQuickFixRequest:${1:quickFixId}',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onTerminalQuickFixRequest',\n                            'An activation event emitted when a command matches the selector associated with this ID'\n                        )),\n                    },\n                    {\n                        label: 'onWalkthrough',\n                        body: 'onWalkthrough:${1:walkthroughID}',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.onWalkthrough',\n                            'An activation event emitted when a specified walkthrough is opened.'\n                        )),\n                    },\n                    {\n                        label: '*',\n                        description: ( nls.localize(\n                            'vscode.extension.activationEvents.star',\n                            'An activation event emitted on VS Code startup. To ensure a great end user experience, please use this activation event in your extension only when no other activation events combination works in your use-case.'\n                        )),\n                        body: '*'\n                    }\n                ],\n            }\n        },\n        badges: {\n            type: 'array',\n            description: ( nls.localize(\n                'vscode.extension.badges',\n                'Array of badges to display in the sidebar of the Marketplace\\'s extension page.'\n            )),\n            items: {\n                type: 'object',\n                required: ['url', 'href', 'description'],\n                properties: {\n                    url: {\n                        type: 'string',\n                        description: ( nls.localize('vscode.extension.badges.url', 'Badge image URL.'))\n                    },\n                    href: {\n                        type: 'string',\n                        description: ( nls.localize('vscode.extension.badges.href', 'Badge link.'))\n                    },\n                    description: {\n                        type: 'string',\n                        description: ( nls.localize('vscode.extension.badges.description', 'Badge description.'))\n                    }\n                }\n            }\n        },\n        markdown: {\n            type: 'string',\n            description: ( nls.localize(\n                'vscode.extension.markdown',\n                \"Controls the Markdown rendering engine used in the Marketplace. Either github (default) or standard.\"\n            )),\n            enum: ['github', 'standard'],\n            default: 'github'\n        },\n        qna: {\n            default: 'marketplace',\n            description: ( nls.localize(\n                'vscode.extension.qna',\n                \"Controls the Q&A link in the Marketplace. Set to marketplace to enable the default Marketplace Q & A site. Set to a string to provide the URL of a custom Q & A site. Set to false to disable Q & A altogether.\"\n            )),\n            anyOf: [\n                {\n                    type: ['string', 'boolean'],\n                    enum: ['marketplace', false]\n                },\n                {\n                    type: 'string'\n                }\n            ]\n        },\n        extensionDependencies: {\n            description: ( nls.localize(\n                'vscode.extension.extensionDependencies',\n                'Dependencies to other extensions. The identifier of an extension is always ${publisher}.${name}. For example: vscode.csharp.'\n            )),\n            type: 'array',\n            uniqueItems: true,\n            items: {\n                type: 'string',\n                pattern: EXTENSION_IDENTIFIER_PATTERN\n            }\n        },\n        extensionPack: {\n            description: ( nls.localize(\n                'vscode.extension.contributes.extensionPack',\n                \"A set of extensions that can be installed together. The identifier of an extension is always ${publisher}.${name}. For example: vscode.csharp.\"\n            )),\n            type: 'array',\n            uniqueItems: true,\n            items: {\n                type: 'string',\n                pattern: EXTENSION_IDENTIFIER_PATTERN\n            }\n        },\n        extensionKind: {\n            description: ( nls.localize(\n                'extensionKind',\n                \"Define the kind of an extension. `ui` extensions are installed and run on the local machine while `workspace` extensions run on the remote.\"\n            )),\n            type: 'array',\n            items: extensionKindSchema,\n            default: ['workspace'],\n            defaultSnippets: [\n                {\n                    body: ['ui'],\n                    description: ( nls.localize(\n                        'extensionKind.ui',\n                        \"Define an extension which can run only on the local machine when connected to remote window.\"\n                    ))\n                },\n                {\n                    body: ['workspace'],\n                    description: ( nls.localize(\n                        'extensionKind.workspace',\n                        \"Define an extension which can run only on the remote machine when connected remote window.\"\n                    ))\n                },\n                {\n                    body: ['ui', 'workspace'],\n                    description: ( nls.localize(\n                        'extensionKind.ui-workspace',\n                        \"Define an extension which can run on either side, with a preference towards running on the local machine.\"\n                    ))\n                },\n                {\n                    body: ['workspace', 'ui'],\n                    description: ( nls.localize(\n                        'extensionKind.workspace-ui',\n                        \"Define an extension which can run on either side, with a preference towards running on the remote machine.\"\n                    ))\n                },\n                {\n                    body: [],\n                    description: ( nls.localize(\n                        'extensionKind.empty',\n                        \"Define an extension which cannot run in a remote context, neither on the local, nor on the remote machine.\"\n                    ))\n                }\n            ]\n        },\n        capabilities: {\n            description: ( nls.localize(\n                'vscode.extension.capabilities',\n                \"Declare the set of supported capabilities by the extension.\"\n            )),\n            type: 'object',\n            properties: {\n                virtualWorkspaces: {\n                    description: ( nls.localize(\n                        'vscode.extension.capabilities.virtualWorkspaces',\n                        \"Declares whether the extension should be enabled in virtual workspaces. A virtual workspace is a workspace which is not backed by any on-disk resources. When false, this extension will be automatically disabled in virtual workspaces. Default is true.\"\n                    )),\n                    type: ['boolean', 'object'],\n                    defaultSnippets: [\n                        { label: 'limited', body: { supported: '${1:limited}', description: '${2}' } },\n                        { label: 'false', body: { supported: false, description: '${2}' } },\n                    ],\n                    default: true.valueOf,\n                    properties: {\n                        supported: {\n                            markdownDescription: ( nls.localize(\n                                'vscode.extension.capabilities.virtualWorkspaces.supported',\n                                \"Declares the level of support for virtual workspaces by the extension.\"\n                            )),\n                            type: ['string', 'boolean'],\n                            enum: ['limited', true, false],\n                            enumDescriptions: [\n                                ( nls.localize(\n                                    'vscode.extension.capabilities.virtualWorkspaces.supported.limited',\n                                    \"The extension will be enabled in virtual workspaces with some functionality disabled.\"\n                                )),\n                                ( nls.localize(\n                                    'vscode.extension.capabilities.virtualWorkspaces.supported.true',\n                                    \"The extension will be enabled in virtual workspaces with all functionality enabled.\"\n                                )),\n                                ( nls.localize(\n                                    'vscode.extension.capabilities.virtualWorkspaces.supported.false',\n                                    \"The extension will not be enabled in virtual workspaces.\"\n                                )),\n                            ]\n                        },\n                        description: {\n                            type: 'string',\n                            markdownDescription: ( nls.localize(\n                                'vscode.extension.capabilities.virtualWorkspaces.description',\n                                \"A description of how virtual workspaces affects the extensions behavior and why it is needed. This only applies when `supported` is not `true`.\"\n                            )),\n                        }\n                    }\n                },\n                untrustedWorkspaces: {\n                    description: ( nls.localize(\n                        'vscode.extension.capabilities.untrustedWorkspaces',\n                        'Declares how the extension should be handled in untrusted workspaces.'\n                    )),\n                    type: 'object',\n                    required: ['supported'],\n                    defaultSnippets: [\n                        { body: { supported: '${1:limited}', description: '${2}' } },\n                    ],\n                    properties: {\n                        supported: {\n                            markdownDescription: ( nls.localize(\n                                'vscode.extension.capabilities.untrustedWorkspaces.supported',\n                                \"Declares the level of support for untrusted workspaces by the extension.\"\n                            )),\n                            type: ['string', 'boolean'],\n                            enum: ['limited', true, false],\n                            enumDescriptions: [\n                                ( nls.localize(\n                                    'vscode.extension.capabilities.untrustedWorkspaces.supported.limited',\n                                    \"The extension will be enabled in untrusted workspaces with some functionality disabled.\"\n                                )),\n                                ( nls.localize(\n                                    'vscode.extension.capabilities.untrustedWorkspaces.supported.true',\n                                    \"The extension will be enabled in untrusted workspaces with all functionality enabled.\"\n                                )),\n                                ( nls.localize(\n                                    'vscode.extension.capabilities.untrustedWorkspaces.supported.false',\n                                    \"The extension will not be enabled in untrusted workspaces.\"\n                                )),\n                            ]\n                        },\n                        restrictedConfigurations: {\n                            description: ( nls.localize(\n                                'vscode.extension.capabilities.untrustedWorkspaces.restrictedConfigurations',\n                                \"A list of configuration keys contributed by the extension that should not use workspace values in untrusted workspaces.\"\n                            )),\n                            type: 'array',\n                            items: {\n                                type: 'string'\n                            }\n                        },\n                        description: {\n                            type: 'string',\n                            markdownDescription: ( nls.localize(\n                                'vscode.extension.capabilities.untrustedWorkspaces.description',\n                                \"A description of how workspace trust affects the extensions behavior and why it is needed. This only applies when `supported` is not `true`.\"\n                            )),\n                        }\n                    }\n                }\n            }\n        },\n        sponsor: {\n            description: ( nls.localize(\n                'vscode.extension.contributes.sponsor',\n                \"Specify the location from where users can sponsor your extension.\"\n            )),\n            type: 'object',\n            defaultSnippets: [\n                { body: { url: '${1:https:}' } },\n            ],\n            properties: {\n                'url': {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.sponsor.url',\n                        \"URL from where users can sponsor your extension. It must be a valid URL with a HTTP or HTTPS protocol. Example value: https://github.com/sponsors/nvaccess\"\n                    )),\n                    type: 'string',\n                }\n            }\n        },\n        scripts: {\n            type: 'object',\n            properties: {\n                'vscode:prepublish': {\n                    description: ( nls.localize(\n                        'vscode.extension.scripts.prepublish',\n                        'Script executed before the package is published as a VS Code extension.'\n                    )),\n                    type: 'string'\n                },\n                'vscode:uninstall': {\n                    description: ( nls.localize(\n                        'vscode.extension.scripts.uninstall',\n                        'Uninstall hook for VS Code extension. Script that gets executed when the extension is completely uninstalled from VS Code which is when VS Code is restarted (shutdown and start) after the extension is uninstalled. Only Node scripts are supported.'\n                    )),\n                    type: 'string'\n                }\n            }\n        },\n        icon: {\n            type: 'string',\n            description: ( nls.localize('vscode.extension.icon', 'The path to a 128x128 pixel icon.'))\n        },\n        l10n: {\n            type: 'string',\n            description: ( nls.localize({\n                key: 'vscode.extension.l10n',\n                comment: [\n                    '{Locked=\"bundle.l10n._locale_.json\"}',\n                    '{Locked=\"vscode.l10n API\"}'\n                ]\n            }, 'The relative path to a folder containing localization (bundle.l10n.*.json) files. Must be specified if you are using the vscode.l10n API.'))\n        },\n        pricing: {\n            type: 'string',\n            markdownDescription: ( nls.localize(\n                'vscode.extension.pricing',\n                'The pricing information for the extension. Can be Free (default) or Trial. For more details visit: https://code.visualstudio.com/api/working-with-extensions/publishing-extension#extension-pricing-label'\n            )),\n            enum: ['Free', 'Trial'],\n            default: 'Free'\n        }\n    }\n};\nclass ExtensionsRegistryImpl {\n    constructor() {\n        this._extensionPoints = ( new Map());\n    }\n    registerExtensionPoint(desc) {\n        if (( this._extensionPoints.has(desc.extensionPoint))) {\n            throw new Error('Duplicate extension point: ' + desc.extensionPoint);\n        }\n        const result = ( new ExtensionPoint(desc.extensionPoint, desc.defaultExtensionKind));\n        this._extensionPoints.set(desc.extensionPoint, result);\n        if (desc.activationEventsGenerator) {\n            ImplicitActivationEvents.register(desc.extensionPoint, desc.activationEventsGenerator);\n        }\n        schema.properties['contributes'].properties[desc.extensionPoint] = desc.jsonSchema;\n        schemaRegistry.registerSchema(schemaId, schema);\n        return result;\n    }\n    getExtensionPoints() {\n        return Array.from(( this._extensionPoints.values()));\n    }\n}\nconst PRExtensions = {\n    ExtensionsRegistry: 'ExtensionsRegistry'\n};\nRegistry.add(PRExtensions.ExtensionsRegistry, ( new ExtensionsRegistryImpl()));\nconst ExtensionsRegistry = ( Registry.as(PRExtensions.ExtensionsRegistry));\nschemaRegistry.registerSchema(schemaId, schema);\nschemaRegistry.registerSchema(productSchemaId, {\n    properties: {\n        extensionEnabledApiProposals: {\n            description: ( nls.localize(\n                'product.extensionEnabledApiProposals',\n                \"API proposals that the respective extensions can freely use.\"\n            )),\n            type: 'object',\n            properties: {},\n            additionalProperties: {\n                anyOf: [{\n                        type: 'array',\n                        uniqueItems: true,\n                        items: {\n                            type: 'string',\n                            enum: ( Object.keys(allApiProposals)),\n                            markdownEnumDescriptions: ( Object.values(allApiProposals))\n                        }\n                    }]\n            }\n        }\n    }\n});\nexport { ExtensionMessageCollector, ExtensionPoint, ExtensionPointUserDelta, ExtensionsRegistry, ExtensionsRegistryImpl, schema };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst EXTENSION_IDENTIFIER_PATTERN = '^([a-z0-9A-Z][a-z0-9-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$';\nfunction TargetPlatformToString(targetPlatform) {\n    switch (targetPlatform) {\n        case \"win32-x64\" : return 'Windows 64 bit';\n        case \"win32-ia32\" : return 'Windows 32 bit';\n        case \"win32-arm64\" : return 'Windows ARM';\n        case \"linux-x64\" : return 'Linux 64 bit';\n        case \"linux-arm64\" : return 'Linux ARM 64';\n        case \"linux-armhf\" : return 'Linux ARM';\n        case \"alpine-x64\" : return 'Alpine Linux 64 bit';\n        case \"alpine-arm64\" : return 'Alpine ARM 64';\n        case \"darwin-x64\" : return 'Mac';\n        case \"darwin-arm64\" : return 'Mac Silicon';\n        case \"web\" : return 'Web';\n        case \"universal\" : return \"universal\" ;\n        case \"unknown\" : return \"unknown\" ;\n        case \"undefined\" : return \"undefined\" ;\n    }\n}\nconst IExtensionGalleryService = ( createDecorator('extensionGalleryService'));\nvar ExtensionManagementErrorCode;\n( (function(ExtensionManagementErrorCode) {\n    ExtensionManagementErrorCode[\"Unsupported\"] = \"Unsupported\";\n    ExtensionManagementErrorCode[\"Deprecated\"] = \"Deprecated\";\n    ExtensionManagementErrorCode[\"Malicious\"] = \"Malicious\";\n    ExtensionManagementErrorCode[\"Incompatible\"] = \"Incompatible\";\n    ExtensionManagementErrorCode[\"IncompatibleTargetPlatform\"] = \"IncompatibleTargetPlatform\";\n    ExtensionManagementErrorCode[\"ReleaseVersionNotFound\"] = \"ReleaseVersionNotFound\";\n    ExtensionManagementErrorCode[\"Invalid\"] = \"Invalid\";\n    ExtensionManagementErrorCode[\"Download\"] = \"Download\";\n    ExtensionManagementErrorCode[\"Extract\"] = \"Extract\";\n    ExtensionManagementErrorCode[\"Delete\"] = \"Delete\";\n    ExtensionManagementErrorCode[\"Rename\"] = \"Rename\";\n    ExtensionManagementErrorCode[\"CorruptZip\"] = \"CorruptZip\";\n    ExtensionManagementErrorCode[\"IncompleteZip\"] = \"IncompleteZip\";\n    ExtensionManagementErrorCode[\"Signature\"] = \"Signature\";\n    ExtensionManagementErrorCode[\"Internal\"] = \"Internal\";\n})(ExtensionManagementErrorCode || (ExtensionManagementErrorCode = {})));\nconst IExtensionManagementService = ( createDecorator('extensionManagementService'));\nexport { EXTENSION_IDENTIFIER_PATTERN, ExtensionManagementErrorCode, IExtensionGalleryService, IExtensionManagementService, TargetPlatformToString };\n", "const allApiProposals = ( Object.freeze({\n    aiRelatedInformation: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.aiRelatedInformation.d.ts',\n    authGetSessions: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.authGetSessions.d.ts',\n    authSession: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.authSession.d.ts',\n    canonicalUriProvider: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.canonicalUriProvider.d.ts',\n    chat: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.chat.d.ts',\n    chatProvider: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.chatProvider.d.ts',\n    chatRequestAccess: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.chatRequestAccess.d.ts',\n    chatSlashCommands: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.chatSlashCommands.d.ts',\n    chatVariables: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.chatVariables.d.ts',\n    codiconDecoration: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.codiconDecoration.d.ts',\n    commentsDraftState: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.commentsDraftState.d.ts',\n    contribCommentEditorActionsMenu: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribCommentEditorActionsMenu.d.ts',\n    contribCommentPeekContext: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribCommentPeekContext.d.ts',\n    contribCommentThreadAdditionalMenu: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribCommentThreadAdditionalMenu.d.ts',\n    contribEditSessions: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribEditSessions.d.ts',\n    contribEditorContentMenu: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribEditorContentMenu.d.ts',\n    contribLabelFormatterWorkspaceTooltip: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribLabelFormatterWorkspaceTooltip.d.ts',\n    contribMenuBarHome: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribMenuBarHome.d.ts',\n    contribMergeEditorMenus: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribMergeEditorMenus.d.ts',\n    contribNotebookStaticPreloads: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribNotebookStaticPreloads.d.ts',\n    contribRemoteHelp: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribRemoteHelp.d.ts',\n    contribShareMenu: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribShareMenu.d.ts',\n    contribStatusBarItems: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribStatusBarItems.d.ts',\n    contribViewsRemote: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribViewsRemote.d.ts',\n    contribViewsWelcome: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribViewsWelcome.d.ts',\n    customEditorMove: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.customEditorMove.d.ts',\n    debugFocus: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.debugFocus.d.ts',\n    diffCommand: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.diffCommand.d.ts',\n    diffContentOptions: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.diffContentOptions.d.ts',\n    documentFiltersExclusive: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.documentFiltersExclusive.d.ts',\n    documentPaste: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.documentPaste.d.ts',\n    dropMetadata: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.dropMetadata.d.ts',\n    editSessionIdentityProvider: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.editSessionIdentityProvider.d.ts',\n    editorInsets: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.editorInsets.d.ts',\n    envShellEvent: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.envShellEvent.d.ts',\n    extensionRuntime: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.extensionRuntime.d.ts',\n    extensionsAny: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.extensionsAny.d.ts',\n    externalUriOpener: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.externalUriOpener.d.ts',\n    fileComments: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.fileComments.d.ts',\n    fileSearchProvider: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.fileSearchProvider.d.ts',\n    findTextInFiles: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.findTextInFiles.d.ts',\n    fsChunks: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.fsChunks.d.ts',\n    handleIssueUri: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.handleIssueUri.d.ts',\n    idToken: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.idToken.d.ts',\n    indentSize: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.indentSize.d.ts',\n    inlineCompletionsAdditions: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.inlineCompletionsAdditions.d.ts',\n    interactive: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.interactive.d.ts',\n    interactiveUserActions: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.interactiveUserActions.d.ts',\n    interactiveWindow: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.interactiveWindow.d.ts',\n    ipc: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.ipc.d.ts',\n    languageConfigurationAutoClosingPairs: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.languageConfigurationAutoClosingPairs.d.ts',\n    mappedEditsProvider: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.mappedEditsProvider.d.ts',\n    notebookCellExecutionState: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookCellExecutionState.d.ts',\n    notebookCodeActions: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookCodeActions.d.ts',\n    notebookControllerAffinityHidden: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookControllerAffinityHidden.d.ts',\n    notebookDeprecated: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookDeprecated.d.ts',\n    notebookExecution: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookExecution.d.ts',\n    notebookKernelSource: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookKernelSource.d.ts',\n    notebookLiveShare: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookLiveShare.d.ts',\n    notebookMessaging: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookMessaging.d.ts',\n    notebookMime: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.notebookMime.d.ts',\n    portsAttributes: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.portsAttributes.d.ts',\n    profileContentHandlers: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.profileContentHandlers.d.ts',\n    quickDiffProvider: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.quickDiffProvider.d.ts',\n    quickPickItemTooltip: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.quickPickItemTooltip.d.ts',\n    quickPickSortByLabel: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.quickPickSortByLabel.d.ts',\n    readonlyMessage: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.readonlyMessage.d.ts',\n    resolvers: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.resolvers.d.ts',\n    saveEditor: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.saveEditor.d.ts',\n    scmActionButton: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.scmActionButton.d.ts',\n    scmSelectedProvider: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.scmSelectedProvider.d.ts',\n    scmTextDocument: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.scmTextDocument.d.ts',\n    scmValidation: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.scmValidation.d.ts',\n    shareProvider: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.shareProvider.d.ts',\n    showLocal: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.showLocal.d.ts',\n    tabInputTextMerge: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.tabInputTextMerge.d.ts',\n    taskPresentationGroup: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.taskPresentationGroup.d.ts',\n    telemetry: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.telemetry.d.ts',\n    terminalContextMenu: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.terminalContextMenu.d.ts',\n    terminalDataWriteEvent: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.terminalDataWriteEvent.d.ts',\n    terminalDimensions: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.terminalDimensions.d.ts',\n    terminalExecuteCommandEvent: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.terminalExecuteCommandEvent.d.ts',\n    terminalQuickFixProvider: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.terminalQuickFixProvider.d.ts',\n    terminalSelection: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.terminalSelection.d.ts',\n    testCoverage: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.testCoverage.d.ts',\n    testMessageContextValue: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.testMessageContextValue.d.ts',\n    testObserver: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.testObserver.d.ts',\n    textSearchProvider: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.textSearchProvider.d.ts',\n    timeline: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.timeline.d.ts',\n    tokenInformation: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.tokenInformation.d.ts',\n    treeViewActiveItem: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.treeViewActiveItem.d.ts',\n    treeViewMarkdownMessage: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.treeViewMarkdownMessage.d.ts',\n    treeViewReveal: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.treeViewReveal.d.ts',\n    tunnelFactory: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.tunnelFactory.d.ts',\n    tunnels: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.tunnels.d.ts',\n    windowActivity: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.windowActivity.d.ts',\n    workspaceTrust: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.workspaceTrust.d.ts'\n}));\nexport { allApiProposals };\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IProductService = createDecorator('productService');\nexport const productSchemaId = 'vscode://schemas/vscode-product';\n", "import { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { assertIsDefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { toDisposable, Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { FileType } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { isErrorWithActions, createErrorWithActions } from 'monaco-editor/esm/vs/base/common/errorMessage.js';\nimport { toAction } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport Severity from 'monaco-editor/esm/vs/base/common/severity.js';\nconst EditorExtensions = {\n    EditorPane: 'workbench.contributions.editors',\n    EditorFactory: 'workbench.contributions.editor.inputFactories'\n};\nconst DEFAULT_EDITOR_ASSOCIATION = {\n    id: 'default',\n    displayName: ( localize('promptOpenWith.defaultEditor.displayName', \"Text Editor\")),\n    providerDisplayName: ( localize('builtinProviderDisplayName', \"Built-in\"))\n};\nconst SIDE_BY_SIDE_EDITOR_ID = 'workbench.editor.sidebysideEditor';\nconst TEXT_DIFF_EDITOR_ID = 'workbench.editors.textDiffEditor';\nconst BINARY_DIFF_EDITOR_ID = 'workbench.editors.binaryResourceDiffEditor';\nfunction isEditorPaneWithSelection(editorPane) {\n    const candidate = editorPane;\n    return !!candidate && typeof candidate.getSelection === 'function' && !!candidate.onDidChangeSelection;\n}\nfunction findViewStateForEditor(input, group, editorService) {\n    for (const editorPane of editorService.visibleEditorPanes) {\n        if (editorPane.group.id === group && input.matches(editorPane.input)) {\n            return editorPane.getViewState();\n        }\n    }\n    return undefined;\n}\nfunction isResourceEditorInput(editor) {\n    if (isEditorInput(editor)) {\n        return false;\n    }\n    const candidate = editor;\n    return URI.isUri(candidate?.resource);\n}\nfunction isResourceDiffEditorInput(editor) {\n    if (isEditorInput(editor)) {\n        return false;\n    }\n    const candidate = editor;\n    return candidate?.original !== undefined && candidate.modified !== undefined;\n}\nfunction isResourceSideBySideEditorInput(editor) {\n    if (isEditorInput(editor)) {\n        return false;\n    }\n    if (isResourceDiffEditorInput(editor)) {\n        return false;\n    }\n    const candidate = editor;\n    return candidate?.primary !== undefined && candidate.secondary !== undefined;\n}\nfunction isUntitledResourceEditorInput(editor) {\n    if (isEditorInput(editor)) {\n        return false;\n    }\n    const candidate = editor;\n    if (!candidate) {\n        return false;\n    }\n    return candidate.resource === undefined || candidate.resource.scheme === Schemas.untitled || candidate.forceUntitled === true;\n}\nfunction isResourceMergeEditorInput(editor) {\n    if (isEditorInput(editor)) {\n        return false;\n    }\n    const candidate = editor;\n    return URI.isUri(candidate?.base?.resource) && URI.isUri(candidate?.input1?.resource) && URI.isUri(candidate?.input2?.resource) && URI.isUri(candidate?.result?.resource);\n}\nclass SaveSourceFactory {\n    constructor() {\n        this.mapIdToSaveSource = ( new Map());\n    }\n    registerSource(id, label) {\n        let sourceDescriptor = this.mapIdToSaveSource.get(id);\n        if (!sourceDescriptor) {\n            sourceDescriptor = { source: id, label };\n            this.mapIdToSaveSource.set(id, sourceDescriptor);\n        }\n        return sourceDescriptor.source;\n    }\n    getSourceLabel(source) {\n        return this.mapIdToSaveSource.get(source)?.label ?? source;\n    }\n}\nconst SaveSourceRegistry = ( new SaveSourceFactory());\nclass AbstractEditorInput extends Disposable {\n}\nfunction isEditorInput(editor) {\n    return editor instanceof AbstractEditorInput;\n}\nfunction isEditorInputWithPreferredResource(editor) {\n    const candidate = editor;\n    return URI.isUri(candidate?.preferredResource);\n}\nfunction isSideBySideEditorInput(editor) {\n    const candidate = editor;\n    return isEditorInput(candidate?.primary) && isEditorInput(candidate?.secondary);\n}\nfunction isDiffEditorInput(editor) {\n    const candidate = editor;\n    return isEditorInput(candidate?.modified) && isEditorInput(candidate?.original);\n}\nfunction createTooLargeFileError(group, input, options, message, preferencesService) {\n    return createEditorOpenError(message, [\n        toAction({\n            id: 'workbench.action.openLargeFile', label: ( localize('openLargeFile', \"Open Anyway\")), run: () => {\n                const fileEditorOptions = {\n                    ...options,\n                    limits: {\n                        size: Number.MAX_VALUE\n                    }\n                };\n                group.openEditor(input, fileEditorOptions);\n            }\n        }),\n        toAction({\n            id: 'workbench.action.configureEditorLargeFileConfirmation', label: ( localize('configureEditorLargeFileConfirmation', \"Configure Limit\")), run: () => {\n                return preferencesService.openUserSettings({ query: 'workbench.editorLargeFileConfirmation' });\n            }\n        }),\n    ], {\n        forceMessage: true,\n        forceSeverity: Severity.Warning\n    });\n}\nfunction isEditorInputWithOptions(editor) {\n    const candidate = editor;\n    return isEditorInput(candidate?.editor);\n}\nfunction isEditorInputWithOptionsAndGroup(editor) {\n    const candidate = editor;\n    return isEditorInputWithOptions(editor) && candidate?.group !== undefined;\n}\nfunction isEditorIdentifier(identifier) {\n    const candidate = identifier;\n    return typeof candidate?.groupId === 'number' && isEditorInput(candidate.editor);\n}\nvar EditorCloseContext;\n( (function(EditorCloseContext) {\n    EditorCloseContext[EditorCloseContext[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EditorCloseContext[EditorCloseContext[\"REPLACE\"] = 1] = \"REPLACE\";\n    EditorCloseContext[EditorCloseContext[\"MOVE\"] = 2] = \"MOVE\";\n    EditorCloseContext[EditorCloseContext[\"UNPIN\"] = 3] = \"UNPIN\";\n})(EditorCloseContext || (EditorCloseContext = {})));\nvar SideBySideEditor;\n( (function(SideBySideEditor) {\n    SideBySideEditor[SideBySideEditor[\"PRIMARY\"] = 1] = \"PRIMARY\";\n    SideBySideEditor[SideBySideEditor[\"SECONDARY\"] = 2] = \"SECONDARY\";\n    SideBySideEditor[SideBySideEditor[\"BOTH\"] = 3] = \"BOTH\";\n    SideBySideEditor[SideBySideEditor[\"ANY\"] = 4] = \"ANY\";\n})(SideBySideEditor || (SideBySideEditor = {})));\nclass EditorResourceAccessorImpl {\n    getOriginalUri(editor, options) {\n        if (!editor) {\n            return undefined;\n        }\n        if (isResourceMergeEditorInput(editor)) {\n            return EditorResourceAccessor.getOriginalUri(editor.result, options);\n        }\n        if (options?.supportSideBySide) {\n            const { primary, secondary } = this.getSideEditors(editor);\n            if (primary && secondary) {\n                if (options?.supportSideBySide === SideBySideEditor.BOTH) {\n                    return {\n                        primary: this.getOriginalUri(primary, { filterByScheme: options.filterByScheme }),\n                        secondary: this.getOriginalUri(secondary, { filterByScheme: options.filterByScheme })\n                    };\n                }\n                else if (options?.supportSideBySide === SideBySideEditor.ANY) {\n                    return this.getOriginalUri(primary, { filterByScheme: options.filterByScheme }) ?? this.getOriginalUri(secondary, { filterByScheme: options.filterByScheme });\n                }\n                editor = options.supportSideBySide === SideBySideEditor.PRIMARY ? primary : secondary;\n            }\n        }\n        if (isResourceDiffEditorInput(editor) || isResourceSideBySideEditorInput(editor) || isResourceMergeEditorInput(editor)) {\n            return undefined;\n        }\n        const originalResource = isEditorInputWithPreferredResource(editor) ? editor.preferredResource : editor.resource;\n        if (!originalResource || !options || !options.filterByScheme) {\n            return originalResource;\n        }\n        return this.filterUri(originalResource, options.filterByScheme);\n    }\n    getSideEditors(editor) {\n        if (isSideBySideEditorInput(editor) || isResourceSideBySideEditorInput(editor)) {\n            return { primary: editor.primary, secondary: editor.secondary };\n        }\n        if (isDiffEditorInput(editor) || isResourceDiffEditorInput(editor)) {\n            return { primary: editor.modified, secondary: editor.original };\n        }\n        return { primary: undefined, secondary: undefined };\n    }\n    getCanonicalUri(editor, options) {\n        if (!editor) {\n            return undefined;\n        }\n        if (isResourceMergeEditorInput(editor)) {\n            return EditorResourceAccessor.getCanonicalUri(editor.result, options);\n        }\n        if (options?.supportSideBySide) {\n            const { primary, secondary } = this.getSideEditors(editor);\n            if (primary && secondary) {\n                if (options?.supportSideBySide === SideBySideEditor.BOTH) {\n                    return {\n                        primary: this.getCanonicalUri(primary, { filterByScheme: options.filterByScheme }),\n                        secondary: this.getCanonicalUri(secondary, { filterByScheme: options.filterByScheme })\n                    };\n                }\n                else if (options?.supportSideBySide === SideBySideEditor.ANY) {\n                    return this.getCanonicalUri(primary, { filterByScheme: options.filterByScheme }) ?? this.getCanonicalUri(secondary, { filterByScheme: options.filterByScheme });\n                }\n                editor = options.supportSideBySide === SideBySideEditor.PRIMARY ? primary : secondary;\n            }\n        }\n        if (isResourceDiffEditorInput(editor) || isResourceSideBySideEditorInput(editor) || isResourceMergeEditorInput(editor)) {\n            return undefined;\n        }\n        const canonicalResource = editor.resource;\n        if (!canonicalResource || !options || !options.filterByScheme) {\n            return canonicalResource;\n        }\n        return this.filterUri(canonicalResource, options.filterByScheme);\n    }\n    filterUri(resource, filter) {\n        if (Array.isArray(filter)) {\n            if (( filter.some(scheme => resource.scheme === scheme))) {\n                return resource;\n            }\n        }\n        else {\n            if (filter === resource.scheme) {\n                return resource;\n            }\n        }\n        return undefined;\n    }\n}\nvar EditorCloseMethod;\n( (function(EditorCloseMethod) {\n    EditorCloseMethod[EditorCloseMethod[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EditorCloseMethod[EditorCloseMethod[\"KEYBOARD\"] = 1] = \"KEYBOARD\";\n    EditorCloseMethod[EditorCloseMethod[\"MOUSE\"] = 2] = \"MOUSE\";\n})(EditorCloseMethod || (EditorCloseMethod = {})));\nfunction preventEditorClose(group, editor, method, configuration) {\n    if (!group.isSticky(editor)) {\n        return false;\n    }\n    switch (configuration.preventPinnedEditorClose) {\n        case 'keyboardAndMouse': return method === EditorCloseMethod.MOUSE || method === EditorCloseMethod.KEYBOARD;\n        case 'mouse': return method === EditorCloseMethod.MOUSE;\n        case 'keyboard': return method === EditorCloseMethod.KEYBOARD;\n    }\n    return false;\n}\nconst EditorResourceAccessor = ( new EditorResourceAccessorImpl());\nvar CloseDirection;\n( (function(CloseDirection) {\n    CloseDirection[CloseDirection[\"LEFT\"] = 0] = \"LEFT\";\n    CloseDirection[CloseDirection[\"RIGHT\"] = 1] = \"RIGHT\";\n})(CloseDirection || (CloseDirection = {})));\nclass EditorFactoryRegistry {\n    constructor() {\n        this.editorSerializerConstructors = ( new Map());\n        this.editorSerializerInstances = ( new Map());\n    }\n    start(accessor) {\n        const instantiationService = this.instantiationService = accessor.get(IInstantiationService);\n        for (const [key, ctor] of this.editorSerializerConstructors) {\n            this.createEditorSerializer(key, ctor, instantiationService);\n        }\n        this.editorSerializerConstructors.clear();\n    }\n    createEditorSerializer(editorTypeId, ctor, instantiationService) {\n        const instance = instantiationService.createInstance(ctor);\n        this.editorSerializerInstances.set(editorTypeId, instance);\n    }\n    registerFileEditorFactory(factory) {\n        if (this.fileEditorFactory) {\n            throw new Error('Can only register one file editor factory.');\n        }\n        this.fileEditorFactory = factory;\n    }\n    getFileEditorFactory() {\n        return assertIsDefined(this.fileEditorFactory);\n    }\n    registerEditorSerializer(editorTypeId, ctor) {\n        if (( this.editorSerializerConstructors.has(editorTypeId)) || ( this.editorSerializerInstances.has(editorTypeId))) {\n            throw new Error(`A editor serializer with type ID '${editorTypeId}' was already registered.`);\n        }\n        if (!this.instantiationService) {\n            this.editorSerializerConstructors.set(editorTypeId, ctor);\n        }\n        else {\n            this.createEditorSerializer(editorTypeId, ctor, this.instantiationService);\n        }\n        return toDisposable(() => {\n            this.editorSerializerConstructors.delete(editorTypeId);\n            this.editorSerializerInstances.delete(editorTypeId);\n        });\n    }\n    getEditorSerializer(arg1) {\n        return this.editorSerializerInstances.get(typeof arg1 === 'string' ? arg1 : arg1.typeId);\n    }\n}\nRegistry.add(EditorExtensions.EditorFactory, ( new EditorFactoryRegistry()));\nasync function pathsToEditors(paths, fileService, logService) {\n    if (!paths || !paths.length) {\n        return [];\n    }\n    return await Promise.all(( paths.map(async (path) => {\n        const resource = URI.revive(path.fileUri);\n        if (!resource) {\n            logService.info('Cannot resolve the path because it is not valid.', path);\n            return undefined;\n        }\n        const canHandleResource = await fileService.canHandleResource(resource);\n        if (!canHandleResource) {\n            logService.info('Cannot resolve the path because it cannot be handled', path);\n            return undefined;\n        }\n        let exists = path.exists;\n        let type = path.type;\n        if (typeof exists !== 'boolean' || typeof type !== 'number') {\n            try {\n                type = (await fileService.stat(resource)).isDirectory ? FileType.Directory : FileType.Unknown;\n                exists = true;\n            }\n            catch (error) {\n                logService.error(error);\n                exists = false;\n            }\n        }\n        if (!exists && path.openOnlyIfExists) {\n            logService.info('Cannot resolve the path because it does not exist', path);\n            return undefined;\n        }\n        if (type === FileType.Directory) {\n            logService.info('Cannot resolve the path because it is a directory', path);\n            return undefined;\n        }\n        const options = {\n            ...path.options,\n            pinned: true\n        };\n        if (!exists) {\n            return { resource, options, forceUntitled: true };\n        }\n        return { resource, options };\n    })));\n}\nvar EditorsOrder;\n( (function(EditorsOrder) {\n    EditorsOrder[EditorsOrder[\"MOST_RECENTLY_ACTIVE\"] = 0] = \"MOST_RECENTLY_ACTIVE\";\n    EditorsOrder[EditorsOrder[\"SEQUENTIAL\"] = 1] = \"SEQUENTIAL\";\n})(EditorsOrder || (EditorsOrder = {})));\nfunction isTextEditorViewState(candidate) {\n    const viewState = candidate;\n    if (!viewState) {\n        return false;\n    }\n    const diffEditorViewState = viewState;\n    if (diffEditorViewState.modified) {\n        return isTextEditorViewState(diffEditorViewState.modified);\n    }\n    const codeEditorViewState = viewState;\n    return !!(codeEditorViewState.contributionsState && codeEditorViewState.viewState && Array.isArray(codeEditorViewState.cursorState));\n}\nfunction isEditorOpenError(obj) {\n    return isErrorWithActions(obj);\n}\nfunction createEditorOpenError(messageOrError, actions, options) {\n    const error = createErrorWithActions(messageOrError, actions);\n    error.forceMessage = options?.forceMessage;\n    error.forceSeverity = options?.forceSeverity;\n    error.allowDialog = options?.allowDialog;\n    return error;\n}\nexport { AbstractEditorInput, BINARY_DIFF_EDITOR_ID, CloseDirection, DEFAULT_EDITOR_ASSOCIATION, EditorCloseContext, EditorCloseMethod, EditorExtensions, EditorResourceAccessor, EditorsOrder, SIDE_BY_SIDE_EDITOR_ID, SaveSourceRegistry, SideBySideEditor, TEXT_DIFF_EDITOR_ID, createEditorOpenError, createTooLargeFileError, findViewStateForEditor, isDiffEditorInput, isEditorIdentifier, isEditorInput, isEditorInputWithOptions, isEditorInputWithOptionsAndGroup, isEditorOpenError, isEditorPaneWithSelection, isResourceDiffEditorInput, isResourceEditorInput, isResourceMergeEditorInput, isResourceSideBySideEditorInput, isSideBySideEditorInput, isTextEditorViewState, isUntitledResourceEditorInput, pathsToEditors, preventEditorClose };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { isEditorInput } from '../../../common/editor.js';\nconst IEditorGroupsService = ( createDecorator('editorGroupsService'));\nvar GroupDirection;\n( (function(GroupDirection) {\n    GroupDirection[GroupDirection[\"UP\"] = 0] = \"UP\";\n    GroupDirection[GroupDirection[\"DOWN\"] = 1] = \"DOWN\";\n    GroupDirection[GroupDirection[\"LEFT\"] = 2] = \"LEFT\";\n    GroupDirection[GroupDirection[\"RIGHT\"] = 3] = \"RIGHT\";\n})(GroupDirection || (GroupDirection = {})));\nvar GroupOrientation;\n( (function(GroupOrientation) {\n    GroupOrientation[GroupOrientation[\"HORIZONTAL\"] = 0] = \"HORIZONTAL\";\n    GroupOrientation[GroupOrientation[\"VERTICAL\"] = 1] = \"VERTICAL\";\n})(GroupOrientation || (GroupOrientation = {})));\nvar GroupLocation;\n( (function(GroupLocation) {\n    GroupLocation[GroupLocation[\"FIRST\"] = 0] = \"FIRST\";\n    GroupLocation[GroupLocation[\"LAST\"] = 1] = \"LAST\";\n    GroupLocation[GroupLocation[\"NEXT\"] = 2] = \"NEXT\";\n    GroupLocation[GroupLocation[\"PREVIOUS\"] = 3] = \"PREVIOUS\";\n})(GroupLocation || (GroupLocation = {})));\nvar GroupsArrangement;\n( (function(GroupsArrangement) {\n    GroupsArrangement[GroupsArrangement[\"MAXIMIZE\"] = 0] = \"MAXIMIZE\";\n    GroupsArrangement[GroupsArrangement[\"EVEN\"] = 1] = \"EVEN\";\n    GroupsArrangement[GroupsArrangement[\"TOGGLE\"] = 2] = \"TOGGLE\";\n})(GroupsArrangement || (GroupsArrangement = {})));\nvar MergeGroupMode;\n( (function(MergeGroupMode) {\n    MergeGroupMode[MergeGroupMode[\"COPY_EDITORS\"] = 0] = \"COPY_EDITORS\";\n    MergeGroupMode[MergeGroupMode[\"MOVE_EDITORS\"] = 1] = \"MOVE_EDITORS\";\n})(MergeGroupMode || (MergeGroupMode = {})));\nfunction isEditorReplacement(replacement) {\n    const candidate = replacement;\n    return isEditorInput(candidate?.editor) && isEditorInput(candidate?.replacement);\n}\nvar GroupsOrder;\n( (function(GroupsOrder) {\n    GroupsOrder[GroupsOrder[\"CREATION_TIME\"] = 0] = \"CREATION_TIME\";\n    GroupsOrder[GroupsOrder[\"MOST_RECENTLY_ACTIVE\"] = 1] = \"MOST_RECENTLY_ACTIVE\";\n    GroupsOrder[GroupsOrder[\"GRID_APPEARANCE\"] = 2] = \"GRID_APPEARANCE\";\n})(GroupsOrder || (GroupsOrder = {})));\nfunction isEditorGroup(obj) {\n    const group = obj;\n    return !!group && typeof group.id === 'number' && Array.isArray(group.editors);\n}\nfunction preferredSideBySideGroupDirection(configurationService) {\n    const openSideBySideDirection = configurationService.getValue('workbench.editor.openSideBySideDirection');\n    if (openSideBySideDirection === 'down') {\n        return 1 ;\n    }\n    return 3 ;\n}\nexport { GroupDirection, GroupLocation, GroupOrientation, GroupsArrangement, GroupsOrder, IEditorGroupsService, MergeGroupMode, isEditorGroup, isEditorReplacement, preferredSideBySideGroupDirection };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { isEditorGroup } from './editorGroupsService.js';\nconst IEditorService = ( createDecorator('editorService'));\nconst ACTIVE_GROUP = -1;\nconst SIDE_GROUP = -2;\nfunction isPreferredGroup(obj) {\n    const candidate = obj;\n    return typeof obj === 'number' || isEditorGroup(candidate);\n}\nexport { ACTIVE_GROUP, IEditorService, SIDE_GROUP, isPreferredGroup };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { timeout } from 'monaco-editor/esm/vs/base/common/async.js';\nconst IRemoteAgentService = ( createDecorator('remoteAgentService'));\nconst remoteConnectionLatencyMeasurer = new (class {\n    constructor() {\n        this.maxSampleCount = 5;\n        this.sampleDelay = 2000;\n        this.initial = [];\n        this.maxInitialCount = 3;\n        this.average = [];\n        this.maxAverageCount = 100;\n        this.highLatencyMultiple = 2;\n        this.highLatencyMinThreshold = 500;\n        this.highLatencyMaxThreshold = 1500;\n        this.lastMeasurement = undefined;\n    }\n    get latency() { return this.lastMeasurement; }\n    async measure(remoteAgentService) {\n        let currentLatency = Infinity;\n        for (let i = 0; i < this.maxSampleCount; i++) {\n            const rtt = await remoteAgentService.getRoundTripTime();\n            if (rtt === undefined) {\n                return undefined;\n            }\n            currentLatency = Math.min(currentLatency, rtt / 2 );\n            await timeout(this.sampleDelay);\n        }\n        this.average.push(currentLatency);\n        if (this.average.length > this.maxAverageCount) {\n            this.average.shift();\n        }\n        let initialLatency = undefined;\n        if (this.initial.length < this.maxInitialCount) {\n            this.initial.push(currentLatency);\n        }\n        else {\n            initialLatency = this.initial.reduce((sum, value) => sum + value, 0) / this.initial.length;\n        }\n        this.lastMeasurement = {\n            initial: initialLatency,\n            current: currentLatency,\n            average: this.average.reduce((sum, value) => sum + value, 0) / this.average.length,\n            high: (() => {\n                if (typeof initialLatency === 'undefined') {\n                    return false;\n                }\n                if (currentLatency > this.highLatencyMaxThreshold) {\n                    return true;\n                }\n                if (currentLatency > this.highLatencyMinThreshold && currentLatency > initialLatency * this.highLatencyMultiple) {\n                    return true;\n                }\n                return false;\n            })()\n        };\n        return this.lastMeasurement;\n    }\n});\nexport { IRemoteAgentService, remoteConnectionLatencyMeasurer };\n", "import { FileOperationError } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { VSBuffer } from 'monaco-editor/esm/vs/base/common/buffer.js';\nimport { isUndefinedOrNull } from 'monaco-editor/esm/vs/base/common/types.js';\nconst ITextFileService = ( createDecorator('textFileService'));\nclass TextFileOperationError extends FileOperationError {\n    static isTextFileOperationError(obj) {\n        return obj instanceof Error && !isUndefinedOrNull(obj.textFileOperationResult);\n    }\n    constructor(message, textFileOperationResult, options) {\n        super(message, 10 );\n        this.textFileOperationResult = textFileOperationResult;\n        this.options = options;\n    }\n}\nfunction stringToSnapshot(value) {\n    let done = false;\n    return {\n        read() {\n            if (!done) {\n                done = true;\n                return value;\n            }\n            return null;\n        }\n    };\n}\nfunction toBufferOrReadable(value) {\n    if (typeof value === 'undefined') {\n        return undefined;\n    }\n    if (typeof value === 'string') {\n        return VSBuffer.fromString(value);\n    }\n    return {\n        read: () => {\n            const chunk = value.read();\n            if (typeof chunk === 'string') {\n                return VSBuffer.fromString(chunk);\n            }\n            return null;\n        }\n    };\n}\nexport { ITextFileService, TextFileOperationError, stringToSnapshot, toBufferOrReadable };\n", "import { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { registerIcon } from 'monaco-editor/esm/vs/platform/theme/common/iconRegistry.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nconst IUserDataProfileService = ( createDecorator('IUserDataProfileService'));\nconst IUserDataProfileImportExportService = ( createDecorator('IUserDataProfileImportExportService'));\nconst defaultUserDataProfileIcon = registerIcon('defaultProfile-icon', Codicon.settings, ( localize('defaultProfileIcon', 'Icon for Default Profile.')));\nconst CURRENT_PROFILE_CONTEXT = ( new RawContextKey('currentProfile', ''));\nexport { CURRENT_PROFILE_CONTEXT, IUserDataProfileImportExportService, IUserDataProfileService, defaultUserDataProfileIcon };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst ISnippetsService = ( createDecorator('snippetService'));\nexport { ISnippetsService };\n", "import { __decorate, __param } from '../../../../../external/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { Extensions as Extensions$1 } from 'monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { IRemoteAgentService } from '../services/remote/common/remoteAgentService.js';\nimport { isWindows } from 'monaco-editor/esm/vs/base/common/platform.js';\nconst workbenchConfigurationNodeBase = ( Object.freeze({\n    'id': 'workbench',\n    'order': 7,\n    'title': ( localize('workbenchConfigurationTitle', \"Workbench\")),\n    'type': 'object',\n}));\nconst securityConfigurationNodeBase = ( Object.freeze({\n    'id': 'security',\n    'scope': 1 ,\n    'title': ( localize('securityConfigurationTitle', \"Security\")),\n    'type': 'object',\n    'order': 7\n}));\nconst Extensions = {\n    ConfigurationMigration: 'base.contributions.configuration.migration'\n};\nclass ConfigurationMigrationRegistry {\n    constructor() {\n        this.migrations = [];\n        this._onDidRegisterConfigurationMigrations = ( new Emitter());\n        this.onDidRegisterConfigurationMigration = this._onDidRegisterConfigurationMigrations.event;\n    }\n    registerConfigurationMigrations(configurationMigrations) {\n        this.migrations.push(...configurationMigrations);\n    }\n}\nconst configurationMigrationRegistry = ( new ConfigurationMigrationRegistry());\nRegistry.add(Extensions.ConfigurationMigration, configurationMigrationRegistry);\nlet DynamicWorkbenchConfigurationWorkbenchContribution = class DynamicWorkbenchConfigurationWorkbenchContribution extends Disposable {\n    constructor(remoteAgentService) {\n        super();\n        (async () => {\n            if (!isWindows) {\n                const remoteEnvironment = await remoteAgentService.getEnvironment();\n                if (remoteEnvironment?.os !== 1 ) {\n                    return;\n                }\n            }\n            const registry = ( Registry.as(Extensions$1.Configuration));\n            registry.registerConfiguration({\n                ...securityConfigurationNodeBase,\n                'properties': {\n                    'security.allowedUNCHosts': {\n                        'type': 'array',\n                        'items': {\n                            'type': 'string',\n                            'pattern': '^[^\\\\\\\\]+$',\n                            'patternErrorMessage': ( localize(\n                                'security.allowedUNCHosts.patternErrorMessage',\n                                'UNC host names must not contain backslashes.'\n                            ))\n                        },\n                        'default': [],\n                        'markdownDescription': ( localize(\n                            'security.allowedUNCHosts',\n                            'A set of UNC host names (without leading or trailing backslash, for example `192.168.0.1` or `my-server`) to allow without user confirmation. If a UNC host is being accessed that is not allowed via this setting or has not been acknowledged via user confirmation, an error will occur and the operation stopped. A restart is required when changing this setting. Find out more about this setting at https://aka.ms/vscode-windows-unc.'\n                        )),\n                        'scope': 2\n                    },\n                    'security.restrictUNCAccess': {\n                        'type': 'boolean',\n                        'default': true,\n                        'markdownDescription': ( localize(\n                            'security.restrictUNCAccess',\n                            'If enabled, only allows access to UNC host names that are allowed by the `#security.allowedUNCHosts#` setting or after user confirmation. Find out more about this setting at https://aka.ms/vscode-windows-unc.'\n                        )),\n                        'scope': 2\n                    }\n                }\n            });\n        })();\n    }\n};\nDynamicWorkbenchConfigurationWorkbenchContribution = ( __decorate([\n    ( __param(0, IRemoteAgentService))\n], DynamicWorkbenchConfigurationWorkbenchContribution));\nexport { DynamicWorkbenchConfigurationWorkbenchContribution, Extensions, securityConfigurationNodeBase, workbenchConfigurationNodeBase };\n", "import { isWeb } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { format2 } from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { getServiceMachineId } from '../../externalServices/common/serviceMachineId.js';\nimport { supportsTelemetry, getTelemetryLevel } from '../../telemetry/common/telemetryUtils.js';\nimport { RemoteAuthorities } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { getRemoteServerRootPath } from 'monaco-editor/esm/vs/platform/remote/common/remoteHosts.js';\nconst WEB_EXTENSION_RESOURCE_END_POINT = 'web-extension-resource';\nconst IExtensionResourceLoaderService = ( createDecorator('extensionResourceLoaderService'));\nclass AbstractExtensionResourceLoaderService {\n    constructor(_fileService, _storageService, _productService, _environmentService, _configurationService) {\n        this._fileService = _fileService;\n        this._storageService = _storageService;\n        this._productService = _productService;\n        this._environmentService = _environmentService;\n        this._configurationService = _configurationService;\n        this._webExtensionResourceEndPoint = `${getRemoteServerRootPath(_productService)}/${WEB_EXTENSION_RESOURCE_END_POINT}/`;\n        if (_productService.extensionsGallery) {\n            this._extensionGalleryResourceUrlTemplate = _productService.extensionsGallery.resourceUrlTemplate;\n            this._extensionGalleryAuthority = this._extensionGalleryResourceUrlTemplate ? this._getExtensionGalleryAuthority(( URI.parse(this._extensionGalleryResourceUrlTemplate))) : undefined;\n        }\n    }\n    get supportsExtensionGalleryResources() {\n        return this._extensionGalleryResourceUrlTemplate !== undefined;\n    }\n    getExtensionGalleryResourceURL({ publisher, name, version, targetPlatform }, path) {\n        if (this._extensionGalleryResourceUrlTemplate) {\n            const uri = ( URI.parse(format2(this._extensionGalleryResourceUrlTemplate, {\n                publisher,\n                name,\n                version: targetPlatform !== undefined\n                    && targetPlatform !== \"undefined\"\n                    && targetPlatform !== \"unknown\"\n                    && targetPlatform !== \"universal\"\n                    ? `${version}+${targetPlatform}`\n                    : version,\n                path: 'extension'\n            })));\n            return this._isWebExtensionResourceEndPoint(uri) ? uri.with({ scheme: RemoteAuthorities.getPreferredWebSchema() }) : uri;\n        }\n        return undefined;\n    }\n    isExtensionGalleryResource(uri) {\n        return !!this._extensionGalleryAuthority && this._extensionGalleryAuthority === this._getExtensionGalleryAuthority(uri);\n    }\n    async getExtensionGalleryRequestHeaders() {\n        const headers = {\n            'X-Client-Name': `${this._productService.applicationName}${isWeb ? '-web' : ''}`,\n            'X-Client-Version': this._productService.version\n        };\n        if (supportsTelemetry(this._productService, this._environmentService) && getTelemetryLevel(this._configurationService) === 3 ) {\n            headers['X-Machine-Id'] = await this._getServiceMachineId();\n        }\n        if (this._productService.commit) {\n            headers['X-Client-Commit'] = this._productService.commit;\n        }\n        return headers;\n    }\n    _getServiceMachineId() {\n        if (!this._serviceMachineIdPromise) {\n            this._serviceMachineIdPromise = getServiceMachineId(this._environmentService, this._fileService, this._storageService);\n        }\n        return this._serviceMachineIdPromise;\n    }\n    _getExtensionGalleryAuthority(uri) {\n        if (this._isWebExtensionResourceEndPoint(uri)) {\n            return uri.authority;\n        }\n        const index = uri.authority.indexOf('.');\n        return index !== -1 ? uri.authority.substring(index + 1) : undefined;\n    }\n    _isWebExtensionResourceEndPoint(uri) {\n        return uri.path.startsWith(this._webExtensionResourceEndPoint);\n    }\n}\nexport { AbstractExtensionResourceLoaderService, IExtensionResourceLoaderService };\n", "import { VSBuffer } from 'monaco-editor/esm/vs/base/common/buffer.js';\nimport { isUUID, generateUuid } from 'monaco-editor/esm/vs/base/common/uuid.js';\nasync function getServiceMachineId(environmentService, fileService, storageService) {\n    let uuid = storageService ? storageService.get('storage.serviceMachineId', -1 ) || null : null;\n    if (uuid) {\n        return uuid;\n    }\n    try {\n        const contents = await fileService.readFile(environmentService.serviceMachineIdResource);\n        const value = ( contents.value.toString());\n        uuid = isUUID(value) ? value : null;\n    }\n    catch (e) {\n        uuid = null;\n    }\n    if (!uuid) {\n        uuid = generateUuid();\n        try {\n            await fileService.writeFile(environmentService.serviceMachineIdResource, VSBuffer.fromString(uuid));\n        }\n        catch (error) {\n        }\n    }\n    storageService?.store('storage.serviceMachineId', uuid, -1 , 1 );\n    return uuid;\n}\nexport { getServiceMachineId };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { addDisposableListener, EventType } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { StandardKeyboardEvent } from 'monaco-editor/esm/vs/base/browser/keyboardEvent.js';\nimport { alert } from 'monaco-editor/esm/vs/base/browser/ui/aria/aria.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { Disposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { marked } from 'monaco-editor/esm/vs/base/common/marked/marked.js';\nimport { isMacintosh } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { EditorExtensionsRegistry } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport { CodeEditorWidget } from 'monaco-editor/esm/vs/editor/browser/widget/codeEditorWidget.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { AccessibilityHelpNLS } from 'monaco-editor/esm/vs/editor/common/standaloneStrings.js';\nimport { CodeActionController } from 'monaco-editor/esm/vs/editor/contrib/codeAction/browser/codeActionController.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { IAccessibilityService } from 'monaco-editor/esm/vs/platform/accessibility/common/accessibility.js';\nimport { createAndFillInActionBarActions } from 'monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js';\nimport { WorkbenchToolBar } from 'monaco-editor/esm/vs/platform/actions/browser/toolbar.js';\nimport { MenuId, IMenuService } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IContextViewService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { createDecorator, IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { ILayoutService } from 'monaco-editor/esm/vs/platform/layout/browser/layoutService.js';\nimport { IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { IQuickInputService } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { accessibilityHelpIsShown, accessibleViewIsShown, accessibleViewSupportsNavigation, accessibleViewVerbosityEnabled, accessibleViewGoToSymbolSupported, accessibleViewCurrentProviderId } from './accessibilityConfiguration.js';\nimport { getSimpleEditorOptions } from '../../codeEditor/browser/simpleEditorOptions.js';\nconst IAccessibleViewService = ( createDecorator('accessibleViewService'));\nlet AccessibleView = class AccessibleView extends Disposable {\n    get editorWidget() { return this._editorWidget; }\n    constructor(_openerService, _instantiationService, _configurationService, _modelService, _contextViewService, _contextKeyService, _accessibilityService, _keybindingService, _layoutService, _menuService) {\n        super();\n        this._openerService = _openerService;\n        this._instantiationService = _instantiationService;\n        this._configurationService = _configurationService;\n        this._modelService = _modelService;\n        this._contextViewService = _contextViewService;\n        this._contextKeyService = _contextKeyService;\n        this._accessibilityService = _accessibilityService;\n        this._keybindingService = _keybindingService;\n        this._layoutService = _layoutService;\n        this._menuService = _menuService;\n        this._accessiblityHelpIsShown = accessibilityHelpIsShown.bindTo(this._contextKeyService);\n        this._accessibleViewIsShown = accessibleViewIsShown.bindTo(this._contextKeyService);\n        this._accessibleViewSupportsNavigation = accessibleViewSupportsNavigation.bindTo(this._contextKeyService);\n        this._accessibleViewVerbosityEnabled = accessibleViewVerbosityEnabled.bindTo(this._contextKeyService);\n        this._accessibleViewGoToSymbolSupported = accessibleViewGoToSymbolSupported.bindTo(this._contextKeyService);\n        this._accessibleViewCurrentProviderId = accessibleViewCurrentProviderId.bindTo(this._contextKeyService);\n        this._container = document.createElement('div');\n        this._container.classList.add('accessible-view');\n        const codeEditorWidgetOptions = {\n            contributions: EditorExtensionsRegistry.getEditorContributions().filter(c => c.id !== CodeActionController.ID)\n        };\n        const titleBar = document.createElement('div');\n        titleBar.classList.add('accessible-view-title-bar');\n        this._title = document.createElement('div');\n        this._title.classList.add('accessible-view-title');\n        titleBar.appendChild(this._title);\n        const actionBar = document.createElement('div');\n        actionBar.classList.add('accessible-view-action-bar');\n        titleBar.appendChild(actionBar);\n        this._container.appendChild(titleBar);\n        this._toolbar = this._register(_instantiationService.createInstance(WorkbenchToolBar, actionBar, { orientation: 0  }));\n        this._toolbar.context = { viewId: 'accessibleView' };\n        const toolbarElt = this._toolbar.getElement();\n        toolbarElt.tabIndex = 0;\n        const editorOptions = {\n            ...getSimpleEditorOptions(this._configurationService),\n            lineDecorationsWidth: 6,\n            dragAndDrop: false,\n            cursorWidth: 1,\n            wrappingStrategy: 'advanced',\n            wrappingIndent: 'none',\n            padding: { top: 2, bottom: 2 },\n            quickSuggestions: false,\n            renderWhitespace: 'none',\n            dropIntoEditor: { enabled: false },\n            readOnly: true,\n            fontFamily: 'var(--monaco-monospace-font)'\n        };\n        this._editorWidget = this._register(this._instantiationService.createInstance(CodeEditorWidget, this._container, editorOptions, codeEditorWidgetOptions));\n        this._register(this._accessibilityService.onDidChangeScreenReaderOptimized(() => {\n            if (this._currentProvider && this._accessiblityHelpIsShown.get()) {\n                this.show(this._currentProvider);\n            }\n        }));\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\n            if (this._currentProvider && e.affectsConfiguration(this._currentProvider.verbositySettingKey)) {\n                if (this._accessiblityHelpIsShown.get()) {\n                    this.show(this._currentProvider);\n                }\n                this._accessibleViewVerbosityEnabled.set(this._configurationService.getValue(this._currentProvider.verbositySettingKey));\n                this._updateToolbar(this._currentProvider.actions, this._currentProvider.options.type);\n            }\n        }));\n        this._register(this._editorWidget.onDidDispose(() => this._resetContextKeys()));\n    }\n    _resetContextKeys() {\n        this._accessiblityHelpIsShown.reset();\n        this._accessibleViewIsShown.reset();\n        this._accessibleViewSupportsNavigation.reset();\n        this._accessibleViewVerbosityEnabled.reset();\n        this._accessibleViewGoToSymbolSupported.reset();\n        this._accessibleViewCurrentProviderId.reset();\n    }\n    show(provider, symbol, showAccessibleViewHelp) {\n        provider = provider ?? this._currentProvider;\n        if (!provider) {\n            return;\n        }\n        const delegate = {\n            getAnchor: () => { return { x: (window.innerWidth / 2) - ((Math.min(this._layoutService.dimension.width * 0.62 , 600 )) / 2), y: this._layoutService.offset.quickPickTop }; },\n            render: (container) => {\n                container.classList.add('accessible-view-container');\n                return this._render(provider, container, showAccessibleViewHelp);\n            },\n            onHide: () => {\n                if (!showAccessibleViewHelp) {\n                    this._currentProvider = undefined;\n                    this._resetContextKeys();\n                }\n            }\n        };\n        this._contextViewService.showContextView(delegate);\n        if (symbol && this._currentProvider) {\n            this.showSymbol(this._currentProvider, symbol);\n        }\n    }\n    previous() {\n        if (!this._currentProvider) {\n            return;\n        }\n        this._currentProvider.previous?.();\n    }\n    next() {\n        if (!this._currentProvider) {\n            return;\n        }\n        this._currentProvider.next?.();\n    }\n    goToSymbol() {\n        if (!this._currentProvider) {\n            return;\n        }\n        this._instantiationService.createInstance(AccessibleViewSymbolQuickPick, this).show(this._currentProvider);\n    }\n    getSymbols() {\n        if (!this._currentProvider || !this._currentContent) {\n            return;\n        }\n        const tokens = this._currentProvider.options.language && this._currentProvider.options.language !== 'markdown' ? this._currentProvider.getSymbols?.() : marked.lexer(this._currentContent);\n        if (!tokens) {\n            return;\n        }\n        const symbols = [];\n        let firstListItem;\n        for (const token of tokens) {\n            let label = undefined;\n            if ('type' in token) {\n                switch (token.type) {\n                    case 'heading':\n                    case 'paragraph':\n                    case 'code':\n                        label = token.text;\n                        break;\n                    case 'list': {\n                        const firstItem = token.items?.[0];\n                        if (!firstItem) {\n                            break;\n                        }\n                        firstListItem = `- ${firstItem.text}`;\n                        label = token.items?.map(i => i.text).join(', ');\n                        break;\n                    }\n                }\n            }\n            else {\n                label = token.label;\n            }\n            if (label) {\n                symbols.push({ info: label, label: ( localize('symbolLabel', \"({0}) {1}\", token.type, label)), ariaLabel: ( localize('symbolLabelAria', \"({0}) {1}\", token.type, label)), firstListItem });\n                firstListItem = undefined;\n            }\n        }\n        return symbols;\n    }\n    showSymbol(provider, symbol) {\n        if (!this._currentContent) {\n            return;\n        }\n        const index = this._currentContent.split('\\n').findIndex(line => line.includes(symbol.info.split('\\n')[0]) || (symbol.firstListItem && line.includes(symbol.firstListItem))) ?? -1;\n        if (index >= 0) {\n            this.show(provider);\n            this._editorWidget.revealLine(index + 1);\n            this._editorWidget.setSelection({ startLineNumber: index + 1, startColumn: 1, endLineNumber: index + 1, endColumn: 1 });\n        }\n        this._updateContextKeys(provider, true);\n    }\n    disableHint() {\n        if (!this._currentProvider) {\n            return;\n        }\n        this._configurationService.updateValue(this._currentProvider?.verbositySettingKey, false);\n        alert(( localize(\n            'disableAccessibilityHelp',\n            '{0} accessibility verbosity is now disabled',\n            this._currentProvider.verbositySettingKey\n        )));\n    }\n    _updateContextKeys(provider, shown) {\n        if (provider.options.type === \"help\" ) {\n            this._accessiblityHelpIsShown.set(shown);\n            this._accessibleViewIsShown.reset();\n        }\n        else {\n            this._accessibleViewIsShown.set(shown);\n            this._accessiblityHelpIsShown.reset();\n        }\n        if (provider.next && provider.previous) {\n            this._accessibleViewSupportsNavigation.set(true);\n        }\n        else {\n            this._accessibleViewSupportsNavigation.reset();\n        }\n        const verbosityEnabled = this._configurationService.getValue(provider.verbositySettingKey);\n        this._accessibleViewVerbosityEnabled.set(verbosityEnabled);\n        this._accessibleViewGoToSymbolSupported.set(this._goToSymbolsSupported() ? this.getSymbols()?.length > 0 : false);\n    }\n    _render(provider, container, showAccessibleViewHelp) {\n        if (!showAccessibleViewHelp) {\n            this._currentProvider = provider;\n            this._accessibleViewCurrentProviderId.set(provider.verbositySettingKey.replaceAll('accessibility.verbosity.', ''));\n        }\n        const value = this._configurationService.getValue(provider.verbositySettingKey);\n        const readMoreLink = provider.options.readMoreUrl ? ( localize(\n            \"openDoc\",\n            \"\\n\\nPress H now to open a browser window with more information related to accessibility.\\n\\n\"\n        )) : '';\n        let disableHelpHint = '';\n        if (provider.options.type === \"help\"  && !!value) {\n            disableHelpHint = this._getDisableVerbosityHint(provider.verbositySettingKey);\n        }\n        const accessibilitySupport = this._accessibilityService.isScreenReaderOptimized();\n        let message = '';\n        if (provider.options.type === \"help\" ) {\n            const turnOnMessage = (isMacintosh\n                ? AccessibilityHelpNLS.changeConfigToOnMac\n                : AccessibilityHelpNLS.changeConfigToOnWinLinux);\n            if (accessibilitySupport && provider.verbositySettingKey === \"accessibility.verbosity.editor\" ) {\n                message = AccessibilityHelpNLS.auto_on;\n                message += '\\n';\n            }\n            else if (!accessibilitySupport) {\n                message = AccessibilityHelpNLS.auto_off + '\\n' + turnOnMessage;\n                message += '\\n';\n            }\n        }\n        this._currentContent = message + provider.provideContent() + readMoreLink + disableHelpHint + ( localize('exit-tip', '\\nExit this dialog via the Escape key.'));\n        this._updateContextKeys(provider, true);\n        this._getTextModel(( URI.from(\n            { path: `accessible-view-${provider.verbositySettingKey}`, scheme: 'accessible-view', fragment: this._currentContent }\n        ))).then((model) => {\n            if (!model) {\n                return;\n            }\n            this._editorWidget.setModel(model);\n            const domNode = this._editorWidget.getDomNode();\n            if (!domNode) {\n                return;\n            }\n            model.setLanguage(provider.options.language ?? 'markdown');\n            container.appendChild(this._container);\n            let actionsHint = '';\n            const verbose = this._configurationService.getValue(provider.verbositySettingKey);\n            const hasActions = this._accessibleViewSupportsNavigation.get() || this._accessibleViewVerbosityEnabled.get() || this._accessibleViewGoToSymbolSupported.get() || this._currentProvider?.actions;\n            if (verbose && !showAccessibleViewHelp && hasActions) {\n                actionsHint = ( localize(\n                    'ariaAccessibleViewActions',\n                    \"Use Shift+Tab to explore actions such as disabling this hint.\"\n                ));\n            }\n            let ariaLabel = provider.options.type === \"help\"  ? ( localize('accessibility-help', \"Accessibility Help\")) : ( localize('accessible-view', \"Accessible View\"));\n            this._title.textContent = ariaLabel;\n            if (actionsHint && provider.options.type === \"view\" ) {\n                ariaLabel = ( localize('accessible-view-hint', \"Accessible View, {0}\", actionsHint));\n            }\n            else if (actionsHint) {\n                ariaLabel = ( localize('accessibility-help-hint', \"Accessibility Help, {0}\", actionsHint));\n            }\n            this._editorWidget.updateOptions({ ariaLabel });\n            this._editorWidget.focus();\n        });\n        this._updateToolbar(provider.actions, provider.options.type);\n        const handleEscape = (e) => {\n            e.stopPropagation();\n            this._contextViewService.hideContextView();\n            this._updateContextKeys(provider, false);\n            setTimeout(() => provider.onClose(), 100);\n        };\n        const disposableStore = ( new DisposableStore());\n        disposableStore.add(this._editorWidget.onKeyUp((e) => provider.onKeyUp?.(e)));\n        disposableStore.add(this._editorWidget.onKeyDown((e) => {\n            if (e.keyCode === 9 ) {\n                handleEscape(e);\n            }\n            else if (e.keyCode === 38  && provider.options.readMoreUrl) {\n                const url = provider.options.readMoreUrl;\n                alert(AccessibilityHelpNLS.openingDocs);\n                this._openerService.open(( URI.parse(url)));\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }));\n        disposableStore.add(addDisposableListener(this._toolbar.getElement(), EventType.KEY_DOWN, (e) => {\n            const keyboardEvent = ( new StandardKeyboardEvent(e));\n            if (keyboardEvent.equals(9 )) {\n                handleEscape(e);\n            }\n        }));\n        disposableStore.add(this._editorWidget.onDidBlurEditorWidget(() => {\n            if (document.activeElement !== this._toolbar.getElement()) {\n                this._contextViewService.hideContextView();\n            }\n        }));\n        disposableStore.add(this._editorWidget.onDidContentSizeChange(() => this._layout()));\n        disposableStore.add(this._layoutService.onDidLayout(() => this._layout()));\n        return disposableStore;\n    }\n    _updateToolbar(providedActions, type) {\n        this._toolbar.setAriaLabel(type === \"help\"  ? ( localize('accessibleHelpToolbar', 'Accessibility Help')) : ( localize('accessibleViewToolbar', \"Accessible View\")));\n        const menuActions = [];\n        const toolbarMenu = this._register(this._menuService.createMenu(MenuId.AccessibleView, this._contextKeyService));\n        createAndFillInActionBarActions(toolbarMenu, {}, menuActions);\n        if (providedActions) {\n            for (const providedAction of providedActions) {\n                providedAction.class = providedAction.class || ThemeIcon.asClassName(Codicon.primitiveSquare);\n                providedAction.checked = undefined;\n            }\n            this._toolbar.setActions([...providedActions, ...menuActions]);\n        }\n        else {\n            this._toolbar.setActions(menuActions);\n        }\n    }\n    _layout() {\n        const dimension = this._layoutService.dimension;\n        const maxHeight = dimension.height && dimension.height * .4;\n        const height = Math.min(maxHeight, this._editorWidget.getContentHeight());\n        const width = Math.min(dimension.width * 0.62 , 600 );\n        this._editorWidget.layout({ width, height });\n    }\n    async _getTextModel(resource) {\n        const existing = this._modelService.getModel(resource);\n        if (existing && !existing.isDisposed()) {\n            return existing;\n        }\n        return this._modelService.createModel(resource.fragment, null, resource, false);\n    }\n    _goToSymbolsSupported() {\n        if (!this._currentProvider) {\n            return false;\n        }\n        return this._currentProvider.options.type === \"help\"  || this._currentProvider.options.language === 'markdown' || this._currentProvider.options.language === undefined || !!this._currentProvider.getSymbols;\n    }\n    showAccessibleViewHelp() {\n        if (!this._currentProvider) {\n            return;\n        }\n        const currentProvider = Object.assign({}, this._currentProvider);\n        currentProvider.options = Object.assign({}, currentProvider.options);\n        const accessibleViewHelpProvider = {\n            provideContent: () => this._getAccessibleViewHelpDialogContent(this._goToSymbolsSupported()),\n            onClose: () => this.show(currentProvider),\n            options: { type: \"help\"  },\n            verbositySettingKey: this._currentProvider.verbositySettingKey\n        };\n        this._contextViewService.hideContextView();\n        setTimeout(() => this.show(accessibleViewHelpProvider, undefined, true), 100);\n    }\n    _getAccessibleViewHelpDialogContent(providerHasSymbols) {\n        const navigationHint = this._getNavigationHint();\n        const goToSymbolHint = this._getGoToSymbolHint(providerHasSymbols);\n        const toolbarHint = ( localize('toolbar', \"Navigate to the toolbar (Shift+Tab))\"));\n        let hint = ( localize('intro', \"In the accessible view, you can:\\n\"));\n        if (navigationHint) {\n            hint += ' - ' + navigationHint + '\\n';\n        }\n        if (goToSymbolHint) {\n            hint += ' - ' + goToSymbolHint + '\\n';\n        }\n        if (toolbarHint) {\n            hint += ' - ' + toolbarHint + '\\n';\n        }\n        return hint;\n    }\n    _getNavigationHint() {\n        let hint = '';\n        const nextKeybinding = this._keybindingService.lookupKeybinding(\"editor.action.accessibleViewNext\" )?.getAriaLabel();\n        const previousKeybinding = this._keybindingService.lookupKeybinding(\"editor.action.accessibleViewPrevious\" )?.getAriaLabel();\n        if (nextKeybinding && previousKeybinding) {\n            hint = ( localize(\n                'accessibleViewNextPreviousHint',\n                \"Show the next ({0}) or previous ({1}) item\",\n                nextKeybinding,\n                previousKeybinding\n            ));\n        }\n        else {\n            hint = ( localize(\n                'chatAccessibleViewNextPreviousHintNoKb',\n                \"Show the next or previous item by configuring keybindings for the Show Next & Previous in Accessible View commands\"\n            ));\n        }\n        return hint;\n    }\n    _getDisableVerbosityHint(verbositySettingKey) {\n        if (!this._configurationService.getValue(verbositySettingKey)) {\n            return '';\n        }\n        let hint = '';\n        const disableKeybinding = this._keybindingService.lookupKeybinding(\"editor.action.accessibleViewDisableHint\" , this._contextKeyService)?.getAriaLabel();\n        if (disableKeybinding) {\n            hint = ( localize(\n                'acessibleViewDisableHint',\n                \"Disable accessibility verbosity for this feature ({0}). This will disable the hint to open the accessible view for example.\\n\",\n                disableKeybinding\n            ));\n        }\n        else {\n            hint = ( localize(\n                'accessibleViewDisableHintNoKb',\n                \"Add a keybinding for the command Disable Accessible View Hint, which disables accessibility verbosity for this feature.\\n\"\n            ));\n        }\n        return hint;\n    }\n    _getGoToSymbolHint(providerHasSymbols) {\n        const goToSymbolKb = this._keybindingService.lookupKeybinding(\"editor.action.accessibleViewGoToSymbol\" )?.getAriaLabel();\n        let goToSymbolHint = '';\n        if (providerHasSymbols) {\n            if (goToSymbolKb) {\n                goToSymbolHint = ( localize('goToSymbolHint', 'Go to a symbol ({0})', goToSymbolKb));\n            }\n            else {\n                goToSymbolHint = ( localize(\n                    'goToSymbolHintNoKb',\n                    'To go to a symbol, configure a keybinding for the command Go To Symbol in Accessible View'\n                ));\n            }\n        }\n        return goToSymbolHint;\n    }\n};\nAccessibleView = ( __decorate([\n    ( __param(0, IOpenerService)),\n    ( __param(1, IInstantiationService)),\n    ( __param(2, IConfigurationService)),\n    ( __param(3, IModelService)),\n    ( __param(4, IContextViewService)),\n    ( __param(5, IContextKeyService)),\n    ( __param(6, IAccessibilityService)),\n    ( __param(7, IKeybindingService)),\n    ( __param(8, ILayoutService)),\n    ( __param(9, IMenuService))\n], AccessibleView));\nlet AccessibleViewService = class AccessibleViewService extends Disposable {\n    constructor(_instantiationService, _configurationService, _keybindingService) {\n        super();\n        this._instantiationService = _instantiationService;\n        this._configurationService = _configurationService;\n        this._keybindingService = _keybindingService;\n    }\n    show(provider) {\n        if (!this._accessibleView) {\n            this._accessibleView = this._register(this._instantiationService.createInstance(AccessibleView));\n        }\n        this._accessibleView.show(provider);\n    }\n    next() {\n        this._accessibleView?.next();\n    }\n    previous() {\n        this._accessibleView?.previous();\n    }\n    goToSymbol() {\n        this._accessibleView?.goToSymbol();\n    }\n    getOpenAriaHint(verbositySettingKey) {\n        if (!this._configurationService.getValue(verbositySettingKey)) {\n            return null;\n        }\n        const keybinding = this._keybindingService.lookupKeybinding(\"editor.action.accessibleView\" )?.getAriaLabel();\n        let hint = null;\n        if (keybinding) {\n            hint = ( localize(\n                'acessibleViewHint',\n                \"Inspect this in the accessible view with {0}\",\n                keybinding\n            ));\n        }\n        else {\n            hint = ( localize(\n                'acessibleViewHintNoKbEither',\n                \"Inspect this in the accessible view via the command Open Accessible View which is currently not triggerable via keybinding.\"\n            ));\n        }\n        return hint;\n    }\n    disableHint() {\n        this._accessibleView?.disableHint();\n    }\n    showAccessibleViewHelp() {\n        this._accessibleView?.showAccessibleViewHelp();\n    }\n};\nAccessibleViewService = ( __decorate([\n    ( __param(0, IInstantiationService)),\n    ( __param(1, IConfigurationService)),\n    ( __param(2, IKeybindingService))\n], AccessibleViewService));\nlet AccessibleViewSymbolQuickPick = class AccessibleViewSymbolQuickPick {\n    constructor(_accessibleView, _quickInputService) {\n        this._accessibleView = _accessibleView;\n        this._quickInputService = _quickInputService;\n    }\n    show(provider) {\n        const quickPick = this._quickInputService.createQuickPick();\n        quickPick.placeholder = ( localize('accessibleViewSymbolQuickPickPlaceholder', \"Type to search symbols\"));\n        quickPick.title = ( localize('accessibleViewSymbolQuickPickTitle', \"Go to Symbol Accessible View\"));\n        const symbols = this._accessibleView.getSymbols();\n        if (!symbols) {\n            return;\n        }\n        for (const symbol of symbols) {\n        }\n        quickPick.canSelectMany = false;\n        quickPick.items = symbols;\n        quickPick.show();\n        quickPick.onDidAccept(() => {\n            this._accessibleView.showSymbol(provider, quickPick.selectedItems[0]);\n            quickPick.hide();\n        });\n        quickPick.onDidHide(() => {\n            if (quickPick.selectedItems.length === 0) {\n                this._accessibleView.show(provider);\n            }\n        });\n    }\n};\nAccessibleViewSymbolQuickPick = ( __decorate([\n    ( __param(1, IQuickInputService))\n], AccessibleViewSymbolQuickPick));\nexport { AccessibleViewService, IAccessibleViewService };\n", "import { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { Extensions } from 'monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { workbenchConfigurationNodeBase } from '../../../common/configuration.js';\nconst accessibilityHelpIsShown = ( new RawContextKey('accessibilityHelpIsShown', false, true));\nconst accessibleViewIsShown = ( new RawContextKey('accessibleViewIsShown', false, true));\nconst accessibleViewSupportsNavigation = ( new RawContextKey('accessibleViewSupportsNavigation', false, true));\nconst accessibleViewVerbosityEnabled = ( new RawContextKey('accessibleViewVerbosityEnabled', false, true));\nconst accessibleViewGoToSymbolSupported = ( new RawContextKey('accessibleViewGoToSymbolSupported', false, true));\nconst accessibleViewCurrentProviderId = ( new RawContextKey('accessibleViewCurrentProviderId', undefined, undefined));\nconst baseProperty = {\n    type: 'boolean',\n    default: true,\n    tags: ['accessibility']\n};\nconst configuration = {\n    id: 'accessibility',\n    title: ( localize('accessibilityConfigurationTitle', \"Accessibility\")),\n    type: 'object',\n    properties: {\n        [\"accessibility.verbosity.terminal\" ]: {\n            description: ( localize(\n                'verbosity.terminal.description',\n                'Provide information about how to access the terminal accessibility help menu when the terminal is focused'\n            )),\n            ...baseProperty\n        },\n        [\"accessibility.verbosity.diffEditor\" ]: {\n            description: ( localize(\n                'verbosity.diffEditor.description',\n                'Provide information about how to navigate changes in the diff editor when it is focused'\n            )),\n            ...baseProperty\n        },\n        [\"accessibility.verbosity.panelChat\" ]: {\n            description: ( localize(\n                'verbosity.chat.description',\n                'Provide information about how to access the chat help menu when the chat input is focused'\n            )),\n            ...baseProperty\n        },\n        [\"accessibility.verbosity.inlineChat\" ]: {\n            description: ( localize(\n                'verbosity.interactiveEditor.description',\n                'Provide information about how to access the inline editor chat accessibility help menu and alert with hints which describe how to use the feature when the input is focused'\n            )),\n            ...baseProperty\n        },\n        [\"accessibility.verbosity.inlineCompletions\" ]: {\n            description: ( localize(\n                'verbosity.inlineCompletions.description',\n                'Provide information about how to access the inline completions hover and accessible view'\n            )),\n            ...baseProperty\n        },\n        [\"accessibility.verbosity.keybindingsEditor\" ]: {\n            description: ( localize(\n                'verbosity.keybindingsEditor.description',\n                'Provide information about how to change a keybinding in the keybindings editor when a row is focused'\n            )),\n            ...baseProperty\n        },\n        [\"accessibility.verbosity.notebook\" ]: {\n            description: ( localize(\n                'verbosity.notebook',\n                'Provide information about how to focus the cell container or inner editor when a notebook cell is focused.'\n            )),\n            ...baseProperty\n        },\n        [\"accessibility.verbosity.hover\" ]: {\n            description: ( localize(\n                'verbosity.hover',\n                'Provide information about how to open the hover in an accessible view.'\n            )),\n            ...baseProperty\n        },\n        [\"accessibility.verbosity.notification\" ]: {\n            description: ( localize(\n                'verbosity.notification',\n                'Provide information about how to open the notification in an accessible view.'\n            )),\n            ...baseProperty\n        },\n        [\"accessibility.verbosity.untitledHint\" ]: {\n            description: ( localize(\n                'verbosity.untitledhint',\n                'Provide information about relevant actions in an untitled text editor.'\n            )),\n            ...baseProperty\n        }\n    }\n};\nfunction registerAccessibilityConfiguration() {\n    const registry = ( Registry.as(Extensions.Configuration));\n    registry.registerConfiguration(configuration);\n    registry.registerConfiguration({\n        ...workbenchConfigurationNodeBase,\n        properties: {\n            [\"accessibility.dimUnfocused.enabled\" ]: {\n                description: ( localize(\n                    'dimUnfocusedEnabled',\n                    'Whether to dim unfocused editors and terminals, which makes it more clear where typed input will go to. This works with the majority of editors with the notable exceptions of those that utilize iframes like notebooks and extension webview editors.'\n                )),\n                type: 'boolean',\n                default: false,\n                tags: ['accessibility'],\n                scope: 1 ,\n            },\n            [\"accessibility.dimUnfocused.opacity\" ]: {\n                markdownDescription: ( localize(\n                    'dimUnfocusedOpacity',\n                    'The opacity fraction (0.2 to 1.0) to use for unfocused editors and terminals. This will only take effect when {0} is enabled.',\n                    `\\`#${\"accessibility.dimUnfocused.enabled\" }#\\``\n                )),\n                type: 'number',\n                minimum: 0.2 ,\n                maximum: 1 ,\n                default: 0.75 ,\n                tags: ['accessibility'],\n                scope: 1 ,\n            }\n        }\n    });\n}\nexport { accessibilityHelpIsShown, accessibleViewCurrentProviderId, accessibleViewGoToSymbolSupported, accessibleViewIsShown, accessibleViewSupportsNavigation, accessibleViewVerbosityEnabled, registerAccessibilityConfiguration };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { RawContextKey, ContextKeyExpr, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { ISnippetsService } from './snippets.js';\nimport { getNonWhitespacePrefix } from './snippetsService.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { registerEditorContribution, EditorCommand, registerEditorCommand } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport { SnippetController2 } from 'monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetController2.js';\nimport { showSimpleSuggestions } from 'monaco-editor/esm/vs/editor/contrib/suggest/browser/suggest.js';\nimport { EditorContextKeys } from 'monaco-editor/esm/vs/editor/common/editorContextKeys.js';\nimport { SnippetCompletion } from './snippetCompletionProvider.js';\nimport { IClipboardService } from 'monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js';\nimport { EditorState } from 'monaco-editor/esm/vs/editor/contrib/editorState/browser/editorState.js';\nimport { ILanguageFeaturesService } from 'monaco-editor/esm/vs/editor/common/services/languageFeatures.js';\nvar TabCompletionController_1;\nlet TabCompletionController = class TabCompletionController {\n    static { TabCompletionController_1 = this; }\n    static { this.ID = 'editor.tabCompletionController'; }\n    static { this.ContextKey = ( new RawContextKey('hasSnippetCompletions', undefined)); }\n    static get(editor) {\n        return editor.getContribution(TabCompletionController_1.ID);\n    }\n    constructor(_editor, _snippetService, _clipboardService, _languageFeaturesService, contextKeyService) {\n        this._editor = _editor;\n        this._snippetService = _snippetService;\n        this._clipboardService = _clipboardService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._activeSnippets = [];\n        this._hasSnippets = TabCompletionController_1.ContextKey.bindTo(contextKeyService);\n        this._configListener = this._editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(121 )) {\n                this._update();\n            }\n        });\n        this._update();\n    }\n    dispose() {\n        this._configListener.dispose();\n        this._selectionListener?.dispose();\n    }\n    _update() {\n        const enabled = this._editor.getOption(121 ) === 'onlySnippets';\n        if (this._enabled !== enabled) {\n            this._enabled = enabled;\n            if (!this._enabled) {\n                this._selectionListener?.dispose();\n            }\n            else {\n                this._selectionListener = this._editor.onDidChangeCursorSelection(e => this._updateSnippets());\n                if (this._editor.getModel()) {\n                    this._updateSnippets();\n                }\n            }\n        }\n    }\n    _updateSnippets() {\n        this._activeSnippets = [];\n        this._completionProvider?.dispose();\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const selection = this._editor.getSelection();\n        const model = this._editor.getModel();\n        model.tokenization.tokenizeIfCheap(selection.positionLineNumber);\n        const id = model.getLanguageIdAtPosition(selection.positionLineNumber, selection.positionColumn);\n        const snippets = this._snippetService.getSnippetsSync(id);\n        if (!snippets) {\n            this._hasSnippets.set(false);\n            return;\n        }\n        if (Range.isEmpty(selection)) {\n            const prefix = getNonWhitespacePrefix(model, selection.getPosition());\n            if (prefix) {\n                for (const snippet of snippets) {\n                    if (prefix.endsWith(snippet.prefix)) {\n                        this._activeSnippets.push(snippet);\n                    }\n                }\n            }\n        }\n        else if (!Range.spansMultipleLines(selection) && model.getValueLengthInRange(selection) <= 100) {\n            const selected = model.getValueInRange(selection);\n            if (selected) {\n                for (const snippet of snippets) {\n                    if (selected === snippet.prefix) {\n                        this._activeSnippets.push(snippet);\n                    }\n                }\n            }\n        }\n        const len = this._activeSnippets.length;\n        if (len === 0) {\n            this._hasSnippets.set(false);\n        }\n        else if (len === 1) {\n            this._hasSnippets.set(true);\n        }\n        else {\n            this._hasSnippets.set(true);\n            this._completionProvider = {\n                _debugDisplayName: 'tabCompletion',\n                dispose: () => {\n                    registration.dispose();\n                },\n                provideCompletionItems: (_model, position) => {\n                    if (_model !== model || !selection.containsPosition(position)) {\n                        return;\n                    }\n                    const suggestions = ( this._activeSnippets.map(snippet => {\n                        const range = Range.fromPositions(position.delta(0, -snippet.prefix.length), position);\n                        return ( new SnippetCompletion(snippet, range));\n                    }));\n                    return { suggestions };\n                }\n            };\n            const registration = this._languageFeaturesService.completionProvider.register({ language: model.getLanguageId(), pattern: model.uri.fsPath, scheme: model.uri.scheme }, this._completionProvider);\n        }\n    }\n    async performSnippetCompletions() {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        if (this._activeSnippets.length === 1) {\n            const [snippet] = this._activeSnippets;\n            let clipboardText;\n            if (snippet.needsClipboard) {\n                const state = ( new EditorState(\n                    this._editor,\n                    1  | 4\n                ));\n                clipboardText = await this._clipboardService.readText();\n                if (!state.validate(this._editor)) {\n                    return;\n                }\n            }\n            SnippetController2.get(this._editor)?.insert(snippet.codeSnippet, {\n                overwriteBefore: snippet.prefix.length, overwriteAfter: 0,\n                clipboardText\n            });\n        }\n        else if (this._activeSnippets.length > 1) {\n            if (this._completionProvider) {\n                showSimpleSuggestions(this._editor, this._completionProvider);\n            }\n        }\n    }\n};\nTabCompletionController = TabCompletionController_1 = ( __decorate([\n    ( __param(1, ISnippetsService)),\n    ( __param(2, IClipboardService)),\n    ( __param(3, ILanguageFeaturesService)),\n    ( __param(4, IContextKeyService))\n], TabCompletionController));\nregisterEditorContribution(TabCompletionController.ID, TabCompletionController, 0 );\nconst TabCompletionCommand = EditorCommand.bindToContribution(TabCompletionController.get);\nregisterEditorCommand(( new TabCompletionCommand({\n    id: 'insertSnippet',\n    precondition: TabCompletionController.ContextKey,\n    handler: x => x.performSnippetCompletions(),\n    kbOpts: {\n        weight: 100 ,\n        kbExpr: ( ContextKeyExpr.and(\n            EditorContextKeys.editorTextFocus,\n            EditorContextKeys.tabDoesNotMoveFocus,\n            ( SnippetController2.InSnippetMode.toNegated())\n        )),\n        primary: 2\n    }\n})));\nexport { TabCompletionController };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { DisposableStore, combinedDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport * as resources from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { isFalsyOrWhitespace } from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { setSnippetSuggestSupport } from 'monaco-editor/esm/vs/editor/contrib/suggest/browser/suggest.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { IEnvironmentService } from 'monaco-editor/esm/vs/platform/environment/common/environment.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { ILifecycleService } from '../../../services/lifecycle/common/lifecycle.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { SnippetFile } from './snippetsFile.js';\nimport { ExtensionsRegistry } from '../../../services/extensions/common/extensionsRegistry.js';\nimport { languagesExtPoint } from '../../../services/language/common/languageService.js';\nimport { SnippetCompletionProvider } from './snippetCompletionProvider.js';\nimport { IExtensionResourceLoaderService } from '../../../../platform/extensionResourceLoader/common/extensionResourceLoader.js';\nimport { ResourceMap } from 'monaco-editor/esm/vs/base/common/map.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { isStringArray } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ITextFileService } from '../../../services/textfile/common/textfiles.js';\nimport { ILanguageConfigurationService } from 'monaco-editor/esm/vs/editor/common/languages/languageConfigurationRegistry.js';\nimport { IUserDataProfileService } from '../../../services/userDataProfile/common/userDataProfile.js';\nimport { insertInto } from 'monaco-editor/esm/vs/base/common/arrays.js';\nvar SnippetEnablement_1, SnippetUsageTimestamps_1;\nvar snippetExt;\n( ((function(snippetExt) {\n    function toValidSnippet(extension, snippet, languageService) {\n        if (isFalsyOrWhitespace(snippet.path)) {\n            extension.collector.error(( (localize(\n                'invalid.path.0',\n                \"Expected string in `contributes.{0}.path`. Provided value: {1}\",\n                extension.description.name,\n                String(snippet.path)\n            ))));\n            return null;\n        }\n        if (isFalsyOrWhitespace(snippet.language) && !snippet.path.endsWith('.code-snippets')) {\n            extension.collector.error(( (localize(\n                'invalid.language.0',\n                \"When omitting the language, the value of `contributes.{0}.path` must be a `.code-snippets`-file. Provided value: {1}\",\n                extension.description.name,\n                String(snippet.path)\n            ))));\n            return null;\n        }\n        if (!isFalsyOrWhitespace(snippet.language) && !languageService.isRegisteredLanguageId(snippet.language)) {\n            extension.collector.error(( (localize(\n                'invalid.language',\n                \"Unknown language in `contributes.{0}.language`. Provided value: {1}\",\n                extension.description.name,\n                String(snippet.language)\n            ))));\n            return null;\n        }\n        const extensionLocation = extension.description.extensionLocation;\n        const snippetLocation = resources.joinPath(extensionLocation, snippet.path);\n        if (!resources.isEqualOrParent(snippetLocation, extensionLocation)) {\n            extension.collector.error(( (localize(\n                'invalid.path.1',\n                \"Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.\",\n                extension.description.name,\n                snippetLocation.path,\n                extensionLocation.path\n            ))));\n            return null;\n        }\n        return {\n            language: snippet.language,\n            location: snippetLocation\n        };\n    }\n    snippetExt.toValidSnippet = toValidSnippet;\n    snippetExt.snippetsContribution = {\n        description: ( (localize('vscode.extension.contributes.snippets', 'Contributes snippets.'))),\n        type: 'array',\n        defaultSnippets: [{ body: [{ language: '', path: '' }] }],\n        items: {\n            type: 'object',\n            defaultSnippets: [{ body: { language: '${1:id}', path: './snippets/${2:id}.json.' } }],\n            properties: {\n                language: {\n                    description: ( (localize(\n                        'vscode.extension.contributes.snippets-language',\n                        'Language identifier for which this snippet is contributed to.'\n                    ))),\n                    type: 'string'\n                },\n                path: {\n                    description: ( (localize(\n                        'vscode.extension.contributes.snippets-path',\n                        'Path of the snippets file. The path is relative to the extension folder and typically starts with \\'./snippets/\\'.'\n                    ))),\n                    type: 'string'\n                }\n            }\n        }\n    };\n    snippetExt.point = ( (ExtensionsRegistry.registerExtensionPoint({\n        extensionPoint: 'snippets',\n        deps: [languagesExtPoint],\n        jsonSchema: snippetExt.snippetsContribution\n    })));\n})(snippetExt || (snippetExt = {}))));\nfunction watch(service, resource, callback) {\n    return combinedDisposable(service.watch(resource), service.onDidFilesChange(e => {\n        if (e.affects(resource)) {\n            callback();\n        }\n    }));\n}\nlet SnippetEnablement = class SnippetEnablement {\n    static { SnippetEnablement_1 = this; }\n    static { this._key = 'snippets.ignoredSnippets'; }\n    constructor(_storageService) {\n        this._storageService = _storageService;\n        const raw = _storageService.get(SnippetEnablement_1._key, 0 , '');\n        let data;\n        try {\n            data = JSON.parse(raw);\n        }\n        catch { }\n        this._ignored = isStringArray(data) ? ( (new Set(data))) : ( (new Set()));\n    }\n    isIgnored(id) {\n        return (\n             (this._ignored.has(id))\n        );\n    }\n    updateIgnored(id, value) {\n        let changed = false;\n        if (( (this._ignored.has(id))) && !value) {\n            this._ignored.delete(id);\n            changed = true;\n        }\n        else if (!( (this._ignored.has(id))) && value) {\n            this._ignored.add(id);\n            changed = true;\n        }\n        if (changed) {\n            this._storageService.store(SnippetEnablement_1._key, JSON.stringify(Array.from(this._ignored)), 0 , 0 );\n        }\n    }\n};\nSnippetEnablement = SnippetEnablement_1 = ( (__decorate([\n    ( (__param(0, IStorageService)))\n], SnippetEnablement)));\nlet SnippetUsageTimestamps = class SnippetUsageTimestamps {\n    static { SnippetUsageTimestamps_1 = this; }\n    static { this._key = 'snippets.usageTimestamps'; }\n    constructor(_storageService) {\n        this._storageService = _storageService;\n        const raw = _storageService.get(SnippetUsageTimestamps_1._key, 0 , '');\n        let data;\n        try {\n            data = JSON.parse(raw);\n        }\n        catch {\n            data = [];\n        }\n        this._usages = Array.isArray(data) ? ( (new Map(data))) : ( (new Map()));\n    }\n    getUsageTimestamp(id) {\n        return this._usages.get(id);\n    }\n    updateUsageTimestamp(id) {\n        this._usages.delete(id);\n        this._usages.set(id, Date.now());\n        const all = [...this._usages].slice(-100);\n        this._storageService.store(SnippetUsageTimestamps_1._key, JSON.stringify(all), 0 , 0 );\n    }\n};\nSnippetUsageTimestamps = SnippetUsageTimestamps_1 = ( (__decorate([\n    ( (__param(0, IStorageService)))\n], SnippetUsageTimestamps)));\nlet SnippetsService = class SnippetsService {\n    constructor(_environmentService, _userDataProfileService, _contextService, _languageService, _logService, _fileService, _textfileService, _extensionResourceLoaderService, lifecycleService, instantiationService, languageConfigurationService) {\n        this._environmentService = _environmentService;\n        this._userDataProfileService = _userDataProfileService;\n        this._contextService = _contextService;\n        this._languageService = _languageService;\n        this._logService = _logService;\n        this._fileService = _fileService;\n        this._textfileService = _textfileService;\n        this._extensionResourceLoaderService = _extensionResourceLoaderService;\n        this._disposables = ( (new DisposableStore()));\n        this._pendingWork = [];\n        this._files = ( (new ResourceMap()));\n        this._pendingWork.push(Promise.resolve(lifecycleService.when(3 ).then(() => {\n            this._initExtensionSnippets();\n            this._initUserSnippets();\n            this._initWorkspaceSnippets();\n        })));\n        setSnippetSuggestSupport(( (new SnippetCompletionProvider(this._languageService, this, languageConfigurationService))));\n        this._enablement = instantiationService.createInstance(SnippetEnablement);\n        this._usageTimestamps = instantiationService.createInstance(SnippetUsageTimestamps);\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    isEnabled(snippet) {\n        return !this._enablement.isIgnored(snippet.snippetIdentifier);\n    }\n    updateEnablement(snippet, enabled) {\n        this._enablement.updateIgnored(snippet.snippetIdentifier, !enabled);\n    }\n    updateUsageTimestamp(snippet) {\n        this._usageTimestamps.updateUsageTimestamp(snippet.snippetIdentifier);\n    }\n    _joinSnippets() {\n        const promises = this._pendingWork.slice(0);\n        this._pendingWork.length = 0;\n        return Promise.all(promises);\n    }\n    async getSnippetFiles() {\n        await this._joinSnippets();\n        return (\n             (this._files.values())\n        );\n    }\n    async getSnippets(languageId, opts) {\n        await this._joinSnippets();\n        const result = [];\n        const promises = [];\n        if (languageId) {\n            if (this._languageService.isRegisteredLanguageId(languageId)) {\n                for (const file of ( (this._files.values()))) {\n                    promises.push(file.load()\n                        .then(file => file.select(languageId, result))\n                        .catch(err => this._logService.error(err, ( (file.location.toString())))));\n                }\n            }\n        }\n        else {\n            for (const file of ( (this._files.values()))) {\n                promises.push(file.load()\n                    .then(file => insertInto(result, result.length, file.data))\n                    .catch(err => this._logService.error(err, ( (file.location.toString())))));\n            }\n        }\n        await Promise.all(promises);\n        return this._filterAndSortSnippets(result, opts);\n    }\n    getSnippetsSync(languageId, opts) {\n        const result = [];\n        if (this._languageService.isRegisteredLanguageId(languageId)) {\n            for (const file of ( (this._files.values()))) {\n                file.load().catch(_err => { });\n                file.select(languageId, result);\n            }\n        }\n        return this._filterAndSortSnippets(result, opts);\n    }\n    _filterAndSortSnippets(snippets, opts) {\n        const result = [];\n        for (const snippet of snippets) {\n            if (!snippet.prefix && !opts?.includeNoPrefixSnippets) {\n                continue;\n            }\n            if (!this.isEnabled(snippet) && !opts?.includeDisabledSnippets) {\n                continue;\n            }\n            if (typeof opts?.fileTemplateSnippets === 'boolean' && opts.fileTemplateSnippets !== snippet.isFileTemplate) {\n                continue;\n            }\n            result.push(snippet);\n        }\n        return result.sort((a, b) => {\n            let result = 0;\n            if (!opts?.noRecencySort) {\n                const val1 = this._usageTimestamps.getUsageTimestamp(a.snippetIdentifier) ?? -1;\n                const val2 = this._usageTimestamps.getUsageTimestamp(b.snippetIdentifier) ?? -1;\n                result = val2 - val1;\n            }\n            if (result === 0) {\n                result = this._compareSnippet(a, b);\n            }\n            return result;\n        });\n    }\n    _compareSnippet(a, b) {\n        if (a.snippetSource < b.snippetSource) {\n            return -1;\n        }\n        else if (a.snippetSource > b.snippetSource) {\n            return 1;\n        }\n        else if (a.source < b.source) {\n            return -1;\n        }\n        else if (a.source > b.source) {\n            return 1;\n        }\n        else if (a.name > b.name) {\n            return 1;\n        }\n        else if (a.name < b.name) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    }\n    _initExtensionSnippets() {\n        snippetExt.point.setHandler(extensions => {\n            for (const [key, value] of this._files) {\n                if (value.source === 3 ) {\n                    this._files.delete(key);\n                }\n            }\n            for (const extension of extensions) {\n                for (const contribution of extension.value) {\n                    const validContribution = snippetExt.toValidSnippet(extension, contribution, this._languageService);\n                    if (!validContribution) {\n                        continue;\n                    }\n                    const file = this._files.get(validContribution.location);\n                    if (file) {\n                        if (file.defaultScopes) {\n                            file.defaultScopes.push(validContribution.language);\n                        }\n                        else {\n                            file.defaultScopes = [];\n                        }\n                    }\n                    else {\n                        const file = ( (new SnippetFile(\n                            3 ,\n                            validContribution.location,\n                            validContribution.language ? [validContribution.language] : undefined,\n                            extension.description,\n                            this._fileService,\n                            this._extensionResourceLoaderService\n                        )));\n                        this._files.set(file.location, file);\n                        if (this._environmentService.isExtensionDevelopment) {\n                            file.load().then(file => {\n                                if (( (file.data.some(snippet => snippet.isBogous)))) {\n                                    extension.collector.warn(( (localize(\n                                        'badVariableUse',\n                                        \"One or more snippets from the extension '{0}' very likely confuse snippet-variables and snippet-placeholders (see https://code.visualstudio.com/docs/editor/userdefinedsnippets#_snippet-syntax for more details)\",\n                                        extension.description.name\n                                    ))));\n                                }\n                            }, err => {\n                                extension.collector.warn(( (localize(\n                                    'badFile',\n                                    \"The snippet file \\\"{0}\\\" could not be read.\",\n                                     (file.location.toString())\n                                ))));\n                            });\n                        }\n                    }\n                }\n            }\n        });\n    }\n    _initWorkspaceSnippets() {\n        const disposables = ( (new DisposableStore()));\n        const updateWorkspaceSnippets = () => {\n            disposables.clear();\n            this._pendingWork.push(this._initWorkspaceFolderSnippets(this._contextService.getWorkspace(), disposables));\n        };\n        this._disposables.add(disposables);\n        this._disposables.add(this._contextService.onDidChangeWorkspaceFolders(updateWorkspaceSnippets));\n        this._disposables.add(this._contextService.onDidChangeWorkbenchState(updateWorkspaceSnippets));\n        updateWorkspaceSnippets();\n    }\n    async _initWorkspaceFolderSnippets(workspace, bucket) {\n        const promises = ( (workspace.folders.map(async (folder) => {\n            const snippetFolder = folder.toResource('.vscode');\n            const value = await this._fileService.exists(snippetFolder);\n            if (value) {\n                this._initFolderSnippets(2 , snippetFolder, bucket);\n            }\n            else {\n                bucket.add(this._fileService.onDidFilesChange(e => {\n                    if (e.contains(snippetFolder, 1 )) {\n                        this._initFolderSnippets(2 , snippetFolder, bucket);\n                    }\n                }));\n            }\n        })));\n        await Promise.all(promises);\n    }\n    async _initUserSnippets() {\n        const disposables = ( (new DisposableStore()));\n        const updateUserSnippets = async () => {\n            disposables.clear();\n            const userSnippetsFolder = this._userDataProfileService.currentProfile.snippetsHome;\n            await this._fileService.createFolder(userSnippetsFolder);\n            await this._initFolderSnippets(1 , userSnippetsFolder, disposables);\n        };\n        this._disposables.add(disposables);\n        this._disposables.add(this._userDataProfileService.onDidChangeCurrentProfile(e => e.join((async () => {\n            this._pendingWork.push(updateUserSnippets());\n        })())));\n        await updateUserSnippets();\n    }\n    _initFolderSnippets(source, folder, bucket) {\n        const disposables = ( (new DisposableStore()));\n        const addFolderSnippets = async () => {\n            disposables.clear();\n            if (!(await this._fileService.exists(folder))) {\n                return;\n            }\n            try {\n                const stat = await this._fileService.resolve(folder);\n                for (const entry of stat.children || []) {\n                    disposables.add(this._addSnippetFile(entry.resource, source));\n                }\n            }\n            catch (err) {\n                this._logService.error(`Failed snippets from folder '${( ( folder.toString()))}'`, err);\n            }\n        };\n        bucket.add(this._textfileService.files.onDidSave(e => {\n            if (resources.isEqualOrParent(e.model.resource, folder)) {\n                addFolderSnippets();\n            }\n        }));\n        bucket.add(watch(this._fileService, folder, addFolderSnippets));\n        bucket.add(disposables);\n        return addFolderSnippets();\n    }\n    _addSnippetFile(uri, source) {\n        const ext = resources.extname(uri);\n        if (source === 1  && ext === '.json') {\n            const langName = resources.basename(uri).replace(/\\.json/, '');\n            this._files.set(uri, ( (new SnippetFile(\n                source,\n                uri,\n                [langName],\n                undefined,\n                this._fileService,\n                this._extensionResourceLoaderService\n            ))));\n        }\n        else if (ext === '.code-snippets') {\n            this._files.set(uri, ( (new SnippetFile(\n                source,\n                uri,\n                undefined,\n                undefined,\n                this._fileService,\n                this._extensionResourceLoaderService\n            ))));\n        }\n        return {\n            dispose: () => this._files.delete(uri)\n        };\n    }\n};\nSnippetsService = ( (__decorate([\n    ( (__param(0, IEnvironmentService))),\n    ( (__param(1, IUserDataProfileService))),\n    ( (__param(2, IWorkspaceContextService))),\n    ( (__param(3, ILanguageService))),\n    ( (__param(4, ILogService))),\n    ( (__param(5, IFileService))),\n    ( (__param(6, ITextFileService))),\n    ( (__param(7, IExtensionResourceLoaderService))),\n    ( (__param(8, ILifecycleService))),\n    ( (__param(9, IInstantiationService))),\n    ( (__param(10, ILanguageConfigurationService)))\n], SnippetsService)));\nfunction getNonWhitespacePrefix(model, position) {\n    const MAX_PREFIX_LENGTH = 100;\n    const line = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\n    const minChIndex = Math.max(0, line.length - MAX_PREFIX_LENGTH);\n    for (let chIndex = line.length - 1; chIndex >= minChIndex; chIndex--) {\n        const ch = line.charAt(chIndex);\n        if (/\\s/.test(ch)) {\n            return line.substr(chIndex + 1);\n        }\n    }\n    if (minChIndex === 0) {\n        return line;\n    }\n    return '';\n}\nexport { SnippetsService, getNonWhitespacePrefix };\n", "import { parse, getNodeType } from 'monaco-editor/esm/vs/base/common/json.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { extname, basename } from 'monaco-editor/esm/vs/base/common/path.js';\nimport { SnippetParser, Placeholder, Variable, Text } from 'monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetParser.js';\nimport { KnownSnippetVariableNames } from 'monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetVariables.js';\nimport { IdleValue } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { relativePath } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { isObject } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { tail } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { Iterable } from 'monaco-editor/esm/vs/base/common/iterator.js';\nclass SnippetBodyInsights {\n    constructor(body) {\n        this.isBogous = false;\n        this.isTrivial = false;\n        this.usesClipboardVariable = false;\n        this.usesSelectionVariable = false;\n        this.codeSnippet = body;\n        const textmateSnippet = ( new SnippetParser()).parse(body, false);\n        const placeholders = ( new Map());\n        let placeholderMax = 0;\n        for (const placeholder of textmateSnippet.placeholders) {\n            placeholderMax = Math.max(placeholderMax, placeholder.index);\n        }\n        if (textmateSnippet.placeholders.length === 0) {\n            this.isTrivial = true;\n        }\n        else if (placeholderMax === 0) {\n            const last = tail(textmateSnippet.children);\n            this.isTrivial = last instanceof Placeholder && last.isFinalTabstop;\n        }\n        const stack = [...textmateSnippet.children];\n        while (stack.length > 0) {\n            const marker = stack.shift();\n            if (marker instanceof Variable) {\n                if (marker.children.length === 0 && !KnownSnippetVariableNames[marker.name]) {\n                    const index = ( placeholders.has(marker.name)) ? placeholders.get(marker.name) : ++placeholderMax;\n                    placeholders.set(marker.name, index);\n                    const synthetic = ( new Placeholder(index)).appendChild(( new Text(marker.name)));\n                    textmateSnippet.replace(marker, [synthetic]);\n                    this.isBogous = true;\n                }\n                switch (marker.name) {\n                    case 'CLIPBOARD':\n                        this.usesClipboardVariable = true;\n                        break;\n                    case 'SELECTION':\n                    case 'TM_SELECTED_TEXT':\n                        this.usesSelectionVariable = true;\n                        break;\n                }\n            }\n            else {\n                stack.push(...marker.children);\n            }\n        }\n        if (this.isBogous) {\n            this.codeSnippet = textmateSnippet.toTextmateString();\n        }\n    }\n}\nclass Snippet {\n    constructor(isFileTemplate, scopes, name, prefix, description, body, source, snippetSource, snippetIdentifier, extensionId) {\n        this.isFileTemplate = isFileTemplate;\n        this.scopes = scopes;\n        this.name = name;\n        this.prefix = prefix;\n        this.description = description;\n        this.body = body;\n        this.source = source;\n        this.snippetSource = snippetSource;\n        this.snippetIdentifier = snippetIdentifier;\n        this.extensionId = extensionId;\n        this.prefixLow = prefix.toLowerCase();\n        this._bodyInsights = ( new IdleValue(() => ( new SnippetBodyInsights(this.body))));\n    }\n    get codeSnippet() {\n        return this._bodyInsights.value.codeSnippet;\n    }\n    get isBogous() {\n        return this._bodyInsights.value.isBogous;\n    }\n    get isTrivial() {\n        return this._bodyInsights.value.isTrivial;\n    }\n    get needsClipboard() {\n        return this._bodyInsights.value.usesClipboardVariable;\n    }\n    get usesSelection() {\n        return this._bodyInsights.value.usesSelectionVariable;\n    }\n}\nfunction isJsonSerializedSnippet(thing) {\n    return isObject(thing) && Boolean(thing.body);\n}\nclass SnippetFile {\n    constructor(source, location, defaultScopes, _extension, _fileService, _extensionResourceLoaderService) {\n        this.source = source;\n        this.location = location;\n        this.defaultScopes = defaultScopes;\n        this._extension = _extension;\n        this._fileService = _fileService;\n        this._extensionResourceLoaderService = _extensionResourceLoaderService;\n        this.data = [];\n        this.isGlobalSnippets = extname(location.path) === '.code-snippets';\n        this.isUserSnippets = !this._extension;\n    }\n    select(selector, bucket) {\n        if (this.isGlobalSnippets || !this.isUserSnippets) {\n            this._scopeSelect(selector, bucket);\n        }\n        else {\n            this._filepathSelect(selector, bucket);\n        }\n    }\n    _filepathSelect(selector, bucket) {\n        if (selector + '.json' === basename(this.location.path)) {\n            bucket.push(...this.data);\n        }\n    }\n    _scopeSelect(selector, bucket) {\n        for (const snippet of this.data) {\n            const len = snippet.scopes.length;\n            if (len === 0) {\n                bucket.push(snippet);\n            }\n            else {\n                for (let i = 0; i < len; i++) {\n                    if (snippet.scopes[i] === selector) {\n                        bucket.push(snippet);\n                        break;\n                    }\n                }\n            }\n        }\n        const idx = selector.lastIndexOf('.');\n        if (idx >= 0) {\n            this._scopeSelect(selector.substring(0, idx), bucket);\n        }\n    }\n    async _load() {\n        if (this._extension) {\n            return this._extensionResourceLoaderService.readExtensionResource(this.location);\n        }\n        else {\n            const content = await this._fileService.readFile(this.location);\n            return ( content.value.toString());\n        }\n    }\n    load() {\n        if (!this._loadPromise) {\n            this._loadPromise = Promise.resolve(this._load()).then(content => {\n                const data = parse(content);\n                if (getNodeType(data) === 'object') {\n                    for (const [name, scopeOrTemplate] of Object.entries(data)) {\n                        if (isJsonSerializedSnippet(scopeOrTemplate)) {\n                            this._parseSnippet(name, scopeOrTemplate, this.data);\n                        }\n                        else {\n                            for (const [name, template] of Object.entries(scopeOrTemplate)) {\n                                this._parseSnippet(name, template, this.data);\n                            }\n                        }\n                    }\n                }\n                return this;\n            });\n        }\n        return this._loadPromise;\n    }\n    reset() {\n        this._loadPromise = undefined;\n        this.data.length = 0;\n    }\n    _parseSnippet(name, snippet, bucket) {\n        let { isFileTemplate, prefix, body, description } = snippet;\n        if (!prefix) {\n            prefix = '';\n        }\n        if (Array.isArray(body)) {\n            body = body.join('\\n');\n        }\n        if (typeof body !== 'string') {\n            return;\n        }\n        if (Array.isArray(description)) {\n            description = description.join('\\n');\n        }\n        let scopes;\n        if (this.defaultScopes) {\n            scopes = this.defaultScopes;\n        }\n        else if (typeof snippet.scope === 'string') {\n            scopes = ( snippet.scope.split(',').map(s => s.trim())).filter(Boolean);\n        }\n        else {\n            scopes = [];\n        }\n        let source;\n        if (this._extension) {\n            source = this._extension.displayName || this._extension.name;\n        }\n        else if (this.source === 2 ) {\n            source = ( localize('source.workspaceSnippetGlobal', \"Workspace Snippet\"));\n        }\n        else {\n            if (this.isGlobalSnippets) {\n                source = ( localize('source.userSnippetGlobal', \"Global User Snippet\"));\n            }\n            else {\n                source = ( localize('source.userSnippet', \"User Snippet\"));\n            }\n        }\n        for (const _prefix of Iterable.wrap(prefix)) {\n            bucket.push(( new Snippet(\n                Boolean(isFileTemplate),\n                scopes,\n                name,\n                _prefix,\n                description,\n                body,\n                source,\n                this.source,\n                this._extension ? `${relativePath(this._extension.extensionLocation, this.location)}/${name}` : `${basename(this.location.path)}/${name}`,\n                this._extension?.identifier\n            )));\n        }\n    }\n}\nexport { Snippet, SnippetFile };\n", "import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';\nimport { MarkdownString } from 'monaco-editor/esm/vs/base/common/htmlContent.js';\nimport { compare, firstNonWhitespaceIndex, compareSubstring } from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { SnippetParser } from 'monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetParser.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { ISnippetsService } from './snippets.js';\nimport { Snippet } from './snippetsFile.js';\nimport { isPatternInWord } from 'monaco-editor/esm/vs/base/common/filters.js';\nimport { StopWatch } from 'monaco-editor/esm/vs/base/common/stopwatch.js';\nimport { ILanguageConfigurationService } from 'monaco-editor/esm/vs/editor/common/languages/languageConfigurationRegistry.js';\nimport { getWordAtText } from 'monaco-editor/esm/vs/editor/common/core/wordHelper.js';\nimport { CommandsRegistry } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nconst markSnippetAsUsed = '_snippet.markAsUsed';\nCommandsRegistry.registerCommand(markSnippetAsUsed, (accessor, ...args) => {\n    const snippetsService = accessor.get(ISnippetsService);\n    const [first] = args;\n    if (first instanceof Snippet) {\n        snippetsService.updateUsageTimestamp(first);\n    }\n});\nclass SnippetCompletion {\n    constructor(snippet, range) {\n        this.snippet = snippet;\n        this.label = { label: snippet.prefix, description: snippet.name };\n        this.detail = ( localize(\n            'detail.snippet',\n            \"{0} ({1})\",\n            snippet.description || snippet.name,\n            snippet.source\n        ));\n        this.insertText = snippet.codeSnippet;\n        this.extensionId = snippet.extensionId;\n        this.range = range;\n        this.sortText = `${snippet.snippetSource === 3  ? 'z' : 'a'}-${snippet.prefix}`;\n        this.kind = 27 ;\n        this.insertTextRules = 4 ;\n        this.command = { id: markSnippetAsUsed, title: '', arguments: [snippet] };\n    }\n    resolve() {\n        this.documentation = ( new MarkdownString()).appendCodeblock('', SnippetParser.asInsertText(this.snippet.codeSnippet));\n        return this;\n    }\n    static compareByLabel(a, b) {\n        return compare(a.label.label, b.label.label);\n    }\n}\nlet SnippetCompletionProvider = class SnippetCompletionProvider {\n    constructor(_languageService, _snippets, _languageConfigurationService) {\n        this._languageService = _languageService;\n        this._snippets = _snippets;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._debugDisplayName = 'snippetCompletions';\n    }\n    async provideCompletionItems(model, position, context) {\n        const sw = ( new StopWatch());\n        const languageId = this._getLanguageIdAtPosition(model, position);\n        const languageConfig = this._languageConfigurationService.getLanguageConfiguration(languageId);\n        const snippets = ( new Set(await this._snippets.getSnippets(languageId)));\n        const lineContentLow = model.getLineContent(position.lineNumber).toLowerCase();\n        const wordUntil = model.getWordUntilPosition(position).word.toLowerCase();\n        const suggestions = [];\n        const columnOffset = position.column - 1;\n        const triggerCharacterLow = context.triggerCharacter?.toLowerCase() ?? '';\n        snippet: for (const snippet of snippets) {\n            if (context.triggerKind === 1  && !snippet.prefixLow.startsWith(triggerCharacterLow)) {\n                continue snippet;\n            }\n            const word = getWordAtText(1, languageConfig.getWordDefinition(), snippet.prefixLow, 0);\n            if (wordUntil && word && !isPatternInWord(wordUntil, 0, wordUntil.length, snippet.prefixLow, 0, snippet.prefixLow.length)) {\n                continue snippet;\n            }\n            const minPos = firstNonWhitespaceIndex(snippet.prefixLow) === 0\n                ? Math.max(0, model.getLineFirstNonWhitespaceColumn(position.lineNumber) - 1)\n                : 0;\n            column: for (let pos = Math.max(minPos, columnOffset - snippet.prefixLow.length); pos < lineContentLow.length; pos++) {\n                if (!isPatternInWord(lineContentLow, pos, columnOffset, snippet.prefixLow, 0, snippet.prefixLow.length)) {\n                    continue column;\n                }\n                const prefixRestLen = snippet.prefixLow.length - (columnOffset - pos);\n                const endsWithPrefixRest = compareSubstring(lineContentLow, snippet.prefixLow, columnOffset, columnOffset + prefixRestLen, columnOffset - pos);\n                const startPosition = position.with(undefined, pos + 1);\n                if (wordUntil && position.equals(startPosition)) {\n                    continue snippet;\n                }\n                let endColumn = endsWithPrefixRest === 0 ? position.column + prefixRestLen : position.column;\n                if (columnOffset < lineContentLow.length) {\n                    const autoClosingPairs = languageConfig.getAutoClosingPairs();\n                    const standardAutoClosingPairConditionals = autoClosingPairs.autoClosingPairsCloseSingleChar.get(lineContentLow[columnOffset]);\n                    if (standardAutoClosingPairConditionals?.some(p =>\n                    p.open === lineContentLow[startPosition.column - 1] &&\n                        snippet.prefix.startsWith(p.open) &&\n                        snippet.prefix[snippet.prefix.length - 1] === p.close)) {\n                        endColumn++;\n                    }\n                }\n                const replace = Range.fromPositions(startPosition, { lineNumber: position.lineNumber, column: endColumn });\n                const insert = replace.setEndPosition(position.lineNumber, position.column);\n                suggestions.push(( new SnippetCompletion(snippet, { replace, insert })));\n                snippets.delete(snippet);\n                break;\n            }\n        }\n        if (!triggerCharacterLow) {\n            const endsInWhitespace = /\\s/.test(lineContentLow[position.column - 2]);\n            if (endsInWhitespace || !lineContentLow ) {\n                for (const snippet of snippets) {\n                    const insert = Range.fromPositions(position);\n                    const replace = lineContentLow.indexOf(snippet.prefixLow, columnOffset) === columnOffset ? insert.setEndPosition(position.lineNumber, position.column + snippet.prefixLow.length) : insert;\n                    suggestions.push(( new SnippetCompletion(snippet, { replace, insert })));\n                }\n            }\n        }\n        suggestions.sort(SnippetCompletion.compareByLabel);\n        for (let i = 0; i < suggestions.length; i++) {\n            const item = suggestions[i];\n            let to = i + 1;\n            for (; to < suggestions.length && item.label === suggestions[to].label; to++) {\n                suggestions[to].label.label = ( localize(\n                    'snippetSuggest.longLabel',\n                    \"{0}, {1}\",\n                    suggestions[to].label.label,\n                    suggestions[to].snippet.name\n                ));\n            }\n            if (to > i + 1) {\n                suggestions[i].label.label = ( localize(\n                    'snippetSuggest.longLabel',\n                    \"{0}, {1}\",\n                    suggestions[i].label.label,\n                    suggestions[i].snippet.name\n                ));\n                i = to;\n            }\n        }\n        return {\n            suggestions,\n            duration: sw.elapsed()\n        };\n    }\n    resolveCompletionItem(item) {\n        return (item instanceof SnippetCompletion) ? item.resolve() : item;\n    }\n    _getLanguageIdAtPosition(model, position) {\n        model.tokenization.tokenizeIfCheap(position.lineNumber);\n        let languageId = model.getLanguageIdAtPosition(position.lineNumber, position.column);\n        if (!this._languageService.getLanguageName(languageId)) {\n            languageId = model.getLanguageId();\n        }\n        return languageId;\n    }\n};\nSnippetCompletionProvider = ( __decorate([\n    ( __param(0, ILanguageService)),\n    ( __param(1, ISnippetsService)),\n    ( __param(2, ILanguageConfigurationService))\n], SnippetCompletionProvider));\nexport { SnippetCompletion, SnippetCompletionProvider };\n", "import { ContextMenuController } from 'monaco-editor/esm/vs/editor/contrib/contextmenu/browser/contextmenu.js';\nimport { SnippetController2 } from 'monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetController2.js';\nimport { SuggestController } from 'monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestController.js';\nimport { MenuPreventer } from './menuPreventer.js';\nimport { SelectionClipboardContributionID } from './selectionClipboard.js';\nimport { TabCompletionController } from '../../snippets/browser/tabCompletion.js';\nimport { EditorExtensionsRegistry } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nfunction getSimpleEditorOptions(configurationService) {\n    return {\n        wordWrap: 'on',\n        overviewRulerLanes: 0,\n        glyphMargin: false,\n        lineNumbers: 'off',\n        folding: false,\n        selectOnLineNumbers: false,\n        hideCursorInOverviewRuler: true,\n        selectionHighlight: false,\n        scrollbar: {\n            horizontal: 'hidden'\n        },\n        lineDecorationsWidth: 0,\n        overviewRulerBorder: false,\n        scrollBeyondLastLine: false,\n        renderLineHighlight: 'none',\n        fixedOverflowWidgets: true,\n        acceptSuggestionOnEnter: 'smart',\n        dragAndDrop: false,\n        revealHorizontalRightPadding: 5,\n        minimap: {\n            enabled: false\n        },\n        guides: {\n            indentation: false\n        },\n        accessibilitySupport: configurationService.getValue('editor.accessibilitySupport'),\n        cursorBlinking: configurationService.getValue('editor.cursorBlinking')\n    };\n}\nfunction getSimpleCodeEditorWidgetOptions() {\n    return {\n        isSimpleWidget: true,\n        contributions: EditorExtensionsRegistry.getSomeEditorContributions([\n            MenuPreventer.ID,\n            SelectionClipboardContributionID,\n            ContextMenuController.ID,\n            SuggestController.ID,\n            SnippetController2.ID,\n            TabCompletionController.ID,\n        ])\n    };\n}\nexport { getSimpleCodeEditorWidgetOptions, getSimpleEditorOptions };\n", "import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst IQuickDiffService = ( createDecorator('quickDiff'));\nexport { IQuickDiffService };\n", "var e=[],t=[];function n(n,r){if(n&&\"undefined\"!=typeof document){var a,s=!0===r.prepend?\"prepend\":\"append\",d=!0===r.singleTag,i=\"string\"==typeof r.container?document.querySelector(r.container):document.getElementsByTagName(\"head\")[0];if(d){var u=e.indexOf(i);-1===u&&(u=e.push(i)-1,t[u]={}),a=t[u]&&t[u][s]?t[u][s]:t[u][s]=c();}else a=c();65279===n.charCodeAt(0)&&(n=n.substring(1)),a.styleSheet?a.styleSheet.cssText+=n:a.appendChild(document.createTextNode(n));}function c(){var e=document.createElement(\"style\");if(e.setAttribute(\"type\",\"text/css\"),r.attributes)for(var t=( Object.keys(r.attributes)),n=0;n<t.length;n++)e.setAttribute(t[n],r.attributes[t[n]]);var a=\"prepend\"===s?\"afterbegin\":\"beforeend\";return i.insertAdjacentElement(a,e),e}}\nexport { n as default };\n", "import { __decorate, __param } from '../../../../../external/tslib/tslib.es6.js';\nimport { DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { RawContextKey, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { isEqual, basename, dirname, extname } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { DEFAULT_EDITOR_ASSOCIATION } from './editor.js';\nvar ResourceContextKey_1;\nconst WorkbenchStateContext = ( new RawContextKey('workbenchState', undefined, { type: 'string', description: ( localize(\n    'workbenchState',\n    \"The kind of workspace opened in the window, either 'empty' (no workspace), 'folder' (single folder) or 'workspace' (multi-root workspace)\"\n)) }));\nconst WorkspaceFolderCountContext = ( new RawContextKey('workspaceFolderCount', 0, ( localize('workspaceFolderCount', \"The number of root folders in the workspace\"))));\nconst OpenFolderWorkspaceSupportContext = ( new RawContextKey('openFolderWorkspaceSupport', true, true));\nconst EnterMultiRootWorkspaceSupportContext = ( new RawContextKey('enterMultiRootWorkspaceSupport', true, true));\nconst EmptyWorkspaceSupportContext = ( new RawContextKey('emptyWorkspaceSupport', true, true));\nconst DirtyWorkingCopiesContext = ( new RawContextKey('dirtyWorkingCopies', false, ( localize(\n    'dirtyWorkingCopies',\n    \"Whether there are any working copies with unsaved changes\"\n))));\nconst RemoteNameContext = ( new RawContextKey('remoteName', '', ( localize(\n    'remoteName',\n    \"The name of the remote the window is connected to or an empty string if not connected to any remote\"\n))));\nconst VirtualWorkspaceContext = ( new RawContextKey('virtualWorkspace', '', ( localize(\n    'virtualWorkspace',\n    \"The scheme of the current workspace is from a virtual file system or an empty string.\"\n))));\nconst TemporaryWorkspaceContext = ( new RawContextKey('temporaryWorkspace', false, ( localize(\n    'temporaryWorkspace',\n    \"The scheme of the current workspace is from a temporary file system.\"\n))));\nconst IsFullscreenContext = ( new RawContextKey('isFullscreen', false, ( localize('isFullscreen', \"Whether the window is in fullscreen mode\"))));\nconst HasWebFileSystemAccess = ( new RawContextKey('hasWebFileSystemAccess', false, true));\nconst EmbedderIdentifierContext = ( new RawContextKey('embedderIdentifier', undefined, ( localize(\n    'embedderIdentifier',\n    'The identifier of the embedder according to the product service, if one is defined'\n))));\nconst ActiveEditorDirtyContext = ( new RawContextKey('activeEditorIsDirty', false, ( localize('activeEditorIsDirty', \"Whether the active editor has unsaved changes\"))));\nconst ActiveEditorPinnedContext = ( new RawContextKey('activeEditorIsNotPreview', false, ( localize(\n    'activeEditorIsNotPreview',\n    \"Whether the active editor is not in preview mode\"\n))));\nconst ActiveEditorFirstInGroupContext = ( new RawContextKey('activeEditorIsFirstInGroup', false, ( localize(\n    'activeEditorIsFirstInGroup',\n    \"Whether the active editor is the first one in its group\"\n))));\nconst ActiveEditorLastInGroupContext = ( new RawContextKey('activeEditorIsLastInGroup', false, ( localize(\n    'activeEditorIsLastInGroup',\n    \"Whether the active editor is the last one in its group\"\n))));\nconst ActiveEditorStickyContext = ( new RawContextKey('activeEditorIsPinned', false, ( localize('activeEditorIsPinned', \"Whether the active editor is pinned\"))));\nconst ActiveEditorReadonlyContext = ( new RawContextKey('activeEditorIsReadonly', false, ( localize('activeEditorIsReadonly', \"Whether the active editor is read-only\"))));\nconst ActiveEditorCanToggleReadonlyContext = ( new RawContextKey('activeEditorCanToggleReadonly', true, ( localize(\n    'activeEditorCanToggleReadonly',\n    \"Whether the active editor can toggle between being read-only or writeable\"\n))));\nconst ActiveEditorCanRevertContext = ( new RawContextKey('activeEditorCanRevert', false, ( localize('activeEditorCanRevert', \"Whether the active editor can revert\"))));\nconst ActiveEditorCanSplitInGroupContext = ( new RawContextKey('activeEditorCanSplitInGroup', true));\nconst ActiveEditorContext = ( new RawContextKey('activeEditor', null, { type: 'string', description: ( localize('activeEditor', \"The identifier of the active editor\")) }));\nconst ActiveEditorAvailableEditorIdsContext = ( new RawContextKey('activeEditorAvailableEditorIds', '', ( localize(\n    'activeEditorAvailableEditorIds',\n    \"The available editor identifiers that are usable for the active editor\"\n))));\nconst TextCompareEditorVisibleContext = ( new RawContextKey('textCompareEditorVisible', false, ( localize('textCompareEditorVisible', \"Whether a text compare editor is visible\"))));\nconst TextCompareEditorActiveContext = ( new RawContextKey('textCompareEditorActive', false, ( localize('textCompareEditorActive', \"Whether a text compare editor is active\"))));\nconst SideBySideEditorActiveContext = ( new RawContextKey('sideBySideEditorActive', false, ( localize('sideBySideEditorActive', \"Whether a side by side editor is active\"))));\nconst EditorGroupEditorsCountContext = ( new RawContextKey('groupEditorsCount', 0, ( localize('groupEditorsCount', \"The number of opened editor groups\"))));\nconst ActiveEditorGroupEmptyContext = ( new RawContextKey('activeEditorGroupEmpty', false, ( localize('activeEditorGroupEmpty', \"Whether the active editor group is empty\"))));\nconst ActiveEditorGroupIndexContext = ( new RawContextKey('activeEditorGroupIndex', 0, ( localize('activeEditorGroupIndex', \"The index of the active editor group\"))));\nconst ActiveEditorGroupLastContext = ( new RawContextKey('activeEditorGroupLast', false, ( localize(\n    'activeEditorGroupLast',\n    \"Whether the active editor group is the last group\"\n))));\nconst ActiveEditorGroupLockedContext = ( new RawContextKey('activeEditorGroupLocked', false, ( localize('activeEditorGroupLocked', \"Whether the active editor group is locked\"))));\nconst MultipleEditorGroupsContext = ( new RawContextKey('multipleEditorGroups', false, ( localize('multipleEditorGroups', \"Whether there are multiple editor groups opened\"))));\nconst EditorsVisibleContext = ( new RawContextKey('editorIsOpen', false, ( localize('editorIsOpen', \"Whether an editor is open\"))));\nconst InEditorZenModeContext = ( new RawContextKey('inZenMode', false, ( localize('inZenMode', \"Whether Zen mode is enabled\"))));\nconst IsCenteredLayoutContext = ( new RawContextKey('isCenteredLayout', false, ( localize('isCenteredLayout', \"Whether centered layout is enabled\"))));\nconst SplitEditorsVertically = ( new RawContextKey('splitEditorsVertically', false, ( localize('splitEditorsVertically', \"Whether editors split vertically\"))));\nconst EditorAreaVisibleContext = ( new RawContextKey('editorAreaVisible', true, ( localize('editorAreaVisible', \"Whether the editor area is visible\"))));\nconst EditorTabsVisibleContext = ( new RawContextKey('editorTabsVisible', true, ( localize('editorTabsVisible', \"Whether editor tabs are visible\"))));\nconst SideBarVisibleContext = ( new RawContextKey('sideBarVisible', false, ( localize('sideBarVisible', \"Whether the sidebar is visible\"))));\nconst SidebarFocusContext = ( new RawContextKey('sideBarFocus', false, ( localize('sideBarFocus', \"Whether the sidebar has keyboard focus\"))));\nconst ActiveViewletContext = ( new RawContextKey('activeViewlet', '', ( localize('activeViewlet', \"The identifier of the active viewlet\"))));\nconst StatusBarFocused = ( new RawContextKey('statusBarFocused', false, ( localize('statusBarFocused', \"Whether the status bar has keyboard focus\"))));\nconst BannerFocused = ( new RawContextKey('bannerFocused', false, ( localize('bannerFocused', \"Whether the banner has keyboard focus\"))));\nconst NotificationFocusedContext = ( new RawContextKey('notificationFocus', true, ( localize('notificationFocus', \"Whether a notification has keyboard focus\"))));\nconst NotificationsCenterVisibleContext = ( new RawContextKey('notificationCenterVisible', false, ( localize('notificationCenterVisible', \"Whether the notifications center is visible\"))));\nconst NotificationsToastsVisibleContext = ( new RawContextKey('notificationToastsVisible', false, ( localize('notificationToastsVisible', \"Whether a notification toast is visible\"))));\nconst ActiveAuxiliaryContext = ( new RawContextKey('activeAuxiliary', '', ( localize('activeAuxiliary', \"The identifier of the active auxiliary panel\"))));\nconst AuxiliaryBarFocusContext = ( new RawContextKey('auxiliaryBarFocus', false, ( localize('auxiliaryBarFocus', \"Whether the auxiliary bar has keyboard focus\"))));\nconst AuxiliaryBarVisibleContext = ( new RawContextKey('auxiliaryBarVisible', false, ( localize('auxiliaryBarVisible', \"Whether the auxiliary bar is visible\"))));\nconst ActivePanelContext = ( new RawContextKey('activePanel', '', ( localize('activePanel', \"The identifier of the active panel\"))));\nconst PanelFocusContext = ( new RawContextKey('panelFocus', false, ( localize('panelFocus', \"Whether the panel has keyboard focus\"))));\nconst PanelPositionContext = ( new RawContextKey('panelPosition', 'bottom', ( localize('panelPosition', \"The position of the panel, always 'bottom'\"))));\nconst PanelAlignmentContext = ( new RawContextKey('panelAlignment', 'center', ( localize(\n    'panelAlignment',\n    \"The alignment of the panel, either 'center', 'left', 'right' or 'justify'\"\n))));\nconst PanelVisibleContext = ( new RawContextKey('panelVisible', false, ( localize('panelVisible', \"Whether the panel is visible\"))));\nconst PanelMaximizedContext = ( new RawContextKey('panelMaximized', false, ( localize('panelMaximized', \"Whether the panel is maximized\"))));\nconst FocusedViewContext = ( new RawContextKey('focusedView', '', ( localize('focusedView', \"The identifier of the view that has keyboard focus\"))));\nfunction getVisbileViewContextKey(viewId) { return `view.${viewId}.visible`; }\nfunction getEnabledViewContainerContextKey(viewContainerId) { return `viewContainer.${viewContainerId}.enabled`; }\nlet ResourceContextKey = class ResourceContextKey {\n    static { ResourceContextKey_1 = this; }\n    static { this.Scheme = ( new RawContextKey('resourceScheme', undefined, { type: 'string', description: ( localize('resourceScheme', \"The scheme of the resource\")) })); }\n    static { this.Filename = ( new RawContextKey(\n        'resourceFilename',\n        undefined,\n        { type: 'string', description: ( localize('resourceFilename', \"The file name of the resource\")) }\n    )); }\n    static { this.Dirname = ( new RawContextKey(\n        'resourceDirname',\n        undefined,\n        { type: 'string', description: ( localize('resourceDirname', \"The folder name the resource is contained in\")) }\n    )); }\n    static { this.Path = ( new RawContextKey('resourcePath', undefined, { type: 'string', description: ( localize('resourcePath', \"The full path of the resource\")) })); }\n    static { this.LangId = ( new RawContextKey('resourceLangId', undefined, { type: 'string', description: ( localize('resourceLangId', \"The language identifier of the resource\")) })); }\n    static { this.Resource = ( new RawContextKey('resource', undefined, { type: 'URI', description: ( localize('resource', \"The full value of the resource including scheme and path\")) })); }\n    static { this.Extension = ( new RawContextKey(\n        'resourceExtname',\n        undefined,\n        { type: 'string', description: ( localize('resourceExtname', \"The extension name of the resource\")) }\n    )); }\n    static { this.HasResource = ( new RawContextKey('resourceSet', undefined, { type: 'boolean', description: ( localize('resourceSet', \"Whether a resource is present or not\")) })); }\n    static { this.IsFileSystemResource = ( new RawContextKey(\n        'isFileSystemResource',\n        undefined,\n        { type: 'boolean', description: ( localize(\n            'isFileSystemResource',\n            \"Whether the resource is backed by a file system provider\"\n        )) }\n    )); }\n    constructor(_contextKeyService, _fileService, _languageService, _modelService) {\n        this._contextKeyService = _contextKeyService;\n        this._fileService = _fileService;\n        this._languageService = _languageService;\n        this._modelService = _modelService;\n        this._disposables = ( new DisposableStore());\n        this._schemeKey = ResourceContextKey_1.Scheme.bindTo(this._contextKeyService);\n        this._filenameKey = ResourceContextKey_1.Filename.bindTo(this._contextKeyService);\n        this._dirnameKey = ResourceContextKey_1.Dirname.bindTo(this._contextKeyService);\n        this._pathKey = ResourceContextKey_1.Path.bindTo(this._contextKeyService);\n        this._langIdKey = ResourceContextKey_1.LangId.bindTo(this._contextKeyService);\n        this._resourceKey = ResourceContextKey_1.Resource.bindTo(this._contextKeyService);\n        this._extensionKey = ResourceContextKey_1.Extension.bindTo(this._contextKeyService);\n        this._hasResource = ResourceContextKey_1.HasResource.bindTo(this._contextKeyService);\n        this._isFileSystemResource = ResourceContextKey_1.IsFileSystemResource.bindTo(this._contextKeyService);\n        this._disposables.add(_fileService.onDidChangeFileSystemProviderRegistrations(() => {\n            const resource = this.get();\n            this._isFileSystemResource.set(Boolean(resource && _fileService.hasProvider(resource)));\n        }));\n        this._disposables.add(_modelService.onModelAdded(model => {\n            if (isEqual(model.uri, this.get())) {\n                this._setLangId();\n            }\n        }));\n        this._disposables.add(_modelService.onModelLanguageChanged(e => {\n            if (isEqual(e.model.uri, this.get())) {\n                this._setLangId();\n            }\n        }));\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    _setLangId() {\n        const value = this.get();\n        if (!value) {\n            this._langIdKey.set(null);\n            return;\n        }\n        const langId = this._modelService.getModel(value)?.getLanguageId() ?? this._languageService.guessLanguageIdByFilepathOrFirstLine(value);\n        this._langIdKey.set(langId);\n    }\n    set(value) {\n        value = value ?? undefined;\n        if (isEqual(this._value, value)) {\n            return;\n        }\n        this._value = value;\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._resourceKey.set(value ? ( value.toString()) : null);\n            this._schemeKey.set(value ? value.scheme : null);\n            this._filenameKey.set(value ? basename(value) : null);\n            this._dirnameKey.set(value ? this.uriToPath(dirname(value)) : null);\n            this._pathKey.set(value ? this.uriToPath(value) : null);\n            this._setLangId();\n            this._extensionKey.set(value ? extname(value) : null);\n            this._hasResource.set(Boolean(value));\n            this._isFileSystemResource.set(value ? this._fileService.hasProvider(value) : false);\n        });\n    }\n    uriToPath(uri) {\n        if (uri.scheme === Schemas.file) {\n            return uri.fsPath;\n        }\n        return uri.path;\n    }\n    reset() {\n        this._value = undefined;\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._resourceKey.reset();\n            this._schemeKey.reset();\n            this._filenameKey.reset();\n            this._dirnameKey.reset();\n            this._pathKey.reset();\n            this._langIdKey.reset();\n            this._extensionKey.reset();\n            this._hasResource.reset();\n            this._isFileSystemResource.reset();\n        });\n    }\n    get() {\n        return this._value;\n    }\n};\nResourceContextKey = ResourceContextKey_1 = ( __decorate([\n    ( __param(0, IContextKeyService)),\n    ( __param(1, IFileService)),\n    ( __param(2, ILanguageService)),\n    ( __param(3, IModelService))\n], ResourceContextKey));\nfunction applyAvailableEditorIds(contextKey, editor, editorResolverService) {\n    if (!editor) {\n        contextKey.set('');\n        return;\n    }\n    const editorResource = editor.resource;\n    const editors = editorResource ? ( editorResolverService.getEditors(editorResource).map(editor => editor.id)) : [];\n    if (editorResource?.scheme === Schemas.untitled && editor.editorId !== DEFAULT_EDITOR_ASSOCIATION.id) {\n        contextKey.set('');\n    }\n    else {\n        contextKey.set(editors.join(','));\n    }\n}\nexport { ActiveAuxiliaryContext, ActiveEditorAvailableEditorIdsContext, ActiveEditorCanRevertContext, ActiveEditorCanSplitInGroupContext, ActiveEditorCanToggleReadonlyContext, ActiveEditorContext, ActiveEditorDirtyContext, ActiveEditorFirstInGroupContext, ActiveEditorGroupEmptyContext, ActiveEditorGroupIndexContext, ActiveEditorGroupLastContext, ActiveEditorGroupLockedContext, ActiveEditorLastInGroupContext, ActiveEditorPinnedContext, ActiveEditorReadonlyContext, ActiveEditorStickyContext, ActivePanelContext, ActiveViewletContext, AuxiliaryBarFocusContext, AuxiliaryBarVisibleContext, BannerFocused, DirtyWorkingCopiesContext, EditorAreaVisibleContext, EditorGroupEditorsCountContext, EditorTabsVisibleContext, EditorsVisibleContext, EmbedderIdentifierContext, EmptyWorkspaceSupportContext, EnterMultiRootWorkspaceSupportContext, FocusedViewContext, HasWebFileSystemAccess, InEditorZenModeContext, IsCenteredLayoutContext, IsFullscreenContext, MultipleEditorGroupsContext, NotificationFocusedContext, NotificationsCenterVisibleContext, NotificationsToastsVisibleContext, OpenFolderWorkspaceSupportContext, PanelAlignmentContext, PanelFocusContext, PanelMaximizedContext, PanelPositionContext, PanelVisibleContext, RemoteNameContext, ResourceContextKey, SideBarVisibleContext, SideBySideEditorActiveContext, SidebarFocusContext, SplitEditorsVertically, StatusBarFocused, TemporaryWorkspaceContext, TextCompareEditorActiveContext, TextCompareEditorVisibleContext, VirtualWorkspaceContext, WorkbenchStateContext, WorkspaceFolderCountContext, applyAvailableEditorIds, getEnabledViewContainerContextKey, getVisbileViewContextKey };\n"],
  "mappings": "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",
  "names": ["_a", "init_platform", "Extensions", "e", "ExtensionManagementErrorCode", "init_platform", "WorkbenchLanguageService", "configuration", "e", "_a", "init_platform", "_a", "EditorCloseContext", "SideBySideEditor", "EditorCloseMethod", "configuration", "CloseDirection", "EditorsOrder", "GroupDirection", "GroupOrientation", "GroupLocation", "GroupsArrangement", "MergeGroupMode", "GroupsOrder", "init_platform", "Extensions", "DynamicWorkbenchConfigurationWorkbenchContribution", "e", "init_actions", "init_platform", "name", "_a", "SnippetCompletionProvider", "_a", "snippetExt", "e", "_a", "SnippetsService", "file", "result", "extname", "basename", "_a", "e", "AccessibleView", "e", "_a", "AccessibleViewService", "AccessibleViewSymbolQuickPick", "n", "e", "t", "a", "_a", "e", "basename", "extname", "editor"]
}

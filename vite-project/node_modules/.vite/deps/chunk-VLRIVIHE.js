import {
  IThemeService,
  init_themeService
} from "./chunk-O3SOEW3V.js";
import {
  init_instantiation,
  init_types,
  isBoolean,
  isString,
  refineServiceDecorator
} from "./chunk-N5MAMNNV.js";

// node_modules/vscode/vscode/src/vs/workbench/services/themes/common/workbenchThemeService.js
init_instantiation();
init_themeService();
init_types();
var IWorkbenchThemeService = refineServiceDecorator(IThemeService);
var VS_LIGHT_THEME = "vs";
var VS_DARK_THEME = "vs-dark";
var VS_HC_THEME = "hc-black";
var VS_HC_LIGHT_THEME = "hc-light";
var THEME_SCOPE_OPEN_PAREN = "[";
var THEME_SCOPE_CLOSE_PAREN = "]";
var THEME_SCOPE_WILDCARD = "*";
var themeScopeRegex = /\[(.+?)\]/g;
var ThemeSettings;
(function(ThemeSettings2) {
  ThemeSettings2["COLOR_THEME"] = "workbench.colorTheme";
  ThemeSettings2["FILE_ICON_THEME"] = "workbench.iconTheme";
  ThemeSettings2["PRODUCT_ICON_THEME"] = "workbench.productIconTheme";
  ThemeSettings2["COLOR_CUSTOMIZATIONS"] = "workbench.colorCustomizations";
  ThemeSettings2["TOKEN_COLOR_CUSTOMIZATIONS"] = "editor.tokenColorCustomizations";
  ThemeSettings2["SEMANTIC_TOKEN_COLOR_CUSTOMIZATIONS"] = "editor.semanticTokenColorCustomizations";
  ThemeSettings2["PREFERRED_DARK_THEME"] = "workbench.preferredDarkColorTheme";
  ThemeSettings2["PREFERRED_LIGHT_THEME"] = "workbench.preferredLightColorTheme";
  ThemeSettings2["PREFERRED_HC_DARK_THEME"] = "workbench.preferredHighContrastColorTheme";
  ThemeSettings2["PREFERRED_HC_LIGHT_THEME"] = "workbench.preferredHighContrastLightColorTheme";
  ThemeSettings2["DETECT_COLOR_SCHEME"] = "window.autoDetectColorScheme";
  ThemeSettings2["DETECT_HC"] = "window.autoDetectHighContrast";
})(ThemeSettings || (ThemeSettings = {}));
var ThemeSettingDefaults;
(function(ThemeSettingDefaults2) {
  ThemeSettingDefaults2["COLOR_THEME_DARK"] = "Default Dark Modern";
  ThemeSettingDefaults2["COLOR_THEME_LIGHT"] = "Default Light Modern";
  ThemeSettingDefaults2["COLOR_THEME_HC_DARK"] = "Default High Contrast";
  ThemeSettingDefaults2["COLOR_THEME_HC_LIGHT"] = "Default High Contrast Light";
  ThemeSettingDefaults2["COLOR_THEME_DARK_OLD"] = "Default Dark+";
  ThemeSettingDefaults2["COLOR_THEME_LIGHT_OLD"] = "Default Light+";
  ThemeSettingDefaults2["FILE_ICON_THEME"] = "vs-seti";
  ThemeSettingDefaults2["PRODUCT_ICON_THEME"] = "Default";
})(ThemeSettingDefaults || (ThemeSettingDefaults = {}));
var COLOR_THEME_DARK_INITIAL_COLORS = {
  "activityBar.background": "#181818",
  "statusBar.background": "#181818",
  "statusBar.noFolderBackground": "#1f1f1f"
};
var COLOR_THEME_LIGHT_INITIAL_COLORS = {
  "activityBar.background": "#f8f8f8",
  "statusBar.background": "#f8f8f8",
  "statusBar.noFolderBackground": "#f8f8f8"
};
var ExtensionData;
(function(ExtensionData2) {
  function toJSONObject(d) {
    return d && { _extensionId: d.extensionId, _extensionIsBuiltin: d.extensionIsBuiltin, _extensionName: d.extensionName, _extensionPublisher: d.extensionPublisher };
  }
  ExtensionData2.toJSONObject = toJSONObject;
  function fromJSONObject(o) {
    if (o && isString(o._extensionId) && isBoolean(o._extensionIsBuiltin) && isString(o._extensionName) && isString(o._extensionPublisher)) {
      return { extensionId: o._extensionId, extensionIsBuiltin: o._extensionIsBuiltin, extensionName: o._extensionName, extensionPublisher: o._extensionPublisher };
    }
    return void 0;
  }
  ExtensionData2.fromJSONObject = fromJSONObject;
  function fromName(publisher, name, isBuiltin = false) {
    return { extensionPublisher: publisher, extensionId: `${publisher}.${name}`, extensionName: name, extensionIsBuiltin: isBuiltin };
  }
  ExtensionData2.fromName = fromName;
})(ExtensionData || (ExtensionData = {}));

export {
  IWorkbenchThemeService,
  VS_LIGHT_THEME,
  VS_DARK_THEME,
  VS_HC_THEME,
  VS_HC_LIGHT_THEME,
  THEME_SCOPE_OPEN_PAREN,
  THEME_SCOPE_CLOSE_PAREN,
  THEME_SCOPE_WILDCARD,
  themeScopeRegex,
  ThemeSettings,
  ThemeSettingDefaults,
  COLOR_THEME_DARK_INITIAL_COLORS,
  COLOR_THEME_LIGHT_INITIAL_COLORS,
  ExtensionData
};
//# sourceMappingURL=chunk-VLRIVIHE.js.map

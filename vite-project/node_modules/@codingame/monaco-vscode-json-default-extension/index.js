import { registerExtension } from 'vscode/extensions';

var manifest = {name:"json",displayName:"JSON Language Basics",description:"Provides syntax highlighting & bracket matching in JSON files.",version:"1.0.0",publisher:"vscode",license:"MIT",engines:{vscode:"0.10.x"},scripts:{"update-grammar":"node ./build/update-grammars.js"},contributes:{languages:[{id:"json",aliases:["JSON","json"],extensions:[".json",".bowerrc",".jscsrc",".webmanifest",".js.map",".css.map",".ts.map",".har",".jslintrc",".jsonld",".geojson",".ipynb",".vuerc"],filenames:["composer.lock",".watchmanconfig"],mimetypes:["application/json","application/manifest+json"],configuration:"./language-configuration.json"},{id:"jsonc",aliases:["JSON with Comments"],extensions:[".jsonc",".eslintrc",".eslintrc.json",".jsfmtrc",".jshintrc",".swcrc",".hintrc",".babelrc"],filenames:["babel.config.json",".babelrc.json",".ember-cli","typedoc.json"],configuration:"./language-configuration.json"},{id:"jsonl",aliases:["JSON Lines"],extensions:[".jsonl"],filenames:[],configuration:"./language-configuration.json"},{id:"snippets",aliases:["Code Snippets"],extensions:[".code-snippets"],filenamePatterns:["**/User/snippets/*.json","**/User/profiles/*/snippets/*.json"],configuration:"./language-configuration.json"}],grammars:[{language:"json",scopeName:"source.json",path:"./syntaxes/JSON.tmLanguage.json"},{language:"jsonc",scopeName:"source.json.comments",path:"./syntaxes/JSONC.tmLanguage.json"},{language:"jsonl",scopeName:"source.json.lines",path:"./syntaxes/JSONL.tmLanguage.json"},{language:"snippets",scopeName:"source.json.comments.snippets",path:"./syntaxes/snippets.tmLanguage.json"}]},repository:{type:"git",url:"https://github.com/microsoft/vscode.git"},main:undefined};

const { registerFileUrl, whenReady } = registerExtension(manifest);
registerFileUrl('./syntaxes/JSON.tmLanguage.json', new URL('./JSON.tmLanguage.json', import.meta.url).toString(), 'application/json');
registerFileUrl('./syntaxes/JSONC.tmLanguage.json', new URL('./JSONC.tmLanguage.json', import.meta.url).toString(), 'application/json');
registerFileUrl('./syntaxes/JSONL.tmLanguage.json', new URL('./JSONL.tmLanguage.json', import.meta.url).toString(), 'application/json');
registerFileUrl('./syntaxes/snippets.tmLanguage.json', new URL('./snippets.tmLanguage.json', import.meta.url).toString(), 'application/json');
registerFileUrl('./language-configuration.json', new URL('./language-configuration.json', import.meta.url).toString(), 'application/json');

export { whenReady };

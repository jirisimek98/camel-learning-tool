import { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';
import { URI } from 'monaco-editor/esm/vs/base/common/uri.js';
import { localize } from 'monaco-editor/esm/vs/nls.js';
import { EditorInput } from '../../../common/editor/editorInput.js';
class WorkspaceTrustEditorInput extends EditorInput {
    constructor() {
        super(...arguments);
        this.resource = ( URI.from({
            scheme: Schemas.vscodeWorkspaceTrust,
            path: `workspaceTrustEditor`
        }));
    }
    static { this.ID = 'workbench.input.workspaceTrust'; }
    get capabilities() {
        return 2  | 8 ;
    }
    get typeId() {
        return WorkspaceTrustEditorInput.ID;
    }
    matches(otherInput) {
        return super.matches(otherInput) || otherInput instanceof WorkspaceTrustEditorInput;
    }
    getName() {
        return ( localize('workspaceTrustEditorInputName', "Workspace Trust"));
    }
}
export { WorkspaceTrustEditorInput };

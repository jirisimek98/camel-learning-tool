{"ast":null,"code":"var _jsxFileName = \"/home/jsimek/MUNI/diplomka/camel-frontend/src/components/ServicesDropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Dropdown from 'react-dropdown';\nimport Switch from 'react-switch';\nimport 'react-dropdown/style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, Nav, Container, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServicesDropdown = () => {\n  _s();\n  const [selectedService, setSelectedService] = useState(null);\n  const [isServiceOn, setServiceOn] = useState(false);\n  const options = ['Kafka', 'PostgreSQL'];\n  const handleSwitchChange = checked => {\n    setServiceOn(checked);\n    if (checked) {\n      deployService(selectedService);\n    } else {\n      undeployService(selectedService);\n    }\n  };\n  const deployService = service => {};\n  const undeployService = service => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"services-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n      options: options,\n      onChange: option => setSelectedService(option.value),\n      value: selectedService,\n      placeholder: \"Select a service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), selectedService && /*#__PURE__*/_jsxDEV(Switch, {\n      onChange: handleSwitchChange,\n      checked: isServiceOn,\n      onColor: \"#86d3ff\",\n      onHandleColor: \"#2693e6\",\n      handleDiameter: 30,\n      uncheckedIcon: false,\n      checkedIcon: false,\n      boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n      activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n      height: 20,\n      width: 48,\n      className: \"react-switch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ServicesDropdown, \"LI9xEm+ZbI9ihhTveQWneV8bS/0=\");\n_c = ServicesDropdown;\nexport default ServicesDropdown;\nvar _c;\n$RefreshReg$(_c, \"ServicesDropdown\");","map":{"version":3,"names":["React","useState","Dropdown","Switch","Navbar","Nav","Container","Row","Col","jsxDEV","_jsxDEV","ServicesDropdown","_s","selectedService","setSelectedService","isServiceOn","setServiceOn","options","handleSwitchChange","checked","deployService","undeployService","service","className","children","onChange","option","value","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","height","width","_c","$RefreshReg$"],"sources":["/home/jsimek/MUNI/diplomka/camel-frontend/src/components/ServicesDropdown.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Dropdown from 'react-dropdown';\nimport Switch from 'react-switch';\nimport 'react-dropdown/style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, Nav, Container, Row, Col } from 'react-bootstrap';\n\nconst ServicesDropdown = () => {\n  const [selectedService, setSelectedService] = useState(null);\n  const [isServiceOn, setServiceOn] = useState(false);\n  const options = ['Kafka', 'PostgreSQL'];\n\n  const handleSwitchChange = (checked) => {\n    setServiceOn(checked);\n    if (checked) {\n      deployService(selectedService);\n    } else {\n      undeployService(selectedService);\n    }\n  };\n\n  const deployService = (service) => {\n\n  };\n\n  const undeployService = (service) => {\n\n  };\n\n  return (\n    <div className=\"services-dropdown\">\n      <Dropdown\n        options={options}\n        onChange={(option) => setSelectedService(option.value)}\n        value={selectedService}\n        placeholder=\"Select a service\"\n      />\n      {selectedService && (\n        <Switch\n          onChange={handleSwitchChange}\n          checked={isServiceOn}\n          onColor=\"#86d3ff\"\n          onHandleColor=\"#2693e6\"\n          handleDiameter={30}\n          uncheckedIcon={false}\n          checkedIcon={false}\n          boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n          activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n          height={20}\n          width={48}\n          className=\"react-switch\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ServicesDropdown;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAO,0BAA0B;AACjC,OAAO,sCAAsC;AAC7C,SAASC,MAAM,EAAEC,GAAG,EAAEC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACc,WAAW,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMgB,OAAO,GAAG,CAAC,OAAO,EAAE,YAAY,CAAC;EAEvC,MAAMC,kBAAkB,GAAIC,OAAO,IAAK;IACtCH,YAAY,CAACG,OAAO,CAAC;IACrB,IAAIA,OAAO,EAAE;MACXC,aAAa,CAACP,eAAe,CAAC;IAChC,CAAC,MAAM;MACLQ,eAAe,CAACR,eAAe,CAAC;IAClC;EACF,CAAC;EAED,MAAMO,aAAa,GAAIE,OAAO,IAAK,CAEnC,CAAC;EAED,MAAMD,eAAe,GAAIC,OAAO,IAAK,CAErC,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCd,OAAA,CAACR,QAAQ;MACPe,OAAO,EAAEA,OAAQ;MACjBQ,QAAQ,EAAGC,MAAM,IAAKZ,kBAAkB,CAACY,MAAM,CAACC,KAAK,CAAE;MACvDA,KAAK,EAAEd,eAAgB;MACvBe,WAAW,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,EACDnB,eAAe,iBACdH,OAAA,CAACP,MAAM;MACLsB,QAAQ,EAAEP,kBAAmB;MAC7BC,OAAO,EAAEJ,WAAY;MACrBkB,OAAO,EAAC,SAAS;MACjBC,aAAa,EAAC,SAAS;MACvBC,cAAc,EAAE,EAAG;MACnBC,aAAa,EAAE,KAAM;MACrBC,WAAW,EAAE,KAAM;MACnBC,SAAS,EAAC,gCAAgC;MAC1CC,eAAe,EAAC,qCAAqC;MACrDC,MAAM,EAAE,EAAG;MACXC,KAAK,EAAE,EAAG;MACVlB,SAAS,EAAC;IAAc;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpB,EAAA,CAhDID,gBAAgB;AAAA+B,EAAA,GAAhB/B,gBAAgB;AAkDtB,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
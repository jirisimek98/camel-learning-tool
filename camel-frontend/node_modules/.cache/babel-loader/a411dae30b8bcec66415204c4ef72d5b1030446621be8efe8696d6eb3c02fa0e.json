{"ast":null,"code":"var _jsxFileName = \"/home/jsimek/MUNI/diplomka/camel-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AceEditor from 'react-ace';\nimport ReconnectingWebSocket from 'reconnecting-websocket';\nimport Editor, { DiffEditor, useMonaco, loader } from '@monaco-editor/react';\nimport MenuBar from './components/MenuBar';\nimport 'ace-builds/src-noconflict/mode-java';\nimport 'ace-builds/src-noconflict/theme-github';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [javaCode, setJavaCode] = useState('');\n  const [logs, setLogs] = useState('');\n  const sendJavaCode = async () => {\n    try {\n      let response = await fetch('http://localhost:8080/routes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain'\n        },\n        body: javaCode\n      });\n      let data = await response.text();\n      console.log(data);\n    } catch (error) {\n      console.error(\"Error sending code:\", error);\n    }\n  };\n  useEffect(() => {\n    const options = {\n      connectionTimeout: 4000,\n      maxRetries: 10\n    };\n    const ws = new ReconnectingWebSocket('ws://localhost:8080/ws/logs', [], options);\n    ws.addEventListener('message', event => {\n      setLogs(prevLogs => prevLogs + event.data);\n    });\n    return () => ws.close();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      height: \"90vh\",\n      defaultLanguage: \"java\",\n      defaultValue: \"import org.apache.camel.builder.RouteBuilder; public class RouteBuilderImpl extends RouteBuilder { @Override public void configure() throws Exception { //Write your route here } }\",\n      value: javaCode,\n      onChange: value => setJavaCode(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendJavaCode,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Live Logs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: logs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sKrIShtMRgadeg13r54jbqBnENo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AceEditor","ReconnectingWebSocket","Editor","DiffEditor","useMonaco","loader","MenuBar","jsxDEV","_jsxDEV","App","_s","javaCode","setJavaCode","logs","setLogs","sendJavaCode","response","fetch","method","headers","body","data","text","console","log","error","options","connectionTimeout","maxRetries","ws","addEventListener","event","prevLogs","close","className","children","fileName","_jsxFileName","lineNumber","columnNumber","height","defaultLanguage","defaultValue","value","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/jsimek/MUNI/diplomka/camel-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AceEditor from 'react-ace';\nimport ReconnectingWebSocket from 'reconnecting-websocket';\nimport Editor, { DiffEditor, useMonaco, loader } from '@monaco-editor/react';\nimport MenuBar from './components/MenuBar';\n\nimport 'ace-builds/src-noconflict/mode-java';\nimport 'ace-builds/src-noconflict/theme-github';\n\nfunction App() {\n  const [javaCode, setJavaCode] = useState('');\n  const [logs, setLogs] = useState('');\n\n  const sendJavaCode = async () => {\n    try {\n      let response = await fetch('http://localhost:8080/routes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain',\n        },\n        body: javaCode,\n      });\n\n      let data = await response.text();\n      console.log(data);\n    } catch (error) {\n      console.error(\"Error sending code:\", error);\n    }\n  };\n\n  useEffect(() => {\n    const options = {\n      connectionTimeout: 4000,\n      maxRetries: 10,\n    };\n\n    const ws = new ReconnectingWebSocket('ws://localhost:8080/ws/logs', [], options);\n\n    ws.addEventListener('message', (event) => {\n      setLogs(prevLogs => prevLogs + event.data);\n    });\n\n    return () => ws.close();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <MenuBar />\n      <Editor\n          height=\"90vh\"\n          defaultLanguage=\"java\"\n          defaultValue=\"import org.apache.camel.builder.RouteBuilder;\n\n                        public class RouteBuilderImpl extends RouteBuilder {\n\n                            @Override\n                            public void configure() throws Exception {\n\n                                //Write your route here\n\n                            }\n                        }\"\n          value={javaCode}\n          onChange={(value) => setJavaCode(value)}\n      />\n      <button onClick={sendJavaCode}>Submit</button>\n      <div>\n          <h2>Live Logs:</h2>\n          <p>{logs}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
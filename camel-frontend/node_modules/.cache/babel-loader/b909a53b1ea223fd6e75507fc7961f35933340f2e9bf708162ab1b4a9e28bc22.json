{"ast":null,"code":"var _jsxFileName = \"/home/jsimek/MUNI/diplomka/camel-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AceEditor from 'react-ace';\nimport ReconnectingWebSocket from 'reconnecting-websocket';\nimport 'ace-builds/src-noconflict/mode-java';\nimport 'ace-builds/src-noconflict/theme-github';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [javaCode, setJavaCode] = useState('');\n  const [logs, setLogs] = useState(\"\");\n  const sendJavaCode = async () => {\n    try {\n      let response = await fetch('http://localhost:8080/routes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain'\n        },\n        body: javaCode\n      });\n      let data = await response.text();\n      console.log(data);\n    } catch (error) {\n      console.error(\"Error sending code:\", error);\n    }\n  };\n  useEffect(() => {\n    const options = {\n      connectionTimeout: 4000,\n      // Set the connection timeout (ms)\n      maxRetries: 10 // Set the maximum number of connection retries\n    };\n\n    const ws = new ReconnectingWebSocket('ws://localhost:8080/ws/logs', [], options);\n    ws.addEventListener('message', event => {\n      setLogs(prevLogs => prevLogs + event.data);\n    });\n\n    // Clean up the connection when the component unmounts\n    return () => ws.close();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AceEditor, {\n      mode: \"java\",\n      theme: \"github\",\n      value: javaCode,\n      onChange: value => setJavaCode(value),\n      name: \"UNIQUE_ID_OF_DIV\",\n      editorProps: {\n        $blockScrolling: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendJavaCode,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Live Logs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: logs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oAyM+qofkQFS/H9qLyJTYfu6tng=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AceEditor","ReconnectingWebSocket","jsxDEV","_jsxDEV","App","_s","javaCode","setJavaCode","logs","setLogs","sendJavaCode","response","fetch","method","headers","body","data","text","console","log","error","options","connectionTimeout","maxRetries","ws","addEventListener","event","prevLogs","close","className","children","mode","theme","value","onChange","name","editorProps","$blockScrolling","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/jsimek/MUNI/diplomka/camel-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AceEditor from 'react-ace';\nimport ReconnectingWebSocket from 'reconnecting-websocket';\n\nimport 'ace-builds/src-noconflict/mode-java';\nimport 'ace-builds/src-noconflict/theme-github';\n\nfunction App() {\n  const [javaCode, setJavaCode] = useState('');\n  const [logs, setLogs] = useState(\"\");\n\n  const sendJavaCode = async () => {\n    try {\n      let response = await fetch('http://localhost:8080/routes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain',\n        },\n        body: javaCode,\n      });\n\n      let data = await response.text();\n      console.log(data);\n    } catch (error) {\n      console.error(\"Error sending code:\", error);\n    }\n  };\n\n  useEffect(() => {\n    const options = {\n      connectionTimeout: 4000, // Set the connection timeout (ms)\n      maxRetries: 10,          // Set the maximum number of connection retries\n    };\n\n    const ws = new ReconnectingWebSocket('ws://localhost:8080/ws/logs', [], options);\n\n    ws.addEventListener('message', (event) => {\n      setLogs(prevLogs => prevLogs + event.data);\n    });\n\n    // Clean up the connection when the component unmounts\n    return () => ws.close();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <AceEditor\n        mode=\"java\"\n        theme=\"github\"\n        value={javaCode}\n        onChange={(value) => setJavaCode(value)}\n        name=\"UNIQUE_ID_OF_DIV\"\n        editorProps={{ $blockScrolling: true }}\n      />\n      <button onClick={sendJavaCode}>Submit</button>\n      <div>\n          <h2>Live Logs:</h2>\n          <pre>{logs}</pre>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
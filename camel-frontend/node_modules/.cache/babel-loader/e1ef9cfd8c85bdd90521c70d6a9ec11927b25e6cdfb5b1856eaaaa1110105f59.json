{"ast":null,"code":"var _jsxFileName = \"/home/jsimek/MUNI/diplomka/camel-learning-tool/camel-frontend/src/components/ServicesPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServicesPanel = () => {\n  _s();\n  const [serviceStates, setServiceStates] = useState({\n    kafka: false,\n    postgre: false\n  });\n  const handleToggle = service => {\n    setServiceStates({\n      ...serviceStates,\n      [service]: !serviceStates[service]\n    });\n  };\n  const handleDeploy = async () => {\n    const requestData = {\n      ...serviceStates\n    };\n    const response = await fetch('/api/deploy', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(requestData)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: Object.keys(serviceStates).map(service => /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"switch\",\n          id: service,\n          label: service,\n          checked: serviceStates[service],\n          onChange: () => handleToggle(service)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, service, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeploy,\n          children: \"Deploy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ServicesPanel, \"Tn+IYgPcwDYVfSZCSogbYnrWjoo=\");\n_c = ServicesPanel;\nexport default ServicesPanel;\nvar _c;\n$RefreshReg$(_c, \"ServicesPanel\");","map":{"version":3,"names":["React","useState","Container","Row","Col","Form","Button","jsxDEV","_jsxDEV","ServicesPanel","_s","serviceStates","setServiceStates","kafka","postgre","handleToggle","service","handleDeploy","requestData","response","fetch","method","headers","body","JSON","stringify","children","Object","keys","map","Check","type","id","label","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/jsimek/MUNI/diplomka/camel-learning-tool/camel-frontend/src/components/ServicesPanel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\n\nconst ServicesPanel = () => {\n\n  const [serviceStates, setServiceStates] = useState({\n    kafka: false,\n    postgre: false,\n  });\n\n  const handleToggle = (service) => {\n    setServiceStates({\n      ...serviceStates,\n      [service]: !serviceStates[service],\n    });\n  };\n\n\n  const handleDeploy = async () => {\n    const requestData = { ...serviceStates };\n\n    const response = await fetch('/api/deploy', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(requestData),\n    });\n\n  };\n\n  return (\n    <Container>\n      <Row>\n        {Object.keys(serviceStates).map(service => (\n          <Row key={service}>\n            <Form.Check \n              type=\"switch\"\n              id={service}\n              label={service}\n              checked={serviceStates[service]}\n              onChange={() => handleToggle(service)}\n            />\n          </Row>\n        ))}\n      </Row>\n      <Row>\n        <Col>\n          <Button onClick={handleDeploy}>Deploy</Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ServicesPanel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC;IACjDY,KAAK,EAAE,KAAK;IACZC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,OAAO,IAAK;IAChCJ,gBAAgB,CAAC;MACf,GAAGD,aAAa;MAChB,CAACK,OAAO,GAAG,CAACL,aAAa,CAACK,OAAO;IACnC,CAAC,CAAC;EACJ,CAAC;EAGD,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,WAAW,GAAG;MAAE,GAAGP;IAAc,CAAC;IAExC,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;MAC1CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;IAClC,CAAC,CAAC;EAEJ,CAAC;EAED,oBACEV,OAAA,CAACN,SAAS;IAAAwB,QAAA,gBACRlB,OAAA,CAACL,GAAG;MAAAuB,QAAA,EACDC,MAAM,CAACC,IAAI,CAACjB,aAAa,CAAC,CAACkB,GAAG,CAACb,OAAO,iBACrCR,OAAA,CAACL,GAAG;QAAAuB,QAAA,eACFlB,OAAA,CAACH,IAAI,CAACyB,KAAK;UACTC,IAAI,EAAC,QAAQ;UACbC,EAAE,EAAEhB,OAAQ;UACZiB,KAAK,EAAEjB,OAAQ;UACfkB,OAAO,EAAEvB,aAAa,CAACK,OAAO,CAAE;UAChCmB,QAAQ,EAAEA,CAAA,KAAMpB,YAAY,CAACC,OAAO;QAAE;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC;MAAC,GAPMvB,OAAO;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN/B,OAAA,CAACL,GAAG;MAAAuB,QAAA,eACFlB,OAAA,CAACJ,GAAG;QAAAsB,QAAA,eACFlB,OAAA,CAACF,MAAM;UAACkC,OAAO,EAAEvB,YAAa;UAAAS,QAAA,EAAC;QAAM;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAAC7B,EAAA,CAhDID,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AAkDnB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}